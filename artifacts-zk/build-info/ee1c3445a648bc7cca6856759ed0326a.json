{"id":"ee1c3445a648bc7cca6856759ed0326a","_format":"hh-sol-build-info-1","solcVersion":"0.8.17","solcLongVersion":"0.8.17+commit.8df45f5f","input":{"language":"Solidity","sources":{"@account-abstraction/contracts/core/Helpers.sol":{"content":"// SPDX-License-Identifier: GPL-3.0\npragma solidity ^0.8.12;\n\n/* solhint-disable no-inline-assembly */\n\n/**\n * returned data from validateUserOp.\n * validateUserOp returns a uint256, with is created by `_packedValidationData` and parsed by `_parseValidationData`\n * @param aggregator - address(0) - the account validated the signature by itself.\n *              address(1) - the account failed to validate the signature.\n *              otherwise - this is an address of a signature aggregator that must be used to validate the signature.\n * @param validAfter - this UserOp is valid only after this timestamp.\n * @param validaUntil - this UserOp is valid only up to this timestamp.\n */\n    struct ValidationData {\n        address aggregator;\n        uint48 validAfter;\n        uint48 validUntil;\n    }\n\n//extract sigFailed, validAfter, validUntil.\n// also convert zero validUntil to type(uint48).max\n    function _parseValidationData(uint validationData) pure returns (ValidationData memory data) {\n        address aggregator = address(uint160(validationData));\n        uint48 validUntil = uint48(validationData >> 160);\n        if (validUntil == 0) {\n            validUntil = type(uint48).max;\n        }\n        uint48 validAfter = uint48(validationData >> (48 + 160));\n        return ValidationData(aggregator, validAfter, validUntil);\n    }\n\n// intersect account and paymaster ranges.\n    function _intersectTimeRange(uint256 validationData, uint256 paymasterValidationData) pure returns (ValidationData memory) {\n        ValidationData memory accountValidationData = _parseValidationData(validationData);\n        ValidationData memory pmValidationData = _parseValidationData(paymasterValidationData);\n        address aggregator = accountValidationData.aggregator;\n        if (aggregator == address(0)) {\n            aggregator = pmValidationData.aggregator;\n        }\n        uint48 validAfter = accountValidationData.validAfter;\n        uint48 validUntil = accountValidationData.validUntil;\n        uint48 pmValidAfter = pmValidationData.validAfter;\n        uint48 pmValidUntil = pmValidationData.validUntil;\n\n        if (validAfter < pmValidAfter) validAfter = pmValidAfter;\n        if (validUntil > pmValidUntil) validUntil = pmValidUntil;\n        return ValidationData(aggregator, validAfter, validUntil);\n    }\n\n/**\n * helper to pack the return value for validateUserOp\n * @param data - the ValidationData to pack\n */\n    function _packValidationData(ValidationData memory data) pure returns (uint256) {\n        return uint160(data.aggregator) | (uint256(data.validUntil) << 160) | (uint256(data.validAfter) << (160 + 48));\n    }\n\n/**\n * helper to pack the return value for validateUserOp, when not using an aggregator\n * @param sigFailed - true for signature failure, false for success\n * @param validUntil last timestamp this UserOperation is valid (or zero for infinite)\n * @param validAfter first timestamp this UserOperation is valid\n */\n    function _packValidationData(bool sigFailed, uint48 validUntil, uint48 validAfter) pure returns (uint256) {\n        return (sigFailed ? 1 : 0) | (uint256(validUntil) << 160) | (uint256(validAfter) << (160 + 48));\n    }\n\n/**\n * keccak function over calldata.\n * @dev copy calldata into memory, do keccak and drop allocated memory. Strangely, this is more efficient than letting solidity do it.\n */\n    function calldataKeccak(bytes calldata data) pure returns (bytes32 ret) {\n        assembly {\n            let mem := mload(0x40)\n            let len := data.length\n            calldatacopy(mem, data.offset, len)\n            ret := keccak256(mem, len)\n        }\n    }\n\n"},"@account-abstraction/contracts/interfaces/IAccount.sol":{"content":"// SPDX-License-Identifier: GPL-3.0\npragma solidity ^0.8.12;\n\nimport \"./UserOperation.sol\";\n\ninterface IAccount {\n\n    /**\n     * Validate user's signature and nonce\n     * the entryPoint will make the call to the recipient only if this validation call returns successfully.\n     * signature failure should be reported by returning SIG_VALIDATION_FAILED (1).\n     * This allows making a \"simulation call\" without a valid signature\n     * Other failures (e.g. nonce mismatch, or invalid signature format) should still revert to signal failure.\n     *\n     * @dev Must validate caller is the entryPoint.\n     *      Must validate the signature and nonce\n     * @param userOp the operation that is about to be executed.\n     * @param userOpHash hash of the user's request data. can be used as the basis for signature.\n     * @param missingAccountFunds missing funds on the account's deposit in the entrypoint.\n     *      This is the minimum amount to transfer to the sender(entryPoint) to be able to make the call.\n     *      The excess is left as a deposit in the entrypoint, for future calls.\n     *      can be withdrawn anytime using \"entryPoint.withdrawTo()\"\n     *      In case there is a paymaster in the request (or the current deposit is high enough), this value will be zero.\n     * @return validationData packaged ValidationData structure. use `_packValidationData` and `_unpackValidationData` to encode and decode\n     *      <20-byte> sigAuthorizer - 0 for valid signature, 1 to mark signature failure,\n     *         otherwise, an address of an \"authorizer\" contract.\n     *      <6-byte> validUntil - last timestamp this operation is valid. 0 for \"indefinite\"\n     *      <6-byte> validAfter - first timestamp this operation is valid\n     *      If an account doesn't use time-range, it is enough to return SIG_VALIDATION_FAILED value (1) for signature failure.\n     *      Note that the validation code cannot use block.timestamp (or block.number) directly.\n     */\n    function validateUserOp(UserOperation calldata userOp, bytes32 userOpHash, uint256 missingAccountFunds)\n    external returns (uint256 validationData);\n}\n"},"@account-abstraction/contracts/interfaces/IAggregator.sol":{"content":"// SPDX-License-Identifier: GPL-3.0\npragma solidity ^0.8.12;\n\nimport \"./UserOperation.sol\";\n\n/**\n * Aggregated Signatures validator.\n */\ninterface IAggregator {\n\n    /**\n     * validate aggregated signature.\n     * revert if the aggregated signature does not match the given list of operations.\n     */\n    function validateSignatures(UserOperation[] calldata userOps, bytes calldata signature) external view;\n\n    /**\n     * validate signature of a single userOp\n     * This method is should be called by bundler after EntryPoint.simulateValidation() returns (reverts) with ValidationResultWithAggregation\n     * First it validates the signature over the userOp. Then it returns data to be used when creating the handleOps.\n     * @param userOp the userOperation received from the user.\n     * @return sigForUserOp the value to put into the signature field of the userOp when calling handleOps.\n     *    (usually empty, unless account and aggregator support some kind of \"multisig\"\n     */\n    function validateUserOpSignature(UserOperation calldata userOp)\n    external view returns (bytes memory sigForUserOp);\n\n    /**\n     * aggregate multiple signatures into a single value.\n     * This method is called off-chain to calculate the signature to pass with handleOps()\n     * bundler MAY use optimized custom code perform this aggregation\n     * @param userOps array of UserOperations to collect the signatures from.\n     * @return aggregatedSignature the aggregated signature\n     */\n    function aggregateSignatures(UserOperation[] calldata userOps) external view returns (bytes memory aggregatedSignature);\n}\n"},"@account-abstraction/contracts/interfaces/IEntryPoint.sol":{"content":"/**\n ** Account-Abstraction (EIP-4337) singleton EntryPoint implementation.\n ** Only one instance required on each chain.\n **/\n// SPDX-License-Identifier: GPL-3.0\npragma solidity ^0.8.12;\n\n/* solhint-disable avoid-low-level-calls */\n/* solhint-disable no-inline-assembly */\n/* solhint-disable reason-string */\n\nimport \"./UserOperation.sol\";\nimport \"./IStakeManager.sol\";\nimport \"./IAggregator.sol\";\nimport \"./INonceManager.sol\";\n\ninterface IEntryPoint is IStakeManager, INonceManager {\n\n    /***\n     * An event emitted after each successful request\n     * @param userOpHash - unique identifier for the request (hash its entire content, except signature).\n     * @param sender - the account that generates this request.\n     * @param paymaster - if non-null, the paymaster that pays for this request.\n     * @param nonce - the nonce value from the request.\n     * @param success - true if the sender transaction succeeded, false if reverted.\n     * @param actualGasCost - actual amount paid (by account or paymaster) for this UserOperation.\n     * @param actualGasUsed - total gas used by this UserOperation (including preVerification, creation, validation and execution).\n     */\n    event UserOperationEvent(bytes32 indexed userOpHash, address indexed sender, address indexed paymaster, uint256 nonce, bool success, uint256 actualGasCost, uint256 actualGasUsed);\n\n    /**\n     * account \"sender\" was deployed.\n     * @param userOpHash the userOp that deployed this account. UserOperationEvent will follow.\n     * @param sender the account that is deployed\n     * @param factory the factory used to deploy this account (in the initCode)\n     * @param paymaster the paymaster used by this UserOp\n     */\n    event AccountDeployed(bytes32 indexed userOpHash, address indexed sender, address factory, address paymaster);\n\n    /**\n     * An event emitted if the UserOperation \"callData\" reverted with non-zero length\n     * @param userOpHash the request unique identifier.\n     * @param sender the sender of this request\n     * @param nonce the nonce used in the request\n     * @param revertReason - the return bytes from the (reverted) call to \"callData\".\n     */\n    event UserOperationRevertReason(bytes32 indexed userOpHash, address indexed sender, uint256 nonce, bytes revertReason);\n\n    /**\n     * an event emitted by handleOps(), before starting the execution loop.\n     * any event emitted before this event, is part of the validation.\n     */\n    event BeforeExecution();\n\n    /**\n     * signature aggregator used by the following UserOperationEvents within this bundle.\n     */\n    event SignatureAggregatorChanged(address indexed aggregator);\n\n    /**\n     * a custom revert error of handleOps, to identify the offending op.\n     *  NOTE: if simulateValidation passes successfully, there should be no reason for handleOps to fail on it.\n     *  @param opIndex - index into the array of ops to the failed one (in simulateValidation, this is always zero)\n     *  @param reason - revert reason\n     *      The string starts with a unique code \"AAmn\", where \"m\" is \"1\" for factory, \"2\" for account and \"3\" for paymaster issues,\n     *      so a failure can be attributed to the correct entity.\n     *   Should be caught in off-chain handleOps simulation and not happen on-chain.\n     *   Useful for mitigating DoS attempts against batchers or for troubleshooting of factory/account/paymaster reverts.\n     */\n    error FailedOp(uint256 opIndex, string reason);\n\n    /**\n     * error case when a signature aggregator fails to verify the aggregated signature it had created.\n     */\n    error SignatureValidationFailed(address aggregator);\n\n    /**\n     * Successful result from simulateValidation.\n     * @param returnInfo gas and time-range returned values\n     * @param senderInfo stake information about the sender\n     * @param factoryInfo stake information about the factory (if any)\n     * @param paymasterInfo stake information about the paymaster (if any)\n     */\n    error ValidationResult(ReturnInfo returnInfo,\n        StakeInfo senderInfo, StakeInfo factoryInfo, StakeInfo paymasterInfo);\n\n    /**\n     * Successful result from simulateValidation, if the account returns a signature aggregator\n     * @param returnInfo gas and time-range returned values\n     * @param senderInfo stake information about the sender\n     * @param factoryInfo stake information about the factory (if any)\n     * @param paymasterInfo stake information about the paymaster (if any)\n     * @param aggregatorInfo signature aggregation info (if the account requires signature aggregator)\n     *      bundler MUST use it to verify the signature, or reject the UserOperation\n     */\n    error ValidationResultWithAggregation(ReturnInfo returnInfo,\n        StakeInfo senderInfo, StakeInfo factoryInfo, StakeInfo paymasterInfo,\n        AggregatorStakeInfo aggregatorInfo);\n\n    /**\n     * return value of getSenderAddress\n     */\n    error SenderAddressResult(address sender);\n\n    /**\n     * return value of simulateHandleOp\n     */\n    error ExecutionResult(uint256 preOpGas, uint256 paid, uint48 validAfter, uint48 validUntil, bool targetSuccess, bytes targetResult);\n\n    //UserOps handled, per aggregator\n    struct UserOpsPerAggregator {\n        UserOperation[] userOps;\n\n        // aggregator address\n        IAggregator aggregator;\n        // aggregated signature\n        bytes signature;\n    }\n\n    /**\n     * Execute a batch of UserOperation.\n     * no signature aggregator is used.\n     * if any account requires an aggregator (that is, it returned an aggregator when\n     * performing simulateValidation), then handleAggregatedOps() must be used instead.\n     * @param ops the operations to execute\n     * @param beneficiary the address to receive the fees\n     */\n    function handleOps(UserOperation[] calldata ops, address payable beneficiary) external;\n\n    /**\n     * Execute a batch of UserOperation with Aggregators\n     * @param opsPerAggregator the operations to execute, grouped by aggregator (or address(0) for no-aggregator accounts)\n     * @param beneficiary the address to receive the fees\n     */\n    function handleAggregatedOps(\n        UserOpsPerAggregator[] calldata opsPerAggregator,\n        address payable beneficiary\n    ) external;\n\n    /**\n     * generate a request Id - unique identifier for this request.\n     * the request ID is a hash over the content of the userOp (except the signature), the entrypoint and the chainid.\n     */\n    function getUserOpHash(UserOperation calldata userOp) external view returns (bytes32);\n\n    /**\n     * Simulate a call to account.validateUserOp and paymaster.validatePaymasterUserOp.\n     * @dev this method always revert. Successful result is ValidationResult error. other errors are failures.\n     * @dev The node must also verify it doesn't use banned opcodes, and that it doesn't reference storage outside the account's data.\n     * @param userOp the user operation to validate.\n     */\n    function simulateValidation(UserOperation calldata userOp) external;\n\n    /**\n     * gas and return values during simulation\n     * @param preOpGas the gas used for validation (including preValidationGas)\n     * @param prefund the required prefund for this operation\n     * @param sigFailed validateUserOp's (or paymaster's) signature check failed\n     * @param validAfter - first timestamp this UserOp is valid (merging account and paymaster time-range)\n     * @param validUntil - last timestamp this UserOp is valid (merging account and paymaster time-range)\n     * @param paymasterContext returned by validatePaymasterUserOp (to be passed into postOp)\n     */\n    struct ReturnInfo {\n        uint256 preOpGas;\n        uint256 prefund;\n        bool sigFailed;\n        uint48 validAfter;\n        uint48 validUntil;\n        bytes paymasterContext;\n    }\n\n    /**\n     * returned aggregated signature info.\n     * the aggregator returned by the account, and its current stake.\n     */\n    struct AggregatorStakeInfo {\n        address aggregator;\n        StakeInfo stakeInfo;\n    }\n\n    /**\n     * Get counterfactual sender address.\n     *  Calculate the sender contract address that will be generated by the initCode and salt in the UserOperation.\n     * this method always revert, and returns the address in SenderAddressResult error\n     * @param initCode the constructor code to be passed into the UserOperation.\n     */\n    function getSenderAddress(bytes memory initCode) external;\n\n\n    /**\n     * simulate full execution of a UserOperation (including both validation and target execution)\n     * this method will always revert with \"ExecutionResult\".\n     * it performs full validation of the UserOperation, but ignores signature error.\n     * an optional target address is called after the userop succeeds, and its value is returned\n     * (before the entire call is reverted)\n     * Note that in order to collect the the success/failure of the target call, it must be executed\n     * with trace enabled to track the emitted events.\n     * @param op the UserOperation to simulate\n     * @param target if nonzero, a target address to call after userop simulation. If called, the targetSuccess and targetResult\n     *        are set to the return from that call.\n     * @param targetCallData callData to pass to target address\n     */\n    function simulateHandleOp(UserOperation calldata op, address target, bytes calldata targetCallData) external;\n}\n\n"},"@account-abstraction/contracts/interfaces/INonceManager.sol":{"content":"// SPDX-License-Identifier: GPL-3.0\npragma solidity ^0.8.12;\n\ninterface INonceManager {\n\n    /**\n     * Return the next nonce for this sender.\n     * Within a given key, the nonce values are sequenced (starting with zero, and incremented by one on each userop)\n     * But UserOp with different keys can come with arbitrary order.\n     *\n     * @param sender the account address\n     * @param key the high 192 bit of the nonce\n     * @return nonce a full nonce to pass for next UserOp with this sender.\n     */\n    function getNonce(address sender, uint192 key)\n    external view returns (uint256 nonce);\n\n    /**\n     * Manually increment the nonce of the sender.\n     * This method is exposed just for completeness..\n     * Account does NOT need to call it, neither during validation, nor elsewhere,\n     * as the EntryPoint will update the nonce regardless.\n     * Possible use-case is call it with various keys to \"initialize\" their nonces to one, so that future\n     * UserOperations will not pay extra for the first transaction with a given key.\n     */\n    function incrementNonce(uint192 key) external;\n}\n"},"@account-abstraction/contracts/interfaces/IStakeManager.sol":{"content":"// SPDX-License-Identifier: GPL-3.0-only\npragma solidity ^0.8.12;\n\n/**\n * manage deposits and stakes.\n * deposit is just a balance used to pay for UserOperations (either by a paymaster or an account)\n * stake is value locked for at least \"unstakeDelay\" by the staked entity.\n */\ninterface IStakeManager {\n\n    event Deposited(\n        address indexed account,\n        uint256 totalDeposit\n    );\n\n    event Withdrawn(\n        address indexed account,\n        address withdrawAddress,\n        uint256 amount\n    );\n\n    /// Emitted when stake or unstake delay are modified\n    event StakeLocked(\n        address indexed account,\n        uint256 totalStaked,\n        uint256 unstakeDelaySec\n    );\n\n    /// Emitted once a stake is scheduled for withdrawal\n    event StakeUnlocked(\n        address indexed account,\n        uint256 withdrawTime\n    );\n\n    event StakeWithdrawn(\n        address indexed account,\n        address withdrawAddress,\n        uint256 amount\n    );\n\n    /**\n     * @param deposit the entity's deposit\n     * @param staked true if this entity is staked.\n     * @param stake actual amount of ether staked for this entity.\n     * @param unstakeDelaySec minimum delay to withdraw the stake.\n     * @param withdrawTime - first block timestamp where 'withdrawStake' will be callable, or zero if already locked\n     * @dev sizes were chosen so that (deposit,staked, stake) fit into one cell (used during handleOps)\n     *    and the rest fit into a 2nd cell.\n     *    112 bit allows for 10^15 eth\n     *    48 bit for full timestamp\n     *    32 bit allows 150 years for unstake delay\n     */\n    struct DepositInfo {\n        uint112 deposit;\n        bool staked;\n        uint112 stake;\n        uint32 unstakeDelaySec;\n        uint48 withdrawTime;\n    }\n\n    //API struct used by getStakeInfo and simulateValidation\n    struct StakeInfo {\n        uint256 stake;\n        uint256 unstakeDelaySec;\n    }\n\n    /// @return info - full deposit information of given account\n    function getDepositInfo(address account) external view returns (DepositInfo memory info);\n\n    /// @return the deposit (for gas payment) of the account\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * add to the deposit of the given account\n     */\n    function depositTo(address account) external payable;\n\n    /**\n     * add to the account's stake - amount and delay\n     * any pending unstake is first cancelled.\n     * @param _unstakeDelaySec the new lock duration before the deposit can be withdrawn.\n     */\n    function addStake(uint32 _unstakeDelaySec) external payable;\n\n    /**\n     * attempt to unlock the stake.\n     * the value can be withdrawn (using withdrawStake) after the unstake delay.\n     */\n    function unlockStake() external;\n\n    /**\n     * withdraw from the (unlocked) stake.\n     * must first call unlockStake and wait for the unstakeDelay to pass\n     * @param withdrawAddress the address to send withdrawn value.\n     */\n    function withdrawStake(address payable withdrawAddress) external;\n\n    /**\n     * withdraw from the deposit.\n     * @param withdrawAddress the address to send withdrawn value.\n     * @param withdrawAmount the amount to withdraw.\n     */\n    function withdrawTo(address payable withdrawAddress, uint256 withdrawAmount) external;\n}\n"},"@account-abstraction/contracts/interfaces/UserOperation.sol":{"content":"// SPDX-License-Identifier: GPL-3.0\npragma solidity ^0.8.12;\n\n/* solhint-disable no-inline-assembly */\n\nimport {calldataKeccak} from \"../core/Helpers.sol\";\n\n/**\n * User Operation struct\n * @param sender the sender account of this request.\n     * @param nonce unique value the sender uses to verify it is not a replay.\n     * @param initCode if set, the account contract will be created by this constructor/\n     * @param callData the method call to execute on this account.\n     * @param callGasLimit the gas limit passed to the callData method call.\n     * @param verificationGasLimit gas used for validateUserOp and validatePaymasterUserOp.\n     * @param preVerificationGas gas not calculated by the handleOps method, but added to the gas paid. Covers batch overhead.\n     * @param maxFeePerGas same as EIP-1559 gas parameter.\n     * @param maxPriorityFeePerGas same as EIP-1559 gas parameter.\n     * @param paymasterAndData if set, this field holds the paymaster address and paymaster-specific data. the paymaster will pay for the transaction instead of the sender.\n     * @param signature sender-verified signature over the entire request, the EntryPoint address and the chain ID.\n     */\n    struct UserOperation {\n\n        address sender;\n        uint256 nonce;\n        bytes initCode;\n        bytes callData;\n        uint256 callGasLimit;\n        uint256 verificationGasLimit;\n        uint256 preVerificationGas;\n        uint256 maxFeePerGas;\n        uint256 maxPriorityFeePerGas;\n        bytes paymasterAndData;\n        bytes signature;\n    }\n\n/**\n * Utility functions helpful when working with UserOperation structs.\n */\nlibrary UserOperationLib {\n\n    function getSender(UserOperation calldata userOp) internal pure returns (address) {\n        address data;\n        //read sender from userOp, which is first userOp member (saves 800 gas...)\n        assembly {data := calldataload(userOp)}\n        return address(uint160(data));\n    }\n\n    //relayer/block builder might submit the TX with higher priorityFee, but the user should not\n    // pay above what he signed for.\n    function gasPrice(UserOperation calldata userOp) internal view returns (uint256) {\n    unchecked {\n        uint256 maxFeePerGas = userOp.maxFeePerGas;\n        uint256 maxPriorityFeePerGas = userOp.maxPriorityFeePerGas;\n        if (maxFeePerGas == maxPriorityFeePerGas) {\n            //legacy mode (for networks that don't support basefee opcode)\n            return maxFeePerGas;\n        }\n        return min(maxFeePerGas, maxPriorityFeePerGas + block.basefee);\n    }\n    }\n\n    function pack(UserOperation calldata userOp) internal pure returns (bytes memory ret) {\n        address sender = getSender(userOp);\n        uint256 nonce = userOp.nonce;\n        bytes32 hashInitCode = calldataKeccak(userOp.initCode);\n        bytes32 hashCallData = calldataKeccak(userOp.callData);\n        uint256 callGasLimit = userOp.callGasLimit;\n        uint256 verificationGasLimit = userOp.verificationGasLimit;\n        uint256 preVerificationGas = userOp.preVerificationGas;\n        uint256 maxFeePerGas = userOp.maxFeePerGas;\n        uint256 maxPriorityFeePerGas = userOp.maxPriorityFeePerGas;\n        bytes32 hashPaymasterAndData = calldataKeccak(userOp.paymasterAndData);\n\n        return abi.encode(\n            sender, nonce,\n            hashInitCode, hashCallData,\n            callGasLimit, verificationGasLimit, preVerificationGas,\n            maxFeePerGas, maxPriorityFeePerGas,\n            hashPaymasterAndData\n        );\n    }\n\n    function hash(UserOperation calldata userOp) internal pure returns (bytes32) {\n        return keccak256(pack(userOp));\n    }\n\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a < b ? a : b;\n    }\n}\n"},"@openzeppelin/contracts/utils/cryptography/ECDSA.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/cryptography/ECDSA.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../Strings.sol\";\n\n/**\n * @dev Elliptic Curve Digital Signature Algorithm (ECDSA) operations.\n *\n * These functions can be used to verify that a message was signed by the holder\n * of the private keys of a given address.\n */\nlibrary ECDSA {\n    enum RecoverError {\n        NoError,\n        InvalidSignature,\n        InvalidSignatureLength,\n        InvalidSignatureS,\n        InvalidSignatureV // Deprecated in v4.8\n    }\n\n    function _throwError(RecoverError error) private pure {\n        if (error == RecoverError.NoError) {\n            return; // no error: do nothing\n        } else if (error == RecoverError.InvalidSignature) {\n            revert(\"ECDSA: invalid signature\");\n        } else if (error == RecoverError.InvalidSignatureLength) {\n            revert(\"ECDSA: invalid signature length\");\n        } else if (error == RecoverError.InvalidSignatureS) {\n            revert(\"ECDSA: invalid signature 's' value\");\n        }\n    }\n\n    /**\n     * @dev Returns the address that signed a hashed message (`hash`) with\n     * `signature` or error string. This address can then be used for verification purposes.\n     *\n     * The `ecrecover` EVM opcode allows for malleable (non-unique) signatures:\n     * this function rejects them by requiring the `s` value to be in the lower\n     * half order, and the `v` value to be either 27 or 28.\n     *\n     * IMPORTANT: `hash` _must_ be the result of a hash operation for the\n     * verification to be secure: it is possible to craft signatures that\n     * recover to arbitrary addresses for non-hashed data. A safe way to ensure\n     * this is by receiving a hash of the original message (which may otherwise\n     * be too long), and then calling {toEthSignedMessageHash} on it.\n     *\n     * Documentation for signature generation:\n     * - with https://web3js.readthedocs.io/en/v1.3.4/web3-eth-accounts.html#sign[Web3.js]\n     * - with https://docs.ethers.io/v5/api/signer/#Signer-signMessage[ethers]\n     *\n     * _Available since v4.3._\n     */\n    function tryRecover(bytes32 hash, bytes memory signature) internal pure returns (address, RecoverError) {\n        if (signature.length == 65) {\n            bytes32 r;\n            bytes32 s;\n            uint8 v;\n            // ecrecover takes the signature parameters, and the only way to get them\n            // currently is to use assembly.\n            /// @solidity memory-safe-assembly\n            assembly {\n                r := mload(add(signature, 0x20))\n                s := mload(add(signature, 0x40))\n                v := byte(0, mload(add(signature, 0x60)))\n            }\n            return tryRecover(hash, v, r, s);\n        } else {\n            return (address(0), RecoverError.InvalidSignatureLength);\n        }\n    }\n\n    /**\n     * @dev Returns the address that signed a hashed message (`hash`) with\n     * `signature`. This address can then be used for verification purposes.\n     *\n     * The `ecrecover` EVM opcode allows for malleable (non-unique) signatures:\n     * this function rejects them by requiring the `s` value to be in the lower\n     * half order, and the `v` value to be either 27 or 28.\n     *\n     * IMPORTANT: `hash` _must_ be the result of a hash operation for the\n     * verification to be secure: it is possible to craft signatures that\n     * recover to arbitrary addresses for non-hashed data. A safe way to ensure\n     * this is by receiving a hash of the original message (which may otherwise\n     * be too long), and then calling {toEthSignedMessageHash} on it.\n     */\n    function recover(bytes32 hash, bytes memory signature) internal pure returns (address) {\n        (address recovered, RecoverError error) = tryRecover(hash, signature);\n        _throwError(error);\n        return recovered;\n    }\n\n    /**\n     * @dev Overload of {ECDSA-tryRecover} that receives the `r` and `vs` short-signature fields separately.\n     *\n     * See https://eips.ethereum.org/EIPS/eip-2098[EIP-2098 short signatures]\n     *\n     * _Available since v4.3._\n     */\n    function tryRecover(\n        bytes32 hash,\n        bytes32 r,\n        bytes32 vs\n    ) internal pure returns (address, RecoverError) {\n        bytes32 s = vs & bytes32(0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff);\n        uint8 v = uint8((uint256(vs) >> 255) + 27);\n        return tryRecover(hash, v, r, s);\n    }\n\n    /**\n     * @dev Overload of {ECDSA-recover} that receives the `r and `vs` short-signature fields separately.\n     *\n     * _Available since v4.2._\n     */\n    function recover(\n        bytes32 hash,\n        bytes32 r,\n        bytes32 vs\n    ) internal pure returns (address) {\n        (address recovered, RecoverError error) = tryRecover(hash, r, vs);\n        _throwError(error);\n        return recovered;\n    }\n\n    /**\n     * @dev Overload of {ECDSA-tryRecover} that receives the `v`,\n     * `r` and `s` signature fields separately.\n     *\n     * _Available since v4.3._\n     */\n    function tryRecover(\n        bytes32 hash,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) internal pure returns (address, RecoverError) {\n        // EIP-2 still allows signature malleability for ecrecover(). Remove this possibility and make the signature\n        // unique. Appendix F in the Ethereum Yellow paper (https://ethereum.github.io/yellowpaper/paper.pdf), defines\n        // the valid range for s in (301): 0 < s < secp256k1n ÷ 2 + 1, and for v in (302): v ∈ {27, 28}. Most\n        // signatures from current libraries generate a unique signature with an s-value in the lower half order.\n        //\n        // If your library generates malleable signatures, such as s-values in the upper range, calculate a new s-value\n        // with 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEBAAEDCE6AF48A03BBFD25E8CD0364141 - s1 and flip v from 27 to 28 or\n        // vice versa. If your library also generates signatures with 0/1 for v instead 27/28, add 27 to v to accept\n        // these malleable signatures as well.\n        if (uint256(s) > 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0) {\n            return (address(0), RecoverError.InvalidSignatureS);\n        }\n\n        // If the signature is valid (and not malleable), return the signer address\n        address signer = ecrecover(hash, v, r, s);\n        if (signer == address(0)) {\n            return (address(0), RecoverError.InvalidSignature);\n        }\n\n        return (signer, RecoverError.NoError);\n    }\n\n    /**\n     * @dev Overload of {ECDSA-recover} that receives the `v`,\n     * `r` and `s` signature fields separately.\n     */\n    function recover(\n        bytes32 hash,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) internal pure returns (address) {\n        (address recovered, RecoverError error) = tryRecover(hash, v, r, s);\n        _throwError(error);\n        return recovered;\n    }\n\n    /**\n     * @dev Returns an Ethereum Signed Message, created from a `hash`. This\n     * produces hash corresponding to the one signed with the\n     * https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`]\n     * JSON-RPC method as part of EIP-191.\n     *\n     * See {recover}.\n     */\n    function toEthSignedMessageHash(bytes32 hash) internal pure returns (bytes32) {\n        // 32 is the length in bytes of hash,\n        // enforced by the type signature above\n        return keccak256(abi.encodePacked(\"\\x19Ethereum Signed Message:\\n32\", hash));\n    }\n\n    /**\n     * @dev Returns an Ethereum Signed Message, created from `s`. This\n     * produces hash corresponding to the one signed with the\n     * https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`]\n     * JSON-RPC method as part of EIP-191.\n     *\n     * See {recover}.\n     */\n    function toEthSignedMessageHash(bytes memory s) internal pure returns (bytes32) {\n        return keccak256(abi.encodePacked(\"\\x19Ethereum Signed Message:\\n\", Strings.toString(s.length), s));\n    }\n\n    /**\n     * @dev Returns an Ethereum Signed Typed Data, created from a\n     * `domainSeparator` and a `structHash`. This produces hash corresponding\n     * to the one signed with the\n     * https://eips.ethereum.org/EIPS/eip-712[`eth_signTypedData`]\n     * JSON-RPC method as part of EIP-712.\n     *\n     * See {recover}.\n     */\n    function toTypedDataHash(bytes32 domainSeparator, bytes32 structHash) internal pure returns (bytes32) {\n        return keccak256(abi.encodePacked(\"\\x19\\x01\", domainSeparator, structHash));\n    }\n}\n"},"@openzeppelin/contracts/utils/math/Math.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/math/Math.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Standard math utilities missing in the Solidity language.\n */\nlibrary Math {\n    enum Rounding {\n        Down, // Toward negative infinity\n        Up, // Toward infinity\n        Zero // Toward zero\n    }\n\n    /**\n     * @dev Returns the largest of two numbers.\n     */\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two numbers.\n     */\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two numbers. The result is rounded towards\n     * zero.\n     */\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b) / 2 can overflow.\n        return (a & b) + (a ^ b) / 2;\n    }\n\n    /**\n     * @dev Returns the ceiling of the division of two numbers.\n     *\n     * This differs from standard division with `/` in that it rounds up instead\n     * of rounding down.\n     */\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b - 1) / b can overflow on addition, so we distribute.\n        return a == 0 ? 0 : (a - 1) / b + 1;\n    }\n\n    /**\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\n     * with further edits by Uniswap Labs also under MIT license.\n     */\n    function mulDiv(\n        uint256 x,\n        uint256 y,\n        uint256 denominator\n    ) internal pure returns (uint256 result) {\n        unchecked {\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\n            // variables such that product = prod1 * 2^256 + prod0.\n            uint256 prod0; // Least significant 256 bits of the product\n            uint256 prod1; // Most significant 256 bits of the product\n            assembly {\n                let mm := mulmod(x, y, not(0))\n                prod0 := mul(x, y)\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\n            }\n\n            // Handle non-overflow cases, 256 by 256 division.\n            if (prod1 == 0) {\n                return prod0 / denominator;\n            }\n\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\n            require(denominator > prod1);\n\n            ///////////////////////////////////////////////\n            // 512 by 256 division.\n            ///////////////////////////////////////////////\n\n            // Make division exact by subtracting the remainder from [prod1 prod0].\n            uint256 remainder;\n            assembly {\n                // Compute remainder using mulmod.\n                remainder := mulmod(x, y, denominator)\n\n                // Subtract 256 bit number from 512 bit number.\n                prod1 := sub(prod1, gt(remainder, prod0))\n                prod0 := sub(prod0, remainder)\n            }\n\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator. Always >= 1.\n            // See https://cs.stackexchange.com/q/138556/92363.\n\n            // Does not overflow because the denominator cannot be zero at this stage in the function.\n            uint256 twos = denominator & (~denominator + 1);\n            assembly {\n                // Divide denominator by twos.\n                denominator := div(denominator, twos)\n\n                // Divide [prod1 prod0] by twos.\n                prod0 := div(prod0, twos)\n\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\n                twos := add(div(sub(0, twos), twos), 1)\n            }\n\n            // Shift in bits from prod1 into prod0.\n            prod0 |= prod1 * twos;\n\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\n            // four bits. That is, denominator * inv = 1 mod 2^4.\n            uint256 inverse = (3 * denominator) ^ 2;\n\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also works\n            // in modular arithmetic, doubling the correct bits in each step.\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\n\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\n            // is no longer required.\n            result = prod0 * inverse;\n            return result;\n        }\n    }\n\n    /**\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\n     */\n    function mulDiv(\n        uint256 x,\n        uint256 y,\n        uint256 denominator,\n        Rounding rounding\n    ) internal pure returns (uint256) {\n        uint256 result = mulDiv(x, y, denominator);\n        if (rounding == Rounding.Up && mulmod(x, y, denominator) > 0) {\n            result += 1;\n        }\n        return result;\n    }\n\n    /**\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded down.\n     *\n     * Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11).\n     */\n    function sqrt(uint256 a) internal pure returns (uint256) {\n        if (a == 0) {\n            return 0;\n        }\n\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\n        //\n        // We know that the \"msb\" (most significant bit) of our target number `a` is a power of 2 such that we have\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\n        //\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\n        // → `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\n        // → `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\n        //\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\n        uint256 result = 1 << (log2(a) >> 1);\n\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\n        // into the expected uint128 result.\n        unchecked {\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            return min(result, a / result);\n        }\n    }\n\n    /**\n     * @notice Calculates sqrt(a), following the selected rounding direction.\n     */\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = sqrt(a);\n            return result + (rounding == Rounding.Up && result * result < a ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2, rounded down, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 128;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 64;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 32;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 16;\n            }\n            if (value >> 8 > 0) {\n                value >>= 8;\n                result += 8;\n            }\n            if (value >> 4 > 0) {\n                value >>= 4;\n                result += 4;\n            }\n            if (value >> 2 > 0) {\n                value >>= 2;\n                result += 2;\n            }\n            if (value >> 1 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log2(value);\n            return result + (rounding == Rounding.Up && 1 << result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 10, rounded down, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >= 10**64) {\n                value /= 10**64;\n                result += 64;\n            }\n            if (value >= 10**32) {\n                value /= 10**32;\n                result += 32;\n            }\n            if (value >= 10**16) {\n                value /= 10**16;\n                result += 16;\n            }\n            if (value >= 10**8) {\n                value /= 10**8;\n                result += 8;\n            }\n            if (value >= 10**4) {\n                value /= 10**4;\n                result += 4;\n            }\n            if (value >= 10**2) {\n                value /= 10**2;\n                result += 2;\n            }\n            if (value >= 10**1) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log10(value);\n            return result + (rounding == Rounding.Up && 10**result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 256, rounded down, of a positive value.\n     * Returns 0 if given 0.\n     *\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\n     */\n    function log256(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 16;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 8;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 4;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 2;\n            }\n            if (value >> 8 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log256(value);\n            return result + (rounding == Rounding.Up && 1 << (result * 8) < value ? 1 : 0);\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Strings.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/Strings.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./math/Math.sol\";\n\n/**\n * @dev String operations.\n */\nlibrary Strings {\n    bytes16 private constant _SYMBOLS = \"0123456789abcdef\";\n    uint8 private constant _ADDRESS_LENGTH = 20;\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\n     */\n    function toString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            uint256 length = Math.log10(value) + 1;\n            string memory buffer = new string(length);\n            uint256 ptr;\n            /// @solidity memory-safe-assembly\n            assembly {\n                ptr := add(buffer, add(32, length))\n            }\n            while (true) {\n                ptr--;\n                /// @solidity memory-safe-assembly\n                assembly {\n                    mstore8(ptr, byte(mod(value, 10), _SYMBOLS))\n                }\n                value /= 10;\n                if (value == 0) break;\n            }\n            return buffer;\n        }\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\n     */\n    function toHexString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            return toHexString(value, Math.log256(value) + 1);\n        }\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\n     */\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\n        bytes memory buffer = new bytes(2 * length + 2);\n        buffer[0] = \"0\";\n        buffer[1] = \"x\";\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\n            buffer[i] = _SYMBOLS[value & 0xf];\n            value >>= 4;\n        }\n        require(value == 0, \"Strings: hex length insufficient\");\n        return string(buffer);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation.\n     */\n    function toHexString(address addr) internal pure returns (string memory) {\n        return toHexString(uint256(uint160(addr)), _ADDRESS_LENGTH);\n    }\n}\n"},"contracts/smart-contract-wallet/base/Executor.sol":{"content":"// SPDX-License-Identifier: LGPL-3.0-only\npragma solidity 0.8.17;\n\nimport {Enum} from \"../common/Enum.sol\";\n\n/// @title Executor - A contract that can execute transactions\nabstract contract Executor {\n    // Could add a flag fromEntryPoint for AA txn\n    event ExecutionFailure(\n        address indexed to,\n        uint256 indexed value,\n        bytes indexed data,\n        Enum.Operation operation,\n        uint256 txGas\n    );\n    event ExecutionSuccess(\n        address indexed to,\n        uint256 indexed value,\n        bytes indexed data,\n        Enum.Operation operation,\n        uint256 txGas\n    );\n\n    function execute(\n        address to,\n        uint256 value,\n        bytes memory data,\n        Enum.Operation operation,\n        uint256 txGas\n    ) internal returns (bool success) {\n        if (operation == Enum.Operation.DelegateCall) {\n            // solhint-disable-next-line no-inline-assembly\n            assembly {\n                success := delegatecall(\n                    txGas,\n                    to,\n                    add(data, 0x20),\n                    mload(data),\n                    0,\n                    0\n                )\n            }\n        } else {\n            // solhint-disable-next-line no-inline-assembly\n            assembly {\n                success := call(\n                    txGas,\n                    to,\n                    value,\n                    add(data, 0x20),\n                    mload(data),\n                    0,\n                    0\n                )\n            }\n        }\n        if (success) emit ExecutionSuccess(to, value, data, operation, txGas);\n        else emit ExecutionFailure(to, value, data, operation, txGas);\n    }\n}\n"},"contracts/smart-contract-wallet/base/FallbackManager.sol":{"content":"// SPDX-License-Identifier: LGPL-3.0-only\npragma solidity 0.8.17;\n\nimport {SelfAuthorized} from \"../common/SelfAuthorized.sol\";\nimport {FallbackManagerErrors} from \"../common/Errors.sol\";\n\n/**\n *   @title Fallback Manager - A contract that manages fallback calls made to the Smart Account\n *   @dev Fallback calls are handled by a `handler` contract that is stored at FALLBACK_HANDLER_STORAGE_SLOT\n *        fallback calls are not delegated to the `handler` so they can not directly change Smart Account storage\n */\ncontract FallbackManager is SelfAuthorized, FallbackManagerErrors {\n    // keccak-256 hash of \"fallback_manager.handler.address\" subtracted by 1\n    bytes32 internal constant FALLBACK_HANDLER_STORAGE_SLOT =\n        0x6c9a6c4a39284e37ed1cf53d337577d14212a4870fb976a4366c693b939918d4;\n\n    event ChangedFallbackHandler(\n        address indexed previousHandler,\n        address indexed handler\n    );\n\n    // solhint-disable-next-line payable-fallback,no-complex-fallback\n    fallback() external {\n        bytes32 slot = FALLBACK_HANDLER_STORAGE_SLOT;\n        // solhint-disable-next-line no-inline-assembly\n        assembly {\n            let handler := sload(slot)\n            if iszero(handler) {\n                return(0, 0)\n            }\n            calldatacopy(0, 0, calldatasize())\n            // The msg.sender address is shifted to the left by 12 bytes to remove the padding\n            // Then the address without padding is stored right after the calldata\n            mstore(calldatasize(), shl(96, caller()))\n            // Add 20 bytes for the address appended add the end\n            let success := call(\n                gas(),\n                handler,\n                0,\n                0,\n                add(calldatasize(), 20),\n                0,\n                0\n            )\n            returndatacopy(0, 0, returndatasize())\n            if iszero(success) {\n                revert(0, returndatasize())\n            }\n            return(0, returndatasize())\n        }\n    }\n\n    function getFallbackHandler() external view returns (address _handler) {\n        // solhint-disable-next-line no-inline-assembly\n        assembly {\n            _handler := sload(FALLBACK_HANDLER_STORAGE_SLOT)\n        }\n    }\n\n    /// @dev Allows to add a contract to handle fallback calls.\n    ///      Only fallback calls without value and with data will be forwarded.\n    ///      This can only be done via a smartAccount transaction.\n    /// @param handler contract to handle fallback calls.\n    function setFallbackHandler(address handler) public authorized {\n        address previousHandler;\n        // solhint-disable-next-line no-inline-assembly\n        assembly {\n            previousHandler := sload(FALLBACK_HANDLER_STORAGE_SLOT)\n        }\n        _setFallbackHandler(handler);\n        emit ChangedFallbackHandler(previousHandler, handler);\n    }\n\n    function _setFallbackHandler(address handler) internal {\n        if (handler == address(0)) revert HandlerCannotBeZero();\n        bytes32 slot = FALLBACK_HANDLER_STORAGE_SLOT;\n        // solhint-disable-next-line no-inline-assembly\n        assembly {\n            sstore(slot, handler)\n        }\n    }\n\n    uint256[24] private __gap;\n}\n"},"contracts/smart-contract-wallet/base/ModuleManager.sol":{"content":"// SPDX-License-Identifier: LGPL-3.0-only\npragma solidity 0.8.17;\n\nimport {SelfAuthorized} from \"../common/SelfAuthorized.sol\";\nimport {Executor, Enum} from \"./Executor.sol\";\nimport {ModuleManagerErrors} from \"../common/Errors.sol\";\n\n/**\n * @title Module Manager - A contract that manages modules that can execute transactions\n *        on behalf of the Smart Account via this contract.\n */\ncontract ModuleManager is SelfAuthorized, Executor, ModuleManagerErrors {\n    address internal constant SENTINEL_MODULES = address(0x1);\n\n    mapping(address => address) internal modules;\n\n    // Events\n    event EnabledModule(address module);\n    event DisabledModule(address module);\n    event ExecutionFromModuleSuccess(address indexed module);\n    event ExecutionFromModuleFailure(address indexed module);\n    event ModuleTransaction(\n        address module,\n        address to,\n        uint256 value,\n        bytes data,\n        Enum.Operation operation\n    );\n\n    /**\n     * @dev Returns array of modules. Useful for a widget\n     * @param start Start of the page.\n     * @param pageSize Maximum number of modules that should be returned.\n     * @return array Array of modules.\n     * @return next Start of the next page.\n     */\n    function getModulesPaginated(\n        address start,\n        uint256 pageSize\n    ) external view returns (address[] memory array, address next) {\n        // Init array with max page size\n        array = new address[](pageSize);\n\n        // Populate return array\n        uint256 moduleCount;\n        address currentModule = modules[start];\n        while (\n            currentModule != address(0x0) &&\n            currentModule != SENTINEL_MODULES &&\n            moduleCount < pageSize\n        ) {\n            array[moduleCount] = currentModule;\n            currentModule = modules[currentModule];\n            moduleCount++;\n        }\n        next = currentModule;\n        // Set correct size of returned array\n        // solhint-disable-next-line no-inline-assembly\n        assembly {\n            mstore(array, moduleCount)\n        }\n    }\n\n    /**\n     * @dev Adds a module to the allowlist.\n     * @notice This can only be done via a wallet transaction.\n     * @notice Enables the module `module` for the wallet.\n     * @param module Module to be allow-listed.\n     */\n    function enableModule(address module) public authorized {\n        // Module address cannot be null or sentinel.\n        if (module == address(0) || module == SENTINEL_MODULES)\n            revert ModuleCannotBeZeroOrSentinel(module);\n        // Module cannot be added twice.\n        if (modules[module] != address(0)) revert ModuleAlreadyEnabled(module);\n        modules[module] = modules[SENTINEL_MODULES];\n        modules[SENTINEL_MODULES] = module;\n        emit EnabledModule(module);\n    }\n\n    /**\n     * @dev Removes a module from the allowlist.\n     * @notice This can only be done via a wallet transaction.\n     * @notice Disables the module `module` for the wallet.\n     * @param prevModule Module that pointed to the module to be removed in the linked list\n     * @param module Module to be removed.\n     */\n    function disableModule(\n        address prevModule,\n        address module\n    ) public authorized {\n        // Validate module address and check that it corresponds to module index.\n        if (module == address(0) || module == SENTINEL_MODULES)\n            revert ModuleCannotBeZeroOrSentinel(module);\n        if (modules[prevModule] != module)\n            revert ModuleAndPrevModuleMismatch(\n                module,\n                modules[prevModule],\n                prevModule\n            );\n        modules[prevModule] = modules[module];\n        delete modules[module];\n        emit DisabledModule(module);\n    }\n\n    /**\n     * @dev Allows a Module to execute a Smart Account transaction without any further confirmations.\n     * @param to Destination address of module transaction.\n     * @param value Ether value of module transaction.\n     * @param data Data payload of module transaction.\n     * @param operation Operation type of module transaction.\n     */\n    function execTransactionFromModule(\n        address to,\n        uint256 value,\n        bytes memory data,\n        Enum.Operation operation\n    ) public virtual returns (bool success) {\n        // Only whitelisted modules are allowed.\n        if (msg.sender == SENTINEL_MODULES || modules[msg.sender] == address(0))\n            revert ModuleNotEnabled(msg.sender);\n        // Execute transaction without further confirmations.\n        success = execute(to, value, data, operation, gasleft());\n        if (success) {\n            emit ModuleTransaction(msg.sender, to, value, data, operation);\n            emit ExecutionFromModuleSuccess(msg.sender);\n        } else emit ExecutionFromModuleFailure(msg.sender);\n    }\n\n    /**\n     * @dev Allows a Module to execute a wallet transaction without any further confirmations and returns data\n     * @param to Destination address of module transaction.\n     * @param value Ether value of module transaction.\n     * @param data Data payload of module transaction.\n     * @param operation Operation type of module transaction.\n     */\n    function execTransactionFromModuleReturnData(\n        address to,\n        uint256 value,\n        bytes memory data,\n        Enum.Operation operation\n    ) public returns (bool success, bytes memory returnData) {\n        success = execTransactionFromModule(to, value, data, operation);\n        // solhint-disable-next-line no-inline-assembly\n        assembly {\n            // Load free memory location\n            let ptr := mload(0x40)\n            // We allocate memory for the return data by setting the free memory location to\n            // current free memory location + data size + 32 bytes for data size value\n            mstore(0x40, add(ptr, add(returndatasize(), 0x20)))\n            // Store the size\n            mstore(ptr, returndatasize())\n            // Store the data\n            returndatacopy(add(ptr, 0x20), 0, returndatasize())\n            // Point the return data to the correct memory location\n            returnData := ptr\n        }\n    }\n\n    /**\n     * @dev Returns if a module is enabled\n     * @return True if the module is enabled\n     */\n    function isModuleEnabled(address module) public view returns (bool) {\n        return SENTINEL_MODULES != module && modules[module] != address(0);\n    }\n\n    /**\n     * @notice Setup function sets the initial storage of the contract.\n     *         Optionally executes a delegate call to another contract to setup the modules.\n     * @param to Optional destination address of call to execute.\n     * @param data Optional data of call to execute.\n     */\n    function _setupModules(address to, bytes memory data) internal {\n        if (modules[SENTINEL_MODULES] != address(0))\n            revert ModulesAlreadyInitialized();\n        modules[SENTINEL_MODULES] = SENTINEL_MODULES;\n        if (to != address(0))\n            if (!execute(to, 0, data, Enum.Operation.DelegateCall, gasleft()))\n                // Setup has to complete successfully or transaction fails.\n                revert ModulesSetupExecutionFailed();\n    }\n\n    uint256[24] private __gap;\n}\n"},"contracts/smart-contract-wallet/BaseSmartAccount.sol":{"content":"// SPDX-License-Identifier: GPL-3.0\npragma solidity 0.8.17;\n\n/* solhint-disable avoid-low-level-calls */\n/* solhint-disable no-inline-assembly */\n/* solhint-disable reason-string */\n\nimport {IAccount} from \"@account-abstraction/contracts/interfaces/IAccount.sol\";\nimport {IEntryPoint} from \"@account-abstraction/contracts/interfaces/IEntryPoint.sol\";\nimport {UserOperationLib, UserOperation} from \"@account-abstraction/contracts/interfaces/UserOperation.sol\";\nimport {Enum} from \"./common/Enum.sol\";\nimport {BaseSmartAccountErrors} from \"./common/Errors.sol\";\nimport \"@account-abstraction/contracts/core/Helpers.sol\";\n\nstruct Transaction {\n    address to;\n    Enum.Operation operation;\n    uint256 value;\n    bytes data;\n    uint256 targetTxGas;\n}\n\nstruct FeeRefund {\n    uint256 baseGas;\n    uint256 gasPrice; //gasPrice or tokenGasPrice\n    uint256 tokenGasPriceFactor;\n    address gasToken;\n    address payable refundReceiver;\n}\n\n/**\n * Basic account implementation.\n * This contract provides the basic logic for implementing the IAccount interface: validateUserOp function\n * Specific account implementation should inherit it and provide the account-specific logic\n */\nabstract contract BaseSmartAccount is IAccount, BaseSmartAccountErrors {\n    using UserOperationLib for UserOperation;\n\n    //return value in case of signature failure, with no time-range.\n    // equivalent to _packValidationData(true,0,0);\n    uint256 internal constant SIG_VALIDATION_FAILED = 1;\n\n    /**\n     * @return nonce the account nonce.\n     * @dev This method returns the next sequential nonce.\n     * @notice For a nonce of a specific key, use `entrypoint.getNonce(account, key)`\n     */\n    function nonce() public view virtual returns (uint256) {\n        return entryPoint().getNonce(address(this), 0);\n    }\n\n    /**\n     * return the entryPoint used by this account.\n     * subclass should return the current entryPoint used by this account.\n     */\n    function entryPoint() public view virtual returns (IEntryPoint);\n\n    /**\n     * Validate user's signature and nonce.\n     * Subclass doesn't need to override this method.\n     * Instead, it should override the specific internal validation methods.\n     */\n    function validateUserOp(\n        UserOperation calldata userOp,\n        bytes32 userOpHash,\n        uint256 missingAccountFunds\n    ) external virtual override returns (uint256 validationData) {\n        if (msg.sender != address(entryPoint()))\n            revert CallerIsNotAnEntryPoint(msg.sender);\n        validationData = _validateSignature(userOp, userOpHash);\n        _validateNonce(userOp.nonce);\n        _payPrefund(missingAccountFunds);\n    }\n\n    /**\n     * validate the signature is valid for this message.\n     * @param userOp validate the userOp.signature field\n     * @param userOpHash convenient field: the hash of the request, to check the signature against\n     *          (also hashes the entrypoint and chain id)\n     * @return validationData signature and time-range of this operation\n     *      <20-byte> sigAuthorizer - 0 for valid signature, 1 to mark signature failure,\n     *         otherwise, an address of an \"authorizer\" contract.\n     *      <6-byte> validUntil - last timestamp this operation is valid. 0 for \"indefinite\"\n     *      <6-byte> validAfter - first timestamp this operation is valid\n     *      If the account doesn't use time-range, it is enough to return SIG_VALIDATION_FAILED value (1) for signature failure.\n     *      Note that the validation code cannot use block.timestamp (or block.number) directly.\n     */\n    function _validateSignature(\n        UserOperation calldata userOp,\n        bytes32 userOpHash\n    ) internal virtual returns (uint256 validationData);\n\n    /**\n     * Validate the nonce of the UserOperation.\n     * This method may validate the nonce requirement of this account.\n     * e.g.\n     * To limit the nonce to use sequenced UserOps only (no \"out of order\" UserOps):\n     *      `require(nonce < type(uint64).max)`\n     * For a hypothetical account that *requires* the nonce to be out-of-order:\n     *      `require(nonce & type(uint64).max == 0)`\n     *\n     * The actual nonce uniqueness is managed by the EntryPoint, and thus no other\n     * action is needed by the account itself.\n     *\n     * @param nonce to validate\n     *\n     * solhint-disable-next-line no-empty-blocks\n     */\n    function _validateNonce(uint256 nonce) internal view virtual {}\n\n    /**\n     * sends to the entrypoint (msg.sender) the missing funds for this transaction.\n     * subclass MAY override this method for better funds management\n     * (e.g. send to the entryPoint more than the minimum required, so that in future transactions\n     * it will not be required to send again)\n     * @param missingAccountFunds the minimum value this method should send the entrypoint.\n     *  this value MAY be zero, in case there is enough deposit, or the userOp has a paymaster.\n     */\n    function _payPrefund(uint256 missingAccountFunds) internal virtual {\n        if (missingAccountFunds != 0) {\n            payable(msg.sender).call{\n                value: missingAccountFunds,\n                gas: type(uint256).max\n            }(\"\");\n            //ignore failure (its EntryPoint's job to verify, not account.)\n        }\n    }\n\n    /**\n     * @dev Initialize the Smart Account with required states\n     * @param _owner Signatory of the Smart Account\n     * @param _handler Default fallback handler provided in Smart Account\n     * @notice devs need to make sure it is only callble once by initiazer or state check restrictions\n     */\n    function init(address _owner, address _handler) external virtual;\n\n    /**\n     * @dev Gnosis style transaction with optional repay in native tokens OR ERC20\n     * @dev Allows to execute a transaction confirmed by required signature/s and then pays the account that submitted the transaction.\n     * @notice The fees are always transferred, even if the user transaction fails.\n     * @param _tx Smart Account transaction\n     * @param refundInfo Required information for gas refunds\n     * @param signatures Packed signature/s data ({bytes32 r}{bytes32 s}{uint8 v})\n     */\n    function execTransaction(\n        Transaction memory _tx,\n        FeeRefund memory refundInfo,\n        bytes memory signatures\n    ) external payable virtual returns (bool success);\n}\n"},"contracts/smart-contract-wallet/common/Enum.sol":{"content":"// SPDX-License-Identifier: LGPL-3.0-only\npragma solidity 0.8.17;\n\n/// @title Enum - Collection of enums\nabstract contract Enum {\n    enum Operation {\n        Call,\n        DelegateCall\n    }\n}\n"},"contracts/smart-contract-wallet/common/Errors.sol":{"content":"// SPDX-License-Identifier: LGPL-3.0-only\npragma solidity 0.8.17;\n\ncontract BaseSmartAccountErrors {\n    /**\n     * @notice Throws at onlyEntryPoint when msg.sender is not an EntryPoint set for this Smart Account\n     * @param caller address that tried to call onlyEntryPoint-protected method\n     */\n    error CallerIsNotAnEntryPoint(address caller);\n}\n\ncontract FallbackManagerErrors {\n    /**\n     * @notice Throws if zero address has been provided as Fallback Handler address\n     */\n    error HandlerCannotBeZero();\n}\n\ncontract SmartAccountErrors is BaseSmartAccountErrors {\n    /**\n     * @notice Throws if zero address has been provided as Entry Point address\n     */\n    error EntryPointCannotBeZero();\n\n    /**\n     * @notice Throws at mixedAuth when msg.sender is not an owner neither _self\n     * @param caller address that tried to call mixedAuth-protected method\n     */\n    error MixedAuthFail(address caller);\n\n    /**\n     * @notice Throws if transfer of tokens failed\n     * @param token token contract address\n     * @param dest token transfer receiver\n     * @param amount the amount of tokens in a failed transfer\n     */\n    error TokenTransferFailed(address token, address dest, uint256 amount);\n\n    /**\n     * @notice Throws if trying to change an owner of a SmartAccount to the zero address\n     */\n    error OwnerCannotBeZero();\n\n    /**\n     * @notice Throws if zero address has been provided as Base Implementation address\n     */\n    error BaseImplementationCannotBeZero();\n\n    /**\n     * @notice Throws if there is no code at implementationAddress\n     * @param implementationAddress implementation address provided\n     */\n    error InvalidImplementation(address implementationAddress);\n\n    /**\n     * @notice Throws at onlyOwner when msg.sender is not an owner\n     * @param caller address that tried to call onlyOwner method\n     */\n    error CallerIsNotOwner(address caller);\n\n    /**\n     * @notice Throws at _requireFromEntryPointOrOwner when msg.sender is not an EntryPoint neither an owner\n     * @param caller address that tried to call _requireFromEntryPointOrOwner-protected method\n     */\n    error CallerIsNotEntryPointOrOwner(address caller);\n\n    /**\n     * @notice Throws if trying to initialize a Smart Account that has already been initialized\n     * @param smartAccount Smart Account Address\n     */\n    error AlreadyInitialized(address smartAccount);\n\n    /**\n     * @notice Throws if not enough gas is left at some point\n     * @param gasLeft how much gas left at the moment of a check\n     * @param gasRequired how much gas required to proceed\n     */\n    error NotEnoughGasLeft(uint256 gasLeft, uint256 gasRequired);\n\n    /**\n     * @notice Throws if not able to estimate gas\n     * It can be when amount of gas and its price are both zero and at the same time\n     * transaction has failed to be executed\n     * @param targetTxGas gas required for target transaction\n     * @param gasPrice gas price passed in Refund Info\n     * @param success whether transaction has been executed successfully or not\n     */\n    error CanNotEstimateGas(\n        uint256 targetTxGas,\n        uint256 gasPrice,\n        bool success\n    );\n\n    /**\n     * @notice Throws if contract signature is provided in frong format\n     * @param uintS s converted to uint256\n     * @param contractSignatureLength length of a contract signature\n     * @param signatureLength the whole signature length\n     */\n    error WrongContractSignatureFormat(\n        uint256 uintS,\n        uint256 contractSignatureLength,\n        uint256 signatureLength\n    );\n\n    /**\n     * @notice Throws when isValidSignature for the conrtact signature and data hash return differs from EIP1271 Magic Value\n     * @param contractSignature the contract signature that has been verified\n     */\n    error WrongContractSignature(bytes contractSignature);\n\n    /**\n     * @notice Throws when the address that signed the data (restored from signature)\n     * differs from the address we expected to sign the data (i.e. some authorized address)\n     * @param restoredSigner the signer address restored from signature\n     * @param expectedSigner the address that was expected to be a signer\n     */\n    error InvalidSignature(address restoredSigner, address expectedSigner);\n\n    /**\n     * @notice Throws when the transaction execution fails\n     */\n    error ExecutionFailed();\n\n    /**\n     * @notice Throws when if trying to transfer to zero address\n     */\n    error TransferToZeroAddressAttempt();\n\n    /**\n     * @notice Throws when data for executeBatchCall provided in wrong format (i.e. empty array or lengths mismatch)\n     * @param destLength length of destination contracts array\n     * @param valueLength length of txn values array\n     * @param funcLength length of function signatures array\n     */\n    error WrongBatchProvided(\n        uint256 destLength,\n        uint256 valueLength,\n        uint256 funcLength\n    );\n\n    /**\n     * @notice Thrown when the function that must be called only via delegatecall is called directly\n     */\n    error DelegateCallsOnly();\n\n    /**\n     * @notice Thrown when trying to use address of the Smart Account as an owner for itself\n     */\n    error OwnerCanNotBeSelf();\n\n    /**\n     * @notice Thrown when trying to use current owner as a new owner in a _setOwner() call\n     */\n    error OwnerProvidedIsSame();\n\n    /**\n     * @notice Thrown when trying to use 0 as tokenGasPriceFactor\n     */\n    error TokenGasPriceFactorCanNotBeZero();\n}\n\ncontract SmartAccountFactoryErrors is SmartAccountErrors {\n    /**\n     * @notice Throws when the new Proxy deployment fails\n     * @param owner Owner of a Proxy (Smart Account)\n     * @param index Deployment index\n     */\n    error ProxyDeploymentFailed(address owner, uint256 index);\n}\n\ncontract ModuleManagerErrors {\n    /**\n     * @notice Throws when trying to initialize module manager that already been initialized\n     */\n    error ModulesAlreadyInitialized();\n\n    /**\n     * @notice Throws when a delegatecall in course of module manager initialization has failed\n     */\n    error ModulesSetupExecutionFailed();\n\n    /**\n     * @notice Throws when address(0) or SENTINEL_MODULES constant has been provided as a module address\n     * @param module Module address provided\n     */\n    error ModuleCannotBeZeroOrSentinel(address module);\n\n    /**\n     * @notice Throws when trying to enable module that has already been enabled\n     * @param module Module address provided\n     */\n    error ModuleAlreadyEnabled(address module);\n\n    /**\n     * @notice Throws when module and previous module mismatch\n     * @param expectedModule expected module at modules[prevModule]\n     * @param returnedModule the module that has been found at modules[prevModule]\n     * @param prevModule previous module address provided at call\n     */\n    error ModuleAndPrevModuleMismatch(\n        address expectedModule,\n        address returnedModule,\n        address prevModule\n    );\n\n    /**\n     * @notice Throws when trying to execute transaction from module that is not enabled\n     * @param module Module address provided\n     */\n    error ModuleNotEnabled(address module);\n}\n\ncontract SelfAuthorizedErrors {\n    /**\n     * @notice Throws when the caller is not address(this)\n     * @param caller Caller address\n     */\n    error CallerIsNotSelf(address caller);\n}\n\ncontract SingletonPaymasterErrors {\n    /**\n     * @notice Throws when the Entrypoint address provided is address(0)\n     */\n    error EntryPointCannotBeZero();\n\n    /**\n     * @notice Throws when the verifiying signer address provided is address(0)\n     */\n    error VerifyingSignerCannotBeZero();\n\n    /**\n     * @notice Throws when the paymaster address provided is address(0)\n     */\n    error PaymasterIdCannotBeZero();\n\n    /**\n     * @notice Throws when the 0 has been provided as deposit\n     */\n    error DepositCanNotBeZero();\n\n    /**\n     * @notice Throws when trying to withdraw to address(0)\n     */\n    error CanNotWithdrawToZeroAddress();\n\n    /**\n     * @notice Throws when trying to withdraw more than balance available\n     * @param amountRequired required balance\n     * @param currentBalance available balance\n     */\n    error InsufficientBalance(uint256 amountRequired, uint256 currentBalance);\n\n    /**\n     * @notice Throws when signature provided has invalid length\n     * @param sigLength length oif the signature provided\n     */\n    error InvalidPaymasterSignatureLength(uint256 sigLength);\n}\n\n//\n"},"contracts/smart-contract-wallet/common/ReentrancyGuard.sol":{"content":"// SPDX-License-Identifier: LGPL-3.0-only\npragma solidity 0.8.17;\n\n/// @title Reentrancy Guard - reentrancy protection\nabstract contract ReentrancyGuard {\n    error ReentrancyProtectionActivated();\n\n    uint256 private constant NOT_ENTERED = 1;\n    uint256 private constant ENTERED = 2;\n\n    uint256 private reentrancyStatus;\n\n    constructor() {\n        reentrancyStatus = NOT_ENTERED;\n    }\n\n    modifier nonReentrant() {\n        if (reentrancyStatus == ENTERED) revert ReentrancyProtectionActivated();\n        reentrancyStatus = ENTERED;\n        _;\n        reentrancyStatus = NOT_ENTERED;\n    }\n\n    function _isReentrancyGuardEntered() internal view returns (bool) {\n        return reentrancyStatus == ENTERED;\n    }\n}\n"},"contracts/smart-contract-wallet/common/SecuredTokenTransfer.sol":{"content":"// SPDX-License-Identifier: LGPL-3.0-only\npragma solidity 0.8.17;\n\n/// @title SecuredTokenTransfer - Secure token transfer\nabstract contract SecuredTokenTransfer {\n    /// @dev Transfers a token and returns if it was a success\n    /// @param token Token that should be transferred\n    /// @param receiver Receiver to whom the token should be transferred\n    /// @param amount The amount of tokens that should be transferred\n    function transferToken(\n        address token,\n        address receiver,\n        uint256 amount\n    ) internal returns (bool transferred) {\n        require(token != address(0), \"token can not be zero address\");\n        require(token.code.length > 0, \"token contract doesn't exist\");\n        // 0xa9059cbb - keccack(\"transfer(address,uint256)\")\n        bytes memory data = abi.encodeWithSelector(\n            0xa9059cbb,\n            receiver,\n            amount\n        );\n        // solhint-disable-next-line no-inline-assembly\n        assembly {\n            // We write the return value to scratch space.\n            // See https://docs.soliditylang.org/en/v0.8.17/internals/layout_in_memory.html#layout-in-memory\n            let success := call(\n                sub(gas(), 10000),\n                token,\n                0,\n                add(data, 0x20),\n                mload(data),\n                0,\n                0x20\n            )\n            switch returndatasize()\n            case 0 {\n                transferred := success\n            }\n            case 0x20 {\n                transferred := iszero(or(iszero(success), iszero(mload(0))))\n            }\n            default {\n                transferred := 0\n            }\n        }\n    }\n}\n"},"contracts/smart-contract-wallet/common/SelfAuthorized.sol":{"content":"// SPDX-License-Identifier: LGPL-3.0-only\npragma solidity 0.8.17;\n\nimport {SelfAuthorizedErrors} from \"../common/Errors.sol\";\n\n/// @title SelfAuthorized - authorizes current contract to perform actions\ncontract SelfAuthorized is SelfAuthorizedErrors {\n    function requireSelfCall() private view {\n        if (msg.sender != address(this)) revert CallerIsNotSelf(msg.sender);\n    }\n\n    modifier authorized() {\n        // This is a function call as it minimized the bytecode size\n        requireSelfCall();\n        _;\n    }\n}\n"},"contracts/smart-contract-wallet/common/SignatureDecoder.sol":{"content":"// SPDX-License-Identifier: LGPL-3.0-only\npragma solidity 0.8.17;\n\n/// @title SignatureDecoder - Decodes signatures that a encoded as bytes\nabstract contract SignatureDecoder {\n    /// @dev divides bytes signature into `uint8 v, bytes32 r, bytes32 s`.\n    /// @param signature concatenated rsv signatures\n    function signatureSplit(\n        bytes memory signature\n    ) internal pure returns (uint8 v, bytes32 r, bytes32 s) {\n        // The signature format is a compact form of:\n        //   {bytes32 r}{bytes32 s}{uint8 v}\n        // Compact means, uint8 is not padded to 32 bytes.\n        // solhint-disable-next-line no-inline-assembly\n        assembly {\n            r := mload(add(signature, 0x20))\n            s := mload(add(signature, 0x40))\n            // Here we are loading the last 32 bytes, including 31 bytes\n            // of 's'. There is no 'mload8' to do this.\n            //\n            // 'byte' is not working due to the Solidity parser, so let's\n            // use the second best option, 'and'\n            v := and(mload(add(signature, 0x41)), 0xff)\n        }\n    }\n}\n"},"contracts/smart-contract-wallet/handler/DefaultCallbackHandler.sol":{"content":"// SPDX-License-Identifier: LGPL-3.0-only\npragma solidity 0.8.17;\n\nimport {IERC1155TokenReceiver} from \"../interfaces/IERC1155TokenReceiver.sol\";\nimport {IERC721TokenReceiver} from \"../interfaces/IERC721TokenReceiver.sol\";\nimport {IERC777TokensRecipient} from \"../interfaces/IERC777TokensRecipient.sol\";\nimport {IERC165} from \"../interfaces/IERC165.sol\";\nimport {SmartAccount} from \"../SmartAccount.sol\";\n\n/** @title Default Callback Handler - returns true for known token callbacks\n *   @dev Handles EIP-1271 compliant isValidSignature requests.\n *  @notice inspired by Richard Meissner's <richard@gnosis.pm> implementation\n */\ncontract DefaultCallbackHandler is\n    IERC1155TokenReceiver,\n    IERC777TokensRecipient,\n    IERC721TokenReceiver,\n    IERC165\n{\n    string public constant NAME = \"Default Callback Handler\";\n    string public constant VERSION = \"1.0.0\";\n\n    function onERC1155Received(\n        address,\n        address,\n        uint256,\n        uint256,\n        bytes calldata\n    ) external pure override returns (bytes4) {\n        return IERC1155TokenReceiver.onERC1155Received.selector;\n    }\n\n    function onERC1155BatchReceived(\n        address,\n        address,\n        uint256[] calldata,\n        uint256[] calldata,\n        bytes calldata\n    ) external pure override returns (bytes4) {\n        return IERC1155TokenReceiver.onERC1155BatchReceived.selector;\n    }\n\n    function onERC721Received(\n        address,\n        address,\n        uint256,\n        bytes calldata\n    ) external pure override returns (bytes4) {\n        return IERC721TokenReceiver.onERC721Received.selector;\n    }\n\n    function tokensReceived(\n        address,\n        address,\n        address,\n        uint256,\n        bytes calldata,\n        bytes calldata\n    ) external pure override {\n        // We implement this for completeness, doesn't really have any value\n    }\n\n    function supportsInterface(\n        bytes4 interfaceId\n    ) external view virtual override returns (bool) {\n        return\n            interfaceId == type(IERC1155TokenReceiver).interfaceId ||\n            interfaceId == type(IERC721TokenReceiver).interfaceId ||\n            interfaceId == type(IERC777TokensRecipient).interfaceId ||\n            interfaceId == type(IERC165).interfaceId;\n    }\n}\n"},"contracts/smart-contract-wallet/interfaces/IERC1155TokenReceiver.sol":{"content":"// SPDX-License-Identifier: LGPL-3.0-only\npragma solidity 0.8.17;\n\n/**\n    Note: The ERC-165 identifier for this interface is 0x4e2312e0.\n*/\ninterface IERC1155TokenReceiver {\n    /**\n        @notice Handle the receipt of a single ERC1155 token type.\n        @dev An ERC1155-compliant smart contract MUST call this function on the token recipient contract, at the end of a `safeTransferFrom` after the balance has been updated.        \n        This function MUST return `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))` (i.e. 0xf23a6e61) if it accepts the transfer.\n        This function MUST revert if it rejects the transfer.\n        Return of any other value than the prescribed keccak256 generated value MUST result in the transaction being reverted by the caller.\n        @param _operator  The address which initiated the transfer (i.e. msg.sender)\n        @param _from      The address which previously owned the token\n        @param _id        The ID of the token being transferred\n        @param _value     The amount of tokens being transferred\n        @param _data      Additional data with no specified format\n        @return           `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))`\n    */\n    function onERC1155Received(\n        address _operator,\n        address _from,\n        uint256 _id,\n        uint256 _value,\n        bytes calldata _data\n    ) external returns (bytes4);\n\n    /**\n        @notice Handle the receipt of multiple ERC1155 token types.\n        @dev An ERC1155-compliant smart contract MUST call this function on the token recipient contract, at the end of a `safeBatchTransferFrom` after the balances have been updated.        \n        This function MUST return `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))` (i.e. 0xbc197c81) if it accepts the transfer(s).\n        This function MUST revert if it rejects the transfer(s).\n        Return of any other value than the prescribed keccak256 generated value MUST result in the transaction being reverted by the caller.\n        @param _operator  The address which initiated the batch transfer (i.e. msg.sender)\n        @param _from      The address which previously owned the token\n        @param _ids       An array containing ids of each token being transferred (order and length must match _values array)\n        @param _values    An array containing amounts of each token being transferred (order and length must match _ids array)\n        @param _data      Additional data with no specified format\n        @return           `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))`\n    */\n    function onERC1155BatchReceived(\n        address _operator,\n        address _from,\n        uint256[] calldata _ids,\n        uint256[] calldata _values,\n        bytes calldata _data\n    ) external returns (bytes4);\n}\n"},"contracts/smart-contract-wallet/interfaces/IERC165.sol":{"content":"// SPDX-License-Identifier: LGPL-3.0-only\npragma solidity 0.8.17;\n\n/// @notice More details at https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/introspection/IERC165.sol\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"},"contracts/smart-contract-wallet/interfaces/IERC721TokenReceiver.sol":{"content":"// SPDX-License-Identifier: LGPL-3.0-only\npragma solidity 0.8.17;\n\n/// @dev Note: the ERC-165 identifier for this interface is 0x150b7a02.\ninterface IERC721TokenReceiver {\n    /// @notice Handle the receipt of an NFT\n    /// @dev The ERC721 smart contract calls this function on the recipient\n    ///  after a `transfer`. This function MAY throw to revert and reject the\n    ///  transfer. Return of other than the magic value MUST result in the\n    ///  transaction being reverted.\n    ///  Note: the contract address is always the message sender.\n    /// @param _operator The address which called `safeTransferFrom` function\n    /// @param _from The address which previously owned the token\n    /// @param _tokenId The NFT identifier which is being transferred\n    /// @param _data Additional data with no specified format\n    /// @return `bytes4(keccak256(\"onERC721Received(address,address,uint256,bytes)\"))`\n    ///  unless throwing\n    function onERC721Received(\n        address _operator,\n        address _from,\n        uint256 _tokenId,\n        bytes calldata _data\n    ) external returns (bytes4);\n}\n"},"contracts/smart-contract-wallet/interfaces/IERC777TokensRecipient.sol":{"content":"// SPDX-License-Identifier: LGPL-3.0-only\npragma solidity 0.8.17;\n\ninterface IERC777TokensRecipient {\n    function tokensReceived(\n        address operator,\n        address from,\n        address to,\n        uint256 amount,\n        bytes calldata data,\n        bytes calldata operatorData\n    ) external;\n}\n"},"contracts/smart-contract-wallet/interfaces/IModule.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity 0.8.17;\nimport {UserOperation} from \"@account-abstraction/contracts/interfaces/UserOperation.sol\";\n\n// interface for modules to verify singatures signed over userOpHash\ninterface IModule {\n    /**\n     * @dev standard validateSignature for modules to validate and mark userOpHash as seen\n     * @param userOp the operation that is about to be executed.\n     * @param userOpHash hash of the user's request data. can be used as the basis for signature.\n     * @return sigValidationResult sigAuthorizer to be passed back to trusting Account, aligns with validationData\n     */\n    function validateSignature(\n        UserOperation calldata userOp,\n        bytes32 userOpHash\n    ) external returns (uint256 sigValidationResult);\n}\n"},"contracts/smart-contract-wallet/interfaces/ISignatureValidator.sol":{"content":"// SPDX-License-Identifier: LGPL-3.0-only\npragma solidity 0.8.17;\n\ncontract ISignatureValidatorConstants {\n    // bytes4(keccak256(\"isValidSignature(bytes32,bytes)\")\n    bytes4 internal constant EIP1271_MAGIC_VALUE = 0x1626ba7e;\n}\n\nabstract contract ISignatureValidator is ISignatureValidatorConstants {\n    /**\n     * @dev Should return whether the signature provided is valid for the provided data\n     * @param _dataHash Arbitrary length data signed on behalf of address(this)\n     * @param _signature Signature byte array associated with _data\n     *\n     * MUST return the bytes4 magic value 0x20c13b0b when function passes.\n     * MUST NOT modify state (using STATICCALL for solc < 0.5, view modifier for solc > 0.5)\n     * MUST allow external calls\n     */\n    function isValidSignature(\n        bytes32 _dataHash,\n        bytes memory _signature\n    ) public view virtual returns (bytes4);\n}\n"},"contracts/smart-contract-wallet/libs/LibAddress.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity 0.8.17;\n\nlibrary LibAddress {\n    /**\n     * @notice Will return true if provided address is a contract\n     * @param account Address to verify if contract or not\n     * @dev This contract will return false if called within the constructor of\n     *      a contract's deployment, as the code is not yet stored on-chain.\n     */\n    function isContract(address account) internal view returns (bool) {\n        uint256 csize;\n        // solhint-disable-next-line no-inline-assembly\n        assembly {\n            csize := extcodesize(account)\n        }\n        return csize != 0;\n    }\n}\n"},"contracts/smart-contract-wallet/libs/Math.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/math/Math.sol)\n\npragma solidity 0.8.17;\n\n/**\n * @dev Standard math utilities missing in the Solidity language.\n */\nlibrary Math {\n    enum Rounding {\n        Down, // Toward negative infinity\n        Up, // Toward infinity\n        Zero // Toward zero\n    }\n\n    /**\n     * @dev Returns the largest of two numbers.\n     */\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two numbers.\n     */\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two numbers. The result is rounded towards\n     * zero.\n     */\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b) / 2 can overflow.\n        return (a & b) + (a ^ b) / 2;\n    }\n\n    /**\n     * @dev Returns the ceiling of the division of two numbers.\n     *\n     * This differs from standard division with `/` in that it rounds up instead\n     * of rounding down.\n     */\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b - 1) / b can overflow on addition, so we distribute.\n        return a == 0 ? 0 : (a - 1) / b + 1;\n    }\n\n    /**\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\n     * with further edits by Uniswap Labs also under MIT license.\n     */\n    function mulDiv(\n        uint256 x,\n        uint256 y,\n        uint256 denominator\n    ) internal pure returns (uint256 result) {\n        unchecked {\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\n            // variables such that product = prod1 * 2^256 + prod0.\n            uint256 prod0; // Least significant 256 bits of the product\n            uint256 prod1; // Most significant 256 bits of the product\n            assembly {\n                let mm := mulmod(x, y, not(0))\n                prod0 := mul(x, y)\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\n            }\n\n            // Handle non-overflow cases, 256 by 256 division.\n            if (prod1 == 0) {\n                // Solidity will revert if denominator == 0, unlike the div opcode on its own.\n                // The surrounding unchecked block does not change this fact.\n                // See https://docs.soliditylang.org/en/latest/control-structures.html#checked-or-unchecked-arithmetic.\n                return prod0 / denominator;\n            }\n\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\n            require(denominator > prod1, \"Math: mulDiv overflow\");\n\n            ///////////////////////////////////////////////\n            // 512 by 256 division.\n            ///////////////////////////////////////////////\n\n            // Make division exact by subtracting the remainder from [prod1 prod0].\n            uint256 remainder;\n            assembly {\n                // Compute remainder using mulmod.\n                remainder := mulmod(x, y, denominator)\n\n                // Subtract 256 bit number from 512 bit number.\n                prod1 := sub(prod1, gt(remainder, prod0))\n                prod0 := sub(prod0, remainder)\n            }\n\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator. Always >= 1.\n            // See https://cs.stackexchange.com/q/138556/92363.\n\n            // Does not overflow because the denominator cannot be zero at this stage in the function.\n            uint256 twos = denominator & (~denominator + 1);\n            assembly {\n                // Divide denominator by twos.\n                denominator := div(denominator, twos)\n\n                // Divide [prod1 prod0] by twos.\n                prod0 := div(prod0, twos)\n\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\n                twos := add(div(sub(0, twos), twos), 1)\n            }\n\n            // Shift in bits from prod1 into prod0.\n            prod0 |= prod1 * twos;\n\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\n            // four bits. That is, denominator * inv = 1 mod 2^4.\n            uint256 inverse = (3 * denominator) ^ 2;\n\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also works\n            // in modular arithmetic, doubling the correct bits in each step.\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\n\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\n            // is no longer required.\n            result = prod0 * inverse;\n            return result;\n        }\n    }\n\n    /**\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\n     */\n    function mulDiv(\n        uint256 x,\n        uint256 y,\n        uint256 denominator,\n        Rounding rounding\n    ) internal pure returns (uint256) {\n        uint256 result = mulDiv(x, y, denominator);\n        if (rounding == Rounding.Up && mulmod(x, y, denominator) > 0) {\n            result += 1;\n        }\n        return result;\n    }\n\n    /**\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded down.\n     *\n     * Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11).\n     */\n    function sqrt(uint256 a) internal pure returns (uint256) {\n        if (a == 0) {\n            return 0;\n        }\n\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\n        //\n        // We know that the \"msb\" (most significant bit) of our target number `a` is a power of 2 such that we have\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\n        //\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\n        // → `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\n        // → `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\n        //\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\n        uint256 result = 1 << (log2(a) >> 1);\n\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\n        // into the expected uint128 result.\n        unchecked {\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            return min(result, a / result);\n        }\n    }\n\n    /**\n     * @notice Calculates sqrt(a), following the selected rounding direction.\n     */\n    function sqrt(\n        uint256 a,\n        Rounding rounding\n    ) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = sqrt(a);\n            return\n                result +\n                (rounding == Rounding.Up && result * result < a ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2, rounded down, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 128;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 64;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 32;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 16;\n            }\n            if (value >> 8 > 0) {\n                value >>= 8;\n                result += 8;\n            }\n            if (value >> 4 > 0) {\n                value >>= 4;\n                result += 4;\n            }\n            if (value >> 2 > 0) {\n                value >>= 2;\n                result += 2;\n            }\n            if (value >> 1 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(\n        uint256 value,\n        Rounding rounding\n    ) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log2(value);\n            return\n                result +\n                (rounding == Rounding.Up && 1 << result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 10, rounded down, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >= 10 ** 64) {\n                value /= 10 ** 64;\n                result += 64;\n            }\n            if (value >= 10 ** 32) {\n                value /= 10 ** 32;\n                result += 32;\n            }\n            if (value >= 10 ** 16) {\n                value /= 10 ** 16;\n                result += 16;\n            }\n            if (value >= 10 ** 8) {\n                value /= 10 ** 8;\n                result += 8;\n            }\n            if (value >= 10 ** 4) {\n                value /= 10 ** 4;\n                result += 4;\n            }\n            if (value >= 10 ** 2) {\n                value /= 10 ** 2;\n                result += 2;\n            }\n            if (value >= 10 ** 1) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(\n        uint256 value,\n        Rounding rounding\n    ) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log10(value);\n            return\n                result +\n                (rounding == Rounding.Up && 10 ** result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 256, rounded down, of a positive value.\n     * Returns 0 if given 0.\n     *\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\n     */\n    function log256(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 16;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 8;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 4;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 2;\n            }\n            if (value >> 8 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log256(\n        uint256 value,\n        Rounding rounding\n    ) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log256(value);\n            return\n                result +\n                (rounding == Rounding.Up && 1 << (result << 3) < value ? 1 : 0);\n        }\n    }\n}\n"},"contracts/smart-contract-wallet/Proxy.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity 0.8.17;\n\n/**\n * @title Proxy // This is the user's Smart Account\n * @notice Basic proxy that delegates all calls to a fixed implementation contract.\n * @dev    Implementation address is stored in the slot defined by the Proxy's address\n */\ncontract Proxy {\n    constructor(address _implementation) {\n        require(\n            _implementation != address(0),\n            \"Invalid implementation address\"\n        );\n        // solhint-disable-next-line no-inline-assembly\n        assembly {\n            sstore(address(), _implementation)\n        }\n    }\n\n    fallback() external payable {\n        address target;\n        // solhint-disable-next-line no-inline-assembly\n        assembly {\n            target := sload(address())\n            calldatacopy(0, 0, calldatasize())\n            let result := delegatecall(gas(), target, 0, calldatasize(), 0, 0)\n            returndatacopy(0, 0, returndatasize())\n            switch result\n            case 0 {\n                revert(0, returndatasize())\n            }\n            default {\n                return(0, returndatasize())\n            }\n        }\n    }\n}\n"},"contracts/smart-contract-wallet/SmartAccount.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity 0.8.17;\n\nimport {BaseSmartAccount, IEntryPoint, Transaction, FeeRefund, Enum, UserOperation} from \"./BaseSmartAccount.sol\";\nimport {ModuleManager} from \"./base/ModuleManager.sol\";\nimport {FallbackManager} from \"./base/FallbackManager.sol\";\nimport {SignatureDecoder} from \"./common/SignatureDecoder.sol\";\nimport {SecuredTokenTransfer} from \"./common/SecuredTokenTransfer.sol\";\nimport {LibAddress} from \"./libs/LibAddress.sol\";\nimport {ISignatureValidator} from \"./interfaces/ISignatureValidator.sol\";\nimport {Math} from \"./libs/Math.sol\";\nimport {IERC165} from \"./interfaces/IERC165.sol\";\nimport {ReentrancyGuard} from \"./common/ReentrancyGuard.sol\";\nimport {SmartAccountErrors} from \"./common/Errors.sol\";\nimport {ECDSA} from \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\";\nimport {IModule} from \"./interfaces/IModule.sol\";\n\n/**\n * @title SmartAccount - EIP-4337 compatible smart contract wallet.\n * @dev This contract is the base for the Smart Account functionality.\n *         - It provides the functionality to execute both gnosis-style txns and AA (EIP-4337) userOps\n *         - It allows to receive and manage assets.\n *         - It is responsible for managing the modules and fallbacks.\n *         - The Smart Account can be extended with modules, such as Social Recovery, Session Key and others.\n * @author Chirag Titiya - <chirag@biconomy.io>\n */\ncontract SmartAccount is\n    BaseSmartAccount,\n    ModuleManager,\n    FallbackManager,\n    SignatureDecoder,\n    SecuredTokenTransfer,\n    IERC165,\n    ReentrancyGuard,\n    SmartAccountErrors,\n    ISignatureValidator\n{\n    using ECDSA for bytes32;\n    using LibAddress for address;\n\n    // Storage Version\n    string public constant VERSION = \"1.0.0\";\n\n    // Domain Seperators keccak256(\"EIP712Domain(uint256 chainId,address verifyingContract)\");\n    bytes32 internal constant DOMAIN_SEPARATOR_TYPEHASH =\n        0x47e79534a245952e8b16893a336b85a3d9ea9fa8c573f3d803afb92a79469218;\n\n    // keccak256(\n    //     \"AccountTx(address to,uint256 value,bytes data,uint8 operation,uint256 targetTxGas,uint256 baseGas,uint256 gasPrice,uint256 tokenGasPriceFactor,address gasToken,address refundReceiver,uint256 nonce)\"\n    // );\n    bytes32 internal constant ACCOUNT_TX_TYPEHASH =\n        0xda033865d68bf4a40a5a7cb4159a99e33dba8569e65ea3e38222eb12d9e66eee;\n\n    // Owner storage\n    address public owner;\n\n    // changed to 2D nonce below\n    // @notice there is no _nonce\n    mapping(uint256 => uint256) public nonces;\n\n    // AA immutable storage\n    IEntryPoint private immutable _entryPoint;\n    uint256 private immutable _chainId;\n    address private immutable _self;\n\n    // Events\n\n    event ImplementationUpdated(\n        address indexed oldImplementation,\n        address indexed newImplementation\n    );\n    event EOAChanged(\n        address indexed _scw,\n        address indexed _oldEOA,\n        address indexed _newEOA\n    );\n    event AccountHandlePayment(bytes32 indexed txHash, uint256 indexed payment);\n    event SmartAccountReceivedNativeToken(\n        address indexed sender,\n        uint256 indexed value\n    );\n\n    /**\n     * @dev Constructor that sets the owner of the contract and the entry point contract.\n     * @param anEntryPoint The address of the entry point contract.\n     */\n    constructor(IEntryPoint anEntryPoint) {\n        _self = address(this);\n        // By setting the owner it is not possible to call init anymore,\n        // so we create an account with fixed non-zero owner.\n        // This is an unusable account, perfect for the singleton\n        owner = address(0xEeeeeEeeeEeEeeEeEeEeeEEEeeeeEeeeeeeeEEeE);\n        if (address(anEntryPoint) == address(0))\n            revert EntryPointCannotBeZero();\n        _entryPoint = anEntryPoint;\n        _chainId = block.chainid;\n    }\n\n    /// modifiers\n    /**\n     * @dev Modifier to allow only the owner to call the function.\n     * Reverts with CallerIsNotOwner if the caller is not the owner.\n     */\n    modifier onlyOwner() {\n        if (msg.sender != owner) revert CallerIsNotOwner(msg.sender);\n        _;\n    }\n    /**\n     * @dev Modifier to allow only the owner or the contract itself to call the function.\n     * Reverts with MixedAuthFail if the caller is not the owner or the contract itself.\n     */\n    modifier mixedAuth() {\n        if (msg.sender != owner && msg.sender != address(this))\n            revert MixedAuthFail(msg.sender);\n        _;\n    }\n\n    /**\n     * @dev This function allows the owner or entry point to execute certain actions.\n     * If the caller is not authorized, the function will revert with an error message.\n     * @notice This modifier is marked as internal and can only be called within the contract itself.\n     */\n    function _requireFromEntryPointOrOwner() internal view {\n        if (msg.sender != address(entryPoint()) && msg.sender != owner)\n            revert CallerIsNotEntryPointOrOwner(msg.sender);\n    }\n\n    /**\n     * @dev Allows to change the owner of the smart account by current owner or self-call (modules)\n     * @param _newOwner Address of the new signatory\n     */\n    function setOwner(address _newOwner) public mixedAuth {\n        if (_newOwner == address(0)) revert OwnerCannotBeZero();\n        if (_newOwner == address(this)) revert OwnerCanNotBeSelf();\n        if (_newOwner == owner) revert OwnerProvidedIsSame();\n        address oldOwner = owner;\n        assembly {\n            sstore(owner.slot, _newOwner)\n        }\n        emit EOAChanged(address(this), oldOwner, _newOwner);\n    }\n\n    /**\n     * @notice All the new implementations MUST have this method!\n     * @notice Updates the implementation of the base wallet\n     * @param _implementation New wallet implementation\n     */\n    function updateImplementation(\n        address _implementation\n    ) public virtual mixedAuth {\n        require(_implementation != address(0), \"Address cannot be zero\");\n        if (!_implementation.isContract())\n            revert InvalidImplementation(_implementation);\n        address oldImplementation;\n        // solhint-disable-next-line no-inline-assembly\n        assembly {\n            oldImplementation := sload(address())\n            sstore(address(), _implementation)\n        }\n        emit ImplementationUpdated(oldImplementation, _implementation);\n    }\n\n    /// Getters\n    /**\n     * @dev Returns the address of the implementation contract associated with this contract.\n     * @notice The implementation address is stored in the contract's storage slot with index 0.\n     */\n    function getImplementation()\n        external\n        view\n        returns (address _implementation)\n    {\n        // solhint-disable-next-line no-inline-assembly\n        assembly {\n            _implementation := sload(address())\n        }\n    }\n\n    /**\n     * @dev Returns the domain separator for this contract, as defined in the EIP-712 standard.\n     * @return bytes32 The domain separator hash.\n     */\n    function domainSeparator() public view returns (bytes32) {\n        return\n            keccak256(\n                abi.encode(\n                    DOMAIN_SEPARATOR_TYPEHASH,\n                    block.chainid,\n                    address(this)\n                )\n            );\n    }\n\n    /**\n     * @notice Returns the ID of the chain the contract is currently deployed on.\n     * @return _chainId The ID of the current chain as a uint256.\n     */\n    function getChainId() public view returns (uint256) {\n        return _chainId;\n    }\n\n    /**\n     * @dev returns a value from the nonces 2d mapping\n     * @param batchId : the key of the user's batch being queried\n     * @return nonce : the number of transactions made within said batch\n     */\n    function getNonce(uint256 batchId) public view virtual returns (uint256) {\n        return nonces[batchId];\n    }\n\n    /**\n     * @dev Returns the current entry point used by this account.\n     * @return EntryPoint as an `IEntryPoint` interface.\n     * @dev This function should be implemented by the subclass to return the current entry point used by this account.\n     */\n    function entryPoint() public view virtual override returns (IEntryPoint) {\n        return _entryPoint;\n    }\n\n    /**\n     * @dev Initialize the Smart Account with required states\n     * @param _owner Signatory of the Smart Account\n     * @param _handler Default fallback handler provided in Smart Account\n     * @notice devs need to make sure it is only callble once by initiazer or state check restrictions\n     * @notice any further implementations that introduces a new state must have a reinit method\n     * @notice init is prevented here by setting owner in the constructor and checking here for address(0)\n     */\n    function init(address _owner, address _handler) external virtual override {\n        if (owner != address(0)) revert AlreadyInitialized(address(this));\n        if (_owner == address(0)) revert OwnerCannotBeZero();\n        owner = _owner;\n        _setFallbackHandler(_handler);\n        _setupModules(address(0), bytes(\"\"));\n    }\n\n    /**\n     * @dev Gnosis style transaction with optional repay in native tokens OR ERC20\n     * @dev Allows to execute a transaction confirmed by required signature/s and then pays the account that submitted the transaction.\n     * @dev Function name optimized to have hash started with zeros to make this function calls cheaper\n     * @notice The fees are always transferred, even if the user transaction fails.\n     * @param _tx Smart Account transaction\n     * @param refundInfo Required information for gas refunds\n     * @param signatures Packed signature/s data ({bytes32 r}{bytes32 s}{uint8 v})\n     */\n    function execTransaction_S6W(\n        Transaction memory _tx,\n        FeeRefund memory refundInfo,\n        bytes memory signatures\n    ) public payable virtual nonReentrant returns (bool success) {\n        uint256 startGas = gasleft();\n        bytes32 txHash;\n        // Use scope here to limit variable lifetime and prevent `stack too deep` errors\n        {\n            bytes memory txHashData = encodeTransactionData(\n                // Transaction info\n                _tx,\n                // Payment info\n                refundInfo,\n                // Signature info\n                nonces[1]++\n            );\n            txHash = keccak256(txHashData);\n            checkSignatures(txHash, signatures);\n        }\n\n        // We require some gas to emit the events (at least 2500) after the execution and some to perform code until the execution (500)\n        // We also include the 1/64 in the check that is not send along with a call to counteract potential shortings because of EIP-150\n        // Bitshift left 6 bits means multiplying by 64, just more gas efficient\n        if (\n            gasleft() <\n            Math.max((_tx.targetTxGas << 6) / 63, _tx.targetTxGas + 2500) + 500\n        )\n            revert NotEnoughGasLeft(\n                gasleft(),\n                Math.max((_tx.targetTxGas << 6) / 63, _tx.targetTxGas + 2500) +\n                    500\n            );\n        // Use scope here to limit variable lifetime and prevent `stack too deep` errors\n        {\n            // If the gasPrice is 0 we assume that nearly all available gas can be used (it is always more than targetTxGas)\n            // We only substract 2500 (compared to the 3000 before) to ensure that the amount passed is still higher than targetTxGas\n            success = execute(\n                _tx.to,\n                _tx.value,\n                _tx.data,\n                _tx.operation,\n                refundInfo.gasPrice == 0 ? (gasleft() - 2500) : _tx.targetTxGas\n            );\n            // If no targetTxGas and no gasPrice was set (e.g. both are 0), then the internal tx is required to be successful\n            // This makes it possible to use `estimateGas` without issues, as it searches for the minimum gas where the tx doesn't revert\n            if (!success && _tx.targetTxGas == 0 && refundInfo.gasPrice == 0)\n                revert CanNotEstimateGas(\n                    _tx.targetTxGas,\n                    refundInfo.gasPrice,\n                    success\n                );\n            // We transfer the calculated tx costs to the tx.origin to avoid sending it to intermediate contracts that have made calls\n            uint256 payment;\n            if (refundInfo.gasPrice != 0) {\n                payment = handlePayment(\n                    startGas - gasleft(),\n                    refundInfo.baseGas,\n                    refundInfo.gasPrice,\n                    refundInfo.tokenGasPriceFactor,\n                    refundInfo.gasToken,\n                    refundInfo.refundReceiver\n                );\n                emit AccountHandlePayment(txHash, payment);\n            }\n        }\n    }\n\n    /**\n     * @dev Interface function with the standard name for execTransaction_S6W\n     */\n    function execTransaction(\n        Transaction memory _tx,\n        FeeRefund memory refundInfo,\n        bytes memory signatures\n    ) external payable virtual override returns (bool) {\n        return execTransaction_S6W(_tx, refundInfo, signatures);\n    }\n\n    /**\n     * @dev Handles the payment for a transaction refund from Smart Account to Relayer.\n     * @param gasUsed Gas used by the transaction.\n     * @param baseGas Gas costs that are independent of the transaction execution\n     * (e.g. base transaction fee, signature check, payment of the refund, emitted events).\n     * @param gasPrice Gas price / TokenGasPrice (gas price in the context of token using offchain price feeds)\n     * that should be used for the payment calculation.\n     * @param tokenGasPriceFactor factor by which calculated token gas price is already multiplied.\n     * @param gasToken Token address (or 0 if ETH) that is used for the payment.\n     * @return payment The amount of payment made in the specified token.\n     */\n    function handlePayment(\n        uint256 gasUsed,\n        uint256 baseGas,\n        uint256 gasPrice,\n        uint256 tokenGasPriceFactor,\n        address gasToken,\n        address payable refundReceiver\n    ) private returns (uint256 payment) {\n        if (tokenGasPriceFactor == 0) revert TokenGasPriceFactorCanNotBeZero();\n        // solhint-disable-next-line avoid-tx-origin\n        address payable receiver = refundReceiver == address(0)\n            ? payable(tx.origin)\n            : refundReceiver;\n        if (gasToken == address(0)) {\n            // For ETH we will only adjust the gas price to not be higher than the actual used gas price\n            payment =\n                (gasUsed + baseGas) *\n                (gasPrice < tx.gasprice ? gasPrice : tx.gasprice);\n            bool success;\n            assembly {\n                success := call(gas(), receiver, payment, 0, 0, 0, 0)\n            }\n            if (!success)\n                revert TokenTransferFailed(address(0), receiver, payment);\n        } else {\n            payment =\n                ((gasUsed + baseGas) * (gasPrice)) /\n                (tokenGasPriceFactor);\n            if (!transferToken(gasToken, receiver, payment))\n                revert TokenTransferFailed(gasToken, receiver, payment);\n        }\n    }\n\n    /**\n     * @dev Allows to estimate a transaction.\n     * @notice This method is only meant for estimation purpose, therefore the call will always revert and encode the result in the revert data.\n     * @notice Call this method to get an estimate of the handlePayment costs that are deducted with `execTransaction`\n     * @param gasUsed Gas used by the transaction.\n     * @param baseGas Gas costs that are independent of the transaction execution\n     * (e.g. base transaction fee, signature check, payment of the refund, emitted events).\n     * @param gasPrice Gas price / TokenGasPrice (gas price in the context of token using offchain price feeds)\n     * that should be used for the payment calculation.\n     * @param tokenGasPriceFactor factor by which calculated token gas price is already multiplied.\n     * @param gasToken Token address (or 0 if ETH) that is used for the payment.\n     * @return requiredGas Estimate of refunds\n     */\n    function handlePaymentRevert(\n        uint256 gasUsed,\n        uint256 baseGas,\n        uint256 gasPrice,\n        uint256 tokenGasPriceFactor,\n        address gasToken,\n        address payable refundReceiver\n    ) external returns (uint256 requiredGas) {\n        require(tokenGasPriceFactor != 0, \"invalid tokenGasPriceFactor\");\n        uint256 startGas = gasleft();\n        // solhint-disable-next-line avoid-tx-origin\n        address payable receiver = refundReceiver == address(0)\n            ? payable(tx.origin)\n            : refundReceiver;\n        if (gasToken == address(0)) {\n            // For ETH we will only adjust the gas price to not be higher than the actual used gas price\n            uint256 payment = (gasUsed + baseGas) *\n                (gasPrice < tx.gasprice ? gasPrice : tx.gasprice);\n            bool success;\n            assembly {\n                success := call(gas(), receiver, payment, 0, 0, 0, 0)\n            }\n            if (!success)\n                revert TokenTransferFailed(address(0), receiver, payment);\n        } else {\n            uint256 payment = ((gasUsed + baseGas) * (gasPrice)) /\n                (tokenGasPriceFactor);\n            if (!transferToken(gasToken, receiver, payment))\n                revert TokenTransferFailed(gasToken, receiver, payment);\n        }\n        unchecked {\n            requiredGas = startGas - gasleft();\n        }\n        revert(string(abi.encodePacked(requiredGas)));\n    }\n\n    /**\n     * @dev Checks whether the signature provided is valid for the provided data, hash. Will revert otherwise.\n     * @param dataHash Hash of the data (could be either a message hash or transaction hash)\n     * @param signatures Signature data that should be verified. Can be ECDSA signature, contract signature (EIP-1271) or approved hash.\n     */\n    function checkSignatures(\n        bytes32 dataHash,\n        bytes memory signatures\n    ) public view virtual {\n        require(signatures.length >= 65, \"Invalid signatures length\");\n        uint8 v;\n        bytes32 r;\n        bytes32 s;\n        address _signer;\n        (v, r, s) = signatureSplit(signatures);\n        if (v == 0) {\n            // If v is 0 then it is a contract signature\n            // When handling contract signatures the address of the signer contract is encoded into r\n            _signer = address(uint160(uint256(r)));\n\n            // Check that signature data pointer (s) is not pointing inside the static part of the signatures bytes\n            // Here we check that the pointer is not pointing inside the part that is being processed\n            if (uint256(s) < 65)\n                revert WrongContractSignatureFormat(uint256(s), 0, 0);\n\n            // Check if the contract signature is in bounds: start of data is s + 32 and end is start + signature length\n            uint256 contractSignatureLen;\n            // solhint-disable-next-line no-inline-assembly\n            assembly {\n                contractSignatureLen := mload(add(add(signatures, s), 0x20))\n            }\n            if (uint256(s) + 32 + contractSignatureLen > signatures.length)\n                revert WrongContractSignatureFormat(\n                    uint256(s),\n                    contractSignatureLen,\n                    signatures.length\n                );\n\n            // Check signature\n            bytes memory contractSignature;\n            // solhint-disable-next-line no-inline-assembly\n            assembly {\n                // The signature data for contract signatures is appended to the concatenated signatures and the offset is stored in s\n                contractSignature := add(add(signatures, s), 0x20)\n            }\n            if (\n                ISignatureValidator(_signer).isValidSignature(\n                    dataHash,\n                    contractSignature\n                ) != EIP1271_MAGIC_VALUE\n            ) revert WrongContractSignature(contractSignature);\n        } else if (v > 30) {\n            // If v > 30 then default va (27,28) has been adjusted for eth_sign flow\n            // To support eth_sign and similar we adjust v and hash the messageHash with the Ethereum message prefix before applying ecrecover\n            (_signer, ) = dataHash.toEthSignedMessageHash().tryRecover(\n                v - 4,\n                r,\n                s\n            );\n        } else {\n            (_signer, ) = dataHash.tryRecover(v, r, s);\n        }\n        if (_signer != owner) revert InvalidSignature(_signer, owner);\n    }\n\n    /**\n     * @dev Allows to estimate a transaction.\n     *      This method is only meant for estimation purpose, therefore the call will always revert and encode the result in the revert data.\n     *      Since the `estimateGas` function includes refunds, call this method to get an estimated of the costs that are deducted from the wallet with `execTransaction`\n     * @param to Destination address of the transaction.\n     * @param value Ether value of transaction.\n     * @param data Data payload of transaction.\n     * @param operation Operation type of transaction.\n     * @return Estimate without refunds and overhead fees (base transaction and payload data gas costs).\n     */\n    function requiredTxGas(\n        address to,\n        uint256 value,\n        bytes calldata data,\n        Enum.Operation operation\n    ) external returns (uint256) {\n        uint256 startGas = gasleft();\n        // We don't provide an error message here, as we use it to return the estimate\n        if (!execute(to, value, data, operation, gasleft()))\n            revert ExecutionFailed();\n        // Convert response to string and return via error message\n        unchecked {\n            revert(string(abi.encodePacked(startGas - gasleft())));\n        }\n    }\n\n    /**\n     * @dev Returns hash to be signed by owner.\n     * @param to Destination address.\n     * @param value Ether value.\n     * @param data Data payload.\n     * @param operation Operation type.\n     * @param targetTxGas Fas that should be used for the internal Smart Account transaction.\n     * @param baseGas Additional Gas costs for data used to trigger the transaction.\n     * @param gasPrice Maximum gas price/ token gas price that should be used for this transaction.\n     * @param tokenGasPriceFactor factor by which calculated token gas price is already multiplied.\n     * @param gasToken Token address (or 0 if ETH) that is used for the payment.\n     * @param refundReceiver Address of receiver of gas payment (or 0 if tx.origin).\n     * @param _nonce Transaction nonce.\n     * @return Transaction hash.\n     */\n    function getTransactionHash(\n        address to,\n        uint256 value,\n        bytes calldata data,\n        Enum.Operation operation,\n        uint256 targetTxGas,\n        uint256 baseGas,\n        uint256 gasPrice,\n        uint256 tokenGasPriceFactor,\n        address gasToken,\n        address payable refundReceiver,\n        uint256 _nonce\n    ) public view returns (bytes32) {\n        Transaction memory _tx = Transaction({\n            to: to,\n            value: value,\n            data: data,\n            operation: operation,\n            targetTxGas: targetTxGas\n        });\n        FeeRefund memory refundInfo = FeeRefund({\n            baseGas: baseGas,\n            gasPrice: gasPrice,\n            tokenGasPriceFactor: tokenGasPriceFactor,\n            gasToken: gasToken,\n            refundReceiver: refundReceiver\n        });\n        return keccak256(encodeTransactionData(_tx, refundInfo, _nonce));\n    }\n\n    /**\n     * @dev Returns the bytes that are hashed to be signed by owner.\n     * @param _tx The wallet transaction to be signed.\n     * @param refundInfo Required information for gas refunds.\n     * @param _nonce Transaction nonce.\n     * @return transactionHash bytes that are hashed to be signed by the owner.\n     */\n    function encodeTransactionData(\n        Transaction memory _tx,\n        FeeRefund memory refundInfo,\n        uint256 _nonce\n    ) public view returns (bytes memory) {\n        bytes32 accountTxHash = keccak256(\n            abi.encode(\n                ACCOUNT_TX_TYPEHASH,\n                _tx.to,\n                _tx.value,\n                keccak256(_tx.data),\n                _tx.operation,\n                _tx.targetTxGas,\n                refundInfo.baseGas,\n                refundInfo.gasPrice,\n                refundInfo.tokenGasPriceFactor,\n                refundInfo.gasToken,\n                refundInfo.refundReceiver,\n                _nonce\n            )\n        );\n        return\n            bytes.concat(\n                bytes1(0x19),\n                bytes1(0x01),\n                domainSeparator(),\n                accountTxHash\n            );\n    }\n\n    /**\n     * @dev Utility method to be able to transfer native tokens out of Smart Account\n     * @notice only owner/ signatory of Smart Account with enough gas to spend can call this method\n     * @notice While enabling multisig module and renouncing ownership this will not work\n     * @param dest Destination address\n     * @param amount Amount of native tokens\n     */\n    function transfer(address payable dest, uint256 amount) external onlyOwner {\n        if (dest == address(0)) revert TransferToZeroAddressAttempt();\n        bool success;\n        assembly {\n            success := call(gas(), dest, amount, 0, 0, 0, 0)\n        }\n        if (!success) revert TokenTransferFailed(address(0), dest, amount);\n    }\n\n    /**\n     * @dev Utility method to be able to transfer ERC20 tokens out of Smart Account\n     * @notice only owner/ signatory of Smart Account with enough gas to spend can call this method\n     * @notice While enabling multisig module and renouncing ownership this will not work\n     * @param token Token address\n     * @param dest Destination/ Receiver address\n     * @param amount Amount of tokens\n     */\n    function pullTokens(\n        address token,\n        address dest,\n        uint256 amount\n    ) external onlyOwner {\n        if (dest == address(0)) revert TransferToZeroAddressAttempt();\n        if (!transferToken(token, dest, amount))\n            revert TokenTransferFailed(token, dest, amount);\n    }\n\n    /**\n     * @dev Execute a transaction (called directly from owner, or by entryPoint)\n     * @notice Name is optimized for this method to be cheaper to be called\n     * @param dest Address of the contract to call\n     * @param value Amount of native tokens to send along with the transaction\n     * @param func Data of the transaction\n     */\n    function executeCall_s1m(\n        address dest,\n        uint256 value,\n        bytes calldata func\n    ) public {\n        _requireFromEntryPointOrOwner();\n        _call(dest, value, func);\n    }\n\n    /**\n     * @dev Interface function with the standard name for executeCall_s1m\n     * @param dest Address of the contract to call\n     * @param value Amount of native tokens to send along with the transaction\n     * @param func Data of the transaction\n     */\n    function executeCall(\n        address dest,\n        uint256 value,\n        bytes calldata func\n    ) external {\n        executeCall_s1m(dest, value, func);\n    }\n\n    /**\n     * @dev Execute a sequence of transactions\n     * @notice Name is optimized for this method to be cheaper to be called\n     * @param dest Addresses of the contracts to call\n     * @param value Amounts of native tokens to send along with the transactions\n     * @param func Data of the transactions\n     */\n    function executeBatchCall_4by(\n        address[] calldata dest,\n        uint256[] calldata value,\n        bytes[] calldata func\n    ) public {\n        _requireFromEntryPointOrOwner();\n        if (\n            dest.length == 0 ||\n            dest.length != value.length ||\n            value.length != func.length\n        ) revert WrongBatchProvided(dest.length, value.length, func.length);\n        for (uint256 i; i < dest.length; ) {\n            _call(dest[i], value[i], func[i]);\n            unchecked {\n                ++i;\n            }\n        }\n    }\n\n    /**\n     * @dev Interface function with the standard name for executeBatchCall_4by\n     * @param dest Addresses of the contracts to call\n     * @param value Amounts of native tokens to send along with the transactions\n     * @param func Data of the transactions\n     */\n    function executeBatchCall(\n        address[] calldata dest,\n        uint256[] calldata value,\n        bytes[] calldata func\n    ) external {\n        executeBatchCall_4by(dest, value, func);\n    }\n\n    /**\n     * @dev internal method that fecilitates the extenral calls from SmartAccount\n     * @dev similar to execute() of Executor.sol\n     * @param target destination address contract/non-contract\n     * @param value amount of native tokens\n     * @param data function singature of destination\n     */\n    function _call(address target, uint256 value, bytes memory data) internal {\n        assembly {\n            let success := call(\n                gas(),\n                target,\n                value,\n                add(data, 0x20),\n                mload(data),\n                0,\n                0\n            )\n            let ptr := mload(0x40)\n            returndatacopy(ptr, 0, returndatasize())\n            if iszero(success) {\n                revert(ptr, returndatasize())\n            }\n        }\n    }\n\n    /**\n     * @dev Implements the template method of BaseAccount and validates the user's signature for a given operation.\n     * @notice This function is marked as internal and virtual, and it overrides the BaseAccount function of the same name.\n     * @param userOp The user operation to be validated, provided as a `UserOperation` calldata struct.\n     * @param userOpHash The hashed version of the user operation, provided as a `bytes32` value.\n     */\n    function _validateSignature(\n        UserOperation calldata userOp,\n        bytes32 userOpHash\n    ) internal virtual override returns (uint256 validationData) {\n        // below changes need formal verification.\n        bytes calldata userOpData = userOp.callData;\n        if (userOpData.length > 0) {\n            bytes4 methodSig = bytes4(userOpData[:4]);\n            // If method to be called is executeCall then only check for module transaction\n            if (methodSig == this.executeCall.selector) {\n                (address _to, uint _amount, bytes memory _data) = abi.decode(\n                    userOpData[4:],\n                    (address, uint, bytes)\n                );\n                if (address(modules[_to]) != address(0))\n                    return IModule(_to).validateSignature(userOp, userOpHash);\n            }\n        }\n        bytes32 hash = userOpHash.toEthSignedMessageHash();\n        if (owner != hash.recover(userOp.signature))\n            return SIG_VALIDATION_FAILED;\n        return 0;\n    }\n\n    /**\n     * Implementation of ISignatureValidator (see `interfaces/ISignatureValidator.sol`)\n     * @dev If owner is a smart-contract (other smart contract wallet or module, that controls\n     *      signature verifications - like multisig), forward isValidSignature request to it.\n     *      In case of multisig, _signature can be several concatenated signatures\n     *      If owner is EOA, perform a regular ecrecover.\n     * @param _dataHash 32 bytes hash of the data signed on the behalf of address(msg.sender)\n     * @param _signature Signature byte array associated with _dataHash\n     * @return bytes4 value.\n     */\n    function isValidSignature(\n        bytes32 _dataHash,\n        bytes memory _signature\n    ) public view override returns (bytes4) {\n        if (owner.code.length > 0) {\n            return\n                ISignatureValidator(owner).isValidSignature(\n                    _dataHash,\n                    _signature\n                );\n        }\n        if (owner == _dataHash.recover(_signature)) {\n            return EIP1271_MAGIC_VALUE;\n        }\n        return bytes4(0xffffffff);\n    }\n\n    /**\n     * @dev Check current account deposit in the entryPoint\n     */\n    function getDeposit() public view returns (uint256) {\n        return entryPoint().balanceOf(address(this));\n    }\n\n    /**\n     * @dev Deposit more funds for this account in the entryPoint\n     */\n    function addDeposit() public payable {\n        entryPoint().depositTo{value: msg.value}(address(this));\n    }\n\n    /**\n     * @dev Withdraw value from the account's deposit\n     * @param withdrawAddress target to send to\n     * @param amount to withdraw\n     */\n    function withdrawDepositTo(\n        address payable withdrawAddress,\n        uint256 amount\n    ) public payable onlyOwner {\n        entryPoint().withdrawTo(withdrawAddress, amount);\n    }\n\n    /**\n     * @notice Query if a contract implements an interface\n     * @param _interfaceId The interface identifier, as specified in ERC165\n     * @return `true` if the contract implements `_interfaceID`\n     */\n    function supportsInterface(\n        bytes4 _interfaceId\n    ) external view virtual override returns (bool) {\n        return _interfaceId == type(IERC165).interfaceId; // 0x01ffc9a7\n    }\n\n    /**\n     * @dev This function is a special fallback function that is triggered when the contract receives Ether.\n     * It logs an event indicating the amount of Ether received and the sender's address.\n     * @notice This function is marked as external and payable, meaning it can be called from external\n     * sources and accepts Ether as payment.\n     */\n    receive() external payable {\n        if (address(this) == _self) revert DelegateCallsOnly();\n        emit SmartAccountReceivedNativeToken(msg.sender, msg.value);\n    }\n}\n"},"contracts/smart-contract-wallet/SmartAccountFactory.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity 0.8.17;\n\nimport \"./Proxy.sol\";\nimport \"./BaseSmartAccount.sol\";\nimport {DefaultCallbackHandler} from \"./handler/DefaultCallbackHandler.sol\";\nimport {SmartAccountFactoryErrors} from \"./common/Errors.sol\";\n\n/**\n * @title Smart Account Factory - factory responsible for deploying Smart Accounts using CREATE2 and CREATE\n * @dev It deploys Smart Accounts as proxies pointing to `basicImplementation` that is immutable.\n *      This allows keeping the same address for the same Smart Account owner on various chains via CREATE2\n * @author Chirag Titiya - <chirag@biconomy.io>\n */\ncontract SmartAccountFactory {\n    address public immutable basicImplementation;\n    DefaultCallbackHandler public immutable minimalHandler;\n    bytes32 constant CREATE2_PREFIX =\n        0x2020dba91b30cc0006188af794c2fb30dd8520db7e2c088b7fc7c103c00ca494;\n\n    event AccountCreation(\n        address indexed account,\n        address indexed owner,\n        uint256 indexed index\n    );\n    event AccountCreationWithoutIndex(\n        address indexed account,\n        address indexed owner\n    );\n\n    constructor(address _basicImplementation) {\n        require(\n            _basicImplementation != address(0),\n            \"implementation cannot be zero\"\n        );\n        basicImplementation = _basicImplementation;\n        minimalHandler = new DefaultCallbackHandler();\n    }\n\n    /**\n     * @dev Allows to retrieve the creation code used for the Proxy deployment.\n     * @return The creation code for the Proxy.\n     */\n    function accountCreationCode() public pure returns (bytes memory) {\n        return type(Proxy).creationCode;\n    }\n\n    /**\n     * @notice Deploys account using create2 and points it to basicImplementation\n     * @param _owner EOA signatory for the account to be deployed\n     * @param _index extra salt that allows to deploy more account if needed for same EOA (default 0)\n     */\n    function deployCounterFactualAccount(\n        address _owner,\n        uint256 _index\n    ) public returns (address proxy) {\n        // create initializer data based on init method, _owner and minimalHandler\n        bytes memory initializer = getInitializer(_owner);\n\n        bytes32 salt = keccak256(\n            abi.encodePacked(keccak256(initializer), _index)\n        );\n\n        bytes memory deploymentData = abi.encodePacked(\n            type(Proxy).creationCode,\n            uint256(uint160(basicImplementation))\n        );\n\n        // solhint-disable-next-line no-inline-assembly\n        assembly {\n            proxy := create2(\n                0x0,\n                add(0x20, deploymentData),\n                mload(deploymentData),\n                salt\n            )\n        }\n        require(address(proxy) != address(0), \"Create2 call failed\");\n\n        // calldata for init method\n        if (initializer.length > 0) {\n            // solhint-disable-next-line no-inline-assembly\n            assembly {\n                if eq(\n                    call(\n                        gas(),\n                        proxy,\n                        0,\n                        add(initializer, 0x20),\n                        mload(initializer),\n                        0,\n                        0\n                    ),\n                    0\n                ) {\n                    revert(0, 0)\n                }\n            }\n        }\n        emit AccountCreation(proxy, _owner, _index);\n    }\n\n    /**\n     * @notice Deploys account using create and points it to _implementation\n     * @param _owner EOA signatory for the account to be deployed\n     * @return proxy address of the deployed account\n     */\n    function deployAccount(address _owner) public returns (address proxy) {\n        bytes memory deploymentData = abi.encodePacked(\n            type(Proxy).creationCode,\n            uint256(uint160(basicImplementation))\n        );\n\n        // solhint-disable-next-line no-inline-assembly\n        assembly {\n            proxy := create(\n                0x0,\n                add(0x20, deploymentData),\n                mload(deploymentData)\n            )\n        }\n        require(address(proxy) != address(0), \"Create call failed\");\n\n        bytes memory initializer = getInitializer(_owner);\n\n        // calldata for init method\n        if (initializer.length > 0) {\n            // solhint-disable-next-line no-inline-assembly\n            assembly {\n                if eq(\n                    call(\n                        gas(),\n                        proxy,\n                        0,\n                        add(initializer, 0x20),\n                        mload(initializer),\n                        0,\n                        0\n                    ),\n                    0\n                ) {\n                    revert(0, 0)\n                }\n            }\n        }\n        emit AccountCreationWithoutIndex(proxy, _owner);\n    }\n\n    /**\n     * @dev Allows to retrieve the initializer data for the account.\n     * @param _owner EOA signatory for the account to be deployed\n     * @return initializer bytes for init method\n     */\n    function getInitializer(\n        address _owner\n    ) internal view returns (bytes memory) {\n        return\n            abi.encodeCall(\n                BaseSmartAccount.init,\n                (_owner, address(minimalHandler))\n            );\n    }\n\n    /**\n     * @notice Allows to find out account address prior to deployment\n     * @param _owner EOA signatory for the account to be deployed\n     * @param _index extra salt that allows to deploy more accounts if needed for same EOA (default 0)\n     */\n    function getAddressForCounterFactualAccount(\n        address _owner,\n        uint256 _index\n    ) external view returns (address _account) {\n        // create initializer data based on init method, _owner and minimalHandler\n        bytes memory initializer = getInitializer(_owner);\n        bytes memory code = abi.encodePacked(\n            type(Proxy).creationCode,\n            uint256(uint160(basicImplementation))\n        );\n        bytes32 salt = keccak256(\n            abi.encodePacked(keccak256(initializer), _index)\n        );\n\n        bytes32 hash = keccak256(\n            bytes.concat(\n                CREATE2_PREFIX,\n                bytes32(uint256(uint160(address(this)))),\n                salt,\n                keccak256(code),\n                initializer\n            )\n        );\n        _account = address(uint160(uint256(hash)));\n    }\n    // off-chain calculation\n    // return ethers.utils.getCreate2Address(<factory address>, <create2 salt>, ethers.utils.keccak256(creationCode + implementation));\n}\n"},"contracts/smart-contract-wallet/utils/GasEstimatorSmartAccount.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity 0.8.17;\n\nimport \"../SmartAccountFactory.sol\";\n\n// Contract for estimating gas on undeployed smart account\n// Deploys a smart account and then calls the appropriate method\ncontract GasEstimatorSmartAccount {\n    function estimate(\n        address _actualWallet,\n        address _factory,\n        address _owner,\n        uint256 _index,\n        bytes calldata _data // execTransaction data // counterFactual wallet should have assets if required\n    ) external returns (bool success, bytes memory result, uint256 gas) {\n        // solhint-disable\n        uint256 initialGas = gasleft();\n        address _wallet = SmartAccountFactory(_factory)\n            .deployCounterFactualAccount(_owner, _index);\n        (success, result) = _actualWallet.call(_data);\n        gas = initialGas - gasleft();\n        // solhint-enable\n    }\n}\n"}},"settings":{"optimizer":{"enabled":true,"mode":"3"},"outputSelection":{"*":{"*":["abi","evm.methodIdentifiers","metadata","devdoc","userdoc","storageLayout"],"":["ast"]}},"libraries":{"":{"__CACHE_BREAKER__":"0x00000000d41867734bbee4c6863d9255b2b06ac1"}}}},"output":{"errors":[{"component":"general","errorCode":"2519","formattedMessage":"Warning: This declaration shadows an existing declaration.\n   --> contracts/smart-contract-wallet/BaseSmartAccount.sol:109:29:\n    |\n109 |     function _validateNonce(uint256 nonce) internal view virtual {}\n    |                             ^^^^^^^^^^^^^\nNote: The shadowed declaration is here:\n  --> contracts/smart-contract-wallet/BaseSmartAccount.sol:48:5:\n   |\n48 |     function nonce() public view virtual returns (uint256) {\n   |     ^ (Relevant source part starts here and spans across multiple lines).\n\n","message":"This declaration shadows an existing declaration.","severity":"warning","sourceLocation":{"file":"contracts/smart-contract-wallet/BaseSmartAccount.sol","start":4395,"end":4408},"type":"Warning"},{"component":"general","errorCode":"9302","formattedMessage":"Warning: Return value of low-level calls not used.\n   --> contracts/smart-contract-wallet/BaseSmartAccount.sol:121:13:\n    |\n121 |             payable(msg.sender).call{\n    |             ^ (Relevant source part starts here and spans across multiple lines).\n\n","message":"Return value of low-level calls not used.","severity":"warning","sourceLocation":{"file":"contracts/smart-contract-wallet/BaseSmartAccount.sol","start":5063,"end":5189},"type":"Warning"},{"component":"general","errorCode":"2072","formattedMessage":"Warning: Unused local variable.\n   --> contracts/smart-contract-wallet/SmartAccount.sol:736:31:\n    |\n736 |                 (address _to, uint _amount, bytes memory _data) = abi.decode(\n    |                               ^^^^^^^^^^^^\n\n","message":"Unused local variable.","severity":"warning","sourceLocation":{"file":"contracts/smart-contract-wallet/SmartAccount.sol","start":30356,"end":30368},"type":"Warning"},{"component":"general","errorCode":"2072","formattedMessage":"Warning: Unused local variable.\n   --> contracts/smart-contract-wallet/SmartAccount.sol:736:45:\n    |\n736 |                 (address _to, uint _amount, bytes memory _data) = abi.decode(\n    |                                             ^^^^^^^^^^^^^^^^^^\n\n","message":"Unused local variable.","severity":"warning","sourceLocation":{"file":"contracts/smart-contract-wallet/SmartAccount.sol","start":30370,"end":30388},"type":"Warning"},{"component":"general","errorCode":"2072","formattedMessage":"Warning: Unused local variable.\n  --> contracts/smart-contract-wallet/utils/GasEstimatorSmartAccount.sol:18:9:\n   |\n18 |         address _wallet = SmartAccountFactory(_factory)\n   |         ^^^^^^^^^^^^^^^\n\n","message":"Unused local variable.","severity":"warning","sourceLocation":{"file":"contracts/smart-contract-wallet/utils/GasEstimatorSmartAccount.sol","start":641,"end":656},"type":"Warning"},{"component":"general","errorCode":null,"formattedMessage":"\n┌──────────────────────────────────────────────────────────────────────────────────────────────────┐\n│ Warning: It looks like you are using 'ecrecover' to validate a signature of a user account.      │\n│ zkSync Era comes with native account abstraction support, therefore it is highly recommended NOT │\n│ to rely on the fact that the account has an ECDSA private key attached to it since accounts might│\n│ implement other signature schemes.                                                               │\n│ Read more about Account Abstraction at https://v2-docs.zksync.io/dev/developer-guides/aa.html    │\n└──────────────────────────────────────────────────────────────────────────────────────────────────┘\n--> @openzeppelin/contracts/utils/cryptography/ECDSA.sol\n","message":"\n┌──────────────────────────────────────────────────────────────────────────────────────────────────┐\n│ Warning: It looks like you are using 'ecrecover' to validate a signature of a user account.      │\n│ zkSync Era comes with native account abstraction support, therefore it is highly recommended NOT │\n│ to rely on the fact that the account has an ECDSA private key attached to it since accounts might│\n│ implement other signature schemes.                                                               │\n│ Read more about Account Abstraction at https://v2-docs.zksync.io/dev/developer-guides/aa.html    │\n└──────────────────────────────────────────────────────────────────────────────────────────────────┘","severity":"warning","sourceLocation":{"file":"8","start":6374,"end":6398},"type":"Warning"},{"component":"general","errorCode":null,"formattedMessage":"\n┌──────────────────────────────────────────────────────────────────────────────────────────────────┐\n│ Warning: You are checking for 'tx.origin' in your code, which might lead to unexpected behavior. │\n│ zkSync Era comes with native account abstraction support, and therefore the initiator of a       │\n│ transaction might be different from the contract calling your code. It is highly recommended NOT │\n│ to rely on tx.origin, but use msg.sender instead.                                                │\n│ Read more about Account Abstraction at https://v2-docs.zksync.io/dev/developer-guides/aa.html    │\n└──────────────────────────────────────────────────────────────────────────────────────────────────┘\n--> contracts/smart-contract-wallet/SmartAccount.sol\n","message":"\n┌──────────────────────────────────────────────────────────────────────────────────────────────────┐\n│ Warning: You are checking for 'tx.origin' in your code, which might lead to unexpected behavior. │\n│ zkSync Era comes with native account abstraction support, and therefore the initiator of a       │\n│ transaction might be different from the contract calling your code. It is highly recommended NOT │\n│ to rely on tx.origin, but use msg.sender instead.                                                │\n│ Read more about Account Abstraction at https://v2-docs.zksync.io/dev/developer-guides/aa.html    │\n└──────────────────────────────────────────────────────────────────────────────────────────────────┘","severity":"warning","sourceLocation":{"file":"12","start":14337,"end":14346},"type":"Warning"},{"component":"general","errorCode":null,"formattedMessage":"\n┌──────────────────────────────────────────────────────────────────────────────────────────────────┐\n│ Warning: You are checking for 'tx.origin' in your code, which might lead to unexpected behavior. │\n│ zkSync Era comes with native account abstraction support, and therefore the initiator of a       │\n│ transaction might be different from the contract calling your code. It is highly recommended NOT │\n│ to rely on tx.origin, but use msg.sender instead.                                                │\n│ Read more about Account Abstraction at https://v2-docs.zksync.io/dev/developer-guides/aa.html    │\n└──────────────────────────────────────────────────────────────────────────────────────────────────┘\n--> contracts/smart-contract-wallet/SmartAccount.sol\n","message":"\n┌──────────────────────────────────────────────────────────────────────────────────────────────────┐\n│ Warning: You are checking for 'tx.origin' in your code, which might lead to unexpected behavior. │\n│ zkSync Era comes with native account abstraction support, and therefore the initiator of a       │\n│ transaction might be different from the contract calling your code. It is highly recommended NOT │\n│ to rely on tx.origin, but use msg.sender instead.                                                │\n│ Read more about Account Abstraction at https://v2-docs.zksync.io/dev/developer-guides/aa.html    │\n└──────────────────────────────────────────────────────────────────────────────────────────────────┘","severity":"warning","sourceLocation":{"file":"12","start":16621,"end":16630},"type":"Warning"},{"component":"general","errorCode":null,"formattedMessage":"\n┌──────────────────────────────────────────────────────────────────────────────────────────────────┐\n│ Warning: Your code or one of its dependencies uses the 'extcodesize' instruction, which is       │\n│ usually needed in the following cases:                                                           │\n│   1. To detect whether an address belongs to a smart contract.                                   │\n│   2. To detect whether the deploy code execution has finished.                                   │\n│ zkSync Era comes with native account abstraction support (so accounts are smart contracts,       │\n│ including private-key controlled EOAs), and you should avoid differentiating between contracts   │\n│ and non-contract addresses.                                                                      │\n└──────────────────────────────────────────────────────────────────────────────────────────────────┘\n--> contracts/smart-contract-wallet/libs/LibAddress.sol\n","message":"\n┌──────────────────────────────────────────────────────────────────────────────────────────────────┐\n│ Warning: Your code or one of its dependencies uses the 'extcodesize' instruction, which is       │\n│ usually needed in the following cases:                                                           │\n│   1. To detect whether an address belongs to a smart contract.                                   │\n│   2. To detect whether the deploy code execution has finished.                                   │\n│ zkSync Era comes with native account abstraction support (so accounts are smart contracts,       │\n│ including private-key controlled EOAs), and you should avoid differentiating between contracts   │\n│ and non-contract addresses.                                                                      │\n└──────────────────────────────────────────────────────────────────────────────────────────────────┘","severity":"warning","sourceLocation":{"file":"30","start":567,"end":587},"type":"Warning"}],"version":"0.8.17","long_version":"0.8.17+commit.8df45f5f.Darwin.appleclang","zk_version":"1.3.10","sources":{"@account-abstraction/contracts/core/Helpers.sol":{"id":0,"ast":{"absolutePath":"@account-abstraction/contracts/core/Helpers.sol","exportedSymbols":{"ValidationData":[8],"_intersectTimeRange":[152],"_packValidationData":[189,227],"_parseValidationData":[67],"calldataKeccak":[237]},"id":238,"license":"GPL-3.0","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.8",".12"],"nodeType":"PragmaDirective","src":"36:24:0"},{"canonicalName":"ValidationData","id":8,"members":[{"constant":false,"id":3,"mutability":"mutable","name":"aggregator","nameLocation":"730:10:0","nodeType":"VariableDeclaration","scope":8,"src":"722:18:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2,"name":"address","nodeType":"ElementaryTypeName","src":"722:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5,"mutability":"mutable","name":"validAfter","nameLocation":"757:10:0","nodeType":"VariableDeclaration","scope":8,"src":"750:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":4,"name":"uint48","nodeType":"ElementaryTypeName","src":"750:6:0","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"},{"constant":false,"id":7,"mutability":"mutable","name":"validUntil","nameLocation":"784:10:0","nodeType":"VariableDeclaration","scope":8,"src":"777:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":6,"name":"uint48","nodeType":"ElementaryTypeName","src":"777:6:0","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"name":"ValidationData","nameLocation":"697:14:0","nodeType":"StructDefinition","scope":238,"src":"690:111:0","visibility":"public"},{"body":{"id":66,"nodeType":"Block","src":"997:346:0","statements":[{"assignments":[17],"declarations":[{"constant":false,"id":17,"mutability":"mutable","name":"aggregator","nameLocation":"1015:10:0","nodeType":"VariableDeclaration","scope":66,"src":"1007:18:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":16,"name":"address","nodeType":"ElementaryTypeName","src":"1007:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":25,"initialValue":{"arguments":[{"arguments":[{"id":22,"name":"validationData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10,"src":"1044:14:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":21,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1036:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":20,"name":"uint160","nodeType":"ElementaryTypeName","src":"1036:7:0","typeDescriptions":{}}},"id":23,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1036:23:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":19,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1028:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":18,"name":"address","nodeType":"ElementaryTypeName","src":"1028:7:0","typeDescriptions":{}}},"id":24,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1028:32:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"1007:53:0"},{"assignments":[27],"declarations":[{"constant":false,"id":27,"mutability":"mutable","name":"validUntil","nameLocation":"1077:10:0","nodeType":"VariableDeclaration","scope":66,"src":"1070:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":26,"name":"uint48","nodeType":"ElementaryTypeName","src":"1070:6:0","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"id":34,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":32,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":30,"name":"validationData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10,"src":"1097:14:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"313630","id":31,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1115:3:0","typeDescriptions":{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},"value":"160"},"src":"1097:21:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":29,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1090:6:0","typeDescriptions":{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"},"typeName":{"id":28,"name":"uint48","nodeType":"ElementaryTypeName","src":"1090:6:0","typeDescriptions":{}}},"id":33,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1090:29:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"nodeType":"VariableDeclarationStatement","src":"1070:49:0"},{"condition":{"commonType":{"typeIdentifier":"t_uint48","typeString":"uint48"},"id":37,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":35,"name":"validUntil","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":27,"src":"1133:10:0","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":36,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1147:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1133:15:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":47,"nodeType":"IfStatement","src":"1129:75:0","trueBody":{"id":46,"nodeType":"Block","src":"1150:54:0","statements":[{"expression":{"id":44,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":38,"name":"validUntil","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":27,"src":"1164:10:0","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"arguments":[{"id":41,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1182:6:0","typeDescriptions":{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"},"typeName":{"id":40,"name":"uint48","nodeType":"ElementaryTypeName","src":"1182:6:0","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"}],"id":39,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"1177:4:0","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":42,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1177:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint48","typeString":"type(uint48)"}},"id":43,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1190:3:0","memberName":"max","nodeType":"MemberAccess","src":"1177:16:0","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"src":"1164:29:0","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"id":45,"nodeType":"ExpressionStatement","src":"1164:29:0"}]}},{"assignments":[49],"declarations":[{"constant":false,"id":49,"mutability":"mutable","name":"validAfter","nameLocation":"1220:10:0","nodeType":"VariableDeclaration","scope":66,"src":"1213:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":48,"name":"uint48","nodeType":"ElementaryTypeName","src":"1213:6:0","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"id":59,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":57,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":52,"name":"validationData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10,"src":"1240:14:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},"id":55,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3438","id":53,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1259:2:0","typeDescriptions":{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},"value":"48"},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"313630","id":54,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1264:3:0","typeDescriptions":{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},"value":"160"},"src":"1259:8:0","typeDescriptions":{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"}}],"id":56,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"1258:10:0","typeDescriptions":{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"}},"src":"1240:28:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":51,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1233:6:0","typeDescriptions":{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"},"typeName":{"id":50,"name":"uint48","nodeType":"ElementaryTypeName","src":"1233:6:0","typeDescriptions":{}}},"id":58,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1233:36:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"nodeType":"VariableDeclarationStatement","src":"1213:56:0"},{"expression":{"arguments":[{"id":61,"name":"aggregator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":17,"src":"1301:10:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":62,"name":"validAfter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":49,"src":"1313:10:0","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},{"id":63,"name":"validUntil","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":27,"src":"1325:10:0","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint48","typeString":"uint48"},{"typeIdentifier":"t_uint48","typeString":"uint48"}],"id":60,"name":"ValidationData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8,"src":"1286:14:0","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_ValidationData_$8_storage_ptr_$","typeString":"type(struct ValidationData storage pointer)"}},"id":64,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1286:50:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_ValidationData_$8_memory_ptr","typeString":"struct ValidationData memory"}},"functionReturnParameters":15,"id":65,"nodeType":"Return","src":"1279:57:0"}]},"id":67,"implemented":true,"kind":"freeFunction","modifiers":[],"name":"_parseValidationData","nameLocation":"913:20:0","nodeType":"FunctionDefinition","parameters":{"id":11,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10,"mutability":"mutable","name":"validationData","nameLocation":"939:14:0","nodeType":"VariableDeclaration","scope":67,"src":"934:19:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9,"name":"uint","nodeType":"ElementaryTypeName","src":"934:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"933:21:0"},"returnParameters":{"id":15,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14,"mutability":"mutable","name":"data","nameLocation":"991:4:0","nodeType":"VariableDeclaration","scope":67,"src":"969:26:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_ValidationData_$8_memory_ptr","typeString":"struct ValidationData"},"typeName":{"id":13,"nodeType":"UserDefinedTypeName","pathNode":{"id":12,"name":"ValidationData","nameLocations":["969:14:0"],"nodeType":"IdentifierPath","referencedDeclaration":8,"src":"969:14:0"},"referencedDeclaration":8,"src":"969:14:0","typeDescriptions":{"typeIdentifier":"t_struct$_ValidationData_$8_storage_ptr","typeString":"struct ValidationData"}},"visibility":"internal"}],"src":"968:28:0"},"scope":238,"src":"904:439:0","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":151,"nodeType":"Block","src":"1515:804:0","statements":[{"assignments":[79],"declarations":[{"constant":false,"id":79,"mutability":"mutable","name":"accountValidationData","nameLocation":"1547:21:0","nodeType":"VariableDeclaration","scope":151,"src":"1525:43:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_ValidationData_$8_memory_ptr","typeString":"struct ValidationData"},"typeName":{"id":78,"nodeType":"UserDefinedTypeName","pathNode":{"id":77,"name":"ValidationData","nameLocations":["1525:14:0"],"nodeType":"IdentifierPath","referencedDeclaration":8,"src":"1525:14:0"},"referencedDeclaration":8,"src":"1525:14:0","typeDescriptions":{"typeIdentifier":"t_struct$_ValidationData_$8_storage_ptr","typeString":"struct ValidationData"}},"visibility":"internal"}],"id":83,"initialValue":{"arguments":[{"id":81,"name":"validationData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":69,"src":"1592:14:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":80,"name":"_parseValidationData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":67,"src":"1571:20:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_struct$_ValidationData_$8_memory_ptr_$","typeString":"function (uint256) pure returns (struct ValidationData memory)"}},"id":82,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1571:36:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_ValidationData_$8_memory_ptr","typeString":"struct ValidationData memory"}},"nodeType":"VariableDeclarationStatement","src":"1525:82:0"},{"assignments":[86],"declarations":[{"constant":false,"id":86,"mutability":"mutable","name":"pmValidationData","nameLocation":"1639:16:0","nodeType":"VariableDeclaration","scope":151,"src":"1617:38:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_ValidationData_$8_memory_ptr","typeString":"struct ValidationData"},"typeName":{"id":85,"nodeType":"UserDefinedTypeName","pathNode":{"id":84,"name":"ValidationData","nameLocations":["1617:14:0"],"nodeType":"IdentifierPath","referencedDeclaration":8,"src":"1617:14:0"},"referencedDeclaration":8,"src":"1617:14:0","typeDescriptions":{"typeIdentifier":"t_struct$_ValidationData_$8_storage_ptr","typeString":"struct ValidationData"}},"visibility":"internal"}],"id":90,"initialValue":{"arguments":[{"id":88,"name":"paymasterValidationData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":71,"src":"1679:23:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":87,"name":"_parseValidationData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":67,"src":"1658:20:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_struct$_ValidationData_$8_memory_ptr_$","typeString":"function (uint256) pure returns (struct ValidationData memory)"}},"id":89,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1658:45:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_ValidationData_$8_memory_ptr","typeString":"struct ValidationData memory"}},"nodeType":"VariableDeclarationStatement","src":"1617:86:0"},{"assignments":[92],"declarations":[{"constant":false,"id":92,"mutability":"mutable","name":"aggregator","nameLocation":"1721:10:0","nodeType":"VariableDeclaration","scope":151,"src":"1713:18:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":91,"name":"address","nodeType":"ElementaryTypeName","src":"1713:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":95,"initialValue":{"expression":{"id":93,"name":"accountValidationData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":79,"src":"1734:21:0","typeDescriptions":{"typeIdentifier":"t_struct$_ValidationData_$8_memory_ptr","typeString":"struct ValidationData memory"}},"id":94,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1756:10:0","memberName":"aggregator","nodeType":"MemberAccess","referencedDeclaration":3,"src":"1734:32:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"1713:53:0"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":101,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":96,"name":"aggregator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":92,"src":"1780:10:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":99,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1802:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":98,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1794:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":97,"name":"address","nodeType":"ElementaryTypeName","src":"1794:7:0","typeDescriptions":{}}},"id":100,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1794:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1780:24:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":108,"nodeType":"IfStatement","src":"1776:95:0","trueBody":{"id":107,"nodeType":"Block","src":"1806:65:0","statements":[{"expression":{"id":105,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":102,"name":"aggregator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":92,"src":"1820:10:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":103,"name":"pmValidationData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":86,"src":"1833:16:0","typeDescriptions":{"typeIdentifier":"t_struct$_ValidationData_$8_memory_ptr","typeString":"struct ValidationData memory"}},"id":104,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1850:10:0","memberName":"aggregator","nodeType":"MemberAccess","referencedDeclaration":3,"src":"1833:27:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1820:40:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":106,"nodeType":"ExpressionStatement","src":"1820:40:0"}]}},{"assignments":[110],"declarations":[{"constant":false,"id":110,"mutability":"mutable","name":"validAfter","nameLocation":"1887:10:0","nodeType":"VariableDeclaration","scope":151,"src":"1880:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":109,"name":"uint48","nodeType":"ElementaryTypeName","src":"1880:6:0","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"id":113,"initialValue":{"expression":{"id":111,"name":"accountValidationData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":79,"src":"1900:21:0","typeDescriptions":{"typeIdentifier":"t_struct$_ValidationData_$8_memory_ptr","typeString":"struct ValidationData memory"}},"id":112,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1922:10:0","memberName":"validAfter","nodeType":"MemberAccess","referencedDeclaration":5,"src":"1900:32:0","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"nodeType":"VariableDeclarationStatement","src":"1880:52:0"},{"assignments":[115],"declarations":[{"constant":false,"id":115,"mutability":"mutable","name":"validUntil","nameLocation":"1949:10:0","nodeType":"VariableDeclaration","scope":151,"src":"1942:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":114,"name":"uint48","nodeType":"ElementaryTypeName","src":"1942:6:0","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"id":118,"initialValue":{"expression":{"id":116,"name":"accountValidationData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":79,"src":"1962:21:0","typeDescriptions":{"typeIdentifier":"t_struct$_ValidationData_$8_memory_ptr","typeString":"struct ValidationData memory"}},"id":117,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1984:10:0","memberName":"validUntil","nodeType":"MemberAccess","referencedDeclaration":7,"src":"1962:32:0","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"nodeType":"VariableDeclarationStatement","src":"1942:52:0"},{"assignments":[120],"declarations":[{"constant":false,"id":120,"mutability":"mutable","name":"pmValidAfter","nameLocation":"2011:12:0","nodeType":"VariableDeclaration","scope":151,"src":"2004:19:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":119,"name":"uint48","nodeType":"ElementaryTypeName","src":"2004:6:0","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"id":123,"initialValue":{"expression":{"id":121,"name":"pmValidationData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":86,"src":"2026:16:0","typeDescriptions":{"typeIdentifier":"t_struct$_ValidationData_$8_memory_ptr","typeString":"struct ValidationData memory"}},"id":122,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2043:10:0","memberName":"validAfter","nodeType":"MemberAccess","referencedDeclaration":5,"src":"2026:27:0","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"nodeType":"VariableDeclarationStatement","src":"2004:49:0"},{"assignments":[125],"declarations":[{"constant":false,"id":125,"mutability":"mutable","name":"pmValidUntil","nameLocation":"2070:12:0","nodeType":"VariableDeclaration","scope":151,"src":"2063:19:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":124,"name":"uint48","nodeType":"ElementaryTypeName","src":"2063:6:0","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"id":128,"initialValue":{"expression":{"id":126,"name":"pmValidationData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":86,"src":"2085:16:0","typeDescriptions":{"typeIdentifier":"t_struct$_ValidationData_$8_memory_ptr","typeString":"struct ValidationData memory"}},"id":127,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2102:10:0","memberName":"validUntil","nodeType":"MemberAccess","referencedDeclaration":7,"src":"2085:27:0","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"nodeType":"VariableDeclarationStatement","src":"2063:49:0"},{"condition":{"commonType":{"typeIdentifier":"t_uint48","typeString":"uint48"},"id":131,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":129,"name":"validAfter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":110,"src":"2127:10:0","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":130,"name":"pmValidAfter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":120,"src":"2140:12:0","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"src":"2127:25:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":136,"nodeType":"IfStatement","src":"2123:56:0","trueBody":{"expression":{"id":134,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":132,"name":"validAfter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":110,"src":"2154:10:0","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":133,"name":"pmValidAfter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":120,"src":"2167:12:0","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"src":"2154:25:0","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"id":135,"nodeType":"ExpressionStatement","src":"2154:25:0"}},{"condition":{"commonType":{"typeIdentifier":"t_uint48","typeString":"uint48"},"id":139,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":137,"name":"validUntil","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":115,"src":"2193:10:0","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":138,"name":"pmValidUntil","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":125,"src":"2206:12:0","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"src":"2193:25:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":144,"nodeType":"IfStatement","src":"2189:56:0","trueBody":{"expression":{"id":142,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":140,"name":"validUntil","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":115,"src":"2220:10:0","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":141,"name":"pmValidUntil","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":125,"src":"2233:12:0","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"src":"2220:25:0","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"id":143,"nodeType":"ExpressionStatement","src":"2220:25:0"}},{"expression":{"arguments":[{"id":146,"name":"aggregator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":92,"src":"2277:10:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":147,"name":"validAfter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":110,"src":"2289:10:0","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},{"id":148,"name":"validUntil","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":115,"src":"2301:10:0","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint48","typeString":"uint48"},{"typeIdentifier":"t_uint48","typeString":"uint48"}],"id":145,"name":"ValidationData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8,"src":"2262:14:0","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_ValidationData_$8_storage_ptr_$","typeString":"type(struct ValidationData storage pointer)"}},"id":149,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2262:50:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_ValidationData_$8_memory_ptr","typeString":"struct ValidationData memory"}},"functionReturnParameters":76,"id":150,"nodeType":"Return","src":"2255:57:0"}]},"id":152,"implemented":true,"kind":"freeFunction","modifiers":[],"name":"_intersectTimeRange","nameLocation":"1401:19:0","nodeType":"FunctionDefinition","parameters":{"id":72,"nodeType":"ParameterList","parameters":[{"constant":false,"id":69,"mutability":"mutable","name":"validationData","nameLocation":"1429:14:0","nodeType":"VariableDeclaration","scope":152,"src":"1421:22:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":68,"name":"uint256","nodeType":"ElementaryTypeName","src":"1421:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":71,"mutability":"mutable","name":"paymasterValidationData","nameLocation":"1453:23:0","nodeType":"VariableDeclaration","scope":152,"src":"1445:31:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":70,"name":"uint256","nodeType":"ElementaryTypeName","src":"1445:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1420:57:0"},"returnParameters":{"id":76,"nodeType":"ParameterList","parameters":[{"constant":false,"id":75,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":152,"src":"1492:21:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_ValidationData_$8_memory_ptr","typeString":"struct ValidationData"},"typeName":{"id":74,"nodeType":"UserDefinedTypeName","pathNode":{"id":73,"name":"ValidationData","nameLocations":["1492:14:0"],"nodeType":"IdentifierPath","referencedDeclaration":8,"src":"1492:14:0"},"referencedDeclaration":8,"src":"1492:14:0","typeDescriptions":{"typeIdentifier":"t_struct$_ValidationData_$8_storage_ptr","typeString":"struct ValidationData"}},"visibility":"internal"}],"src":"1491:23:0"},"scope":238,"src":"1392:927:0","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":188,"nodeType":"Block","src":"2511:127:0","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":186,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":174,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"expression":{"id":163,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":156,"src":"2536:4:0","typeDescriptions":{"typeIdentifier":"t_struct$_ValidationData_$8_memory_ptr","typeString":"struct ValidationData memory"}},"id":164,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2541:10:0","memberName":"aggregator","nodeType":"MemberAccess","referencedDeclaration":3,"src":"2536:15:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":162,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2528:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":161,"name":"uint160","nodeType":"ElementaryTypeName","src":"2528:7:0","typeDescriptions":{}}},"id":165,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2528:24:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":172,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"expression":{"id":168,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":156,"src":"2564:4:0","typeDescriptions":{"typeIdentifier":"t_struct$_ValidationData_$8_memory_ptr","typeString":"struct ValidationData memory"}},"id":169,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2569:10:0","memberName":"validUntil","nodeType":"MemberAccess","referencedDeclaration":7,"src":"2564:15:0","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint48","typeString":"uint48"}],"id":167,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2556:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":166,"name":"uint256","nodeType":"ElementaryTypeName","src":"2556:7:0","typeDescriptions":{}}},"id":170,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2556:24:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"313630","id":171,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2584:3:0","typeDescriptions":{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},"value":"160"},"src":"2556:31:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":173,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2555:33:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2528:60:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":184,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"expression":{"id":177,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":156,"src":"2600:4:0","typeDescriptions":{"typeIdentifier":"t_struct$_ValidationData_$8_memory_ptr","typeString":"struct ValidationData memory"}},"id":178,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2605:10:0","memberName":"validAfter","nodeType":"MemberAccess","referencedDeclaration":5,"src":"2600:15:0","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint48","typeString":"uint48"}],"id":176,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2592:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":175,"name":"uint256","nodeType":"ElementaryTypeName","src":"2592:7:0","typeDescriptions":{}}},"id":179,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2592:24:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},"id":182,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"313630","id":180,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2621:3:0","typeDescriptions":{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},"value":"160"},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"3438","id":181,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2627:2:0","typeDescriptions":{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},"value":"48"},"src":"2621:8:0","typeDescriptions":{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"}}],"id":183,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"2620:10:0","typeDescriptions":{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"}},"src":"2592:38:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":185,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2591:40:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2528:103:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":160,"id":187,"nodeType":"Return","src":"2521:110:0"}]},"documentation":{"id":153,"nodeType":"StructuredDocumentation","src":"2321:105:0","text":" helper to pack the return value for validateUserOp\n @param data - the ValidationData to pack"},"id":189,"implemented":true,"kind":"freeFunction","modifiers":[],"name":"_packValidationData","nameLocation":"2440:19:0","nodeType":"FunctionDefinition","parameters":{"id":157,"nodeType":"ParameterList","parameters":[{"constant":false,"id":156,"mutability":"mutable","name":"data","nameLocation":"2482:4:0","nodeType":"VariableDeclaration","scope":189,"src":"2460:26:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_ValidationData_$8_memory_ptr","typeString":"struct ValidationData"},"typeName":{"id":155,"nodeType":"UserDefinedTypeName","pathNode":{"id":154,"name":"ValidationData","nameLocations":["2460:14:0"],"nodeType":"IdentifierPath","referencedDeclaration":8,"src":"2460:14:0"},"referencedDeclaration":8,"src":"2460:14:0","typeDescriptions":{"typeIdentifier":"t_struct$_ValidationData_$8_storage_ptr","typeString":"struct ValidationData"}},"visibility":"internal"}],"src":"2459:28:0"},"returnParameters":{"id":160,"nodeType":"ParameterList","parameters":[{"constant":false,"id":159,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":189,"src":"2502:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":158,"name":"uint256","nodeType":"ElementaryTypeName","src":"2502:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2501:9:0"},"scope":238,"src":"2431:207:0","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":226,"nodeType":"Block","src":"3062:112:0","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":224,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":213,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"condition":{"id":201,"name":"sigFailed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":192,"src":"3080:9:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":203,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3096:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":204,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"3080:17:0","trueExpression":{"hexValue":"31","id":202,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3092:1:0","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":205,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3079:19:0","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":211,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":208,"name":"validUntil","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":194,"src":"3110:10:0","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint48","typeString":"uint48"}],"id":207,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3102:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":206,"name":"uint256","nodeType":"ElementaryTypeName","src":"3102:7:0","typeDescriptions":{}}},"id":209,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3102:19:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"313630","id":210,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3125:3:0","typeDescriptions":{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},"value":"160"},"src":"3102:26:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":212,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3101:28:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3079:50:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":222,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":216,"name":"validAfter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":196,"src":"3141:10:0","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint48","typeString":"uint48"}],"id":215,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3133:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":214,"name":"uint256","nodeType":"ElementaryTypeName","src":"3133:7:0","typeDescriptions":{}}},"id":217,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3133:19:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},"id":220,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"313630","id":218,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3157:3:0","typeDescriptions":{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},"value":"160"},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"3438","id":219,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3163:2:0","typeDescriptions":{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},"value":"48"},"src":"3157:8:0","typeDescriptions":{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"}}],"id":221,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"3156:10:0","typeDescriptions":{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"}},"src":"3133:33:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":223,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3132:35:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3079:88:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":200,"id":225,"nodeType":"Return","src":"3072:95:0"}]},"documentation":{"id":190,"nodeType":"StructuredDocumentation","src":"2640:311:0","text":" helper to pack the return value for validateUserOp, when not using an aggregator\n @param sigFailed - true for signature failure, false for success\n @param validUntil last timestamp this UserOperation is valid (or zero for infinite)\n @param validAfter first timestamp this UserOperation is valid"},"id":227,"implemented":true,"kind":"freeFunction","modifiers":[],"name":"_packValidationData","nameLocation":"2965:19:0","nodeType":"FunctionDefinition","parameters":{"id":197,"nodeType":"ParameterList","parameters":[{"constant":false,"id":192,"mutability":"mutable","name":"sigFailed","nameLocation":"2990:9:0","nodeType":"VariableDeclaration","scope":227,"src":"2985:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":191,"name":"bool","nodeType":"ElementaryTypeName","src":"2985:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":194,"mutability":"mutable","name":"validUntil","nameLocation":"3008:10:0","nodeType":"VariableDeclaration","scope":227,"src":"3001:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":193,"name":"uint48","nodeType":"ElementaryTypeName","src":"3001:6:0","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"},{"constant":false,"id":196,"mutability":"mutable","name":"validAfter","nameLocation":"3027:10:0","nodeType":"VariableDeclaration","scope":227,"src":"3020:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":195,"name":"uint48","nodeType":"ElementaryTypeName","src":"3020:6:0","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"src":"2984:54:0"},"returnParameters":{"id":200,"nodeType":"ParameterList","parameters":[{"constant":false,"id":199,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":227,"src":"3053:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":198,"name":"uint256","nodeType":"ElementaryTypeName","src":"3053:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3052:9:0"},"scope":238,"src":"2956:218:0","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":236,"nodeType":"Block","src":"3429:193:0","statements":[{"AST":{"nodeType":"YulBlock","src":"3448:168:0","statements":[{"nodeType":"YulVariableDeclaration","src":"3462:22:0","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3479:4:0","type":"","value":"0x40"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3473:5:0"},"nodeType":"YulFunctionCall","src":"3473:11:0"},"variables":[{"name":"mem","nodeType":"YulTypedName","src":"3466:3:0","type":""}]},{"nodeType":"YulVariableDeclaration","src":"3497:22:0","value":{"name":"data.length","nodeType":"YulIdentifier","src":"3508:11:0"},"variables":[{"name":"len","nodeType":"YulTypedName","src":"3501:3:0","type":""}]},{"expression":{"arguments":[{"name":"mem","nodeType":"YulIdentifier","src":"3545:3:0"},{"name":"data.offset","nodeType":"YulIdentifier","src":"3550:11:0"},{"name":"len","nodeType":"YulIdentifier","src":"3563:3:0"}],"functionName":{"name":"calldatacopy","nodeType":"YulIdentifier","src":"3532:12:0"},"nodeType":"YulFunctionCall","src":"3532:35:0"},"nodeType":"YulExpressionStatement","src":"3532:35:0"},{"nodeType":"YulAssignment","src":"3580:26:0","value":{"arguments":[{"name":"mem","nodeType":"YulIdentifier","src":"3597:3:0"},{"name":"len","nodeType":"YulIdentifier","src":"3602:3:0"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"3587:9:0"},"nodeType":"YulFunctionCall","src":"3587:19:0"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"3580:3:0"}]}]},"evmVersion":"london","externalReferences":[{"declaration":230,"isOffset":false,"isSlot":false,"src":"3508:11:0","suffix":"length","valueSize":1},{"declaration":230,"isOffset":true,"isSlot":false,"src":"3550:11:0","suffix":"offset","valueSize":1},{"declaration":233,"isOffset":false,"isSlot":false,"src":"3580:3:0","valueSize":1}],"id":235,"nodeType":"InlineAssembly","src":"3439:177:0"}]},"documentation":{"id":228,"nodeType":"StructuredDocumentation","src":"3176:176:0","text":" keccak function over calldata.\n @dev copy calldata into memory, do keccak and drop allocated memory. Strangely, this is more efficient than letting solidity do it."},"id":237,"implemented":true,"kind":"freeFunction","modifiers":[],"name":"calldataKeccak","nameLocation":"3366:14:0","nodeType":"FunctionDefinition","parameters":{"id":231,"nodeType":"ParameterList","parameters":[{"constant":false,"id":230,"mutability":"mutable","name":"data","nameLocation":"3396:4:0","nodeType":"VariableDeclaration","scope":237,"src":"3381:19:0","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":229,"name":"bytes","nodeType":"ElementaryTypeName","src":"3381:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3380:21:0"},"returnParameters":{"id":234,"nodeType":"ParameterList","parameters":[{"constant":false,"id":233,"mutability":"mutable","name":"ret","nameLocation":"3424:3:0","nodeType":"VariableDeclaration","scope":237,"src":"3416:11:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":232,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3416:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3415:13:0"},"scope":238,"src":"3357:265:0","stateMutability":"pure","virtual":false,"visibility":"internal"}],"src":"36:3588:0"}},"@account-abstraction/contracts/interfaces/IAccount.sol":{"id":1,"ast":{"absolutePath":"@account-abstraction/contracts/interfaces/IAccount.sol","exportedSymbols":{"IAccount":[254],"UserOperation":[643],"UserOperationLib":[813],"calldataKeccak":[237]},"id":255,"license":"GPL-3.0","nodeType":"SourceUnit","nodes":[{"id":239,"literals":["solidity","^","0.8",".12"],"nodeType":"PragmaDirective","src":"36:24:1"},{"absolutePath":"@account-abstraction/contracts/interfaces/UserOperation.sol","file":"./UserOperation.sol","id":240,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":255,"sourceUnit":814,"src":"62:29:1","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"IAccount","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":254,"linearizedBaseContracts":[254],"name":"IAccount","nameLocation":"103:8:1","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":241,"nodeType":"StructuredDocumentation","src":"119:1861:1","text":" Validate user's signature and nonce\n the entryPoint will make the call to the recipient only if this validation call returns successfully.\n signature failure should be reported by returning SIG_VALIDATION_FAILED (1).\n This allows making a \"simulation call\" without a valid signature\n Other failures (e.g. nonce mismatch, or invalid signature format) should still revert to signal failure.\n @dev Must validate caller is the entryPoint.\n      Must validate the signature and nonce\n @param userOp the operation that is about to be executed.\n @param userOpHash hash of the user's request data. can be used as the basis for signature.\n @param missingAccountFunds missing funds on the account's deposit in the entrypoint.\n      This is the minimum amount to transfer to the sender(entryPoint) to be able to make the call.\n      The excess is left as a deposit in the entrypoint, for future calls.\n      can be withdrawn anytime using \"entryPoint.withdrawTo()\"\n      In case there is a paymaster in the request (or the current deposit is high enough), this value will be zero.\n @return validationData packaged ValidationData structure. use `_packValidationData` and `_unpackValidationData` to encode and decode\n      <20-byte> sigAuthorizer - 0 for valid signature, 1 to mark signature failure,\n         otherwise, an address of an \"authorizer\" contract.\n      <6-byte> validUntil - last timestamp this operation is valid. 0 for \"indefinite\"\n      <6-byte> validAfter - first timestamp this operation is valid\n      If an account doesn't use time-range, it is enough to return SIG_VALIDATION_FAILED value (1) for signature failure.\n      Note that the validation code cannot use block.timestamp (or block.number) directly."},"functionSelector":"3a871cdd","id":253,"implemented":false,"kind":"function","modifiers":[],"name":"validateUserOp","nameLocation":"1994:14:1","nodeType":"FunctionDefinition","parameters":{"id":249,"nodeType":"ParameterList","parameters":[{"constant":false,"id":244,"mutability":"mutable","name":"userOp","nameLocation":"2032:6:1","nodeType":"VariableDeclaration","scope":253,"src":"2009:29:1","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$643_calldata_ptr","typeString":"struct UserOperation"},"typeName":{"id":243,"nodeType":"UserDefinedTypeName","pathNode":{"id":242,"name":"UserOperation","nameLocations":["2009:13:1"],"nodeType":"IdentifierPath","referencedDeclaration":643,"src":"2009:13:1"},"referencedDeclaration":643,"src":"2009:13:1","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$643_storage_ptr","typeString":"struct UserOperation"}},"visibility":"internal"},{"constant":false,"id":246,"mutability":"mutable","name":"userOpHash","nameLocation":"2048:10:1","nodeType":"VariableDeclaration","scope":253,"src":"2040:18:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":245,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2040:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":248,"mutability":"mutable","name":"missingAccountFunds","nameLocation":"2068:19:1","nodeType":"VariableDeclaration","scope":253,"src":"2060:27:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":247,"name":"uint256","nodeType":"ElementaryTypeName","src":"2060:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2008:80:1"},"returnParameters":{"id":252,"nodeType":"ParameterList","parameters":[{"constant":false,"id":251,"mutability":"mutable","name":"validationData","nameLocation":"2119:14:1","nodeType":"VariableDeclaration","scope":253,"src":"2111:22:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":250,"name":"uint256","nodeType":"ElementaryTypeName","src":"2111:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2110:24:1"},"scope":254,"src":"1985:150:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":255,"src":"93:2044:1","usedErrors":[]}],"src":"36:2102:1"}},"@account-abstraction/contracts/interfaces/IAggregator.sol":{"id":2,"ast":{"absolutePath":"@account-abstraction/contracts/interfaces/IAggregator.sol","exportedSymbols":{"IAggregator":[288],"UserOperation":[643],"UserOperationLib":[813],"calldataKeccak":[237]},"id":289,"license":"GPL-3.0","nodeType":"SourceUnit","nodes":[{"id":256,"literals":["solidity","^","0.8",".12"],"nodeType":"PragmaDirective","src":"36:24:2"},{"absolutePath":"@account-abstraction/contracts/interfaces/UserOperation.sol","file":"./UserOperation.sol","id":257,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":289,"sourceUnit":814,"src":"62:29:2","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"IAggregator","contractDependencies":[],"contractKind":"interface","documentation":{"id":258,"nodeType":"StructuredDocumentation","src":"93:43:2","text":" Aggregated Signatures validator."},"fullyImplemented":false,"id":288,"linearizedBaseContracts":[288],"name":"IAggregator","nameLocation":"147:11:2","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":259,"nodeType":"StructuredDocumentation","src":"166:136:2","text":" validate aggregated signature.\n revert if the aggregated signature does not match the given list of operations."},"functionSelector":"e3563a4f","id":268,"implemented":false,"kind":"function","modifiers":[],"name":"validateSignatures","nameLocation":"316:18:2","nodeType":"FunctionDefinition","parameters":{"id":266,"nodeType":"ParameterList","parameters":[{"constant":false,"id":263,"mutability":"mutable","name":"userOps","nameLocation":"360:7:2","nodeType":"VariableDeclaration","scope":268,"src":"335:32:2","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_UserOperation_$643_calldata_ptr_$dyn_calldata_ptr","typeString":"struct UserOperation[]"},"typeName":{"baseType":{"id":261,"nodeType":"UserDefinedTypeName","pathNode":{"id":260,"name":"UserOperation","nameLocations":["335:13:2"],"nodeType":"IdentifierPath","referencedDeclaration":643,"src":"335:13:2"},"referencedDeclaration":643,"src":"335:13:2","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$643_storage_ptr","typeString":"struct UserOperation"}},"id":262,"nodeType":"ArrayTypeName","src":"335:15:2","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_UserOperation_$643_storage_$dyn_storage_ptr","typeString":"struct UserOperation[]"}},"visibility":"internal"},{"constant":false,"id":265,"mutability":"mutable","name":"signature","nameLocation":"384:9:2","nodeType":"VariableDeclaration","scope":268,"src":"369:24:2","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":264,"name":"bytes","nodeType":"ElementaryTypeName","src":"369:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"334:60:2"},"returnParameters":{"id":267,"nodeType":"ParameterList","parameters":[],"src":"408:0:2"},"scope":288,"src":"307:102:2","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":269,"nodeType":"StructuredDocumentation","src":"415:576:2","text":" validate signature of a single userOp\n This method is should be called by bundler after EntryPoint.simulateValidation() returns (reverts) with ValidationResultWithAggregation\n First it validates the signature over the userOp. Then it returns data to be used when creating the handleOps.\n @param userOp the userOperation received from the user.\n @return sigForUserOp the value to put into the signature field of the userOp when calling handleOps.\n    (usually empty, unless account and aggregator support some kind of \"multisig\""},"functionSelector":"64c530cd","id":277,"implemented":false,"kind":"function","modifiers":[],"name":"validateUserOpSignature","nameLocation":"1005:23:2","nodeType":"FunctionDefinition","parameters":{"id":273,"nodeType":"ParameterList","parameters":[{"constant":false,"id":272,"mutability":"mutable","name":"userOp","nameLocation":"1052:6:2","nodeType":"VariableDeclaration","scope":277,"src":"1029:29:2","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$643_calldata_ptr","typeString":"struct UserOperation"},"typeName":{"id":271,"nodeType":"UserDefinedTypeName","pathNode":{"id":270,"name":"UserOperation","nameLocations":["1029:13:2"],"nodeType":"IdentifierPath","referencedDeclaration":643,"src":"1029:13:2"},"referencedDeclaration":643,"src":"1029:13:2","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$643_storage_ptr","typeString":"struct UserOperation"}},"visibility":"internal"}],"src":"1028:31:2"},"returnParameters":{"id":276,"nodeType":"ParameterList","parameters":[{"constant":false,"id":275,"mutability":"mutable","name":"sigForUserOp","nameLocation":"1100:12:2","nodeType":"VariableDeclaration","scope":277,"src":"1087:25:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":274,"name":"bytes","nodeType":"ElementaryTypeName","src":"1087:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1086:27:2"},"scope":288,"src":"996:118:2","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":278,"nodeType":"StructuredDocumentation","src":"1120:368:2","text":" aggregate multiple signatures into a single value.\n This method is called off-chain to calculate the signature to pass with handleOps()\n bundler MAY use optimized custom code perform this aggregation\n @param userOps array of UserOperations to collect the signatures from.\n @return aggregatedSignature the aggregated signature"},"functionSelector":"275e2d79","id":287,"implemented":false,"kind":"function","modifiers":[],"name":"aggregateSignatures","nameLocation":"1502:19:2","nodeType":"FunctionDefinition","parameters":{"id":283,"nodeType":"ParameterList","parameters":[{"constant":false,"id":282,"mutability":"mutable","name":"userOps","nameLocation":"1547:7:2","nodeType":"VariableDeclaration","scope":287,"src":"1522:32:2","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_UserOperation_$643_calldata_ptr_$dyn_calldata_ptr","typeString":"struct UserOperation[]"},"typeName":{"baseType":{"id":280,"nodeType":"UserDefinedTypeName","pathNode":{"id":279,"name":"UserOperation","nameLocations":["1522:13:2"],"nodeType":"IdentifierPath","referencedDeclaration":643,"src":"1522:13:2"},"referencedDeclaration":643,"src":"1522:13:2","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$643_storage_ptr","typeString":"struct UserOperation"}},"id":281,"nodeType":"ArrayTypeName","src":"1522:15:2","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_UserOperation_$643_storage_$dyn_storage_ptr","typeString":"struct UserOperation[]"}},"visibility":"internal"}],"src":"1521:34:2"},"returnParameters":{"id":286,"nodeType":"ParameterList","parameters":[{"constant":false,"id":285,"mutability":"mutable","name":"aggregatedSignature","nameLocation":"1592:19:2","nodeType":"VariableDeclaration","scope":287,"src":"1579:32:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":284,"name":"bytes","nodeType":"ElementaryTypeName","src":"1579:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1578:34:2"},"scope":288,"src":"1493:120:2","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":289,"src":"137:1478:2","usedErrors":[]}],"src":"36:1580:2"}},"@account-abstraction/contracts/interfaces/IEntryPoint.sol":{"id":3,"ast":{"absolutePath":"@account-abstraction/contracts/interfaces/IEntryPoint.sol","exportedSymbols":{"IAggregator":[288],"IEntryPoint":[492],"INonceManager":[511],"IStakeManager":[616],"UserOperation":[643],"UserOperationLib":[813],"calldataKeccak":[237]},"id":493,"license":"GPL-3.0","nodeType":"SourceUnit","nodes":[{"id":290,"literals":["solidity","^","0.8",".12"],"nodeType":"PragmaDirective","src":"163:24:3"},{"absolutePath":"@account-abstraction/contracts/interfaces/UserOperation.sol","file":"./UserOperation.sol","id":291,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":493,"sourceUnit":814,"src":"311:29:3","symbolAliases":[],"unitAlias":""},{"absolutePath":"@account-abstraction/contracts/interfaces/IStakeManager.sol","file":"./IStakeManager.sol","id":292,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":493,"sourceUnit":617,"src":"341:29:3","symbolAliases":[],"unitAlias":""},{"absolutePath":"@account-abstraction/contracts/interfaces/IAggregator.sol","file":"./IAggregator.sol","id":293,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":493,"sourceUnit":289,"src":"371:27:3","symbolAliases":[],"unitAlias":""},{"absolutePath":"@account-abstraction/contracts/interfaces/INonceManager.sol","file":"./INonceManager.sol","id":294,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":493,"sourceUnit":512,"src":"399:29:3","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":295,"name":"IStakeManager","nameLocations":["455:13:3"],"nodeType":"IdentifierPath","referencedDeclaration":616,"src":"455:13:3"},"id":296,"nodeType":"InheritanceSpecifier","src":"455:13:3"},{"baseName":{"id":297,"name":"INonceManager","nameLocations":["470:13:3"],"nodeType":"IdentifierPath","referencedDeclaration":511,"src":"470:13:3"},"id":298,"nodeType":"InheritanceSpecifier","src":"470:13:3"}],"canonicalName":"IEntryPoint","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":492,"linearizedBaseContracts":[492,511,616],"name":"IEntryPoint","nameLocation":"440:11:3","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"eventSelector":"49628fd1471006c1482da88028e9ce4dbb080b815c9b0344d39e5a8e6ec1419f","id":314,"name":"UserOperationEvent","nameLocation":"1191:18:3","nodeType":"EventDefinition","parameters":{"id":313,"nodeType":"ParameterList","parameters":[{"constant":false,"id":300,"indexed":true,"mutability":"mutable","name":"userOpHash","nameLocation":"1226:10:3","nodeType":"VariableDeclaration","scope":314,"src":"1210:26:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":299,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1210:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":302,"indexed":true,"mutability":"mutable","name":"sender","nameLocation":"1254:6:3","nodeType":"VariableDeclaration","scope":314,"src":"1238:22:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":301,"name":"address","nodeType":"ElementaryTypeName","src":"1238:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":304,"indexed":true,"mutability":"mutable","name":"paymaster","nameLocation":"1278:9:3","nodeType":"VariableDeclaration","scope":314,"src":"1262:25:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":303,"name":"address","nodeType":"ElementaryTypeName","src":"1262:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":306,"indexed":false,"mutability":"mutable","name":"nonce","nameLocation":"1297:5:3","nodeType":"VariableDeclaration","scope":314,"src":"1289:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":305,"name":"uint256","nodeType":"ElementaryTypeName","src":"1289:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":308,"indexed":false,"mutability":"mutable","name":"success","nameLocation":"1309:7:3","nodeType":"VariableDeclaration","scope":314,"src":"1304:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":307,"name":"bool","nodeType":"ElementaryTypeName","src":"1304:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":310,"indexed":false,"mutability":"mutable","name":"actualGasCost","nameLocation":"1326:13:3","nodeType":"VariableDeclaration","scope":314,"src":"1318:21:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":309,"name":"uint256","nodeType":"ElementaryTypeName","src":"1318:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":312,"indexed":false,"mutability":"mutable","name":"actualGasUsed","nameLocation":"1349:13:3","nodeType":"VariableDeclaration","scope":314,"src":"1341:21:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":311,"name":"uint256","nodeType":"ElementaryTypeName","src":"1341:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1209:154:3"},"src":"1185:179:3"},{"anonymous":false,"documentation":{"id":315,"nodeType":"StructuredDocumentation","src":"1370:333:3","text":" account \"sender\" was deployed.\n @param userOpHash the userOp that deployed this account. UserOperationEvent will follow.\n @param sender the account that is deployed\n @param factory the factory used to deploy this account (in the initCode)\n @param paymaster the paymaster used by this UserOp"},"eventSelector":"d51a9c61267aa6196961883ecf5ff2da6619c37dac0fa92122513fb32c032d2d","id":325,"name":"AccountDeployed","nameLocation":"1714:15:3","nodeType":"EventDefinition","parameters":{"id":324,"nodeType":"ParameterList","parameters":[{"constant":false,"id":317,"indexed":true,"mutability":"mutable","name":"userOpHash","nameLocation":"1746:10:3","nodeType":"VariableDeclaration","scope":325,"src":"1730:26:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":316,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1730:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":319,"indexed":true,"mutability":"mutable","name":"sender","nameLocation":"1774:6:3","nodeType":"VariableDeclaration","scope":325,"src":"1758:22:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":318,"name":"address","nodeType":"ElementaryTypeName","src":"1758:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":321,"indexed":false,"mutability":"mutable","name":"factory","nameLocation":"1790:7:3","nodeType":"VariableDeclaration","scope":325,"src":"1782:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":320,"name":"address","nodeType":"ElementaryTypeName","src":"1782:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":323,"indexed":false,"mutability":"mutable","name":"paymaster","nameLocation":"1807:9:3","nodeType":"VariableDeclaration","scope":325,"src":"1799:17:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":322,"name":"address","nodeType":"ElementaryTypeName","src":"1799:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1729:88:3"},"src":"1708:110:3"},{"anonymous":false,"documentation":{"id":326,"nodeType":"StructuredDocumentation","src":"1824:337:3","text":" An event emitted if the UserOperation \"callData\" reverted with non-zero length\n @param userOpHash the request unique identifier.\n @param sender the sender of this request\n @param nonce the nonce used in the request\n @param revertReason - the return bytes from the (reverted) call to \"callData\"."},"eventSelector":"1c4fada7374c0a9ee8841fc38afe82932dc0f8e69012e927f061a8bae611a201","id":336,"name":"UserOperationRevertReason","nameLocation":"2172:25:3","nodeType":"EventDefinition","parameters":{"id":335,"nodeType":"ParameterList","parameters":[{"constant":false,"id":328,"indexed":true,"mutability":"mutable","name":"userOpHash","nameLocation":"2214:10:3","nodeType":"VariableDeclaration","scope":336,"src":"2198:26:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":327,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2198:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":330,"indexed":true,"mutability":"mutable","name":"sender","nameLocation":"2242:6:3","nodeType":"VariableDeclaration","scope":336,"src":"2226:22:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":329,"name":"address","nodeType":"ElementaryTypeName","src":"2226:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":332,"indexed":false,"mutability":"mutable","name":"nonce","nameLocation":"2258:5:3","nodeType":"VariableDeclaration","scope":336,"src":"2250:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":331,"name":"uint256","nodeType":"ElementaryTypeName","src":"2250:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":334,"indexed":false,"mutability":"mutable","name":"revertReason","nameLocation":"2271:12:3","nodeType":"VariableDeclaration","scope":336,"src":"2265:18:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":333,"name":"bytes","nodeType":"ElementaryTypeName","src":"2265:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2197:87:3"},"src":"2166:119:3"},{"anonymous":false,"documentation":{"id":337,"nodeType":"StructuredDocumentation","src":"2291:158:3","text":" an event emitted by handleOps(), before starting the execution loop.\n any event emitted before this event, is part of the validation."},"eventSelector":"bb47ee3e183a558b1a2ff0874b079f3fc5478b7454eacf2bfc5af2ff5878f972","id":339,"name":"BeforeExecution","nameLocation":"2460:15:3","nodeType":"EventDefinition","parameters":{"id":338,"nodeType":"ParameterList","parameters":[],"src":"2475:2:3"},"src":"2454:24:3"},{"anonymous":false,"documentation":{"id":340,"nodeType":"StructuredDocumentation","src":"2484:101:3","text":" signature aggregator used by the following UserOperationEvents within this bundle."},"eventSelector":"575ff3acadd5ab348fe1855e217e0f3678f8d767d7494c9f9fefbee2e17cca4d","id":344,"name":"SignatureAggregatorChanged","nameLocation":"2596:26:3","nodeType":"EventDefinition","parameters":{"id":343,"nodeType":"ParameterList","parameters":[{"constant":false,"id":342,"indexed":true,"mutability":"mutable","name":"aggregator","nameLocation":"2639:10:3","nodeType":"VariableDeclaration","scope":344,"src":"2623:26:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":341,"name":"address","nodeType":"ElementaryTypeName","src":"2623:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2622:28:3"},"src":"2590:61:3"},{"documentation":{"id":345,"nodeType":"StructuredDocumentation","src":"2657:756:3","text":" a custom revert error of handleOps, to identify the offending op.\n  NOTE: if simulateValidation passes successfully, there should be no reason for handleOps to fail on it.\n  @param opIndex - index into the array of ops to the failed one (in simulateValidation, this is always zero)\n  @param reason - revert reason\n      The string starts with a unique code \"AAmn\", where \"m\" is \"1\" for factory, \"2\" for account and \"3\" for paymaster issues,\n      so a failure can be attributed to the correct entity.\n   Should be caught in off-chain handleOps simulation and not happen on-chain.\n   Useful for mitigating DoS attempts against batchers or for troubleshooting of factory/account/paymaster reverts."},"errorSelector":"220266b6","id":351,"name":"FailedOp","nameLocation":"3424:8:3","nodeType":"ErrorDefinition","parameters":{"id":350,"nodeType":"ParameterList","parameters":[{"constant":false,"id":347,"mutability":"mutable","name":"opIndex","nameLocation":"3441:7:3","nodeType":"VariableDeclaration","scope":351,"src":"3433:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":346,"name":"uint256","nodeType":"ElementaryTypeName","src":"3433:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":349,"mutability":"mutable","name":"reason","nameLocation":"3457:6:3","nodeType":"VariableDeclaration","scope":351,"src":"3450:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":348,"name":"string","nodeType":"ElementaryTypeName","src":"3450:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3432:32:3"},"src":"3418:47:3"},{"documentation":{"id":352,"nodeType":"StructuredDocumentation","src":"3471:114:3","text":" error case when a signature aggregator fails to verify the aggregated signature it had created."},"errorSelector":"86a9f750","id":356,"name":"SignatureValidationFailed","nameLocation":"3596:25:3","nodeType":"ErrorDefinition","parameters":{"id":355,"nodeType":"ParameterList","parameters":[{"constant":false,"id":354,"mutability":"mutable","name":"aggregator","nameLocation":"3630:10:3","nodeType":"VariableDeclaration","scope":356,"src":"3622:18:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":353,"name":"address","nodeType":"ElementaryTypeName","src":"3622:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3621:20:3"},"src":"3590:52:3"},{"documentation":{"id":357,"nodeType":"StructuredDocumentation","src":"3648:327:3","text":" Successful result from simulateValidation.\n @param returnInfo gas and time-range returned values\n @param senderInfo stake information about the sender\n @param factoryInfo stake information about the factory (if any)\n @param paymasterInfo stake information about the paymaster (if any)"},"errorSelector":"e0cff05f","id":371,"name":"ValidationResult","nameLocation":"3986:16:3","nodeType":"ErrorDefinition","parameters":{"id":370,"nodeType":"ParameterList","parameters":[{"constant":false,"id":360,"mutability":"mutable","name":"returnInfo","nameLocation":"4014:10:3","nodeType":"VariableDeclaration","scope":371,"src":"4003:21:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_ReturnInfo_$468_memory_ptr","typeString":"struct IEntryPoint.ReturnInfo"},"typeName":{"id":359,"nodeType":"UserDefinedTypeName","pathNode":{"id":358,"name":"ReturnInfo","nameLocations":["4003:10:3"],"nodeType":"IdentifierPath","referencedDeclaration":468,"src":"4003:10:3"},"referencedDeclaration":468,"src":"4003:10:3","typeDescriptions":{"typeIdentifier":"t_struct$_ReturnInfo_$468_storage_ptr","typeString":"struct IEntryPoint.ReturnInfo"}},"visibility":"internal"},{"constant":false,"id":363,"mutability":"mutable","name":"senderInfo","nameLocation":"4044:10:3","nodeType":"VariableDeclaration","scope":371,"src":"4034:20:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_StakeInfo_$568_memory_ptr","typeString":"struct IStakeManager.StakeInfo"},"typeName":{"id":362,"nodeType":"UserDefinedTypeName","pathNode":{"id":361,"name":"StakeInfo","nameLocations":["4034:9:3"],"nodeType":"IdentifierPath","referencedDeclaration":568,"src":"4034:9:3"},"referencedDeclaration":568,"src":"4034:9:3","typeDescriptions":{"typeIdentifier":"t_struct$_StakeInfo_$568_storage_ptr","typeString":"struct IStakeManager.StakeInfo"}},"visibility":"internal"},{"constant":false,"id":366,"mutability":"mutable","name":"factoryInfo","nameLocation":"4066:11:3","nodeType":"VariableDeclaration","scope":371,"src":"4056:21:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_StakeInfo_$568_memory_ptr","typeString":"struct IStakeManager.StakeInfo"},"typeName":{"id":365,"nodeType":"UserDefinedTypeName","pathNode":{"id":364,"name":"StakeInfo","nameLocations":["4056:9:3"],"nodeType":"IdentifierPath","referencedDeclaration":568,"src":"4056:9:3"},"referencedDeclaration":568,"src":"4056:9:3","typeDescriptions":{"typeIdentifier":"t_struct$_StakeInfo_$568_storage_ptr","typeString":"struct IStakeManager.StakeInfo"}},"visibility":"internal"},{"constant":false,"id":369,"mutability":"mutable","name":"paymasterInfo","nameLocation":"4089:13:3","nodeType":"VariableDeclaration","scope":371,"src":"4079:23:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_StakeInfo_$568_memory_ptr","typeString":"struct IStakeManager.StakeInfo"},"typeName":{"id":368,"nodeType":"UserDefinedTypeName","pathNode":{"id":367,"name":"StakeInfo","nameLocations":["4079:9:3"],"nodeType":"IdentifierPath","referencedDeclaration":568,"src":"4079:9:3"},"referencedDeclaration":568,"src":"4079:9:3","typeDescriptions":{"typeIdentifier":"t_struct$_StakeInfo_$568_storage_ptr","typeString":"struct IStakeManager.StakeInfo"}},"visibility":"internal"}],"src":"4002:101:3"},"src":"3980:124:3"},{"documentation":{"id":372,"nodeType":"StructuredDocumentation","src":"4110:561:3","text":" Successful result from simulateValidation, if the account returns a signature aggregator\n @param returnInfo gas and time-range returned values\n @param senderInfo stake information about the sender\n @param factoryInfo stake information about the factory (if any)\n @param paymasterInfo stake information about the paymaster (if any)\n @param aggregatorInfo signature aggregation info (if the account requires signature aggregator)\n      bundler MUST use it to verify the signature, or reject the UserOperation"},"errorSelector":"faecb4e4","id":389,"name":"ValidationResultWithAggregation","nameLocation":"4682:31:3","nodeType":"ErrorDefinition","parameters":{"id":388,"nodeType":"ParameterList","parameters":[{"constant":false,"id":375,"mutability":"mutable","name":"returnInfo","nameLocation":"4725:10:3","nodeType":"VariableDeclaration","scope":389,"src":"4714:21:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_ReturnInfo_$468_memory_ptr","typeString":"struct IEntryPoint.ReturnInfo"},"typeName":{"id":374,"nodeType":"UserDefinedTypeName","pathNode":{"id":373,"name":"ReturnInfo","nameLocations":["4714:10:3"],"nodeType":"IdentifierPath","referencedDeclaration":468,"src":"4714:10:3"},"referencedDeclaration":468,"src":"4714:10:3","typeDescriptions":{"typeIdentifier":"t_struct$_ReturnInfo_$468_storage_ptr","typeString":"struct IEntryPoint.ReturnInfo"}},"visibility":"internal"},{"constant":false,"id":378,"mutability":"mutable","name":"senderInfo","nameLocation":"4755:10:3","nodeType":"VariableDeclaration","scope":389,"src":"4745:20:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_StakeInfo_$568_memory_ptr","typeString":"struct IStakeManager.StakeInfo"},"typeName":{"id":377,"nodeType":"UserDefinedTypeName","pathNode":{"id":376,"name":"StakeInfo","nameLocations":["4745:9:3"],"nodeType":"IdentifierPath","referencedDeclaration":568,"src":"4745:9:3"},"referencedDeclaration":568,"src":"4745:9:3","typeDescriptions":{"typeIdentifier":"t_struct$_StakeInfo_$568_storage_ptr","typeString":"struct IStakeManager.StakeInfo"}},"visibility":"internal"},{"constant":false,"id":381,"mutability":"mutable","name":"factoryInfo","nameLocation":"4777:11:3","nodeType":"VariableDeclaration","scope":389,"src":"4767:21:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_StakeInfo_$568_memory_ptr","typeString":"struct IStakeManager.StakeInfo"},"typeName":{"id":380,"nodeType":"UserDefinedTypeName","pathNode":{"id":379,"name":"StakeInfo","nameLocations":["4767:9:3"],"nodeType":"IdentifierPath","referencedDeclaration":568,"src":"4767:9:3"},"referencedDeclaration":568,"src":"4767:9:3","typeDescriptions":{"typeIdentifier":"t_struct$_StakeInfo_$568_storage_ptr","typeString":"struct IStakeManager.StakeInfo"}},"visibility":"internal"},{"constant":false,"id":384,"mutability":"mutable","name":"paymasterInfo","nameLocation":"4800:13:3","nodeType":"VariableDeclaration","scope":389,"src":"4790:23:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_StakeInfo_$568_memory_ptr","typeString":"struct IStakeManager.StakeInfo"},"typeName":{"id":383,"nodeType":"UserDefinedTypeName","pathNode":{"id":382,"name":"StakeInfo","nameLocations":["4790:9:3"],"nodeType":"IdentifierPath","referencedDeclaration":568,"src":"4790:9:3"},"referencedDeclaration":568,"src":"4790:9:3","typeDescriptions":{"typeIdentifier":"t_struct$_StakeInfo_$568_storage_ptr","typeString":"struct IStakeManager.StakeInfo"}},"visibility":"internal"},{"constant":false,"id":387,"mutability":"mutable","name":"aggregatorInfo","nameLocation":"4843:14:3","nodeType":"VariableDeclaration","scope":389,"src":"4823:34:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_AggregatorStakeInfo_$474_memory_ptr","typeString":"struct IEntryPoint.AggregatorStakeInfo"},"typeName":{"id":386,"nodeType":"UserDefinedTypeName","pathNode":{"id":385,"name":"AggregatorStakeInfo","nameLocations":["4823:19:3"],"nodeType":"IdentifierPath","referencedDeclaration":474,"src":"4823:19:3"},"referencedDeclaration":474,"src":"4823:19:3","typeDescriptions":{"typeIdentifier":"t_struct$_AggregatorStakeInfo_$474_storage_ptr","typeString":"struct IEntryPoint.AggregatorStakeInfo"}},"visibility":"internal"}],"src":"4713:145:3"},"src":"4676:183:3"},{"documentation":{"id":390,"nodeType":"StructuredDocumentation","src":"4865:51:3","text":" return value of getSenderAddress"},"errorSelector":"6ca7b806","id":394,"name":"SenderAddressResult","nameLocation":"4927:19:3","nodeType":"ErrorDefinition","parameters":{"id":393,"nodeType":"ParameterList","parameters":[{"constant":false,"id":392,"mutability":"mutable","name":"sender","nameLocation":"4955:6:3","nodeType":"VariableDeclaration","scope":394,"src":"4947:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":391,"name":"address","nodeType":"ElementaryTypeName","src":"4947:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4946:16:3"},"src":"4921:42:3"},{"documentation":{"id":395,"nodeType":"StructuredDocumentation","src":"4969:51:3","text":" return value of simulateHandleOp"},"errorSelector":"8b7ac980","id":409,"name":"ExecutionResult","nameLocation":"5031:15:3","nodeType":"ErrorDefinition","parameters":{"id":408,"nodeType":"ParameterList","parameters":[{"constant":false,"id":397,"mutability":"mutable","name":"preOpGas","nameLocation":"5055:8:3","nodeType":"VariableDeclaration","scope":409,"src":"5047:16:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":396,"name":"uint256","nodeType":"ElementaryTypeName","src":"5047:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":399,"mutability":"mutable","name":"paid","nameLocation":"5073:4:3","nodeType":"VariableDeclaration","scope":409,"src":"5065:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":398,"name":"uint256","nodeType":"ElementaryTypeName","src":"5065:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":401,"mutability":"mutable","name":"validAfter","nameLocation":"5086:10:3","nodeType":"VariableDeclaration","scope":409,"src":"5079:17:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":400,"name":"uint48","nodeType":"ElementaryTypeName","src":"5079:6:3","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"},{"constant":false,"id":403,"mutability":"mutable","name":"validUntil","nameLocation":"5105:10:3","nodeType":"VariableDeclaration","scope":409,"src":"5098:17:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":402,"name":"uint48","nodeType":"ElementaryTypeName","src":"5098:6:3","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"},{"constant":false,"id":405,"mutability":"mutable","name":"targetSuccess","nameLocation":"5122:13:3","nodeType":"VariableDeclaration","scope":409,"src":"5117:18:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":404,"name":"bool","nodeType":"ElementaryTypeName","src":"5117:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":407,"mutability":"mutable","name":"targetResult","nameLocation":"5143:12:3","nodeType":"VariableDeclaration","scope":409,"src":"5137:18:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":406,"name":"bytes","nodeType":"ElementaryTypeName","src":"5137:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5046:110:3"},"src":"5025:132:3"},{"canonicalName":"IEntryPoint.UserOpsPerAggregator","id":419,"members":[{"constant":false,"id":413,"mutability":"mutable","name":"userOps","nameLocation":"5255:7:3","nodeType":"VariableDeclaration","scope":419,"src":"5239:23:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_UserOperation_$643_storage_$dyn_storage_ptr","typeString":"struct UserOperation[]"},"typeName":{"baseType":{"id":411,"nodeType":"UserDefinedTypeName","pathNode":{"id":410,"name":"UserOperation","nameLocations":["5239:13:3"],"nodeType":"IdentifierPath","referencedDeclaration":643,"src":"5239:13:3"},"referencedDeclaration":643,"src":"5239:13:3","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$643_storage_ptr","typeString":"struct UserOperation"}},"id":412,"nodeType":"ArrayTypeName","src":"5239:15:3","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_UserOperation_$643_storage_$dyn_storage_ptr","typeString":"struct UserOperation[]"}},"visibility":"internal"},{"constant":false,"id":416,"mutability":"mutable","name":"aggregator","nameLocation":"5315:10:3","nodeType":"VariableDeclaration","scope":419,"src":"5303:22:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IAggregator_$288","typeString":"contract IAggregator"},"typeName":{"id":415,"nodeType":"UserDefinedTypeName","pathNode":{"id":414,"name":"IAggregator","nameLocations":["5303:11:3"],"nodeType":"IdentifierPath","referencedDeclaration":288,"src":"5303:11:3"},"referencedDeclaration":288,"src":"5303:11:3","typeDescriptions":{"typeIdentifier":"t_contract$_IAggregator_$288","typeString":"contract IAggregator"}},"visibility":"internal"},{"constant":false,"id":418,"mutability":"mutable","name":"signature","nameLocation":"5373:9:3","nodeType":"VariableDeclaration","scope":419,"src":"5367:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":417,"name":"bytes","nodeType":"ElementaryTypeName","src":"5367:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"name":"UserOpsPerAggregator","nameLocation":"5208:20:3","nodeType":"StructDefinition","scope":492,"src":"5201:188:3","visibility":"public"},{"documentation":{"id":420,"nodeType":"StructuredDocumentation","src":"5395:368:3","text":" Execute a batch of UserOperation.\n no signature aggregator is used.\n if any account requires an aggregator (that is, it returned an aggregator when\n performing simulateValidation), then handleAggregatedOps() must be used instead.\n @param ops the operations to execute\n @param beneficiary the address to receive the fees"},"functionSelector":"1fad948c","id":429,"implemented":false,"kind":"function","modifiers":[],"name":"handleOps","nameLocation":"5777:9:3","nodeType":"FunctionDefinition","parameters":{"id":427,"nodeType":"ParameterList","parameters":[{"constant":false,"id":424,"mutability":"mutable","name":"ops","nameLocation":"5812:3:3","nodeType":"VariableDeclaration","scope":429,"src":"5787:28:3","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_UserOperation_$643_calldata_ptr_$dyn_calldata_ptr","typeString":"struct UserOperation[]"},"typeName":{"baseType":{"id":422,"nodeType":"UserDefinedTypeName","pathNode":{"id":421,"name":"UserOperation","nameLocations":["5787:13:3"],"nodeType":"IdentifierPath","referencedDeclaration":643,"src":"5787:13:3"},"referencedDeclaration":643,"src":"5787:13:3","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$643_storage_ptr","typeString":"struct UserOperation"}},"id":423,"nodeType":"ArrayTypeName","src":"5787:15:3","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_UserOperation_$643_storage_$dyn_storage_ptr","typeString":"struct UserOperation[]"}},"visibility":"internal"},{"constant":false,"id":426,"mutability":"mutable","name":"beneficiary","nameLocation":"5833:11:3","nodeType":"VariableDeclaration","scope":429,"src":"5817:27:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":425,"name":"address","nodeType":"ElementaryTypeName","src":"5817:15:3","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"}],"src":"5786:59:3"},"returnParameters":{"id":428,"nodeType":"ParameterList","parameters":[],"src":"5854:0:3"},"scope":492,"src":"5768:87:3","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":430,"nodeType":"StructuredDocumentation","src":"5861:249:3","text":" Execute a batch of UserOperation with Aggregators\n @param opsPerAggregator the operations to execute, grouped by aggregator (or address(0) for no-aggregator accounts)\n @param beneficiary the address to receive the fees"},"functionSelector":"4b1d7cf5","id":439,"implemented":false,"kind":"function","modifiers":[],"name":"handleAggregatedOps","nameLocation":"6124:19:3","nodeType":"FunctionDefinition","parameters":{"id":437,"nodeType":"ParameterList","parameters":[{"constant":false,"id":434,"mutability":"mutable","name":"opsPerAggregator","nameLocation":"6185:16:3","nodeType":"VariableDeclaration","scope":439,"src":"6153:48:3","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_UserOpsPerAggregator_$419_calldata_ptr_$dyn_calldata_ptr","typeString":"struct IEntryPoint.UserOpsPerAggregator[]"},"typeName":{"baseType":{"id":432,"nodeType":"UserDefinedTypeName","pathNode":{"id":431,"name":"UserOpsPerAggregator","nameLocations":["6153:20:3"],"nodeType":"IdentifierPath","referencedDeclaration":419,"src":"6153:20:3"},"referencedDeclaration":419,"src":"6153:20:3","typeDescriptions":{"typeIdentifier":"t_struct$_UserOpsPerAggregator_$419_storage_ptr","typeString":"struct IEntryPoint.UserOpsPerAggregator"}},"id":433,"nodeType":"ArrayTypeName","src":"6153:22:3","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_UserOpsPerAggregator_$419_storage_$dyn_storage_ptr","typeString":"struct IEntryPoint.UserOpsPerAggregator[]"}},"visibility":"internal"},{"constant":false,"id":436,"mutability":"mutable","name":"beneficiary","nameLocation":"6227:11:3","nodeType":"VariableDeclaration","scope":439,"src":"6211:27:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":435,"name":"address","nodeType":"ElementaryTypeName","src":"6211:15:3","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"}],"src":"6143:101:3"},"returnParameters":{"id":438,"nodeType":"ParameterList","parameters":[],"src":"6253:0:3"},"scope":492,"src":"6115:139:3","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":440,"nodeType":"StructuredDocumentation","src":"6260:197:3","text":" generate a request Id - unique identifier for this request.\n the request ID is a hash over the content of the userOp (except the signature), the entrypoint and the chainid."},"functionSelector":"a6193531","id":448,"implemented":false,"kind":"function","modifiers":[],"name":"getUserOpHash","nameLocation":"6471:13:3","nodeType":"FunctionDefinition","parameters":{"id":444,"nodeType":"ParameterList","parameters":[{"constant":false,"id":443,"mutability":"mutable","name":"userOp","nameLocation":"6508:6:3","nodeType":"VariableDeclaration","scope":448,"src":"6485:29:3","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$643_calldata_ptr","typeString":"struct UserOperation"},"typeName":{"id":442,"nodeType":"UserDefinedTypeName","pathNode":{"id":441,"name":"UserOperation","nameLocations":["6485:13:3"],"nodeType":"IdentifierPath","referencedDeclaration":643,"src":"6485:13:3"},"referencedDeclaration":643,"src":"6485:13:3","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$643_storage_ptr","typeString":"struct UserOperation"}},"visibility":"internal"}],"src":"6484:31:3"},"returnParameters":{"id":447,"nodeType":"ParameterList","parameters":[{"constant":false,"id":446,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":448,"src":"6539:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":445,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6539:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"6538:9:3"},"scope":492,"src":"6462:86:3","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":449,"nodeType":"StructuredDocumentation","src":"6554:398:3","text":" Simulate a call to account.validateUserOp and paymaster.validatePaymasterUserOp.\n @dev this method always revert. Successful result is ValidationResult error. other errors are failures.\n @dev The node must also verify it doesn't use banned opcodes, and that it doesn't reference storage outside the account's data.\n @param userOp the user operation to validate."},"functionSelector":"ee219423","id":455,"implemented":false,"kind":"function","modifiers":[],"name":"simulateValidation","nameLocation":"6966:18:3","nodeType":"FunctionDefinition","parameters":{"id":453,"nodeType":"ParameterList","parameters":[{"constant":false,"id":452,"mutability":"mutable","name":"userOp","nameLocation":"7008:6:3","nodeType":"VariableDeclaration","scope":455,"src":"6985:29:3","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$643_calldata_ptr","typeString":"struct UserOperation"},"typeName":{"id":451,"nodeType":"UserDefinedTypeName","pathNode":{"id":450,"name":"UserOperation","nameLocations":["6985:13:3"],"nodeType":"IdentifierPath","referencedDeclaration":643,"src":"6985:13:3"},"referencedDeclaration":643,"src":"6985:13:3","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$643_storage_ptr","typeString":"struct UserOperation"}},"visibility":"internal"}],"src":"6984:31:3"},"returnParameters":{"id":454,"nodeType":"ParameterList","parameters":[],"src":"7024:0:3"},"scope":492,"src":"6957:68:3","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"canonicalName":"IEntryPoint.ReturnInfo","id":468,"members":[{"constant":false,"id":457,"mutability":"mutable","name":"preOpGas","nameLocation":"7660:8:3","nodeType":"VariableDeclaration","scope":468,"src":"7652:16:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":456,"name":"uint256","nodeType":"ElementaryTypeName","src":"7652:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":459,"mutability":"mutable","name":"prefund","nameLocation":"7686:7:3","nodeType":"VariableDeclaration","scope":468,"src":"7678:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":458,"name":"uint256","nodeType":"ElementaryTypeName","src":"7678:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":461,"mutability":"mutable","name":"sigFailed","nameLocation":"7708:9:3","nodeType":"VariableDeclaration","scope":468,"src":"7703:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":460,"name":"bool","nodeType":"ElementaryTypeName","src":"7703:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":463,"mutability":"mutable","name":"validAfter","nameLocation":"7734:10:3","nodeType":"VariableDeclaration","scope":468,"src":"7727:17:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":462,"name":"uint48","nodeType":"ElementaryTypeName","src":"7727:6:3","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"},{"constant":false,"id":465,"mutability":"mutable","name":"validUntil","nameLocation":"7761:10:3","nodeType":"VariableDeclaration","scope":468,"src":"7754:17:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":464,"name":"uint48","nodeType":"ElementaryTypeName","src":"7754:6:3","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"},{"constant":false,"id":467,"mutability":"mutable","name":"paymasterContext","nameLocation":"7787:16:3","nodeType":"VariableDeclaration","scope":468,"src":"7781:22:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":466,"name":"bytes","nodeType":"ElementaryTypeName","src":"7781:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"name":"ReturnInfo","nameLocation":"7631:10:3","nodeType":"StructDefinition","scope":492,"src":"7624:186:3","visibility":"public"},{"canonicalName":"IEntryPoint.AggregatorStakeInfo","id":474,"members":[{"constant":false,"id":470,"mutability":"mutable","name":"aggregator","nameLocation":"7990:10:3","nodeType":"VariableDeclaration","scope":474,"src":"7982:18:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":469,"name":"address","nodeType":"ElementaryTypeName","src":"7982:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":473,"mutability":"mutable","name":"stakeInfo","nameLocation":"8020:9:3","nodeType":"VariableDeclaration","scope":474,"src":"8010:19:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_StakeInfo_$568_storage_ptr","typeString":"struct IStakeManager.StakeInfo"},"typeName":{"id":472,"nodeType":"UserDefinedTypeName","pathNode":{"id":471,"name":"StakeInfo","nameLocations":["8010:9:3"],"nodeType":"IdentifierPath","referencedDeclaration":568,"src":"8010:9:3"},"referencedDeclaration":568,"src":"8010:9:3","typeDescriptions":{"typeIdentifier":"t_struct$_StakeInfo_$568_storage_ptr","typeString":"struct IStakeManager.StakeInfo"}},"visibility":"internal"}],"name":"AggregatorStakeInfo","nameLocation":"7952:19:3","nodeType":"StructDefinition","scope":492,"src":"7945:91:3","visibility":"public"},{"documentation":{"id":475,"nodeType":"StructuredDocumentation","src":"8042:337:3","text":" Get counterfactual sender address.\n  Calculate the sender contract address that will be generated by the initCode and salt in the UserOperation.\n this method always revert, and returns the address in SenderAddressResult error\n @param initCode the constructor code to be passed into the UserOperation."},"functionSelector":"9b249f69","id":480,"implemented":false,"kind":"function","modifiers":[],"name":"getSenderAddress","nameLocation":"8393:16:3","nodeType":"FunctionDefinition","parameters":{"id":478,"nodeType":"ParameterList","parameters":[{"constant":false,"id":477,"mutability":"mutable","name":"initCode","nameLocation":"8423:8:3","nodeType":"VariableDeclaration","scope":480,"src":"8410:21:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":476,"name":"bytes","nodeType":"ElementaryTypeName","src":"8410:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"8409:23:3"},"returnParameters":{"id":479,"nodeType":"ParameterList","parameters":[],"src":"8441:0:3"},"scope":492,"src":"8384:58:3","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":481,"nodeType":"StructuredDocumentation","src":"8449:847:3","text":" simulate full execution of a UserOperation (including both validation and target execution)\n this method will always revert with \"ExecutionResult\".\n it performs full validation of the UserOperation, but ignores signature error.\n an optional target address is called after the userop succeeds, and its value is returned\n (before the entire call is reverted)\n Note that in order to collect the the success/failure of the target call, it must be executed\n with trace enabled to track the emitted events.\n @param op the UserOperation to simulate\n @param target if nonzero, a target address to call after userop simulation. If called, the targetSuccess and targetResult\n        are set to the return from that call.\n @param targetCallData callData to pass to target address"},"functionSelector":"d6383f94","id":491,"implemented":false,"kind":"function","modifiers":[],"name":"simulateHandleOp","nameLocation":"9310:16:3","nodeType":"FunctionDefinition","parameters":{"id":489,"nodeType":"ParameterList","parameters":[{"constant":false,"id":484,"mutability":"mutable","name":"op","nameLocation":"9350:2:3","nodeType":"VariableDeclaration","scope":491,"src":"9327:25:3","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$643_calldata_ptr","typeString":"struct UserOperation"},"typeName":{"id":483,"nodeType":"UserDefinedTypeName","pathNode":{"id":482,"name":"UserOperation","nameLocations":["9327:13:3"],"nodeType":"IdentifierPath","referencedDeclaration":643,"src":"9327:13:3"},"referencedDeclaration":643,"src":"9327:13:3","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$643_storage_ptr","typeString":"struct UserOperation"}},"visibility":"internal"},{"constant":false,"id":486,"mutability":"mutable","name":"target","nameLocation":"9362:6:3","nodeType":"VariableDeclaration","scope":491,"src":"9354:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":485,"name":"address","nodeType":"ElementaryTypeName","src":"9354:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":488,"mutability":"mutable","name":"targetCallData","nameLocation":"9385:14:3","nodeType":"VariableDeclaration","scope":491,"src":"9370:29:3","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":487,"name":"bytes","nodeType":"ElementaryTypeName","src":"9370:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"9326:74:3"},"returnParameters":{"id":490,"nodeType":"ParameterList","parameters":[],"src":"9409:0:3"},"scope":492,"src":"9301:109:3","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":493,"src":"430:8982:3","usedErrors":[351,356,371,389,394,409]}],"src":"163:9251:3"}},"@account-abstraction/contracts/interfaces/INonceManager.sol":{"id":4,"ast":{"absolutePath":"@account-abstraction/contracts/interfaces/INonceManager.sol","exportedSymbols":{"INonceManager":[511]},"id":512,"license":"GPL-3.0","nodeType":"SourceUnit","nodes":[{"id":494,"literals":["solidity","^","0.8",".12"],"nodeType":"PragmaDirective","src":"36:24:4"},{"abstract":false,"baseContracts":[],"canonicalName":"INonceManager","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":511,"linearizedBaseContracts":[511],"name":"INonceManager","nameLocation":"72:13:4","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":495,"nodeType":"StructuredDocumentation","src":"93:416:4","text":" Return the next nonce for this sender.\n Within a given key, the nonce values are sequenced (starting with zero, and incremented by one on each userop)\n But UserOp with different keys can come with arbitrary order.\n @param sender the account address\n @param key the high 192 bit of the nonce\n @return nonce a full nonce to pass for next UserOp with this sender."},"functionSelector":"35567e1a","id":504,"implemented":false,"kind":"function","modifiers":[],"name":"getNonce","nameLocation":"523:8:4","nodeType":"FunctionDefinition","parameters":{"id":500,"nodeType":"ParameterList","parameters":[{"constant":false,"id":497,"mutability":"mutable","name":"sender","nameLocation":"540:6:4","nodeType":"VariableDeclaration","scope":504,"src":"532:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":496,"name":"address","nodeType":"ElementaryTypeName","src":"532:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":499,"mutability":"mutable","name":"key","nameLocation":"556:3:4","nodeType":"VariableDeclaration","scope":504,"src":"548:11:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"},"typeName":{"id":498,"name":"uint192","nodeType":"ElementaryTypeName","src":"548:7:4","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"visibility":"internal"}],"src":"531:29:4"},"returnParameters":{"id":503,"nodeType":"ParameterList","parameters":[{"constant":false,"id":502,"mutability":"mutable","name":"nonce","nameLocation":"596:5:4","nodeType":"VariableDeclaration","scope":504,"src":"588:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":501,"name":"uint256","nodeType":"ElementaryTypeName","src":"588:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"587:15:4"},"scope":511,"src":"514:89:4","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":505,"nodeType":"StructuredDocumentation","src":"609:449:4","text":" Manually increment the nonce of the sender.\n This method is exposed just for completeness..\n Account does NOT need to call it, neither during validation, nor elsewhere,\n as the EntryPoint will update the nonce regardless.\n Possible use-case is call it with various keys to \"initialize\" their nonces to one, so that future\n UserOperations will not pay extra for the first transaction with a given key."},"functionSelector":"0bd28e3b","id":510,"implemented":false,"kind":"function","modifiers":[],"name":"incrementNonce","nameLocation":"1072:14:4","nodeType":"FunctionDefinition","parameters":{"id":508,"nodeType":"ParameterList","parameters":[{"constant":false,"id":507,"mutability":"mutable","name":"key","nameLocation":"1095:3:4","nodeType":"VariableDeclaration","scope":510,"src":"1087:11:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"},"typeName":{"id":506,"name":"uint192","nodeType":"ElementaryTypeName","src":"1087:7:4","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"visibility":"internal"}],"src":"1086:13:4"},"returnParameters":{"id":509,"nodeType":"ParameterList","parameters":[],"src":"1108:0:4"},"scope":511,"src":"1063:46:4","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":512,"src":"62:1049:4","usedErrors":[]}],"src":"36:1076:4"}},"@account-abstraction/contracts/interfaces/IStakeManager.sol":{"id":5,"ast":{"absolutePath":"@account-abstraction/contracts/interfaces/IStakeManager.sol","exportedSymbols":{"IStakeManager":[616]},"id":617,"license":"GPL-3.0-only","nodeType":"SourceUnit","nodes":[{"id":513,"literals":["solidity","^","0.8",".12"],"nodeType":"PragmaDirective","src":"41:24:5"},{"abstract":false,"baseContracts":[],"canonicalName":"IStakeManager","contractDependencies":[],"contractKind":"interface","documentation":{"id":514,"nodeType":"StructuredDocumentation","src":"67:211:5","text":" manage deposits and stakes.\n deposit is just a balance used to pay for UserOperations (either by a paymaster or an account)\n stake is value locked for at least \"unstakeDelay\" by the staked entity."},"fullyImplemented":false,"id":616,"linearizedBaseContracts":[616],"name":"IStakeManager","nameLocation":"289:13:5","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"eventSelector":"2da466a7b24304f47e87fa2e1e5a81b9831ce54fec19055ce277ca2f39ba42c4","id":520,"name":"Deposited","nameLocation":"316:9:5","nodeType":"EventDefinition","parameters":{"id":519,"nodeType":"ParameterList","parameters":[{"constant":false,"id":516,"indexed":true,"mutability":"mutable","name":"account","nameLocation":"351:7:5","nodeType":"VariableDeclaration","scope":520,"src":"335:23:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":515,"name":"address","nodeType":"ElementaryTypeName","src":"335:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":518,"indexed":false,"mutability":"mutable","name":"totalDeposit","nameLocation":"376:12:5","nodeType":"VariableDeclaration","scope":520,"src":"368:20:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":517,"name":"uint256","nodeType":"ElementaryTypeName","src":"368:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"325:69:5"},"src":"310:85:5"},{"anonymous":false,"eventSelector":"d1c19fbcd4551a5edfb66d43d2e337c04837afda3482b42bdf569a8fccdae5fb","id":528,"name":"Withdrawn","nameLocation":"407:9:5","nodeType":"EventDefinition","parameters":{"id":527,"nodeType":"ParameterList","parameters":[{"constant":false,"id":522,"indexed":true,"mutability":"mutable","name":"account","nameLocation":"442:7:5","nodeType":"VariableDeclaration","scope":528,"src":"426:23:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":521,"name":"address","nodeType":"ElementaryTypeName","src":"426:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":524,"indexed":false,"mutability":"mutable","name":"withdrawAddress","nameLocation":"467:15:5","nodeType":"VariableDeclaration","scope":528,"src":"459:23:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":523,"name":"address","nodeType":"ElementaryTypeName","src":"459:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":526,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"500:6:5","nodeType":"VariableDeclaration","scope":528,"src":"492:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":525,"name":"uint256","nodeType":"ElementaryTypeName","src":"492:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"416:96:5"},"src":"401:112:5"},{"anonymous":false,"documentation":{"id":529,"nodeType":"StructuredDocumentation","src":"519:52:5","text":"Emitted when stake or unstake delay are modified"},"eventSelector":"a5ae833d0bb1dcd632d98a8b70973e8516812898e19bf27b70071ebc8dc52c01","id":537,"name":"StakeLocked","nameLocation":"582:11:5","nodeType":"EventDefinition","parameters":{"id":536,"nodeType":"ParameterList","parameters":[{"constant":false,"id":531,"indexed":true,"mutability":"mutable","name":"account","nameLocation":"619:7:5","nodeType":"VariableDeclaration","scope":537,"src":"603:23:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":530,"name":"address","nodeType":"ElementaryTypeName","src":"603:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":533,"indexed":false,"mutability":"mutable","name":"totalStaked","nameLocation":"644:11:5","nodeType":"VariableDeclaration","scope":537,"src":"636:19:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":532,"name":"uint256","nodeType":"ElementaryTypeName","src":"636:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":535,"indexed":false,"mutability":"mutable","name":"unstakeDelaySec","nameLocation":"673:15:5","nodeType":"VariableDeclaration","scope":537,"src":"665:23:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":534,"name":"uint256","nodeType":"ElementaryTypeName","src":"665:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"593:101:5"},"src":"576:119:5"},{"anonymous":false,"documentation":{"id":538,"nodeType":"StructuredDocumentation","src":"701:52:5","text":"Emitted once a stake is scheduled for withdrawal"},"eventSelector":"fa9b3c14cc825c412c9ed81b3ba365a5b459439403f18829e572ed53a4180f0a","id":544,"name":"StakeUnlocked","nameLocation":"764:13:5","nodeType":"EventDefinition","parameters":{"id":543,"nodeType":"ParameterList","parameters":[{"constant":false,"id":540,"indexed":true,"mutability":"mutable","name":"account","nameLocation":"803:7:5","nodeType":"VariableDeclaration","scope":544,"src":"787:23:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":539,"name":"address","nodeType":"ElementaryTypeName","src":"787:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":542,"indexed":false,"mutability":"mutable","name":"withdrawTime","nameLocation":"828:12:5","nodeType":"VariableDeclaration","scope":544,"src":"820:20:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":541,"name":"uint256","nodeType":"ElementaryTypeName","src":"820:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"777:69:5"},"src":"758:89:5"},{"anonymous":false,"eventSelector":"b7c918e0e249f999e965cafeb6c664271b3f4317d296461500e71da39f0cbda3","id":552,"name":"StakeWithdrawn","nameLocation":"859:14:5","nodeType":"EventDefinition","parameters":{"id":551,"nodeType":"ParameterList","parameters":[{"constant":false,"id":546,"indexed":true,"mutability":"mutable","name":"account","nameLocation":"899:7:5","nodeType":"VariableDeclaration","scope":552,"src":"883:23:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":545,"name":"address","nodeType":"ElementaryTypeName","src":"883:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":548,"indexed":false,"mutability":"mutable","name":"withdrawAddress","nameLocation":"924:15:5","nodeType":"VariableDeclaration","scope":552,"src":"916:23:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":547,"name":"address","nodeType":"ElementaryTypeName","src":"916:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":550,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"957:6:5","nodeType":"VariableDeclaration","scope":552,"src":"949:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":549,"name":"uint256","nodeType":"ElementaryTypeName","src":"949:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"873:96:5"},"src":"853:117:5"},{"canonicalName":"IStakeManager.DepositInfo","id":563,"members":[{"constant":false,"id":554,"mutability":"mutable","name":"deposit","nameLocation":"1650:7:5","nodeType":"VariableDeclaration","scope":563,"src":"1642:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"},"typeName":{"id":553,"name":"uint112","nodeType":"ElementaryTypeName","src":"1642:7:5","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"visibility":"internal"},{"constant":false,"id":556,"mutability":"mutable","name":"staked","nameLocation":"1672:6:5","nodeType":"VariableDeclaration","scope":563,"src":"1667:11:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":555,"name":"bool","nodeType":"ElementaryTypeName","src":"1667:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":558,"mutability":"mutable","name":"stake","nameLocation":"1696:5:5","nodeType":"VariableDeclaration","scope":563,"src":"1688:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"},"typeName":{"id":557,"name":"uint112","nodeType":"ElementaryTypeName","src":"1688:7:5","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"visibility":"internal"},{"constant":false,"id":560,"mutability":"mutable","name":"unstakeDelaySec","nameLocation":"1718:15:5","nodeType":"VariableDeclaration","scope":563,"src":"1711:22:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":559,"name":"uint32","nodeType":"ElementaryTypeName","src":"1711:6:5","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":562,"mutability":"mutable","name":"withdrawTime","nameLocation":"1750:12:5","nodeType":"VariableDeclaration","scope":563,"src":"1743:19:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":561,"name":"uint48","nodeType":"ElementaryTypeName","src":"1743:6:5","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"name":"DepositInfo","nameLocation":"1620:11:5","nodeType":"StructDefinition","scope":616,"src":"1613:156:5","visibility":"public"},{"canonicalName":"IStakeManager.StakeInfo","id":568,"members":[{"constant":false,"id":565,"mutability":"mutable","name":"stake","nameLocation":"1871:5:5","nodeType":"VariableDeclaration","scope":568,"src":"1863:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":564,"name":"uint256","nodeType":"ElementaryTypeName","src":"1863:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":567,"mutability":"mutable","name":"unstakeDelaySec","nameLocation":"1894:15:5","nodeType":"VariableDeclaration","scope":568,"src":"1886:23:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":566,"name":"uint256","nodeType":"ElementaryTypeName","src":"1886:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"StakeInfo","nameLocation":"1843:9:5","nodeType":"StructDefinition","scope":616,"src":"1836:80:5","visibility":"public"},{"documentation":{"id":569,"nodeType":"StructuredDocumentation","src":"1922:60:5","text":"@return info - full deposit information of given account"},"functionSelector":"5287ce12","id":577,"implemented":false,"kind":"function","modifiers":[],"name":"getDepositInfo","nameLocation":"1996:14:5","nodeType":"FunctionDefinition","parameters":{"id":572,"nodeType":"ParameterList","parameters":[{"constant":false,"id":571,"mutability":"mutable","name":"account","nameLocation":"2019:7:5","nodeType":"VariableDeclaration","scope":577,"src":"2011:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":570,"name":"address","nodeType":"ElementaryTypeName","src":"2011:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2010:17:5"},"returnParameters":{"id":576,"nodeType":"ParameterList","parameters":[{"constant":false,"id":575,"mutability":"mutable","name":"info","nameLocation":"2070:4:5","nodeType":"VariableDeclaration","scope":577,"src":"2051:23:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_DepositInfo_$563_memory_ptr","typeString":"struct IStakeManager.DepositInfo"},"typeName":{"id":574,"nodeType":"UserDefinedTypeName","pathNode":{"id":573,"name":"DepositInfo","nameLocations":["2051:11:5"],"nodeType":"IdentifierPath","referencedDeclaration":563,"src":"2051:11:5"},"referencedDeclaration":563,"src":"2051:11:5","typeDescriptions":{"typeIdentifier":"t_struct$_DepositInfo_$563_storage_ptr","typeString":"struct IStakeManager.DepositInfo"}},"visibility":"internal"}],"src":"2050:25:5"},"scope":616,"src":"1987:89:5","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":578,"nodeType":"StructuredDocumentation","src":"2082:56:5","text":"@return the deposit (for gas payment) of the account"},"functionSelector":"70a08231","id":585,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"2152:9:5","nodeType":"FunctionDefinition","parameters":{"id":581,"nodeType":"ParameterList","parameters":[{"constant":false,"id":580,"mutability":"mutable","name":"account","nameLocation":"2170:7:5","nodeType":"VariableDeclaration","scope":585,"src":"2162:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":579,"name":"address","nodeType":"ElementaryTypeName","src":"2162:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2161:17:5"},"returnParameters":{"id":584,"nodeType":"ParameterList","parameters":[{"constant":false,"id":583,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":585,"src":"2202:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":582,"name":"uint256","nodeType":"ElementaryTypeName","src":"2202:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2201:9:5"},"scope":616,"src":"2143:68:5","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":586,"nodeType":"StructuredDocumentation","src":"2217:58:5","text":" add to the deposit of the given account"},"functionSelector":"b760faf9","id":591,"implemented":false,"kind":"function","modifiers":[],"name":"depositTo","nameLocation":"2289:9:5","nodeType":"FunctionDefinition","parameters":{"id":589,"nodeType":"ParameterList","parameters":[{"constant":false,"id":588,"mutability":"mutable","name":"account","nameLocation":"2307:7:5","nodeType":"VariableDeclaration","scope":591,"src":"2299:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":587,"name":"address","nodeType":"ElementaryTypeName","src":"2299:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2298:17:5"},"returnParameters":{"id":590,"nodeType":"ParameterList","parameters":[],"src":"2332:0:5"},"scope":616,"src":"2280:53:5","stateMutability":"payable","virtual":false,"visibility":"external"},{"documentation":{"id":592,"nodeType":"StructuredDocumentation","src":"2339:201:5","text":" add to the account's stake - amount and delay\n any pending unstake is first cancelled.\n @param _unstakeDelaySec the new lock duration before the deposit can be withdrawn."},"functionSelector":"0396cb60","id":597,"implemented":false,"kind":"function","modifiers":[],"name":"addStake","nameLocation":"2554:8:5","nodeType":"FunctionDefinition","parameters":{"id":595,"nodeType":"ParameterList","parameters":[{"constant":false,"id":594,"mutability":"mutable","name":"_unstakeDelaySec","nameLocation":"2570:16:5","nodeType":"VariableDeclaration","scope":597,"src":"2563:23:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":593,"name":"uint32","nodeType":"ElementaryTypeName","src":"2563:6:5","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"2562:25:5"},"returnParameters":{"id":596,"nodeType":"ParameterList","parameters":[],"src":"2604:0:5"},"scope":616,"src":"2545:60:5","stateMutability":"payable","virtual":false,"visibility":"external"},{"documentation":{"id":598,"nodeType":"StructuredDocumentation","src":"2611:128:5","text":" attempt to unlock the stake.\n the value can be withdrawn (using withdrawStake) after the unstake delay."},"functionSelector":"bb9fe6bf","id":601,"implemented":false,"kind":"function","modifiers":[],"name":"unlockStake","nameLocation":"2753:11:5","nodeType":"FunctionDefinition","parameters":{"id":599,"nodeType":"ParameterList","parameters":[],"src":"2764:2:5"},"returnParameters":{"id":600,"nodeType":"ParameterList","parameters":[],"src":"2775:0:5"},"scope":616,"src":"2744:32:5","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":602,"nodeType":"StructuredDocumentation","src":"2782:194:5","text":" withdraw from the (unlocked) stake.\n must first call unlockStake and wait for the unstakeDelay to pass\n @param withdrawAddress the address to send withdrawn value."},"functionSelector":"c23a5cea","id":607,"implemented":false,"kind":"function","modifiers":[],"name":"withdrawStake","nameLocation":"2990:13:5","nodeType":"FunctionDefinition","parameters":{"id":605,"nodeType":"ParameterList","parameters":[{"constant":false,"id":604,"mutability":"mutable","name":"withdrawAddress","nameLocation":"3020:15:5","nodeType":"VariableDeclaration","scope":607,"src":"3004:31:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":603,"name":"address","nodeType":"ElementaryTypeName","src":"3004:15:5","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"}],"src":"3003:33:5"},"returnParameters":{"id":606,"nodeType":"ParameterList","parameters":[],"src":"3045:0:5"},"scope":616,"src":"2981:65:5","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":608,"nodeType":"StructuredDocumentation","src":"3052:165:5","text":" withdraw from the deposit.\n @param withdrawAddress the address to send withdrawn value.\n @param withdrawAmount the amount to withdraw."},"functionSelector":"205c2878","id":615,"implemented":false,"kind":"function","modifiers":[],"name":"withdrawTo","nameLocation":"3231:10:5","nodeType":"FunctionDefinition","parameters":{"id":613,"nodeType":"ParameterList","parameters":[{"constant":false,"id":610,"mutability":"mutable","name":"withdrawAddress","nameLocation":"3258:15:5","nodeType":"VariableDeclaration","scope":615,"src":"3242:31:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":609,"name":"address","nodeType":"ElementaryTypeName","src":"3242:15:5","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"},{"constant":false,"id":612,"mutability":"mutable","name":"withdrawAmount","nameLocation":"3283:14:5","nodeType":"VariableDeclaration","scope":615,"src":"3275:22:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":611,"name":"uint256","nodeType":"ElementaryTypeName","src":"3275:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3241:57:5"},"returnParameters":{"id":614,"nodeType":"ParameterList","parameters":[],"src":"3307:0:5"},"scope":616,"src":"3222:86:5","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":617,"src":"279:3031:5","usedErrors":[]}],"src":"41:3270:5"}},"@account-abstraction/contracts/interfaces/UserOperation.sol":{"id":6,"ast":{"absolutePath":"@account-abstraction/contracts/interfaces/UserOperation.sol","exportedSymbols":{"UserOperation":[643],"UserOperationLib":[813],"calldataKeccak":[237]},"id":814,"license":"GPL-3.0","nodeType":"SourceUnit","nodes":[{"id":618,"literals":["solidity","^","0.8",".12"],"nodeType":"PragmaDirective","src":"36:24:6"},{"absolutePath":"@account-abstraction/contracts/core/Helpers.sol","file":"../core/Helpers.sol","id":620,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":814,"sourceUnit":238,"src":"104:51:6","symbolAliases":[{"foreign":{"id":619,"name":"calldataKeccak","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":237,"src":"112:14:6","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"canonicalName":"UserOperation","id":643,"members":[{"constant":false,"id":622,"mutability":"mutable","name":"sender","nameLocation":"1237:6:6","nodeType":"VariableDeclaration","scope":643,"src":"1229:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":621,"name":"address","nodeType":"ElementaryTypeName","src":"1229:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":624,"mutability":"mutable","name":"nonce","nameLocation":"1261:5:6","nodeType":"VariableDeclaration","scope":643,"src":"1253:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":623,"name":"uint256","nodeType":"ElementaryTypeName","src":"1253:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":626,"mutability":"mutable","name":"initCode","nameLocation":"1282:8:6","nodeType":"VariableDeclaration","scope":643,"src":"1276:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":625,"name":"bytes","nodeType":"ElementaryTypeName","src":"1276:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":628,"mutability":"mutable","name":"callData","nameLocation":"1306:8:6","nodeType":"VariableDeclaration","scope":643,"src":"1300:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":627,"name":"bytes","nodeType":"ElementaryTypeName","src":"1300:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":630,"mutability":"mutable","name":"callGasLimit","nameLocation":"1332:12:6","nodeType":"VariableDeclaration","scope":643,"src":"1324:20:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":629,"name":"uint256","nodeType":"ElementaryTypeName","src":"1324:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":632,"mutability":"mutable","name":"verificationGasLimit","nameLocation":"1362:20:6","nodeType":"VariableDeclaration","scope":643,"src":"1354:28:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":631,"name":"uint256","nodeType":"ElementaryTypeName","src":"1354:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":634,"mutability":"mutable","name":"preVerificationGas","nameLocation":"1400:18:6","nodeType":"VariableDeclaration","scope":643,"src":"1392:26:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":633,"name":"uint256","nodeType":"ElementaryTypeName","src":"1392:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":636,"mutability":"mutable","name":"maxFeePerGas","nameLocation":"1436:12:6","nodeType":"VariableDeclaration","scope":643,"src":"1428:20:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":635,"name":"uint256","nodeType":"ElementaryTypeName","src":"1428:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":638,"mutability":"mutable","name":"maxPriorityFeePerGas","nameLocation":"1466:20:6","nodeType":"VariableDeclaration","scope":643,"src":"1458:28:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":637,"name":"uint256","nodeType":"ElementaryTypeName","src":"1458:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":640,"mutability":"mutable","name":"paymasterAndData","nameLocation":"1502:16:6","nodeType":"VariableDeclaration","scope":643,"src":"1496:22:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":639,"name":"bytes","nodeType":"ElementaryTypeName","src":"1496:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":642,"mutability":"mutable","name":"signature","nameLocation":"1534:9:6","nodeType":"VariableDeclaration","scope":643,"src":"1528:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":641,"name":"bytes","nodeType":"ElementaryTypeName","src":"1528:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"name":"UserOperation","nameLocation":"1204:13:6","nodeType":"StructDefinition","scope":814,"src":"1197:353:6","visibility":"public"},{"abstract":false,"baseContracts":[],"canonicalName":"UserOperationLib","contractDependencies":[],"contractKind":"library","documentation":{"id":644,"nodeType":"StructuredDocumentation","src":"1552:77:6","text":" Utility functions helpful when working with UserOperation structs."},"fullyImplemented":true,"id":813,"linearizedBaseContracts":[813],"name":"UserOperationLib","nameLocation":"1638:16:6","nodeType":"ContractDefinition","nodes":[{"body":{"id":664,"nodeType":"Block","src":"1744:199:6","statements":[{"assignments":[653],"declarations":[{"constant":false,"id":653,"mutability":"mutable","name":"data","nameLocation":"1762:4:6","nodeType":"VariableDeclaration","scope":664,"src":"1754:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":652,"name":"address","nodeType":"ElementaryTypeName","src":"1754:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":654,"nodeType":"VariableDeclarationStatement","src":"1754:12:6"},{"AST":{"nodeType":"YulBlock","src":"1868:30:6","statements":[{"nodeType":"YulAssignment","src":"1869:28:6","value":{"arguments":[{"name":"userOp","nodeType":"YulIdentifier","src":"1890:6:6"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1877:12:6"},"nodeType":"YulFunctionCall","src":"1877:20:6"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"1869:4:6"}]}]},"evmVersion":"london","externalReferences":[{"declaration":653,"isOffset":false,"isSlot":false,"src":"1869:4:6","valueSize":1},{"declaration":647,"isOffset":false,"isSlot":false,"src":"1890:6:6","valueSize":1}],"id":655,"nodeType":"InlineAssembly","src":"1859:39:6"},{"expression":{"arguments":[{"arguments":[{"id":660,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":653,"src":"1930:4:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":659,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1922:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":658,"name":"uint160","nodeType":"ElementaryTypeName","src":"1922:7:6","typeDescriptions":{}}},"id":661,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1922:13:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":657,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1914:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":656,"name":"address","nodeType":"ElementaryTypeName","src":"1914:7:6","typeDescriptions":{}}},"id":662,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1914:22:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":651,"id":663,"nodeType":"Return","src":"1907:29:6"}]},"id":665,"implemented":true,"kind":"function","modifiers":[],"name":"getSender","nameLocation":"1671:9:6","nodeType":"FunctionDefinition","parameters":{"id":648,"nodeType":"ParameterList","parameters":[{"constant":false,"id":647,"mutability":"mutable","name":"userOp","nameLocation":"1704:6:6","nodeType":"VariableDeclaration","scope":665,"src":"1681:29:6","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$643_calldata_ptr","typeString":"struct UserOperation"},"typeName":{"id":646,"nodeType":"UserDefinedTypeName","pathNode":{"id":645,"name":"UserOperation","nameLocations":["1681:13:6"],"nodeType":"IdentifierPath","referencedDeclaration":643,"src":"1681:13:6"},"referencedDeclaration":643,"src":"1681:13:6","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$643_storage_ptr","typeString":"struct UserOperation"}},"visibility":"internal"}],"src":"1680:31:6"},"returnParameters":{"id":651,"nodeType":"ParameterList","parameters":[{"constant":false,"id":650,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":665,"src":"1735:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":649,"name":"address","nodeType":"ElementaryTypeName","src":"1735:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1734:9:6"},"scope":813,"src":"1662:281:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":699,"nodeType":"Block","src":"2164:391:6","statements":[{"id":698,"nodeType":"UncheckedBlock","src":"2170:379:6","statements":[{"assignments":[674],"declarations":[{"constant":false,"id":674,"mutability":"mutable","name":"maxFeePerGas","nameLocation":"2198:12:6","nodeType":"VariableDeclaration","scope":698,"src":"2190:20:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":673,"name":"uint256","nodeType":"ElementaryTypeName","src":"2190:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":677,"initialValue":{"expression":{"id":675,"name":"userOp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":668,"src":"2213:6:6","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$643_calldata_ptr","typeString":"struct UserOperation calldata"}},"id":676,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2220:12:6","memberName":"maxFeePerGas","nodeType":"MemberAccess","referencedDeclaration":636,"src":"2213:19:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2190:42:6"},{"assignments":[679],"declarations":[{"constant":false,"id":679,"mutability":"mutable","name":"maxPriorityFeePerGas","nameLocation":"2250:20:6","nodeType":"VariableDeclaration","scope":698,"src":"2242:28:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":678,"name":"uint256","nodeType":"ElementaryTypeName","src":"2242:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":682,"initialValue":{"expression":{"id":680,"name":"userOp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":668,"src":"2273:6:6","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$643_calldata_ptr","typeString":"struct UserOperation calldata"}},"id":681,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2280:20:6","memberName":"maxPriorityFeePerGas","nodeType":"MemberAccess","referencedDeclaration":638,"src":"2273:27:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2242:58:6"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":685,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":683,"name":"maxFeePerGas","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":674,"src":"2314:12:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":684,"name":"maxPriorityFeePerGas","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":679,"src":"2330:20:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2314:36:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":689,"nodeType":"IfStatement","src":"2310:161:6","trueBody":{"id":688,"nodeType":"Block","src":"2352:119:6","statements":[{"expression":{"id":686,"name":"maxFeePerGas","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":674,"src":"2448:12:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":672,"id":687,"nodeType":"Return","src":"2441:19:6"}]}},{"expression":{"arguments":[{"id":691,"name":"maxFeePerGas","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":674,"src":"2491:12:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":695,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":692,"name":"maxPriorityFeePerGas","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":679,"src":"2505:20:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"expression":{"id":693,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"2528:5:6","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":694,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2534:7:6","memberName":"basefee","nodeType":"MemberAccess","src":"2528:13:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2505:36:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":690,"name":"min","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":812,"src":"2487:3:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":696,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2487:55:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":672,"id":697,"nodeType":"Return","src":"2480:62:6"}]}]},"id":700,"implemented":true,"kind":"function","modifiers":[],"name":"gasPrice","nameLocation":"2092:8:6","nodeType":"FunctionDefinition","parameters":{"id":669,"nodeType":"ParameterList","parameters":[{"constant":false,"id":668,"mutability":"mutable","name":"userOp","nameLocation":"2124:6:6","nodeType":"VariableDeclaration","scope":700,"src":"2101:29:6","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$643_calldata_ptr","typeString":"struct UserOperation"},"typeName":{"id":667,"nodeType":"UserDefinedTypeName","pathNode":{"id":666,"name":"UserOperation","nameLocations":["2101:13:6"],"nodeType":"IdentifierPath","referencedDeclaration":643,"src":"2101:13:6"},"referencedDeclaration":643,"src":"2101:13:6","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$643_storage_ptr","typeString":"struct UserOperation"}},"visibility":"internal"}],"src":"2100:31:6"},"returnParameters":{"id":672,"nodeType":"ParameterList","parameters":[{"constant":false,"id":671,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":700,"src":"2155:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":670,"name":"uint256","nodeType":"ElementaryTypeName","src":"2155:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2154:9:6"},"scope":813,"src":"2083:472:6","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":779,"nodeType":"Block","src":"2647:856:6","statements":[{"assignments":[709],"declarations":[{"constant":false,"id":709,"mutability":"mutable","name":"sender","nameLocation":"2665:6:6","nodeType":"VariableDeclaration","scope":779,"src":"2657:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":708,"name":"address","nodeType":"ElementaryTypeName","src":"2657:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":713,"initialValue":{"arguments":[{"id":711,"name":"userOp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":703,"src":"2684:6:6","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$643_calldata_ptr","typeString":"struct UserOperation calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_UserOperation_$643_calldata_ptr","typeString":"struct UserOperation calldata"}],"id":710,"name":"getSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":665,"src":"2674:9:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_UserOperation_$643_calldata_ptr_$returns$_t_address_$","typeString":"function (struct UserOperation calldata) pure returns (address)"}},"id":712,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2674:17:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"2657:34:6"},{"assignments":[715],"declarations":[{"constant":false,"id":715,"mutability":"mutable","name":"nonce","nameLocation":"2709:5:6","nodeType":"VariableDeclaration","scope":779,"src":"2701:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":714,"name":"uint256","nodeType":"ElementaryTypeName","src":"2701:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":718,"initialValue":{"expression":{"id":716,"name":"userOp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":703,"src":"2717:6:6","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$643_calldata_ptr","typeString":"struct UserOperation calldata"}},"id":717,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2724:5:6","memberName":"nonce","nodeType":"MemberAccess","referencedDeclaration":624,"src":"2717:12:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2701:28:6"},{"assignments":[720],"declarations":[{"constant":false,"id":720,"mutability":"mutable","name":"hashInitCode","nameLocation":"2747:12:6","nodeType":"VariableDeclaration","scope":779,"src":"2739:20:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":719,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2739:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":725,"initialValue":{"arguments":[{"expression":{"id":722,"name":"userOp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":703,"src":"2777:6:6","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$643_calldata_ptr","typeString":"struct UserOperation calldata"}},"id":723,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2784:8:6","memberName":"initCode","nodeType":"MemberAccess","referencedDeclaration":626,"src":"2777:15:6","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}],"id":721,"name":"calldataKeccak","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":237,"src":"2762:14:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_calldata_ptr_$returns$_t_bytes32_$","typeString":"function (bytes calldata) pure returns (bytes32)"}},"id":724,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2762:31:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"2739:54:6"},{"assignments":[727],"declarations":[{"constant":false,"id":727,"mutability":"mutable","name":"hashCallData","nameLocation":"2811:12:6","nodeType":"VariableDeclaration","scope":779,"src":"2803:20:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":726,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2803:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":732,"initialValue":{"arguments":[{"expression":{"id":729,"name":"userOp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":703,"src":"2841:6:6","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$643_calldata_ptr","typeString":"struct UserOperation calldata"}},"id":730,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2848:8:6","memberName":"callData","nodeType":"MemberAccess","referencedDeclaration":628,"src":"2841:15:6","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}],"id":728,"name":"calldataKeccak","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":237,"src":"2826:14:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_calldata_ptr_$returns$_t_bytes32_$","typeString":"function (bytes calldata) pure returns (bytes32)"}},"id":731,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2826:31:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"2803:54:6"},{"assignments":[734],"declarations":[{"constant":false,"id":734,"mutability":"mutable","name":"callGasLimit","nameLocation":"2875:12:6","nodeType":"VariableDeclaration","scope":779,"src":"2867:20:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":733,"name":"uint256","nodeType":"ElementaryTypeName","src":"2867:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":737,"initialValue":{"expression":{"id":735,"name":"userOp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":703,"src":"2890:6:6","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$643_calldata_ptr","typeString":"struct UserOperation calldata"}},"id":736,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2897:12:6","memberName":"callGasLimit","nodeType":"MemberAccess","referencedDeclaration":630,"src":"2890:19:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2867:42:6"},{"assignments":[739],"declarations":[{"constant":false,"id":739,"mutability":"mutable","name":"verificationGasLimit","nameLocation":"2927:20:6","nodeType":"VariableDeclaration","scope":779,"src":"2919:28:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":738,"name":"uint256","nodeType":"ElementaryTypeName","src":"2919:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":742,"initialValue":{"expression":{"id":740,"name":"userOp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":703,"src":"2950:6:6","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$643_calldata_ptr","typeString":"struct UserOperation calldata"}},"id":741,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2957:20:6","memberName":"verificationGasLimit","nodeType":"MemberAccess","referencedDeclaration":632,"src":"2950:27:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2919:58:6"},{"assignments":[744],"declarations":[{"constant":false,"id":744,"mutability":"mutable","name":"preVerificationGas","nameLocation":"2995:18:6","nodeType":"VariableDeclaration","scope":779,"src":"2987:26:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":743,"name":"uint256","nodeType":"ElementaryTypeName","src":"2987:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":747,"initialValue":{"expression":{"id":745,"name":"userOp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":703,"src":"3016:6:6","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$643_calldata_ptr","typeString":"struct UserOperation calldata"}},"id":746,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3023:18:6","memberName":"preVerificationGas","nodeType":"MemberAccess","referencedDeclaration":634,"src":"3016:25:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2987:54:6"},{"assignments":[749],"declarations":[{"constant":false,"id":749,"mutability":"mutable","name":"maxFeePerGas","nameLocation":"3059:12:6","nodeType":"VariableDeclaration","scope":779,"src":"3051:20:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":748,"name":"uint256","nodeType":"ElementaryTypeName","src":"3051:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":752,"initialValue":{"expression":{"id":750,"name":"userOp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":703,"src":"3074:6:6","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$643_calldata_ptr","typeString":"struct UserOperation calldata"}},"id":751,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3081:12:6","memberName":"maxFeePerGas","nodeType":"MemberAccess","referencedDeclaration":636,"src":"3074:19:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3051:42:6"},{"assignments":[754],"declarations":[{"constant":false,"id":754,"mutability":"mutable","name":"maxPriorityFeePerGas","nameLocation":"3111:20:6","nodeType":"VariableDeclaration","scope":779,"src":"3103:28:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":753,"name":"uint256","nodeType":"ElementaryTypeName","src":"3103:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":757,"initialValue":{"expression":{"id":755,"name":"userOp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":703,"src":"3134:6:6","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$643_calldata_ptr","typeString":"struct UserOperation calldata"}},"id":756,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3141:20:6","memberName":"maxPriorityFeePerGas","nodeType":"MemberAccess","referencedDeclaration":638,"src":"3134:27:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3103:58:6"},{"assignments":[759],"declarations":[{"constant":false,"id":759,"mutability":"mutable","name":"hashPaymasterAndData","nameLocation":"3179:20:6","nodeType":"VariableDeclaration","scope":779,"src":"3171:28:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":758,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3171:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":764,"initialValue":{"arguments":[{"expression":{"id":761,"name":"userOp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":703,"src":"3217:6:6","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$643_calldata_ptr","typeString":"struct UserOperation calldata"}},"id":762,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3224:16:6","memberName":"paymasterAndData","nodeType":"MemberAccess","referencedDeclaration":640,"src":"3217:23:6","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}],"id":760,"name":"calldataKeccak","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":237,"src":"3202:14:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_calldata_ptr_$returns$_t_bytes32_$","typeString":"function (bytes calldata) pure returns (bytes32)"}},"id":763,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3202:39:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"3171:70:6"},{"expression":{"arguments":[{"id":767,"name":"sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":709,"src":"3283:6:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":768,"name":"nonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":715,"src":"3291:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":769,"name":"hashInitCode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":720,"src":"3310:12:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":770,"name":"hashCallData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":727,"src":"3324:12:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":771,"name":"callGasLimit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":734,"src":"3350:12:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":772,"name":"verificationGasLimit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":739,"src":"3364:20:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":773,"name":"preVerificationGas","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":744,"src":"3386:18:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":774,"name":"maxFeePerGas","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":749,"src":"3418:12:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":775,"name":"maxPriorityFeePerGas","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":754,"src":"3432:20:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":776,"name":"hashPaymasterAndData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":759,"src":"3466:20:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":765,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"3259:3:6","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":766,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3263:6:6","memberName":"encode","nodeType":"MemberAccess","src":"3259:10:6","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":777,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3259:237:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":707,"id":778,"nodeType":"Return","src":"3252:244:6"}]},"id":780,"implemented":true,"kind":"function","modifiers":[],"name":"pack","nameLocation":"2570:4:6","nodeType":"FunctionDefinition","parameters":{"id":704,"nodeType":"ParameterList","parameters":[{"constant":false,"id":703,"mutability":"mutable","name":"userOp","nameLocation":"2598:6:6","nodeType":"VariableDeclaration","scope":780,"src":"2575:29:6","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$643_calldata_ptr","typeString":"struct UserOperation"},"typeName":{"id":702,"nodeType":"UserDefinedTypeName","pathNode":{"id":701,"name":"UserOperation","nameLocations":["2575:13:6"],"nodeType":"IdentifierPath","referencedDeclaration":643,"src":"2575:13:6"},"referencedDeclaration":643,"src":"2575:13:6","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$643_storage_ptr","typeString":"struct UserOperation"}},"visibility":"internal"}],"src":"2574:31:6"},"returnParameters":{"id":707,"nodeType":"ParameterList","parameters":[{"constant":false,"id":706,"mutability":"mutable","name":"ret","nameLocation":"2642:3:6","nodeType":"VariableDeclaration","scope":780,"src":"2629:16:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":705,"name":"bytes","nodeType":"ElementaryTypeName","src":"2629:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2628:18:6"},"scope":813,"src":"2561:942:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":794,"nodeType":"Block","src":"3586:47:6","statements":[{"expression":{"arguments":[{"arguments":[{"id":790,"name":"userOp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":783,"src":"3618:6:6","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$643_calldata_ptr","typeString":"struct UserOperation calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_UserOperation_$643_calldata_ptr","typeString":"struct UserOperation calldata"}],"id":789,"name":"pack","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":780,"src":"3613:4:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_UserOperation_$643_calldata_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (struct UserOperation calldata) pure returns (bytes memory)"}},"id":791,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3613:12:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":788,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"3603:9:6","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":792,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3603:23:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":787,"id":793,"nodeType":"Return","src":"3596:30:6"}]},"id":795,"implemented":true,"kind":"function","modifiers":[],"name":"hash","nameLocation":"3518:4:6","nodeType":"FunctionDefinition","parameters":{"id":784,"nodeType":"ParameterList","parameters":[{"constant":false,"id":783,"mutability":"mutable","name":"userOp","nameLocation":"3546:6:6","nodeType":"VariableDeclaration","scope":795,"src":"3523:29:6","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$643_calldata_ptr","typeString":"struct UserOperation"},"typeName":{"id":782,"nodeType":"UserDefinedTypeName","pathNode":{"id":781,"name":"UserOperation","nameLocations":["3523:13:6"],"nodeType":"IdentifierPath","referencedDeclaration":643,"src":"3523:13:6"},"referencedDeclaration":643,"src":"3523:13:6","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$643_storage_ptr","typeString":"struct UserOperation"}},"visibility":"internal"}],"src":"3522:31:6"},"returnParameters":{"id":787,"nodeType":"ParameterList","parameters":[{"constant":false,"id":786,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":795,"src":"3577:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":785,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3577:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3576:9:6"},"scope":813,"src":"3509:124:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":811,"nodeType":"Block","src":"3706:37:6","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":806,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":804,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":797,"src":"3723:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":805,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":799,"src":"3727:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3723:5:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":808,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":799,"src":"3735:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":809,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"3723:13:6","trueExpression":{"id":807,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":797,"src":"3731:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":803,"id":810,"nodeType":"Return","src":"3716:20:6"}]},"id":812,"implemented":true,"kind":"function","modifiers":[],"name":"min","nameLocation":"3648:3:6","nodeType":"FunctionDefinition","parameters":{"id":800,"nodeType":"ParameterList","parameters":[{"constant":false,"id":797,"mutability":"mutable","name":"a","nameLocation":"3660:1:6","nodeType":"VariableDeclaration","scope":812,"src":"3652:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":796,"name":"uint256","nodeType":"ElementaryTypeName","src":"3652:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":799,"mutability":"mutable","name":"b","nameLocation":"3671:1:6","nodeType":"VariableDeclaration","scope":812,"src":"3663:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":798,"name":"uint256","nodeType":"ElementaryTypeName","src":"3663:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3651:22:6"},"returnParameters":{"id":803,"nodeType":"ParameterList","parameters":[{"constant":false,"id":802,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":812,"src":"3697:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":801,"name":"uint256","nodeType":"ElementaryTypeName","src":"3697:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3696:9:6"},"scope":813,"src":"3639:104:6","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":814,"src":"1630:2115:6","usedErrors":[]}],"src":"36:3710:6"}},"@openzeppelin/contracts/utils/Strings.sol":{"id":7,"ast":{"absolutePath":"@openzeppelin/contracts/utils/Strings.sol","exportedSymbols":{"Math":[2214],"Strings":[988]},"id":989,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":815,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"101:23:7"},{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","file":"./math/Math.sol","id":816,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":989,"sourceUnit":2215,"src":"126:25:7","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"Strings","contractDependencies":[],"contractKind":"library","documentation":{"id":817,"nodeType":"StructuredDocumentation","src":"153:34:7","text":" @dev String operations."},"fullyImplemented":true,"id":988,"linearizedBaseContracts":[988],"name":"Strings","nameLocation":"196:7:7","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":820,"mutability":"constant","name":"_SYMBOLS","nameLocation":"235:8:7","nodeType":"VariableDeclaration","scope":988,"src":"210:54:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"},"typeName":{"id":818,"name":"bytes16","nodeType":"ElementaryTypeName","src":"210:7:7","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}},"value":{"hexValue":"30313233343536373839616263646566","id":819,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"246:18:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_cb29997ed99ead0db59ce4d12b7d3723198c827273e5796737c926d78019c39f","typeString":"literal_string \"0123456789abcdef\""},"value":"0123456789abcdef"},"visibility":"private"},{"constant":true,"id":823,"mutability":"constant","name":"_ADDRESS_LENGTH","nameLocation":"293:15:7","nodeType":"VariableDeclaration","scope":988,"src":"270:43:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":821,"name":"uint8","nodeType":"ElementaryTypeName","src":"270:5:7","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"value":{"hexValue":"3230","id":822,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"311:2:7","typeDescriptions":{"typeIdentifier":"t_rational_20_by_1","typeString":"int_const 20"},"value":"20"},"visibility":"private"},{"body":{"id":870,"nodeType":"Block","src":"486:625:7","statements":[{"id":869,"nodeType":"UncheckedBlock","src":"496:609:7","statements":[{"assignments":[832],"declarations":[{"constant":false,"id":832,"mutability":"mutable","name":"length","nameLocation":"528:6:7","nodeType":"VariableDeclaration","scope":869,"src":"520:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":831,"name":"uint256","nodeType":"ElementaryTypeName","src":"520:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":839,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":838,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":835,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":826,"src":"548:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":833,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2214,"src":"537:4:7","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$2214_$","typeString":"type(library Math)"}},"id":834,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"542:5:7","memberName":"log10","nodeType":"MemberAccess","referencedDeclaration":2051,"src":"537:10:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":836,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"537:17:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":837,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"557:1:7","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"537:21:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"520:38:7"},{"assignments":[841],"declarations":[{"constant":false,"id":841,"mutability":"mutable","name":"buffer","nameLocation":"586:6:7","nodeType":"VariableDeclaration","scope":869,"src":"572:20:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":840,"name":"string","nodeType":"ElementaryTypeName","src":"572:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":846,"initialValue":{"arguments":[{"id":844,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":832,"src":"606:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":843,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"595:10:7","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"},"typeName":{"id":842,"name":"string","nodeType":"ElementaryTypeName","src":"599:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}}},"id":845,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"595:18:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"572:41:7"},{"assignments":[848],"declarations":[{"constant":false,"id":848,"mutability":"mutable","name":"ptr","nameLocation":"635:3:7","nodeType":"VariableDeclaration","scope":869,"src":"627:11:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":847,"name":"uint256","nodeType":"ElementaryTypeName","src":"627:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":849,"nodeType":"VariableDeclarationStatement","src":"627:11:7"},{"AST":{"nodeType":"YulBlock","src":"708:67:7","statements":[{"nodeType":"YulAssignment","src":"726:35:7","value":{"arguments":[{"name":"buffer","nodeType":"YulIdentifier","src":"737:6:7"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"749:2:7","type":"","value":"32"},{"name":"length","nodeType":"YulIdentifier","src":"753:6:7"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"745:3:7"},"nodeType":"YulFunctionCall","src":"745:15:7"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"733:3:7"},"nodeType":"YulFunctionCall","src":"733:28:7"},"variableNames":[{"name":"ptr","nodeType":"YulIdentifier","src":"726:3:7"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"london","externalReferences":[{"declaration":841,"isOffset":false,"isSlot":false,"src":"737:6:7","valueSize":1},{"declaration":832,"isOffset":false,"isSlot":false,"src":"753:6:7","valueSize":1},{"declaration":848,"isOffset":false,"isSlot":false,"src":"726:3:7","valueSize":1}],"id":850,"nodeType":"InlineAssembly","src":"699:76:7"},{"body":{"id":865,"nodeType":"Block","src":"801:267:7","statements":[{"expression":{"id":853,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":false,"src":"819:5:7","subExpression":{"id":852,"name":"ptr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":848,"src":"819:3:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":854,"nodeType":"ExpressionStatement","src":"819:5:7"},{"AST":{"nodeType":"YulBlock","src":"902:84:7","statements":[{"expression":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"932:3:7"},{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"946:5:7"},{"kind":"number","nodeType":"YulLiteral","src":"953:2:7","type":"","value":"10"}],"functionName":{"name":"mod","nodeType":"YulIdentifier","src":"942:3:7"},"nodeType":"YulFunctionCall","src":"942:14:7"},{"name":"_SYMBOLS","nodeType":"YulIdentifier","src":"958:8:7"}],"functionName":{"name":"byte","nodeType":"YulIdentifier","src":"937:4:7"},"nodeType":"YulFunctionCall","src":"937:30:7"}],"functionName":{"name":"mstore8","nodeType":"YulIdentifier","src":"924:7:7"},"nodeType":"YulFunctionCall","src":"924:44:7"},"nodeType":"YulExpressionStatement","src":"924:44:7"}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"london","externalReferences":[{"declaration":820,"isOffset":false,"isSlot":false,"src":"958:8:7","valueSize":1},{"declaration":848,"isOffset":false,"isSlot":false,"src":"932:3:7","valueSize":1},{"declaration":826,"isOffset":false,"isSlot":false,"src":"946:5:7","valueSize":1}],"id":855,"nodeType":"InlineAssembly","src":"893:93:7"},{"expression":{"id":858,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":856,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":826,"src":"1003:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"hexValue":"3130","id":857,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1012:2:7","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"src":"1003:11:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":859,"nodeType":"ExpressionStatement","src":"1003:11:7"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":862,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":860,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":826,"src":"1036:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":861,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1045:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1036:10:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":864,"nodeType":"IfStatement","src":"1032:21:7","trueBody":{"id":863,"nodeType":"Break","src":"1048:5:7"}}]},"condition":{"hexValue":"74727565","id":851,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"795:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"id":866,"nodeType":"WhileStatement","src":"788:280:7"},{"expression":{"id":867,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":841,"src":"1088:6:7","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":830,"id":868,"nodeType":"Return","src":"1081:13:7"}]}]},"documentation":{"id":824,"nodeType":"StructuredDocumentation","src":"320:90:7","text":" @dev Converts a `uint256` to its ASCII `string` decimal representation."},"id":871,"implemented":true,"kind":"function","modifiers":[],"name":"toString","nameLocation":"424:8:7","nodeType":"FunctionDefinition","parameters":{"id":827,"nodeType":"ParameterList","parameters":[{"constant":false,"id":826,"mutability":"mutable","name":"value","nameLocation":"441:5:7","nodeType":"VariableDeclaration","scope":871,"src":"433:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":825,"name":"uint256","nodeType":"ElementaryTypeName","src":"433:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"432:15:7"},"returnParameters":{"id":830,"nodeType":"ParameterList","parameters":[{"constant":false,"id":829,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":871,"src":"471:13:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":828,"name":"string","nodeType":"ElementaryTypeName","src":"471:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"470:15:7"},"scope":988,"src":"415:696:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":890,"nodeType":"Block","src":"1290:100:7","statements":[{"id":889,"nodeType":"UncheckedBlock","src":"1300:84:7","statements":[{"expression":{"arguments":[{"id":880,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":874,"src":"1343:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":886,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":883,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":874,"src":"1362:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":881,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2214,"src":"1350:4:7","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$2214_$","typeString":"type(library Math)"}},"id":882,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1355:6:7","memberName":"log256","nodeType":"MemberAccess","referencedDeclaration":2174,"src":"1350:11:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":884,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1350:18:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":885,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1371:1:7","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1350:22:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":879,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[891,967,987],"referencedDeclaration":967,"src":"1331:11:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (string memory)"}},"id":887,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1331:42:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":878,"id":888,"nodeType":"Return","src":"1324:49:7"}]}]},"documentation":{"id":872,"nodeType":"StructuredDocumentation","src":"1117:94:7","text":" @dev Converts a `uint256` to its ASCII `string` hexadecimal representation."},"id":891,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"1225:11:7","nodeType":"FunctionDefinition","parameters":{"id":875,"nodeType":"ParameterList","parameters":[{"constant":false,"id":874,"mutability":"mutable","name":"value","nameLocation":"1245:5:7","nodeType":"VariableDeclaration","scope":891,"src":"1237:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":873,"name":"uint256","nodeType":"ElementaryTypeName","src":"1237:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1236:15:7"},"returnParameters":{"id":878,"nodeType":"ParameterList","parameters":[{"constant":false,"id":877,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":891,"src":"1275:13:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":876,"name":"string","nodeType":"ElementaryTypeName","src":"1275:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1274:15:7"},"scope":988,"src":"1216:174:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":966,"nodeType":"Block","src":"1603:347:7","statements":[{"assignments":[902],"declarations":[{"constant":false,"id":902,"mutability":"mutable","name":"buffer","nameLocation":"1626:6:7","nodeType":"VariableDeclaration","scope":966,"src":"1613:19:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":901,"name":"bytes","nodeType":"ElementaryTypeName","src":"1613:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":911,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":909,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":907,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":905,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1645:1:7","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":906,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":896,"src":"1649:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1645:10:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"32","id":908,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1658:1:7","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"1645:14:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":904,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"1635:9:7","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":903,"name":"bytes","nodeType":"ElementaryTypeName","src":"1639:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":910,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1635:25:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"1613:47:7"},{"expression":{"id":916,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":912,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":902,"src":"1670:6:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":914,"indexExpression":{"hexValue":"30","id":913,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1677:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1670:9:7","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":915,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1682:3:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d","typeString":"literal_string \"0\""},"value":"0"},"src":"1670:15:7","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":917,"nodeType":"ExpressionStatement","src":"1670:15:7"},{"expression":{"id":922,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":918,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":902,"src":"1695:6:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":920,"indexExpression":{"hexValue":"31","id":919,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1702:1:7","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1695:9:7","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"78","id":921,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1707:3:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_7521d1cadbcfa91eec65aa16715b94ffc1c9654ba57ea2ef1a2127bca1127a83","typeString":"literal_string \"x\""},"value":"x"},"src":"1695:15:7","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":923,"nodeType":"ExpressionStatement","src":"1695:15:7"},{"body":{"id":952,"nodeType":"Block","src":"1765:83:7","statements":[{"expression":{"id":946,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":938,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":902,"src":"1779:6:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":940,"indexExpression":{"id":939,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":925,"src":"1786:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1779:9:7","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":941,"name":"_SYMBOLS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":820,"src":"1791:8:7","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}},"id":945,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":944,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":942,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":894,"src":"1800:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"307866","id":943,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1808:3:7","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"0xf"},"src":"1800:11:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1791:21:7","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"1779:33:7","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":947,"nodeType":"ExpressionStatement","src":"1779:33:7"},{"expression":{"id":950,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":948,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":894,"src":"1826:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":949,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1836:1:7","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"1826:11:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":951,"nodeType":"ExpressionStatement","src":"1826:11:7"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":934,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":932,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":925,"src":"1753:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"31","id":933,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1757:1:7","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1753:5:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":953,"initializationExpression":{"assignments":[925],"declarations":[{"constant":false,"id":925,"mutability":"mutable","name":"i","nameLocation":"1733:1:7","nodeType":"VariableDeclaration","scope":953,"src":"1725:9:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":924,"name":"uint256","nodeType":"ElementaryTypeName","src":"1725:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":931,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":930,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":928,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":926,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1737:1:7","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":927,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":896,"src":"1741:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1737:10:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":929,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1750:1:7","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1737:14:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1725:26:7"},"loopExpression":{"expression":{"id":936,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":true,"src":"1760:3:7","subExpression":{"id":935,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":925,"src":"1762:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":937,"nodeType":"ExpressionStatement","src":"1760:3:7"},"nodeType":"ForStatement","src":"1720:128:7"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":957,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":955,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":894,"src":"1865:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":956,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1874:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1865:10:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"537472696e67733a20686578206c656e67746820696e73756666696369656e74","id":958,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1877:34:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2","typeString":"literal_string \"Strings: hex length insufficient\""},"value":"Strings: hex length insufficient"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2","typeString":"literal_string \"Strings: hex length insufficient\""}],"id":954,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1857:7:7","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":959,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1857:55:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":960,"nodeType":"ExpressionStatement","src":"1857:55:7"},{"expression":{"arguments":[{"id":963,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":902,"src":"1936:6:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":962,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1929:6:7","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":961,"name":"string","nodeType":"ElementaryTypeName","src":"1929:6:7","typeDescriptions":{}}},"id":964,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1929:14:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":900,"id":965,"nodeType":"Return","src":"1922:21:7"}]},"documentation":{"id":892,"nodeType":"StructuredDocumentation","src":"1396:112:7","text":" @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length."},"id":967,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"1522:11:7","nodeType":"FunctionDefinition","parameters":{"id":897,"nodeType":"ParameterList","parameters":[{"constant":false,"id":894,"mutability":"mutable","name":"value","nameLocation":"1542:5:7","nodeType":"VariableDeclaration","scope":967,"src":"1534:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":893,"name":"uint256","nodeType":"ElementaryTypeName","src":"1534:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":896,"mutability":"mutable","name":"length","nameLocation":"1557:6:7","nodeType":"VariableDeclaration","scope":967,"src":"1549:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":895,"name":"uint256","nodeType":"ElementaryTypeName","src":"1549:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1533:31:7"},"returnParameters":{"id":900,"nodeType":"ParameterList","parameters":[{"constant":false,"id":899,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":967,"src":"1588:13:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":898,"name":"string","nodeType":"ElementaryTypeName","src":"1588:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1587:15:7"},"scope":988,"src":"1513:437:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":986,"nodeType":"Block","src":"2175:76:7","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"id":980,"name":"addr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":970,"src":"2220:4:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":979,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2212:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":978,"name":"uint160","nodeType":"ElementaryTypeName","src":"2212:7:7","typeDescriptions":{}}},"id":981,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2212:13:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":977,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2204:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":976,"name":"uint256","nodeType":"ElementaryTypeName","src":"2204:7:7","typeDescriptions":{}}},"id":982,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2204:22:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":983,"name":"_ADDRESS_LENGTH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":823,"src":"2228:15:7","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":975,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[891,967,987],"referencedDeclaration":967,"src":"2192:11:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (string memory)"}},"id":984,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2192:52:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":974,"id":985,"nodeType":"Return","src":"2185:59:7"}]},"documentation":{"id":968,"nodeType":"StructuredDocumentation","src":"1956:141:7","text":" @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation."},"id":987,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"2111:11:7","nodeType":"FunctionDefinition","parameters":{"id":971,"nodeType":"ParameterList","parameters":[{"constant":false,"id":970,"mutability":"mutable","name":"addr","nameLocation":"2131:4:7","nodeType":"VariableDeclaration","scope":987,"src":"2123:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":969,"name":"address","nodeType":"ElementaryTypeName","src":"2123:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2122:14:7"},"returnParameters":{"id":974,"nodeType":"ParameterList","parameters":[{"constant":false,"id":973,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":987,"src":"2160:13:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":972,"name":"string","nodeType":"ElementaryTypeName","src":"2160:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2159:15:7"},"scope":988,"src":"2102:149:7","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":989,"src":"188:2065:7","usedErrors":[]}],"src":"101:2153:7"}},"@openzeppelin/contracts/utils/cryptography/ECDSA.sol":{"id":8,"ast":{"absolutePath":"@openzeppelin/contracts/utils/cryptography/ECDSA.sol","exportedSymbols":{"ECDSA":[1349],"Math":[2214],"Strings":[988]},"id":1350,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":990,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"112:23:8"},{"absolutePath":"@openzeppelin/contracts/utils/Strings.sol","file":"../Strings.sol","id":991,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1350,"sourceUnit":989,"src":"137:24:8","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"ECDSA","contractDependencies":[],"contractKind":"library","documentation":{"id":992,"nodeType":"StructuredDocumentation","src":"163:205:8","text":" @dev Elliptic Curve Digital Signature Algorithm (ECDSA) operations.\n These functions can be used to verify that a message was signed by the holder\n of the private keys of a given address."},"fullyImplemented":true,"id":1349,"linearizedBaseContracts":[1349],"name":"ECDSA","nameLocation":"377:5:8","nodeType":"ContractDefinition","nodes":[{"canonicalName":"ECDSA.RecoverError","id":998,"members":[{"id":993,"name":"NoError","nameLocation":"417:7:8","nodeType":"EnumValue","src":"417:7:8"},{"id":994,"name":"InvalidSignature","nameLocation":"434:16:8","nodeType":"EnumValue","src":"434:16:8"},{"id":995,"name":"InvalidSignatureLength","nameLocation":"460:22:8","nodeType":"EnumValue","src":"460:22:8"},{"id":996,"name":"InvalidSignatureS","nameLocation":"492:17:8","nodeType":"EnumValue","src":"492:17:8"},{"id":997,"name":"InvalidSignatureV","nameLocation":"519:17:8","nodeType":"EnumValue","src":"519:17:8"}],"name":"RecoverError","nameLocation":"394:12:8","nodeType":"EnumDefinition","src":"389:175:8"},{"body":{"id":1041,"nodeType":"Block","src":"624:457:8","statements":[{"condition":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$998","typeString":"enum ECDSA.RecoverError"},"id":1007,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1004,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1001,"src":"638:5:8","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$998","typeString":"enum ECDSA.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":1005,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":998,"src":"647:12:8","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$998_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":1006,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"660:7:8","memberName":"NoError","nodeType":"MemberAccess","referencedDeclaration":993,"src":"647:20:8","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$998","typeString":"enum ECDSA.RecoverError"}},"src":"638:29:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$998","typeString":"enum ECDSA.RecoverError"},"id":1013,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1010,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1001,"src":"734:5:8","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$998","typeString":"enum ECDSA.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":1011,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":998,"src":"743:12:8","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$998_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":1012,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"756:16:8","memberName":"InvalidSignature","nodeType":"MemberAccess","referencedDeclaration":994,"src":"743:29:8","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$998","typeString":"enum ECDSA.RecoverError"}},"src":"734:38:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$998","typeString":"enum ECDSA.RecoverError"},"id":1022,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1019,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1001,"src":"843:5:8","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$998","typeString":"enum ECDSA.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":1020,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":998,"src":"852:12:8","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$998_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":1021,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"865:22:8","memberName":"InvalidSignatureLength","nodeType":"MemberAccess","referencedDeclaration":995,"src":"852:35:8","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$998","typeString":"enum ECDSA.RecoverError"}},"src":"843:44:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$998","typeString":"enum ECDSA.RecoverError"},"id":1031,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1028,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1001,"src":"965:5:8","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$998","typeString":"enum ECDSA.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":1029,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":998,"src":"974:12:8","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$998_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":1030,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"987:17:8","memberName":"InvalidSignatureS","nodeType":"MemberAccess","referencedDeclaration":996,"src":"974:30:8","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$998","typeString":"enum ECDSA.RecoverError"}},"src":"965:39:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1037,"nodeType":"IfStatement","src":"961:114:8","trueBody":{"id":1036,"nodeType":"Block","src":"1006:69:8","statements":[{"expression":{"arguments":[{"hexValue":"45434453413a20696e76616c6964207369676e6174757265202773272076616c7565","id":1033,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1027:36:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_520d1f787dbcafbbfc007fd2c4ecf3d2711ec587f3ee9a1215c0b646c3e530bd","typeString":"literal_string \"ECDSA: invalid signature 's' value\""},"value":"ECDSA: invalid signature 's' value"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_520d1f787dbcafbbfc007fd2c4ecf3d2711ec587f3ee9a1215c0b646c3e530bd","typeString":"literal_string \"ECDSA: invalid signature 's' value\""}],"id":1032,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"1020:6:8","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":1034,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1020:44:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1035,"nodeType":"ExpressionStatement","src":"1020:44:8"}]}},"id":1038,"nodeType":"IfStatement","src":"839:236:8","trueBody":{"id":1027,"nodeType":"Block","src":"889:66:8","statements":[{"expression":{"arguments":[{"hexValue":"45434453413a20696e76616c6964207369676e6174757265206c656e677468","id":1024,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"910:33:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_1669ff3ba3cdf64474e1193492d05b8434e29b0b495e60095eb5f5c8ec14ce77","typeString":"literal_string \"ECDSA: invalid signature length\""},"value":"ECDSA: invalid signature length"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_1669ff3ba3cdf64474e1193492d05b8434e29b0b495e60095eb5f5c8ec14ce77","typeString":"literal_string \"ECDSA: invalid signature length\""}],"id":1023,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"903:6:8","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":1025,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"903:41:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1026,"nodeType":"ExpressionStatement","src":"903:41:8"}]}},"id":1039,"nodeType":"IfStatement","src":"730:345:8","trueBody":{"id":1018,"nodeType":"Block","src":"774:59:8","statements":[{"expression":{"arguments":[{"hexValue":"45434453413a20696e76616c6964207369676e6174757265","id":1015,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"795:26:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_00043f6bf76368aa97c21698e9b9d4779e31902453daccf3525ddfb36e53e2be","typeString":"literal_string \"ECDSA: invalid signature\""},"value":"ECDSA: invalid signature"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_00043f6bf76368aa97c21698e9b9d4779e31902453daccf3525ddfb36e53e2be","typeString":"literal_string \"ECDSA: invalid signature\""}],"id":1014,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"788:6:8","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":1016,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"788:34:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1017,"nodeType":"ExpressionStatement","src":"788:34:8"}]}},"id":1040,"nodeType":"IfStatement","src":"634:441:8","trueBody":{"id":1009,"nodeType":"Block","src":"669:55:8","statements":[{"functionReturnParameters":1003,"id":1008,"nodeType":"Return","src":"683:7:8"}]}}]},"id":1042,"implemented":true,"kind":"function","modifiers":[],"name":"_throwError","nameLocation":"579:11:8","nodeType":"FunctionDefinition","parameters":{"id":1002,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1001,"mutability":"mutable","name":"error","nameLocation":"604:5:8","nodeType":"VariableDeclaration","scope":1042,"src":"591:18:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$998","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":1000,"nodeType":"UserDefinedTypeName","pathNode":{"id":999,"name":"RecoverError","nameLocations":["591:12:8"],"nodeType":"IdentifierPath","referencedDeclaration":998,"src":"591:12:8"},"referencedDeclaration":998,"src":"591:12:8","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$998","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"}],"src":"590:20:8"},"returnParameters":{"id":1003,"nodeType":"ParameterList","parameters":[],"src":"624:0:8"},"scope":1349,"src":"570:511:8","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":1087,"nodeType":"Block","src":"2249:626:8","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1058,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1055,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1047,"src":"2263:9:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1056,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2273:6:8","memberName":"length","nodeType":"MemberAccess","src":"2263:16:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"3635","id":1057,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2283:2:8","typeDescriptions":{"typeIdentifier":"t_rational_65_by_1","typeString":"int_const 65"},"value":"65"},"src":"2263:22:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1085,"nodeType":"Block","src":"2788:81:8","statements":[{"expression":{"components":[{"arguments":[{"hexValue":"30","id":1079,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2818:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1078,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2810:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1077,"name":"address","nodeType":"ElementaryTypeName","src":"2810:7:8","typeDescriptions":{}}},"id":1080,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2810:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":1081,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":998,"src":"2822:12:8","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$998_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":1082,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2835:22:8","memberName":"InvalidSignatureLength","nodeType":"MemberAccess","referencedDeclaration":995,"src":"2822:35:8","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$998","typeString":"enum ECDSA.RecoverError"}}],"id":1083,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"2809:49:8","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$998_$","typeString":"tuple(address,enum ECDSA.RecoverError)"}},"functionReturnParameters":1054,"id":1084,"nodeType":"Return","src":"2802:56:8"}]},"id":1086,"nodeType":"IfStatement","src":"2259:610:8","trueBody":{"id":1076,"nodeType":"Block","src":"2287:495:8","statements":[{"assignments":[1060],"declarations":[{"constant":false,"id":1060,"mutability":"mutable","name":"r","nameLocation":"2309:1:8","nodeType":"VariableDeclaration","scope":1076,"src":"2301:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1059,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2301:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":1061,"nodeType":"VariableDeclarationStatement","src":"2301:9:8"},{"assignments":[1063],"declarations":[{"constant":false,"id":1063,"mutability":"mutable","name":"s","nameLocation":"2332:1:8","nodeType":"VariableDeclaration","scope":1076,"src":"2324:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1062,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2324:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":1064,"nodeType":"VariableDeclarationStatement","src":"2324:9:8"},{"assignments":[1066],"declarations":[{"constant":false,"id":1066,"mutability":"mutable","name":"v","nameLocation":"2353:1:8","nodeType":"VariableDeclaration","scope":1076,"src":"2347:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1065,"name":"uint8","nodeType":"ElementaryTypeName","src":"2347:5:8","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":1067,"nodeType":"VariableDeclarationStatement","src":"2347:7:8"},{"AST":{"nodeType":"YulBlock","src":"2555:171:8","statements":[{"nodeType":"YulAssignment","src":"2573:32:8","value":{"arguments":[{"arguments":[{"name":"signature","nodeType":"YulIdentifier","src":"2588:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"2599:4:8","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2584:3:8"},"nodeType":"YulFunctionCall","src":"2584:20:8"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2578:5:8"},"nodeType":"YulFunctionCall","src":"2578:27:8"},"variableNames":[{"name":"r","nodeType":"YulIdentifier","src":"2573:1:8"}]},{"nodeType":"YulAssignment","src":"2622:32:8","value":{"arguments":[{"arguments":[{"name":"signature","nodeType":"YulIdentifier","src":"2637:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"2648:4:8","type":"","value":"0x40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2633:3:8"},"nodeType":"YulFunctionCall","src":"2633:20:8"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2627:5:8"},"nodeType":"YulFunctionCall","src":"2627:27:8"},"variableNames":[{"name":"s","nodeType":"YulIdentifier","src":"2622:1:8"}]},{"nodeType":"YulAssignment","src":"2671:41:8","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2681:1:8","type":"","value":"0"},{"arguments":[{"arguments":[{"name":"signature","nodeType":"YulIdentifier","src":"2694:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"2705:4:8","type":"","value":"0x60"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2690:3:8"},"nodeType":"YulFunctionCall","src":"2690:20:8"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2684:5:8"},"nodeType":"YulFunctionCall","src":"2684:27:8"}],"functionName":{"name":"byte","nodeType":"YulIdentifier","src":"2676:4:8"},"nodeType":"YulFunctionCall","src":"2676:36:8"},"variableNames":[{"name":"v","nodeType":"YulIdentifier","src":"2671:1:8"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"london","externalReferences":[{"declaration":1060,"isOffset":false,"isSlot":false,"src":"2573:1:8","valueSize":1},{"declaration":1063,"isOffset":false,"isSlot":false,"src":"2622:1:8","valueSize":1},{"declaration":1047,"isOffset":false,"isSlot":false,"src":"2588:9:8","valueSize":1},{"declaration":1047,"isOffset":false,"isSlot":false,"src":"2637:9:8","valueSize":1},{"declaration":1047,"isOffset":false,"isSlot":false,"src":"2694:9:8","valueSize":1},{"declaration":1066,"isOffset":false,"isSlot":false,"src":"2671:1:8","valueSize":1}],"id":1068,"nodeType":"InlineAssembly","src":"2546:180:8"},{"expression":{"arguments":[{"id":1070,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1045,"src":"2757:4:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1071,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1066,"src":"2763:1:8","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":1072,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1060,"src":"2766:1:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1073,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1063,"src":"2769:1:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1069,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[1088,1162,1256],"referencedDeclaration":1256,"src":"2746:10:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$998_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError)"}},"id":1074,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2746:25:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$998_$","typeString":"tuple(address,enum ECDSA.RecoverError)"}},"functionReturnParameters":1054,"id":1075,"nodeType":"Return","src":"2739:32:8"}]}}]},"documentation":{"id":1043,"nodeType":"StructuredDocumentation","src":"1087:1053:8","text":" @dev Returns the address that signed a hashed message (`hash`) with\n `signature` or error string. This address can then be used for verification purposes.\n The `ecrecover` EVM opcode allows for malleable (non-unique) signatures:\n this function rejects them by requiring the `s` value to be in the lower\n half order, and the `v` value to be either 27 or 28.\n IMPORTANT: `hash` _must_ be the result of a hash operation for the\n verification to be secure: it is possible to craft signatures that\n recover to arbitrary addresses for non-hashed data. A safe way to ensure\n this is by receiving a hash of the original message (which may otherwise\n be too long), and then calling {toEthSignedMessageHash} on it.\n Documentation for signature generation:\n - with https://web3js.readthedocs.io/en/v1.3.4/web3-eth-accounts.html#sign[Web3.js]\n - with https://docs.ethers.io/v5/api/signer/#Signer-signMessage[ethers]\n _Available since v4.3._"},"id":1088,"implemented":true,"kind":"function","modifiers":[],"name":"tryRecover","nameLocation":"2154:10:8","nodeType":"FunctionDefinition","parameters":{"id":1048,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1045,"mutability":"mutable","name":"hash","nameLocation":"2173:4:8","nodeType":"VariableDeclaration","scope":1088,"src":"2165:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1044,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2165:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1047,"mutability":"mutable","name":"signature","nameLocation":"2192:9:8","nodeType":"VariableDeclaration","scope":1088,"src":"2179:22:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1046,"name":"bytes","nodeType":"ElementaryTypeName","src":"2179:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2164:38:8"},"returnParameters":{"id":1054,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1050,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1088,"src":"2226:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1049,"name":"address","nodeType":"ElementaryTypeName","src":"2226:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1053,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1088,"src":"2235:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$998","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":1052,"nodeType":"UserDefinedTypeName","pathNode":{"id":1051,"name":"RecoverError","nameLocations":["2235:12:8"],"nodeType":"IdentifierPath","referencedDeclaration":998,"src":"2235:12:8"},"referencedDeclaration":998,"src":"2235:12:8","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$998","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"}],"src":"2225:23:8"},"scope":1349,"src":"2145:730:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1114,"nodeType":"Block","src":"3748:140:8","statements":[{"assignments":[1099,1102],"declarations":[{"constant":false,"id":1099,"mutability":"mutable","name":"recovered","nameLocation":"3767:9:8","nodeType":"VariableDeclaration","scope":1114,"src":"3759:17:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1098,"name":"address","nodeType":"ElementaryTypeName","src":"3759:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1102,"mutability":"mutable","name":"error","nameLocation":"3791:5:8","nodeType":"VariableDeclaration","scope":1114,"src":"3778:18:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$998","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":1101,"nodeType":"UserDefinedTypeName","pathNode":{"id":1100,"name":"RecoverError","nameLocations":["3778:12:8"],"nodeType":"IdentifierPath","referencedDeclaration":998,"src":"3778:12:8"},"referencedDeclaration":998,"src":"3778:12:8","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$998","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"}],"id":1107,"initialValue":{"arguments":[{"id":1104,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1091,"src":"3811:4:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1105,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1093,"src":"3817:9:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1103,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[1088,1162,1256],"referencedDeclaration":1088,"src":"3800:10:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_address_$_t_enum$_RecoverError_$998_$","typeString":"function (bytes32,bytes memory) pure returns (address,enum ECDSA.RecoverError)"}},"id":1106,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3800:27:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$998_$","typeString":"tuple(address,enum ECDSA.RecoverError)"}},"nodeType":"VariableDeclarationStatement","src":"3758:69:8"},{"expression":{"arguments":[{"id":1109,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1102,"src":"3849:5:8","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$998","typeString":"enum ECDSA.RecoverError"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_RecoverError_$998","typeString":"enum ECDSA.RecoverError"}],"id":1108,"name":"_throwError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1042,"src":"3837:11:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_RecoverError_$998_$returns$__$","typeString":"function (enum ECDSA.RecoverError) pure"}},"id":1110,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3837:18:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1111,"nodeType":"ExpressionStatement","src":"3837:18:8"},{"expression":{"id":1112,"name":"recovered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1099,"src":"3872:9:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1097,"id":1113,"nodeType":"Return","src":"3865:16:8"}]},"documentation":{"id":1089,"nodeType":"StructuredDocumentation","src":"2881:775:8","text":" @dev Returns the address that signed a hashed message (`hash`) with\n `signature`. This address can then be used for verification purposes.\n The `ecrecover` EVM opcode allows for malleable (non-unique) signatures:\n this function rejects them by requiring the `s` value to be in the lower\n half order, and the `v` value to be either 27 or 28.\n IMPORTANT: `hash` _must_ be the result of a hash operation for the\n verification to be secure: it is possible to craft signatures that\n recover to arbitrary addresses for non-hashed data. A safe way to ensure\n this is by receiving a hash of the original message (which may otherwise\n be too long), and then calling {toEthSignedMessageHash} on it."},"id":1115,"implemented":true,"kind":"function","modifiers":[],"name":"recover","nameLocation":"3670:7:8","nodeType":"FunctionDefinition","parameters":{"id":1094,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1091,"mutability":"mutable","name":"hash","nameLocation":"3686:4:8","nodeType":"VariableDeclaration","scope":1115,"src":"3678:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1090,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3678:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1093,"mutability":"mutable","name":"signature","nameLocation":"3705:9:8","nodeType":"VariableDeclaration","scope":1115,"src":"3692:22:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1092,"name":"bytes","nodeType":"ElementaryTypeName","src":"3692:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3677:38:8"},"returnParameters":{"id":1097,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1096,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1115,"src":"3739:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1095,"name":"address","nodeType":"ElementaryTypeName","src":"3739:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3738:9:8"},"scope":1349,"src":"3661:227:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1161,"nodeType":"Block","src":"4275:203:8","statements":[{"assignments":[1131],"declarations":[{"constant":false,"id":1131,"mutability":"mutable","name":"s","nameLocation":"4293:1:8","nodeType":"VariableDeclaration","scope":1161,"src":"4285:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1130,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4285:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":1138,"initialValue":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":1137,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1132,"name":"vs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1122,"src":"4297:2:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"arguments":[{"hexValue":"307837666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666","id":1135,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4310:66:8","typeDescriptions":{"typeIdentifier":"t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819967_by_1","typeString":"int_const 5789...(69 digits omitted)...9967"},"value":"0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819967_by_1","typeString":"int_const 5789...(69 digits omitted)...9967"}],"id":1134,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4302:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":1133,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4302:7:8","typeDescriptions":{}}},"id":1136,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4302:75:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"4297:80:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"4285:92:8"},{"assignments":[1140],"declarations":[{"constant":false,"id":1140,"mutability":"mutable","name":"v","nameLocation":"4393:1:8","nodeType":"VariableDeclaration","scope":1161,"src":"4387:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1139,"name":"uint8","nodeType":"ElementaryTypeName","src":"4387:5:8","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":1153,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1151,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1148,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1145,"name":"vs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1122,"src":"4412:2:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1144,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4404:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1143,"name":"uint256","nodeType":"ElementaryTypeName","src":"4404:7:8","typeDescriptions":{}}},"id":1146,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4404:11:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"323535","id":1147,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4419:3:8","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"4404:18:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1149,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4403:20:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"3237","id":1150,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4426:2:8","typeDescriptions":{"typeIdentifier":"t_rational_27_by_1","typeString":"int_const 27"},"value":"27"},"src":"4403:25:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1142,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4397:5:8","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":1141,"name":"uint8","nodeType":"ElementaryTypeName","src":"4397:5:8","typeDescriptions":{}}},"id":1152,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4397:32:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"VariableDeclarationStatement","src":"4387:42:8"},{"expression":{"arguments":[{"id":1155,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1118,"src":"4457:4:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1156,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1140,"src":"4463:1:8","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":1157,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1120,"src":"4466:1:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1158,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1131,"src":"4469:1:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1154,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[1088,1162,1256],"referencedDeclaration":1256,"src":"4446:10:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$998_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError)"}},"id":1159,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4446:25:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$998_$","typeString":"tuple(address,enum ECDSA.RecoverError)"}},"functionReturnParameters":1129,"id":1160,"nodeType":"Return","src":"4439:32:8"}]},"documentation":{"id":1116,"nodeType":"StructuredDocumentation","src":"3894:243:8","text":" @dev Overload of {ECDSA-tryRecover} that receives the `r` and `vs` short-signature fields separately.\n See https://eips.ethereum.org/EIPS/eip-2098[EIP-2098 short signatures]\n _Available since v4.3._"},"id":1162,"implemented":true,"kind":"function","modifiers":[],"name":"tryRecover","nameLocation":"4151:10:8","nodeType":"FunctionDefinition","parameters":{"id":1123,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1118,"mutability":"mutable","name":"hash","nameLocation":"4179:4:8","nodeType":"VariableDeclaration","scope":1162,"src":"4171:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1117,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4171:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1120,"mutability":"mutable","name":"r","nameLocation":"4201:1:8","nodeType":"VariableDeclaration","scope":1162,"src":"4193:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1119,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4193:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1122,"mutability":"mutable","name":"vs","nameLocation":"4220:2:8","nodeType":"VariableDeclaration","scope":1162,"src":"4212:10:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1121,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4212:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4161:67:8"},"returnParameters":{"id":1129,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1125,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1162,"src":"4252:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1124,"name":"address","nodeType":"ElementaryTypeName","src":"4252:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1128,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1162,"src":"4261:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$998","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":1127,"nodeType":"UserDefinedTypeName","pathNode":{"id":1126,"name":"RecoverError","nameLocations":["4261:12:8"],"nodeType":"IdentifierPath","referencedDeclaration":998,"src":"4261:12:8"},"referencedDeclaration":998,"src":"4261:12:8","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$998","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"}],"src":"4251:23:8"},"scope":1349,"src":"4142:336:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1191,"nodeType":"Block","src":"4759:136:8","statements":[{"assignments":[1175,1178],"declarations":[{"constant":false,"id":1175,"mutability":"mutable","name":"recovered","nameLocation":"4778:9:8","nodeType":"VariableDeclaration","scope":1191,"src":"4770:17:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1174,"name":"address","nodeType":"ElementaryTypeName","src":"4770:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1178,"mutability":"mutable","name":"error","nameLocation":"4802:5:8","nodeType":"VariableDeclaration","scope":1191,"src":"4789:18:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$998","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":1177,"nodeType":"UserDefinedTypeName","pathNode":{"id":1176,"name":"RecoverError","nameLocations":["4789:12:8"],"nodeType":"IdentifierPath","referencedDeclaration":998,"src":"4789:12:8"},"referencedDeclaration":998,"src":"4789:12:8","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$998","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"}],"id":1184,"initialValue":{"arguments":[{"id":1180,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1165,"src":"4822:4:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1181,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1167,"src":"4828:1:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1182,"name":"vs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1169,"src":"4831:2:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1179,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[1088,1162,1256],"referencedDeclaration":1162,"src":"4811:10:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$998_$","typeString":"function (bytes32,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError)"}},"id":1183,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4811:23:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$998_$","typeString":"tuple(address,enum ECDSA.RecoverError)"}},"nodeType":"VariableDeclarationStatement","src":"4769:65:8"},{"expression":{"arguments":[{"id":1186,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1178,"src":"4856:5:8","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$998","typeString":"enum ECDSA.RecoverError"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_RecoverError_$998","typeString":"enum ECDSA.RecoverError"}],"id":1185,"name":"_throwError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1042,"src":"4844:11:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_RecoverError_$998_$returns$__$","typeString":"function (enum ECDSA.RecoverError) pure"}},"id":1187,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4844:18:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1188,"nodeType":"ExpressionStatement","src":"4844:18:8"},{"expression":{"id":1189,"name":"recovered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1175,"src":"4879:9:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1173,"id":1190,"nodeType":"Return","src":"4872:16:8"}]},"documentation":{"id":1163,"nodeType":"StructuredDocumentation","src":"4484:154:8","text":" @dev Overload of {ECDSA-recover} that receives the `r and `vs` short-signature fields separately.\n _Available since v4.2._"},"id":1192,"implemented":true,"kind":"function","modifiers":[],"name":"recover","nameLocation":"4652:7:8","nodeType":"FunctionDefinition","parameters":{"id":1170,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1165,"mutability":"mutable","name":"hash","nameLocation":"4677:4:8","nodeType":"VariableDeclaration","scope":1192,"src":"4669:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1164,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4669:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1167,"mutability":"mutable","name":"r","nameLocation":"4699:1:8","nodeType":"VariableDeclaration","scope":1192,"src":"4691:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1166,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4691:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1169,"mutability":"mutable","name":"vs","nameLocation":"4718:2:8","nodeType":"VariableDeclaration","scope":1192,"src":"4710:10:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1168,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4710:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4659:67:8"},"returnParameters":{"id":1173,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1172,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1192,"src":"4750:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1171,"name":"address","nodeType":"ElementaryTypeName","src":"4750:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4749:9:8"},"scope":1349,"src":"4643:252:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1255,"nodeType":"Block","src":"5218:1345:8","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1214,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1211,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1201,"src":"6114:1:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1210,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6106:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1209,"name":"uint256","nodeType":"ElementaryTypeName","src":"6106:7:8","typeDescriptions":{}}},"id":1212,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6106:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"307837464646464646464646464646464646464646464646464646464646464646463544353736453733353741343530314444464539324634363638314232304130","id":1213,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6119:66:8","typeDescriptions":{"typeIdentifier":"t_rational_57896044618658097711785492504343953926418782139537452191302581570759080747168_by_1","typeString":"int_const 5789...(69 digits omitted)...7168"},"value":"0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0"},"src":"6106:79:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1224,"nodeType":"IfStatement","src":"6102:161:8","trueBody":{"id":1223,"nodeType":"Block","src":"6187:76:8","statements":[{"expression":{"components":[{"arguments":[{"hexValue":"30","id":1217,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6217:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1216,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6209:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1215,"name":"address","nodeType":"ElementaryTypeName","src":"6209:7:8","typeDescriptions":{}}},"id":1218,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6209:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":1219,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":998,"src":"6221:12:8","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$998_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":1220,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6234:17:8","memberName":"InvalidSignatureS","nodeType":"MemberAccess","referencedDeclaration":996,"src":"6221:30:8","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$998","typeString":"enum ECDSA.RecoverError"}}],"id":1221,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"6208:44:8","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$998_$","typeString":"tuple(address,enum ECDSA.RecoverError)"}},"functionReturnParameters":1208,"id":1222,"nodeType":"Return","src":"6201:51:8"}]}},{"assignments":[1226],"declarations":[{"constant":false,"id":1226,"mutability":"mutable","name":"signer","nameLocation":"6365:6:8","nodeType":"VariableDeclaration","scope":1255,"src":"6357:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1225,"name":"address","nodeType":"ElementaryTypeName","src":"6357:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1233,"initialValue":{"arguments":[{"id":1228,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1195,"src":"6384:4:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1229,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1197,"src":"6390:1:8","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":1230,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1199,"src":"6393:1:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1231,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1201,"src":"6396:1:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1227,"name":"ecrecover","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-6,"src":"6374:9:8","typeDescriptions":{"typeIdentifier":"t_function_ecrecover_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address)"}},"id":1232,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6374:24:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"6357:41:8"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1239,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1234,"name":"signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1226,"src":"6412:6:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1237,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6430:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1236,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6422:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1235,"name":"address","nodeType":"ElementaryTypeName","src":"6422:7:8","typeDescriptions":{}}},"id":1238,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6422:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6412:20:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1249,"nodeType":"IfStatement","src":"6408:101:8","trueBody":{"id":1248,"nodeType":"Block","src":"6434:75:8","statements":[{"expression":{"components":[{"arguments":[{"hexValue":"30","id":1242,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6464:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1241,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6456:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1240,"name":"address","nodeType":"ElementaryTypeName","src":"6456:7:8","typeDescriptions":{}}},"id":1243,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6456:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":1244,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":998,"src":"6468:12:8","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$998_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":1245,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6481:16:8","memberName":"InvalidSignature","nodeType":"MemberAccess","referencedDeclaration":994,"src":"6468:29:8","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$998","typeString":"enum ECDSA.RecoverError"}}],"id":1246,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"6455:43:8","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$998_$","typeString":"tuple(address,enum ECDSA.RecoverError)"}},"functionReturnParameters":1208,"id":1247,"nodeType":"Return","src":"6448:50:8"}]}},{"expression":{"components":[{"id":1250,"name":"signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1226,"src":"6527:6:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":1251,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":998,"src":"6535:12:8","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$998_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":1252,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6548:7:8","memberName":"NoError","nodeType":"MemberAccess","referencedDeclaration":993,"src":"6535:20:8","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$998","typeString":"enum ECDSA.RecoverError"}}],"id":1253,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6526:30:8","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$998_$","typeString":"tuple(address,enum ECDSA.RecoverError)"}},"functionReturnParameters":1208,"id":1254,"nodeType":"Return","src":"6519:37:8"}]},"documentation":{"id":1193,"nodeType":"StructuredDocumentation","src":"4901:163:8","text":" @dev Overload of {ECDSA-tryRecover} that receives the `v`,\n `r` and `s` signature fields separately.\n _Available since v4.3._"},"id":1256,"implemented":true,"kind":"function","modifiers":[],"name":"tryRecover","nameLocation":"5078:10:8","nodeType":"FunctionDefinition","parameters":{"id":1202,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1195,"mutability":"mutable","name":"hash","nameLocation":"5106:4:8","nodeType":"VariableDeclaration","scope":1256,"src":"5098:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1194,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5098:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1197,"mutability":"mutable","name":"v","nameLocation":"5126:1:8","nodeType":"VariableDeclaration","scope":1256,"src":"5120:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1196,"name":"uint8","nodeType":"ElementaryTypeName","src":"5120:5:8","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":1199,"mutability":"mutable","name":"r","nameLocation":"5145:1:8","nodeType":"VariableDeclaration","scope":1256,"src":"5137:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1198,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5137:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1201,"mutability":"mutable","name":"s","nameLocation":"5164:1:8","nodeType":"VariableDeclaration","scope":1256,"src":"5156:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1200,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5156:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"5088:83:8"},"returnParameters":{"id":1208,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1204,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1256,"src":"5195:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1203,"name":"address","nodeType":"ElementaryTypeName","src":"5195:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1207,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1256,"src":"5204:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$998","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":1206,"nodeType":"UserDefinedTypeName","pathNode":{"id":1205,"name":"RecoverError","nameLocations":["5204:12:8"],"nodeType":"IdentifierPath","referencedDeclaration":998,"src":"5204:12:8"},"referencedDeclaration":998,"src":"5204:12:8","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$998","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"}],"src":"5194:23:8"},"scope":1349,"src":"5069:1494:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1288,"nodeType":"Block","src":"6828:138:8","statements":[{"assignments":[1271,1274],"declarations":[{"constant":false,"id":1271,"mutability":"mutable","name":"recovered","nameLocation":"6847:9:8","nodeType":"VariableDeclaration","scope":1288,"src":"6839:17:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1270,"name":"address","nodeType":"ElementaryTypeName","src":"6839:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1274,"mutability":"mutable","name":"error","nameLocation":"6871:5:8","nodeType":"VariableDeclaration","scope":1288,"src":"6858:18:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$998","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":1273,"nodeType":"UserDefinedTypeName","pathNode":{"id":1272,"name":"RecoverError","nameLocations":["6858:12:8"],"nodeType":"IdentifierPath","referencedDeclaration":998,"src":"6858:12:8"},"referencedDeclaration":998,"src":"6858:12:8","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$998","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"}],"id":1281,"initialValue":{"arguments":[{"id":1276,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1259,"src":"6891:4:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1277,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1261,"src":"6897:1:8","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":1278,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1263,"src":"6900:1:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1279,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1265,"src":"6903:1:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1275,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[1088,1162,1256],"referencedDeclaration":1256,"src":"6880:10:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$998_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError)"}},"id":1280,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6880:25:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$998_$","typeString":"tuple(address,enum ECDSA.RecoverError)"}},"nodeType":"VariableDeclarationStatement","src":"6838:67:8"},{"expression":{"arguments":[{"id":1283,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1274,"src":"6927:5:8","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$998","typeString":"enum ECDSA.RecoverError"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_RecoverError_$998","typeString":"enum ECDSA.RecoverError"}],"id":1282,"name":"_throwError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1042,"src":"6915:11:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_RecoverError_$998_$returns$__$","typeString":"function (enum ECDSA.RecoverError) pure"}},"id":1284,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6915:18:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1285,"nodeType":"ExpressionStatement","src":"6915:18:8"},{"expression":{"id":1286,"name":"recovered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1271,"src":"6950:9:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1269,"id":1287,"nodeType":"Return","src":"6943:16:8"}]},"documentation":{"id":1257,"nodeType":"StructuredDocumentation","src":"6569:122:8","text":" @dev Overload of {ECDSA-recover} that receives the `v`,\n `r` and `s` signature fields separately."},"id":1289,"implemented":true,"kind":"function","modifiers":[],"name":"recover","nameLocation":"6705:7:8","nodeType":"FunctionDefinition","parameters":{"id":1266,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1259,"mutability":"mutable","name":"hash","nameLocation":"6730:4:8","nodeType":"VariableDeclaration","scope":1289,"src":"6722:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1258,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6722:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1261,"mutability":"mutable","name":"v","nameLocation":"6750:1:8","nodeType":"VariableDeclaration","scope":1289,"src":"6744:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1260,"name":"uint8","nodeType":"ElementaryTypeName","src":"6744:5:8","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":1263,"mutability":"mutable","name":"r","nameLocation":"6769:1:8","nodeType":"VariableDeclaration","scope":1289,"src":"6761:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1262,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6761:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1265,"mutability":"mutable","name":"s","nameLocation":"6788:1:8","nodeType":"VariableDeclaration","scope":1289,"src":"6780:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1264,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6780:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"6712:83:8"},"returnParameters":{"id":1269,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1268,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1289,"src":"6819:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1267,"name":"address","nodeType":"ElementaryTypeName","src":"6819:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6818:9:8"},"scope":1349,"src":"6696:270:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1305,"nodeType":"Block","src":"7334:187:8","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"19457468657265756d205369676e6564204d6573736167653a0a3332","id":1300,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7472:34:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_178a2411ab6fbc1ba11064408972259c558d0e82fd48b0aba3ad81d14f065e73","typeString":"literal_string hex\"19457468657265756d205369676e6564204d6573736167653a0a3332\""},"value":"\u0019Ethereum Signed Message:\n32"},{"id":1301,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1292,"src":"7508:4:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_178a2411ab6fbc1ba11064408972259c558d0e82fd48b0aba3ad81d14f065e73","typeString":"literal_string hex\"19457468657265756d205369676e6564204d6573736167653a0a3332\""},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":1298,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"7455:3:8","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1299,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7459:12:8","memberName":"encodePacked","nodeType":"MemberAccess","src":"7455:16:8","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":1302,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7455:58:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1297,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"7445:9:8","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":1303,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7445:69:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":1296,"id":1304,"nodeType":"Return","src":"7438:76:8"}]},"documentation":{"id":1290,"nodeType":"StructuredDocumentation","src":"6972:279:8","text":" @dev Returns an Ethereum Signed Message, created from a `hash`. This\n produces hash corresponding to the one signed with the\n https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`]\n JSON-RPC method as part of EIP-191.\n See {recover}."},"id":1306,"implemented":true,"kind":"function","modifiers":[],"name":"toEthSignedMessageHash","nameLocation":"7265:22:8","nodeType":"FunctionDefinition","parameters":{"id":1293,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1292,"mutability":"mutable","name":"hash","nameLocation":"7296:4:8","nodeType":"VariableDeclaration","scope":1306,"src":"7288:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1291,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7288:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"7287:14:8"},"returnParameters":{"id":1296,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1295,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1306,"src":"7325:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1294,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7325:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"7324:9:8"},"scope":1349,"src":"7256:265:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1327,"nodeType":"Block","src":"7886:116:8","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"19457468657265756d205369676e6564204d6573736167653a0a","id":1317,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7930:32:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_9af2d9c228f6cfddaa6d1e5b94e0bce4ab16bd9a472a2b7fbfd74ebff4c720b4","typeString":"literal_string hex\"19457468657265756d205369676e6564204d6573736167653a0a\""},"value":"\u0019Ethereum Signed Message:\n"},{"arguments":[{"expression":{"id":1320,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1309,"src":"7981:1:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1321,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7983:6:8","memberName":"length","nodeType":"MemberAccess","src":"7981:8:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1318,"name":"Strings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":988,"src":"7964:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Strings_$988_$","typeString":"type(library Strings)"}},"id":1319,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7972:8:8","memberName":"toString","nodeType":"MemberAccess","referencedDeclaration":871,"src":"7964:16:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"}},"id":1322,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7964:26:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":1323,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1309,"src":"7992:1:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_9af2d9c228f6cfddaa6d1e5b94e0bce4ab16bd9a472a2b7fbfd74ebff4c720b4","typeString":"literal_string hex\"19457468657265756d205369676e6564204d6573736167653a0a\""},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":1315,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"7913:3:8","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1316,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7917:12:8","memberName":"encodePacked","nodeType":"MemberAccess","src":"7913:16:8","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":1324,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7913:81:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1314,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"7903:9:8","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":1325,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7903:92:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":1313,"id":1326,"nodeType":"Return","src":"7896:99:8"}]},"documentation":{"id":1307,"nodeType":"StructuredDocumentation","src":"7527:274:8","text":" @dev Returns an Ethereum Signed Message, created from `s`. This\n produces hash corresponding to the one signed with the\n https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`]\n JSON-RPC method as part of EIP-191.\n See {recover}."},"id":1328,"implemented":true,"kind":"function","modifiers":[],"name":"toEthSignedMessageHash","nameLocation":"7815:22:8","nodeType":"FunctionDefinition","parameters":{"id":1310,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1309,"mutability":"mutable","name":"s","nameLocation":"7851:1:8","nodeType":"VariableDeclaration","scope":1328,"src":"7838:14:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1308,"name":"bytes","nodeType":"ElementaryTypeName","src":"7838:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"7837:16:8"},"returnParameters":{"id":1313,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1312,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1328,"src":"7877:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1311,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7877:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"7876:9:8"},"scope":1349,"src":"7806:196:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1347,"nodeType":"Block","src":"8443:92:8","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"1901","id":1341,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8487:10:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541","typeString":"literal_string hex\"1901\""},"value":"\u0019\u0001"},{"id":1342,"name":"domainSeparator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1331,"src":"8499:15:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1343,"name":"structHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1333,"src":"8516:10:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541","typeString":"literal_string hex\"1901\""},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":1339,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"8470:3:8","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1340,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8474:12:8","memberName":"encodePacked","nodeType":"MemberAccess","src":"8470:16:8","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":1344,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8470:57:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1338,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"8460:9:8","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":1345,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8460:68:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":1337,"id":1346,"nodeType":"Return","src":"8453:75:8"}]},"documentation":{"id":1329,"nodeType":"StructuredDocumentation","src":"8008:328:8","text":" @dev Returns an Ethereum Signed Typed Data, created from a\n `domainSeparator` and a `structHash`. This produces hash corresponding\n to the one signed with the\n https://eips.ethereum.org/EIPS/eip-712[`eth_signTypedData`]\n JSON-RPC method as part of EIP-712.\n See {recover}."},"id":1348,"implemented":true,"kind":"function","modifiers":[],"name":"toTypedDataHash","nameLocation":"8350:15:8","nodeType":"FunctionDefinition","parameters":{"id":1334,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1331,"mutability":"mutable","name":"domainSeparator","nameLocation":"8374:15:8","nodeType":"VariableDeclaration","scope":1348,"src":"8366:23:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1330,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8366:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1333,"mutability":"mutable","name":"structHash","nameLocation":"8399:10:8","nodeType":"VariableDeclaration","scope":1348,"src":"8391:18:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1332,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8391:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"8365:45:8"},"returnParameters":{"id":1337,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1336,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1348,"src":"8434:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1335,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8434:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"8433:9:8"},"scope":1349,"src":"8341:194:8","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":1350,"src":"369:8168:8","usedErrors":[]}],"src":"112:8426:8"}},"@openzeppelin/contracts/utils/math/Math.sol":{"id":9,"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","exportedSymbols":{"Math":[2214]},"id":2215,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1351,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"103:23:9"},{"abstract":false,"baseContracts":[],"canonicalName":"Math","contractDependencies":[],"contractKind":"library","documentation":{"id":1352,"nodeType":"StructuredDocumentation","src":"128:73:9","text":" @dev Standard math utilities missing in the Solidity language."},"fullyImplemented":true,"id":2214,"linearizedBaseContracts":[2214],"name":"Math","nameLocation":"210:4:9","nodeType":"ContractDefinition","nodes":[{"canonicalName":"Math.Rounding","id":1356,"members":[{"id":1353,"name":"Down","nameLocation":"245:4:9","nodeType":"EnumValue","src":"245:4:9"},{"id":1354,"name":"Up","nameLocation":"287:2:9","nodeType":"EnumValue","src":"287:2:9"},{"id":1355,"name":"Zero","nameLocation":"318:4:9","nodeType":"EnumValue","src":"318:4:9"}],"name":"Rounding","nameLocation":"226:8:9","nodeType":"EnumDefinition","src":"221:122:9"},{"body":{"id":1373,"nodeType":"Block","src":"480:37:9","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1368,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1366,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1359,"src":"497:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":1367,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1361,"src":"501:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"497:5:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":1370,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1361,"src":"509:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1371,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"497:13:9","trueExpression":{"id":1369,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1359,"src":"505:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1365,"id":1372,"nodeType":"Return","src":"490:20:9"}]},"documentation":{"id":1357,"nodeType":"StructuredDocumentation","src":"349:59:9","text":" @dev Returns the largest of two numbers."},"id":1374,"implemented":true,"kind":"function","modifiers":[],"name":"max","nameLocation":"422:3:9","nodeType":"FunctionDefinition","parameters":{"id":1362,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1359,"mutability":"mutable","name":"a","nameLocation":"434:1:9","nodeType":"VariableDeclaration","scope":1374,"src":"426:9:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1358,"name":"uint256","nodeType":"ElementaryTypeName","src":"426:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1361,"mutability":"mutable","name":"b","nameLocation":"445:1:9","nodeType":"VariableDeclaration","scope":1374,"src":"437:9:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1360,"name":"uint256","nodeType":"ElementaryTypeName","src":"437:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"425:22:9"},"returnParameters":{"id":1365,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1364,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1374,"src":"471:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1363,"name":"uint256","nodeType":"ElementaryTypeName","src":"471:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"470:9:9"},"scope":2214,"src":"413:104:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1391,"nodeType":"Block","src":"655:37:9","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1386,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1384,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1377,"src":"672:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1385,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1379,"src":"676:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"672:5:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":1388,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1379,"src":"684:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1389,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"672:13:9","trueExpression":{"id":1387,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1377,"src":"680:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1383,"id":1390,"nodeType":"Return","src":"665:20:9"}]},"documentation":{"id":1375,"nodeType":"StructuredDocumentation","src":"523:60:9","text":" @dev Returns the smallest of two numbers."},"id":1392,"implemented":true,"kind":"function","modifiers":[],"name":"min","nameLocation":"597:3:9","nodeType":"FunctionDefinition","parameters":{"id":1380,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1377,"mutability":"mutable","name":"a","nameLocation":"609:1:9","nodeType":"VariableDeclaration","scope":1392,"src":"601:9:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1376,"name":"uint256","nodeType":"ElementaryTypeName","src":"601:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1379,"mutability":"mutable","name":"b","nameLocation":"620:1:9","nodeType":"VariableDeclaration","scope":1392,"src":"612:9:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1378,"name":"uint256","nodeType":"ElementaryTypeName","src":"612:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"600:22:9"},"returnParameters":{"id":1383,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1382,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1392,"src":"646:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1381,"name":"uint256","nodeType":"ElementaryTypeName","src":"646:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"645:9:9"},"scope":2214,"src":"588:104:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1414,"nodeType":"Block","src":"876:82:9","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1412,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1404,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1402,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1395,"src":"931:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":1403,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1397,"src":"935:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"931:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1405,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"930:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1411,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1408,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1406,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1395,"src":"941:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":1407,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1397,"src":"945:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"941:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1409,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"940:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"32","id":1410,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"950:1:9","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"940:11:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"930:21:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1401,"id":1413,"nodeType":"Return","src":"923:28:9"}]},"documentation":{"id":1393,"nodeType":"StructuredDocumentation","src":"698:102:9","text":" @dev Returns the average of two numbers. The result is rounded towards\n zero."},"id":1415,"implemented":true,"kind":"function","modifiers":[],"name":"average","nameLocation":"814:7:9","nodeType":"FunctionDefinition","parameters":{"id":1398,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1395,"mutability":"mutable","name":"a","nameLocation":"830:1:9","nodeType":"VariableDeclaration","scope":1415,"src":"822:9:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1394,"name":"uint256","nodeType":"ElementaryTypeName","src":"822:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1397,"mutability":"mutable","name":"b","nameLocation":"841:1:9","nodeType":"VariableDeclaration","scope":1415,"src":"833:9:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1396,"name":"uint256","nodeType":"ElementaryTypeName","src":"833:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"821:22:9"},"returnParameters":{"id":1401,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1400,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1415,"src":"867:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1399,"name":"uint256","nodeType":"ElementaryTypeName","src":"867:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"866:9:9"},"scope":2214,"src":"805:153:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1439,"nodeType":"Block","src":"1228:123:9","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1427,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1425,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1418,"src":"1316:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1426,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1321:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1316:6:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1436,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1434,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1431,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1429,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1418,"src":"1330:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":1430,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1334:1:9","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1330:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1432,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1329:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":1433,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1420,"src":"1339:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1329:11:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":1435,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1343:1:9","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1329:15:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1437,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"1316:28:9","trueExpression":{"hexValue":"30","id":1428,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1325:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1424,"id":1438,"nodeType":"Return","src":"1309:35:9"}]},"documentation":{"id":1416,"nodeType":"StructuredDocumentation","src":"964:188:9","text":" @dev Returns the ceiling of the division of two numbers.\n This differs from standard division with `/` in that it rounds up instead\n of rounding down."},"id":1440,"implemented":true,"kind":"function","modifiers":[],"name":"ceilDiv","nameLocation":"1166:7:9","nodeType":"FunctionDefinition","parameters":{"id":1421,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1418,"mutability":"mutable","name":"a","nameLocation":"1182:1:9","nodeType":"VariableDeclaration","scope":1440,"src":"1174:9:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1417,"name":"uint256","nodeType":"ElementaryTypeName","src":"1174:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1420,"mutability":"mutable","name":"b","nameLocation":"1193:1:9","nodeType":"VariableDeclaration","scope":1440,"src":"1185:9:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1419,"name":"uint256","nodeType":"ElementaryTypeName","src":"1185:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1173:22:9"},"returnParameters":{"id":1424,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1423,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1440,"src":"1219:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1422,"name":"uint256","nodeType":"ElementaryTypeName","src":"1219:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1218:9:9"},"scope":2214,"src":"1157:194:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1561,"nodeType":"Block","src":"1795:3797:9","statements":[{"id":1560,"nodeType":"UncheckedBlock","src":"1805:3781:9","statements":[{"assignments":[1453],"declarations":[{"constant":false,"id":1453,"mutability":"mutable","name":"prod0","nameLocation":"2134:5:9","nodeType":"VariableDeclaration","scope":1560,"src":"2126:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1452,"name":"uint256","nodeType":"ElementaryTypeName","src":"2126:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1454,"nodeType":"VariableDeclarationStatement","src":"2126:13:9"},{"assignments":[1456],"declarations":[{"constant":false,"id":1456,"mutability":"mutable","name":"prod1","nameLocation":"2206:5:9","nodeType":"VariableDeclaration","scope":1560,"src":"2198:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1455,"name":"uint256","nodeType":"ElementaryTypeName","src":"2198:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1457,"nodeType":"VariableDeclarationStatement","src":"2198:13:9"},{"AST":{"nodeType":"YulBlock","src":"2278:157:9","statements":[{"nodeType":"YulVariableDeclaration","src":"2296:30:9","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"2313:1:9"},{"name":"y","nodeType":"YulIdentifier","src":"2316:1:9"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2323:1:9","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"2319:3:9"},"nodeType":"YulFunctionCall","src":"2319:6:9"}],"functionName":{"name":"mulmod","nodeType":"YulIdentifier","src":"2306:6:9"},"nodeType":"YulFunctionCall","src":"2306:20:9"},"variables":[{"name":"mm","nodeType":"YulTypedName","src":"2300:2:9","type":""}]},{"nodeType":"YulAssignment","src":"2343:18:9","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"2356:1:9"},{"name":"y","nodeType":"YulIdentifier","src":"2359:1:9"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"2352:3:9"},"nodeType":"YulFunctionCall","src":"2352:9:9"},"variableNames":[{"name":"prod0","nodeType":"YulIdentifier","src":"2343:5:9"}]},{"nodeType":"YulAssignment","src":"2378:43:9","value":{"arguments":[{"arguments":[{"name":"mm","nodeType":"YulIdentifier","src":"2395:2:9"},{"name":"prod0","nodeType":"YulIdentifier","src":"2399:5:9"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2391:3:9"},"nodeType":"YulFunctionCall","src":"2391:14:9"},{"arguments":[{"name":"mm","nodeType":"YulIdentifier","src":"2410:2:9"},{"name":"prod0","nodeType":"YulIdentifier","src":"2414:5:9"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"2407:2:9"},"nodeType":"YulFunctionCall","src":"2407:13:9"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2387:3:9"},"nodeType":"YulFunctionCall","src":"2387:34:9"},"variableNames":[{"name":"prod1","nodeType":"YulIdentifier","src":"2378:5:9"}]}]},"evmVersion":"london","externalReferences":[{"declaration":1453,"isOffset":false,"isSlot":false,"src":"2343:5:9","valueSize":1},{"declaration":1453,"isOffset":false,"isSlot":false,"src":"2399:5:9","valueSize":1},{"declaration":1453,"isOffset":false,"isSlot":false,"src":"2414:5:9","valueSize":1},{"declaration":1456,"isOffset":false,"isSlot":false,"src":"2378:5:9","valueSize":1},{"declaration":1443,"isOffset":false,"isSlot":false,"src":"2313:1:9","valueSize":1},{"declaration":1443,"isOffset":false,"isSlot":false,"src":"2356:1:9","valueSize":1},{"declaration":1445,"isOffset":false,"isSlot":false,"src":"2316:1:9","valueSize":1},{"declaration":1445,"isOffset":false,"isSlot":false,"src":"2359:1:9","valueSize":1}],"id":1458,"nodeType":"InlineAssembly","src":"2269:166:9"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1461,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1459,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1456,"src":"2516:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1460,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2525:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2516:10:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1467,"nodeType":"IfStatement","src":"2512:75:9","trueBody":{"id":1466,"nodeType":"Block","src":"2528:59:9","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1464,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1462,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1453,"src":"2553:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":1463,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1447,"src":"2561:11:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2553:19:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1451,"id":1465,"nodeType":"Return","src":"2546:26:9"}]}},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1471,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1469,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1447,"src":"2697:11:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":1470,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1456,"src":"2711:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2697:19:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":1468,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2689:7:9","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$returns$__$","typeString":"function (bool) pure"}},"id":1472,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2689:28:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1473,"nodeType":"ExpressionStatement","src":"2689:28:9"},{"assignments":[1475],"declarations":[{"constant":false,"id":1475,"mutability":"mutable","name":"remainder","nameLocation":"2981:9:9","nodeType":"VariableDeclaration","scope":1560,"src":"2973:17:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1474,"name":"uint256","nodeType":"ElementaryTypeName","src":"2973:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1476,"nodeType":"VariableDeclarationStatement","src":"2973:17:9"},{"AST":{"nodeType":"YulBlock","src":"3013:291:9","statements":[{"nodeType":"YulAssignment","src":"3082:38:9","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"3102:1:9"},{"name":"y","nodeType":"YulIdentifier","src":"3105:1:9"},{"name":"denominator","nodeType":"YulIdentifier","src":"3108:11:9"}],"functionName":{"name":"mulmod","nodeType":"YulIdentifier","src":"3095:6:9"},"nodeType":"YulFunctionCall","src":"3095:25:9"},"variableNames":[{"name":"remainder","nodeType":"YulIdentifier","src":"3082:9:9"}]},{"nodeType":"YulAssignment","src":"3202:41:9","value":{"arguments":[{"name":"prod1","nodeType":"YulIdentifier","src":"3215:5:9"},{"arguments":[{"name":"remainder","nodeType":"YulIdentifier","src":"3225:9:9"},{"name":"prod0","nodeType":"YulIdentifier","src":"3236:5:9"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3222:2:9"},"nodeType":"YulFunctionCall","src":"3222:20:9"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3211:3:9"},"nodeType":"YulFunctionCall","src":"3211:32:9"},"variableNames":[{"name":"prod1","nodeType":"YulIdentifier","src":"3202:5:9"}]},{"nodeType":"YulAssignment","src":"3260:30:9","value":{"arguments":[{"name":"prod0","nodeType":"YulIdentifier","src":"3273:5:9"},{"name":"remainder","nodeType":"YulIdentifier","src":"3280:9:9"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3269:3:9"},"nodeType":"YulFunctionCall","src":"3269:21:9"},"variableNames":[{"name":"prod0","nodeType":"YulIdentifier","src":"3260:5:9"}]}]},"evmVersion":"london","externalReferences":[{"declaration":1447,"isOffset":false,"isSlot":false,"src":"3108:11:9","valueSize":1},{"declaration":1453,"isOffset":false,"isSlot":false,"src":"3236:5:9","valueSize":1},{"declaration":1453,"isOffset":false,"isSlot":false,"src":"3260:5:9","valueSize":1},{"declaration":1453,"isOffset":false,"isSlot":false,"src":"3273:5:9","valueSize":1},{"declaration":1456,"isOffset":false,"isSlot":false,"src":"3202:5:9","valueSize":1},{"declaration":1456,"isOffset":false,"isSlot":false,"src":"3215:5:9","valueSize":1},{"declaration":1475,"isOffset":false,"isSlot":false,"src":"3082:9:9","valueSize":1},{"declaration":1475,"isOffset":false,"isSlot":false,"src":"3225:9:9","valueSize":1},{"declaration":1475,"isOffset":false,"isSlot":false,"src":"3280:9:9","valueSize":1},{"declaration":1443,"isOffset":false,"isSlot":false,"src":"3102:1:9","valueSize":1},{"declaration":1445,"isOffset":false,"isSlot":false,"src":"3105:1:9","valueSize":1}],"id":1477,"nodeType":"InlineAssembly","src":"3004:300:9"},{"assignments":[1479],"declarations":[{"constant":false,"id":1479,"mutability":"mutable","name":"twos","nameLocation":"3619:4:9","nodeType":"VariableDeclaration","scope":1560,"src":"3611:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1478,"name":"uint256","nodeType":"ElementaryTypeName","src":"3611:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1487,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1486,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1480,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1447,"src":"3626:11:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1484,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1482,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"~","prefix":true,"src":"3641:12:9","subExpression":{"id":1481,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1447,"src":"3642:11:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":1483,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3656:1:9","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3641:16:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1485,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3640:18:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3626:32:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3611:47:9"},{"AST":{"nodeType":"YulBlock","src":"3681:362:9","statements":[{"nodeType":"YulAssignment","src":"3746:37:9","value":{"arguments":[{"name":"denominator","nodeType":"YulIdentifier","src":"3765:11:9"},{"name":"twos","nodeType":"YulIdentifier","src":"3778:4:9"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"3761:3:9"},"nodeType":"YulFunctionCall","src":"3761:22:9"},"variableNames":[{"name":"denominator","nodeType":"YulIdentifier","src":"3746:11:9"}]},{"nodeType":"YulAssignment","src":"3850:25:9","value":{"arguments":[{"name":"prod0","nodeType":"YulIdentifier","src":"3863:5:9"},{"name":"twos","nodeType":"YulIdentifier","src":"3870:4:9"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"3859:3:9"},"nodeType":"YulFunctionCall","src":"3859:16:9"},"variableNames":[{"name":"prod0","nodeType":"YulIdentifier","src":"3850:5:9"}]},{"nodeType":"YulAssignment","src":"3990:39:9","value":{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4010:1:9","type":"","value":"0"},{"name":"twos","nodeType":"YulIdentifier","src":"4013:4:9"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4006:3:9"},"nodeType":"YulFunctionCall","src":"4006:12:9"},{"name":"twos","nodeType":"YulIdentifier","src":"4020:4:9"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"4002:3:9"},"nodeType":"YulFunctionCall","src":"4002:23:9"},{"kind":"number","nodeType":"YulLiteral","src":"4027:1:9","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3998:3:9"},"nodeType":"YulFunctionCall","src":"3998:31:9"},"variableNames":[{"name":"twos","nodeType":"YulIdentifier","src":"3990:4:9"}]}]},"evmVersion":"london","externalReferences":[{"declaration":1447,"isOffset":false,"isSlot":false,"src":"3746:11:9","valueSize":1},{"declaration":1447,"isOffset":false,"isSlot":false,"src":"3765:11:9","valueSize":1},{"declaration":1453,"isOffset":false,"isSlot":false,"src":"3850:5:9","valueSize":1},{"declaration":1453,"isOffset":false,"isSlot":false,"src":"3863:5:9","valueSize":1},{"declaration":1479,"isOffset":false,"isSlot":false,"src":"3778:4:9","valueSize":1},{"declaration":1479,"isOffset":false,"isSlot":false,"src":"3870:4:9","valueSize":1},{"declaration":1479,"isOffset":false,"isSlot":false,"src":"3990:4:9","valueSize":1},{"declaration":1479,"isOffset":false,"isSlot":false,"src":"4013:4:9","valueSize":1},{"declaration":1479,"isOffset":false,"isSlot":false,"src":"4020:4:9","valueSize":1}],"id":1488,"nodeType":"InlineAssembly","src":"3672:371:9"},{"expression":{"id":1493,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1489,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1453,"src":"4109:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1492,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1490,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1456,"src":"4118:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1491,"name":"twos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1479,"src":"4126:4:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4118:12:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4109:21:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1494,"nodeType":"ExpressionStatement","src":"4109:21:9"},{"assignments":[1496],"declarations":[{"constant":false,"id":1496,"mutability":"mutable","name":"inverse","nameLocation":"4456:7:9","nodeType":"VariableDeclaration","scope":1560,"src":"4448:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1495,"name":"uint256","nodeType":"ElementaryTypeName","src":"4448:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1503,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1502,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1499,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"33","id":1497,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4467:1:9","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1498,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1447,"src":"4471:11:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4467:15:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1500,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4466:17:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"hexValue":"32","id":1501,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4486:1:9","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"4466:21:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4448:39:9"},{"expression":{"id":1510,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1504,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1496,"src":"4704:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1509,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":1505,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4715:1:9","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1508,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1506,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1447,"src":"4719:11:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1507,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1496,"src":"4733:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4719:21:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4715:25:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4704:36:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1511,"nodeType":"ExpressionStatement","src":"4704:36:9"},{"expression":{"id":1518,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1512,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1496,"src":"4773:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1517,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":1513,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4784:1:9","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1516,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1514,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1447,"src":"4788:11:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1515,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1496,"src":"4802:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4788:21:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4784:25:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4773:36:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1519,"nodeType":"ExpressionStatement","src":"4773:36:9"},{"expression":{"id":1526,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1520,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1496,"src":"4843:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1525,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":1521,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4854:1:9","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1524,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1522,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1447,"src":"4858:11:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1523,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1496,"src":"4872:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4858:21:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4854:25:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4843:36:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1527,"nodeType":"ExpressionStatement","src":"4843:36:9"},{"expression":{"id":1534,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1528,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1496,"src":"4913:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1533,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":1529,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4924:1:9","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1532,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1530,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1447,"src":"4928:11:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1531,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1496,"src":"4942:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4928:21:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4924:25:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4913:36:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1535,"nodeType":"ExpressionStatement","src":"4913:36:9"},{"expression":{"id":1542,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1536,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1496,"src":"4983:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1541,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":1537,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4994:1:9","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1540,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1538,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1447,"src":"4998:11:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1539,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1496,"src":"5012:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4998:21:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4994:25:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4983:36:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1543,"nodeType":"ExpressionStatement","src":"4983:36:9"},{"expression":{"id":1550,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1544,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1496,"src":"5054:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1549,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":1545,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5065:1:9","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1548,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1546,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1447,"src":"5069:11:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1547,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1496,"src":"5083:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5069:21:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5065:25:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5054:36:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1551,"nodeType":"ExpressionStatement","src":"5054:36:9"},{"expression":{"id":1556,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1552,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1450,"src":"5524:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1555,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1553,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1453,"src":"5533:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1554,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1496,"src":"5541:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5533:15:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5524:24:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1557,"nodeType":"ExpressionStatement","src":"5524:24:9"},{"expression":{"id":1558,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1450,"src":"5569:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1451,"id":1559,"nodeType":"Return","src":"5562:13:9"}]}]},"documentation":{"id":1441,"nodeType":"StructuredDocumentation","src":"1357:305:9","text":" @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\n @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\n with further edits by Uniswap Labs also under MIT license."},"id":1562,"implemented":true,"kind":"function","modifiers":[],"name":"mulDiv","nameLocation":"1676:6:9","nodeType":"FunctionDefinition","parameters":{"id":1448,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1443,"mutability":"mutable","name":"x","nameLocation":"1700:1:9","nodeType":"VariableDeclaration","scope":1562,"src":"1692:9:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1442,"name":"uint256","nodeType":"ElementaryTypeName","src":"1692:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1445,"mutability":"mutable","name":"y","nameLocation":"1719:1:9","nodeType":"VariableDeclaration","scope":1562,"src":"1711:9:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1444,"name":"uint256","nodeType":"ElementaryTypeName","src":"1711:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1447,"mutability":"mutable","name":"denominator","nameLocation":"1738:11:9","nodeType":"VariableDeclaration","scope":1562,"src":"1730:19:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1446,"name":"uint256","nodeType":"ElementaryTypeName","src":"1730:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1682:73:9"},"returnParameters":{"id":1451,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1450,"mutability":"mutable","name":"result","nameLocation":"1787:6:9","nodeType":"VariableDeclaration","scope":1562,"src":"1779:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1449,"name":"uint256","nodeType":"ElementaryTypeName","src":"1779:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1778:16:9"},"scope":2214,"src":"1667:3925:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1605,"nodeType":"Block","src":"5872:189:9","statements":[{"assignments":[1578],"declarations":[{"constant":false,"id":1578,"mutability":"mutable","name":"result","nameLocation":"5890:6:9","nodeType":"VariableDeclaration","scope":1605,"src":"5882:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1577,"name":"uint256","nodeType":"ElementaryTypeName","src":"5882:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1584,"initialValue":{"arguments":[{"id":1580,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1565,"src":"5906:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1581,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1567,"src":"5909:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1582,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1569,"src":"5912:11:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1579,"name":"mulDiv","nodeType":"Identifier","overloadedDeclarations":[1562,1606],"referencedDeclaration":1562,"src":"5899:6:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":1583,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5899:25:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5882:42:9"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1596,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_Rounding_$1356","typeString":"enum Math.Rounding"},"id":1588,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1585,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1572,"src":"5938:8:9","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1356","typeString":"enum Math.Rounding"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":1586,"name":"Rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1356,"src":"5950:8:9","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Rounding_$1356_$","typeString":"type(enum Math.Rounding)"}},"id":1587,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5959:2:9","memberName":"Up","nodeType":"MemberAccess","referencedDeclaration":1354,"src":"5950:11:9","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1356","typeString":"enum Math.Rounding"}},"src":"5938:23:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1595,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1590,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1565,"src":"5972:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1591,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1567,"src":"5975:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1592,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1569,"src":"5978:11:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1589,"name":"mulmod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-16,"src":"5965:6:9","typeDescriptions":{"typeIdentifier":"t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":1593,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5965:25:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1594,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5993:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5965:29:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"5938:56:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1602,"nodeType":"IfStatement","src":"5934:98:9","trueBody":{"id":1601,"nodeType":"Block","src":"5996:36:9","statements":[{"expression":{"id":1599,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1597,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1578,"src":"6010:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":1598,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6020:1:9","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"6010:11:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1600,"nodeType":"ExpressionStatement","src":"6010:11:9"}]}},{"expression":{"id":1603,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1578,"src":"6048:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1576,"id":1604,"nodeType":"Return","src":"6041:13:9"}]},"documentation":{"id":1563,"nodeType":"StructuredDocumentation","src":"5598:121:9","text":" @notice Calculates x * y / denominator with full precision, following the selected rounding direction."},"id":1606,"implemented":true,"kind":"function","modifiers":[],"name":"mulDiv","nameLocation":"5733:6:9","nodeType":"FunctionDefinition","parameters":{"id":1573,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1565,"mutability":"mutable","name":"x","nameLocation":"5757:1:9","nodeType":"VariableDeclaration","scope":1606,"src":"5749:9:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1564,"name":"uint256","nodeType":"ElementaryTypeName","src":"5749:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1567,"mutability":"mutable","name":"y","nameLocation":"5776:1:9","nodeType":"VariableDeclaration","scope":1606,"src":"5768:9:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1566,"name":"uint256","nodeType":"ElementaryTypeName","src":"5768:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1569,"mutability":"mutable","name":"denominator","nameLocation":"5795:11:9","nodeType":"VariableDeclaration","scope":1606,"src":"5787:19:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1568,"name":"uint256","nodeType":"ElementaryTypeName","src":"5787:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1572,"mutability":"mutable","name":"rounding","nameLocation":"5825:8:9","nodeType":"VariableDeclaration","scope":1606,"src":"5816:17:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1356","typeString":"enum Math.Rounding"},"typeName":{"id":1571,"nodeType":"UserDefinedTypeName","pathNode":{"id":1570,"name":"Rounding","nameLocations":["5816:8:9"],"nodeType":"IdentifierPath","referencedDeclaration":1356,"src":"5816:8:9"},"referencedDeclaration":1356,"src":"5816:8:9","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1356","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"5739:100:9"},"returnParameters":{"id":1576,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1575,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1606,"src":"5863:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1574,"name":"uint256","nodeType":"ElementaryTypeName","src":"5863:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5862:9:9"},"scope":2214,"src":"5724:337:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1717,"nodeType":"Block","src":"6337:1585:9","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1616,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1614,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1609,"src":"6351:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1615,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6356:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6351:6:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1620,"nodeType":"IfStatement","src":"6347:45:9","trueBody":{"id":1619,"nodeType":"Block","src":"6359:33:9","statements":[{"expression":{"hexValue":"30","id":1617,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6380:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":1613,"id":1618,"nodeType":"Return","src":"6373:8:9"}]}},{"assignments":[1622],"declarations":[{"constant":false,"id":1622,"mutability":"mutable","name":"result","nameLocation":"7079:6:9","nodeType":"VariableDeclaration","scope":1717,"src":"7071:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1621,"name":"uint256","nodeType":"ElementaryTypeName","src":"7071:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1631,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1630,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":1623,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7088:1:9","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1628,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1625,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1609,"src":"7099:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1624,"name":"log2","nodeType":"Identifier","overloadedDeclarations":[1886,1922],"referencedDeclaration":1886,"src":"7094:4:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":1626,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7094:7:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":1627,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7105:1:9","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7094:12:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1629,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7093:14:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7088:19:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7071:36:9"},{"id":1716,"nodeType":"UncheckedBlock","src":"7508:408:9","statements":[{"expression":{"id":1641,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1632,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1622,"src":"7532:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1640,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1637,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1633,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1622,"src":"7542:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1636,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1634,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1609,"src":"7551:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":1635,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1622,"src":"7555:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7551:10:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7542:19:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1638,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7541:21:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":1639,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7566:1:9","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7541:26:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7532:35:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1642,"nodeType":"ExpressionStatement","src":"7532:35:9"},{"expression":{"id":1652,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1643,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1622,"src":"7581:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1651,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1648,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1644,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1622,"src":"7591:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1647,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1645,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1609,"src":"7600:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":1646,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1622,"src":"7604:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7600:10:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7591:19:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1649,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7590:21:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":1650,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7615:1:9","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7590:26:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7581:35:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1653,"nodeType":"ExpressionStatement","src":"7581:35:9"},{"expression":{"id":1663,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1654,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1622,"src":"7630:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1662,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1659,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1655,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1622,"src":"7640:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1658,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1656,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1609,"src":"7649:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":1657,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1622,"src":"7653:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7649:10:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7640:19:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1660,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7639:21:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":1661,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7664:1:9","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7639:26:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7630:35:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1664,"nodeType":"ExpressionStatement","src":"7630:35:9"},{"expression":{"id":1674,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1665,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1622,"src":"7679:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1673,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1670,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1666,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1622,"src":"7689:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1669,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1667,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1609,"src":"7698:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":1668,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1622,"src":"7702:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7698:10:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7689:19:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1671,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7688:21:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":1672,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7713:1:9","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7688:26:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7679:35:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1675,"nodeType":"ExpressionStatement","src":"7679:35:9"},{"expression":{"id":1685,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1676,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1622,"src":"7728:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1684,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1681,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1677,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1622,"src":"7738:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1680,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1678,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1609,"src":"7747:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":1679,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1622,"src":"7751:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7747:10:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7738:19:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1682,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7737:21:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":1683,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7762:1:9","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7737:26:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7728:35:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1686,"nodeType":"ExpressionStatement","src":"7728:35:9"},{"expression":{"id":1696,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1687,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1622,"src":"7777:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1695,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1692,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1688,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1622,"src":"7787:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1691,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1689,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1609,"src":"7796:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":1690,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1622,"src":"7800:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7796:10:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7787:19:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1693,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7786:21:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":1694,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7811:1:9","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7786:26:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7777:35:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1697,"nodeType":"ExpressionStatement","src":"7777:35:9"},{"expression":{"id":1707,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1698,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1622,"src":"7826:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1706,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1703,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1699,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1622,"src":"7836:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1702,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1700,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1609,"src":"7845:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":1701,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1622,"src":"7849:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7845:10:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7836:19:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1704,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7835:21:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":1705,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7860:1:9","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7835:26:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7826:35:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1708,"nodeType":"ExpressionStatement","src":"7826:35:9"},{"expression":{"arguments":[{"id":1710,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1622,"src":"7886:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1713,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1711,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1609,"src":"7894:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":1712,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1622,"src":"7898:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7894:10:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1709,"name":"min","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1392,"src":"7882:3:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":1714,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7882:23:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1613,"id":1715,"nodeType":"Return","src":"7875:30:9"}]}]},"documentation":{"id":1607,"nodeType":"StructuredDocumentation","src":"6067:208:9","text":" @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded down.\n Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11)."},"id":1718,"implemented":true,"kind":"function","modifiers":[],"name":"sqrt","nameLocation":"6289:4:9","nodeType":"FunctionDefinition","parameters":{"id":1610,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1609,"mutability":"mutable","name":"a","nameLocation":"6302:1:9","nodeType":"VariableDeclaration","scope":1718,"src":"6294:9:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1608,"name":"uint256","nodeType":"ElementaryTypeName","src":"6294:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6293:11:9"},"returnParameters":{"id":1613,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1612,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1718,"src":"6328:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1611,"name":"uint256","nodeType":"ElementaryTypeName","src":"6328:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6327:9:9"},"scope":2214,"src":"6280:1642:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1753,"nodeType":"Block","src":"8098:161:9","statements":[{"id":1752,"nodeType":"UncheckedBlock","src":"8108:145:9","statements":[{"assignments":[1730],"declarations":[{"constant":false,"id":1730,"mutability":"mutable","name":"result","nameLocation":"8140:6:9","nodeType":"VariableDeclaration","scope":1752,"src":"8132:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1729,"name":"uint256","nodeType":"ElementaryTypeName","src":"8132:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1734,"initialValue":{"arguments":[{"id":1732,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1721,"src":"8154:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1731,"name":"sqrt","nodeType":"Identifier","overloadedDeclarations":[1718,1754],"referencedDeclaration":1718,"src":"8149:4:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":1733,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8149:7:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8132:24:9"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1750,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1735,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1730,"src":"8177:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1745,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_Rounding_$1356","typeString":"enum Math.Rounding"},"id":1739,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1736,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1724,"src":"8187:8:9","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1356","typeString":"enum Math.Rounding"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":1737,"name":"Rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1356,"src":"8199:8:9","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Rounding_$1356_$","typeString":"type(enum Math.Rounding)"}},"id":1738,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8208:2:9","memberName":"Up","nodeType":"MemberAccess","referencedDeclaration":1354,"src":"8199:11:9","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1356","typeString":"enum Math.Rounding"}},"src":"8187:23:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1744,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1742,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1740,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1730,"src":"8214:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1741,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1730,"src":"8223:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8214:15:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1743,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1721,"src":"8232:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8214:19:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"8187:46:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":1747,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8240:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":1748,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"8187:54:9","trueExpression":{"hexValue":"31","id":1746,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8236:1:9","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":1749,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8186:56:9","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"8177:65:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1728,"id":1751,"nodeType":"Return","src":"8170:72:9"}]}]},"documentation":{"id":1719,"nodeType":"StructuredDocumentation","src":"7928:89:9","text":" @notice Calculates sqrt(a), following the selected rounding direction."},"id":1754,"implemented":true,"kind":"function","modifiers":[],"name":"sqrt","nameLocation":"8031:4:9","nodeType":"FunctionDefinition","parameters":{"id":1725,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1721,"mutability":"mutable","name":"a","nameLocation":"8044:1:9","nodeType":"VariableDeclaration","scope":1754,"src":"8036:9:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1720,"name":"uint256","nodeType":"ElementaryTypeName","src":"8036:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1724,"mutability":"mutable","name":"rounding","nameLocation":"8056:8:9","nodeType":"VariableDeclaration","scope":1754,"src":"8047:17:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1356","typeString":"enum Math.Rounding"},"typeName":{"id":1723,"nodeType":"UserDefinedTypeName","pathNode":{"id":1722,"name":"Rounding","nameLocations":["8047:8:9"],"nodeType":"IdentifierPath","referencedDeclaration":1356,"src":"8047:8:9"},"referencedDeclaration":1356,"src":"8047:8:9","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1356","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"8035:30:9"},"returnParameters":{"id":1728,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1727,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1754,"src":"8089:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1726,"name":"uint256","nodeType":"ElementaryTypeName","src":"8089:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8088:9:9"},"scope":2214,"src":"8022:237:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1885,"nodeType":"Block","src":"8444:922:9","statements":[{"assignments":[1763],"declarations":[{"constant":false,"id":1763,"mutability":"mutable","name":"result","nameLocation":"8462:6:9","nodeType":"VariableDeclaration","scope":1885,"src":"8454:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1762,"name":"uint256","nodeType":"ElementaryTypeName","src":"8454:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1765,"initialValue":{"hexValue":"30","id":1764,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8471:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"8454:18:9"},{"id":1882,"nodeType":"UncheckedBlock","src":"8482:855:9","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1770,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1768,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1766,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1757,"src":"8510:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"313238","id":1767,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8519:3:9","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"8510:12:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1769,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8525:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8510:16:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1780,"nodeType":"IfStatement","src":"8506:99:9","trueBody":{"id":1779,"nodeType":"Block","src":"8528:77:9","statements":[{"expression":{"id":1773,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1771,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1757,"src":"8546:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"313238","id":1772,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8556:3:9","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"8546:13:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1774,"nodeType":"ExpressionStatement","src":"8546:13:9"},{"expression":{"id":1777,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1775,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1763,"src":"8577:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"313238","id":1776,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8587:3:9","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"8577:13:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1778,"nodeType":"ExpressionStatement","src":"8577:13:9"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1785,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1783,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1781,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1757,"src":"8622:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3634","id":1782,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8631:2:9","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"8622:11:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1784,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8636:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8622:15:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1795,"nodeType":"IfStatement","src":"8618:96:9","trueBody":{"id":1794,"nodeType":"Block","src":"8639:75:9","statements":[{"expression":{"id":1788,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1786,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1757,"src":"8657:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3634","id":1787,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8667:2:9","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"8657:12:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1789,"nodeType":"ExpressionStatement","src":"8657:12:9"},{"expression":{"id":1792,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1790,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1763,"src":"8687:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3634","id":1791,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8697:2:9","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"8687:12:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1793,"nodeType":"ExpressionStatement","src":"8687:12:9"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1800,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1798,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1796,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1757,"src":"8731:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3332","id":1797,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8740:2:9","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"8731:11:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1799,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8745:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8731:15:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1810,"nodeType":"IfStatement","src":"8727:96:9","trueBody":{"id":1809,"nodeType":"Block","src":"8748:75:9","statements":[{"expression":{"id":1803,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1801,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1757,"src":"8766:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3332","id":1802,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8776:2:9","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"8766:12:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1804,"nodeType":"ExpressionStatement","src":"8766:12:9"},{"expression":{"id":1807,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1805,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1763,"src":"8796:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3332","id":1806,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8806:2:9","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"8796:12:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1808,"nodeType":"ExpressionStatement","src":"8796:12:9"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1815,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1813,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1811,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1757,"src":"8840:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3136","id":1812,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8849:2:9","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"8840:11:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1814,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8854:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8840:15:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1825,"nodeType":"IfStatement","src":"8836:96:9","trueBody":{"id":1824,"nodeType":"Block","src":"8857:75:9","statements":[{"expression":{"id":1818,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1816,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1757,"src":"8875:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3136","id":1817,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8885:2:9","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"8875:12:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1819,"nodeType":"ExpressionStatement","src":"8875:12:9"},{"expression":{"id":1822,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1820,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1763,"src":"8905:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3136","id":1821,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8915:2:9","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"8905:12:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1823,"nodeType":"ExpressionStatement","src":"8905:12:9"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1830,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1828,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1826,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1757,"src":"8949:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"38","id":1827,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8958:1:9","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"8949:10:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1829,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8962:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8949:14:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1840,"nodeType":"IfStatement","src":"8945:93:9","trueBody":{"id":1839,"nodeType":"Block","src":"8965:73:9","statements":[{"expression":{"id":1833,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1831,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1757,"src":"8983:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"38","id":1832,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8993:1:9","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"8983:11:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1834,"nodeType":"ExpressionStatement","src":"8983:11:9"},{"expression":{"id":1837,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1835,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1763,"src":"9012:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"38","id":1836,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9022:1:9","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"9012:11:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1838,"nodeType":"ExpressionStatement","src":"9012:11:9"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1845,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1843,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1841,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1757,"src":"9055:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"34","id":1842,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9064:1:9","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"9055:10:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1844,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9068:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9055:14:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1855,"nodeType":"IfStatement","src":"9051:93:9","trueBody":{"id":1854,"nodeType":"Block","src":"9071:73:9","statements":[{"expression":{"id":1848,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1846,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1757,"src":"9089:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":1847,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9099:1:9","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"9089:11:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1849,"nodeType":"ExpressionStatement","src":"9089:11:9"},{"expression":{"id":1852,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1850,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1763,"src":"9118:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"34","id":1851,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9128:1:9","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"9118:11:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1853,"nodeType":"ExpressionStatement","src":"9118:11:9"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1860,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1858,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1856,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1757,"src":"9161:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"32","id":1857,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9170:1:9","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"9161:10:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1859,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9174:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9161:14:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1870,"nodeType":"IfStatement","src":"9157:93:9","trueBody":{"id":1869,"nodeType":"Block","src":"9177:73:9","statements":[{"expression":{"id":1863,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1861,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1757,"src":"9195:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"32","id":1862,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9205:1:9","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"9195:11:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1864,"nodeType":"ExpressionStatement","src":"9195:11:9"},{"expression":{"id":1867,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1865,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1763,"src":"9224:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"32","id":1866,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9234:1:9","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"9224:11:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1868,"nodeType":"ExpressionStatement","src":"9224:11:9"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1875,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1873,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1871,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1757,"src":"9267:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":1872,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9276:1:9","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9267:10:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1874,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9280:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9267:14:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1881,"nodeType":"IfStatement","src":"9263:64:9","trueBody":{"id":1880,"nodeType":"Block","src":"9283:44:9","statements":[{"expression":{"id":1878,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1876,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1763,"src":"9301:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":1877,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9311:1:9","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9301:11:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1879,"nodeType":"ExpressionStatement","src":"9301:11:9"}]}}]},{"expression":{"id":1883,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1763,"src":"9353:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1761,"id":1884,"nodeType":"Return","src":"9346:13:9"}]},"documentation":{"id":1755,"nodeType":"StructuredDocumentation","src":"8265:113:9","text":" @dev Return the log in base 2, rounded down, of a positive value.\n Returns 0 if given 0."},"id":1886,"implemented":true,"kind":"function","modifiers":[],"name":"log2","nameLocation":"8392:4:9","nodeType":"FunctionDefinition","parameters":{"id":1758,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1757,"mutability":"mutable","name":"value","nameLocation":"8405:5:9","nodeType":"VariableDeclaration","scope":1886,"src":"8397:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1756,"name":"uint256","nodeType":"ElementaryTypeName","src":"8397:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8396:15:9"},"returnParameters":{"id":1761,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1760,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1886,"src":"8435:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1759,"name":"uint256","nodeType":"ElementaryTypeName","src":"8435:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8434:9:9"},"scope":2214,"src":"8383:983:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1921,"nodeType":"Block","src":"9599:165:9","statements":[{"id":1920,"nodeType":"UncheckedBlock","src":"9609:149:9","statements":[{"assignments":[1898],"declarations":[{"constant":false,"id":1898,"mutability":"mutable","name":"result","nameLocation":"9641:6:9","nodeType":"VariableDeclaration","scope":1920,"src":"9633:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1897,"name":"uint256","nodeType":"ElementaryTypeName","src":"9633:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1902,"initialValue":{"arguments":[{"id":1900,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1889,"src":"9655:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1899,"name":"log2","nodeType":"Identifier","overloadedDeclarations":[1886,1922],"referencedDeclaration":1886,"src":"9650:4:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":1901,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9650:11:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9633:28:9"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1918,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1903,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1898,"src":"9682:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1913,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_Rounding_$1356","typeString":"enum Math.Rounding"},"id":1907,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1904,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1892,"src":"9692:8:9","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1356","typeString":"enum Math.Rounding"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":1905,"name":"Rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1356,"src":"9704:8:9","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Rounding_$1356_$","typeString":"type(enum Math.Rounding)"}},"id":1906,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"9713:2:9","memberName":"Up","nodeType":"MemberAccess","referencedDeclaration":1354,"src":"9704:11:9","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1356","typeString":"enum Math.Rounding"}},"src":"9692:23:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1912,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1910,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":1908,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9719:1:9","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"id":1909,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1898,"src":"9724:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9719:11:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1911,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1889,"src":"9733:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9719:19:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"9692:46:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":1915,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9745:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":1916,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"9692:54:9","trueExpression":{"hexValue":"31","id":1914,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9741:1:9","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":1917,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9691:56:9","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"9682:65:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1896,"id":1919,"nodeType":"Return","src":"9675:72:9"}]}]},"documentation":{"id":1887,"nodeType":"StructuredDocumentation","src":"9372:142:9","text":" @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":1922,"implemented":true,"kind":"function","modifiers":[],"name":"log2","nameLocation":"9528:4:9","nodeType":"FunctionDefinition","parameters":{"id":1893,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1889,"mutability":"mutable","name":"value","nameLocation":"9541:5:9","nodeType":"VariableDeclaration","scope":1922,"src":"9533:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1888,"name":"uint256","nodeType":"ElementaryTypeName","src":"9533:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1892,"mutability":"mutable","name":"rounding","nameLocation":"9557:8:9","nodeType":"VariableDeclaration","scope":1922,"src":"9548:17:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1356","typeString":"enum Math.Rounding"},"typeName":{"id":1891,"nodeType":"UserDefinedTypeName","pathNode":{"id":1890,"name":"Rounding","nameLocations":["9548:8:9"],"nodeType":"IdentifierPath","referencedDeclaration":1356,"src":"9548:8:9"},"referencedDeclaration":1356,"src":"9548:8:9","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1356","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"9532:34:9"},"returnParameters":{"id":1896,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1895,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1922,"src":"9590:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1894,"name":"uint256","nodeType":"ElementaryTypeName","src":"9590:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9589:9:9"},"scope":2214,"src":"9519:245:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2050,"nodeType":"Block","src":"9951:828:9","statements":[{"assignments":[1931],"declarations":[{"constant":false,"id":1931,"mutability":"mutable","name":"result","nameLocation":"9969:6:9","nodeType":"VariableDeclaration","scope":2050,"src":"9961:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1930,"name":"uint256","nodeType":"ElementaryTypeName","src":"9961:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1933,"initialValue":{"hexValue":"30","id":1932,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9978:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"9961:18:9"},{"id":2047,"nodeType":"UncheckedBlock","src":"9989:761:9","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1938,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1934,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1925,"src":"10017:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"},"id":1937,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":1935,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10026:2:9","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3634","id":1936,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10030:2:9","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"10026:6:9","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"}},"src":"10017:15:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1950,"nodeType":"IfStatement","src":"10013:99:9","trueBody":{"id":1949,"nodeType":"Block","src":"10034:78:9","statements":[{"expression":{"id":1943,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1939,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1925,"src":"10052:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"},"id":1942,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":1940,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10061:2:9","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3634","id":1941,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10065:2:9","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"10061:6:9","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"}},"src":"10052:15:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1944,"nodeType":"ExpressionStatement","src":"10052:15:9"},{"expression":{"id":1947,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1945,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1931,"src":"10085:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3634","id":1946,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10095:2:9","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"10085:12:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1948,"nodeType":"ExpressionStatement","src":"10085:12:9"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1955,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1951,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1925,"src":"10129:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"},"id":1954,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":1952,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10138:2:9","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3332","id":1953,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10142:2:9","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"10138:6:9","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"}},"src":"10129:15:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1967,"nodeType":"IfStatement","src":"10125:99:9","trueBody":{"id":1966,"nodeType":"Block","src":"10146:78:9","statements":[{"expression":{"id":1960,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1956,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1925,"src":"10164:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"},"id":1959,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":1957,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10173:2:9","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3332","id":1958,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10177:2:9","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"10173:6:9","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"}},"src":"10164:15:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1961,"nodeType":"ExpressionStatement","src":"10164:15:9"},{"expression":{"id":1964,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1962,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1931,"src":"10197:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3332","id":1963,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10207:2:9","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"10197:12:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1965,"nodeType":"ExpressionStatement","src":"10197:12:9"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1972,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1968,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1925,"src":"10241:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"},"id":1971,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":1969,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10250:2:9","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3136","id":1970,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10254:2:9","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"10250:6:9","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"}},"src":"10241:15:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1984,"nodeType":"IfStatement","src":"10237:99:9","trueBody":{"id":1983,"nodeType":"Block","src":"10258:78:9","statements":[{"expression":{"id":1977,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1973,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1925,"src":"10276:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"},"id":1976,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":1974,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10285:2:9","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3136","id":1975,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10289:2:9","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"10285:6:9","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"}},"src":"10276:15:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1978,"nodeType":"ExpressionStatement","src":"10276:15:9"},{"expression":{"id":1981,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1979,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1931,"src":"10309:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3136","id":1980,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10319:2:9","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"10309:12:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1982,"nodeType":"ExpressionStatement","src":"10309:12:9"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1989,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1985,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1925,"src":"10353:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":1988,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":1986,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10362:2:9","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"38","id":1987,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10366:1:9","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"10362:5:9","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"10353:14:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2001,"nodeType":"IfStatement","src":"10349:96:9","trueBody":{"id":2000,"nodeType":"Block","src":"10369:76:9","statements":[{"expression":{"id":1994,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1990,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1925,"src":"10387:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":1993,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":1991,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10396:2:9","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"38","id":1992,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10400:1:9","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"10396:5:9","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"10387:14:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1995,"nodeType":"ExpressionStatement","src":"10387:14:9"},{"expression":{"id":1998,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1996,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1931,"src":"10419:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"38","id":1997,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10429:1:9","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"10419:11:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1999,"nodeType":"ExpressionStatement","src":"10419:11:9"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2006,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2002,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1925,"src":"10462:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"id":2005,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2003,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10471:2:9","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"34","id":2004,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10475:1:9","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"10471:5:9","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"}},"src":"10462:14:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2018,"nodeType":"IfStatement","src":"10458:96:9","trueBody":{"id":2017,"nodeType":"Block","src":"10478:76:9","statements":[{"expression":{"id":2011,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2007,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1925,"src":"10496:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"id":2010,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2008,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10505:2:9","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"34","id":2009,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10509:1:9","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"10505:5:9","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"}},"src":"10496:14:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2012,"nodeType":"ExpressionStatement","src":"10496:14:9"},{"expression":{"id":2015,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2013,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1931,"src":"10528:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"34","id":2014,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10538:1:9","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"10528:11:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2016,"nodeType":"ExpressionStatement","src":"10528:11:9"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2023,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2019,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1925,"src":"10571:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"id":2022,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2020,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10580:2:9","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"32","id":2021,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10584:1:9","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"10580:5:9","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"}},"src":"10571:14:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2035,"nodeType":"IfStatement","src":"10567:96:9","trueBody":{"id":2034,"nodeType":"Block","src":"10587:76:9","statements":[{"expression":{"id":2028,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2024,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1925,"src":"10605:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"id":2027,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2025,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10614:2:9","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"32","id":2026,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10618:1:9","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"10614:5:9","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"}},"src":"10605:14:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2029,"nodeType":"ExpressionStatement","src":"10605:14:9"},{"expression":{"id":2032,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2030,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1931,"src":"10637:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"32","id":2031,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10647:1:9","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"10637:11:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2033,"nodeType":"ExpressionStatement","src":"10637:11:9"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2040,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2036,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1925,"src":"10680:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"id":2039,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2037,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10689:2:9","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"31","id":2038,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10693:1:9","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"10689:5:9","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"}},"src":"10680:14:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2046,"nodeType":"IfStatement","src":"10676:64:9","trueBody":{"id":2045,"nodeType":"Block","src":"10696:44:9","statements":[{"expression":{"id":2043,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2041,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1931,"src":"10714:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":2042,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10724:1:9","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"10714:11:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2044,"nodeType":"ExpressionStatement","src":"10714:11:9"}]}}]},{"expression":{"id":2048,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1931,"src":"10766:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1929,"id":2049,"nodeType":"Return","src":"10759:13:9"}]},"documentation":{"id":1923,"nodeType":"StructuredDocumentation","src":"9770:114:9","text":" @dev Return the log in base 10, rounded down, of a positive value.\n Returns 0 if given 0."},"id":2051,"implemented":true,"kind":"function","modifiers":[],"name":"log10","nameLocation":"9898:5:9","nodeType":"FunctionDefinition","parameters":{"id":1926,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1925,"mutability":"mutable","name":"value","nameLocation":"9912:5:9","nodeType":"VariableDeclaration","scope":2051,"src":"9904:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1924,"name":"uint256","nodeType":"ElementaryTypeName","src":"9904:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9903:15:9"},"returnParameters":{"id":1929,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1928,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2051,"src":"9942:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1927,"name":"uint256","nodeType":"ElementaryTypeName","src":"9942:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9941:9:9"},"scope":2214,"src":"9889:890:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2086,"nodeType":"Block","src":"11014:165:9","statements":[{"id":2085,"nodeType":"UncheckedBlock","src":"11024:149:9","statements":[{"assignments":[2063],"declarations":[{"constant":false,"id":2063,"mutability":"mutable","name":"result","nameLocation":"11056:6:9","nodeType":"VariableDeclaration","scope":2085,"src":"11048:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2062,"name":"uint256","nodeType":"ElementaryTypeName","src":"11048:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2067,"initialValue":{"arguments":[{"id":2065,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2054,"src":"11071:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2064,"name":"log10","nodeType":"Identifier","overloadedDeclarations":[2051,2087],"referencedDeclaration":2051,"src":"11065:5:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":2066,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11065:12:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"11048:29:9"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2083,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2068,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2063,"src":"11098:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2078,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_Rounding_$1356","typeString":"enum Math.Rounding"},"id":2072,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2069,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2057,"src":"11108:8:9","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1356","typeString":"enum Math.Rounding"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":2070,"name":"Rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1356,"src":"11120:8:9","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Rounding_$1356_$","typeString":"type(enum Math.Rounding)"}},"id":2071,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11129:2:9","memberName":"Up","nodeType":"MemberAccess","referencedDeclaration":1354,"src":"11120:11:9","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1356","typeString":"enum Math.Rounding"}},"src":"11108:23:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2077,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2075,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2073,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11135:2:9","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"id":2074,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2063,"src":"11139:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11135:10:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2076,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2054,"src":"11148:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11135:18:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"11108:45:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":2080,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11160:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":2081,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"11108:53:9","trueExpression":{"hexValue":"31","id":2079,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11156:1:9","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":2082,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11107:55:9","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"11098:64:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2061,"id":2084,"nodeType":"Return","src":"11091:71:9"}]}]},"documentation":{"id":2052,"nodeType":"StructuredDocumentation","src":"10785:143:9","text":" @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":2087,"implemented":true,"kind":"function","modifiers":[],"name":"log10","nameLocation":"10942:5:9","nodeType":"FunctionDefinition","parameters":{"id":2058,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2054,"mutability":"mutable","name":"value","nameLocation":"10956:5:9","nodeType":"VariableDeclaration","scope":2087,"src":"10948:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2053,"name":"uint256","nodeType":"ElementaryTypeName","src":"10948:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2057,"mutability":"mutable","name":"rounding","nameLocation":"10972:8:9","nodeType":"VariableDeclaration","scope":2087,"src":"10963:17:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1356","typeString":"enum Math.Rounding"},"typeName":{"id":2056,"nodeType":"UserDefinedTypeName","pathNode":{"id":2055,"name":"Rounding","nameLocations":["10963:8:9"],"nodeType":"IdentifierPath","referencedDeclaration":1356,"src":"10963:8:9"},"referencedDeclaration":1356,"src":"10963:8:9","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1356","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"10947:34:9"},"returnParameters":{"id":2061,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2060,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2087,"src":"11005:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2059,"name":"uint256","nodeType":"ElementaryTypeName","src":"11005:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11004:9:9"},"scope":2214,"src":"10933:246:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2173,"nodeType":"Block","src":"11493:600:9","statements":[{"assignments":[2096],"declarations":[{"constant":false,"id":2096,"mutability":"mutable","name":"result","nameLocation":"11511:6:9","nodeType":"VariableDeclaration","scope":2173,"src":"11503:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2095,"name":"uint256","nodeType":"ElementaryTypeName","src":"11503:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2098,"initialValue":{"hexValue":"30","id":2097,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11520:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"11503:18:9"},{"id":2170,"nodeType":"UncheckedBlock","src":"11531:533:9","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2103,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2101,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2099,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2090,"src":"11559:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"313238","id":2100,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11568:3:9","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"11559:12:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2102,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11574:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11559:16:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2113,"nodeType":"IfStatement","src":"11555:98:9","trueBody":{"id":2112,"nodeType":"Block","src":"11577:76:9","statements":[{"expression":{"id":2106,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2104,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2090,"src":"11595:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"313238","id":2105,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11605:3:9","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"11595:13:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2107,"nodeType":"ExpressionStatement","src":"11595:13:9"},{"expression":{"id":2110,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2108,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2096,"src":"11626:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3136","id":2109,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11636:2:9","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"11626:12:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2111,"nodeType":"ExpressionStatement","src":"11626:12:9"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2118,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2116,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2114,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2090,"src":"11670:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3634","id":2115,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11679:2:9","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"11670:11:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2117,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11684:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11670:15:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2128,"nodeType":"IfStatement","src":"11666:95:9","trueBody":{"id":2127,"nodeType":"Block","src":"11687:74:9","statements":[{"expression":{"id":2121,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2119,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2090,"src":"11705:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3634","id":2120,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11715:2:9","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"11705:12:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2122,"nodeType":"ExpressionStatement","src":"11705:12:9"},{"expression":{"id":2125,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2123,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2096,"src":"11735:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"38","id":2124,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11745:1:9","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"11735:11:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2126,"nodeType":"ExpressionStatement","src":"11735:11:9"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2133,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2131,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2129,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2090,"src":"11778:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3332","id":2130,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11787:2:9","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"11778:11:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2132,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11792:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11778:15:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2143,"nodeType":"IfStatement","src":"11774:95:9","trueBody":{"id":2142,"nodeType":"Block","src":"11795:74:9","statements":[{"expression":{"id":2136,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2134,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2090,"src":"11813:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3332","id":2135,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11823:2:9","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"11813:12:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2137,"nodeType":"ExpressionStatement","src":"11813:12:9"},{"expression":{"id":2140,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2138,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2096,"src":"11843:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"34","id":2139,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11853:1:9","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"11843:11:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2141,"nodeType":"ExpressionStatement","src":"11843:11:9"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2148,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2146,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2144,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2090,"src":"11886:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3136","id":2145,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11895:2:9","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"11886:11:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2147,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11900:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11886:15:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2158,"nodeType":"IfStatement","src":"11882:95:9","trueBody":{"id":2157,"nodeType":"Block","src":"11903:74:9","statements":[{"expression":{"id":2151,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2149,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2090,"src":"11921:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3136","id":2150,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11931:2:9","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"11921:12:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2152,"nodeType":"ExpressionStatement","src":"11921:12:9"},{"expression":{"id":2155,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2153,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2096,"src":"11951:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"32","id":2154,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11961:1:9","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"11951:11:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2156,"nodeType":"ExpressionStatement","src":"11951:11:9"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2163,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2161,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2159,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2090,"src":"11994:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"38","id":2160,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12003:1:9","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"11994:10:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2162,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12007:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11994:14:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2169,"nodeType":"IfStatement","src":"11990:64:9","trueBody":{"id":2168,"nodeType":"Block","src":"12010:44:9","statements":[{"expression":{"id":2166,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2164,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2096,"src":"12028:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":2165,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12038:1:9","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"12028:11:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2167,"nodeType":"ExpressionStatement","src":"12028:11:9"}]}}]},{"expression":{"id":2171,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2096,"src":"12080:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2094,"id":2172,"nodeType":"Return","src":"12073:13:9"}]},"documentation":{"id":2088,"nodeType":"StructuredDocumentation","src":"11185:240:9","text":" @dev Return the log in base 256, rounded down, of a positive value.\n Returns 0 if given 0.\n Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string."},"id":2174,"implemented":true,"kind":"function","modifiers":[],"name":"log256","nameLocation":"11439:6:9","nodeType":"FunctionDefinition","parameters":{"id":2091,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2090,"mutability":"mutable","name":"value","nameLocation":"11454:5:9","nodeType":"VariableDeclaration","scope":2174,"src":"11446:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2089,"name":"uint256","nodeType":"ElementaryTypeName","src":"11446:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11445:15:9"},"returnParameters":{"id":2094,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2093,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2174,"src":"11484:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2092,"name":"uint256","nodeType":"ElementaryTypeName","src":"11484:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11483:9:9"},"scope":2214,"src":"11430:663:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2212,"nodeType":"Block","src":"12329:173:9","statements":[{"id":2211,"nodeType":"UncheckedBlock","src":"12339:157:9","statements":[{"assignments":[2186],"declarations":[{"constant":false,"id":2186,"mutability":"mutable","name":"result","nameLocation":"12371:6:9","nodeType":"VariableDeclaration","scope":2211,"src":"12363:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2185,"name":"uint256","nodeType":"ElementaryTypeName","src":"12363:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2190,"initialValue":{"arguments":[{"id":2188,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2177,"src":"12387:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2187,"name":"log256","nodeType":"Identifier","overloadedDeclarations":[2174,2213],"referencedDeclaration":2174,"src":"12380:6:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":2189,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12380:13:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"12363:30:9"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2209,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2191,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2186,"src":"12414:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2204,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_Rounding_$1356","typeString":"enum Math.Rounding"},"id":2195,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2192,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2180,"src":"12424:8:9","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1356","typeString":"enum Math.Rounding"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":2193,"name":"Rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1356,"src":"12436:8:9","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Rounding_$1356_$","typeString":"type(enum Math.Rounding)"}},"id":2194,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"12445:2:9","memberName":"Up","nodeType":"MemberAccess","referencedDeclaration":1354,"src":"12436:11:9","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1356","typeString":"enum Math.Rounding"}},"src":"12424:23:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2203,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2201,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":2196,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12451:1:9","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2199,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2197,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2186,"src":"12457:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"38","id":2198,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12466:1:9","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"12457:10:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2200,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"12456:12:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12451:17:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2202,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2177,"src":"12471:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12451:25:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"12424:52:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":2206,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12483:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":2207,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"12424:60:9","trueExpression":{"hexValue":"31","id":2205,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12479:1:9","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":2208,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"12423:62:9","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"12414:71:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2184,"id":2210,"nodeType":"Return","src":"12407:78:9"}]}]},"documentation":{"id":2175,"nodeType":"StructuredDocumentation","src":"12099:143:9","text":" @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":2213,"implemented":true,"kind":"function","modifiers":[],"name":"log256","nameLocation":"12256:6:9","nodeType":"FunctionDefinition","parameters":{"id":2181,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2177,"mutability":"mutable","name":"value","nameLocation":"12271:5:9","nodeType":"VariableDeclaration","scope":2213,"src":"12263:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2176,"name":"uint256","nodeType":"ElementaryTypeName","src":"12263:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2180,"mutability":"mutable","name":"rounding","nameLocation":"12287:8:9","nodeType":"VariableDeclaration","scope":2213,"src":"12278:17:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1356","typeString":"enum Math.Rounding"},"typeName":{"id":2179,"nodeType":"UserDefinedTypeName","pathNode":{"id":2178,"name":"Rounding","nameLocations":["12278:8:9"],"nodeType":"IdentifierPath","referencedDeclaration":1356,"src":"12278:8:9"},"referencedDeclaration":1356,"src":"12278:8:9","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1356","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"12262:34:9"},"returnParameters":{"id":2184,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2183,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2213,"src":"12320:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2182,"name":"uint256","nodeType":"ElementaryTypeName","src":"12320:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12319:9:9"},"scope":2214,"src":"12247:255:9","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":2215,"src":"202:12302:9","usedErrors":[]}],"src":"103:12402:9"}},"contracts/smart-contract-wallet/BaseSmartAccount.sol":{"id":10,"ast":{"absolutePath":"contracts/smart-contract-wallet/BaseSmartAccount.sol","exportedSymbols":{"BaseSmartAccount":[2401],"BaseSmartAccountErrors":[4939],"Enum":[4931],"FeeRefund":[2251],"IAccount":[254],"IEntryPoint":[492],"Transaction":[2240],"UserOperation":[643],"UserOperationLib":[813],"ValidationData":[8],"_intersectTimeRange":[152],"_packValidationData":[189,227],"_parseValidationData":[67],"calldataKeccak":[237]},"id":2402,"license":"GPL-3.0","nodeType":"SourceUnit","nodes":[{"id":2216,"literals":["solidity","0.8",".17"],"nodeType":"PragmaDirective","src":"36:23:10"},{"absolutePath":"@account-abstraction/contracts/interfaces/IAccount.sol","file":"@account-abstraction/contracts/interfaces/IAccount.sol","id":2218,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2402,"sourceUnit":255,"src":"183:80:10","symbolAliases":[{"foreign":{"id":2217,"name":"IAccount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":254,"src":"191:8:10","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@account-abstraction/contracts/interfaces/IEntryPoint.sol","file":"@account-abstraction/contracts/interfaces/IEntryPoint.sol","id":2220,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2402,"sourceUnit":493,"src":"264:86:10","symbolAliases":[{"foreign":{"id":2219,"name":"IEntryPoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":492,"src":"272:11:10","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@account-abstraction/contracts/interfaces/UserOperation.sol","file":"@account-abstraction/contracts/interfaces/UserOperation.sol","id":2223,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2402,"sourceUnit":814,"src":"351:108:10","symbolAliases":[{"foreign":{"id":2221,"name":"UserOperationLib","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":813,"src":"359:16:10","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":2222,"name":"UserOperation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":643,"src":"377:13:10","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"contracts/smart-contract-wallet/common/Enum.sol","file":"./common/Enum.sol","id":2225,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2402,"sourceUnit":4932,"src":"460:39:10","symbolAliases":[{"foreign":{"id":2224,"name":"Enum","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4931,"src":"468:4:10","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"contracts/smart-contract-wallet/common/Errors.sol","file":"./common/Errors.sol","id":2227,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2402,"sourceUnit":5129,"src":"500:59:10","symbolAliases":[{"foreign":{"id":2226,"name":"BaseSmartAccountErrors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4939,"src":"508:22:10","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@account-abstraction/contracts/core/Helpers.sol","file":"@account-abstraction/contracts/core/Helpers.sol","id":2228,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2402,"sourceUnit":238,"src":"560:57:10","symbolAliases":[],"unitAlias":""},{"canonicalName":"Transaction","id":2240,"members":[{"constant":false,"id":2230,"mutability":"mutable","name":"to","nameLocation":"652:2:10","nodeType":"VariableDeclaration","scope":2240,"src":"644:10:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2229,"name":"address","nodeType":"ElementaryTypeName","src":"644:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2233,"mutability":"mutable","name":"operation","nameLocation":"675:9:10","nodeType":"VariableDeclaration","scope":2240,"src":"660:24:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Operation_$4930","typeString":"enum Enum.Operation"},"typeName":{"id":2232,"nodeType":"UserDefinedTypeName","pathNode":{"id":2231,"name":"Enum.Operation","nameLocations":["660:4:10","665:9:10"],"nodeType":"IdentifierPath","referencedDeclaration":4930,"src":"660:14:10"},"referencedDeclaration":4930,"src":"660:14:10","typeDescriptions":{"typeIdentifier":"t_enum$_Operation_$4930","typeString":"enum Enum.Operation"}},"visibility":"internal"},{"constant":false,"id":2235,"mutability":"mutable","name":"value","nameLocation":"698:5:10","nodeType":"VariableDeclaration","scope":2240,"src":"690:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2234,"name":"uint256","nodeType":"ElementaryTypeName","src":"690:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2237,"mutability":"mutable","name":"data","nameLocation":"715:4:10","nodeType":"VariableDeclaration","scope":2240,"src":"709:10:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":2236,"name":"bytes","nodeType":"ElementaryTypeName","src":"709:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":2239,"mutability":"mutable","name":"targetTxGas","nameLocation":"733:11:10","nodeType":"VariableDeclaration","scope":2240,"src":"725:19:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2238,"name":"uint256","nodeType":"ElementaryTypeName","src":"725:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"Transaction","nameLocation":"626:11:10","nodeType":"StructDefinition","scope":2402,"src":"619:128:10","visibility":"public"},{"canonicalName":"FeeRefund","id":2251,"members":[{"constant":false,"id":2242,"mutability":"mutable","name":"baseGas","nameLocation":"780:7:10","nodeType":"VariableDeclaration","scope":2251,"src":"772:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2241,"name":"uint256","nodeType":"ElementaryTypeName","src":"772:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2244,"mutability":"mutable","name":"gasPrice","nameLocation":"801:8:10","nodeType":"VariableDeclaration","scope":2251,"src":"793:16:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2243,"name":"uint256","nodeType":"ElementaryTypeName","src":"793:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2246,"mutability":"mutable","name":"tokenGasPriceFactor","nameLocation":"851:19:10","nodeType":"VariableDeclaration","scope":2251,"src":"843:27:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2245,"name":"uint256","nodeType":"ElementaryTypeName","src":"843:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2248,"mutability":"mutable","name":"gasToken","nameLocation":"884:8:10","nodeType":"VariableDeclaration","scope":2251,"src":"876:16:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2247,"name":"address","nodeType":"ElementaryTypeName","src":"876:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2250,"mutability":"mutable","name":"refundReceiver","nameLocation":"914:14:10","nodeType":"VariableDeclaration","scope":2251,"src":"898:30:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":2249,"name":"address","nodeType":"ElementaryTypeName","src":"898:15:10","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"}],"name":"FeeRefund","nameLocation":"756:9:10","nodeType":"StructDefinition","scope":2402,"src":"749:182:10","visibility":"public"},{"abstract":true,"baseContracts":[{"baseName":{"id":2253,"name":"IAccount","nameLocations":["1211:8:10"],"nodeType":"IdentifierPath","referencedDeclaration":254,"src":"1211:8:10"},"id":2254,"nodeType":"InheritanceSpecifier","src":"1211:8:10"},{"baseName":{"id":2255,"name":"BaseSmartAccountErrors","nameLocations":["1221:22:10"],"nodeType":"IdentifierPath","referencedDeclaration":4939,"src":"1221:22:10"},"id":2256,"nodeType":"InheritanceSpecifier","src":"1221:22:10"}],"canonicalName":"BaseSmartAccount","contractDependencies":[],"contractKind":"contract","documentation":{"id":2252,"nodeType":"StructuredDocumentation","src":"933:239:10","text":" Basic account implementation.\n This contract provides the basic logic for implementing the IAccount interface: validateUserOp function\n Specific account implementation should inherit it and provide the account-specific logic"},"fullyImplemented":false,"id":2401,"linearizedBaseContracts":[2401,4939,254],"name":"BaseSmartAccount","nameLocation":"1191:16:10","nodeType":"ContractDefinition","nodes":[{"global":false,"id":2260,"libraryName":{"id":2257,"name":"UserOperationLib","nameLocations":["1256:16:10"],"nodeType":"IdentifierPath","referencedDeclaration":813,"src":"1256:16:10"},"nodeType":"UsingForDirective","src":"1250:41:10","typeName":{"id":2259,"nodeType":"UserDefinedTypeName","pathNode":{"id":2258,"name":"UserOperation","nameLocations":["1277:13:10"],"nodeType":"IdentifierPath","referencedDeclaration":643,"src":"1277:13:10"},"referencedDeclaration":643,"src":"1277:13:10","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$643_storage_ptr","typeString":"struct UserOperation"}}},{"constant":true,"id":2263,"mutability":"constant","name":"SIG_VALIDATION_FAILED","nameLocation":"1444:21:10","nodeType":"VariableDeclaration","scope":2401,"src":"1418:51:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2261,"name":"uint256","nodeType":"ElementaryTypeName","src":"1418:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"31","id":2262,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1468:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"visibility":"internal"},{"body":{"id":2279,"nodeType":"Block","src":"1732:63:10","statements":[{"expression":{"arguments":[{"arguments":[{"id":2274,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"1779:4:10","typeDescriptions":{"typeIdentifier":"t_contract$_BaseSmartAccount_$2401","typeString":"contract BaseSmartAccount"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_BaseSmartAccount_$2401","typeString":"contract BaseSmartAccount"}],"id":2273,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1771:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2272,"name":"address","nodeType":"ElementaryTypeName","src":"1771:7:10","typeDescriptions":{}}},"id":2275,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1771:13:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"hexValue":"30","id":2276,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1786:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":2269,"name":"entryPoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2287,"src":"1749:10:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_contract$_IEntryPoint_$492_$","typeString":"function () view returns (contract IEntryPoint)"}},"id":2270,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1749:12:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IEntryPoint_$492","typeString":"contract IEntryPoint"}},"id":2271,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1762:8:10","memberName":"getNonce","nodeType":"MemberAccess","referencedDeclaration":504,"src":"1749:21:10","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$_t_uint192_$returns$_t_uint256_$","typeString":"function (address,uint192) view external returns (uint256)"}},"id":2277,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1749:39:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2268,"id":2278,"nodeType":"Return","src":"1742:46:10"}]},"documentation":{"id":2264,"nodeType":"StructuredDocumentation","src":"1476:196:10","text":" @return nonce the account nonce.\n @dev This method returns the next sequential nonce.\n @notice For a nonce of a specific key, use `entrypoint.getNonce(account, key)`"},"functionSelector":"affed0e0","id":2280,"implemented":true,"kind":"function","modifiers":[],"name":"nonce","nameLocation":"1686:5:10","nodeType":"FunctionDefinition","parameters":{"id":2265,"nodeType":"ParameterList","parameters":[],"src":"1691:2:10"},"returnParameters":{"id":2268,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2267,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2280,"src":"1723:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2266,"name":"uint256","nodeType":"ElementaryTypeName","src":"1723:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1722:9:10"},"scope":2401,"src":"1677:118:10","stateMutability":"view","virtual":true,"visibility":"public"},{"documentation":{"id":2281,"nodeType":"StructuredDocumentation","src":"1801:137:10","text":" return the entryPoint used by this account.\n subclass should return the current entryPoint used by this account."},"functionSelector":"b0d691fe","id":2287,"implemented":false,"kind":"function","modifiers":[],"name":"entryPoint","nameLocation":"1952:10:10","nodeType":"FunctionDefinition","parameters":{"id":2282,"nodeType":"ParameterList","parameters":[],"src":"1962:2:10"},"returnParameters":{"id":2286,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2285,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2287,"src":"1994:11:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IEntryPoint_$492","typeString":"contract IEntryPoint"},"typeName":{"id":2284,"nodeType":"UserDefinedTypeName","pathNode":{"id":2283,"name":"IEntryPoint","nameLocations":["1994:11:10"],"nodeType":"IdentifierPath","referencedDeclaration":492,"src":"1994:11:10"},"referencedDeclaration":492,"src":"1994:11:10","typeDescriptions":{"typeIdentifier":"t_contract$_IEntryPoint_$492","typeString":"contract IEntryPoint"}},"visibility":"internal"}],"src":"1993:13:10"},"scope":2401,"src":"1943:64:10","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[253],"body":{"id":2331,"nodeType":"Block","src":"2397:257:10","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2308,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2301,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2411:3:10","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2302,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2415:6:10","memberName":"sender","nodeType":"MemberAccess","src":"2411:10:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":2305,"name":"entryPoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2287,"src":"2433:10:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_contract$_IEntryPoint_$492_$","typeString":"function () view returns (contract IEntryPoint)"}},"id":2306,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2433:12:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IEntryPoint_$492","typeString":"contract IEntryPoint"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IEntryPoint_$492","typeString":"contract IEntryPoint"}],"id":2304,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2425:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2303,"name":"address","nodeType":"ElementaryTypeName","src":"2425:7:10","typeDescriptions":{}}},"id":2307,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2425:21:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2411:35:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2314,"nodeType":"IfStatement","src":"2407:95:10","trueBody":{"errorCall":{"arguments":[{"expression":{"id":2310,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2491:3:10","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2311,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2495:6:10","memberName":"sender","nodeType":"MemberAccess","src":"2491:10:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2309,"name":"CallerIsNotAnEntryPoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4938,"src":"2467:23:10","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":2312,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2467:35:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2313,"nodeType":"RevertStatement","src":"2460:42:10"}},{"expression":{"id":2320,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2315,"name":"validationData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2299,"src":"2512:14:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":2317,"name":"userOp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2291,"src":"2548:6:10","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$643_calldata_ptr","typeString":"struct UserOperation calldata"}},{"id":2318,"name":"userOpHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2293,"src":"2556:10:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_UserOperation_$643_calldata_ptr","typeString":"struct UserOperation calldata"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2316,"name":"_validateSignature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2343,"src":"2529:18:10","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_UserOperation_$643_calldata_ptr_$_t_bytes32_$returns$_t_uint256_$","typeString":"function (struct UserOperation calldata,bytes32) returns (uint256)"}},"id":2319,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2529:38:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2512:55:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2321,"nodeType":"ExpressionStatement","src":"2512:55:10"},{"expression":{"arguments":[{"expression":{"id":2323,"name":"userOp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2291,"src":"2592:6:10","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$643_calldata_ptr","typeString":"struct UserOperation calldata"}},"id":2324,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2599:5:10","memberName":"nonce","nodeType":"MemberAccess","referencedDeclaration":624,"src":"2592:12:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2322,"name":"_validateNonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2350,"src":"2577:14:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$__$","typeString":"function (uint256) view"}},"id":2325,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2577:28:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2326,"nodeType":"ExpressionStatement","src":"2577:28:10"},{"expression":{"arguments":[{"id":2328,"name":"missingAccountFunds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2295,"src":"2627:19:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2327,"name":"_payPrefund","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2378,"src":"2615:11:10","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":2329,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2615:32:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2330,"nodeType":"ExpressionStatement","src":"2615:32:10"}]},"documentation":{"id":2288,"nodeType":"StructuredDocumentation","src":"2013:186:10","text":" Validate user's signature and nonce.\n Subclass doesn't need to override this method.\n Instead, it should override the specific internal validation methods."},"functionSelector":"3a871cdd","id":2332,"implemented":true,"kind":"function","modifiers":[],"name":"validateUserOp","nameLocation":"2213:14:10","nodeType":"FunctionDefinition","overrides":{"id":2297,"nodeType":"OverrideSpecifier","overrides":[],"src":"2355:8:10"},"parameters":{"id":2296,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2291,"mutability":"mutable","name":"userOp","nameLocation":"2260:6:10","nodeType":"VariableDeclaration","scope":2332,"src":"2237:29:10","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$643_calldata_ptr","typeString":"struct UserOperation"},"typeName":{"id":2290,"nodeType":"UserDefinedTypeName","pathNode":{"id":2289,"name":"UserOperation","nameLocations":["2237:13:10"],"nodeType":"IdentifierPath","referencedDeclaration":643,"src":"2237:13:10"},"referencedDeclaration":643,"src":"2237:13:10","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$643_storage_ptr","typeString":"struct UserOperation"}},"visibility":"internal"},{"constant":false,"id":2293,"mutability":"mutable","name":"userOpHash","nameLocation":"2284:10:10","nodeType":"VariableDeclaration","scope":2332,"src":"2276:18:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2292,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2276:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2295,"mutability":"mutable","name":"missingAccountFunds","nameLocation":"2312:19:10","nodeType":"VariableDeclaration","scope":2332,"src":"2304:27:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2294,"name":"uint256","nodeType":"ElementaryTypeName","src":"2304:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2227:110:10"},"returnParameters":{"id":2300,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2299,"mutability":"mutable","name":"validationData","nameLocation":"2381:14:10","nodeType":"VariableDeclaration","scope":2332,"src":"2373:22:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2298,"name":"uint256","nodeType":"ElementaryTypeName","src":"2373:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2372:24:10"},"scope":2401,"src":"2204:450:10","stateMutability":"nonpayable","virtual":true,"visibility":"external"},{"documentation":{"id":2333,"nodeType":"StructuredDocumentation","src":"2660:904:10","text":" validate the signature is valid for this message.\n @param userOp validate the userOp.signature field\n @param userOpHash convenient field: the hash of the request, to check the signature against\n          (also hashes the entrypoint and chain id)\n @return validationData signature and time-range of this operation\n      <20-byte> sigAuthorizer - 0 for valid signature, 1 to mark signature failure,\n         otherwise, an address of an \"authorizer\" contract.\n      <6-byte> validUntil - last timestamp this operation is valid. 0 for \"indefinite\"\n      <6-byte> validAfter - first timestamp this operation is valid\n      If the account doesn't use time-range, it is enough to return SIG_VALIDATION_FAILED value (1) for signature failure.\n      Note that the validation code cannot use block.timestamp (or block.number) directly."},"id":2343,"implemented":false,"kind":"function","modifiers":[],"name":"_validateSignature","nameLocation":"3578:18:10","nodeType":"FunctionDefinition","parameters":{"id":2339,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2336,"mutability":"mutable","name":"userOp","nameLocation":"3629:6:10","nodeType":"VariableDeclaration","scope":2343,"src":"3606:29:10","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$643_calldata_ptr","typeString":"struct UserOperation"},"typeName":{"id":2335,"nodeType":"UserDefinedTypeName","pathNode":{"id":2334,"name":"UserOperation","nameLocations":["3606:13:10"],"nodeType":"IdentifierPath","referencedDeclaration":643,"src":"3606:13:10"},"referencedDeclaration":643,"src":"3606:13:10","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$643_storage_ptr","typeString":"struct UserOperation"}},"visibility":"internal"},{"constant":false,"id":2338,"mutability":"mutable","name":"userOpHash","nameLocation":"3653:10:10","nodeType":"VariableDeclaration","scope":2343,"src":"3645:18:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2337,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3645:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3596:73:10"},"returnParameters":{"id":2342,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2341,"mutability":"mutable","name":"validationData","nameLocation":"3704:14:10","nodeType":"VariableDeclaration","scope":2343,"src":"3696:22:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2340,"name":"uint256","nodeType":"ElementaryTypeName","src":"3696:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3695:24:10"},"scope":2401,"src":"3569:151:10","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":2349,"nodeType":"Block","src":"4432:2:10","statements":[]},"documentation":{"id":2344,"nodeType":"StructuredDocumentation","src":"3726:640:10","text":" Validate the nonce of the UserOperation.\n This method may validate the nonce requirement of this account.\n e.g.\n To limit the nonce to use sequenced UserOps only (no \"out of order\" UserOps):\n      `require(nonce < type(uint64).max)`\n For a hypothetical account that *requires* the nonce to be out-of-order:\n      `require(nonce & type(uint64).max == 0)`\n The actual nonce uniqueness is managed by the EntryPoint, and thus no other\n action is needed by the account itself.\n @param nonce to validate\n solhint-disable-next-line no-empty-blocks"},"id":2350,"implemented":true,"kind":"function","modifiers":[],"name":"_validateNonce","nameLocation":"4380:14:10","nodeType":"FunctionDefinition","parameters":{"id":2347,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2346,"mutability":"mutable","name":"nonce","nameLocation":"4403:5:10","nodeType":"VariableDeclaration","scope":2350,"src":"4395:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2345,"name":"uint256","nodeType":"ElementaryTypeName","src":"4395:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4394:15:10"},"returnParameters":{"id":2348,"nodeType":"ParameterList","parameters":[],"src":"4432:0:10"},"scope":2401,"src":"4371:63:10","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":2377,"nodeType":"Block","src":"5009:273:10","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2358,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2356,"name":"missingAccountFunds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2353,"src":"5023:19:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":2357,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5046:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5023:24:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2376,"nodeType":"IfStatement","src":"5019:257:10","trueBody":{"id":2375,"nodeType":"Block","src":"5049:227:10","statements":[{"expression":{"arguments":[{"hexValue":"","id":2372,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5186:2:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"arguments":[{"expression":{"id":2361,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"5071:3:10","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2362,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5075:6:10","memberName":"sender","nodeType":"MemberAccess","src":"5071:10:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2360,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5063:8:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_payable_$","typeString":"type(address payable)"},"typeName":{"id":2359,"name":"address","nodeType":"ElementaryTypeName","src":"5063:8:10","stateMutability":"payable","typeDescriptions":{}}},"id":2363,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5063:19:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":2364,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5083:4:10","memberName":"call","nodeType":"MemberAccess","src":"5063:24:10","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":2371,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value","gas"],"nodeType":"FunctionCallOptions","options":[{"id":2365,"name":"missingAccountFunds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2353,"src":"5112:19:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"arguments":[{"id":2368,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5159:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2367,"name":"uint256","nodeType":"ElementaryTypeName","src":"5159:7:10","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"}],"id":2366,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"5154:4:10","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2369,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5154:13:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint256","typeString":"type(uint256)"}},"id":2370,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5168:3:10","memberName":"max","nodeType":"MemberAccess","src":"5154:17:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"5063:122:10","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$gasvalue","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":2373,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5063:126:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"id":2374,"nodeType":"ExpressionStatement","src":"5063:126:10"}]}}]},"documentation":{"id":2351,"nodeType":"StructuredDocumentation","src":"4440:497:10","text":" sends to the entrypoint (msg.sender) the missing funds for this transaction.\n subclass MAY override this method for better funds management\n (e.g. send to the entryPoint more than the minimum required, so that in future transactions\n it will not be required to send again)\n @param missingAccountFunds the minimum value this method should send the entrypoint.\n  this value MAY be zero, in case there is enough deposit, or the userOp has a paymaster."},"id":2378,"implemented":true,"kind":"function","modifiers":[],"name":"_payPrefund","nameLocation":"4951:11:10","nodeType":"FunctionDefinition","parameters":{"id":2354,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2353,"mutability":"mutable","name":"missingAccountFunds","nameLocation":"4971:19:10","nodeType":"VariableDeclaration","scope":2378,"src":"4963:27:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2352,"name":"uint256","nodeType":"ElementaryTypeName","src":"4963:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4962:29:10"},"returnParameters":{"id":2355,"nodeType":"ParameterList","parameters":[],"src":"5009:0:10"},"scope":2401,"src":"4942:340:10","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"documentation":{"id":2379,"nodeType":"StructuredDocumentation","src":"5288:302:10","text":" @dev Initialize the Smart Account with required states\n @param _owner Signatory of the Smart Account\n @param _handler Default fallback handler provided in Smart Account\n @notice devs need to make sure it is only callble once by initiazer or state check restrictions"},"functionSelector":"f09a4016","id":2386,"implemented":false,"kind":"function","modifiers":[],"name":"init","nameLocation":"5604:4:10","nodeType":"FunctionDefinition","parameters":{"id":2384,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2381,"mutability":"mutable","name":"_owner","nameLocation":"5617:6:10","nodeType":"VariableDeclaration","scope":2386,"src":"5609:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2380,"name":"address","nodeType":"ElementaryTypeName","src":"5609:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2383,"mutability":"mutable","name":"_handler","nameLocation":"5633:8:10","nodeType":"VariableDeclaration","scope":2386,"src":"5625:16:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2382,"name":"address","nodeType":"ElementaryTypeName","src":"5625:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5608:34:10"},"returnParameters":{"id":2385,"nodeType":"ParameterList","parameters":[],"src":"5659:0:10"},"scope":2401,"src":"5595:65:10","stateMutability":"nonpayable","virtual":true,"visibility":"external"},{"documentation":{"id":2387,"nodeType":"StructuredDocumentation","src":"5666:503:10","text":" @dev Gnosis style transaction with optional repay in native tokens OR ERC20\n @dev Allows to execute a transaction confirmed by required signature/s and then pays the account that submitted the transaction.\n @notice The fees are always transferred, even if the user transaction fails.\n @param _tx Smart Account transaction\n @param refundInfo Required information for gas refunds\n @param signatures Packed signature/s data ({bytes32 r}{bytes32 s}{uint8 v})"},"functionSelector":"fc7d3d79","id":2400,"implemented":false,"kind":"function","modifiers":[],"name":"execTransaction","nameLocation":"6183:15:10","nodeType":"FunctionDefinition","parameters":{"id":2396,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2390,"mutability":"mutable","name":"_tx","nameLocation":"6227:3:10","nodeType":"VariableDeclaration","scope":2400,"src":"6208:22:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Transaction_$2240_memory_ptr","typeString":"struct Transaction"},"typeName":{"id":2389,"nodeType":"UserDefinedTypeName","pathNode":{"id":2388,"name":"Transaction","nameLocations":["6208:11:10"],"nodeType":"IdentifierPath","referencedDeclaration":2240,"src":"6208:11:10"},"referencedDeclaration":2240,"src":"6208:11:10","typeDescriptions":{"typeIdentifier":"t_struct$_Transaction_$2240_storage_ptr","typeString":"struct Transaction"}},"visibility":"internal"},{"constant":false,"id":2393,"mutability":"mutable","name":"refundInfo","nameLocation":"6257:10:10","nodeType":"VariableDeclaration","scope":2400,"src":"6240:27:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_FeeRefund_$2251_memory_ptr","typeString":"struct FeeRefund"},"typeName":{"id":2392,"nodeType":"UserDefinedTypeName","pathNode":{"id":2391,"name":"FeeRefund","nameLocations":["6240:9:10"],"nodeType":"IdentifierPath","referencedDeclaration":2251,"src":"6240:9:10"},"referencedDeclaration":2251,"src":"6240:9:10","typeDescriptions":{"typeIdentifier":"t_struct$_FeeRefund_$2251_storage_ptr","typeString":"struct FeeRefund"}},"visibility":"internal"},{"constant":false,"id":2395,"mutability":"mutable","name":"signatures","nameLocation":"6290:10:10","nodeType":"VariableDeclaration","scope":2400,"src":"6277:23:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2394,"name":"bytes","nodeType":"ElementaryTypeName","src":"6277:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6198:108:10"},"returnParameters":{"id":2399,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2398,"mutability":"mutable","name":"success","nameLocation":"6346:7:10","nodeType":"VariableDeclaration","scope":2400,"src":"6341:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2397,"name":"bool","nodeType":"ElementaryTypeName","src":"6341:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"6340:14:10"},"scope":2401,"src":"6174:181:10","stateMutability":"payable","virtual":true,"visibility":"external"}],"scope":2402,"src":"1173:5184:10","usedErrors":[4938]}],"src":"36:6322:10"}},"contracts/smart-contract-wallet/Proxy.sol":{"id":11,"ast":{"absolutePath":"contracts/smart-contract-wallet/Proxy.sol","exportedSymbols":{"Proxy":[2430]},"id":2431,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2403,"literals":["solidity","0.8",".17"],"nodeType":"PragmaDirective","src":"32:23:11"},{"abstract":false,"baseContracts":[],"canonicalName":"Proxy","contractDependencies":[],"contractKind":"contract","documentation":{"id":2404,"nodeType":"StructuredDocumentation","src":"57:230:11","text":" @title Proxy // This is the user's Smart Account\n @notice Basic proxy that delegates all calls to a fixed implementation contract.\n @dev    Implementation address is stored in the slot defined by the Proxy's address"},"fullyImplemented":true,"id":2430,"linearizedBaseContracts":[2430],"name":"Proxy","nameLocation":"297:5:11","nodeType":"ContractDefinition","nodes":[{"body":{"id":2420,"nodeType":"Block","src":"346:255:11","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2415,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2410,"name":"_implementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2406,"src":"377:15:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":2413,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"404:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2412,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"396:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2411,"name":"address","nodeType":"ElementaryTypeName","src":"396:7:11","typeDescriptions":{}}},"id":2414,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"396:10:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"377:29:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c696420696d706c656d656e746174696f6e2061646472657373","id":2416,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"420:32:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_56c576bfe782a98762c6cc81b88da704005435064fec1a2f65979b66b2c5a324","typeString":"literal_string \"Invalid implementation address\""},"value":"Invalid implementation address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_56c576bfe782a98762c6cc81b88da704005435064fec1a2f65979b66b2c5a324","typeString":"literal_string \"Invalid implementation address\""}],"id":2409,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"356:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2417,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"356:106:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2418,"nodeType":"ExpressionStatement","src":"356:106:11"},{"AST":{"nodeType":"YulBlock","src":"537:58:11","statements":[{"expression":{"arguments":[{"arguments":[],"functionName":{"name":"address","nodeType":"YulIdentifier","src":"558:7:11"},"nodeType":"YulFunctionCall","src":"558:9:11"},{"name":"_implementation","nodeType":"YulIdentifier","src":"569:15:11"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"551:6:11"},"nodeType":"YulFunctionCall","src":"551:34:11"},"nodeType":"YulExpressionStatement","src":"551:34:11"}]},"evmVersion":"london","externalReferences":[{"declaration":2406,"isOffset":false,"isSlot":false,"src":"569:15:11","valueSize":1}],"id":2419,"nodeType":"InlineAssembly","src":"528:67:11"}]},"id":2421,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":2407,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2406,"mutability":"mutable","name":"_implementation","nameLocation":"329:15:11","nodeType":"VariableDeclaration","scope":2421,"src":"321:23:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2405,"name":"address","nodeType":"ElementaryTypeName","src":"321:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"320:25:11"},"returnParameters":{"id":2408,"nodeType":"ParameterList","parameters":[],"src":"346:0:11"},"scope":2430,"src":"309:292:11","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":2428,"nodeType":"Block","src":"635:517:11","statements":[{"assignments":[2425],"declarations":[{"constant":false,"id":2425,"mutability":"mutable","name":"target","nameLocation":"653:6:11","nodeType":"VariableDeclaration","scope":2428,"src":"645:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2424,"name":"address","nodeType":"ElementaryTypeName","src":"645:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":2426,"nodeType":"VariableDeclarationStatement","src":"645:14:11"},{"AST":{"nodeType":"YulBlock","src":"734:412:11","statements":[{"nodeType":"YulAssignment","src":"748:26:11","value":{"arguments":[{"arguments":[],"functionName":{"name":"address","nodeType":"YulIdentifier","src":"764:7:11"},"nodeType":"YulFunctionCall","src":"764:9:11"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"758:5:11"},"nodeType":"YulFunctionCall","src":"758:16:11"},"variableNames":[{"name":"target","nodeType":"YulIdentifier","src":"748:6:11"}]},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"800:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"803:1:11","type":"","value":"0"},{"arguments":[],"functionName":{"name":"calldatasize","nodeType":"YulIdentifier","src":"806:12:11"},"nodeType":"YulFunctionCall","src":"806:14:11"}],"functionName":{"name":"calldatacopy","nodeType":"YulIdentifier","src":"787:12:11"},"nodeType":"YulFunctionCall","src":"787:34:11"},"nodeType":"YulExpressionStatement","src":"787:34:11"},{"nodeType":"YulVariableDeclaration","src":"834:66:11","value":{"arguments":[{"arguments":[],"functionName":{"name":"gas","nodeType":"YulIdentifier","src":"861:3:11"},"nodeType":"YulFunctionCall","src":"861:5:11"},{"name":"target","nodeType":"YulIdentifier","src":"868:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"876:1:11","type":"","value":"0"},{"arguments":[],"functionName":{"name":"calldatasize","nodeType":"YulIdentifier","src":"879:12:11"},"nodeType":"YulFunctionCall","src":"879:14:11"},{"kind":"number","nodeType":"YulLiteral","src":"895:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"898:1:11","type":"","value":"0"}],"functionName":{"name":"delegatecall","nodeType":"YulIdentifier","src":"848:12:11"},"nodeType":"YulFunctionCall","src":"848:52:11"},"variables":[{"name":"result","nodeType":"YulTypedName","src":"838:6:11","type":""}]},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"928:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"931:1:11","type":"","value":"0"},{"arguments":[],"functionName":{"name":"returndatasize","nodeType":"YulIdentifier","src":"934:14:11"},"nodeType":"YulFunctionCall","src":"934:16:11"}],"functionName":{"name":"returndatacopy","nodeType":"YulIdentifier","src":"913:14:11"},"nodeType":"YulFunctionCall","src":"913:38:11"},"nodeType":"YulExpressionStatement","src":"913:38:11"},{"cases":[{"body":{"nodeType":"YulBlock","src":"997:59:11","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1022:1:11","type":"","value":"0"},{"arguments":[],"functionName":{"name":"returndatasize","nodeType":"YulIdentifier","src":"1025:14:11"},"nodeType":"YulFunctionCall","src":"1025:16:11"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1015:6:11"},"nodeType":"YulFunctionCall","src":"1015:27:11"},"nodeType":"YulExpressionStatement","src":"1015:27:11"}]},"nodeType":"YulCase","src":"990:66:11","value":{"kind":"number","nodeType":"YulLiteral","src":"995:1:11","type":"","value":"0"}},{"body":{"nodeType":"YulBlock","src":"1077:59:11","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1102:1:11","type":"","value":"0"},{"arguments":[],"functionName":{"name":"returndatasize","nodeType":"YulIdentifier","src":"1105:14:11"},"nodeType":"YulFunctionCall","src":"1105:16:11"}],"functionName":{"name":"return","nodeType":"YulIdentifier","src":"1095:6:11"},"nodeType":"YulFunctionCall","src":"1095:27:11"},"nodeType":"YulExpressionStatement","src":"1095:27:11"}]},"nodeType":"YulCase","src":"1069:67:11","value":"default"}],"expression":{"name":"result","nodeType":"YulIdentifier","src":"971:6:11"},"nodeType":"YulSwitch","src":"964:172:11"}]},"evmVersion":"london","externalReferences":[{"declaration":2425,"isOffset":false,"isSlot":false,"src":"748:6:11","valueSize":1},{"declaration":2425,"isOffset":false,"isSlot":false,"src":"868:6:11","valueSize":1}],"id":2427,"nodeType":"InlineAssembly","src":"725:421:11"}]},"id":2429,"implemented":true,"kind":"fallback","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":2422,"nodeType":"ParameterList","parameters":[],"src":"615:2:11"},"returnParameters":{"id":2423,"nodeType":"ParameterList","parameters":[],"src":"635:0:11"},"scope":2430,"src":"607:545:11","stateMutability":"payable","virtual":false,"visibility":"external"}],"scope":2431,"src":"288:866:11","usedErrors":[]}],"src":"32:1123:11"}},"contracts/smart-contract-wallet/SmartAccount.sol":{"id":12,"ast":{"absolutePath":"contracts/smart-contract-wallet/SmartAccount.sol","exportedSymbols":{"BaseSmartAccount":[2401],"ECDSA":[1349],"Enum":[4931],"FallbackManager":[4517],"FeeRefund":[2251],"IERC165":[5470],"IEntryPoint":[492],"IModule":[5522],"ISignatureValidator":[5541],"LibAddress":[5561],"Math":[6427],"ModuleManager":[4924],"ReentrancyGuard":[5179],"SecuredTokenTransfer":[5225],"SignatureDecoder":[5275],"SmartAccount":[4046],"SmartAccountErrors":[5053],"Transaction":[2240],"UserOperation":[643]},"id":4047,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2432,"literals":["solidity","0.8",".17"],"nodeType":"PragmaDirective","src":"32:23:12"},{"absolutePath":"contracts/smart-contract-wallet/BaseSmartAccount.sol","file":"./BaseSmartAccount.sol","id":2439,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4047,"sourceUnit":2402,"src":"57:114:12","symbolAliases":[{"foreign":{"id":2433,"name":"BaseSmartAccount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2401,"src":"65:16:12","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":2434,"name":"IEntryPoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":492,"src":"83:11:12","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":2435,"name":"Transaction","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2240,"src":"96:11:12","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":2436,"name":"FeeRefund","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2251,"src":"109:9:12","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":2437,"name":"Enum","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4931,"src":"120:4:12","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":2438,"name":"UserOperation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":643,"src":"126:13:12","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"contracts/smart-contract-wallet/base/ModuleManager.sol","file":"./base/ModuleManager.sol","id":2441,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4047,"sourceUnit":4925,"src":"172:55:12","symbolAliases":[{"foreign":{"id":2440,"name":"ModuleManager","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4924,"src":"180:13:12","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"contracts/smart-contract-wallet/base/FallbackManager.sol","file":"./base/FallbackManager.sol","id":2443,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4047,"sourceUnit":4518,"src":"228:59:12","symbolAliases":[{"foreign":{"id":2442,"name":"FallbackManager","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4517,"src":"236:15:12","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"contracts/smart-contract-wallet/common/SignatureDecoder.sol","file":"./common/SignatureDecoder.sol","id":2445,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4047,"sourceUnit":5276,"src":"288:63:12","symbolAliases":[{"foreign":{"id":2444,"name":"SignatureDecoder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5275,"src":"296:16:12","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"contracts/smart-contract-wallet/common/SecuredTokenTransfer.sol","file":"./common/SecuredTokenTransfer.sol","id":2447,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4047,"sourceUnit":5226,"src":"352:71:12","symbolAliases":[{"foreign":{"id":2446,"name":"SecuredTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5225,"src":"360:20:12","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"contracts/smart-contract-wallet/libs/LibAddress.sol","file":"./libs/LibAddress.sol","id":2449,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4047,"sourceUnit":5562,"src":"424:49:12","symbolAliases":[{"foreign":{"id":2448,"name":"LibAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5561,"src":"432:10:12","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"contracts/smart-contract-wallet/interfaces/ISignatureValidator.sol","file":"./interfaces/ISignatureValidator.sol","id":2451,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4047,"sourceUnit":5542,"src":"474:73:12","symbolAliases":[{"foreign":{"id":2450,"name":"ISignatureValidator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5541,"src":"482:19:12","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"contracts/smart-contract-wallet/libs/Math.sol","file":"./libs/Math.sol","id":2453,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4047,"sourceUnit":6428,"src":"548:37:12","symbolAliases":[{"foreign":{"id":2452,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6427,"src":"556:4:12","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"contracts/smart-contract-wallet/interfaces/IERC165.sol","file":"./interfaces/IERC165.sol","id":2455,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4047,"sourceUnit":5471,"src":"586:49:12","symbolAliases":[{"foreign":{"id":2454,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5470,"src":"594:7:12","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"contracts/smart-contract-wallet/common/ReentrancyGuard.sol","file":"./common/ReentrancyGuard.sol","id":2457,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4047,"sourceUnit":5180,"src":"636:61:12","symbolAliases":[{"foreign":{"id":2456,"name":"ReentrancyGuard","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5179,"src":"644:15:12","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"contracts/smart-contract-wallet/common/Errors.sol","file":"./common/Errors.sol","id":2459,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4047,"sourceUnit":5129,"src":"698:55:12","symbolAliases":[{"foreign":{"id":2458,"name":"SmartAccountErrors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5053,"src":"706:18:12","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/cryptography/ECDSA.sol","file":"@openzeppelin/contracts/utils/cryptography/ECDSA.sol","id":2461,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4047,"sourceUnit":1350,"src":"754:75:12","symbolAliases":[{"foreign":{"id":2460,"name":"ECDSA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1349,"src":"762:5:12","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"contracts/smart-contract-wallet/interfaces/IModule.sol","file":"./interfaces/IModule.sol","id":2463,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4047,"sourceUnit":5523,"src":"830:49:12","symbolAliases":[{"foreign":{"id":2462,"name":"IModule","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5522,"src":"838:7:12","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":2465,"name":"BaseSmartAccount","nameLocations":["1442:16:12"],"nodeType":"IdentifierPath","referencedDeclaration":2401,"src":"1442:16:12"},"id":2466,"nodeType":"InheritanceSpecifier","src":"1442:16:12"},{"baseName":{"id":2467,"name":"ModuleManager","nameLocations":["1464:13:12"],"nodeType":"IdentifierPath","referencedDeclaration":4924,"src":"1464:13:12"},"id":2468,"nodeType":"InheritanceSpecifier","src":"1464:13:12"},{"baseName":{"id":2469,"name":"FallbackManager","nameLocations":["1483:15:12"],"nodeType":"IdentifierPath","referencedDeclaration":4517,"src":"1483:15:12"},"id":2470,"nodeType":"InheritanceSpecifier","src":"1483:15:12"},{"baseName":{"id":2471,"name":"SignatureDecoder","nameLocations":["1504:16:12"],"nodeType":"IdentifierPath","referencedDeclaration":5275,"src":"1504:16:12"},"id":2472,"nodeType":"InheritanceSpecifier","src":"1504:16:12"},{"baseName":{"id":2473,"name":"SecuredTokenTransfer","nameLocations":["1526:20:12"],"nodeType":"IdentifierPath","referencedDeclaration":5225,"src":"1526:20:12"},"id":2474,"nodeType":"InheritanceSpecifier","src":"1526:20:12"},{"baseName":{"id":2475,"name":"IERC165","nameLocations":["1552:7:12"],"nodeType":"IdentifierPath","referencedDeclaration":5470,"src":"1552:7:12"},"id":2476,"nodeType":"InheritanceSpecifier","src":"1552:7:12"},{"baseName":{"id":2477,"name":"ReentrancyGuard","nameLocations":["1565:15:12"],"nodeType":"IdentifierPath","referencedDeclaration":5179,"src":"1565:15:12"},"id":2478,"nodeType":"InheritanceSpecifier","src":"1565:15:12"},{"baseName":{"id":2479,"name":"SmartAccountErrors","nameLocations":["1586:18:12"],"nodeType":"IdentifierPath","referencedDeclaration":5053,"src":"1586:18:12"},"id":2480,"nodeType":"InheritanceSpecifier","src":"1586:18:12"},{"baseName":{"id":2481,"name":"ISignatureValidator","nameLocations":["1610:19:12"],"nodeType":"IdentifierPath","referencedDeclaration":5541,"src":"1610:19:12"},"id":2482,"nodeType":"InheritanceSpecifier","src":"1610:19:12"}],"canonicalName":"SmartAccount","contractDependencies":[],"contractKind":"contract","documentation":{"id":2464,"nodeType":"StructuredDocumentation","src":"881:531:12","text":" @title SmartAccount - EIP-4337 compatible smart contract wallet.\n @dev This contract is the base for the Smart Account functionality.\n         - It provides the functionality to execute both gnosis-style txns and AA (EIP-4337) userOps\n         - It allows to receive and manage assets.\n         - It is responsible for managing the modules and fallbacks.\n         - The Smart Account can be extended with modules, such as Social Recovery, Session Key and others.\n @author Chirag Titiya - <chirag@biconomy.io>"},"fullyImplemented":true,"id":4046,"linearizedBaseContracts":[4046,5541,5528,5053,5179,5470,5225,5275,4517,4943,4924,5094,4433,5257,5100,2401,4939,254],"name":"SmartAccount","nameLocation":"1422:12:12","nodeType":"ContractDefinition","nodes":[{"global":false,"id":2485,"libraryName":{"id":2483,"name":"ECDSA","nameLocations":["1642:5:12"],"nodeType":"IdentifierPath","referencedDeclaration":1349,"src":"1642:5:12"},"nodeType":"UsingForDirective","src":"1636:24:12","typeName":{"id":2484,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1652:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}},{"global":false,"id":2488,"libraryName":{"id":2486,"name":"LibAddress","nameLocations":["1671:10:12"],"nodeType":"IdentifierPath","referencedDeclaration":5561,"src":"1671:10:12"},"nodeType":"UsingForDirective","src":"1665:29:12","typeName":{"id":2487,"name":"address","nodeType":"ElementaryTypeName","src":"1686:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}},{"constant":true,"functionSelector":"ffa1ad74","id":2491,"mutability":"constant","name":"VERSION","nameLocation":"1746:7:12","nodeType":"VariableDeclaration","scope":4046,"src":"1723:40:12","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2489,"name":"string","nodeType":"ElementaryTypeName","src":"1723:6:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":{"hexValue":"312e302e30","id":2490,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1756:7:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_06c015bd22b4c69690933c1058878ebdfef31f9aaae40bbe86d8a09fe1b2972c","typeString":"literal_string \"1.0.0\""},"value":"1.0.0"},"visibility":"public"},{"constant":true,"id":2494,"mutability":"constant","name":"DOMAIN_SEPARATOR_TYPEHASH","nameLocation":"1891:25:12","nodeType":"VariableDeclaration","scope":4046,"src":"1865:128:12","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2492,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1865:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307834376537393533346132343539353265386231363839336133333662383561336439656139666138633537336633643830336166623932613739343639323138","id":2493,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1927:66:12","typeDescriptions":{"typeIdentifier":"t_rational_32523383700587834770323112271211932718128200013265661849047136999858837557784_by_1","typeString":"int_const 3252...(69 digits omitted)...7784"},"value":"0x47e79534a245952e8b16893a336b85a3d9ea9fa8c573f3d803afb92a79469218"},"visibility":"internal"},{"constant":true,"id":2497,"mutability":"constant","name":"ACCOUNT_TX_TYPEHASH","nameLocation":"2265:19:12","nodeType":"VariableDeclaration","scope":4046,"src":"2239:122:12","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2495,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2239:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307864613033333836356436386266346134306135613763623431353961393965333364626138353639653635656133653338323232656231326439653636656565","id":2496,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2295:66:12","typeDescriptions":{"typeIdentifier":"t_rational_98609890775690846295179632313079576720839208702062333951265743176704448687854_by_1","typeString":"int_const 9860...(69 digits omitted)...7854"},"value":"0xda033865d68bf4a40a5a7cb4159a99e33dba8569e65ea3e38222eb12d9e66eee"},"visibility":"internal"},{"constant":false,"functionSelector":"8da5cb5b","id":2499,"mutability":"mutable","name":"owner","nameLocation":"2404:5:12","nodeType":"VariableDeclaration","scope":4046,"src":"2389:20:12","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2498,"name":"address","nodeType":"ElementaryTypeName","src":"2389:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"constant":false,"functionSelector":"141a468c","id":2503,"mutability":"mutable","name":"nonces","nameLocation":"2518:6:12","nodeType":"VariableDeclaration","scope":4046,"src":"2483:41:12","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"},"typeName":{"id":2502,"keyType":{"id":2500,"name":"uint256","nodeType":"ElementaryTypeName","src":"2491:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"2483:27:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"},"valueType":{"id":2501,"name":"uint256","nodeType":"ElementaryTypeName","src":"2502:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"public"},{"constant":false,"id":2506,"mutability":"immutable","name":"_entryPoint","nameLocation":"2589:11:12","nodeType":"VariableDeclaration","scope":4046,"src":"2559:41:12","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IEntryPoint_$492","typeString":"contract IEntryPoint"},"typeName":{"id":2505,"nodeType":"UserDefinedTypeName","pathNode":{"id":2504,"name":"IEntryPoint","nameLocations":["2559:11:12"],"nodeType":"IdentifierPath","referencedDeclaration":492,"src":"2559:11:12"},"referencedDeclaration":492,"src":"2559:11:12","typeDescriptions":{"typeIdentifier":"t_contract$_IEntryPoint_$492","typeString":"contract IEntryPoint"}},"visibility":"private"},{"constant":false,"id":2508,"mutability":"immutable","name":"_chainId","nameLocation":"2632:8:12","nodeType":"VariableDeclaration","scope":4046,"src":"2606:34:12","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2507,"name":"uint256","nodeType":"ElementaryTypeName","src":"2606:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"constant":false,"id":2510,"mutability":"immutable","name":"_self","nameLocation":"2672:5:12","nodeType":"VariableDeclaration","scope":4046,"src":"2646:31:12","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2509,"name":"address","nodeType":"ElementaryTypeName","src":"2646:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"anonymous":false,"eventSelector":"aa3f731066a578e5f39b4215468d826cdd15373cbc0dfc9cb9bdc649718ef7da","id":2516,"name":"ImplementationUpdated","nameLocation":"2705:21:12","nodeType":"EventDefinition","parameters":{"id":2515,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2512,"indexed":true,"mutability":"mutable","name":"oldImplementation","nameLocation":"2752:17:12","nodeType":"VariableDeclaration","scope":2516,"src":"2736:33:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2511,"name":"address","nodeType":"ElementaryTypeName","src":"2736:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2514,"indexed":true,"mutability":"mutable","name":"newImplementation","nameLocation":"2795:17:12","nodeType":"VariableDeclaration","scope":2516,"src":"2779:33:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2513,"name":"address","nodeType":"ElementaryTypeName","src":"2779:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2726:92:12"},"src":"2699:120:12"},{"anonymous":false,"eventSelector":"f2c2b1b5312b1e31ad49a7d85acd6322ae6facc51488810b882ecdb4df861cd4","id":2524,"name":"EOAChanged","nameLocation":"2830:10:12","nodeType":"EventDefinition","parameters":{"id":2523,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2518,"indexed":true,"mutability":"mutable","name":"_scw","nameLocation":"2866:4:12","nodeType":"VariableDeclaration","scope":2524,"src":"2850:20:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2517,"name":"address","nodeType":"ElementaryTypeName","src":"2850:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2520,"indexed":true,"mutability":"mutable","name":"_oldEOA","nameLocation":"2896:7:12","nodeType":"VariableDeclaration","scope":2524,"src":"2880:23:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2519,"name":"address","nodeType":"ElementaryTypeName","src":"2880:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2522,"indexed":true,"mutability":"mutable","name":"_newEOA","nameLocation":"2929:7:12","nodeType":"VariableDeclaration","scope":2524,"src":"2913:23:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2521,"name":"address","nodeType":"ElementaryTypeName","src":"2913:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2840:102:12"},"src":"2824:119:12"},{"anonymous":false,"eventSelector":"3fd74c38c9f1b6f0499c6d0128fbf77a796dbacc7eda0369b13006dc977bb56b","id":2530,"name":"AccountHandlePayment","nameLocation":"2954:20:12","nodeType":"EventDefinition","parameters":{"id":2529,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2526,"indexed":true,"mutability":"mutable","name":"txHash","nameLocation":"2991:6:12","nodeType":"VariableDeclaration","scope":2530,"src":"2975:22:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2525,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2975:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2528,"indexed":true,"mutability":"mutable","name":"payment","nameLocation":"3015:7:12","nodeType":"VariableDeclaration","scope":2530,"src":"2999:23:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2527,"name":"uint256","nodeType":"ElementaryTypeName","src":"2999:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2974:49:12"},"src":"2948:76:12"},{"anonymous":false,"eventSelector":"00d05ab44e279ac59e855cb75dc2ae23b200ad994797b6f1f028f96a46ecce02","id":2536,"name":"SmartAccountReceivedNativeToken","nameLocation":"3035:31:12","nodeType":"EventDefinition","parameters":{"id":2535,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2532,"indexed":true,"mutability":"mutable","name":"sender","nameLocation":"3092:6:12","nodeType":"VariableDeclaration","scope":2536,"src":"3076:22:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2531,"name":"address","nodeType":"ElementaryTypeName","src":"3076:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2534,"indexed":true,"mutability":"mutable","name":"value","nameLocation":"3124:5:12","nodeType":"VariableDeclaration","scope":2536,"src":"3108:21:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2533,"name":"uint256","nodeType":"ElementaryTypeName","src":"3108:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3066:69:12"},"src":"3029:107:12"},{"body":{"id":2579,"nodeType":"Block","src":"3354:472:12","statements":[{"expression":{"id":2548,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2543,"name":"_self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2510,"src":"3364:5:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":2546,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"3380:4:12","typeDescriptions":{"typeIdentifier":"t_contract$_SmartAccount_$4046","typeString":"contract SmartAccount"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_SmartAccount_$4046","typeString":"contract SmartAccount"}],"id":2545,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3372:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2544,"name":"address","nodeType":"ElementaryTypeName","src":"3372:7:12","typeDescriptions":{}}},"id":2547,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3372:13:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3364:21:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2549,"nodeType":"ExpressionStatement","src":"3364:21:12"},{"expression":{"id":2555,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2550,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2499,"src":"3596:5:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"hexValue":"307845656565654565656545654565654565456545656545454565656565456565656565656545456545","id":2553,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3612:42:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"value":"0xEeeeeEeeeEeEeeEeEeEeeEEEeeeeEeeeeeeeEEeE"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2552,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3604:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2551,"name":"address","nodeType":"ElementaryTypeName","src":"3604:7:12","typeDescriptions":{}}},"id":2554,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3604:51:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3596:59:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2556,"nodeType":"ExpressionStatement","src":"3596:59:12"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2565,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2559,"name":"anEntryPoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2540,"src":"3677:12:12","typeDescriptions":{"typeIdentifier":"t_contract$_IEntryPoint_$492","typeString":"contract IEntryPoint"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IEntryPoint_$492","typeString":"contract IEntryPoint"}],"id":2558,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3669:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2557,"name":"address","nodeType":"ElementaryTypeName","src":"3669:7:12","typeDescriptions":{}}},"id":2560,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3669:21:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":2563,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3702:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2562,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3694:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2561,"name":"address","nodeType":"ElementaryTypeName","src":"3694:7:12","typeDescriptions":{}}},"id":2564,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3694:10:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3669:35:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2569,"nodeType":"IfStatement","src":"3665:84:12","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":2566,"name":"EntryPointCannotBeZero","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4948,"src":"3725:22:12","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":2567,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3725:24:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2568,"nodeType":"RevertStatement","src":"3718:31:12"}},{"expression":{"id":2572,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2570,"name":"_entryPoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2506,"src":"3759:11:12","typeDescriptions":{"typeIdentifier":"t_contract$_IEntryPoint_$492","typeString":"contract IEntryPoint"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2571,"name":"anEntryPoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2540,"src":"3773:12:12","typeDescriptions":{"typeIdentifier":"t_contract$_IEntryPoint_$492","typeString":"contract IEntryPoint"}},"src":"3759:26:12","typeDescriptions":{"typeIdentifier":"t_contract$_IEntryPoint_$492","typeString":"contract IEntryPoint"}},"id":2573,"nodeType":"ExpressionStatement","src":"3759:26:12"},{"expression":{"id":2577,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2574,"name":"_chainId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2508,"src":"3795:8:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":2575,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"3806:5:12","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":2576,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3812:7:12","memberName":"chainid","nodeType":"MemberAccess","src":"3806:13:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3795:24:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2578,"nodeType":"ExpressionStatement","src":"3795:24:12"}]},"documentation":{"id":2537,"nodeType":"StructuredDocumentation","src":"3142:169:12","text":" @dev Constructor that sets the owner of the contract and the entry point contract.\n @param anEntryPoint The address of the entry point contract."},"id":2580,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":2541,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2540,"mutability":"mutable","name":"anEntryPoint","nameLocation":"3340:12:12","nodeType":"VariableDeclaration","scope":2580,"src":"3328:24:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IEntryPoint_$492","typeString":"contract IEntryPoint"},"typeName":{"id":2539,"nodeType":"UserDefinedTypeName","pathNode":{"id":2538,"name":"IEntryPoint","nameLocations":["3328:11:12"],"nodeType":"IdentifierPath","referencedDeclaration":492,"src":"3328:11:12"},"referencedDeclaration":492,"src":"3328:11:12","typeDescriptions":{"typeIdentifier":"t_contract$_IEntryPoint_$492","typeString":"contract IEntryPoint"}},"visibility":"internal"}],"src":"3327:26:12"},"returnParameters":{"id":2542,"nodeType":"ParameterList","parameters":[],"src":"3354:0:12"},"scope":4046,"src":"3316:510:12","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":2594,"nodeType":"Block","src":"4023:88:12","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2586,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2583,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4037:3:12","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2584,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4041:6:12","memberName":"sender","nodeType":"MemberAccess","src":"4037:10:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":2585,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2499,"src":"4051:5:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4037:19:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2592,"nodeType":"IfStatement","src":"4033:60:12","trueBody":{"errorCall":{"arguments":[{"expression":{"id":2588,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4082:3:12","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2589,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4086:6:12","memberName":"sender","nodeType":"MemberAccess","src":"4082:10:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2587,"name":"CallerIsNotOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4978,"src":"4065:16:12","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":2590,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4065:28:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2591,"nodeType":"RevertStatement","src":"4058:35:12"}},{"id":2593,"nodeType":"PlaceholderStatement","src":"4103:1:12"}]},"documentation":{"id":2581,"nodeType":"StructuredDocumentation","src":"3850:147:12","text":" @dev Modifier to allow only the owner to call the function.\n Reverts with CallerIsNotOwner if the caller is not the owner."},"id":2595,"name":"onlyOwner","nameLocation":"4011:9:12","nodeType":"ModifierDefinition","parameters":{"id":2582,"nodeType":"ParameterList","parameters":[],"src":"4020:2:12"},"src":"4002:109:12","virtual":false,"visibility":"internal"},{"body":{"id":2617,"nodeType":"Block","src":"4332:128:12","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2609,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2601,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2598,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4346:3:12","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2599,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4350:6:12","memberName":"sender","nodeType":"MemberAccess","src":"4346:10:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":2600,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2499,"src":"4360:5:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4346:19:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2608,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2602,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4369:3:12","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2603,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4373:6:12","memberName":"sender","nodeType":"MemberAccess","src":"4369:10:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"id":2606,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"4391:4:12","typeDescriptions":{"typeIdentifier":"t_contract$_SmartAccount_$4046","typeString":"contract SmartAccount"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_SmartAccount_$4046","typeString":"contract SmartAccount"}],"id":2605,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4383:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2604,"name":"address","nodeType":"ElementaryTypeName","src":"4383:7:12","typeDescriptions":{}}},"id":2607,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4383:13:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4369:27:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4346:50:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2615,"nodeType":"IfStatement","src":"4342:100:12","trueBody":{"errorCall":{"arguments":[{"expression":{"id":2611,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4431:3:12","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2612,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4435:6:12","memberName":"sender","nodeType":"MemberAccess","src":"4431:10:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2610,"name":"MixedAuthFail","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4953,"src":"4417:13:12","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":2613,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4417:25:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2614,"nodeType":"RevertStatement","src":"4410:32:12"}},{"id":2616,"nodeType":"PlaceholderStatement","src":"4452:1:12"}]},"documentation":{"id":2596,"nodeType":"StructuredDocumentation","src":"4116:190:12","text":" @dev Modifier to allow only the owner or the contract itself to call the function.\n Reverts with MixedAuthFail if the caller is not the owner or the contract itself."},"id":2618,"name":"mixedAuth","nameLocation":"4320:9:12","nodeType":"ModifierDefinition","parameters":{"id":2597,"nodeType":"ParameterList","parameters":[],"src":"4329:2:12"},"src":"4311:149:12","virtual":false,"visibility":"internal"},{"body":{"id":2641,"nodeType":"Block","src":"4813:140:12","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2634,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2629,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2622,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4827:3:12","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2623,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4831:6:12","memberName":"sender","nodeType":"MemberAccess","src":"4827:10:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":2626,"name":"entryPoint","nodeType":"Identifier","overloadedDeclarations":[2790],"referencedDeclaration":2790,"src":"4849:10:12","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_contract$_IEntryPoint_$492_$","typeString":"function () view returns (contract IEntryPoint)"}},"id":2627,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4849:12:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IEntryPoint_$492","typeString":"contract IEntryPoint"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IEntryPoint_$492","typeString":"contract IEntryPoint"}],"id":2625,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4841:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2624,"name":"address","nodeType":"ElementaryTypeName","src":"4841:7:12","typeDescriptions":{}}},"id":2628,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4841:21:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4827:35:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2633,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2630,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4866:3:12","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2631,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4870:6:12","memberName":"sender","nodeType":"MemberAccess","src":"4866:10:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":2632,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2499,"src":"4880:5:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4866:19:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4827:58:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2640,"nodeType":"IfStatement","src":"4823:123:12","trueBody":{"errorCall":{"arguments":[{"expression":{"id":2636,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4935:3:12","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2637,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4939:6:12","memberName":"sender","nodeType":"MemberAccess","src":"4935:10:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2635,"name":"CallerIsNotEntryPointOrOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4983,"src":"4906:28:12","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":2638,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4906:40:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2639,"nodeType":"RevertStatement","src":"4899:47:12"}}]},"documentation":{"id":2619,"nodeType":"StructuredDocumentation","src":"4466:287:12","text":" @dev This function allows the owner or entry point to execute certain actions.\n If the caller is not authorized, the function will revert with an error message.\n @notice This modifier is marked as internal and can only be called within the contract itself."},"id":2642,"implemented":true,"kind":"function","modifiers":[],"name":"_requireFromEntryPointOrOwner","nameLocation":"4767:29:12","nodeType":"FunctionDefinition","parameters":{"id":2620,"nodeType":"ParameterList","parameters":[],"src":"4796:2:12"},"returnParameters":{"id":2621,"nodeType":"ParameterList","parameters":[],"src":"4813:0:12"},"scope":4046,"src":"4758:195:12","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":2691,"nodeType":"Block","src":"5182:368:12","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2655,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2650,"name":"_newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2645,"src":"5196:9:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":2653,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5217:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2652,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5209:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2651,"name":"address","nodeType":"ElementaryTypeName","src":"5209:7:12","typeDescriptions":{}}},"id":2654,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5209:10:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5196:23:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2659,"nodeType":"IfStatement","src":"5192:55:12","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":2656,"name":"OwnerCannotBeZero","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4965,"src":"5228:17:12","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":2657,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5228:19:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2658,"nodeType":"RevertStatement","src":"5221:26:12"}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2665,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2660,"name":"_newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2645,"src":"5261:9:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"id":2663,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"5282:4:12","typeDescriptions":{"typeIdentifier":"t_contract$_SmartAccount_$4046","typeString":"contract SmartAccount"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_SmartAccount_$4046","typeString":"contract SmartAccount"}],"id":2662,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5274:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2661,"name":"address","nodeType":"ElementaryTypeName","src":"5274:7:12","typeDescriptions":{}}},"id":2664,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5274:13:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5261:26:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2669,"nodeType":"IfStatement","src":"5257:58:12","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":2666,"name":"OwnerCanNotBeSelf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5046,"src":"5296:17:12","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":2667,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5296:19:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2668,"nodeType":"RevertStatement","src":"5289:26:12"}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2672,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2670,"name":"_newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2645,"src":"5329:9:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":2671,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2499,"src":"5342:5:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5329:18:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2676,"nodeType":"IfStatement","src":"5325:52:12","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":2673,"name":"OwnerProvidedIsSame","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5049,"src":"5356:19:12","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":2674,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5356:21:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2675,"nodeType":"RevertStatement","src":"5349:28:12"}},{"assignments":[2678],"declarations":[{"constant":false,"id":2678,"mutability":"mutable","name":"oldOwner","nameLocation":"5395:8:12","nodeType":"VariableDeclaration","scope":2691,"src":"5387:16:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2677,"name":"address","nodeType":"ElementaryTypeName","src":"5387:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":2680,"initialValue":{"id":2679,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2499,"src":"5406:5:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"5387:24:12"},{"AST":{"nodeType":"YulBlock","src":"5430:53:12","statements":[{"expression":{"arguments":[{"name":"owner.slot","nodeType":"YulIdentifier","src":"5451:10:12"},{"name":"_newOwner","nodeType":"YulIdentifier","src":"5463:9:12"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"5444:6:12"},"nodeType":"YulFunctionCall","src":"5444:29:12"},"nodeType":"YulExpressionStatement","src":"5444:29:12"}]},"evmVersion":"london","externalReferences":[{"declaration":2645,"isOffset":false,"isSlot":false,"src":"5463:9:12","valueSize":1},{"declaration":2499,"isOffset":false,"isSlot":true,"src":"5451:10:12","suffix":"slot","valueSize":1}],"id":2681,"nodeType":"InlineAssembly","src":"5421:62:12"},{"eventCall":{"arguments":[{"arguments":[{"id":2685,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"5516:4:12","typeDescriptions":{"typeIdentifier":"t_contract$_SmartAccount_$4046","typeString":"contract SmartAccount"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_SmartAccount_$4046","typeString":"contract SmartAccount"}],"id":2684,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5508:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2683,"name":"address","nodeType":"ElementaryTypeName","src":"5508:7:12","typeDescriptions":{}}},"id":2686,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5508:13:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2687,"name":"oldOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2678,"src":"5523:8:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2688,"name":"_newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2645,"src":"5533:9:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":2682,"name":"EOAChanged","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2524,"src":"5497:10:12","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$returns$__$","typeString":"function (address,address,address)"}},"id":2689,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5497:46:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2690,"nodeType":"EmitStatement","src":"5492:51:12"}]},"documentation":{"id":2643,"nodeType":"StructuredDocumentation","src":"4959:164:12","text":" @dev Allows to change the owner of the smart account by current owner or self-call (modules)\n @param _newOwner Address of the new signatory"},"functionSelector":"13af4035","id":2692,"implemented":true,"kind":"function","modifiers":[{"id":2648,"kind":"modifierInvocation","modifierName":{"id":2647,"name":"mixedAuth","nameLocations":["5172:9:12"],"nodeType":"IdentifierPath","referencedDeclaration":2618,"src":"5172:9:12"},"nodeType":"ModifierInvocation","src":"5172:9:12"}],"name":"setOwner","nameLocation":"5137:8:12","nodeType":"FunctionDefinition","parameters":{"id":2646,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2645,"mutability":"mutable","name":"_newOwner","nameLocation":"5154:9:12","nodeType":"VariableDeclaration","scope":2692,"src":"5146:17:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2644,"name":"address","nodeType":"ElementaryTypeName","src":"5146:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5145:19:12"},"returnParameters":{"id":2649,"nodeType":"ParameterList","parameters":[],"src":"5182:0:12"},"scope":4046,"src":"5128:422:12","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":2728,"nodeType":"Block","src":"5849:472:12","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2706,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2701,"name":"_implementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2695,"src":"5867:15:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":2704,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5894:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2703,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5886:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2702,"name":"address","nodeType":"ElementaryTypeName","src":"5886:7:12","typeDescriptions":{}}},"id":2705,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5886:10:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5867:29:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573732063616e6e6f74206265207a65726f","id":2707,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5898:24:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_59b3ca4f4ff5f725ba59657612982eb6e881c63b17d02fcea1c44c9baadb095b","typeString":"literal_string \"Address cannot be zero\""},"value":"Address cannot be zero"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_59b3ca4f4ff5f725ba59657612982eb6e881c63b17d02fcea1c44c9baadb095b","typeString":"literal_string \"Address cannot be zero\""}],"id":2700,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5859:7:12","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2708,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5859:64:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2709,"nodeType":"ExpressionStatement","src":"5859:64:12"},{"condition":{"id":2713,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"5937:29:12","subExpression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":2710,"name":"_implementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2695,"src":"5938:15:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2711,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5954:10:12","memberName":"isContract","nodeType":"MemberAccess","referencedDeclaration":5560,"src":"5938:26:12","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$bound_to$_t_address_$","typeString":"function (address) view returns (bool)"}},"id":2712,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5938:28:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2718,"nodeType":"IfStatement","src":"5933:92:12","trueBody":{"errorCall":{"arguments":[{"id":2715,"name":"_implementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2695,"src":"6009:15:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2714,"name":"InvalidImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4973,"src":"5987:21:12","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":2716,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5987:38:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2717,"nodeType":"RevertStatement","src":"5980:45:12"}},{"assignments":[2720],"declarations":[{"constant":false,"id":2720,"mutability":"mutable","name":"oldImplementation","nameLocation":"6043:17:12","nodeType":"VariableDeclaration","scope":2728,"src":"6035:25:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2719,"name":"address","nodeType":"ElementaryTypeName","src":"6035:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":2721,"nodeType":"VariableDeclarationStatement","src":"6035:25:12"},{"AST":{"nodeType":"YulBlock","src":"6135:108:12","statements":[{"nodeType":"YulAssignment","src":"6149:37:12","value":{"arguments":[{"arguments":[],"functionName":{"name":"address","nodeType":"YulIdentifier","src":"6176:7:12"},"nodeType":"YulFunctionCall","src":"6176:9:12"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"6170:5:12"},"nodeType":"YulFunctionCall","src":"6170:16:12"},"variableNames":[{"name":"oldImplementation","nodeType":"YulIdentifier","src":"6149:17:12"}]},{"expression":{"arguments":[{"arguments":[],"functionName":{"name":"address","nodeType":"YulIdentifier","src":"6206:7:12"},"nodeType":"YulFunctionCall","src":"6206:9:12"},{"name":"_implementation","nodeType":"YulIdentifier","src":"6217:15:12"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"6199:6:12"},"nodeType":"YulFunctionCall","src":"6199:34:12"},"nodeType":"YulExpressionStatement","src":"6199:34:12"}]},"evmVersion":"london","externalReferences":[{"declaration":2695,"isOffset":false,"isSlot":false,"src":"6217:15:12","valueSize":1},{"declaration":2720,"isOffset":false,"isSlot":false,"src":"6149:17:12","valueSize":1}],"id":2722,"nodeType":"InlineAssembly","src":"6126:117:12"},{"eventCall":{"arguments":[{"id":2724,"name":"oldImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2720,"src":"6279:17:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2725,"name":"_implementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2695,"src":"6298:15:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":2723,"name":"ImplementationUpdated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2516,"src":"6257:21:12","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":2726,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6257:57:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2727,"nodeType":"EmitStatement","src":"6252:62:12"}]},"documentation":{"id":2693,"nodeType":"StructuredDocumentation","src":"5556:194:12","text":" @notice All the new implementations MUST have this method!\n @notice Updates the implementation of the base wallet\n @param _implementation New wallet implementation"},"functionSelector":"025b22bc","id":2729,"implemented":true,"kind":"function","modifiers":[{"id":2698,"kind":"modifierInvocation","modifierName":{"id":2697,"name":"mixedAuth","nameLocations":["5839:9:12"],"nodeType":"IdentifierPath","referencedDeclaration":2618,"src":"5839:9:12"},"nodeType":"ModifierInvocation","src":"5839:9:12"}],"name":"updateImplementation","nameLocation":"5764:20:12","nodeType":"FunctionDefinition","parameters":{"id":2696,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2695,"mutability":"mutable","name":"_implementation","nameLocation":"5802:15:12","nodeType":"VariableDeclaration","scope":2729,"src":"5794:23:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2694,"name":"address","nodeType":"ElementaryTypeName","src":"5794:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5784:39:12"},"returnParameters":{"id":2699,"nodeType":"ParameterList","parameters":[],"src":"5849:0:12"},"scope":4046,"src":"5755:566:12","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":2736,"nodeType":"Block","src":"6655:140:12","statements":[{"AST":{"nodeType":"YulBlock","src":"6730:59:12","statements":[{"nodeType":"YulAssignment","src":"6744:35:12","value":{"arguments":[{"arguments":[],"functionName":{"name":"address","nodeType":"YulIdentifier","src":"6769:7:12"},"nodeType":"YulFunctionCall","src":"6769:9:12"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"6763:5:12"},"nodeType":"YulFunctionCall","src":"6763:16:12"},"variableNames":[{"name":"_implementation","nodeType":"YulIdentifier","src":"6744:15:12"}]}]},"evmVersion":"london","externalReferences":[{"declaration":2733,"isOffset":false,"isSlot":false,"src":"6744:15:12","valueSize":1}],"id":2735,"nodeType":"InlineAssembly","src":"6721:68:12"}]},"documentation":{"id":2730,"nodeType":"StructuredDocumentation","src":"6343:202:12","text":" @dev Returns the address of the implementation contract associated with this contract.\n @notice The implementation address is stored in the contract's storage slot with index 0."},"functionSelector":"aaf10f42","id":2737,"implemented":true,"kind":"function","modifiers":[],"name":"getImplementation","nameLocation":"6559:17:12","nodeType":"FunctionDefinition","parameters":{"id":2731,"nodeType":"ParameterList","parameters":[],"src":"6576:2:12"},"returnParameters":{"id":2734,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2733,"mutability":"mutable","name":"_implementation","nameLocation":"6634:15:12","nodeType":"VariableDeclaration","scope":2737,"src":"6626:23:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2732,"name":"address","nodeType":"ElementaryTypeName","src":"6626:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6625:25:12"},"scope":4046,"src":"6550:245:12","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":2756,"nodeType":"Block","src":"7020:222:12","statements":[{"expression":{"arguments":[{"arguments":[{"id":2746,"name":"DOMAIN_SEPARATOR_TYPEHASH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2494,"src":"7108:25:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":2747,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"7155:5:12","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":2748,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7161:7:12","memberName":"chainid","nodeType":"MemberAccess","src":"7155:13:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":2751,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"7198:4:12","typeDescriptions":{"typeIdentifier":"t_contract$_SmartAccount_$4046","typeString":"contract SmartAccount"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_SmartAccount_$4046","typeString":"contract SmartAccount"}],"id":2750,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7190:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2749,"name":"address","nodeType":"ElementaryTypeName","src":"7190:7:12","typeDescriptions":{}}},"id":2752,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7190:13:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":2744,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"7076:3:12","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":2745,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7080:6:12","memberName":"encode","nodeType":"MemberAccess","src":"7076:10:12","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":2753,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7076:145:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2743,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"7049:9:12","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":2754,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7049:186:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":2742,"id":2755,"nodeType":"Return","src":"7030:205:12"}]},"documentation":{"id":2738,"nodeType":"StructuredDocumentation","src":"6801:157:12","text":" @dev Returns the domain separator for this contract, as defined in the EIP-712 standard.\n @return bytes32 The domain separator hash."},"functionSelector":"f698da25","id":2757,"implemented":true,"kind":"function","modifiers":[],"name":"domainSeparator","nameLocation":"6972:15:12","nodeType":"FunctionDefinition","parameters":{"id":2739,"nodeType":"ParameterList","parameters":[],"src":"6987:2:12"},"returnParameters":{"id":2742,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2741,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2757,"src":"7011:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2740,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7011:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"7010:9:12"},"scope":4046,"src":"6963:279:12","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":2765,"nodeType":"Block","src":"7464:32:12","statements":[{"expression":{"id":2763,"name":"_chainId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2508,"src":"7481:8:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2762,"id":2764,"nodeType":"Return","src":"7474:15:12"}]},"documentation":{"id":2758,"nodeType":"StructuredDocumentation","src":"7248:159:12","text":" @notice Returns the ID of the chain the contract is currently deployed on.\n @return _chainId The ID of the current chain as a uint256."},"functionSelector":"3408e470","id":2766,"implemented":true,"kind":"function","modifiers":[],"name":"getChainId","nameLocation":"7421:10:12","nodeType":"FunctionDefinition","parameters":{"id":2759,"nodeType":"ParameterList","parameters":[],"src":"7431:2:12"},"returnParameters":{"id":2762,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2761,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2766,"src":"7455:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2760,"name":"uint256","nodeType":"ElementaryTypeName","src":"7455:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7454:9:12"},"scope":4046,"src":"7412:84:12","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":2778,"nodeType":"Block","src":"7785:39:12","statements":[{"expression":{"baseExpression":{"id":2774,"name":"nonces","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2503,"src":"7802:6:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":2776,"indexExpression":{"id":2775,"name":"batchId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2769,"src":"7809:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7802:15:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2773,"id":2777,"nodeType":"Return","src":"7795:22:12"}]},"documentation":{"id":2767,"nodeType":"StructuredDocumentation","src":"7502:205:12","text":" @dev returns a value from the nonces 2d mapping\n @param batchId : the key of the user's batch being queried\n @return nonce : the number of transactions made within said batch"},"functionSelector":"3d46b819","id":2779,"implemented":true,"kind":"function","modifiers":[],"name":"getNonce","nameLocation":"7721:8:12","nodeType":"FunctionDefinition","parameters":{"id":2770,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2769,"mutability":"mutable","name":"batchId","nameLocation":"7738:7:12","nodeType":"VariableDeclaration","scope":2779,"src":"7730:15:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2768,"name":"uint256","nodeType":"ElementaryTypeName","src":"7730:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7729:17:12"},"returnParameters":{"id":2773,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2772,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2779,"src":"7776:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2771,"name":"uint256","nodeType":"ElementaryTypeName","src":"7776:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7775:9:12"},"scope":4046,"src":"7712:112:12","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[2287],"body":{"id":2789,"nodeType":"Block","src":"8162:35:12","statements":[{"expression":{"id":2787,"name":"_entryPoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2506,"src":"8179:11:12","typeDescriptions":{"typeIdentifier":"t_contract$_IEntryPoint_$492","typeString":"contract IEntryPoint"}},"functionReturnParameters":2786,"id":2788,"nodeType":"Return","src":"8172:18:12"}]},"documentation":{"id":2780,"nodeType":"StructuredDocumentation","src":"7830:254:12","text":" @dev Returns the current entry point used by this account.\n @return EntryPoint as an `IEntryPoint` interface.\n @dev This function should be implemented by the subclass to return the current entry point used by this account."},"functionSelector":"b0d691fe","id":2790,"implemented":true,"kind":"function","modifiers":[],"name":"entryPoint","nameLocation":"8098:10:12","nodeType":"FunctionDefinition","overrides":{"id":2782,"nodeType":"OverrideSpecifier","overrides":[],"src":"8131:8:12"},"parameters":{"id":2781,"nodeType":"ParameterList","parameters":[],"src":"8108:2:12"},"returnParameters":{"id":2786,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2785,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2790,"src":"8149:11:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IEntryPoint_$492","typeString":"contract IEntryPoint"},"typeName":{"id":2784,"nodeType":"UserDefinedTypeName","pathNode":{"id":2783,"name":"IEntryPoint","nameLocations":["8149:11:12"],"nodeType":"IdentifierPath","referencedDeclaration":492,"src":"8149:11:12"},"referencedDeclaration":492,"src":"8149:11:12","typeDescriptions":{"typeIdentifier":"t_contract$_IEntryPoint_$492","typeString":"contract IEntryPoint"}},"visibility":"internal"}],"src":"8148:13:12"},"scope":4046,"src":"8089:108:12","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[2386],"body":{"id":2842,"nodeType":"Block","src":"8788:253:12","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2804,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2799,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2499,"src":"8802:5:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":2802,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8819:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2801,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8811:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2800,"name":"address","nodeType":"ElementaryTypeName","src":"8811:7:12","typeDescriptions":{}}},"id":2803,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8811:10:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"8802:19:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2812,"nodeType":"IfStatement","src":"8798:65:12","trueBody":{"errorCall":{"arguments":[{"arguments":[{"id":2808,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"8857:4:12","typeDescriptions":{"typeIdentifier":"t_contract$_SmartAccount_$4046","typeString":"contract SmartAccount"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_SmartAccount_$4046","typeString":"contract SmartAccount"}],"id":2807,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8849:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2806,"name":"address","nodeType":"ElementaryTypeName","src":"8849:7:12","typeDescriptions":{}}},"id":2809,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8849:13:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2805,"name":"AlreadyInitialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4988,"src":"8830:18:12","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":2810,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8830:33:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2811,"nodeType":"RevertStatement","src":"8823:40:12"}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2818,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2813,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2793,"src":"8877:6:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":2816,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8895:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2815,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8887:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2814,"name":"address","nodeType":"ElementaryTypeName","src":"8887:7:12","typeDescriptions":{}}},"id":2817,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8887:10:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"8877:20:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2822,"nodeType":"IfStatement","src":"8873:52:12","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":2819,"name":"OwnerCannotBeZero","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4965,"src":"8906:17:12","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":2820,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8906:19:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2821,"nodeType":"RevertStatement","src":"8899:26:12"}},{"expression":{"id":2825,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2823,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2499,"src":"8935:5:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2824,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2793,"src":"8943:6:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"8935:14:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2826,"nodeType":"ExpressionStatement","src":"8935:14:12"},{"expression":{"arguments":[{"id":2828,"name":"_handler","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2795,"src":"8979:8:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2827,"name":"_setFallbackHandler","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4512,"src":"8959:19:12","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":2829,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8959:29:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2830,"nodeType":"ExpressionStatement","src":"8959:29:12"},{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":2834,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9020:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2833,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9012:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2832,"name":"address","nodeType":"ElementaryTypeName","src":"9012:7:12","typeDescriptions":{}}},"id":2835,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9012:10:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"","id":2838,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9030:2:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"id":2837,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9024:5:12","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2836,"name":"bytes","nodeType":"ElementaryTypeName","src":"9024:5:12","typeDescriptions":{}}},"id":2839,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9024:9:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2831,"name":"_setupModules","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4919,"src":"8998:13:12","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,bytes memory)"}},"id":2840,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8998:36:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2841,"nodeType":"ExpressionStatement","src":"8998:36:12"}]},"documentation":{"id":2791,"nodeType":"StructuredDocumentation","src":"8203:506:12","text":" @dev Initialize the Smart Account with required states\n @param _owner Signatory of the Smart Account\n @param _handler Default fallback handler provided in Smart Account\n @notice devs need to make sure it is only callble once by initiazer or state check restrictions\n @notice any further implementations that introduces a new state must have a reinit method\n @notice init is prevented here by setting owner in the constructor and checking here for address(0)"},"functionSelector":"f09a4016","id":2843,"implemented":true,"kind":"function","modifiers":[],"name":"init","nameLocation":"8723:4:12","nodeType":"FunctionDefinition","overrides":{"id":2797,"nodeType":"OverrideSpecifier","overrides":[],"src":"8779:8:12"},"parameters":{"id":2796,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2793,"mutability":"mutable","name":"_owner","nameLocation":"8736:6:12","nodeType":"VariableDeclaration","scope":2843,"src":"8728:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2792,"name":"address","nodeType":"ElementaryTypeName","src":"8728:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2795,"mutability":"mutable","name":"_handler","nameLocation":"8752:8:12","nodeType":"VariableDeclaration","scope":2843,"src":"8744:16:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2794,"name":"address","nodeType":"ElementaryTypeName","src":"8744:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"8727:34:12"},"returnParameters":{"id":2798,"nodeType":"ParameterList","parameters":[],"src":"8788:0:12"},"scope":4046,"src":"8714:327:12","stateMutability":"nonpayable","virtual":true,"visibility":"external"},{"body":{"id":3011,"nodeType":"Block","src":"9855:2907:12","statements":[{"assignments":[2860],"declarations":[{"constant":false,"id":2860,"mutability":"mutable","name":"startGas","nameLocation":"9873:8:12","nodeType":"VariableDeclaration","scope":3011,"src":"9865:16:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2859,"name":"uint256","nodeType":"ElementaryTypeName","src":"9865:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2863,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":2861,"name":"gasleft","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-7,"src":"9884:7:12","typeDescriptions":{"typeIdentifier":"t_function_gasleft_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":2862,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9884:9:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9865:28:12"},{"assignments":[2865],"declarations":[{"constant":false,"id":2865,"mutability":"mutable","name":"txHash","nameLocation":"9911:6:12","nodeType":"VariableDeclaration","scope":3011,"src":"9903:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2864,"name":"bytes32","nodeType":"ElementaryTypeName","src":"9903:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":2866,"nodeType":"VariableDeclarationStatement","src":"9903:14:12"},{"id":2889,"nodeType":"Block","src":"10016:359:12","statements":[{"assignments":[2868],"declarations":[{"constant":false,"id":2868,"mutability":"mutable","name":"txHashData","nameLocation":"10043:10:12","nodeType":"VariableDeclaration","scope":2889,"src":"10030:23:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2867,"name":"bytes","nodeType":"ElementaryTypeName","src":"10030:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2877,"initialValue":{"arguments":[{"id":2870,"name":"_tx","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2847,"src":"10131:3:12","typeDescriptions":{"typeIdentifier":"t_struct$_Transaction_$2240_memory_ptr","typeString":"struct Transaction memory"}},{"id":2871,"name":"refundInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2850,"src":"10184:10:12","typeDescriptions":{"typeIdentifier":"t_struct$_FeeRefund_$2251_memory_ptr","typeString":"struct FeeRefund memory"}},{"id":2875,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"10246:11:12","subExpression":{"baseExpression":{"id":2872,"name":"nonces","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2503,"src":"10246:6:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":2874,"indexExpression":{"hexValue":"31","id":2873,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10253:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"10246:9:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Transaction_$2240_memory_ptr","typeString":"struct Transaction memory"},{"typeIdentifier":"t_struct$_FeeRefund_$2251_memory_ptr","typeString":"struct FeeRefund memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2869,"name":"encodeTransactionData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3605,"src":"10056:21:12","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Transaction_$2240_memory_ptr_$_t_struct$_FeeRefund_$2251_memory_ptr_$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (struct Transaction memory,struct FeeRefund memory,uint256) view returns (bytes memory)"}},"id":2876,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10056:215:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"10030:241:12"},{"expression":{"id":2882,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2878,"name":"txHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2865,"src":"10285:6:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":2880,"name":"txHashData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2868,"src":"10304:10:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2879,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"10294:9:12","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":2881,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10294:21:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"10285:30:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":2883,"nodeType":"ExpressionStatement","src":"10285:30:12"},{"expression":{"arguments":[{"id":2885,"name":"txHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2865,"src":"10345:6:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2886,"name":"signatures","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2852,"src":"10353:10:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2884,"name":"checkSignatures","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3434,"src":"10329:15:12","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (bytes32,bytes memory) view"}},"id":2887,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10329:35:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2888,"nodeType":"ExpressionStatement","src":"10329:35:12"}]},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2908,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":2890,"name":"gasleft","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-7,"src":"10757:7:12","typeDescriptions":{"typeIdentifier":"t_function_gasleft_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":2891,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10757:9:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2907,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2900,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2897,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2894,"name":"_tx","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2847,"src":"10791:3:12","typeDescriptions":{"typeIdentifier":"t_struct$_Transaction_$2240_memory_ptr","typeString":"struct Transaction memory"}},"id":2895,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10795:11:12","memberName":"targetTxGas","nodeType":"MemberAccess","referencedDeclaration":2239,"src":"10791:15:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"36","id":2896,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10810:1:12","typeDescriptions":{"typeIdentifier":"t_rational_6_by_1","typeString":"int_const 6"},"value":"6"},"src":"10791:20:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2898,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"10790:22:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"3633","id":2899,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10815:2:12","typeDescriptions":{"typeIdentifier":"t_rational_63_by_1","typeString":"int_const 63"},"value":"63"},"src":"10790:27:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2904,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2901,"name":"_tx","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2847,"src":"10819:3:12","typeDescriptions":{"typeIdentifier":"t_struct$_Transaction_$2240_memory_ptr","typeString":"struct Transaction memory"}},"id":2902,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10823:11:12","memberName":"targetTxGas","nodeType":"MemberAccess","referencedDeclaration":2239,"src":"10819:15:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"32353030","id":2903,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10837:4:12","typeDescriptions":{"typeIdentifier":"t_rational_2500_by_1","typeString":"int_const 2500"},"value":"2500"},"src":"10819:22:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2892,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6427,"src":"10781:4:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$6427_$","typeString":"type(library Math)"}},"id":2893,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10786:3:12","memberName":"max","nodeType":"MemberAccess","referencedDeclaration":5586,"src":"10781:8:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":2905,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10781:61:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"353030","id":2906,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10845:3:12","typeDescriptions":{"typeIdentifier":"t_rational_500_by_1","typeString":"int_const 500"},"value":"500"},"src":"10781:67:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10757:91:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2930,"nodeType":"IfStatement","src":"10740:300:12","trueBody":{"errorCall":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":2910,"name":"gasleft","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-7,"src":"10912:7:12","typeDescriptions":{"typeIdentifier":"t_function_gasleft_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":2911,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10912:9:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2927,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2920,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2917,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2914,"name":"_tx","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2847,"src":"10949:3:12","typeDescriptions":{"typeIdentifier":"t_struct$_Transaction_$2240_memory_ptr","typeString":"struct Transaction memory"}},"id":2915,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10953:11:12","memberName":"targetTxGas","nodeType":"MemberAccess","referencedDeclaration":2239,"src":"10949:15:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"36","id":2916,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10968:1:12","typeDescriptions":{"typeIdentifier":"t_rational_6_by_1","typeString":"int_const 6"},"value":"6"},"src":"10949:20:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2918,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"10948:22:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"3633","id":2919,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10973:2:12","typeDescriptions":{"typeIdentifier":"t_rational_63_by_1","typeString":"int_const 63"},"value":"63"},"src":"10948:27:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2924,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2921,"name":"_tx","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2847,"src":"10977:3:12","typeDescriptions":{"typeIdentifier":"t_struct$_Transaction_$2240_memory_ptr","typeString":"struct Transaction memory"}},"id":2922,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10981:11:12","memberName":"targetTxGas","nodeType":"MemberAccess","referencedDeclaration":2239,"src":"10977:15:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"32353030","id":2923,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10995:4:12","typeDescriptions":{"typeIdentifier":"t_rational_2500_by_1","typeString":"int_const 2500"},"value":"2500"},"src":"10977:22:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2912,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6427,"src":"10939:4:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$6427_$","typeString":"type(library Math)"}},"id":2913,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10944:3:12","memberName":"max","nodeType":"MemberAccess","referencedDeclaration":5586,"src":"10939:8:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":2925,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10939:61:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"353030","id":2926,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11023:3:12","typeDescriptions":{"typeIdentifier":"t_rational_500_by_1","typeString":"int_const 500"},"value":"500"},"src":"10939:87:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2909,"name":"NotEnoughGasLeft","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4995,"src":"10878:16:12","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256) pure"}},"id":2928,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10878:162:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2929,"nodeType":"RevertStatement","src":"10871:169:12"}},{"id":3010,"nodeType":"Block","src":"11139:1617:12","statements":[{"expression":{"id":2954,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2931,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2857,"src":"11412:7:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"expression":{"id":2933,"name":"_tx","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2847,"src":"11447:3:12","typeDescriptions":{"typeIdentifier":"t_struct$_Transaction_$2240_memory_ptr","typeString":"struct Transaction memory"}},"id":2934,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11451:2:12","memberName":"to","nodeType":"MemberAccess","referencedDeclaration":2230,"src":"11447:6:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":2935,"name":"_tx","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2847,"src":"11471:3:12","typeDescriptions":{"typeIdentifier":"t_struct$_Transaction_$2240_memory_ptr","typeString":"struct Transaction memory"}},"id":2936,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11475:5:12","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":2235,"src":"11471:9:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":2937,"name":"_tx","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2847,"src":"11498:3:12","typeDescriptions":{"typeIdentifier":"t_struct$_Transaction_$2240_memory_ptr","typeString":"struct Transaction memory"}},"id":2938,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11502:4:12","memberName":"data","nodeType":"MemberAccess","referencedDeclaration":2237,"src":"11498:8:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"expression":{"id":2939,"name":"_tx","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2847,"src":"11524:3:12","typeDescriptions":{"typeIdentifier":"t_struct$_Transaction_$2240_memory_ptr","typeString":"struct Transaction memory"}},"id":2940,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11528:9:12","memberName":"operation","nodeType":"MemberAccess","referencedDeclaration":2233,"src":"11524:13:12","typeDescriptions":{"typeIdentifier":"t_enum$_Operation_$4930","typeString":"enum Enum.Operation"}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2944,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2941,"name":"refundInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2850,"src":"11555:10:12","typeDescriptions":{"typeIdentifier":"t_struct$_FeeRefund_$2251_memory_ptr","typeString":"struct FeeRefund memory"}},"id":2942,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11566:8:12","memberName":"gasPrice","nodeType":"MemberAccess","referencedDeclaration":2244,"src":"11555:19:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2943,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11578:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11555:24:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"expression":{"id":2950,"name":"_tx","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2847,"src":"11603:3:12","typeDescriptions":{"typeIdentifier":"t_struct$_Transaction_$2240_memory_ptr","typeString":"struct Transaction memory"}},"id":2951,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11607:11:12","memberName":"targetTxGas","nodeType":"MemberAccess","referencedDeclaration":2239,"src":"11603:15:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2952,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"11555:63:12","trueExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2948,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":2945,"name":"gasleft","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-7,"src":"11583:7:12","typeDescriptions":{"typeIdentifier":"t_function_gasleft_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":2946,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11583:9:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"32353030","id":2947,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11595:4:12","typeDescriptions":{"typeIdentifier":"t_rational_2500_by_1","typeString":"int_const 2500"},"value":"2500"},"src":"11583:16:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2949,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11582:18:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_enum$_Operation_$4930","typeString":"enum Enum.Operation"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2932,"name":"execute","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4432,"src":"11422:7:12","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$_t_enum$_Operation_$4930_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256,bytes memory,enum Enum.Operation,uint256) returns (bool)"}},"id":2953,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11422:210:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"11412:220:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2955,"nodeType":"ExpressionStatement","src":"11412:220:12"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2967,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2962,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2957,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"11914:8:12","subExpression":{"id":2956,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2857,"src":"11915:7:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2961,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2958,"name":"_tx","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2847,"src":"11926:3:12","typeDescriptions":{"typeIdentifier":"t_struct$_Transaction_$2240_memory_ptr","typeString":"struct Transaction memory"}},"id":2959,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11930:11:12","memberName":"targetTxGas","nodeType":"MemberAccess","referencedDeclaration":2239,"src":"11926:15:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2960,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11945:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11926:20:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"11914:32:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2966,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2963,"name":"refundInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2850,"src":"11950:10:12","typeDescriptions":{"typeIdentifier":"t_struct$_FeeRefund_$2251_memory_ptr","typeString":"struct FeeRefund memory"}},"id":2964,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11961:8:12","memberName":"gasPrice","nodeType":"MemberAccess","referencedDeclaration":2244,"src":"11950:19:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2965,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11973:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11950:24:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"11914:60:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2976,"nodeType":"IfStatement","src":"11910:231:12","trueBody":{"errorCall":{"arguments":[{"expression":{"id":2969,"name":"_tx","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2847,"src":"12038:3:12","typeDescriptions":{"typeIdentifier":"t_struct$_Transaction_$2240_memory_ptr","typeString":"struct Transaction memory"}},"id":2970,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"12042:11:12","memberName":"targetTxGas","nodeType":"MemberAccess","referencedDeclaration":2239,"src":"12038:15:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":2971,"name":"refundInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2850,"src":"12075:10:12","typeDescriptions":{"typeIdentifier":"t_struct$_FeeRefund_$2251_memory_ptr","typeString":"struct FeeRefund memory"}},"id":2972,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"12086:8:12","memberName":"gasPrice","nodeType":"MemberAccess","referencedDeclaration":2244,"src":"12075:19:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2973,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2857,"src":"12116:7:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":2968,"name":"CanNotEstimateGas","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5004,"src":"11999:17:12","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$_t_uint256_$_t_bool_$returns$__$","typeString":"function (uint256,uint256,bool) pure"}},"id":2974,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11999:142:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2975,"nodeType":"RevertStatement","src":"11992:149:12"}},{"assignments":[2978],"declarations":[{"constant":false,"id":2978,"mutability":"mutable","name":"payment","nameLocation":"12298:7:12","nodeType":"VariableDeclaration","scope":3010,"src":"12290:15:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2977,"name":"uint256","nodeType":"ElementaryTypeName","src":"12290:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2979,"nodeType":"VariableDeclarationStatement","src":"12290:15:12"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2983,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2980,"name":"refundInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2850,"src":"12323:10:12","typeDescriptions":{"typeIdentifier":"t_struct$_FeeRefund_$2251_memory_ptr","typeString":"struct FeeRefund memory"}},"id":2981,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"12334:8:12","memberName":"gasPrice","nodeType":"MemberAccess","referencedDeclaration":2244,"src":"12323:19:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":2982,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12346:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"12323:24:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3009,"nodeType":"IfStatement","src":"12319:427:12","trueBody":{"id":3008,"nodeType":"Block","src":"12349:397:12","statements":[{"expression":{"id":3001,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2984,"name":"payment","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2978,"src":"12367:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2989,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2986,"name":"startGas","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2860,"src":"12412:8:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":2987,"name":"gasleft","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-7,"src":"12423:7:12","typeDescriptions":{"typeIdentifier":"t_function_gasleft_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":2988,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12423:9:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12412:20:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":2990,"name":"refundInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2850,"src":"12454:10:12","typeDescriptions":{"typeIdentifier":"t_struct$_FeeRefund_$2251_memory_ptr","typeString":"struct FeeRefund memory"}},"id":2991,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"12465:7:12","memberName":"baseGas","nodeType":"MemberAccess","referencedDeclaration":2242,"src":"12454:18:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":2992,"name":"refundInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2850,"src":"12494:10:12","typeDescriptions":{"typeIdentifier":"t_struct$_FeeRefund_$2251_memory_ptr","typeString":"struct FeeRefund memory"}},"id":2993,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"12505:8:12","memberName":"gasPrice","nodeType":"MemberAccess","referencedDeclaration":2244,"src":"12494:19:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":2994,"name":"refundInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2850,"src":"12535:10:12","typeDescriptions":{"typeIdentifier":"t_struct$_FeeRefund_$2251_memory_ptr","typeString":"struct FeeRefund memory"}},"id":2995,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"12546:19:12","memberName":"tokenGasPriceFactor","nodeType":"MemberAccess","referencedDeclaration":2246,"src":"12535:30:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":2996,"name":"refundInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2850,"src":"12587:10:12","typeDescriptions":{"typeIdentifier":"t_struct$_FeeRefund_$2251_memory_ptr","typeString":"struct FeeRefund memory"}},"id":2997,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"12598:8:12","memberName":"gasToken","nodeType":"MemberAccess","referencedDeclaration":2248,"src":"12587:19:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":2998,"name":"refundInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2850,"src":"12628:10:12","typeDescriptions":{"typeIdentifier":"t_struct$_FeeRefund_$2251_memory_ptr","typeString":"struct FeeRefund memory"}},"id":2999,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"12639:14:12","memberName":"refundReceiver","nodeType":"MemberAccess","referencedDeclaration":2250,"src":"12628:25:12","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address_payable","typeString":"address payable"}],"id":2985,"name":"handlePayment","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3145,"src":"12377:13:12","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_address_$_t_address_payable_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256,uint256,address,address payable) returns (uint256)"}},"id":3000,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12377:294:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12367:304:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3002,"nodeType":"ExpressionStatement","src":"12367:304:12"},{"eventCall":{"arguments":[{"id":3004,"name":"txHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2865,"src":"12715:6:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3005,"name":"payment","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2978,"src":"12723:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3003,"name":"AccountHandlePayment","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2530,"src":"12694:20:12","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bytes32_$_t_uint256_$returns$__$","typeString":"function (bytes32,uint256)"}},"id":3006,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12694:37:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3007,"nodeType":"EmitStatement","src":"12689:42:12"}]}}]}]},"documentation":{"id":2844,"nodeType":"StructuredDocumentation","src":"9047:607:12","text":" @dev Gnosis style transaction with optional repay in native tokens OR ERC20\n @dev Allows to execute a transaction confirmed by required signature/s and then pays the account that submitted the transaction.\n @dev Function name optimized to have hash started with zeros to make this function calls cheaper\n @notice The fees are always transferred, even if the user transaction fails.\n @param _tx Smart Account transaction\n @param refundInfo Required information for gas refunds\n @param signatures Packed signature/s data ({bytes32 r}{bytes32 s}{uint8 v})"},"functionSelector":"7455ce3c","id":3012,"implemented":true,"kind":"function","modifiers":[{"id":2855,"kind":"modifierInvocation","modifierName":{"id":2854,"name":"nonReentrant","nameLocations":["9819:12:12"],"nodeType":"IdentifierPath","referencedDeclaration":5168,"src":"9819:12:12"},"nodeType":"ModifierInvocation","src":"9819:12:12"}],"name":"execTransaction_S6W","nameLocation":"9668:19:12","nodeType":"FunctionDefinition","parameters":{"id":2853,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2847,"mutability":"mutable","name":"_tx","nameLocation":"9716:3:12","nodeType":"VariableDeclaration","scope":3012,"src":"9697:22:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Transaction_$2240_memory_ptr","typeString":"struct Transaction"},"typeName":{"id":2846,"nodeType":"UserDefinedTypeName","pathNode":{"id":2845,"name":"Transaction","nameLocations":["9697:11:12"],"nodeType":"IdentifierPath","referencedDeclaration":2240,"src":"9697:11:12"},"referencedDeclaration":2240,"src":"9697:11:12","typeDescriptions":{"typeIdentifier":"t_struct$_Transaction_$2240_storage_ptr","typeString":"struct Transaction"}},"visibility":"internal"},{"constant":false,"id":2850,"mutability":"mutable","name":"refundInfo","nameLocation":"9746:10:12","nodeType":"VariableDeclaration","scope":3012,"src":"9729:27:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_FeeRefund_$2251_memory_ptr","typeString":"struct FeeRefund"},"typeName":{"id":2849,"nodeType":"UserDefinedTypeName","pathNode":{"id":2848,"name":"FeeRefund","nameLocations":["9729:9:12"],"nodeType":"IdentifierPath","referencedDeclaration":2251,"src":"9729:9:12"},"referencedDeclaration":2251,"src":"9729:9:12","typeDescriptions":{"typeIdentifier":"t_struct$_FeeRefund_$2251_storage_ptr","typeString":"struct FeeRefund"}},"visibility":"internal"},{"constant":false,"id":2852,"mutability":"mutable","name":"signatures","nameLocation":"9779:10:12","nodeType":"VariableDeclaration","scope":3012,"src":"9766:23:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2851,"name":"bytes","nodeType":"ElementaryTypeName","src":"9766:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"9687:108:12"},"returnParameters":{"id":2858,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2857,"mutability":"mutable","name":"success","nameLocation":"9846:7:12","nodeType":"VariableDeclaration","scope":3012,"src":"9841:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2856,"name":"bool","nodeType":"ElementaryTypeName","src":"9841:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"9840:14:12"},"scope":4046,"src":"9659:3103:12","stateMutability":"payable","virtual":true,"visibility":"public"},{"baseFunctions":[2400],"body":{"id":3033,"nodeType":"Block","src":"13044:72:12","statements":[{"expression":{"arguments":[{"id":3028,"name":"_tx","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3016,"src":"13081:3:12","typeDescriptions":{"typeIdentifier":"t_struct$_Transaction_$2240_memory_ptr","typeString":"struct Transaction memory"}},{"id":3029,"name":"refundInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3019,"src":"13086:10:12","typeDescriptions":{"typeIdentifier":"t_struct$_FeeRefund_$2251_memory_ptr","typeString":"struct FeeRefund memory"}},{"id":3030,"name":"signatures","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3021,"src":"13098:10:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Transaction_$2240_memory_ptr","typeString":"struct Transaction memory"},{"typeIdentifier":"t_struct$_FeeRefund_$2251_memory_ptr","typeString":"struct FeeRefund memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3027,"name":"execTransaction_S6W","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3012,"src":"13061:19:12","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Transaction_$2240_memory_ptr_$_t_struct$_FeeRefund_$2251_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_bool_$","typeString":"function (struct Transaction memory,struct FeeRefund memory,bytes memory) returns (bool)"}},"id":3031,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13061:48:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":3026,"id":3032,"nodeType":"Return","src":"13054:55:12"}]},"documentation":{"id":3013,"nodeType":"StructuredDocumentation","src":"12768:89:12","text":" @dev Interface function with the standard name for execTransaction_S6W"},"functionSelector":"fc7d3d79","id":3034,"implemented":true,"kind":"function","modifiers":[],"name":"execTransaction","nameLocation":"12871:15:12","nodeType":"FunctionDefinition","overrides":{"id":3023,"nodeType":"OverrideSpecifier","overrides":[],"src":"13020:8:12"},"parameters":{"id":3022,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3016,"mutability":"mutable","name":"_tx","nameLocation":"12915:3:12","nodeType":"VariableDeclaration","scope":3034,"src":"12896:22:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Transaction_$2240_memory_ptr","typeString":"struct Transaction"},"typeName":{"id":3015,"nodeType":"UserDefinedTypeName","pathNode":{"id":3014,"name":"Transaction","nameLocations":["12896:11:12"],"nodeType":"IdentifierPath","referencedDeclaration":2240,"src":"12896:11:12"},"referencedDeclaration":2240,"src":"12896:11:12","typeDescriptions":{"typeIdentifier":"t_struct$_Transaction_$2240_storage_ptr","typeString":"struct Transaction"}},"visibility":"internal"},{"constant":false,"id":3019,"mutability":"mutable","name":"refundInfo","nameLocation":"12945:10:12","nodeType":"VariableDeclaration","scope":3034,"src":"12928:27:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_FeeRefund_$2251_memory_ptr","typeString":"struct FeeRefund"},"typeName":{"id":3018,"nodeType":"UserDefinedTypeName","pathNode":{"id":3017,"name":"FeeRefund","nameLocations":["12928:9:12"],"nodeType":"IdentifierPath","referencedDeclaration":2251,"src":"12928:9:12"},"referencedDeclaration":2251,"src":"12928:9:12","typeDescriptions":{"typeIdentifier":"t_struct$_FeeRefund_$2251_storage_ptr","typeString":"struct FeeRefund"}},"visibility":"internal"},{"constant":false,"id":3021,"mutability":"mutable","name":"signatures","nameLocation":"12978:10:12","nodeType":"VariableDeclaration","scope":3034,"src":"12965:23:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3020,"name":"bytes","nodeType":"ElementaryTypeName","src":"12965:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"12886:108:12"},"returnParameters":{"id":3026,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3025,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3034,"src":"13038:4:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3024,"name":"bool","nodeType":"ElementaryTypeName","src":"13038:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"13037:6:12"},"scope":4046,"src":"12862:254:12","stateMutability":"payable","virtual":true,"visibility":"external"},{"body":{"id":3144,"nodeType":"Block","src":"14116:1046:12","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3054,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3052,"name":"tokenGasPriceFactor","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3043,"src":"14130:19:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3053,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14153:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"14130:24:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3058,"nodeType":"IfStatement","src":"14126:70:12","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":3055,"name":"TokenGasPriceFactorCanNotBeZero","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5052,"src":"14163:31:12","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":3056,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14163:33:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3057,"nodeType":"RevertStatement","src":"14156:40:12"}},{"assignments":[3060],"declarations":[{"constant":false,"id":3060,"mutability":"mutable","name":"receiver","nameLocation":"14275:8:12","nodeType":"VariableDeclaration","scope":3144,"src":"14259:24:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":3059,"name":"address","nodeType":"ElementaryTypeName","src":"14259:15:12","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"}],"id":3074,"initialValue":{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3066,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3061,"name":"refundReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3047,"src":"14286:14:12","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":3064,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14312:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3063,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14304:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3062,"name":"address","nodeType":"ElementaryTypeName","src":"14304:7:12","typeDescriptions":{}}},"id":3065,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14304:10:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"14286:28:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":3072,"name":"refundReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3047,"src":"14362:14:12","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":3073,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"14286:90:12","trueExpression":{"arguments":[{"expression":{"id":3069,"name":"tx","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-26,"src":"14337:2:12","typeDescriptions":{"typeIdentifier":"t_magic_transaction","typeString":"tx"}},"id":3070,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14340:6:12","memberName":"origin","nodeType":"MemberAccess","src":"14337:9:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3068,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14329:8:12","typeDescriptions":{"typeIdentifier":"t_type$_t_address_payable_$","typeString":"type(address payable)"},"typeName":{"id":3067,"name":"address","nodeType":"ElementaryTypeName","src":"14329:8:12","stateMutability":"payable","typeDescriptions":{}}},"id":3071,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14329:18:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"nodeType":"VariableDeclarationStatement","src":"14259:117:12"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3080,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3075,"name":"gasToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3045,"src":"14390:8:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":3078,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14410:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3077,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14402:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3076,"name":"address","nodeType":"ElementaryTypeName","src":"14402:7:12","typeDescriptions":{}}},"id":3079,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14402:10:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"14390:22:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":3142,"nodeType":"Block","src":"14897:259:12","statements":[{"expression":{"id":3127,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3115,"name":"payment","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3050,"src":"14911:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3126,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3122,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3118,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3116,"name":"gasUsed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3037,"src":"14939:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":3117,"name":"baseGas","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3039,"src":"14949:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14939:17:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3119,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"14938:19:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"components":[{"id":3120,"name":"gasPrice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3041,"src":"14961:8:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3121,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"14960:10:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14938:32:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3123,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"14937:34:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"components":[{"id":3124,"name":"tokenGasPriceFactor","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3043,"src":"14991:19:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3125,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"14990:21:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14937:74:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14911:100:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3128,"nodeType":"ExpressionStatement","src":"14911:100:12"},{"condition":{"id":3134,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"15029:43:12","subExpression":{"arguments":[{"id":3130,"name":"gasToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3045,"src":"15044:8:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3131,"name":"receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3060,"src":"15054:8:12","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},{"id":3132,"name":"payment","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3050,"src":"15064:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address_payable","typeString":"address payable"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3129,"name":"transferToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5224,"src":"15030:13:12","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,address,uint256) returns (bool)"}},"id":3133,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15030:42:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3141,"nodeType":"IfStatement","src":"15025:120:12","trueBody":{"errorCall":{"arguments":[{"id":3136,"name":"gasToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3045,"src":"15117:8:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3137,"name":"receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3060,"src":"15127:8:12","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},{"id":3138,"name":"payment","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3050,"src":"15137:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address_payable","typeString":"address payable"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3135,"name":"TokenTransferFailed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4962,"src":"15097:19:12","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256) pure"}},"id":3139,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15097:48:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3140,"nodeType":"RevertStatement","src":"15090:55:12"}}]},"id":3143,"nodeType":"IfStatement","src":"14386:770:12","trueBody":{"id":3114,"nodeType":"Block","src":"14414:477:12","statements":[{"expression":{"id":3096,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3081,"name":"payment","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3050,"src":"14533:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3095,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3084,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3082,"name":"gasUsed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3037,"src":"14560:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":3083,"name":"baseGas","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3039,"src":"14570:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14560:17:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3085,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"14559:19:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3089,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3086,"name":"gasPrice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3041,"src":"14598:8:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":3087,"name":"tx","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-26,"src":"14609:2:12","typeDescriptions":{"typeIdentifier":"t_magic_transaction","typeString":"tx"}},"id":3088,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14612:8:12","memberName":"gasprice","nodeType":"MemberAccess","src":"14609:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14598:22:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"expression":{"id":3091,"name":"tx","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-26,"src":"14634:2:12","typeDescriptions":{"typeIdentifier":"t_magic_transaction","typeString":"tx"}},"id":3092,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14637:8:12","memberName":"gasprice","nodeType":"MemberAccess","src":"14634:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3093,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"14598:47:12","trueExpression":{"id":3090,"name":"gasPrice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3041,"src":"14623:8:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3094,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"14597:49:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14559:87:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14533:113:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3097,"nodeType":"ExpressionStatement","src":"14533:113:12"},{"assignments":[3099],"declarations":[{"constant":false,"id":3099,"mutability":"mutable","name":"success","nameLocation":"14665:7:12","nodeType":"VariableDeclaration","scope":3114,"src":"14660:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3098,"name":"bool","nodeType":"ElementaryTypeName","src":"14660:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":3100,"nodeType":"VariableDeclarationStatement","src":"14660:12:12"},{"AST":{"nodeType":"YulBlock","src":"14695:85:12","statements":[{"nodeType":"YulAssignment","src":"14713:53:12","value":{"arguments":[{"arguments":[],"functionName":{"name":"gas","nodeType":"YulIdentifier","src":"14729:3:12"},"nodeType":"YulFunctionCall","src":"14729:5:12"},{"name":"receiver","nodeType":"YulIdentifier","src":"14736:8:12"},{"name":"payment","nodeType":"YulIdentifier","src":"14746:7:12"},{"kind":"number","nodeType":"YulLiteral","src":"14755:1:12","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"14758:1:12","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"14761:1:12","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"14764:1:12","type":"","value":"0"}],"functionName":{"name":"call","nodeType":"YulIdentifier","src":"14724:4:12"},"nodeType":"YulFunctionCall","src":"14724:42:12"},"variableNames":[{"name":"success","nodeType":"YulIdentifier","src":"14713:7:12"}]}]},"evmVersion":"london","externalReferences":[{"declaration":3050,"isOffset":false,"isSlot":false,"src":"14746:7:12","valueSize":1},{"declaration":3060,"isOffset":false,"isSlot":false,"src":"14736:8:12","valueSize":1},{"declaration":3099,"isOffset":false,"isSlot":false,"src":"14713:7:12","valueSize":1}],"id":3101,"nodeType":"InlineAssembly","src":"14686:94:12"},{"condition":{"id":3103,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"14797:8:12","subExpression":{"id":3102,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3099,"src":"14798:7:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3113,"nodeType":"IfStatement","src":"14793:87:12","trueBody":{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":3107,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14858:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3106,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14850:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3105,"name":"address","nodeType":"ElementaryTypeName","src":"14850:7:12","typeDescriptions":{}}},"id":3108,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14850:10:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3109,"name":"receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3060,"src":"14862:8:12","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},{"id":3110,"name":"payment","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3050,"src":"14872:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address_payable","typeString":"address payable"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3104,"name":"TokenTransferFailed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4962,"src":"14830:19:12","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256) pure"}},"id":3111,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14830:50:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3112,"nodeType":"RevertStatement","src":"14823:57:12"}}]}}]},"documentation":{"id":3035,"nodeType":"StructuredDocumentation","src":"13122:747:12","text":" @dev Handles the payment for a transaction refund from Smart Account to Relayer.\n @param gasUsed Gas used by the transaction.\n @param baseGas Gas costs that are independent of the transaction execution\n (e.g. base transaction fee, signature check, payment of the refund, emitted events).\n @param gasPrice Gas price / TokenGasPrice (gas price in the context of token using offchain price feeds)\n that should be used for the payment calculation.\n @param tokenGasPriceFactor factor by which calculated token gas price is already multiplied.\n @param gasToken Token address (or 0 if ETH) that is used for the payment.\n @return payment The amount of payment made in the specified token."},"id":3145,"implemented":true,"kind":"function","modifiers":[],"name":"handlePayment","nameLocation":"13883:13:12","nodeType":"FunctionDefinition","parameters":{"id":3048,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3037,"mutability":"mutable","name":"gasUsed","nameLocation":"13914:7:12","nodeType":"VariableDeclaration","scope":3145,"src":"13906:15:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3036,"name":"uint256","nodeType":"ElementaryTypeName","src":"13906:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3039,"mutability":"mutable","name":"baseGas","nameLocation":"13939:7:12","nodeType":"VariableDeclaration","scope":3145,"src":"13931:15:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3038,"name":"uint256","nodeType":"ElementaryTypeName","src":"13931:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3041,"mutability":"mutable","name":"gasPrice","nameLocation":"13964:8:12","nodeType":"VariableDeclaration","scope":3145,"src":"13956:16:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3040,"name":"uint256","nodeType":"ElementaryTypeName","src":"13956:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3043,"mutability":"mutable","name":"tokenGasPriceFactor","nameLocation":"13990:19:12","nodeType":"VariableDeclaration","scope":3145,"src":"13982:27:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3042,"name":"uint256","nodeType":"ElementaryTypeName","src":"13982:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3045,"mutability":"mutable","name":"gasToken","nameLocation":"14027:8:12","nodeType":"VariableDeclaration","scope":3145,"src":"14019:16:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3044,"name":"address","nodeType":"ElementaryTypeName","src":"14019:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3047,"mutability":"mutable","name":"refundReceiver","nameLocation":"14061:14:12","nodeType":"VariableDeclaration","scope":3145,"src":"14045:30:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":3046,"name":"address","nodeType":"ElementaryTypeName","src":"14045:15:12","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"}],"src":"13896:185:12"},"returnParameters":{"id":3051,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3050,"mutability":"mutable","name":"payment","nameLocation":"14107:7:12","nodeType":"VariableDeclaration","scope":3145,"src":"14099:15:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3049,"name":"uint256","nodeType":"ElementaryTypeName","src":"14099:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14098:17:12"},"scope":4046,"src":"13874:1288:12","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":3278,"nodeType":"Block","src":"16368:1195:12","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3166,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3164,"name":"tokenGasPriceFactor","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3154,"src":"16386:19:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":3165,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16409:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"16386:24:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"696e76616c696420746f6b656e4761735072696365466163746f72","id":3167,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"16412:29:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_1380d7ee7d1227b29083a1c88fbbc2b0b072577c7721bc49fc1000d471c23721","typeString":"literal_string \"invalid tokenGasPriceFactor\""},"value":"invalid tokenGasPriceFactor"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_1380d7ee7d1227b29083a1c88fbbc2b0b072577c7721bc49fc1000d471c23721","typeString":"literal_string \"invalid tokenGasPriceFactor\""}],"id":3163,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"16378:7:12","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3168,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16378:64:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3169,"nodeType":"ExpressionStatement","src":"16378:64:12"},{"assignments":[3171],"declarations":[{"constant":false,"id":3171,"mutability":"mutable","name":"startGas","nameLocation":"16460:8:12","nodeType":"VariableDeclaration","scope":3278,"src":"16452:16:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3170,"name":"uint256","nodeType":"ElementaryTypeName","src":"16452:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3174,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":3172,"name":"gasleft","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-7,"src":"16471:7:12","typeDescriptions":{"typeIdentifier":"t_function_gasleft_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":3173,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16471:9:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"16452:28:12"},{"assignments":[3176],"declarations":[{"constant":false,"id":3176,"mutability":"mutable","name":"receiver","nameLocation":"16559:8:12","nodeType":"VariableDeclaration","scope":3278,"src":"16543:24:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":3175,"name":"address","nodeType":"ElementaryTypeName","src":"16543:15:12","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"}],"id":3190,"initialValue":{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3182,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3177,"name":"refundReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3158,"src":"16570:14:12","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":3180,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16596:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3179,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16588:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3178,"name":"address","nodeType":"ElementaryTypeName","src":"16588:7:12","typeDescriptions":{}}},"id":3181,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16588:10:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"16570:28:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":3188,"name":"refundReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3158,"src":"16646:14:12","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":3189,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"16570:90:12","trueExpression":{"arguments":[{"expression":{"id":3185,"name":"tx","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-26,"src":"16621:2:12","typeDescriptions":{"typeIdentifier":"t_magic_transaction","typeString":"tx"}},"id":3186,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16624:6:12","memberName":"origin","nodeType":"MemberAccess","src":"16621:9:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3184,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16613:8:12","typeDescriptions":{"typeIdentifier":"t_type$_t_address_payable_$","typeString":"type(address payable)"},"typeName":{"id":3183,"name":"address","nodeType":"ElementaryTypeName","src":"16613:8:12","stateMutability":"payable","typeDescriptions":{}}},"id":3187,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16613:18:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"nodeType":"VariableDeclarationStatement","src":"16543:117:12"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3196,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3191,"name":"gasToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3156,"src":"16674:8:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":3194,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16694:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3193,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16686:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3192,"name":"address","nodeType":"ElementaryTypeName","src":"16686:7:12","typeDescriptions":{}}},"id":3195,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16686:10:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"16674:22:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":3258,"nodeType":"Block","src":"17173:251:12","statements":[{"assignments":[3232],"declarations":[{"constant":false,"id":3232,"mutability":"mutable","name":"payment","nameLocation":"17195:7:12","nodeType":"VariableDeclaration","scope":3258,"src":"17187:15:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3231,"name":"uint256","nodeType":"ElementaryTypeName","src":"17187:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3244,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3243,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3239,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3235,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3233,"name":"gasUsed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3148,"src":"17207:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":3234,"name":"baseGas","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3150,"src":"17217:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"17207:17:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3236,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"17206:19:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"components":[{"id":3237,"name":"gasPrice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3152,"src":"17229:8:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3238,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"17228:10:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"17206:32:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3240,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"17205:34:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"components":[{"id":3241,"name":"tokenGasPriceFactor","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3154,"src":"17259:19:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3242,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"17258:21:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"17205:74:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"17187:92:12"},{"condition":{"id":3250,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"17297:43:12","subExpression":{"arguments":[{"id":3246,"name":"gasToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3156,"src":"17312:8:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3247,"name":"receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3176,"src":"17322:8:12","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},{"id":3248,"name":"payment","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3232,"src":"17332:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address_payable","typeString":"address payable"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3245,"name":"transferToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5224,"src":"17298:13:12","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,address,uint256) returns (bool)"}},"id":3249,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17298:42:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3257,"nodeType":"IfStatement","src":"17293:120:12","trueBody":{"errorCall":{"arguments":[{"id":3252,"name":"gasToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3156,"src":"17385:8:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3253,"name":"receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3176,"src":"17395:8:12","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},{"id":3254,"name":"payment","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3232,"src":"17405:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address_payable","typeString":"address payable"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3251,"name":"TokenTransferFailed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4962,"src":"17365:19:12","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256) pure"}},"id":3255,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17365:48:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3256,"nodeType":"RevertStatement","src":"17358:55:12"}}]},"id":3259,"nodeType":"IfStatement","src":"16670:754:12","trueBody":{"id":3230,"nodeType":"Block","src":"16698:469:12","statements":[{"assignments":[3198],"declarations":[{"constant":false,"id":3198,"mutability":"mutable","name":"payment","nameLocation":"16825:7:12","nodeType":"VariableDeclaration","scope":3230,"src":"16817:15:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3197,"name":"uint256","nodeType":"ElementaryTypeName","src":"16817:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3213,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3212,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3201,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3199,"name":"gasUsed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3148,"src":"16836:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":3200,"name":"baseGas","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3150,"src":"16846:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"16836:17:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3202,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"16835:19:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3206,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3203,"name":"gasPrice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3152,"src":"16874:8:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":3204,"name":"tx","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-26,"src":"16885:2:12","typeDescriptions":{"typeIdentifier":"t_magic_transaction","typeString":"tx"}},"id":3205,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16888:8:12","memberName":"gasprice","nodeType":"MemberAccess","src":"16885:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"16874:22:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"expression":{"id":3208,"name":"tx","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-26,"src":"16910:2:12","typeDescriptions":{"typeIdentifier":"t_magic_transaction","typeString":"tx"}},"id":3209,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16913:8:12","memberName":"gasprice","nodeType":"MemberAccess","src":"16910:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3210,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"16874:47:12","trueExpression":{"id":3207,"name":"gasPrice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3152,"src":"16899:8:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3211,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"16873:49:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"16835:87:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"16817:105:12"},{"assignments":[3215],"declarations":[{"constant":false,"id":3215,"mutability":"mutable","name":"success","nameLocation":"16941:7:12","nodeType":"VariableDeclaration","scope":3230,"src":"16936:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3214,"name":"bool","nodeType":"ElementaryTypeName","src":"16936:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":3216,"nodeType":"VariableDeclarationStatement","src":"16936:12:12"},{"AST":{"nodeType":"YulBlock","src":"16971:85:12","statements":[{"nodeType":"YulAssignment","src":"16989:53:12","value":{"arguments":[{"arguments":[],"functionName":{"name":"gas","nodeType":"YulIdentifier","src":"17005:3:12"},"nodeType":"YulFunctionCall","src":"17005:5:12"},{"name":"receiver","nodeType":"YulIdentifier","src":"17012:8:12"},{"name":"payment","nodeType":"YulIdentifier","src":"17022:7:12"},{"kind":"number","nodeType":"YulLiteral","src":"17031:1:12","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"17034:1:12","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"17037:1:12","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"17040:1:12","type":"","value":"0"}],"functionName":{"name":"call","nodeType":"YulIdentifier","src":"17000:4:12"},"nodeType":"YulFunctionCall","src":"17000:42:12"},"variableNames":[{"name":"success","nodeType":"YulIdentifier","src":"16989:7:12"}]}]},"evmVersion":"london","externalReferences":[{"declaration":3198,"isOffset":false,"isSlot":false,"src":"17022:7:12","valueSize":1},{"declaration":3176,"isOffset":false,"isSlot":false,"src":"17012:8:12","valueSize":1},{"declaration":3215,"isOffset":false,"isSlot":false,"src":"16989:7:12","valueSize":1}],"id":3217,"nodeType":"InlineAssembly","src":"16962:94:12"},{"condition":{"id":3219,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"17073:8:12","subExpression":{"id":3218,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3215,"src":"17074:7:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3229,"nodeType":"IfStatement","src":"17069:87:12","trueBody":{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":3223,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17134:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3222,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17126:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3221,"name":"address","nodeType":"ElementaryTypeName","src":"17126:7:12","typeDescriptions":{}}},"id":3224,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17126:10:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3225,"name":"receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3176,"src":"17138:8:12","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},{"id":3226,"name":"payment","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3198,"src":"17148:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address_payable","typeString":"address payable"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3220,"name":"TokenTransferFailed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4962,"src":"17106:19:12","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256) pure"}},"id":3227,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17106:50:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3228,"nodeType":"RevertStatement","src":"17099:57:12"}}]}},{"id":3267,"nodeType":"UncheckedBlock","src":"17433:69:12","statements":[{"expression":{"id":3265,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3260,"name":"requiredGas","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3161,"src":"17457:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3264,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3261,"name":"startGas","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3171,"src":"17471:8:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":3262,"name":"gasleft","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-7,"src":"17482:7:12","typeDescriptions":{"typeIdentifier":"t_function_gasleft_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":3263,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17482:9:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"17471:20:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"17457:34:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3266,"nodeType":"ExpressionStatement","src":"17457:34:12"}]},{"expression":{"arguments":[{"arguments":[{"arguments":[{"id":3273,"name":"requiredGas","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3161,"src":"17542:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3271,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"17525:3:12","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":3272,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"17529:12:12","memberName":"encodePacked","nodeType":"MemberAccess","src":"17525:16:12","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":3274,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17525:29:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3270,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17518:6:12","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":3269,"name":"string","nodeType":"ElementaryTypeName","src":"17518:6:12","typeDescriptions":{}}},"id":3275,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17518:37:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3268,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"17511:6:12","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":3276,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17511:45:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3277,"nodeType":"ExpressionStatement","src":"17511:45:12"}]},"documentation":{"id":3146,"nodeType":"StructuredDocumentation","src":"15168:942:12","text":" @dev Allows to estimate a transaction.\n @notice This method is only meant for estimation purpose, therefore the call will always revert and encode the result in the revert data.\n @notice Call this method to get an estimate of the handlePayment costs that are deducted with `execTransaction`\n @param gasUsed Gas used by the transaction.\n @param baseGas Gas costs that are independent of the transaction execution\n (e.g. base transaction fee, signature check, payment of the refund, emitted events).\n @param gasPrice Gas price / TokenGasPrice (gas price in the context of token using offchain price feeds)\n that should be used for the payment calculation.\n @param tokenGasPriceFactor factor by which calculated token gas price is already multiplied.\n @param gasToken Token address (or 0 if ETH) that is used for the payment.\n @return requiredGas Estimate of refunds"},"functionSelector":"a18f51e5","id":3279,"implemented":true,"kind":"function","modifiers":[],"name":"handlePaymentRevert","nameLocation":"16124:19:12","nodeType":"FunctionDefinition","parameters":{"id":3159,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3148,"mutability":"mutable","name":"gasUsed","nameLocation":"16161:7:12","nodeType":"VariableDeclaration","scope":3279,"src":"16153:15:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3147,"name":"uint256","nodeType":"ElementaryTypeName","src":"16153:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3150,"mutability":"mutable","name":"baseGas","nameLocation":"16186:7:12","nodeType":"VariableDeclaration","scope":3279,"src":"16178:15:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3149,"name":"uint256","nodeType":"ElementaryTypeName","src":"16178:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3152,"mutability":"mutable","name":"gasPrice","nameLocation":"16211:8:12","nodeType":"VariableDeclaration","scope":3279,"src":"16203:16:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3151,"name":"uint256","nodeType":"ElementaryTypeName","src":"16203:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3154,"mutability":"mutable","name":"tokenGasPriceFactor","nameLocation":"16237:19:12","nodeType":"VariableDeclaration","scope":3279,"src":"16229:27:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3153,"name":"uint256","nodeType":"ElementaryTypeName","src":"16229:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3156,"mutability":"mutable","name":"gasToken","nameLocation":"16274:8:12","nodeType":"VariableDeclaration","scope":3279,"src":"16266:16:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3155,"name":"address","nodeType":"ElementaryTypeName","src":"16266:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3158,"mutability":"mutable","name":"refundReceiver","nameLocation":"16308:14:12","nodeType":"VariableDeclaration","scope":3279,"src":"16292:30:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":3157,"name":"address","nodeType":"ElementaryTypeName","src":"16292:15:12","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"}],"src":"16143:185:12"},"returnParameters":{"id":3162,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3161,"mutability":"mutable","name":"requiredGas","nameLocation":"16355:11:12","nodeType":"VariableDeclaration","scope":3279,"src":"16347:19:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3160,"name":"uint256","nodeType":"ElementaryTypeName","src":"16347:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16346:21:12"},"scope":4046,"src":"16115:1448:12","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":3433,"nodeType":"Block","src":"18036:2546:12","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3291,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3288,"name":"signatures","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3284,"src":"18054:10:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3289,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"18065:6:12","memberName":"length","nodeType":"MemberAccess","src":"18054:17:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"hexValue":"3635","id":3290,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18075:2:12","typeDescriptions":{"typeIdentifier":"t_rational_65_by_1","typeString":"int_const 65"},"value":"65"},"src":"18054:23:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c6964207369676e617475726573206c656e677468","id":3292,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"18079:27:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_d0b524dd549386002789afc6d16d708a98f1e9909bfe83a3356da0081fd34443","typeString":"literal_string \"Invalid signatures length\""},"value":"Invalid signatures length"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_d0b524dd549386002789afc6d16d708a98f1e9909bfe83a3356da0081fd34443","typeString":"literal_string \"Invalid signatures length\""}],"id":3287,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"18046:7:12","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3293,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18046:61:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3294,"nodeType":"ExpressionStatement","src":"18046:61:12"},{"assignments":[3296],"declarations":[{"constant":false,"id":3296,"mutability":"mutable","name":"v","nameLocation":"18123:1:12","nodeType":"VariableDeclaration","scope":3433,"src":"18117:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":3295,"name":"uint8","nodeType":"ElementaryTypeName","src":"18117:5:12","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":3297,"nodeType":"VariableDeclarationStatement","src":"18117:7:12"},{"assignments":[3299],"declarations":[{"constant":false,"id":3299,"mutability":"mutable","name":"r","nameLocation":"18142:1:12","nodeType":"VariableDeclaration","scope":3433,"src":"18134:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3298,"name":"bytes32","nodeType":"ElementaryTypeName","src":"18134:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":3300,"nodeType":"VariableDeclarationStatement","src":"18134:9:12"},{"assignments":[3302],"declarations":[{"constant":false,"id":3302,"mutability":"mutable","name":"s","nameLocation":"18161:1:12","nodeType":"VariableDeclaration","scope":3433,"src":"18153:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3301,"name":"bytes32","nodeType":"ElementaryTypeName","src":"18153:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":3303,"nodeType":"VariableDeclarationStatement","src":"18153:9:12"},{"assignments":[3305],"declarations":[{"constant":false,"id":3305,"mutability":"mutable","name":"_signer","nameLocation":"18180:7:12","nodeType":"VariableDeclaration","scope":3433,"src":"18172:15:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3304,"name":"address","nodeType":"ElementaryTypeName","src":"18172:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":3306,"nodeType":"VariableDeclarationStatement","src":"18172:15:12"},{"expression":{"id":3314,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"components":[{"id":3307,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3296,"src":"18198:1:12","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":3308,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3299,"src":"18201:1:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3309,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3302,"src":"18204:1:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":3310,"isConstant":false,"isInlineArray":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"TupleExpression","src":"18197:9:12","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint8_$_t_bytes32_$_t_bytes32_$","typeString":"tuple(uint8,bytes32,bytes32)"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3312,"name":"signatures","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3284,"src":"18224:10:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3311,"name":"signatureSplit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5274,"src":"18209:14:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_uint8_$_t_bytes32_$_t_bytes32_$","typeString":"function (bytes memory) pure returns (uint8,bytes32,bytes32)"}},"id":3313,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18209:26:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint8_$_t_bytes32_$_t_bytes32_$","typeString":"tuple(uint8,bytes32,bytes32)"}},"src":"18197:38:12","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3315,"nodeType":"ExpressionStatement","src":"18197:38:12"},{"condition":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":3318,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3316,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3296,"src":"18249:1:12","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3317,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18254:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"18249:6:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":3395,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3393,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3296,"src":"20038:1:12","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3330","id":3394,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20042:2:12","typeDescriptions":{"typeIdentifier":"t_rational_30_by_1","typeString":"int_const 30"},"value":"30"},"src":"20038:6:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":3421,"nodeType":"Block","src":"20438:67:12","statements":[{"expression":{"id":3419,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"components":[{"id":3411,"name":"_signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3305,"src":"20453:7:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},null],"id":3412,"isConstant":false,"isInlineArray":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"TupleExpression","src":"20452:11:12","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$__$","typeString":"tuple(address,)"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3415,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3296,"src":"20486:1:12","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":3416,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3299,"src":"20489:1:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3417,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3302,"src":"20492:1:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":3413,"name":"dataHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3282,"src":"20466:8:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3414,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"20475:10:12","memberName":"tryRecover","nodeType":"MemberAccess","referencedDeclaration":1256,"src":"20466:19:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$998_$bound_to$_t_bytes32_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError)"}},"id":3418,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20466:28:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$998_$","typeString":"tuple(address,enum ECDSA.RecoverError)"}},"src":"20452:42:12","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3420,"nodeType":"ExpressionStatement","src":"20452:42:12"}]},"id":3422,"nodeType":"IfStatement","src":"20034:471:12","trueBody":{"id":3410,"nodeType":"Block","src":"20046:386:12","statements":[{"expression":{"id":3408,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"components":[{"id":3396,"name":"_signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3305,"src":"20289:7:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},null],"id":3397,"isConstant":false,"isInlineArray":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"TupleExpression","src":"20288:11:12","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$__$","typeString":"tuple(address,)"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":3404,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3402,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3296,"src":"20364:1:12","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"34","id":3403,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20368:1:12","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"20364:5:12","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":3405,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3299,"src":"20387:1:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3406,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3302,"src":"20406:1:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":3398,"name":"dataHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3282,"src":"20302:8:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3399,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"20311:22:12","memberName":"toEthSignedMessageHash","nodeType":"MemberAccess","referencedDeclaration":1306,"src":"20302:31:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_bytes32_$bound_to$_t_bytes32_$","typeString":"function (bytes32) pure returns (bytes32)"}},"id":3400,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20302:33:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3401,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"20336:10:12","memberName":"tryRecover","nodeType":"MemberAccess","referencedDeclaration":1256,"src":"20302:44:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$998_$bound_to$_t_bytes32_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError)"}},"id":3407,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20302:119:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$998_$","typeString":"tuple(address,enum ECDSA.RecoverError)"}},"src":"20288:133:12","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3409,"nodeType":"ExpressionStatement","src":"20288:133:12"}]}},"id":3423,"nodeType":"IfStatement","src":"18245:2260:12","trueBody":{"id":3392,"nodeType":"Block","src":"18257:1771:12","statements":[{"expression":{"id":3330,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3319,"name":"_signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3305,"src":"18430:7:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"arguments":[{"arguments":[{"id":3326,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3299,"src":"18464:1:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3325,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"18456:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3324,"name":"uint256","nodeType":"ElementaryTypeName","src":"18456:7:12","typeDescriptions":{}}},"id":3327,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18456:10:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3323,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"18448:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":3322,"name":"uint160","nodeType":"ElementaryTypeName","src":"18448:7:12","typeDescriptions":{}}},"id":3328,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18448:19:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":3321,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"18440:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3320,"name":"address","nodeType":"ElementaryTypeName","src":"18440:7:12","typeDescriptions":{}}},"id":3329,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18440:28:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"18430:38:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3331,"nodeType":"ExpressionStatement","src":"18430:38:12"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3337,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3334,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3302,"src":"18713:1:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3333,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"18705:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3332,"name":"uint256","nodeType":"ElementaryTypeName","src":"18705:7:12","typeDescriptions":{}}},"id":3335,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18705:10:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"3635","id":3336,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18718:2:12","typeDescriptions":{"typeIdentifier":"t_rational_65_by_1","typeString":"int_const 65"},"value":"65"},"src":"18705:15:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3347,"nodeType":"IfStatement","src":"18701:90:12","trueBody":{"errorCall":{"arguments":[{"arguments":[{"id":3341,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3302,"src":"18782:1:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3340,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"18774:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3339,"name":"uint256","nodeType":"ElementaryTypeName","src":"18774:7:12","typeDescriptions":{}}},"id":3342,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18774:10:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"30","id":3343,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18786:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"hexValue":"30","id":3344,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18789:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3338,"name":"WrongContractSignatureFormat","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5013,"src":"18745:28:12","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256,uint256) pure"}},"id":3345,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18745:46:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3346,"nodeType":"RevertStatement","src":"18738:53:12"}},{"assignments":[3349],"declarations":[{"constant":false,"id":3349,"mutability":"mutable","name":"contractSignatureLen","nameLocation":"18935:20:12","nodeType":"VariableDeclaration","scope":3392,"src":"18927:28:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3348,"name":"uint256","nodeType":"ElementaryTypeName","src":"18927:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3350,"nodeType":"VariableDeclarationStatement","src":"18927:28:12"},{"AST":{"nodeType":"YulBlock","src":"19038:92:12","statements":[{"nodeType":"YulAssignment","src":"19056:60:12","value":{"arguments":[{"arguments":[{"arguments":[{"name":"signatures","nodeType":"YulIdentifier","src":"19094:10:12"},{"name":"s","nodeType":"YulIdentifier","src":"19106:1:12"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19090:3:12"},"nodeType":"YulFunctionCall","src":"19090:18:12"},{"kind":"number","nodeType":"YulLiteral","src":"19110:4:12","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19086:3:12"},"nodeType":"YulFunctionCall","src":"19086:29:12"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"19080:5:12"},"nodeType":"YulFunctionCall","src":"19080:36:12"},"variableNames":[{"name":"contractSignatureLen","nodeType":"YulIdentifier","src":"19056:20:12"}]}]},"evmVersion":"london","externalReferences":[{"declaration":3349,"isOffset":false,"isSlot":false,"src":"19056:20:12","valueSize":1},{"declaration":3302,"isOffset":false,"isSlot":false,"src":"19106:1:12","valueSize":1},{"declaration":3284,"isOffset":false,"isSlot":false,"src":"19094:10:12","valueSize":1}],"id":3351,"nodeType":"InlineAssembly","src":"19029:101:12"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3362,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3359,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3357,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3354,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3302,"src":"19155:1:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3353,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"19147:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3352,"name":"uint256","nodeType":"ElementaryTypeName","src":"19147:7:12","typeDescriptions":{}}},"id":3355,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19147:10:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"3332","id":3356,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19160:2:12","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"19147:15:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":3358,"name":"contractSignatureLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3349,"src":"19165:20:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"19147:38:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"id":3360,"name":"signatures","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3284,"src":"19188:10:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3361,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"19199:6:12","memberName":"length","nodeType":"MemberAccess","src":"19188:17:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"19147:58:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3373,"nodeType":"IfStatement","src":"19143:246:12","trueBody":{"errorCall":{"arguments":[{"arguments":[{"id":3366,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3302,"src":"19288:1:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3365,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"19280:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3364,"name":"uint256","nodeType":"ElementaryTypeName","src":"19280:7:12","typeDescriptions":{}}},"id":3367,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19280:10:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3368,"name":"contractSignatureLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3349,"src":"19312:20:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":3369,"name":"signatures","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3284,"src":"19354:10:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3370,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"19365:6:12","memberName":"length","nodeType":"MemberAccess","src":"19354:17:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3363,"name":"WrongContractSignatureFormat","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5013,"src":"19230:28:12","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256,uint256) pure"}},"id":3371,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19230:159:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3372,"nodeType":"RevertStatement","src":"19223:166:12"}},{"assignments":[3375],"declarations":[{"constant":false,"id":3375,"mutability":"mutable","name":"contractSignature","nameLocation":"19448:17:12","nodeType":"VariableDeclaration","scope":3392,"src":"19435:30:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3374,"name":"bytes","nodeType":"ElementaryTypeName","src":"19435:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":3376,"nodeType":"VariableDeclarationStatement","src":"19435:30:12"},{"AST":{"nodeType":"YulBlock","src":"19548:217:12","statements":[{"nodeType":"YulAssignment","src":"19701:50:12","value":{"arguments":[{"arguments":[{"name":"signatures","nodeType":"YulIdentifier","src":"19730:10:12"},{"name":"s","nodeType":"YulIdentifier","src":"19742:1:12"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19726:3:12"},"nodeType":"YulFunctionCall","src":"19726:18:12"},{"kind":"number","nodeType":"YulLiteral","src":"19746:4:12","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19722:3:12"},"nodeType":"YulFunctionCall","src":"19722:29:12"},"variableNames":[{"name":"contractSignature","nodeType":"YulIdentifier","src":"19701:17:12"}]}]},"evmVersion":"london","externalReferences":[{"declaration":3375,"isOffset":false,"isSlot":false,"src":"19701:17:12","valueSize":1},{"declaration":3302,"isOffset":false,"isSlot":false,"src":"19742:1:12","valueSize":1},{"declaration":3284,"isOffset":false,"isSlot":false,"src":"19730:10:12","valueSize":1}],"id":3377,"nodeType":"InlineAssembly","src":"19539:226:12"},{"condition":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":3386,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3382,"name":"dataHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3282,"src":"19866:8:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3383,"name":"contractSignature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3375,"src":"19896:17:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"arguments":[{"id":3379,"name":"_signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3305,"src":"19819:7:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3378,"name":"ISignatureValidator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5541,"src":"19799:19:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ISignatureValidator_$5541_$","typeString":"type(contract ISignatureValidator)"}},"id":3380,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19799:28:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_ISignatureValidator_$5541","typeString":"contract ISignatureValidator"}},"id":3381,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"19828:16:12","memberName":"isValidSignature","nodeType":"MemberAccess","referencedDeclaration":5540,"src":"19799:45:12","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_bytes4_$","typeString":"function (bytes32,bytes memory) view external returns (bytes4)"}},"id":3384,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19799:132:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":3385,"name":"EIP1271_MAGIC_VALUE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5527,"src":"19935:19:12","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"19799:155:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3391,"nodeType":"IfStatement","src":"19778:239:12","trueBody":{"errorCall":{"arguments":[{"id":3388,"name":"contractSignature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3375,"src":"19999:17:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3387,"name":"WrongContractSignature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5018,"src":"19976:22:12","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_bytes_memory_ptr_$returns$__$","typeString":"function (bytes memory) pure"}},"id":3389,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19976:41:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3390,"nodeType":"RevertStatement","src":"19969:48:12"}}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3426,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3424,"name":"_signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3305,"src":"20518:7:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":3425,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2499,"src":"20529:5:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"20518:16:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3432,"nodeType":"IfStatement","src":"20514:61:12","trueBody":{"errorCall":{"arguments":[{"id":3428,"name":"_signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3305,"src":"20560:7:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3429,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2499,"src":"20569:5:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":3427,"name":"InvalidSignature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5025,"src":"20543:16:12","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_address_$returns$__$","typeString":"function (address,address) pure"}},"id":3430,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20543:32:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3431,"nodeType":"RevertStatement","src":"20536:39:12"}}]},"documentation":{"id":3280,"nodeType":"StructuredDocumentation","src":"17569:352:12","text":" @dev Checks whether the signature provided is valid for the provided data, hash. Will revert otherwise.\n @param dataHash Hash of the data (could be either a message hash or transaction hash)\n @param signatures Signature data that should be verified. Can be ECDSA signature, contract signature (EIP-1271) or approved hash."},"functionSelector":"ed516d51","id":3434,"implemented":true,"kind":"function","modifiers":[],"name":"checkSignatures","nameLocation":"17935:15:12","nodeType":"FunctionDefinition","parameters":{"id":3285,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3282,"mutability":"mutable","name":"dataHash","nameLocation":"17968:8:12","nodeType":"VariableDeclaration","scope":3434,"src":"17960:16:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3281,"name":"bytes32","nodeType":"ElementaryTypeName","src":"17960:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3284,"mutability":"mutable","name":"signatures","nameLocation":"17999:10:12","nodeType":"VariableDeclaration","scope":3434,"src":"17986:23:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3283,"name":"bytes","nodeType":"ElementaryTypeName","src":"17986:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"17950:65:12"},"returnParameters":{"id":3286,"nodeType":"ParameterList","parameters":[],"src":"18036:0:12"},"scope":4046,"src":"17926:2656:12","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":3481,"nodeType":"Block","src":"21437:396:12","statements":[{"assignments":[3450],"declarations":[{"constant":false,"id":3450,"mutability":"mutable","name":"startGas","nameLocation":"21455:8:12","nodeType":"VariableDeclaration","scope":3481,"src":"21447:16:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3449,"name":"uint256","nodeType":"ElementaryTypeName","src":"21447:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3453,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":3451,"name":"gasleft","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-7,"src":"21466:7:12","typeDescriptions":{"typeIdentifier":"t_function_gasleft_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":3452,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21466:9:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"21447:28:12"},{"condition":{"id":3462,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"21576:47:12","subExpression":{"arguments":[{"id":3455,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3437,"src":"21585:2:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3456,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3439,"src":"21589:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3457,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3441,"src":"21596:4:12","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},{"id":3458,"name":"operation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3444,"src":"21602:9:12","typeDescriptions":{"typeIdentifier":"t_enum$_Operation_$4930","typeString":"enum Enum.Operation"}},{"arguments":[],"expression":{"argumentTypes":[],"id":3459,"name":"gasleft","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-7,"src":"21613:7:12","typeDescriptions":{"typeIdentifier":"t_function_gasleft_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":3460,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21613:9:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"},{"typeIdentifier":"t_enum$_Operation_$4930","typeString":"enum Enum.Operation"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3454,"name":"execute","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4432,"src":"21577:7:12","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$_t_enum$_Operation_$4930_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256,bytes memory,enum Enum.Operation,uint256) returns (bool)"}},"id":3461,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21577:46:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3466,"nodeType":"IfStatement","src":"21572:89:12","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":3463,"name":"ExecutionFailed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5028,"src":"21644:15:12","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":3464,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21644:17:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3465,"nodeType":"RevertStatement","src":"21637:24:12"}},{"id":3480,"nodeType":"UncheckedBlock","src":"21738:89:12","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3475,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3472,"name":"startGas","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3450,"src":"21793:8:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":3473,"name":"gasleft","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-7,"src":"21804:7:12","typeDescriptions":{"typeIdentifier":"t_function_gasleft_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":3474,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21804:9:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"21793:20:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3470,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"21776:3:12","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":3471,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"21780:12:12","memberName":"encodePacked","nodeType":"MemberAccess","src":"21776:16:12","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":3476,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21776:38:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3469,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"21769:6:12","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":3468,"name":"string","nodeType":"ElementaryTypeName","src":"21769:6:12","typeDescriptions":{}}},"id":3477,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21769:46:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3467,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"21762:6:12","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":3478,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21762:54:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3479,"nodeType":"ExpressionStatement","src":"21762:54:12"}]}]},"documentation":{"id":3435,"nodeType":"StructuredDocumentation","src":"20588:682:12","text":" @dev Allows to estimate a transaction.\n      This method is only meant for estimation purpose, therefore the call will always revert and encode the result in the revert data.\n      Since the `estimateGas` function includes refunds, call this method to get an estimated of the costs that are deducted from the wallet with `execTransaction`\n @param to Destination address of the transaction.\n @param value Ether value of transaction.\n @param data Data payload of transaction.\n @param operation Operation type of transaction.\n @return Estimate without refunds and overhead fees (base transaction and payload data gas costs)."},"functionSelector":"c4ca3a9c","id":3482,"implemented":true,"kind":"function","modifiers":[],"name":"requiredTxGas","nameLocation":"21284:13:12","nodeType":"FunctionDefinition","parameters":{"id":3445,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3437,"mutability":"mutable","name":"to","nameLocation":"21315:2:12","nodeType":"VariableDeclaration","scope":3482,"src":"21307:10:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3436,"name":"address","nodeType":"ElementaryTypeName","src":"21307:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3439,"mutability":"mutable","name":"value","nameLocation":"21335:5:12","nodeType":"VariableDeclaration","scope":3482,"src":"21327:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3438,"name":"uint256","nodeType":"ElementaryTypeName","src":"21327:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3441,"mutability":"mutable","name":"data","nameLocation":"21365:4:12","nodeType":"VariableDeclaration","scope":3482,"src":"21350:19:12","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":3440,"name":"bytes","nodeType":"ElementaryTypeName","src":"21350:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":3444,"mutability":"mutable","name":"operation","nameLocation":"21394:9:12","nodeType":"VariableDeclaration","scope":3482,"src":"21379:24:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Operation_$4930","typeString":"enum Enum.Operation"},"typeName":{"id":3443,"nodeType":"UserDefinedTypeName","pathNode":{"id":3442,"name":"Enum.Operation","nameLocations":["21379:4:12","21384:9:12"],"nodeType":"IdentifierPath","referencedDeclaration":4930,"src":"21379:14:12"},"referencedDeclaration":4930,"src":"21379:14:12","typeDescriptions":{"typeIdentifier":"t_enum$_Operation_$4930","typeString":"enum Enum.Operation"}},"visibility":"internal"}],"src":"21297:112:12"},"returnParameters":{"id":3448,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3447,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3482,"src":"21428:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3446,"name":"uint256","nodeType":"ElementaryTypeName","src":"21428:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"21427:9:12"},"scope":4046,"src":"21275:558:12","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":3541,"nodeType":"Block","src":"23042:534:12","statements":[{"assignments":[3513],"declarations":[{"constant":false,"id":3513,"mutability":"mutable","name":"_tx","nameLocation":"23071:3:12","nodeType":"VariableDeclaration","scope":3541,"src":"23052:22:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Transaction_$2240_memory_ptr","typeString":"struct Transaction"},"typeName":{"id":3512,"nodeType":"UserDefinedTypeName","pathNode":{"id":3511,"name":"Transaction","nameLocations":["23052:11:12"],"nodeType":"IdentifierPath","referencedDeclaration":2240,"src":"23052:11:12"},"referencedDeclaration":2240,"src":"23052:11:12","typeDescriptions":{"typeIdentifier":"t_struct$_Transaction_$2240_storage_ptr","typeString":"struct Transaction"}},"visibility":"internal"}],"id":3521,"initialValue":{"arguments":[{"id":3515,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3485,"src":"23107:2:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3516,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3487,"src":"23130:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3517,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3489,"src":"23155:4:12","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},{"id":3518,"name":"operation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3492,"src":"23184:9:12","typeDescriptions":{"typeIdentifier":"t_enum$_Operation_$4930","typeString":"enum Enum.Operation"}},{"id":3519,"name":"targetTxGas","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3494,"src":"23220:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"},{"typeIdentifier":"t_enum$_Operation_$4930","typeString":"enum Enum.Operation"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3514,"name":"Transaction","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2240,"src":"23077:11:12","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_Transaction_$2240_storage_ptr_$","typeString":"type(struct Transaction storage pointer)"}},"id":3520,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["23103:2:12","23123:5:12","23149:4:12","23173:9:12","23207:11:12"],"names":["to","value","data","operation","targetTxGas"],"nodeType":"FunctionCall","src":"23077:165:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Transaction_$2240_memory_ptr","typeString":"struct Transaction memory"}},"nodeType":"VariableDeclarationStatement","src":"23052:190:12"},{"assignments":[3524],"declarations":[{"constant":false,"id":3524,"mutability":"mutable","name":"refundInfo","nameLocation":"23269:10:12","nodeType":"VariableDeclaration","scope":3541,"src":"23252:27:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_FeeRefund_$2251_memory_ptr","typeString":"struct FeeRefund"},"typeName":{"id":3523,"nodeType":"UserDefinedTypeName","pathNode":{"id":3522,"name":"FeeRefund","nameLocations":["23252:9:12"],"nodeType":"IdentifierPath","referencedDeclaration":2251,"src":"23252:9:12"},"referencedDeclaration":2251,"src":"23252:9:12","typeDescriptions":{"typeIdentifier":"t_struct$_FeeRefund_$2251_storage_ptr","typeString":"struct FeeRefund"}},"visibility":"internal"}],"id":3532,"initialValue":{"arguments":[{"id":3526,"name":"baseGas","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3496,"src":"23315:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3527,"name":"gasPrice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3498,"src":"23346:8:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3528,"name":"tokenGasPriceFactor","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3500,"src":"23389:19:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3529,"name":"gasToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3502,"src":"23432:8:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3530,"name":"refundReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3504,"src":"23470:14:12","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address_payable","typeString":"address payable"}],"id":3525,"name":"FeeRefund","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2251,"src":"23282:9:12","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_FeeRefund_$2251_storage_ptr_$","typeString":"type(struct FeeRefund storage pointer)"}},"id":3531,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["23306:7:12","23336:8:12","23368:19:12","23422:8:12","23454:14:12"],"names":["baseGas","gasPrice","tokenGasPriceFactor","gasToken","refundReceiver"],"nodeType":"FunctionCall","src":"23282:213:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_FeeRefund_$2251_memory_ptr","typeString":"struct FeeRefund memory"}},"nodeType":"VariableDeclarationStatement","src":"23252:243:12"},{"expression":{"arguments":[{"arguments":[{"id":3535,"name":"_tx","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3513,"src":"23544:3:12","typeDescriptions":{"typeIdentifier":"t_struct$_Transaction_$2240_memory_ptr","typeString":"struct Transaction memory"}},{"id":3536,"name":"refundInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3524,"src":"23549:10:12","typeDescriptions":{"typeIdentifier":"t_struct$_FeeRefund_$2251_memory_ptr","typeString":"struct FeeRefund memory"}},{"id":3537,"name":"_nonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3506,"src":"23561:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Transaction_$2240_memory_ptr","typeString":"struct Transaction memory"},{"typeIdentifier":"t_struct$_FeeRefund_$2251_memory_ptr","typeString":"struct FeeRefund memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3534,"name":"encodeTransactionData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3605,"src":"23522:21:12","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Transaction_$2240_memory_ptr_$_t_struct$_FeeRefund_$2251_memory_ptr_$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (struct Transaction memory,struct FeeRefund memory,uint256) view returns (bytes memory)"}},"id":3538,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23522:46:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3533,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"23512:9:12","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":3539,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23512:57:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":3510,"id":3540,"nodeType":"Return","src":"23505:64:12"}]},"documentation":{"id":3483,"nodeType":"StructuredDocumentation","src":"21839:821:12","text":" @dev Returns hash to be signed by owner.\n @param to Destination address.\n @param value Ether value.\n @param data Data payload.\n @param operation Operation type.\n @param targetTxGas Fas that should be used for the internal Smart Account transaction.\n @param baseGas Additional Gas costs for data used to trigger the transaction.\n @param gasPrice Maximum gas price/ token gas price that should be used for this transaction.\n @param tokenGasPriceFactor factor by which calculated token gas price is already multiplied.\n @param gasToken Token address (or 0 if ETH) that is used for the payment.\n @param refundReceiver Address of receiver of gas payment (or 0 if tx.origin).\n @param _nonce Transaction nonce.\n @return Transaction hash."},"functionSelector":"abc1b745","id":3542,"implemented":true,"kind":"function","modifiers":[],"name":"getTransactionHash","nameLocation":"22674:18:12","nodeType":"FunctionDefinition","parameters":{"id":3507,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3485,"mutability":"mutable","name":"to","nameLocation":"22710:2:12","nodeType":"VariableDeclaration","scope":3542,"src":"22702:10:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3484,"name":"address","nodeType":"ElementaryTypeName","src":"22702:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3487,"mutability":"mutable","name":"value","nameLocation":"22730:5:12","nodeType":"VariableDeclaration","scope":3542,"src":"22722:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3486,"name":"uint256","nodeType":"ElementaryTypeName","src":"22722:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3489,"mutability":"mutable","name":"data","nameLocation":"22760:4:12","nodeType":"VariableDeclaration","scope":3542,"src":"22745:19:12","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":3488,"name":"bytes","nodeType":"ElementaryTypeName","src":"22745:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":3492,"mutability":"mutable","name":"operation","nameLocation":"22789:9:12","nodeType":"VariableDeclaration","scope":3542,"src":"22774:24:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Operation_$4930","typeString":"enum Enum.Operation"},"typeName":{"id":3491,"nodeType":"UserDefinedTypeName","pathNode":{"id":3490,"name":"Enum.Operation","nameLocations":["22774:4:12","22779:9:12"],"nodeType":"IdentifierPath","referencedDeclaration":4930,"src":"22774:14:12"},"referencedDeclaration":4930,"src":"22774:14:12","typeDescriptions":{"typeIdentifier":"t_enum$_Operation_$4930","typeString":"enum Enum.Operation"}},"visibility":"internal"},{"constant":false,"id":3494,"mutability":"mutable","name":"targetTxGas","nameLocation":"22816:11:12","nodeType":"VariableDeclaration","scope":3542,"src":"22808:19:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3493,"name":"uint256","nodeType":"ElementaryTypeName","src":"22808:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3496,"mutability":"mutable","name":"baseGas","nameLocation":"22845:7:12","nodeType":"VariableDeclaration","scope":3542,"src":"22837:15:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3495,"name":"uint256","nodeType":"ElementaryTypeName","src":"22837:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3498,"mutability":"mutable","name":"gasPrice","nameLocation":"22870:8:12","nodeType":"VariableDeclaration","scope":3542,"src":"22862:16:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3497,"name":"uint256","nodeType":"ElementaryTypeName","src":"22862:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3500,"mutability":"mutable","name":"tokenGasPriceFactor","nameLocation":"22896:19:12","nodeType":"VariableDeclaration","scope":3542,"src":"22888:27:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3499,"name":"uint256","nodeType":"ElementaryTypeName","src":"22888:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3502,"mutability":"mutable","name":"gasToken","nameLocation":"22933:8:12","nodeType":"VariableDeclaration","scope":3542,"src":"22925:16:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3501,"name":"address","nodeType":"ElementaryTypeName","src":"22925:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3504,"mutability":"mutable","name":"refundReceiver","nameLocation":"22967:14:12","nodeType":"VariableDeclaration","scope":3542,"src":"22951:30:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":3503,"name":"address","nodeType":"ElementaryTypeName","src":"22951:15:12","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"},{"constant":false,"id":3506,"mutability":"mutable","name":"_nonce","nameLocation":"22999:6:12","nodeType":"VariableDeclaration","scope":3542,"src":"22991:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3505,"name":"uint256","nodeType":"ElementaryTypeName","src":"22991:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"22692:319:12"},"returnParameters":{"id":3510,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3509,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3542,"src":"23033:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3508,"name":"bytes32","nodeType":"ElementaryTypeName","src":"23033:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"23032:9:12"},"scope":4046,"src":"22665:911:12","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":3604,"nodeType":"Block","src":"24070:693:12","statements":[{"assignments":[3557],"declarations":[{"constant":false,"id":3557,"mutability":"mutable","name":"accountTxHash","nameLocation":"24088:13:12","nodeType":"VariableDeclaration","scope":3604,"src":"24080:21:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3556,"name":"bytes32","nodeType":"ElementaryTypeName","src":"24080:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":3587,"initialValue":{"arguments":[{"arguments":[{"id":3561,"name":"ACCOUNT_TX_TYPEHASH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2497,"src":"24155:19:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":3562,"name":"_tx","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3546,"src":"24192:3:12","typeDescriptions":{"typeIdentifier":"t_struct$_Transaction_$2240_memory_ptr","typeString":"struct Transaction memory"}},"id":3563,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"24196:2:12","memberName":"to","nodeType":"MemberAccess","referencedDeclaration":2230,"src":"24192:6:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":3564,"name":"_tx","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3546,"src":"24216:3:12","typeDescriptions":{"typeIdentifier":"t_struct$_Transaction_$2240_memory_ptr","typeString":"struct Transaction memory"}},"id":3565,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"24220:5:12","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":2235,"src":"24216:9:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"expression":{"id":3567,"name":"_tx","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3546,"src":"24253:3:12","typeDescriptions":{"typeIdentifier":"t_struct$_Transaction_$2240_memory_ptr","typeString":"struct Transaction memory"}},"id":3568,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"24257:4:12","memberName":"data","nodeType":"MemberAccess","referencedDeclaration":2237,"src":"24253:8:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3566,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"24243:9:12","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":3569,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24243:19:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":3570,"name":"_tx","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3546,"src":"24280:3:12","typeDescriptions":{"typeIdentifier":"t_struct$_Transaction_$2240_memory_ptr","typeString":"struct Transaction memory"}},"id":3571,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"24284:9:12","memberName":"operation","nodeType":"MemberAccess","referencedDeclaration":2233,"src":"24280:13:12","typeDescriptions":{"typeIdentifier":"t_enum$_Operation_$4930","typeString":"enum Enum.Operation"}},{"expression":{"id":3572,"name":"_tx","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3546,"src":"24311:3:12","typeDescriptions":{"typeIdentifier":"t_struct$_Transaction_$2240_memory_ptr","typeString":"struct Transaction memory"}},"id":3573,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"24315:11:12","memberName":"targetTxGas","nodeType":"MemberAccess","referencedDeclaration":2239,"src":"24311:15:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":3574,"name":"refundInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3549,"src":"24344:10:12","typeDescriptions":{"typeIdentifier":"t_struct$_FeeRefund_$2251_memory_ptr","typeString":"struct FeeRefund memory"}},"id":3575,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"24355:7:12","memberName":"baseGas","nodeType":"MemberAccess","referencedDeclaration":2242,"src":"24344:18:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":3576,"name":"refundInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3549,"src":"24380:10:12","typeDescriptions":{"typeIdentifier":"t_struct$_FeeRefund_$2251_memory_ptr","typeString":"struct FeeRefund memory"}},"id":3577,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"24391:8:12","memberName":"gasPrice","nodeType":"MemberAccess","referencedDeclaration":2244,"src":"24380:19:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":3578,"name":"refundInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3549,"src":"24417:10:12","typeDescriptions":{"typeIdentifier":"t_struct$_FeeRefund_$2251_memory_ptr","typeString":"struct FeeRefund memory"}},"id":3579,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"24428:19:12","memberName":"tokenGasPriceFactor","nodeType":"MemberAccess","referencedDeclaration":2246,"src":"24417:30:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":3580,"name":"refundInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3549,"src":"24465:10:12","typeDescriptions":{"typeIdentifier":"t_struct$_FeeRefund_$2251_memory_ptr","typeString":"struct FeeRefund memory"}},"id":3581,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"24476:8:12","memberName":"gasToken","nodeType":"MemberAccess","referencedDeclaration":2248,"src":"24465:19:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":3582,"name":"refundInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3549,"src":"24502:10:12","typeDescriptions":{"typeIdentifier":"t_struct$_FeeRefund_$2251_memory_ptr","typeString":"struct FeeRefund memory"}},"id":3583,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"24513:14:12","memberName":"refundReceiver","nodeType":"MemberAccess","referencedDeclaration":2250,"src":"24502:25:12","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},{"id":3584,"name":"_nonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3551,"src":"24545:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_enum$_Operation_$4930","typeString":"enum Enum.Operation"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address_payable","typeString":"address payable"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3559,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"24127:3:12","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":3560,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"24131:6:12","memberName":"encode","nodeType":"MemberAccess","src":"24127:10:12","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":3585,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24127:438:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3558,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"24104:9:12","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":3586,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24104:471:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"24080:495:12"},{"expression":{"arguments":[{"arguments":[{"hexValue":"30783139","id":3593,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24641:4:12","typeDescriptions":{"typeIdentifier":"t_rational_25_by_1","typeString":"int_const 25"},"value":"0x19"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_25_by_1","typeString":"int_const 25"}],"id":3592,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"24634:6:12","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":3591,"name":"bytes1","nodeType":"ElementaryTypeName","src":"24634:6:12","typeDescriptions":{}}},"id":3594,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24634:12:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},{"arguments":[{"hexValue":"30783031","id":3597,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24671:4:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"0x01"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"}],"id":3596,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"24664:6:12","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":3595,"name":"bytes1","nodeType":"ElementaryTypeName","src":"24664:6:12","typeDescriptions":{}}},"id":3598,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24664:12:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},{"arguments":[],"expression":{"argumentTypes":[],"id":3599,"name":"domainSeparator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2757,"src":"24694:15:12","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bytes32_$","typeString":"function () view returns (bytes32)"}},"id":3600,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24694:17:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3601,"name":"accountTxHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3557,"src":"24729:13:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes1","typeString":"bytes1"},{"typeIdentifier":"t_bytes1","typeString":"bytes1"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":3589,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"24604:5:12","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3588,"name":"bytes","nodeType":"ElementaryTypeName","src":"24604:5:12","typeDescriptions":{}}},"id":3590,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"24610:6:12","memberName":"concat","nodeType":"MemberAccess","src":"24604:12:12","typeDescriptions":{"typeIdentifier":"t_function_bytesconcat_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":3602,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24604:152:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":3555,"id":3603,"nodeType":"Return","src":"24585:171:12"}]},"documentation":{"id":3543,"nodeType":"StructuredDocumentation","src":"23582:318:12","text":" @dev Returns the bytes that are hashed to be signed by owner.\n @param _tx The wallet transaction to be signed.\n @param refundInfo Required information for gas refunds.\n @param _nonce Transaction nonce.\n @return transactionHash bytes that are hashed to be signed by the owner."},"functionSelector":"5c0ba299","id":3605,"implemented":true,"kind":"function","modifiers":[],"name":"encodeTransactionData","nameLocation":"23914:21:12","nodeType":"FunctionDefinition","parameters":{"id":3552,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3546,"mutability":"mutable","name":"_tx","nameLocation":"23964:3:12","nodeType":"VariableDeclaration","scope":3605,"src":"23945:22:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Transaction_$2240_memory_ptr","typeString":"struct Transaction"},"typeName":{"id":3545,"nodeType":"UserDefinedTypeName","pathNode":{"id":3544,"name":"Transaction","nameLocations":["23945:11:12"],"nodeType":"IdentifierPath","referencedDeclaration":2240,"src":"23945:11:12"},"referencedDeclaration":2240,"src":"23945:11:12","typeDescriptions":{"typeIdentifier":"t_struct$_Transaction_$2240_storage_ptr","typeString":"struct Transaction"}},"visibility":"internal"},{"constant":false,"id":3549,"mutability":"mutable","name":"refundInfo","nameLocation":"23994:10:12","nodeType":"VariableDeclaration","scope":3605,"src":"23977:27:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_FeeRefund_$2251_memory_ptr","typeString":"struct FeeRefund"},"typeName":{"id":3548,"nodeType":"UserDefinedTypeName","pathNode":{"id":3547,"name":"FeeRefund","nameLocations":["23977:9:12"],"nodeType":"IdentifierPath","referencedDeclaration":2251,"src":"23977:9:12"},"referencedDeclaration":2251,"src":"23977:9:12","typeDescriptions":{"typeIdentifier":"t_struct$_FeeRefund_$2251_storage_ptr","typeString":"struct FeeRefund"}},"visibility":"internal"},{"constant":false,"id":3551,"mutability":"mutable","name":"_nonce","nameLocation":"24022:6:12","nodeType":"VariableDeclaration","scope":3605,"src":"24014:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3550,"name":"uint256","nodeType":"ElementaryTypeName","src":"24014:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"23935:99:12"},"returnParameters":{"id":3555,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3554,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3605,"src":"24056:12:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3553,"name":"bytes","nodeType":"ElementaryTypeName","src":"24056:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"24055:14:12"},"scope":4046,"src":"23905:858:12","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":3641,"nodeType":"Block","src":"25219:266:12","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3620,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3615,"name":"dest","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3608,"src":"25233:4:12","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":3618,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25249:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3617,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"25241:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3616,"name":"address","nodeType":"ElementaryTypeName","src":"25241:7:12","typeDescriptions":{}}},"id":3619,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25241:10:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"25233:18:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3624,"nodeType":"IfStatement","src":"25229:61:12","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":3621,"name":"TransferToZeroAddressAttempt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5031,"src":"25260:28:12","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":3622,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25260:30:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3623,"nodeType":"RevertStatement","src":"25253:37:12"}},{"assignments":[3626],"declarations":[{"constant":false,"id":3626,"mutability":"mutable","name":"success","nameLocation":"25305:7:12","nodeType":"VariableDeclaration","scope":3641,"src":"25300:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3625,"name":"bool","nodeType":"ElementaryTypeName","src":"25300:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":3627,"nodeType":"VariableDeclarationStatement","src":"25300:12:12"},{"AST":{"nodeType":"YulBlock","src":"25331:72:12","statements":[{"nodeType":"YulAssignment","src":"25345:48:12","value":{"arguments":[{"arguments":[],"functionName":{"name":"gas","nodeType":"YulIdentifier","src":"25361:3:12"},"nodeType":"YulFunctionCall","src":"25361:5:12"},{"name":"dest","nodeType":"YulIdentifier","src":"25368:4:12"},{"name":"amount","nodeType":"YulIdentifier","src":"25374:6:12"},{"kind":"number","nodeType":"YulLiteral","src":"25382:1:12","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"25385:1:12","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"25388:1:12","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"25391:1:12","type":"","value":"0"}],"functionName":{"name":"call","nodeType":"YulIdentifier","src":"25356:4:12"},"nodeType":"YulFunctionCall","src":"25356:37:12"},"variableNames":[{"name":"success","nodeType":"YulIdentifier","src":"25345:7:12"}]}]},"evmVersion":"london","externalReferences":[{"declaration":3610,"isOffset":false,"isSlot":false,"src":"25374:6:12","valueSize":1},{"declaration":3608,"isOffset":false,"isSlot":false,"src":"25368:4:12","valueSize":1},{"declaration":3626,"isOffset":false,"isSlot":false,"src":"25345:7:12","valueSize":1}],"id":3628,"nodeType":"InlineAssembly","src":"25322:81:12"},{"condition":{"id":3630,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"25416:8:12","subExpression":{"id":3629,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3626,"src":"25417:7:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3640,"nodeType":"IfStatement","src":"25412:66:12","trueBody":{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":3634,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25461:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3633,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"25453:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3632,"name":"address","nodeType":"ElementaryTypeName","src":"25453:7:12","typeDescriptions":{}}},"id":3635,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25453:10:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3636,"name":"dest","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3608,"src":"25465:4:12","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},{"id":3637,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3610,"src":"25471:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address_payable","typeString":"address payable"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3631,"name":"TokenTransferFailed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4962,"src":"25433:19:12","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256) pure"}},"id":3638,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25433:45:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3639,"nodeType":"RevertStatement","src":"25426:52:12"}}]},"documentation":{"id":3606,"nodeType":"StructuredDocumentation","src":"24769:370:12","text":" @dev Utility method to be able to transfer native tokens out of Smart Account\n @notice only owner/ signatory of Smart Account with enough gas to spend can call this method\n @notice While enabling multisig module and renouncing ownership this will not work\n @param dest Destination address\n @param amount Amount of native tokens"},"functionSelector":"a9059cbb","id":3642,"implemented":true,"kind":"function","modifiers":[{"id":3613,"kind":"modifierInvocation","modifierName":{"id":3612,"name":"onlyOwner","nameLocations":["25209:9:12"],"nodeType":"IdentifierPath","referencedDeclaration":2595,"src":"25209:9:12"},"nodeType":"ModifierInvocation","src":"25209:9:12"}],"name":"transfer","nameLocation":"25153:8:12","nodeType":"FunctionDefinition","parameters":{"id":3611,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3608,"mutability":"mutable","name":"dest","nameLocation":"25178:4:12","nodeType":"VariableDeclaration","scope":3642,"src":"25162:20:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":3607,"name":"address","nodeType":"ElementaryTypeName","src":"25162:15:12","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"},{"constant":false,"id":3610,"mutability":"mutable","name":"amount","nameLocation":"25192:6:12","nodeType":"VariableDeclaration","scope":3642,"src":"25184:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3609,"name":"uint256","nodeType":"ElementaryTypeName","src":"25184:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"25161:38:12"},"returnParameters":{"id":3614,"nodeType":"ParameterList","parameters":[],"src":"25219:0:12"},"scope":4046,"src":"25144:341:12","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":3677,"nodeType":"Block","src":"26016:188:12","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3659,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3654,"name":"dest","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3647,"src":"26030:4:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":3657,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26046:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3656,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"26038:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3655,"name":"address","nodeType":"ElementaryTypeName","src":"26038:7:12","typeDescriptions":{}}},"id":3658,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26038:10:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"26030:18:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3663,"nodeType":"IfStatement","src":"26026:61:12","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":3660,"name":"TransferToZeroAddressAttempt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5031,"src":"26057:28:12","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":3661,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26057:30:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3662,"nodeType":"RevertStatement","src":"26050:37:12"}},{"condition":{"id":3669,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"26101:35:12","subExpression":{"arguments":[{"id":3665,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3645,"src":"26116:5:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3666,"name":"dest","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3647,"src":"26123:4:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3667,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3649,"src":"26129:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3664,"name":"transferToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5224,"src":"26102:13:12","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,address,uint256) returns (bool)"}},"id":3668,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26102:34:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3676,"nodeType":"IfStatement","src":"26097:100:12","trueBody":{"errorCall":{"arguments":[{"id":3671,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3645,"src":"26177:5:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3672,"name":"dest","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3647,"src":"26184:4:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3673,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3649,"src":"26190:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3670,"name":"TokenTransferFailed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4962,"src":"26157:19:12","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256) pure"}},"id":3674,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26157:40:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3675,"nodeType":"RevertStatement","src":"26150:47:12"}}]},"documentation":{"id":3643,"nodeType":"StructuredDocumentation","src":"25491:406:12","text":" @dev Utility method to be able to transfer ERC20 tokens out of Smart Account\n @notice only owner/ signatory of Smart Account with enough gas to spend can call this method\n @notice While enabling multisig module and renouncing ownership this will not work\n @param token Token address\n @param dest Destination/ Receiver address\n @param amount Amount of tokens"},"functionSelector":"ac85dca7","id":3678,"implemented":true,"kind":"function","modifiers":[{"id":3652,"kind":"modifierInvocation","modifierName":{"id":3651,"name":"onlyOwner","nameLocations":["26006:9:12"],"nodeType":"IdentifierPath","referencedDeclaration":2595,"src":"26006:9:12"},"nodeType":"ModifierInvocation","src":"26006:9:12"}],"name":"pullTokens","nameLocation":"25911:10:12","nodeType":"FunctionDefinition","parameters":{"id":3650,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3645,"mutability":"mutable","name":"token","nameLocation":"25939:5:12","nodeType":"VariableDeclaration","scope":3678,"src":"25931:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3644,"name":"address","nodeType":"ElementaryTypeName","src":"25931:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3647,"mutability":"mutable","name":"dest","nameLocation":"25962:4:12","nodeType":"VariableDeclaration","scope":3678,"src":"25954:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3646,"name":"address","nodeType":"ElementaryTypeName","src":"25954:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3649,"mutability":"mutable","name":"amount","nameLocation":"25984:6:12","nodeType":"VariableDeclaration","scope":3678,"src":"25976:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3648,"name":"uint256","nodeType":"ElementaryTypeName","src":"25976:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"25921:75:12"},"returnParameters":{"id":3653,"nodeType":"ParameterList","parameters":[],"src":"26016:0:12"},"scope":4046,"src":"25902:302:12","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":3697,"nodeType":"Block","src":"26668:82:12","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":3688,"name":"_requireFromEntryPointOrOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2642,"src":"26678:29:12","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":3689,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26678:31:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3690,"nodeType":"ExpressionStatement","src":"26678:31:12"},{"expression":{"arguments":[{"id":3692,"name":"dest","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3681,"src":"26725:4:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3693,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3683,"src":"26731:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3694,"name":"func","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3685,"src":"26738:4:12","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}],"id":3691,"name":"_call","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3815,"src":"26719:5:12","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,uint256,bytes memory)"}},"id":3695,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26719:24:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3696,"nodeType":"ExpressionStatement","src":"26719:24:12"}]},"documentation":{"id":3679,"nodeType":"StructuredDocumentation","src":"26210:341:12","text":" @dev Execute a transaction (called directly from owner, or by entryPoint)\n @notice Name is optimized for this method to be cheaper to be called\n @param dest Address of the contract to call\n @param value Amount of native tokens to send along with the transaction\n @param func Data of the transaction"},"functionSelector":"00000772","id":3698,"implemented":true,"kind":"function","modifiers":[],"name":"executeCall_s1m","nameLocation":"26565:15:12","nodeType":"FunctionDefinition","parameters":{"id":3686,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3681,"mutability":"mutable","name":"dest","nameLocation":"26598:4:12","nodeType":"VariableDeclaration","scope":3698,"src":"26590:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3680,"name":"address","nodeType":"ElementaryTypeName","src":"26590:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3683,"mutability":"mutable","name":"value","nameLocation":"26620:5:12","nodeType":"VariableDeclaration","scope":3698,"src":"26612:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3682,"name":"uint256","nodeType":"ElementaryTypeName","src":"26612:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3685,"mutability":"mutable","name":"func","nameLocation":"26650:4:12","nodeType":"VariableDeclaration","scope":3698,"src":"26635:19:12","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":3684,"name":"bytes","nodeType":"ElementaryTypeName","src":"26635:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"26580:80:12"},"returnParameters":{"id":3687,"nodeType":"ParameterList","parameters":[],"src":"26668:0:12"},"scope":4046,"src":"26556:194:12","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":3714,"nodeType":"Block","src":"27129:51:12","statements":[{"expression":{"arguments":[{"id":3709,"name":"dest","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3701,"src":"27155:4:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3710,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3703,"src":"27161:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3711,"name":"func","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3705,"src":"27168:4:12","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}],"id":3708,"name":"executeCall_s1m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3698,"src":"27139:15:12","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_bytes_calldata_ptr_$returns$__$","typeString":"function (address,uint256,bytes calldata)"}},"id":3712,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27139:34:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3713,"nodeType":"ExpressionStatement","src":"27139:34:12"}]},"documentation":{"id":3699,"nodeType":"StructuredDocumentation","src":"26756:258:12","text":" @dev Interface function with the standard name for executeCall_s1m\n @param dest Address of the contract to call\n @param value Amount of native tokens to send along with the transaction\n @param func Data of the transaction"},"functionSelector":"9e5d4c49","id":3715,"implemented":true,"kind":"function","modifiers":[],"name":"executeCall","nameLocation":"27028:11:12","nodeType":"FunctionDefinition","parameters":{"id":3706,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3701,"mutability":"mutable","name":"dest","nameLocation":"27057:4:12","nodeType":"VariableDeclaration","scope":3715,"src":"27049:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3700,"name":"address","nodeType":"ElementaryTypeName","src":"27049:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3703,"mutability":"mutable","name":"value","nameLocation":"27079:5:12","nodeType":"VariableDeclaration","scope":3715,"src":"27071:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3702,"name":"uint256","nodeType":"ElementaryTypeName","src":"27071:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3705,"mutability":"mutable","name":"func","nameLocation":"27109:4:12","nodeType":"VariableDeclaration","scope":3715,"src":"27094:19:12","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":3704,"name":"bytes","nodeType":"ElementaryTypeName","src":"27094:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"27039:80:12"},"returnParameters":{"id":3707,"nodeType":"ParameterList","parameters":[],"src":"27129:0:12"},"scope":4046,"src":"27019:161:12","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":3782,"nodeType":"Block","src":"27645:414:12","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":3728,"name":"_requireFromEntryPointOrOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2642,"src":"27655:29:12","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":3729,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27655:31:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3730,"nodeType":"ExpressionStatement","src":"27655:31:12"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3746,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3740,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3734,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3731,"name":"dest","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3719,"src":"27713:4:12","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[] calldata"}},"id":3732,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"27718:6:12","memberName":"length","nodeType":"MemberAccess","src":"27713:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3733,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27728:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"27713:16:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3739,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3735,"name":"dest","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3719,"src":"27745:4:12","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[] calldata"}},"id":3736,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"27750:6:12","memberName":"length","nodeType":"MemberAccess","src":"27745:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"id":3737,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3722,"src":"27760:5:12","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[] calldata"}},"id":3738,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"27766:6:12","memberName":"length","nodeType":"MemberAccess","src":"27760:12:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27745:27:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"27713:59:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3745,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3741,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3722,"src":"27788:5:12","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[] calldata"}},"id":3742,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"27794:6:12","memberName":"length","nodeType":"MemberAccess","src":"27788:12:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"id":3743,"name":"func","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3725,"src":"27804:4:12","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr","typeString":"bytes calldata[] calldata"}},"id":3744,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"27809:6:12","memberName":"length","nodeType":"MemberAccess","src":"27804:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27788:27:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"27713:102:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3756,"nodeType":"IfStatement","src":"27696:195:12","trueBody":{"errorCall":{"arguments":[{"expression":{"id":3748,"name":"dest","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3719,"src":"27852:4:12","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[] calldata"}},"id":3749,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"27857:6:12","memberName":"length","nodeType":"MemberAccess","src":"27852:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":3750,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3722,"src":"27865:5:12","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[] calldata"}},"id":3751,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"27871:6:12","memberName":"length","nodeType":"MemberAccess","src":"27865:12:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":3752,"name":"func","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3725,"src":"27879:4:12","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr","typeString":"bytes calldata[] calldata"}},"id":3753,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"27884:6:12","memberName":"length","nodeType":"MemberAccess","src":"27879:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3747,"name":"WrongBatchProvided","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5040,"src":"27833:18:12","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256,uint256) pure"}},"id":3754,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27833:58:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3755,"nodeType":"RevertStatement","src":"27826:65:12"}},{"body":{"id":3780,"nodeType":"Block","src":"27936:117:12","statements":[{"expression":{"arguments":[{"baseExpression":{"id":3765,"name":"dest","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3719,"src":"27956:4:12","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[] calldata"}},"id":3767,"indexExpression":{"id":3766,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3758,"src":"27961:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"27956:7:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"baseExpression":{"id":3768,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3722,"src":"27965:5:12","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[] calldata"}},"id":3770,"indexExpression":{"id":3769,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3758,"src":"27971:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"27965:8:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"baseExpression":{"id":3771,"name":"func","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3725,"src":"27975:4:12","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr","typeString":"bytes calldata[] calldata"}},"id":3773,"indexExpression":{"id":3772,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3758,"src":"27980:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"27975:7:12","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}],"id":3764,"name":"_call","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3815,"src":"27950:5:12","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,uint256,bytes memory)"}},"id":3774,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27950:33:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3775,"nodeType":"ExpressionStatement","src":"27950:33:12"},{"id":3779,"nodeType":"UncheckedBlock","src":"27997:46:12","statements":[{"expression":{"id":3777,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"28025:3:12","subExpression":{"id":3776,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3758,"src":"28027:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3778,"nodeType":"ExpressionStatement","src":"28025:3:12"}]}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3763,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3760,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3758,"src":"27917:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":3761,"name":"dest","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3719,"src":"27921:4:12","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[] calldata"}},"id":3762,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"27926:6:12","memberName":"length","nodeType":"MemberAccess","src":"27921:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27917:15:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3781,"initializationExpression":{"assignments":[3758],"declarations":[{"constant":false,"id":3758,"mutability":"mutable","name":"i","nameLocation":"27914:1:12","nodeType":"VariableDeclaration","scope":3781,"src":"27906:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3757,"name":"uint256","nodeType":"ElementaryTypeName","src":"27906:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3759,"nodeType":"VariableDeclarationStatement","src":"27906:9:12"},"nodeType":"ForStatement","src":"27901:152:12"}]},"documentation":{"id":3716,"nodeType":"StructuredDocumentation","src":"27186:313:12","text":" @dev Execute a sequence of transactions\n @notice Name is optimized for this method to be cheaper to be called\n @param dest Addresses of the contracts to call\n @param value Amounts of native tokens to send along with the transactions\n @param func Data of the transactions"},"functionSelector":"00008f2d","id":3783,"implemented":true,"kind":"function","modifiers":[],"name":"executeBatchCall_4by","nameLocation":"27513:20:12","nodeType":"FunctionDefinition","parameters":{"id":3726,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3719,"mutability":"mutable","name":"dest","nameLocation":"27562:4:12","nodeType":"VariableDeclaration","scope":3783,"src":"27543:23:12","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":3717,"name":"address","nodeType":"ElementaryTypeName","src":"27543:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3718,"nodeType":"ArrayTypeName","src":"27543:9:12","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":3722,"mutability":"mutable","name":"value","nameLocation":"27595:5:12","nodeType":"VariableDeclaration","scope":3783,"src":"27576:24:12","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3720,"name":"uint256","nodeType":"ElementaryTypeName","src":"27576:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3721,"nodeType":"ArrayTypeName","src":"27576:9:12","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":3725,"mutability":"mutable","name":"func","nameLocation":"27627:4:12","nodeType":"VariableDeclaration","scope":3783,"src":"27610:21:12","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":3723,"name":"bytes","nodeType":"ElementaryTypeName","src":"27610:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":3724,"nodeType":"ArrayTypeName","src":"27610:7:12","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"}],"src":"27533:104:12"},"returnParameters":{"id":3727,"nodeType":"ParameterList","parameters":[],"src":"27645:0:12"},"scope":4046,"src":"27504:555:12","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":3802,"nodeType":"Block","src":"28478:56:12","statements":[{"expression":{"arguments":[{"id":3797,"name":"dest","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3787,"src":"28509:4:12","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[] calldata"}},{"id":3798,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3790,"src":"28515:5:12","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[] calldata"}},{"id":3799,"name":"func","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3793,"src":"28522:4:12","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr","typeString":"bytes calldata[] calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[] calldata"},{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[] calldata"},{"typeIdentifier":"t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr","typeString":"bytes calldata[] calldata"}],"id":3796,"name":"executeBatchCall_4by","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3783,"src":"28488:20:12","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_array$_t_address_$dyn_calldata_ptr_$_t_array$_t_uint256_$dyn_calldata_ptr_$_t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr_$returns$__$","typeString":"function (address[] calldata,uint256[] calldata,bytes calldata[] calldata)"}},"id":3800,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28488:39:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3801,"nodeType":"ExpressionStatement","src":"28488:39:12"}]},"documentation":{"id":3784,"nodeType":"StructuredDocumentation","src":"28065:269:12","text":" @dev Interface function with the standard name for executeBatchCall_4by\n @param dest Addresses of the contracts to call\n @param value Amounts of native tokens to send along with the transactions\n @param func Data of the transactions"},"functionSelector":"912ccaa3","id":3803,"implemented":true,"kind":"function","modifiers":[],"name":"executeBatchCall","nameLocation":"28348:16:12","nodeType":"FunctionDefinition","parameters":{"id":3794,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3787,"mutability":"mutable","name":"dest","nameLocation":"28393:4:12","nodeType":"VariableDeclaration","scope":3803,"src":"28374:23:12","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":3785,"name":"address","nodeType":"ElementaryTypeName","src":"28374:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3786,"nodeType":"ArrayTypeName","src":"28374:9:12","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":3790,"mutability":"mutable","name":"value","nameLocation":"28426:5:12","nodeType":"VariableDeclaration","scope":3803,"src":"28407:24:12","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3788,"name":"uint256","nodeType":"ElementaryTypeName","src":"28407:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3789,"nodeType":"ArrayTypeName","src":"28407:9:12","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":3793,"mutability":"mutable","name":"func","nameLocation":"28458:4:12","nodeType":"VariableDeclaration","scope":3803,"src":"28441:21:12","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":3791,"name":"bytes","nodeType":"ElementaryTypeName","src":"28441:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":3792,"nodeType":"ArrayTypeName","src":"28441:7:12","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"}],"src":"28364:104:12"},"returnParameters":{"id":3795,"nodeType":"ParameterList","parameters":[],"src":"28478:0:12"},"scope":4046,"src":"28339:195:12","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":3814,"nodeType":"Block","src":"28921:433:12","statements":[{"AST":{"nodeType":"YulBlock","src":"28940:408:12","statements":[{"nodeType":"YulVariableDeclaration","src":"28954:203:12","value":{"arguments":[{"arguments":[],"functionName":{"name":"gas","nodeType":"YulIdentifier","src":"28991:3:12"},"nodeType":"YulFunctionCall","src":"28991:5:12"},{"name":"target","nodeType":"YulIdentifier","src":"29014:6:12"},{"name":"value","nodeType":"YulIdentifier","src":"29038:5:12"},{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"29065:4:12"},{"kind":"number","nodeType":"YulLiteral","src":"29071:4:12","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"29061:3:12"},"nodeType":"YulFunctionCall","src":"29061:15:12"},{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"29100:4:12"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"29094:5:12"},"nodeType":"YulFunctionCall","src":"29094:11:12"},{"kind":"number","nodeType":"YulLiteral","src":"29123:1:12","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"29142:1:12","type":"","value":"0"}],"functionName":{"name":"call","nodeType":"YulIdentifier","src":"28969:4:12"},"nodeType":"YulFunctionCall","src":"28969:188:12"},"variables":[{"name":"success","nodeType":"YulTypedName","src":"28958:7:12","type":""}]},{"nodeType":"YulVariableDeclaration","src":"29170:22:12","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"29187:4:12","type":"","value":"0x40"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"29181:5:12"},"nodeType":"YulFunctionCall","src":"29181:11:12"},"variables":[{"name":"ptr","nodeType":"YulTypedName","src":"29174:3:12","type":""}]},{"expression":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"29220:3:12"},{"kind":"number","nodeType":"YulLiteral","src":"29225:1:12","type":"","value":"0"},{"arguments":[],"functionName":{"name":"returndatasize","nodeType":"YulIdentifier","src":"29228:14:12"},"nodeType":"YulFunctionCall","src":"29228:16:12"}],"functionName":{"name":"returndatacopy","nodeType":"YulIdentifier","src":"29205:14:12"},"nodeType":"YulFunctionCall","src":"29205:40:12"},"nodeType":"YulExpressionStatement","src":"29205:40:12"},{"body":{"nodeType":"YulBlock","src":"29277:61:12","statements":[{"expression":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"29302:3:12"},{"arguments":[],"functionName":{"name":"returndatasize","nodeType":"YulIdentifier","src":"29307:14:12"},"nodeType":"YulFunctionCall","src":"29307:16:12"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"29295:6:12"},"nodeType":"YulFunctionCall","src":"29295:29:12"},"nodeType":"YulExpressionStatement","src":"29295:29:12"}]},"condition":{"arguments":[{"name":"success","nodeType":"YulIdentifier","src":"29268:7:12"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"29261:6:12"},"nodeType":"YulFunctionCall","src":"29261:15:12"},"nodeType":"YulIf","src":"29258:80:12"}]},"evmVersion":"london","externalReferences":[{"declaration":3810,"isOffset":false,"isSlot":false,"src":"29065:4:12","valueSize":1},{"declaration":3810,"isOffset":false,"isSlot":false,"src":"29100:4:12","valueSize":1},{"declaration":3806,"isOffset":false,"isSlot":false,"src":"29014:6:12","valueSize":1},{"declaration":3808,"isOffset":false,"isSlot":false,"src":"29038:5:12","valueSize":1}],"id":3813,"nodeType":"InlineAssembly","src":"28931:417:12"}]},"documentation":{"id":3804,"nodeType":"StructuredDocumentation","src":"28540:302:12","text":" @dev internal method that fecilitates the extenral calls from SmartAccount\n @dev similar to execute() of Executor.sol\n @param target destination address contract/non-contract\n @param value amount of native tokens\n @param data function singature of destination"},"id":3815,"implemented":true,"kind":"function","modifiers":[],"name":"_call","nameLocation":"28856:5:12","nodeType":"FunctionDefinition","parameters":{"id":3811,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3806,"mutability":"mutable","name":"target","nameLocation":"28870:6:12","nodeType":"VariableDeclaration","scope":3815,"src":"28862:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3805,"name":"address","nodeType":"ElementaryTypeName","src":"28862:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3808,"mutability":"mutable","name":"value","nameLocation":"28886:5:12","nodeType":"VariableDeclaration","scope":3815,"src":"28878:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3807,"name":"uint256","nodeType":"ElementaryTypeName","src":"28878:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3810,"mutability":"mutable","name":"data","nameLocation":"28906:4:12","nodeType":"VariableDeclaration","scope":3815,"src":"28893:17:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3809,"name":"bytes","nodeType":"ElementaryTypeName","src":"28893:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"28861:50:12"},"returnParameters":{"id":3812,"nodeType":"ParameterList","parameters":[],"src":"28921:0:12"},"scope":4046,"src":"28847:507:12","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"baseFunctions":[2343],"body":{"id":3912,"nodeType":"Block","src":"29978:862:12","statements":[{"assignments":[3828],"declarations":[{"constant":false,"id":3828,"mutability":"mutable","name":"userOpData","nameLocation":"30054:10:12","nodeType":"VariableDeclaration","scope":3912,"src":"30039:25:12","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":3827,"name":"bytes","nodeType":"ElementaryTypeName","src":"30039:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":3831,"initialValue":{"expression":{"id":3829,"name":"userOp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3819,"src":"30067:6:12","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$643_calldata_ptr","typeString":"struct UserOperation calldata"}},"id":3830,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"30074:8:12","memberName":"callData","nodeType":"MemberAccess","referencedDeclaration":628,"src":"30067:15:12","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"nodeType":"VariableDeclarationStatement","src":"30039:43:12"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3835,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3832,"name":"userOpData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3828,"src":"30096:10:12","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"id":3833,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"30107:6:12","memberName":"length","nodeType":"MemberAccess","src":"30096:17:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3834,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30116:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"30096:21:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3893,"nodeType":"IfStatement","src":"30092:569:12","trueBody":{"id":3892,"nodeType":"Block","src":"30119:542:12","statements":[{"assignments":[3837],"declarations":[{"constant":false,"id":3837,"mutability":"mutable","name":"methodSig","nameLocation":"30140:9:12","nodeType":"VariableDeclaration","scope":3892,"src":"30133:16:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":3836,"name":"bytes4","nodeType":"ElementaryTypeName","src":"30133:6:12","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"id":3844,"initialValue":{"arguments":[{"baseExpression":{"id":3840,"name":"userOpData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3828,"src":"30159:10:12","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"endExpression":{"hexValue":"34","id":3841,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30171:1:12","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"id":3842,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexRangeAccess","src":"30159:14:12","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr_slice","typeString":"bytes calldata slice"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_calldata_ptr_slice","typeString":"bytes calldata slice"}],"id":3839,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"30152:6:12","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes4_$","typeString":"type(bytes4)"},"typeName":{"id":3838,"name":"bytes4","nodeType":"ElementaryTypeName","src":"30152:6:12","typeDescriptions":{}}},"id":3843,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30152:22:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"VariableDeclarationStatement","src":"30133:41:12"},{"condition":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":3849,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3845,"name":"methodSig","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3837,"src":"30284:9:12","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"expression":{"id":3846,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"30297:4:12","typeDescriptions":{"typeIdentifier":"t_contract$_SmartAccount_$4046","typeString":"contract SmartAccount"}},"id":3847,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"30302:11:12","memberName":"executeCall","nodeType":"MemberAccess","referencedDeclaration":3715,"src":"30297:16:12","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,uint256,bytes memory) external"}},"id":3848,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"30314:8:12","memberName":"selector","nodeType":"MemberAccess","src":"30297:25:12","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"30284:38:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3891,"nodeType":"IfStatement","src":"30280:371:12","trueBody":{"id":3890,"nodeType":"Block","src":"30324:327:12","statements":[{"assignments":[3851,3853,3855],"declarations":[{"constant":false,"id":3851,"mutability":"mutable","name":"_to","nameLocation":"30351:3:12","nodeType":"VariableDeclaration","scope":3890,"src":"30343:11:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3850,"name":"address","nodeType":"ElementaryTypeName","src":"30343:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3853,"mutability":"mutable","name":"_amount","nameLocation":"30361:7:12","nodeType":"VariableDeclaration","scope":3890,"src":"30356:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3852,"name":"uint","nodeType":"ElementaryTypeName","src":"30356:4:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3855,"mutability":"mutable","name":"_data","nameLocation":"30383:5:12","nodeType":"VariableDeclaration","scope":3890,"src":"30370:18:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3854,"name":"bytes","nodeType":"ElementaryTypeName","src":"30370:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":3869,"initialValue":{"arguments":[{"baseExpression":{"id":3858,"name":"userOpData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3828,"src":"30424:10:12","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"id":3860,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexRangeAccess","src":"30424:14:12","startExpression":{"hexValue":"34","id":3859,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30435:1:12","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr_slice","typeString":"bytes calldata slice"}},{"components":[{"id":3862,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"30461:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3861,"name":"address","nodeType":"ElementaryTypeName","src":"30461:7:12","typeDescriptions":{}}},{"id":3864,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"30470:4:12","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3863,"name":"uint","nodeType":"ElementaryTypeName","src":"30470:4:12","typeDescriptions":{}}},{"id":3866,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"30476:5:12","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3865,"name":"bytes","nodeType":"ElementaryTypeName","src":"30476:5:12","typeDescriptions":{}}}],"id":3867,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"30460:22:12","typeDescriptions":{"typeIdentifier":"t_tuple$_t_type$_t_address_$_$_t_type$_t_uint256_$_$_t_type$_t_bytes_storage_ptr_$_$","typeString":"tuple(type(address),type(uint256),type(bytes storage pointer))"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_calldata_ptr_slice","typeString":"bytes calldata slice"},{"typeIdentifier":"t_tuple$_t_type$_t_address_$_$_t_type$_t_uint256_$_$_t_type$_t_bytes_storage_ptr_$_$","typeString":"tuple(type(address),type(uint256),type(bytes storage pointer))"}],"expression":{"id":3856,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"30392:3:12","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":3857,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"30396:6:12","memberName":"decode","nodeType":"MemberAccess","src":"30392:10:12","typeDescriptions":{"typeIdentifier":"t_function_abidecode_pure$__$returns$__$","typeString":"function () pure"}},"id":3868,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30392:108:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_payable_$_t_uint256_$_t_bytes_memory_ptr_$","typeString":"tuple(address payable,uint256,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"30342:158:12"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3880,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"baseExpression":{"id":3872,"name":"modules","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4543,"src":"30530:7:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_address_$","typeString":"mapping(address => address)"}},"id":3874,"indexExpression":{"id":3873,"name":"_to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3851,"src":"30538:3:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"30530:12:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3871,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"30522:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3870,"name":"address","nodeType":"ElementaryTypeName","src":"30522:7:12","typeDescriptions":{}}},"id":3875,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30522:21:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":3878,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30555:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3877,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"30547:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3876,"name":"address","nodeType":"ElementaryTypeName","src":"30547:7:12","typeDescriptions":{}}},"id":3879,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30547:10:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"30522:35:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3889,"nodeType":"IfStatement","src":"30518:118:12","trueBody":{"expression":{"arguments":[{"id":3885,"name":"userOp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3819,"src":"30617:6:12","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$643_calldata_ptr","typeString":"struct UserOperation calldata"}},{"id":3886,"name":"userOpHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3821,"src":"30625:10:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_UserOperation_$643_calldata_ptr","typeString":"struct UserOperation calldata"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"arguments":[{"id":3882,"name":"_to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3851,"src":"30594:3:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3881,"name":"IModule","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5522,"src":"30586:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IModule_$5522_$","typeString":"type(contract IModule)"}},"id":3883,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30586:12:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IModule_$5522","typeString":"contract IModule"}},"id":3884,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"30599:17:12","memberName":"validateSignature","nodeType":"MemberAccess","referencedDeclaration":5521,"src":"30586:30:12","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_struct$_UserOperation_$643_memory_ptr_$_t_bytes32_$returns$_t_uint256_$","typeString":"function (struct UserOperation memory,bytes32) external returns (uint256)"}},"id":3887,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30586:50:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3826,"id":3888,"nodeType":"Return","src":"30579:57:12"}}]}}]}},{"assignments":[3895],"declarations":[{"constant":false,"id":3895,"mutability":"mutable","name":"hash","nameLocation":"30678:4:12","nodeType":"VariableDeclaration","scope":3912,"src":"30670:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3894,"name":"bytes32","nodeType":"ElementaryTypeName","src":"30670:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":3899,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":3896,"name":"userOpHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3821,"src":"30685:10:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3897,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"30696:22:12","memberName":"toEthSignedMessageHash","nodeType":"MemberAccess","referencedDeclaration":1306,"src":"30685:33:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_bytes32_$bound_to$_t_bytes32_$","typeString":"function (bytes32) pure returns (bytes32)"}},"id":3898,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30685:35:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"30670:50:12"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3906,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3900,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2499,"src":"30734:5:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"expression":{"id":3903,"name":"userOp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3819,"src":"30756:6:12","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$643_calldata_ptr","typeString":"struct UserOperation calldata"}},"id":3904,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"30763:9:12","memberName":"signature","nodeType":"MemberAccess","referencedDeclaration":642,"src":"30756:16:12","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}],"expression":{"id":3901,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3895,"src":"30743:4:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3902,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"30748:7:12","memberName":"recover","nodeType":"MemberAccess","referencedDeclaration":1115,"src":"30743:12:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_address_$bound_to$_t_bytes32_$","typeString":"function (bytes32,bytes memory) pure returns (address)"}},"id":3905,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30743:30:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"30734:39:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3909,"nodeType":"IfStatement","src":"30730:85:12","trueBody":{"expression":{"id":3907,"name":"SIG_VALIDATION_FAILED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2263,"src":"30794:21:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3826,"id":3908,"nodeType":"Return","src":"30787:28:12"}},{"expression":{"hexValue":"30","id":3910,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30832:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":3826,"id":3911,"nodeType":"Return","src":"30825:8:12"}]},"documentation":{"id":3816,"nodeType":"StructuredDocumentation","src":"29360:453:12","text":" @dev Implements the template method of BaseAccount and validates the user's signature for a given operation.\n @notice This function is marked as internal and virtual, and it overrides the BaseAccount function of the same name.\n @param userOp The user operation to be validated, provided as a `UserOperation` calldata struct.\n @param userOpHash The hashed version of the user operation, provided as a `bytes32` value."},"id":3913,"implemented":true,"kind":"function","modifiers":[],"name":"_validateSignature","nameLocation":"29827:18:12","nodeType":"FunctionDefinition","overrides":{"id":3823,"nodeType":"OverrideSpecifier","overrides":[],"src":"29936:8:12"},"parameters":{"id":3822,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3819,"mutability":"mutable","name":"userOp","nameLocation":"29878:6:12","nodeType":"VariableDeclaration","scope":3913,"src":"29855:29:12","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$643_calldata_ptr","typeString":"struct UserOperation"},"typeName":{"id":3818,"nodeType":"UserDefinedTypeName","pathNode":{"id":3817,"name":"UserOperation","nameLocations":["29855:13:12"],"nodeType":"IdentifierPath","referencedDeclaration":643,"src":"29855:13:12"},"referencedDeclaration":643,"src":"29855:13:12","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$643_storage_ptr","typeString":"struct UserOperation"}},"visibility":"internal"},{"constant":false,"id":3821,"mutability":"mutable","name":"userOpHash","nameLocation":"29902:10:12","nodeType":"VariableDeclaration","scope":3913,"src":"29894:18:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3820,"name":"bytes32","nodeType":"ElementaryTypeName","src":"29894:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"29845:73:12"},"returnParameters":{"id":3826,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3825,"mutability":"mutable","name":"validationData","nameLocation":"29962:14:12","nodeType":"VariableDeclaration","scope":3913,"src":"29954:22:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3824,"name":"uint256","nodeType":"ElementaryTypeName","src":"29954:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"29953:24:12"},"scope":4046,"src":"29818:1022:12","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"baseFunctions":[5540],"body":{"id":3954,"nodeType":"Block","src":"31605:354:12","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3928,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":3924,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2499,"src":"31619:5:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3925,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"31625:4:12","memberName":"code","nodeType":"MemberAccess","src":"31619:10:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3926,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"31630:6:12","memberName":"length","nodeType":"MemberAccess","src":"31619:17:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3927,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31639:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"31619:21:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3938,"nodeType":"IfStatement","src":"31615:199:12","trueBody":{"id":3937,"nodeType":"Block","src":"31642:172:12","statements":[{"expression":{"arguments":[{"id":3933,"name":"_dataHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3916,"src":"31744:9:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3934,"name":"_signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3918,"src":"31775:10:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"arguments":[{"id":3930,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2499,"src":"31699:5:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3929,"name":"ISignatureValidator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5541,"src":"31679:19:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ISignatureValidator_$5541_$","typeString":"type(contract ISignatureValidator)"}},"id":3931,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31679:26:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_ISignatureValidator_$5541","typeString":"contract ISignatureValidator"}},"id":3932,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"31706:16:12","memberName":"isValidSignature","nodeType":"MemberAccess","referencedDeclaration":5540,"src":"31679:43:12","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_bytes4_$","typeString":"function (bytes32,bytes memory) view external returns (bytes4)"}},"id":3935,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31679:124:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"functionReturnParameters":3923,"id":3936,"nodeType":"Return","src":"31656:147:12"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3944,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3939,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2499,"src":"31827:5:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"id":3942,"name":"_signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3918,"src":"31854:10:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":3940,"name":"_dataHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3916,"src":"31836:9:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3941,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"31846:7:12","memberName":"recover","nodeType":"MemberAccess","referencedDeclaration":1115,"src":"31836:17:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_address_$bound_to$_t_bytes32_$","typeString":"function (bytes32,bytes memory) pure returns (address)"}},"id":3943,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31836:29:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"31827:38:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3948,"nodeType":"IfStatement","src":"31823:95:12","trueBody":{"id":3947,"nodeType":"Block","src":"31867:51:12","statements":[{"expression":{"id":3945,"name":"EIP1271_MAGIC_VALUE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5527,"src":"31888:19:12","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"functionReturnParameters":3923,"id":3946,"nodeType":"Return","src":"31881:26:12"}]}},{"expression":{"arguments":[{"hexValue":"30786666666666666666","id":3951,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31941:10:12","typeDescriptions":{"typeIdentifier":"t_rational_4294967295_by_1","typeString":"int_const 4294967295"},"value":"0xffffffff"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_4294967295_by_1","typeString":"int_const 4294967295"}],"id":3950,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"31934:6:12","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes4_$","typeString":"type(bytes4)"},"typeName":{"id":3949,"name":"bytes4","nodeType":"ElementaryTypeName","src":"31934:6:12","typeDescriptions":{}}},"id":3952,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31934:18:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"functionReturnParameters":3923,"id":3953,"nodeType":"Return","src":"31927:25:12"}]},"documentation":{"id":3914,"nodeType":"StructuredDocumentation","src":"30846:624:12","text":" Implementation of ISignatureValidator (see `interfaces/ISignatureValidator.sol`)\n @dev If owner is a smart-contract (other smart contract wallet or module, that controls\n      signature verifications - like multisig), forward isValidSignature request to it.\n      In case of multisig, _signature can be several concatenated signatures\n      If owner is EOA, perform a regular ecrecover.\n @param _dataHash 32 bytes hash of the data signed on the behalf of address(msg.sender)\n @param _signature Signature byte array associated with _dataHash\n @return bytes4 value."},"functionSelector":"1626ba7e","id":3955,"implemented":true,"kind":"function","modifiers":[],"name":"isValidSignature","nameLocation":"31484:16:12","nodeType":"FunctionDefinition","overrides":{"id":3920,"nodeType":"OverrideSpecifier","overrides":[],"src":"31579:8:12"},"parameters":{"id":3919,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3916,"mutability":"mutable","name":"_dataHash","nameLocation":"31518:9:12","nodeType":"VariableDeclaration","scope":3955,"src":"31510:17:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3915,"name":"bytes32","nodeType":"ElementaryTypeName","src":"31510:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3918,"mutability":"mutable","name":"_signature","nameLocation":"31550:10:12","nodeType":"VariableDeclaration","scope":3955,"src":"31537:23:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3917,"name":"bytes","nodeType":"ElementaryTypeName","src":"31537:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"31500:66:12"},"returnParameters":{"id":3923,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3922,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3955,"src":"31597:6:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":3921,"name":"bytes4","nodeType":"ElementaryTypeName","src":"31597:6:12","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"31596:8:12"},"scope":4046,"src":"31475:484:12","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":3970,"nodeType":"Block","src":"32093:61:12","statements":[{"expression":{"arguments":[{"arguments":[{"id":3966,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"32141:4:12","typeDescriptions":{"typeIdentifier":"t_contract$_SmartAccount_$4046","typeString":"contract SmartAccount"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_SmartAccount_$4046","typeString":"contract SmartAccount"}],"id":3965,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"32133:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3964,"name":"address","nodeType":"ElementaryTypeName","src":"32133:7:12","typeDescriptions":{}}},"id":3967,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32133:13:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":3961,"name":"entryPoint","nodeType":"Identifier","overloadedDeclarations":[2790],"referencedDeclaration":2790,"src":"32110:10:12","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_contract$_IEntryPoint_$492_$","typeString":"function () view returns (contract IEntryPoint)"}},"id":3962,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32110:12:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IEntryPoint_$492","typeString":"contract IEntryPoint"}},"id":3963,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"32123:9:12","memberName":"balanceOf","nodeType":"MemberAccess","referencedDeclaration":585,"src":"32110:22:12","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":3968,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32110:37:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3960,"id":3969,"nodeType":"Return","src":"32103:44:12"}]},"documentation":{"id":3956,"nodeType":"StructuredDocumentation","src":"31965:71:12","text":" @dev Check current account deposit in the entryPoint"},"functionSelector":"c399ec88","id":3971,"implemented":true,"kind":"function","modifiers":[],"name":"getDeposit","nameLocation":"32050:10:12","nodeType":"FunctionDefinition","parameters":{"id":3957,"nodeType":"ParameterList","parameters":[],"src":"32060:2:12"},"returnParameters":{"id":3960,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3959,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3971,"src":"32084:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3958,"name":"uint256","nodeType":"ElementaryTypeName","src":"32084:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"32083:9:12"},"scope":4046,"src":"32041:113:12","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":3987,"nodeType":"Block","src":"32279:72:12","statements":[{"expression":{"arguments":[{"arguments":[{"id":3983,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"32338:4:12","typeDescriptions":{"typeIdentifier":"t_contract$_SmartAccount_$4046","typeString":"contract SmartAccount"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_SmartAccount_$4046","typeString":"contract SmartAccount"}],"id":3982,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"32330:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3981,"name":"address","nodeType":"ElementaryTypeName","src":"32330:7:12","typeDescriptions":{}}},"id":3984,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32330:13:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":3975,"name":"entryPoint","nodeType":"Identifier","overloadedDeclarations":[2790],"referencedDeclaration":2790,"src":"32289:10:12","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_contract$_IEntryPoint_$492_$","typeString":"function () view returns (contract IEntryPoint)"}},"id":3976,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32289:12:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IEntryPoint_$492","typeString":"contract IEntryPoint"}},"id":3977,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"32302:9:12","memberName":"depositTo","nodeType":"MemberAccess","referencedDeclaration":591,"src":"32289:22:12","typeDescriptions":{"typeIdentifier":"t_function_external_payable$_t_address_$returns$__$","typeString":"function (address) payable external"}},"id":3980,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"expression":{"id":3978,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"32319:3:12","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3979,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"32323:5:12","memberName":"value","nodeType":"MemberAccess","src":"32319:9:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"32289:40:12","typeDescriptions":{"typeIdentifier":"t_function_external_payable$_t_address_$returns$__$value","typeString":"function (address) payable external"}},"id":3985,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32289:55:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3986,"nodeType":"ExpressionStatement","src":"32289:55:12"}]},"documentation":{"id":3972,"nodeType":"StructuredDocumentation","src":"32160:77:12","text":" @dev Deposit more funds for this account in the entryPoint"},"functionSelector":"4a58db19","id":3988,"implemented":true,"kind":"function","modifiers":[],"name":"addDeposit","nameLocation":"32251:10:12","nodeType":"FunctionDefinition","parameters":{"id":3973,"nodeType":"ParameterList","parameters":[],"src":"32261:2:12"},"returnParameters":{"id":3974,"nodeType":"ParameterList","parameters":[],"src":"32279:0:12"},"scope":4046,"src":"32242:109:12","stateMutability":"payable","virtual":false,"visibility":"public"},{"body":{"id":4005,"nodeType":"Block","src":"32631:65:12","statements":[{"expression":{"arguments":[{"id":4001,"name":"withdrawAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3991,"src":"32665:15:12","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},{"id":4002,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3993,"src":"32682:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address_payable","typeString":"address payable"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":3998,"name":"entryPoint","nodeType":"Identifier","overloadedDeclarations":[2790],"referencedDeclaration":2790,"src":"32641:10:12","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_contract$_IEntryPoint_$492_$","typeString":"function () view returns (contract IEntryPoint)"}},"id":3999,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32641:12:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IEntryPoint_$492","typeString":"contract IEntryPoint"}},"id":4000,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"32654:10:12","memberName":"withdrawTo","nodeType":"MemberAccess","referencedDeclaration":615,"src":"32641:23:12","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_payable_$_t_uint256_$returns$__$","typeString":"function (address payable,uint256) external"}},"id":4003,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32641:48:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4004,"nodeType":"ExpressionStatement","src":"32641:48:12"}]},"documentation":{"id":3989,"nodeType":"StructuredDocumentation","src":"32357:146:12","text":" @dev Withdraw value from the account's deposit\n @param withdrawAddress target to send to\n @param amount to withdraw"},"functionSelector":"4d44560d","id":4006,"implemented":true,"kind":"function","modifiers":[{"id":3996,"kind":"modifierInvocation","modifierName":{"id":3995,"name":"onlyOwner","nameLocations":["32621:9:12"],"nodeType":"IdentifierPath","referencedDeclaration":2595,"src":"32621:9:12"},"nodeType":"ModifierInvocation","src":"32621:9:12"}],"name":"withdrawDepositTo","nameLocation":"32517:17:12","nodeType":"FunctionDefinition","parameters":{"id":3994,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3991,"mutability":"mutable","name":"withdrawAddress","nameLocation":"32560:15:12","nodeType":"VariableDeclaration","scope":4006,"src":"32544:31:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":3990,"name":"address","nodeType":"ElementaryTypeName","src":"32544:15:12","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"},{"constant":false,"id":3993,"mutability":"mutable","name":"amount","nameLocation":"32593:6:12","nodeType":"VariableDeclaration","scope":4006,"src":"32585:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3992,"name":"uint256","nodeType":"ElementaryTypeName","src":"32585:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"32534:71:12"},"returnParameters":{"id":3997,"nodeType":"ParameterList","parameters":[],"src":"32631:0:12"},"scope":4046,"src":"32508:188:12","stateMutability":"payable","virtual":false,"visibility":"public"},{"baseFunctions":[5469],"body":{"id":4022,"nodeType":"Block","src":"33025:79:12","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":4020,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4015,"name":"_interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4009,"src":"33042:12:12","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":4017,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5470,"src":"33063:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC165_$5470_$","typeString":"type(contract IERC165)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IERC165_$5470_$","typeString":"type(contract IERC165)"}],"id":4016,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"33058:4:12","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4018,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33058:13:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IERC165_$5470","typeString":"type(contract IERC165)"}},"id":4019,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"33072:11:12","memberName":"interfaceId","nodeType":"MemberAccess","src":"33058:25:12","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"33042:41:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":4014,"id":4021,"nodeType":"Return","src":"33035:48:12"}]},"documentation":{"id":4007,"nodeType":"StructuredDocumentation","src":"32702:210:12","text":" @notice Query if a contract implements an interface\n @param _interfaceId The interface identifier, as specified in ERC165\n @return `true` if the contract implements `_interfaceID`"},"functionSelector":"01ffc9a7","id":4023,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"32926:17:12","nodeType":"FunctionDefinition","overrides":{"id":4011,"nodeType":"OverrideSpecifier","overrides":[],"src":"33001:8:12"},"parameters":{"id":4010,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4009,"mutability":"mutable","name":"_interfaceId","nameLocation":"32960:12:12","nodeType":"VariableDeclaration","scope":4023,"src":"32953:19:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":4008,"name":"bytes4","nodeType":"ElementaryTypeName","src":"32953:6:12","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"32943:35:12"},"returnParameters":{"id":4014,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4013,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4023,"src":"33019:4:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4012,"name":"bool","nodeType":"ElementaryTypeName","src":"33019:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"33018:6:12"},"scope":4046,"src":"32917:187:12","stateMutability":"view","virtual":true,"visibility":"external"},{"body":{"id":4044,"nodeType":"Block","src":"33500:140:12","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":4032,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4029,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"33522:4:12","typeDescriptions":{"typeIdentifier":"t_contract$_SmartAccount_$4046","typeString":"contract SmartAccount"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_SmartAccount_$4046","typeString":"contract SmartAccount"}],"id":4028,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"33514:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4027,"name":"address","nodeType":"ElementaryTypeName","src":"33514:7:12","typeDescriptions":{}}},"id":4030,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33514:13:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":4031,"name":"_self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2510,"src":"33531:5:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"33514:22:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4036,"nodeType":"IfStatement","src":"33510:54:12","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":4033,"name":"DelegateCallsOnly","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5043,"src":"33545:17:12","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":4034,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33545:19:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4035,"nodeType":"RevertStatement","src":"33538:26:12"}},{"eventCall":{"arguments":[{"expression":{"id":4038,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"33611:3:12","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4039,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"33615:6:12","memberName":"sender","nodeType":"MemberAccess","src":"33611:10:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":4040,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"33623:3:12","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4041,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"33627:5:12","memberName":"value","nodeType":"MemberAccess","src":"33623:9:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4037,"name":"SmartAccountReceivedNativeToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2536,"src":"33579:31:12","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":4042,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33579:54:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4043,"nodeType":"EmitStatement","src":"33574:59:12"}]},"documentation":{"id":4024,"nodeType":"StructuredDocumentation","src":"33110:358:12","text":" @dev This function is a special fallback function that is triggered when the contract receives Ether.\n It logs an event indicating the amount of Ether received and the sender's address.\n @notice This function is marked as external and payable, meaning it can be called from external\n sources and accepts Ether as payment."},"id":4045,"implemented":true,"kind":"receive","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":4025,"nodeType":"ParameterList","parameters":[],"src":"33480:2:12"},"returnParameters":{"id":4026,"nodeType":"ParameterList","parameters":[],"src":"33500:0:12"},"scope":4046,"src":"33473:167:12","stateMutability":"payable","virtual":false,"visibility":"external"}],"scope":4047,"src":"1413:32229:12","usedErrors":[4938,4942,4948,4953,4962,4965,4968,4973,4978,4983,4988,4995,5004,5013,5018,5025,5028,5031,5040,5043,5046,5049,5052,5066,5069,5074,5079,5088,5093,5099,5133]}],"src":"32:33611:12"}},"contracts/smart-contract-wallet/SmartAccountFactory.sol":{"id":13,"ast":{"absolutePath":"contracts/smart-contract-wallet/SmartAccountFactory.sol","exportedSymbols":{"BaseSmartAccount":[2401],"BaseSmartAccountErrors":[4939],"DefaultCallbackHandler":[5420],"Enum":[4931],"FeeRefund":[2251],"IAccount":[254],"IEntryPoint":[492],"Proxy":[2430],"SmartAccountFactory":[4356],"SmartAccountFactoryErrors":[5063],"Transaction":[2240],"UserOperation":[643],"UserOperationLib":[813],"ValidationData":[8],"_intersectTimeRange":[152],"_packValidationData":[189,227],"_parseValidationData":[67],"calldataKeccak":[237]},"id":4357,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":4048,"literals":["solidity","0.8",".17"],"nodeType":"PragmaDirective","src":"32:23:13"},{"absolutePath":"contracts/smart-contract-wallet/Proxy.sol","file":"./Proxy.sol","id":4049,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4357,"sourceUnit":2431,"src":"57:21:13","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/smart-contract-wallet/BaseSmartAccount.sol","file":"./BaseSmartAccount.sol","id":4050,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4357,"sourceUnit":2402,"src":"79:32:13","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/smart-contract-wallet/handler/DefaultCallbackHandler.sol","file":"./handler/DefaultCallbackHandler.sol","id":4052,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4357,"sourceUnit":5421,"src":"112:76:13","symbolAliases":[{"foreign":{"id":4051,"name":"DefaultCallbackHandler","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5420,"src":"120:22:13","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"contracts/smart-contract-wallet/common/Errors.sol","file":"./common/Errors.sol","id":4054,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4357,"sourceUnit":5129,"src":"189:62:13","symbolAliases":[{"foreign":{"id":4053,"name":"SmartAccountFactoryErrors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5063,"src":"197:25:13","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"SmartAccountFactory","contractDependencies":[2430,5420],"contractKind":"contract","documentation":{"id":4055,"nodeType":"StructuredDocumentation","src":"253:369:13","text":" @title Smart Account Factory - factory responsible for deploying Smart Accounts using CREATE2 and CREATE\n @dev It deploys Smart Accounts as proxies pointing to `basicImplementation` that is immutable.\n      This allows keeping the same address for the same Smart Account owner on various chains via CREATE2\n @author Chirag Titiya - <chirag@biconomy.io>"},"fullyImplemented":true,"id":4356,"linearizedBaseContracts":[4356],"name":"SmartAccountFactory","nameLocation":"632:19:13","nodeType":"ContractDefinition","nodes":[{"constant":false,"functionSelector":"daf0dfc8","id":4057,"mutability":"immutable","name":"basicImplementation","nameLocation":"683:19:13","nodeType":"VariableDeclaration","scope":4356,"src":"658:44:13","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4056,"name":"address","nodeType":"ElementaryTypeName","src":"658:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"constant":false,"functionSelector":"3b3cb143","id":4060,"mutability":"immutable","name":"minimalHandler","nameLocation":"748:14:13","nodeType":"VariableDeclaration","scope":4356,"src":"708:54:13","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_DefaultCallbackHandler_$5420","typeString":"contract DefaultCallbackHandler"},"typeName":{"id":4059,"nodeType":"UserDefinedTypeName","pathNode":{"id":4058,"name":"DefaultCallbackHandler","nameLocations":["708:22:13"],"nodeType":"IdentifierPath","referencedDeclaration":5420,"src":"708:22:13"},"referencedDeclaration":5420,"src":"708:22:13","typeDescriptions":{"typeIdentifier":"t_contract$_DefaultCallbackHandler_$5420","typeString":"contract DefaultCallbackHandler"}},"visibility":"public"},{"constant":true,"id":4063,"mutability":"constant","name":"CREATE2_PREFIX","nameLocation":"785:14:13","nodeType":"VariableDeclaration","scope":4356,"src":"768:108:13","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4061,"name":"bytes32","nodeType":"ElementaryTypeName","src":"768:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307832303230646261393162333063633030303631383861663739346332666233306464383532306462376532633038386237666337633130336330306361343934","id":4062,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"810:66:13","typeDescriptions":{"typeIdentifier":"t_rational_14532066302281872353670009812739458257996995916004049562278051237580304589972_by_1","typeString":"int_const 1453...(69 digits omitted)...9972"},"value":"0x2020dba91b30cc0006188af794c2fb30dd8520db7e2c088b7fc7c103c00ca494"},"visibility":"internal"},{"anonymous":false,"eventSelector":"8967dcaa00d8fcb9bb2b5beff4aaf8c020063512cf08fbe11fec37a1e3a150f2","id":4071,"name":"AccountCreation","nameLocation":"889:15:13","nodeType":"EventDefinition","parameters":{"id":4070,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4065,"indexed":true,"mutability":"mutable","name":"account","nameLocation":"930:7:13","nodeType":"VariableDeclaration","scope":4071,"src":"914:23:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4064,"name":"address","nodeType":"ElementaryTypeName","src":"914:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4067,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"963:5:13","nodeType":"VariableDeclaration","scope":4071,"src":"947:21:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4066,"name":"address","nodeType":"ElementaryTypeName","src":"947:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4069,"indexed":true,"mutability":"mutable","name":"index","nameLocation":"994:5:13","nodeType":"VariableDeclaration","scope":4071,"src":"978:21:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4068,"name":"uint256","nodeType":"ElementaryTypeName","src":"978:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"904:101:13"},"src":"883:123:13"},{"anonymous":false,"eventSelector":"9a6cbf173278cf7dfadb45414d824f7828c0c94479f1b15e45453653070cf657","id":4077,"name":"AccountCreationWithoutIndex","nameLocation":"1017:27:13","nodeType":"EventDefinition","parameters":{"id":4076,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4073,"indexed":true,"mutability":"mutable","name":"account","nameLocation":"1070:7:13","nodeType":"VariableDeclaration","scope":4077,"src":"1054:23:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4072,"name":"address","nodeType":"ElementaryTypeName","src":"1054:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4075,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"1103:5:13","nodeType":"VariableDeclaration","scope":4077,"src":"1087:21:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4074,"name":"address","nodeType":"ElementaryTypeName","src":"1087:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1044:70:13"},"src":"1011:104:13"},{"body":{"id":4103,"nodeType":"Block","src":"1163:234:13","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":4088,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4083,"name":"_basicImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4079,"src":"1194:20:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":4086,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1226:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":4085,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1218:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4084,"name":"address","nodeType":"ElementaryTypeName","src":"1218:7:13","typeDescriptions":{}}},"id":4087,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1218:10:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1194:34:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"696d706c656d656e746174696f6e2063616e6e6f74206265207a65726f","id":4089,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1242:31:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_4938e3a88b4e354cae468038fff74e99a967437b91ec22fac2d5892f0942457f","typeString":"literal_string \"implementation cannot be zero\""},"value":"implementation cannot be zero"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_4938e3a88b4e354cae468038fff74e99a967437b91ec22fac2d5892f0942457f","typeString":"literal_string \"implementation cannot be zero\""}],"id":4082,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1173:7:13","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4090,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1173:110:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4091,"nodeType":"ExpressionStatement","src":"1173:110:13"},{"expression":{"id":4094,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4092,"name":"basicImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4057,"src":"1293:19:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4093,"name":"_basicImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4079,"src":"1315:20:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1293:42:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4095,"nodeType":"ExpressionStatement","src":"1293:42:13"},{"expression":{"id":4101,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4096,"name":"minimalHandler","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4060,"src":"1345:14:13","typeDescriptions":{"typeIdentifier":"t_contract$_DefaultCallbackHandler_$5420","typeString":"contract DefaultCallbackHandler"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[],"expression":{"argumentTypes":[],"id":4099,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"NewExpression","src":"1362:26:13","typeDescriptions":{"typeIdentifier":"t_function_creation_nonpayable$__$returns$_t_contract$_DefaultCallbackHandler_$5420_$","typeString":"function () returns (contract DefaultCallbackHandler)"},"typeName":{"id":4098,"nodeType":"UserDefinedTypeName","pathNode":{"id":4097,"name":"DefaultCallbackHandler","nameLocations":["1366:22:13"],"nodeType":"IdentifierPath","referencedDeclaration":5420,"src":"1366:22:13"},"referencedDeclaration":5420,"src":"1366:22:13","typeDescriptions":{"typeIdentifier":"t_contract$_DefaultCallbackHandler_$5420","typeString":"contract DefaultCallbackHandler"}}},"id":4100,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1362:28:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_DefaultCallbackHandler_$5420","typeString":"contract DefaultCallbackHandler"}},"src":"1345:45:13","typeDescriptions":{"typeIdentifier":"t_contract$_DefaultCallbackHandler_$5420","typeString":"contract DefaultCallbackHandler"}},"id":4102,"nodeType":"ExpressionStatement","src":"1345:45:13"}]},"id":4104,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":4080,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4079,"mutability":"mutable","name":"_basicImplementation","nameLocation":"1141:20:13","nodeType":"VariableDeclaration","scope":4104,"src":"1133:28:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4078,"name":"address","nodeType":"ElementaryTypeName","src":"1133:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1132:30:13"},"returnParameters":{"id":4081,"nodeType":"ParameterList","parameters":[],"src":"1163:0:13"},"scope":4356,"src":"1121:276:13","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":4115,"nodeType":"Block","src":"1613:48:13","statements":[{"expression":{"expression":{"arguments":[{"id":4111,"name":"Proxy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2430,"src":"1635:5:13","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Proxy_$2430_$","typeString":"type(contract Proxy)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_Proxy_$2430_$","typeString":"type(contract Proxy)"}],"id":4110,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"1630:4:13","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4112,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1630:11:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_Proxy_$2430","typeString":"type(contract Proxy)"}},"id":4113,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1642:12:13","memberName":"creationCode","nodeType":"MemberAccess","src":"1630:24:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":4109,"id":4114,"nodeType":"Return","src":"1623:31:13"}]},"documentation":{"id":4105,"nodeType":"StructuredDocumentation","src":"1403:139:13","text":" @dev Allows to retrieve the creation code used for the Proxy deployment.\n @return The creation code for the Proxy."},"functionSelector":"31c884df","id":4116,"implemented":true,"kind":"function","modifiers":[],"name":"accountCreationCode","nameLocation":"1556:19:13","nodeType":"FunctionDefinition","parameters":{"id":4106,"nodeType":"ParameterList","parameters":[],"src":"1575:2:13"},"returnParameters":{"id":4109,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4108,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4116,"src":"1599:12:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4107,"name":"bytes","nodeType":"ElementaryTypeName","src":"1599:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1598:14:13"},"scope":4356,"src":"1547:114:13","stateMutability":"pure","virtual":false,"visibility":"public"},{"body":{"id":4188,"nodeType":"Block","src":"2055:1370:13","statements":[{"assignments":[4127],"declarations":[{"constant":false,"id":4127,"mutability":"mutable","name":"initializer","nameLocation":"2161:11:13","nodeType":"VariableDeclaration","scope":4188,"src":"2148:24:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4126,"name":"bytes","nodeType":"ElementaryTypeName","src":"2148:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":4131,"initialValue":{"arguments":[{"id":4129,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4119,"src":"2190:6:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4128,"name":"getInitializer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4268,"src":"2175:14:13","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bytes_memory_ptr_$","typeString":"function (address) view returns (bytes memory)"}},"id":4130,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2175:22:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"2148:49:13"},{"assignments":[4133],"declarations":[{"constant":false,"id":4133,"mutability":"mutable","name":"salt","nameLocation":"2216:4:13","nodeType":"VariableDeclaration","scope":4188,"src":"2208:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4132,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2208:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":4143,"initialValue":{"arguments":[{"arguments":[{"arguments":[{"id":4138,"name":"initializer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4127,"src":"2273:11:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":4137,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2263:9:13","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":4139,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2263:22:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":4140,"name":"_index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4121,"src":"2287:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4135,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"2246:3:13","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":4136,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2250:12:13","memberName":"encodePacked","nodeType":"MemberAccess","src":"2246:16:13","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":4141,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2246:48:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":4134,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2223:9:13","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":4142,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2223:81:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"2208:96:13"},{"assignments":[4145],"declarations":[{"constant":false,"id":4145,"mutability":"mutable","name":"deploymentData","nameLocation":"2328:14:13","nodeType":"VariableDeclaration","scope":4188,"src":"2315:27:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4144,"name":"bytes","nodeType":"ElementaryTypeName","src":"2315:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":4160,"initialValue":{"arguments":[{"expression":{"arguments":[{"id":4149,"name":"Proxy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2430,"src":"2380:5:13","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Proxy_$2430_$","typeString":"type(contract Proxy)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_Proxy_$2430_$","typeString":"type(contract Proxy)"}],"id":4148,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"2375:4:13","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4150,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2375:11:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_Proxy_$2430","typeString":"type(contract Proxy)"}},"id":4151,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2387:12:13","memberName":"creationCode","nodeType":"MemberAccess","src":"2375:24:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"arguments":[{"arguments":[{"id":4156,"name":"basicImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4057,"src":"2429:19:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4155,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2421:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":4154,"name":"uint160","nodeType":"ElementaryTypeName","src":"2421:7:13","typeDescriptions":{}}},"id":4157,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2421:28:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":4153,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2413:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":4152,"name":"uint256","nodeType":"ElementaryTypeName","src":"2413:7:13","typeDescriptions":{}}},"id":4158,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2413:37:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4146,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"2345:3:13","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":4147,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2349:12:13","memberName":"encodePacked","nodeType":"MemberAccess","src":"2345:16:13","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":4159,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2345:115:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"2315:145:13"},{"AST":{"nodeType":"YulBlock","src":"2536:179:13","statements":[{"nodeType":"YulAssignment","src":"2550:155:13","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2584:3:13","type":"","value":"0x0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2609:4:13","type":"","value":"0x20"},{"name":"deploymentData","nodeType":"YulIdentifier","src":"2615:14:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2605:3:13"},"nodeType":"YulFunctionCall","src":"2605:25:13"},{"arguments":[{"name":"deploymentData","nodeType":"YulIdentifier","src":"2654:14:13"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2648:5:13"},"nodeType":"YulFunctionCall","src":"2648:21:13"},{"name":"salt","nodeType":"YulIdentifier","src":"2687:4:13"}],"functionName":{"name":"create2","nodeType":"YulIdentifier","src":"2559:7:13"},"nodeType":"YulFunctionCall","src":"2559:146:13"},"variableNames":[{"name":"proxy","nodeType":"YulIdentifier","src":"2550:5:13"}]}]},"evmVersion":"london","externalReferences":[{"declaration":4145,"isOffset":false,"isSlot":false,"src":"2615:14:13","valueSize":1},{"declaration":4145,"isOffset":false,"isSlot":false,"src":"2654:14:13","valueSize":1},{"declaration":4124,"isOffset":false,"isSlot":false,"src":"2550:5:13","valueSize":1},{"declaration":4133,"isOffset":false,"isSlot":false,"src":"2687:4:13","valueSize":1}],"id":4161,"nodeType":"InlineAssembly","src":"2527:188:13"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":4171,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4165,"name":"proxy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4124,"src":"2740:5:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4164,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2732:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4163,"name":"address","nodeType":"ElementaryTypeName","src":"2732:7:13","typeDescriptions":{}}},"id":4166,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2732:14:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":4169,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2758:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":4168,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2750:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4167,"name":"address","nodeType":"ElementaryTypeName","src":"2750:7:13","typeDescriptions":{}}},"id":4170,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2750:10:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2732:28:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"437265617465322063616c6c206661696c6564","id":4172,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2762:21:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_d7c71a0bdd2eb2834ad042153c811dd478e4ee2324e3003b9522e03e7b3735dc","typeString":"literal_string \"Create2 call failed\""},"value":"Create2 call failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_d7c71a0bdd2eb2834ad042153c811dd478e4ee2324e3003b9522e03e7b3735dc","typeString":"literal_string \"Create2 call failed\""}],"id":4162,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2724:7:13","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4173,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2724:60:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4174,"nodeType":"ExpressionStatement","src":"2724:60:13"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4178,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4175,"name":"initializer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4127,"src":"2835:11:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4176,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2847:6:13","memberName":"length","nodeType":"MemberAccess","src":"2835:18:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4177,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2856:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2835:22:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4181,"nodeType":"IfStatement","src":"2831:535:13","trueBody":{"id":4180,"nodeType":"Block","src":"2859:507:13","statements":[{"AST":{"nodeType":"YulBlock","src":"2942:414:13","statements":[{"body":{"nodeType":"YulBlock","src":"3290:52:13","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3319:1:13","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3322:1:13","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3312:6:13"},"nodeType":"YulFunctionCall","src":"3312:12:13"},"nodeType":"YulExpressionStatement","src":"3312:12:13"}]},"condition":{"arguments":[{"arguments":[{"arguments":[],"functionName":{"name":"gas","nodeType":"YulIdentifier","src":"3017:3:13"},"nodeType":"YulFunctionCall","src":"3017:5:13"},{"name":"proxy","nodeType":"YulIdentifier","src":"3048:5:13"},{"kind":"number","nodeType":"YulLiteral","src":"3079:1:13","type":"","value":"0"},{"arguments":[{"name":"initializer","nodeType":"YulIdentifier","src":"3110:11:13"},{"kind":"number","nodeType":"YulLiteral","src":"3123:4:13","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3106:3:13"},"nodeType":"YulFunctionCall","src":"3106:22:13"},{"arguments":[{"name":"initializer","nodeType":"YulIdentifier","src":"3160:11:13"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3154:5:13"},"nodeType":"YulFunctionCall","src":"3154:18:13"},{"kind":"number","nodeType":"YulLiteral","src":"3198:1:13","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3225:1:13","type":"","value":"0"}],"functionName":{"name":"call","nodeType":"YulIdentifier","src":"2987:4:13"},"nodeType":"YulFunctionCall","src":"2987:261:13"},{"kind":"number","nodeType":"YulLiteral","src":"3270:1:13","type":"","value":"0"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"2963:2:13"},"nodeType":"YulFunctionCall","src":"2963:326:13"},"nodeType":"YulIf","src":"2960:382:13"}]},"evmVersion":"london","externalReferences":[{"declaration":4127,"isOffset":false,"isSlot":false,"src":"3110:11:13","valueSize":1},{"declaration":4127,"isOffset":false,"isSlot":false,"src":"3160:11:13","valueSize":1},{"declaration":4124,"isOffset":false,"isSlot":false,"src":"3048:5:13","valueSize":1}],"id":4179,"nodeType":"InlineAssembly","src":"2933:423:13"}]}},{"eventCall":{"arguments":[{"id":4183,"name":"proxy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4124,"src":"3396:5:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4184,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4119,"src":"3403:6:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4185,"name":"_index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4121,"src":"3411:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4182,"name":"AccountCreation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4071,"src":"3380:15:13","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":4186,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3380:38:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4187,"nodeType":"EmitStatement","src":"3375:43:13"}]},"documentation":{"id":4117,"nodeType":"StructuredDocumentation","src":"1667:261:13","text":" @notice Deploys account using create2 and points it to basicImplementation\n @param _owner EOA signatory for the account to be deployed\n @param _index extra salt that allows to deploy more account if needed for same EOA (default 0)"},"functionSelector":"088924ef","id":4189,"implemented":true,"kind":"function","modifiers":[],"name":"deployCounterFactualAccount","nameLocation":"1942:27:13","nodeType":"FunctionDefinition","parameters":{"id":4122,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4119,"mutability":"mutable","name":"_owner","nameLocation":"1987:6:13","nodeType":"VariableDeclaration","scope":4189,"src":"1979:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4118,"name":"address","nodeType":"ElementaryTypeName","src":"1979:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4121,"mutability":"mutable","name":"_index","nameLocation":"2011:6:13","nodeType":"VariableDeclaration","scope":4189,"src":"2003:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4120,"name":"uint256","nodeType":"ElementaryTypeName","src":"2003:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1969:54:13"},"returnParameters":{"id":4125,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4124,"mutability":"mutable","name":"proxy","nameLocation":"2048:5:13","nodeType":"VariableDeclaration","scope":4189,"src":"2040:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4123,"name":"address","nodeType":"ElementaryTypeName","src":"2040:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2039:15:13"},"scope":4356,"src":"1933:1492:13","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":4246,"nodeType":"Block","src":"3713:1160:13","statements":[{"assignments":[4198],"declarations":[{"constant":false,"id":4198,"mutability":"mutable","name":"deploymentData","nameLocation":"3736:14:13","nodeType":"VariableDeclaration","scope":4246,"src":"3723:27:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4197,"name":"bytes","nodeType":"ElementaryTypeName","src":"3723:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":4213,"initialValue":{"arguments":[{"expression":{"arguments":[{"id":4202,"name":"Proxy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2430,"src":"3788:5:13","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Proxy_$2430_$","typeString":"type(contract Proxy)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_Proxy_$2430_$","typeString":"type(contract Proxy)"}],"id":4201,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"3783:4:13","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4203,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3783:11:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_Proxy_$2430","typeString":"type(contract Proxy)"}},"id":4204,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3795:12:13","memberName":"creationCode","nodeType":"MemberAccess","src":"3783:24:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"arguments":[{"arguments":[{"id":4209,"name":"basicImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4057,"src":"3837:19:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4208,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3829:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":4207,"name":"uint160","nodeType":"ElementaryTypeName","src":"3829:7:13","typeDescriptions":{}}},"id":4210,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3829:28:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":4206,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3821:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":4205,"name":"uint256","nodeType":"ElementaryTypeName","src":"3821:7:13","typeDescriptions":{}}},"id":4211,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3821:37:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4199,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"3753:3:13","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":4200,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3757:12:13","memberName":"encodePacked","nodeType":"MemberAccess","src":"3753:16:13","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":4212,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3753:115:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"3723:145:13"},{"AST":{"nodeType":"YulBlock","src":"3944:156:13","statements":[{"nodeType":"YulAssignment","src":"3958:132:13","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3991:3:13","type":"","value":"0x0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4016:4:13","type":"","value":"0x20"},{"name":"deploymentData","nodeType":"YulIdentifier","src":"4022:14:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4012:3:13"},"nodeType":"YulFunctionCall","src":"4012:25:13"},{"arguments":[{"name":"deploymentData","nodeType":"YulIdentifier","src":"4061:14:13"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4055:5:13"},"nodeType":"YulFunctionCall","src":"4055:21:13"}],"functionName":{"name":"create","nodeType":"YulIdentifier","src":"3967:6:13"},"nodeType":"YulFunctionCall","src":"3967:123:13"},"variableNames":[{"name":"proxy","nodeType":"YulIdentifier","src":"3958:5:13"}]}]},"evmVersion":"london","externalReferences":[{"declaration":4198,"isOffset":false,"isSlot":false,"src":"4022:14:13","valueSize":1},{"declaration":4198,"isOffset":false,"isSlot":false,"src":"4061:14:13","valueSize":1},{"declaration":4195,"isOffset":false,"isSlot":false,"src":"3958:5:13","valueSize":1}],"id":4214,"nodeType":"InlineAssembly","src":"3935:165:13"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":4224,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4218,"name":"proxy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4195,"src":"4125:5:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4217,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4117:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4216,"name":"address","nodeType":"ElementaryTypeName","src":"4117:7:13","typeDescriptions":{}}},"id":4219,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4117:14:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":4222,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4143:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":4221,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4135:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4220,"name":"address","nodeType":"ElementaryTypeName","src":"4135:7:13","typeDescriptions":{}}},"id":4223,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4135:10:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4117:28:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4372656174652063616c6c206661696c6564","id":4225,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4147:20:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_e3e628553c46882135f8163097d367fe43912ecb6b8e54d514f4bea4bcd23855","typeString":"literal_string \"Create call failed\""},"value":"Create call failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_e3e628553c46882135f8163097d367fe43912ecb6b8e54d514f4bea4bcd23855","typeString":"literal_string \"Create call failed\""}],"id":4215,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4109:7:13","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4226,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4109:59:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4227,"nodeType":"ExpressionStatement","src":"4109:59:13"},{"assignments":[4229],"declarations":[{"constant":false,"id":4229,"mutability":"mutable","name":"initializer","nameLocation":"4192:11:13","nodeType":"VariableDeclaration","scope":4246,"src":"4179:24:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4228,"name":"bytes","nodeType":"ElementaryTypeName","src":"4179:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":4233,"initialValue":{"arguments":[{"id":4231,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4192,"src":"4221:6:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4230,"name":"getInitializer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4268,"src":"4206:14:13","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bytes_memory_ptr_$","typeString":"function (address) view returns (bytes memory)"}},"id":4232,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4206:22:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"4179:49:13"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4237,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4234,"name":"initializer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4229,"src":"4279:11:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4235,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4291:6:13","memberName":"length","nodeType":"MemberAccess","src":"4279:18:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4236,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4300:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4279:22:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4240,"nodeType":"IfStatement","src":"4275:535:13","trueBody":{"id":4239,"nodeType":"Block","src":"4303:507:13","statements":[{"AST":{"nodeType":"YulBlock","src":"4386:414:13","statements":[{"body":{"nodeType":"YulBlock","src":"4734:52:13","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4763:1:13","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4766:1:13","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4756:6:13"},"nodeType":"YulFunctionCall","src":"4756:12:13"},"nodeType":"YulExpressionStatement","src":"4756:12:13"}]},"condition":{"arguments":[{"arguments":[{"arguments":[],"functionName":{"name":"gas","nodeType":"YulIdentifier","src":"4461:3:13"},"nodeType":"YulFunctionCall","src":"4461:5:13"},{"name":"proxy","nodeType":"YulIdentifier","src":"4492:5:13"},{"kind":"number","nodeType":"YulLiteral","src":"4523:1:13","type":"","value":"0"},{"arguments":[{"name":"initializer","nodeType":"YulIdentifier","src":"4554:11:13"},{"kind":"number","nodeType":"YulLiteral","src":"4567:4:13","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4550:3:13"},"nodeType":"YulFunctionCall","src":"4550:22:13"},{"arguments":[{"name":"initializer","nodeType":"YulIdentifier","src":"4604:11:13"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4598:5:13"},"nodeType":"YulFunctionCall","src":"4598:18:13"},{"kind":"number","nodeType":"YulLiteral","src":"4642:1:13","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4669:1:13","type":"","value":"0"}],"functionName":{"name":"call","nodeType":"YulIdentifier","src":"4431:4:13"},"nodeType":"YulFunctionCall","src":"4431:261:13"},{"kind":"number","nodeType":"YulLiteral","src":"4714:1:13","type":"","value":"0"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"4407:2:13"},"nodeType":"YulFunctionCall","src":"4407:326:13"},"nodeType":"YulIf","src":"4404:382:13"}]},"evmVersion":"london","externalReferences":[{"declaration":4229,"isOffset":false,"isSlot":false,"src":"4554:11:13","valueSize":1},{"declaration":4229,"isOffset":false,"isSlot":false,"src":"4604:11:13","valueSize":1},{"declaration":4195,"isOffset":false,"isSlot":false,"src":"4492:5:13","valueSize":1}],"id":4238,"nodeType":"InlineAssembly","src":"4377:423:13"}]}},{"eventCall":{"arguments":[{"id":4242,"name":"proxy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4195,"src":"4852:5:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4243,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4192,"src":"4859:6:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":4241,"name":"AccountCreationWithoutIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4077,"src":"4824:27:13","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":4244,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4824:42:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4245,"nodeType":"EmitStatement","src":"4819:47:13"}]},"documentation":{"id":4190,"nodeType":"StructuredDocumentation","src":"3431:207:13","text":" @notice Deploys account using create and points it to _implementation\n @param _owner EOA signatory for the account to be deployed\n @return proxy address of the deployed account"},"functionSelector":"da9fc1ae","id":4247,"implemented":true,"kind":"function","modifiers":[],"name":"deployAccount","nameLocation":"3652:13:13","nodeType":"FunctionDefinition","parameters":{"id":4193,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4192,"mutability":"mutable","name":"_owner","nameLocation":"3674:6:13","nodeType":"VariableDeclaration","scope":4247,"src":"3666:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4191,"name":"address","nodeType":"ElementaryTypeName","src":"3666:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3665:16:13"},"returnParameters":{"id":4196,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4195,"mutability":"mutable","name":"proxy","nameLocation":"3706:5:13","nodeType":"VariableDeclaration","scope":4247,"src":"3698:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4194,"name":"address","nodeType":"ElementaryTypeName","src":"3698:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3697:15:13"},"scope":4356,"src":"3643:1230:13","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":4267,"nodeType":"Block","src":"5170:154:13","statements":[{"expression":{"arguments":[{"expression":{"id":4257,"name":"BaseSmartAccount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2401,"src":"5231:16:13","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_BaseSmartAccount_$2401_$","typeString":"type(contract BaseSmartAccount)"}},"id":4258,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5248:4:13","memberName":"init","nodeType":"MemberAccess","referencedDeclaration":2386,"src":"5231:21:13","typeDescriptions":{"typeIdentifier":"t_function_declaration_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function BaseSmartAccount.init(address,address)"}},{"components":[{"id":4259,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4250,"src":"5271:6:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":4262,"name":"minimalHandler","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4060,"src":"5287:14:13","typeDescriptions":{"typeIdentifier":"t_contract$_DefaultCallbackHandler_$5420","typeString":"contract DefaultCallbackHandler"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_DefaultCallbackHandler_$5420","typeString":"contract DefaultCallbackHandler"}],"id":4261,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5279:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4260,"name":"address","nodeType":"ElementaryTypeName","src":"5279:7:13","typeDescriptions":{}}},"id":4263,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5279:23:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":4264,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5270:33:13","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_address_$","typeString":"tuple(address,address)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_function_declaration_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function BaseSmartAccount.init(address,address)"},{"typeIdentifier":"t_tuple$_t_address_$_t_address_$","typeString":"tuple(address,address)"}],"expression":{"id":4255,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"5199:3:13","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":4256,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5203:10:13","memberName":"encodeCall","nodeType":"MemberAccess","src":"5199:14:13","typeDescriptions":{"typeIdentifier":"t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":4265,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5199:118:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":4254,"id":4266,"nodeType":"Return","src":"5180:137:13"}]},"documentation":{"id":4248,"nodeType":"StructuredDocumentation","src":"4879:195:13","text":" @dev Allows to retrieve the initializer data for the account.\n @param _owner EOA signatory for the account to be deployed\n @return initializer bytes for init method"},"id":4268,"implemented":true,"kind":"function","modifiers":[],"name":"getInitializer","nameLocation":"5088:14:13","nodeType":"FunctionDefinition","parameters":{"id":4251,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4250,"mutability":"mutable","name":"_owner","nameLocation":"5120:6:13","nodeType":"VariableDeclaration","scope":4268,"src":"5112:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4249,"name":"address","nodeType":"ElementaryTypeName","src":"5112:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5102:30:13"},"returnParameters":{"id":4254,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4253,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4268,"src":"5156:12:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4252,"name":"bytes","nodeType":"ElementaryTypeName","src":"5156:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5155:14:13"},"scope":4356,"src":"5079:245:13","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":4354,"nodeType":"Block","src":"5724:711:13","statements":[{"assignments":[4279],"declarations":[{"constant":false,"id":4279,"mutability":"mutable","name":"initializer","nameLocation":"5830:11:13","nodeType":"VariableDeclaration","scope":4354,"src":"5817:24:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4278,"name":"bytes","nodeType":"ElementaryTypeName","src":"5817:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":4283,"initialValue":{"arguments":[{"id":4281,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4271,"src":"5859:6:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4280,"name":"getInitializer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4268,"src":"5844:14:13","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bytes_memory_ptr_$","typeString":"function (address) view returns (bytes memory)"}},"id":4282,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5844:22:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"5817:49:13"},{"assignments":[4285],"declarations":[{"constant":false,"id":4285,"mutability":"mutable","name":"code","nameLocation":"5889:4:13","nodeType":"VariableDeclaration","scope":4354,"src":"5876:17:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4284,"name":"bytes","nodeType":"ElementaryTypeName","src":"5876:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":4300,"initialValue":{"arguments":[{"expression":{"arguments":[{"id":4289,"name":"Proxy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2430,"src":"5931:5:13","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Proxy_$2430_$","typeString":"type(contract Proxy)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_Proxy_$2430_$","typeString":"type(contract Proxy)"}],"id":4288,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"5926:4:13","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4290,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5926:11:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_Proxy_$2430","typeString":"type(contract Proxy)"}},"id":4291,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5938:12:13","memberName":"creationCode","nodeType":"MemberAccess","src":"5926:24:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"arguments":[{"arguments":[{"id":4296,"name":"basicImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4057,"src":"5980:19:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4295,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5972:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":4294,"name":"uint160","nodeType":"ElementaryTypeName","src":"5972:7:13","typeDescriptions":{}}},"id":4297,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5972:28:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":4293,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5964:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":4292,"name":"uint256","nodeType":"ElementaryTypeName","src":"5964:7:13","typeDescriptions":{}}},"id":4298,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5964:37:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4286,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"5896:3:13","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":4287,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5900:12:13","memberName":"encodePacked","nodeType":"MemberAccess","src":"5896:16:13","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":4299,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5896:115:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"5876:135:13"},{"assignments":[4302],"declarations":[{"constant":false,"id":4302,"mutability":"mutable","name":"salt","nameLocation":"6029:4:13","nodeType":"VariableDeclaration","scope":4354,"src":"6021:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4301,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6021:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":4312,"initialValue":{"arguments":[{"arguments":[{"arguments":[{"id":4307,"name":"initializer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4279,"src":"6086:11:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":4306,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"6076:9:13","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":4308,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6076:22:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":4309,"name":"_index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4273,"src":"6100:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4304,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"6059:3:13","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":4305,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6063:12:13","memberName":"encodePacked","nodeType":"MemberAccess","src":"6059:16:13","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":4310,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6059:48:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":4303,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"6036:9:13","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":4311,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6036:81:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"6021:96:13"},{"assignments":[4314],"declarations":[{"constant":false,"id":4314,"mutability":"mutable","name":"hash","nameLocation":"6136:4:13","nodeType":"VariableDeclaration","scope":4354,"src":"6128:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4313,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6128:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":4340,"initialValue":{"arguments":[{"arguments":[{"id":4319,"name":"CREATE2_PREFIX","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4063,"src":"6196:14:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"id":4328,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"6260:4:13","typeDescriptions":{"typeIdentifier":"t_contract$_SmartAccountFactory_$4356","typeString":"contract SmartAccountFactory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_SmartAccountFactory_$4356","typeString":"contract SmartAccountFactory"}],"id":4327,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6252:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4326,"name":"address","nodeType":"ElementaryTypeName","src":"6252:7:13","typeDescriptions":{}}},"id":4329,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6252:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4325,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6244:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":4324,"name":"uint160","nodeType":"ElementaryTypeName","src":"6244:7:13","typeDescriptions":{}}},"id":4330,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6244:22:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":4323,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6236:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":4322,"name":"uint256","nodeType":"ElementaryTypeName","src":"6236:7:13","typeDescriptions":{}}},"id":4331,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6236:31:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4321,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6228:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":4320,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6228:7:13","typeDescriptions":{}}},"id":4332,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6228:40:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":4333,"name":"salt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4302,"src":"6286:4:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"arguments":[{"id":4335,"name":"code","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4285,"src":"6318:4:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":4334,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"6308:9:13","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":4336,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6308:15:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":4337,"name":"initializer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4279,"src":"6341:11:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":4317,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6166:5:13","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":4316,"name":"bytes","nodeType":"ElementaryTypeName","src":"6166:5:13","typeDescriptions":{}}},"id":4318,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6172:6:13","memberName":"concat","nodeType":"MemberAccess","src":"6166:12:13","typeDescriptions":{"typeIdentifier":"t_function_bytesconcat_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":4338,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6166:200:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":4315,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"6143:9:13","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":4339,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6143:233:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"6128:248:13"},{"expression":{"id":4352,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4341,"name":"_account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4276,"src":"6386:8:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"arguments":[{"arguments":[{"id":4348,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4314,"src":"6421:4:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":4347,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6413:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":4346,"name":"uint256","nodeType":"ElementaryTypeName","src":"6413:7:13","typeDescriptions":{}}},"id":4349,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6413:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4345,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6405:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":4344,"name":"uint160","nodeType":"ElementaryTypeName","src":"6405:7:13","typeDescriptions":{}}},"id":4350,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6405:22:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":4343,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6397:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4342,"name":"address","nodeType":"ElementaryTypeName","src":"6397:7:13","typeDescriptions":{}}},"id":4351,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6397:31:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6386:42:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4353,"nodeType":"ExpressionStatement","src":"6386:42:13"}]},"documentation":{"id":4269,"nodeType":"StructuredDocumentation","src":"5330:250:13","text":" @notice Allows to find out account address prior to deployment\n @param _owner EOA signatory for the account to be deployed\n @param _index extra salt that allows to deploy more accounts if needed for same EOA (default 0)"},"functionSelector":"d668bfa8","id":4355,"implemented":true,"kind":"function","modifiers":[],"name":"getAddressForCounterFactualAccount","nameLocation":"5594:34:13","nodeType":"FunctionDefinition","parameters":{"id":4274,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4271,"mutability":"mutable","name":"_owner","nameLocation":"5646:6:13","nodeType":"VariableDeclaration","scope":4355,"src":"5638:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4270,"name":"address","nodeType":"ElementaryTypeName","src":"5638:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4273,"mutability":"mutable","name":"_index","nameLocation":"5670:6:13","nodeType":"VariableDeclaration","scope":4355,"src":"5662:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4272,"name":"uint256","nodeType":"ElementaryTypeName","src":"5662:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5628:54:13"},"returnParameters":{"id":4277,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4276,"mutability":"mutable","name":"_account","nameLocation":"5714:8:13","nodeType":"VariableDeclaration","scope":4355,"src":"5706:16:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4275,"name":"address","nodeType":"ElementaryTypeName","src":"5706:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5705:18:13"},"scope":4356,"src":"5585:850:13","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":4357,"src":"623:5979:13","usedErrors":[]}],"src":"32:6571:13"}},"contracts/smart-contract-wallet/base/Executor.sol":{"id":14,"ast":{"absolutePath":"contracts/smart-contract-wallet/base/Executor.sol","exportedSymbols":{"Enum":[4931],"Executor":[4433]},"id":4434,"license":"LGPL-3.0-only","nodeType":"SourceUnit","nodes":[{"id":4358,"literals":["solidity","0.8",".17"],"nodeType":"PragmaDirective","src":"42:23:14"},{"absolutePath":"contracts/smart-contract-wallet/common/Enum.sol","file":"../common/Enum.sol","id":4360,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4434,"sourceUnit":4932,"src":"67:40:14","symbolAliases":[{"foreign":{"id":4359,"name":"Enum","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4931,"src":"75:4:14","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[],"canonicalName":"Executor","contractDependencies":[],"contractKind":"contract","documentation":{"id":4361,"nodeType":"StructuredDocumentation","src":"109:63:14","text":"@title Executor - A contract that can execute transactions"},"fullyImplemented":true,"id":4433,"linearizedBaseContracts":[4433],"name":"Executor","nameLocation":"190:8:14","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"eventSelector":"3ddd038f78c876172d5dbfd730b14c9f8692dfa197ef104eaac6df3f85a0874a","id":4374,"name":"ExecutionFailure","nameLocation":"261:16:14","nodeType":"EventDefinition","parameters":{"id":4373,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4363,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"303:2:14","nodeType":"VariableDeclaration","scope":4374,"src":"287:18:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4362,"name":"address","nodeType":"ElementaryTypeName","src":"287:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4365,"indexed":true,"mutability":"mutable","name":"value","nameLocation":"331:5:14","nodeType":"VariableDeclaration","scope":4374,"src":"315:21:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4364,"name":"uint256","nodeType":"ElementaryTypeName","src":"315:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4367,"indexed":true,"mutability":"mutable","name":"data","nameLocation":"360:4:14","nodeType":"VariableDeclaration","scope":4374,"src":"346:18:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4366,"name":"bytes","nodeType":"ElementaryTypeName","src":"346:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":4370,"indexed":false,"mutability":"mutable","name":"operation","nameLocation":"389:9:14","nodeType":"VariableDeclaration","scope":4374,"src":"374:24:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Operation_$4930","typeString":"enum Enum.Operation"},"typeName":{"id":4369,"nodeType":"UserDefinedTypeName","pathNode":{"id":4368,"name":"Enum.Operation","nameLocations":["374:4:14","379:9:14"],"nodeType":"IdentifierPath","referencedDeclaration":4930,"src":"374:14:14"},"referencedDeclaration":4930,"src":"374:14:14","typeDescriptions":{"typeIdentifier":"t_enum$_Operation_$4930","typeString":"enum Enum.Operation"}},"visibility":"internal"},{"constant":false,"id":4372,"indexed":false,"mutability":"mutable","name":"txGas","nameLocation":"416:5:14","nodeType":"VariableDeclaration","scope":4374,"src":"408:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4371,"name":"uint256","nodeType":"ElementaryTypeName","src":"408:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"277:150:14"},"src":"255:173:14"},{"anonymous":false,"eventSelector":"81d12fffced46c214dfae8ab8fa0b9f7b69f70c9d500e33f612f2105deb261ee","id":4387,"name":"ExecutionSuccess","nameLocation":"439:16:14","nodeType":"EventDefinition","parameters":{"id":4386,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4376,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"481:2:14","nodeType":"VariableDeclaration","scope":4387,"src":"465:18:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4375,"name":"address","nodeType":"ElementaryTypeName","src":"465:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4378,"indexed":true,"mutability":"mutable","name":"value","nameLocation":"509:5:14","nodeType":"VariableDeclaration","scope":4387,"src":"493:21:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4377,"name":"uint256","nodeType":"ElementaryTypeName","src":"493:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4380,"indexed":true,"mutability":"mutable","name":"data","nameLocation":"538:4:14","nodeType":"VariableDeclaration","scope":4387,"src":"524:18:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4379,"name":"bytes","nodeType":"ElementaryTypeName","src":"524:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":4383,"indexed":false,"mutability":"mutable","name":"operation","nameLocation":"567:9:14","nodeType":"VariableDeclaration","scope":4387,"src":"552:24:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Operation_$4930","typeString":"enum Enum.Operation"},"typeName":{"id":4382,"nodeType":"UserDefinedTypeName","pathNode":{"id":4381,"name":"Enum.Operation","nameLocations":["552:4:14","557:9:14"],"nodeType":"IdentifierPath","referencedDeclaration":4930,"src":"552:14:14"},"referencedDeclaration":4930,"src":"552:14:14","typeDescriptions":{"typeIdentifier":"t_enum$_Operation_$4930","typeString":"enum Enum.Operation"}},"visibility":"internal"},{"constant":false,"id":4385,"indexed":false,"mutability":"mutable","name":"txGas","nameLocation":"594:5:14","nodeType":"VariableDeclaration","scope":4387,"src":"586:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4384,"name":"uint256","nodeType":"ElementaryTypeName","src":"586:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"455:150:14"},"src":"433:173:14"},{"body":{"id":4431,"nodeType":"Block","src":"794:903:14","statements":[{"condition":{"commonType":{"typeIdentifier":"t_enum$_Operation_$4930","typeString":"enum Enum.Operation"},"id":4407,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4403,"name":"operation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4396,"src":"808:9:14","typeDescriptions":{"typeIdentifier":"t_enum$_Operation_$4930","typeString":"enum Enum.Operation"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"expression":{"id":4404,"name":"Enum","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4931,"src":"821:4:14","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Enum_$4931_$","typeString":"type(contract Enum)"}},"id":4405,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"826:9:14","memberName":"Operation","nodeType":"MemberAccess","referencedDeclaration":4930,"src":"821:14:14","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Operation_$4930_$","typeString":"type(enum Enum.Operation)"}},"id":4406,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"836:12:14","memberName":"DelegateCall","nodeType":"MemberAccess","referencedDeclaration":4929,"src":"821:27:14","typeDescriptions":{"typeIdentifier":"t_enum$_Operation_$4930","typeString":"enum Enum.Operation"}},"src":"808:40:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":4411,"nodeType":"Block","src":"1189:352:14","statements":[{"AST":{"nodeType":"YulBlock","src":"1272:259:14","statements":[{"nodeType":"YulAssignment","src":"1290:227:14","value":{"arguments":[{"name":"txGas","nodeType":"YulIdentifier","src":"1327:5:14"},{"name":"to","nodeType":"YulIdentifier","src":"1354:2:14"},{"name":"value","nodeType":"YulIdentifier","src":"1378:5:14"},{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"1409:4:14"},{"kind":"number","nodeType":"YulLiteral","src":"1415:4:14","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1405:3:14"},"nodeType":"YulFunctionCall","src":"1405:15:14"},{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"1448:4:14"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1442:5:14"},"nodeType":"YulFunctionCall","src":"1442:11:14"},{"kind":"number","nodeType":"YulLiteral","src":"1475:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1498:1:14","type":"","value":"0"}],"functionName":{"name":"call","nodeType":"YulIdentifier","src":"1301:4:14"},"nodeType":"YulFunctionCall","src":"1301:216:14"},"variableNames":[{"name":"success","nodeType":"YulIdentifier","src":"1290:7:14"}]}]},"evmVersion":"london","externalReferences":[{"declaration":4393,"isOffset":false,"isSlot":false,"src":"1409:4:14","valueSize":1},{"declaration":4393,"isOffset":false,"isSlot":false,"src":"1448:4:14","valueSize":1},{"declaration":4401,"isOffset":false,"isSlot":false,"src":"1290:7:14","valueSize":1},{"declaration":4389,"isOffset":false,"isSlot":false,"src":"1354:2:14","valueSize":1},{"declaration":4398,"isOffset":false,"isSlot":false,"src":"1327:5:14","valueSize":1},{"declaration":4391,"isOffset":false,"isSlot":false,"src":"1378:5:14","valueSize":1}],"id":4410,"nodeType":"InlineAssembly","src":"1263:268:14"}]},"id":4412,"nodeType":"IfStatement","src":"804:737:14","trueBody":{"id":4409,"nodeType":"Block","src":"850:333:14","statements":[{"AST":{"nodeType":"YulBlock","src":"933:240:14","statements":[{"nodeType":"YulAssignment","src":"951:208:14","value":{"arguments":[{"name":"txGas","nodeType":"YulIdentifier","src":"996:5:14"},{"name":"to","nodeType":"YulIdentifier","src":"1023:2:14"},{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"1051:4:14"},{"kind":"number","nodeType":"YulLiteral","src":"1057:4:14","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1047:3:14"},"nodeType":"YulFunctionCall","src":"1047:15:14"},{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"1090:4:14"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1084:5:14"},"nodeType":"YulFunctionCall","src":"1084:11:14"},{"kind":"number","nodeType":"YulLiteral","src":"1117:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1140:1:14","type":"","value":"0"}],"functionName":{"name":"delegatecall","nodeType":"YulIdentifier","src":"962:12:14"},"nodeType":"YulFunctionCall","src":"962:197:14"},"variableNames":[{"name":"success","nodeType":"YulIdentifier","src":"951:7:14"}]}]},"evmVersion":"london","externalReferences":[{"declaration":4393,"isOffset":false,"isSlot":false,"src":"1051:4:14","valueSize":1},{"declaration":4393,"isOffset":false,"isSlot":false,"src":"1090:4:14","valueSize":1},{"declaration":4401,"isOffset":false,"isSlot":false,"src":"951:7:14","valueSize":1},{"declaration":4389,"isOffset":false,"isSlot":false,"src":"1023:2:14","valueSize":1},{"declaration":4398,"isOffset":false,"isSlot":false,"src":"996:5:14","valueSize":1}],"id":4408,"nodeType":"InlineAssembly","src":"924:249:14"}]}},{"condition":{"id":4413,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4401,"src":"1554:7:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"eventCall":{"arguments":[{"id":4423,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4389,"src":"1656:2:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4424,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4391,"src":"1660:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4425,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4393,"src":"1667:4:14","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":4426,"name":"operation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4396,"src":"1673:9:14","typeDescriptions":{"typeIdentifier":"t_enum$_Operation_$4930","typeString":"enum Enum.Operation"}},{"id":4427,"name":"txGas","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4398,"src":"1684:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_enum$_Operation_$4930","typeString":"enum Enum.Operation"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4422,"name":"ExecutionFailure","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4374,"src":"1639:16:14","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$_t_enum$_Operation_$4930_$_t_uint256_$returns$__$","typeString":"function (address,uint256,bytes memory,enum Enum.Operation,uint256)"}},"id":4428,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1639:51:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4429,"nodeType":"EmitStatement","src":"1634:56:14"},"id":4430,"nodeType":"IfStatement","src":"1550:140:14","trueBody":{"eventCall":{"arguments":[{"id":4415,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4389,"src":"1585:2:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4416,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4391,"src":"1589:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4417,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4393,"src":"1596:4:14","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":4418,"name":"operation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4396,"src":"1602:9:14","typeDescriptions":{"typeIdentifier":"t_enum$_Operation_$4930","typeString":"enum Enum.Operation"}},{"id":4419,"name":"txGas","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4398,"src":"1613:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_enum$_Operation_$4930","typeString":"enum Enum.Operation"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4414,"name":"ExecutionSuccess","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4387,"src":"1568:16:14","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$_t_enum$_Operation_$4930_$_t_uint256_$returns$__$","typeString":"function (address,uint256,bytes memory,enum Enum.Operation,uint256)"}},"id":4420,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1568:51:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4421,"nodeType":"EmitStatement","src":"1563:56:14"}}]},"id":4432,"implemented":true,"kind":"function","modifiers":[],"name":"execute","nameLocation":"621:7:14","nodeType":"FunctionDefinition","parameters":{"id":4399,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4389,"mutability":"mutable","name":"to","nameLocation":"646:2:14","nodeType":"VariableDeclaration","scope":4432,"src":"638:10:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4388,"name":"address","nodeType":"ElementaryTypeName","src":"638:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4391,"mutability":"mutable","name":"value","nameLocation":"666:5:14","nodeType":"VariableDeclaration","scope":4432,"src":"658:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4390,"name":"uint256","nodeType":"ElementaryTypeName","src":"658:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4393,"mutability":"mutable","name":"data","nameLocation":"694:4:14","nodeType":"VariableDeclaration","scope":4432,"src":"681:17:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4392,"name":"bytes","nodeType":"ElementaryTypeName","src":"681:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":4396,"mutability":"mutable","name":"operation","nameLocation":"723:9:14","nodeType":"VariableDeclaration","scope":4432,"src":"708:24:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Operation_$4930","typeString":"enum Enum.Operation"},"typeName":{"id":4395,"nodeType":"UserDefinedTypeName","pathNode":{"id":4394,"name":"Enum.Operation","nameLocations":["708:4:14","713:9:14"],"nodeType":"IdentifierPath","referencedDeclaration":4930,"src":"708:14:14"},"referencedDeclaration":4930,"src":"708:14:14","typeDescriptions":{"typeIdentifier":"t_enum$_Operation_$4930","typeString":"enum Enum.Operation"}},"visibility":"internal"},{"constant":false,"id":4398,"mutability":"mutable","name":"txGas","nameLocation":"750:5:14","nodeType":"VariableDeclaration","scope":4432,"src":"742:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4397,"name":"uint256","nodeType":"ElementaryTypeName","src":"742:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"628:133:14"},"returnParameters":{"id":4402,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4401,"mutability":"mutable","name":"success","nameLocation":"785:7:14","nodeType":"VariableDeclaration","scope":4432,"src":"780:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4400,"name":"bool","nodeType":"ElementaryTypeName","src":"780:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"779:14:14"},"scope":4433,"src":"612:1085:14","stateMutability":"nonpayable","virtual":false,"visibility":"internal"}],"scope":4434,"src":"172:1527:14","usedErrors":[]}],"src":"42:1658:14"}},"contracts/smart-contract-wallet/base/FallbackManager.sol":{"id":15,"ast":{"absolutePath":"contracts/smart-contract-wallet/base/FallbackManager.sol","exportedSymbols":{"FallbackManager":[4517],"FallbackManagerErrors":[4943],"SelfAuthorized":[5257]},"id":4518,"license":"LGPL-3.0-only","nodeType":"SourceUnit","nodes":[{"id":4435,"literals":["solidity","0.8",".17"],"nodeType":"PragmaDirective","src":"42:23:15"},{"absolutePath":"contracts/smart-contract-wallet/common/SelfAuthorized.sol","file":"../common/SelfAuthorized.sol","id":4437,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4518,"sourceUnit":5258,"src":"67:60:15","symbolAliases":[{"foreign":{"id":4436,"name":"SelfAuthorized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5257,"src":"75:14:15","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"contracts/smart-contract-wallet/common/Errors.sol","file":"../common/Errors.sol","id":4439,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4518,"sourceUnit":5129,"src":"128:59:15","symbolAliases":[{"foreign":{"id":4438,"name":"FallbackManagerErrors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4943,"src":"136:21:15","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":4441,"name":"SelfAuthorized","nameLocations":["544:14:15"],"nodeType":"IdentifierPath","referencedDeclaration":5257,"src":"544:14:15"},"id":4442,"nodeType":"InheritanceSpecifier","src":"544:14:15"},{"baseName":{"id":4443,"name":"FallbackManagerErrors","nameLocations":["560:21:15"],"nodeType":"IdentifierPath","referencedDeclaration":4943,"src":"560:21:15"},"id":4444,"nodeType":"InheritanceSpecifier","src":"560:21:15"}],"canonicalName":"FallbackManager","contractDependencies":[],"contractKind":"contract","documentation":{"id":4440,"nodeType":"StructuredDocumentation","src":"189:326:15","text":"   @title Fallback Manager - A contract that manages fallback calls made to the Smart Account\n   @dev Fallback calls are handled by a `handler` contract that is stored at FALLBACK_HANDLER_STORAGE_SLOT\n        fallback calls are not delegated to the `handler` so they can not directly change Smart Account storage"},"fullyImplemented":true,"id":4517,"linearizedBaseContracts":[4517,4943,5257,5100],"name":"FallbackManager","nameLocation":"525:15:15","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":4447,"mutability":"constant","name":"FALLBACK_HANDLER_STORAGE_SLOT","nameLocation":"691:29:15","nodeType":"VariableDeclaration","scope":4517,"src":"665:132:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4445,"name":"bytes32","nodeType":"ElementaryTypeName","src":"665:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307836633961366334613339323834653337656431636635336433333735373764313432313261343837306662393736613433363663363933623933393931386434","id":4446,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"731:66:15","typeDescriptions":{"typeIdentifier":"t_rational_49122629484629529244014240937346711770925847994644146912111677022347558721748_by_1","typeString":"int_const 4912...(69 digits omitted)...1748"},"value":"0x6c9a6c4a39284e37ed1cf53d337577d14212a4870fb976a4366c693b939918d4"},"visibility":"internal"},{"anonymous":false,"eventSelector":"06be9a1bea257286cf2afa8205ed494ca9d6a4b41aa58d04238deebada20fb0c","id":4453,"name":"ChangedFallbackHandler","nameLocation":"810:22:15","nodeType":"EventDefinition","parameters":{"id":4452,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4449,"indexed":true,"mutability":"mutable","name":"previousHandler","nameLocation":"858:15:15","nodeType":"VariableDeclaration","scope":4453,"src":"842:31:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4448,"name":"address","nodeType":"ElementaryTypeName","src":"842:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4451,"indexed":true,"mutability":"mutable","name":"handler","nameLocation":"899:7:15","nodeType":"VariableDeclaration","scope":4453,"src":"883:23:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4450,"name":"address","nodeType":"ElementaryTypeName","src":"883:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"832:80:15"},"src":"804:109:15"},{"body":{"id":4461,"nodeType":"Block","src":"1009:998:15","statements":[{"assignments":[4457],"declarations":[{"constant":false,"id":4457,"mutability":"mutable","name":"slot","nameLocation":"1027:4:15","nodeType":"VariableDeclaration","scope":4461,"src":"1019:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4456,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1019:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":4459,"initialValue":{"id":4458,"name":"FALLBACK_HANDLER_STORAGE_SLOT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4447,"src":"1034:29:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"1019:44:15"},{"AST":{"nodeType":"YulBlock","src":"1138:863:15","statements":[{"nodeType":"YulVariableDeclaration","src":"1152:26:15","value":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"1173:4:15"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"1167:5:15"},"nodeType":"YulFunctionCall","src":"1167:11:15"},"variables":[{"name":"handler","nodeType":"YulTypedName","src":"1156:7:15","type":""}]},{"body":{"nodeType":"YulBlock","src":"1210:44:15","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1235:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1238:1:15","type":"","value":"0"}],"functionName":{"name":"return","nodeType":"YulIdentifier","src":"1228:6:15"},"nodeType":"YulFunctionCall","src":"1228:12:15"},"nodeType":"YulExpressionStatement","src":"1228:12:15"}]},"condition":{"arguments":[{"name":"handler","nodeType":"YulIdentifier","src":"1201:7:15"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1194:6:15"},"nodeType":"YulFunctionCall","src":"1194:15:15"},"nodeType":"YulIf","src":"1191:63:15"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1280:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1283:1:15","type":"","value":"0"},{"arguments":[],"functionName":{"name":"calldatasize","nodeType":"YulIdentifier","src":"1286:12:15"},"nodeType":"YulFunctionCall","src":"1286:14:15"}],"functionName":{"name":"calldatacopy","nodeType":"YulIdentifier","src":"1267:12:15"},"nodeType":"YulFunctionCall","src":"1267:34:15"},"nodeType":"YulExpressionStatement","src":"1267:34:15"},{"expression":{"arguments":[{"arguments":[],"functionName":{"name":"calldatasize","nodeType":"YulIdentifier","src":"1499:12:15"},"nodeType":"YulFunctionCall","src":"1499:14:15"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1519:2:15","type":"","value":"96"},{"arguments":[],"functionName":{"name":"caller","nodeType":"YulIdentifier","src":"1523:6:15"},"nodeType":"YulFunctionCall","src":"1523:8:15"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"1515:3:15"},"nodeType":"YulFunctionCall","src":"1515:17:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1492:6:15"},"nodeType":"YulFunctionCall","src":"1492:41:15"},"nodeType":"YulExpressionStatement","src":"1492:41:15"},{"nodeType":"YulVariableDeclaration","src":"1611:198:15","value":{"arguments":[{"arguments":[],"functionName":{"name":"gas","nodeType":"YulIdentifier","src":"1648:3:15"},"nodeType":"YulFunctionCall","src":"1648:5:15"},{"name":"handler","nodeType":"YulIdentifier","src":"1671:7:15"},{"kind":"number","nodeType":"YulLiteral","src":"1696:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1715:1:15","type":"","value":"0"},{"arguments":[{"arguments":[],"functionName":{"name":"calldatasize","nodeType":"YulIdentifier","src":"1738:12:15"},"nodeType":"YulFunctionCall","src":"1738:14:15"},{"kind":"number","nodeType":"YulLiteral","src":"1754:2:15","type":"","value":"20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1734:3:15"},"nodeType":"YulFunctionCall","src":"1734:23:15"},{"kind":"number","nodeType":"YulLiteral","src":"1775:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1794:1:15","type":"","value":"0"}],"functionName":{"name":"call","nodeType":"YulIdentifier","src":"1626:4:15"},"nodeType":"YulFunctionCall","src":"1626:183:15"},"variables":[{"name":"success","nodeType":"YulTypedName","src":"1615:7:15","type":""}]},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1837:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1840:1:15","type":"","value":"0"},{"arguments":[],"functionName":{"name":"returndatasize","nodeType":"YulIdentifier","src":"1843:14:15"},"nodeType":"YulFunctionCall","src":"1843:16:15"}],"functionName":{"name":"returndatacopy","nodeType":"YulIdentifier","src":"1822:14:15"},"nodeType":"YulFunctionCall","src":"1822:38:15"},"nodeType":"YulExpressionStatement","src":"1822:38:15"},{"body":{"nodeType":"YulBlock","src":"1892:59:15","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1917:1:15","type":"","value":"0"},{"arguments":[],"functionName":{"name":"returndatasize","nodeType":"YulIdentifier","src":"1920:14:15"},"nodeType":"YulFunctionCall","src":"1920:16:15"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1910:6:15"},"nodeType":"YulFunctionCall","src":"1910:27:15"},"nodeType":"YulExpressionStatement","src":"1910:27:15"}]},"condition":{"arguments":[{"name":"success","nodeType":"YulIdentifier","src":"1883:7:15"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1876:6:15"},"nodeType":"YulFunctionCall","src":"1876:15:15"},"nodeType":"YulIf","src":"1873:78:15"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1971:1:15","type":"","value":"0"},{"arguments":[],"functionName":{"name":"returndatasize","nodeType":"YulIdentifier","src":"1974:14:15"},"nodeType":"YulFunctionCall","src":"1974:16:15"}],"functionName":{"name":"return","nodeType":"YulIdentifier","src":"1964:6:15"},"nodeType":"YulFunctionCall","src":"1964:27:15"},"nodeType":"YulExpressionStatement","src":"1964:27:15"}]},"evmVersion":"london","externalReferences":[{"declaration":4457,"isOffset":false,"isSlot":false,"src":"1173:4:15","valueSize":1}],"id":4460,"nodeType":"InlineAssembly","src":"1129:872:15"}]},"id":4462,"implemented":true,"kind":"fallback","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":4454,"nodeType":"ParameterList","parameters":[],"src":"997:2:15"},"returnParameters":{"id":4455,"nodeType":"ParameterList","parameters":[],"src":"1009:0:15"},"scope":4517,"src":"989:1018:15","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":4468,"nodeType":"Block","src":"2084:153:15","statements":[{"AST":{"nodeType":"YulBlock","src":"2159:72:15","statements":[{"nodeType":"YulAssignment","src":"2173:48:15","value":{"arguments":[{"name":"FALLBACK_HANDLER_STORAGE_SLOT","nodeType":"YulIdentifier","src":"2191:29:15"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"2185:5:15"},"nodeType":"YulFunctionCall","src":"2185:36:15"},"variableNames":[{"name":"_handler","nodeType":"YulIdentifier","src":"2173:8:15"}]}]},"evmVersion":"london","externalReferences":[{"declaration":4447,"isOffset":false,"isSlot":false,"src":"2191:29:15","valueSize":1},{"declaration":4465,"isOffset":false,"isSlot":false,"src":"2173:8:15","valueSize":1}],"id":4467,"nodeType":"InlineAssembly","src":"2150:81:15"}]},"functionSelector":"856dfd99","id":4469,"implemented":true,"kind":"function","modifiers":[],"name":"getFallbackHandler","nameLocation":"2022:18:15","nodeType":"FunctionDefinition","parameters":{"id":4463,"nodeType":"ParameterList","parameters":[],"src":"2040:2:15"},"returnParameters":{"id":4466,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4465,"mutability":"mutable","name":"_handler","nameLocation":"2074:8:15","nodeType":"VariableDeclaration","scope":4469,"src":"2066:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4464,"name":"address","nodeType":"ElementaryTypeName","src":"2066:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2065:18:15"},"scope":4517,"src":"2013:224:15","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":4490,"nodeType":"Block","src":"2575:294:15","statements":[{"assignments":[4478],"declarations":[{"constant":false,"id":4478,"mutability":"mutable","name":"previousHandler","nameLocation":"2593:15:15","nodeType":"VariableDeclaration","scope":4490,"src":"2585:23:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4477,"name":"address","nodeType":"ElementaryTypeName","src":"2585:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":4479,"nodeType":"VariableDeclarationStatement","src":"2585:23:15"},{"AST":{"nodeType":"YulBlock","src":"2683:79:15","statements":[{"nodeType":"YulAssignment","src":"2697:55:15","value":{"arguments":[{"name":"FALLBACK_HANDLER_STORAGE_SLOT","nodeType":"YulIdentifier","src":"2722:29:15"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"2716:5:15"},"nodeType":"YulFunctionCall","src":"2716:36:15"},"variableNames":[{"name":"previousHandler","nodeType":"YulIdentifier","src":"2697:15:15"}]}]},"evmVersion":"london","externalReferences":[{"declaration":4447,"isOffset":false,"isSlot":false,"src":"2722:29:15","valueSize":1},{"declaration":4478,"isOffset":false,"isSlot":false,"src":"2697:15:15","valueSize":1}],"id":4480,"nodeType":"InlineAssembly","src":"2674:88:15"},{"expression":{"arguments":[{"id":4482,"name":"handler","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4472,"src":"2791:7:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4481,"name":"_setFallbackHandler","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4512,"src":"2771:19:15","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":4483,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2771:28:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4484,"nodeType":"ExpressionStatement","src":"2771:28:15"},{"eventCall":{"arguments":[{"id":4486,"name":"previousHandler","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4478,"src":"2837:15:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4487,"name":"handler","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4472,"src":"2854:7:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":4485,"name":"ChangedFallbackHandler","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4453,"src":"2814:22:15","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":4488,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2814:48:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4489,"nodeType":"EmitStatement","src":"2809:53:15"}]},"documentation":{"id":4470,"nodeType":"StructuredDocumentation","src":"2243:264:15","text":"@dev Allows to add a contract to handle fallback calls.\n      Only fallback calls without value and with data will be forwarded.\n      This can only be done via a smartAccount transaction.\n @param handler contract to handle fallback calls."},"functionSelector":"f08a0323","id":4491,"implemented":true,"kind":"function","modifiers":[{"id":4475,"kind":"modifierInvocation","modifierName":{"id":4474,"name":"authorized","nameLocations":["2564:10:15"],"nodeType":"IdentifierPath","referencedDeclaration":5256,"src":"2564:10:15"},"nodeType":"ModifierInvocation","src":"2564:10:15"}],"name":"setFallbackHandler","nameLocation":"2521:18:15","nodeType":"FunctionDefinition","parameters":{"id":4473,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4472,"mutability":"mutable","name":"handler","nameLocation":"2548:7:15","nodeType":"VariableDeclaration","scope":4491,"src":"2540:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4471,"name":"address","nodeType":"ElementaryTypeName","src":"2540:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2539:17:15"},"returnParameters":{"id":4476,"nodeType":"ParameterList","parameters":[],"src":"2575:0:15"},"scope":4517,"src":"2512:357:15","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":4511,"nodeType":"Block","src":"2930:245:15","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":4501,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4496,"name":"handler","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4493,"src":"2944:7:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":4499,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2963:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":4498,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2955:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4497,"name":"address","nodeType":"ElementaryTypeName","src":"2955:7:15","typeDescriptions":{}}},"id":4500,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2955:10:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2944:21:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4505,"nodeType":"IfStatement","src":"2940:55:15","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":4502,"name":"HandlerCannotBeZero","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4942,"src":"2974:19:15","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":4503,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2974:21:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4504,"nodeType":"RevertStatement","src":"2967:28:15"}},{"assignments":[4507],"declarations":[{"constant":false,"id":4507,"mutability":"mutable","name":"slot","nameLocation":"3013:4:15","nodeType":"VariableDeclaration","scope":4511,"src":"3005:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4506,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3005:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":4509,"initialValue":{"id":4508,"name":"FALLBACK_HANDLER_STORAGE_SLOT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4447,"src":"3020:29:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"3005:44:15"},{"AST":{"nodeType":"YulBlock","src":"3124:45:15","statements":[{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"3145:4:15"},{"name":"handler","nodeType":"YulIdentifier","src":"3151:7:15"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"3138:6:15"},"nodeType":"YulFunctionCall","src":"3138:21:15"},"nodeType":"YulExpressionStatement","src":"3138:21:15"}]},"evmVersion":"london","externalReferences":[{"declaration":4493,"isOffset":false,"isSlot":false,"src":"3151:7:15","valueSize":1},{"declaration":4507,"isOffset":false,"isSlot":false,"src":"3145:4:15","valueSize":1}],"id":4510,"nodeType":"InlineAssembly","src":"3115:54:15"}]},"id":4512,"implemented":true,"kind":"function","modifiers":[],"name":"_setFallbackHandler","nameLocation":"2884:19:15","nodeType":"FunctionDefinition","parameters":{"id":4494,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4493,"mutability":"mutable","name":"handler","nameLocation":"2912:7:15","nodeType":"VariableDeclaration","scope":4512,"src":"2904:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4492,"name":"address","nodeType":"ElementaryTypeName","src":"2904:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2903:17:15"},"returnParameters":{"id":4495,"nodeType":"ParameterList","parameters":[],"src":"2930:0:15"},"scope":4517,"src":"2875:300:15","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"constant":false,"id":4516,"mutability":"mutable","name":"__gap","nameLocation":"3201:5:15","nodeType":"VariableDeclaration","scope":4517,"src":"3181:25:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$24_storage","typeString":"uint256[24]"},"typeName":{"baseType":{"id":4513,"name":"uint256","nodeType":"ElementaryTypeName","src":"3181:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4515,"length":{"hexValue":"3234","id":4514,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3189:2:15","typeDescriptions":{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},"value":"24"},"nodeType":"ArrayTypeName","src":"3181:11:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$24_storage_ptr","typeString":"uint256[24]"}},"visibility":"private"}],"scope":4518,"src":"516:2693:15","usedErrors":[4942,5099]}],"src":"42:3168:15"}},"contracts/smart-contract-wallet/base/ModuleManager.sol":{"id":16,"ast":{"absolutePath":"contracts/smart-contract-wallet/base/ModuleManager.sol","exportedSymbols":{"Enum":[4931],"Executor":[4433],"ModuleManager":[4924],"ModuleManagerErrors":[5094],"SelfAuthorized":[5257]},"id":4925,"license":"LGPL-3.0-only","nodeType":"SourceUnit","nodes":[{"id":4519,"literals":["solidity","0.8",".17"],"nodeType":"PragmaDirective","src":"42:23:16"},{"absolutePath":"contracts/smart-contract-wallet/common/SelfAuthorized.sol","file":"../common/SelfAuthorized.sol","id":4521,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4925,"sourceUnit":5258,"src":"67:60:16","symbolAliases":[{"foreign":{"id":4520,"name":"SelfAuthorized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5257,"src":"75:14:16","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"contracts/smart-contract-wallet/base/Executor.sol","file":"./Executor.sol","id":4524,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4925,"sourceUnit":4434,"src":"128:46:16","symbolAliases":[{"foreign":{"id":4522,"name":"Executor","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4433,"src":"136:8:16","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":4523,"name":"Enum","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4931,"src":"146:4:16","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"contracts/smart-contract-wallet/common/Errors.sol","file":"../common/Errors.sol","id":4526,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4925,"sourceUnit":5129,"src":"175:57:16","symbolAliases":[{"foreign":{"id":4525,"name":"ModuleManagerErrors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5094,"src":"183:19:16","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":4528,"name":"SelfAuthorized","nameLocations":["417:14:16"],"nodeType":"IdentifierPath","referencedDeclaration":5257,"src":"417:14:16"},"id":4529,"nodeType":"InheritanceSpecifier","src":"417:14:16"},{"baseName":{"id":4530,"name":"Executor","nameLocations":["433:8:16"],"nodeType":"IdentifierPath","referencedDeclaration":4433,"src":"433:8:16"},"id":4531,"nodeType":"InheritanceSpecifier","src":"433:8:16"},{"baseName":{"id":4532,"name":"ModuleManagerErrors","nameLocations":["443:19:16"],"nodeType":"IdentifierPath","referencedDeclaration":5094,"src":"443:19:16"},"id":4533,"nodeType":"InheritanceSpecifier","src":"443:19:16"}],"canonicalName":"ModuleManager","contractDependencies":[],"contractKind":"contract","documentation":{"id":4527,"nodeType":"StructuredDocumentation","src":"234:156:16","text":" @title Module Manager - A contract that manages modules that can execute transactions\n        on behalf of the Smart Account via this contract."},"fullyImplemented":true,"id":4924,"linearizedBaseContracts":[4924,5094,4433,5257,5100],"name":"ModuleManager","nameLocation":"400:13:16","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":4539,"mutability":"constant","name":"SENTINEL_MODULES","nameLocation":"495:16:16","nodeType":"VariableDeclaration","scope":4924,"src":"469:57:16","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4534,"name":"address","nodeType":"ElementaryTypeName","src":"469:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":{"arguments":[{"hexValue":"307831","id":4537,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"522:3:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"0x1"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"}],"id":4536,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"514:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4535,"name":"address","nodeType":"ElementaryTypeName","src":"514:7:16","typeDescriptions":{}}},"id":4538,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"514:12:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4543,"mutability":"mutable","name":"modules","nameLocation":"570:7:16","nodeType":"VariableDeclaration","scope":4924,"src":"533:44:16","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_address_$","typeString":"mapping(address => address)"},"typeName":{"id":4542,"keyType":{"id":4540,"name":"address","nodeType":"ElementaryTypeName","src":"541:7:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"533:27:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_address_$","typeString":"mapping(address => address)"},"valueType":{"id":4541,"name":"address","nodeType":"ElementaryTypeName","src":"552:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}},"visibility":"internal"},{"anonymous":false,"eventSelector":"ecdf3a3effea5783a3c4c2140e677577666428d44ed9d474a0b3a4c9943f8440","id":4547,"name":"EnabledModule","nameLocation":"604:13:16","nodeType":"EventDefinition","parameters":{"id":4546,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4545,"indexed":false,"mutability":"mutable","name":"module","nameLocation":"626:6:16","nodeType":"VariableDeclaration","scope":4547,"src":"618:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4544,"name":"address","nodeType":"ElementaryTypeName","src":"618:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"617:16:16"},"src":"598:36:16"},{"anonymous":false,"eventSelector":"aab4fa2b463f581b2b32cb3b7e3b704b9ce37cc209b5fb4d77e593ace4054276","id":4551,"name":"DisabledModule","nameLocation":"645:14:16","nodeType":"EventDefinition","parameters":{"id":4550,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4549,"indexed":false,"mutability":"mutable","name":"module","nameLocation":"668:6:16","nodeType":"VariableDeclaration","scope":4551,"src":"660:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4548,"name":"address","nodeType":"ElementaryTypeName","src":"660:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"659:16:16"},"src":"639:37:16"},{"anonymous":false,"eventSelector":"6895c13664aa4f67288b25d7a21d7aaa34916e355fb9b6fae0a139a9085becb8","id":4555,"name":"ExecutionFromModuleSuccess","nameLocation":"687:26:16","nodeType":"EventDefinition","parameters":{"id":4554,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4553,"indexed":true,"mutability":"mutable","name":"module","nameLocation":"730:6:16","nodeType":"VariableDeclaration","scope":4555,"src":"714:22:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4552,"name":"address","nodeType":"ElementaryTypeName","src":"714:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"713:24:16"},"src":"681:57:16"},{"anonymous":false,"eventSelector":"acd2c8702804128fdb0db2bb49f6d127dd0181c13fd45dbfe16de0930e2bd375","id":4559,"name":"ExecutionFromModuleFailure","nameLocation":"749:26:16","nodeType":"EventDefinition","parameters":{"id":4558,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4557,"indexed":true,"mutability":"mutable","name":"module","nameLocation":"792:6:16","nodeType":"VariableDeclaration","scope":4559,"src":"776:22:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4556,"name":"address","nodeType":"ElementaryTypeName","src":"776:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"775:24:16"},"src":"743:57:16"},{"anonymous":false,"eventSelector":"8c014e41cffd68ba64f3e7830b8b2e4ee860509d8deab25ebbcbba2f0405e2da","id":4572,"name":"ModuleTransaction","nameLocation":"811:17:16","nodeType":"EventDefinition","parameters":{"id":4571,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4561,"indexed":false,"mutability":"mutable","name":"module","nameLocation":"846:6:16","nodeType":"VariableDeclaration","scope":4572,"src":"838:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4560,"name":"address","nodeType":"ElementaryTypeName","src":"838:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4563,"indexed":false,"mutability":"mutable","name":"to","nameLocation":"870:2:16","nodeType":"VariableDeclaration","scope":4572,"src":"862:10:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4562,"name":"address","nodeType":"ElementaryTypeName","src":"862:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4565,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"890:5:16","nodeType":"VariableDeclaration","scope":4572,"src":"882:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4564,"name":"uint256","nodeType":"ElementaryTypeName","src":"882:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4567,"indexed":false,"mutability":"mutable","name":"data","nameLocation":"911:4:16","nodeType":"VariableDeclaration","scope":4572,"src":"905:10:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4566,"name":"bytes","nodeType":"ElementaryTypeName","src":"905:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":4570,"indexed":false,"mutability":"mutable","name":"operation","nameLocation":"940:9:16","nodeType":"VariableDeclaration","scope":4572,"src":"925:24:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Operation_$4930","typeString":"enum Enum.Operation"},"typeName":{"id":4569,"nodeType":"UserDefinedTypeName","pathNode":{"id":4568,"name":"Enum.Operation","nameLocations":["925:4:16","930:9:16"],"nodeType":"IdentifierPath","referencedDeclaration":4930,"src":"925:14:16"},"referencedDeclaration":4930,"src":"925:14:16","typeDescriptions":{"typeIdentifier":"t_enum$_Operation_$4930","typeString":"enum Enum.Operation"}},"visibility":"internal"}],"src":"828:127:16"},"src":"805:151:16"},{"body":{"id":4638,"nodeType":"Block","src":"1377:694:16","statements":[{"expression":{"id":4591,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4585,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4581,"src":"1428:5:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4589,"name":"pageSize","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4577,"src":"1450:8:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4588,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"1436:13:16","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_address_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (address[] memory)"},"typeName":{"baseType":{"id":4586,"name":"address","nodeType":"ElementaryTypeName","src":"1440:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4587,"nodeType":"ArrayTypeName","src":"1440:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}}},"id":4590,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1436:23:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"src":"1428:31:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":4592,"nodeType":"ExpressionStatement","src":"1428:31:16"},{"assignments":[4594],"declarations":[{"constant":false,"id":4594,"mutability":"mutable","name":"moduleCount","nameLocation":"1511:11:16","nodeType":"VariableDeclaration","scope":4638,"src":"1503:19:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4593,"name":"uint256","nodeType":"ElementaryTypeName","src":"1503:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4595,"nodeType":"VariableDeclarationStatement","src":"1503:19:16"},{"assignments":[4597],"declarations":[{"constant":false,"id":4597,"mutability":"mutable","name":"currentModule","nameLocation":"1540:13:16","nodeType":"VariableDeclaration","scope":4638,"src":"1532:21:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4596,"name":"address","nodeType":"ElementaryTypeName","src":"1532:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":4601,"initialValue":{"baseExpression":{"id":4598,"name":"modules","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4543,"src":"1556:7:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_address_$","typeString":"mapping(address => address)"}},"id":4600,"indexExpression":{"id":4599,"name":"start","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4575,"src":"1564:5:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1556:14:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"1532:38:16"},{"body":{"id":4631,"nodeType":"Block","src":"1727:138:16","statements":[{"expression":{"id":4620,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":4616,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4581,"src":"1741:5:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":4618,"indexExpression":{"id":4617,"name":"moduleCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4594,"src":"1747:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1741:18:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4619,"name":"currentModule","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4597,"src":"1762:13:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1741:34:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4621,"nodeType":"ExpressionStatement","src":"1741:34:16"},{"expression":{"id":4626,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4622,"name":"currentModule","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4597,"src":"1789:13:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":4623,"name":"modules","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4543,"src":"1805:7:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_address_$","typeString":"mapping(address => address)"}},"id":4625,"indexExpression":{"id":4624,"name":"currentModule","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4597,"src":"1813:13:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1805:22:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1789:38:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4627,"nodeType":"ExpressionStatement","src":"1789:38:16"},{"expression":{"id":4629,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"1841:13:16","subExpression":{"id":4628,"name":"moduleCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4594,"src":"1841:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4630,"nodeType":"ExpressionStatement","src":"1841:13:16"}]},"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4615,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4611,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":4607,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4602,"name":"currentModule","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4597,"src":"1600:13:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"307830","id":4605,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1625:3:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0x0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":4604,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1617:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4603,"name":"address","nodeType":"ElementaryTypeName","src":"1617:7:16","typeDescriptions":{}}},"id":4606,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1617:12:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1600:29:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":4610,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4608,"name":"currentModule","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4597,"src":"1645:13:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":4609,"name":"SENTINEL_MODULES","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4539,"src":"1662:16:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1645:33:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1600:78:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4614,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4612,"name":"moduleCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4594,"src":"1694:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4613,"name":"pageSize","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4577,"src":"1708:8:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1694:22:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1600:116:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4632,"nodeType":"WhileStatement","src":"1580:285:16"},{"expression":{"id":4635,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4633,"name":"next","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4583,"src":"1874:4:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4634,"name":"currentModule","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4597,"src":"1881:13:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1874:20:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4636,"nodeType":"ExpressionStatement","src":"1874:20:16"},{"AST":{"nodeType":"YulBlock","src":"2015:50:16","statements":[{"expression":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"2036:5:16"},{"name":"moduleCount","nodeType":"YulIdentifier","src":"2043:11:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2029:6:16"},"nodeType":"YulFunctionCall","src":"2029:26:16"},"nodeType":"YulExpressionStatement","src":"2029:26:16"}]},"evmVersion":"london","externalReferences":[{"declaration":4581,"isOffset":false,"isSlot":false,"src":"2036:5:16","valueSize":1},{"declaration":4594,"isOffset":false,"isSlot":false,"src":"2043:11:16","valueSize":1}],"id":4637,"nodeType":"InlineAssembly","src":"2006:59:16"}]},"documentation":{"id":4573,"nodeType":"StructuredDocumentation","src":"962:265:16","text":" @dev Returns array of modules. Useful for a widget\n @param start Start of the page.\n @param pageSize Maximum number of modules that should be returned.\n @return array Array of modules.\n @return next Start of the next page."},"functionSelector":"cc2f8452","id":4639,"implemented":true,"kind":"function","modifiers":[],"name":"getModulesPaginated","nameLocation":"1241:19:16","nodeType":"FunctionDefinition","parameters":{"id":4578,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4575,"mutability":"mutable","name":"start","nameLocation":"1278:5:16","nodeType":"VariableDeclaration","scope":4639,"src":"1270:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4574,"name":"address","nodeType":"ElementaryTypeName","src":"1270:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4577,"mutability":"mutable","name":"pageSize","nameLocation":"1301:8:16","nodeType":"VariableDeclaration","scope":4639,"src":"1293:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4576,"name":"uint256","nodeType":"ElementaryTypeName","src":"1293:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1260:55:16"},"returnParameters":{"id":4584,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4581,"mutability":"mutable","name":"array","nameLocation":"1356:5:16","nodeType":"VariableDeclaration","scope":4639,"src":"1339:22:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":4579,"name":"address","nodeType":"ElementaryTypeName","src":"1339:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4580,"nodeType":"ArrayTypeName","src":"1339:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":4583,"mutability":"mutable","name":"next","nameLocation":"1371:4:16","nodeType":"VariableDeclaration","scope":4639,"src":"1363:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4582,"name":"address","nodeType":"ElementaryTypeName","src":"1363:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1338:38:16"},"scope":4924,"src":"1232:839:16","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":4693,"nodeType":"Block","src":"2363:436:16","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4656,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":4652,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4647,"name":"module","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4642,"src":"2431:6:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":4650,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2449:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":4649,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2441:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4648,"name":"address","nodeType":"ElementaryTypeName","src":"2441:7:16","typeDescriptions":{}}},"id":4651,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2441:10:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2431:20:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":4655,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4653,"name":"module","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4642,"src":"2455:6:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":4654,"name":"SENTINEL_MODULES","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4539,"src":"2465:16:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2455:26:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"2431:50:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4661,"nodeType":"IfStatement","src":"2427:111:16","trueBody":{"errorCall":{"arguments":[{"id":4658,"name":"module","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4642,"src":"2531:6:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4657,"name":"ModuleCannotBeZeroOrSentinel","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5074,"src":"2502:28:16","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":4659,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2502:36:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4660,"nodeType":"RevertStatement","src":"2495:43:16"}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":4669,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":4662,"name":"modules","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4543,"src":"2593:7:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_address_$","typeString":"mapping(address => address)"}},"id":4664,"indexExpression":{"id":4663,"name":"module","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4642,"src":"2601:6:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2593:15:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":4667,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2620:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":4666,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2612:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4665,"name":"address","nodeType":"ElementaryTypeName","src":"2612:7:16","typeDescriptions":{}}},"id":4668,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2612:10:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2593:29:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4674,"nodeType":"IfStatement","src":"2589:70:16","trueBody":{"errorCall":{"arguments":[{"id":4671,"name":"module","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4642,"src":"2652:6:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4670,"name":"ModuleAlreadyEnabled","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5079,"src":"2631:20:16","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":4672,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2631:28:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4673,"nodeType":"RevertStatement","src":"2624:35:16"}},{"expression":{"id":4681,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":4675,"name":"modules","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4543,"src":"2669:7:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_address_$","typeString":"mapping(address => address)"}},"id":4677,"indexExpression":{"id":4676,"name":"module","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4642,"src":"2677:6:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2669:15:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":4678,"name":"modules","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4543,"src":"2687:7:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_address_$","typeString":"mapping(address => address)"}},"id":4680,"indexExpression":{"id":4679,"name":"SENTINEL_MODULES","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4539,"src":"2695:16:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2687:25:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2669:43:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4682,"nodeType":"ExpressionStatement","src":"2669:43:16"},{"expression":{"id":4687,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":4683,"name":"modules","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4543,"src":"2722:7:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_address_$","typeString":"mapping(address => address)"}},"id":4685,"indexExpression":{"id":4684,"name":"SENTINEL_MODULES","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4539,"src":"2730:16:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2722:25:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4686,"name":"module","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4642,"src":"2750:6:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2722:34:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4688,"nodeType":"ExpressionStatement","src":"2722:34:16"},{"eventCall":{"arguments":[{"id":4690,"name":"module","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4642,"src":"2785:6:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4689,"name":"EnabledModule","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4547,"src":"2771:13:16","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":4691,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2771:21:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4692,"nodeType":"EmitStatement","src":"2766:26:16"}]},"documentation":{"id":4640,"nodeType":"StructuredDocumentation","src":"2077:225:16","text":" @dev Adds a module to the allowlist.\n @notice This can only be done via a wallet transaction.\n @notice Enables the module `module` for the wallet.\n @param module Module to be allow-listed."},"functionSelector":"610b5925","id":4694,"implemented":true,"kind":"function","modifiers":[{"id":4645,"kind":"modifierInvocation","modifierName":{"id":4644,"name":"authorized","nameLocations":["2352:10:16"],"nodeType":"IdentifierPath","referencedDeclaration":5256,"src":"2352:10:16"},"nodeType":"ModifierInvocation","src":"2352:10:16"}],"name":"enableModule","nameLocation":"2316:12:16","nodeType":"FunctionDefinition","parameters":{"id":4643,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4642,"mutability":"mutable","name":"module","nameLocation":"2337:6:16","nodeType":"VariableDeclaration","scope":4694,"src":"2329:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4641,"name":"address","nodeType":"ElementaryTypeName","src":"2329:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2328:16:16"},"returnParameters":{"id":4646,"nodeType":"ParameterList","parameters":[],"src":"2363:0:16"},"scope":4924,"src":"2307:492:16","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":4750,"nodeType":"Block","src":"3227:520:16","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4713,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":4709,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4704,"name":"module","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4699,"src":"3323:6:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":4707,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3341:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":4706,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3333:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4705,"name":"address","nodeType":"ElementaryTypeName","src":"3333:7:16","typeDescriptions":{}}},"id":4708,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3333:10:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3323:20:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":4712,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4710,"name":"module","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4699,"src":"3347:6:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":4711,"name":"SENTINEL_MODULES","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4539,"src":"3357:16:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3347:26:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3323:50:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4718,"nodeType":"IfStatement","src":"3319:111:16","trueBody":{"errorCall":{"arguments":[{"id":4715,"name":"module","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4699,"src":"3423:6:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4714,"name":"ModuleCannotBeZeroOrSentinel","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5074,"src":"3394:28:16","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":4716,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3394:36:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4717,"nodeType":"RevertStatement","src":"3387:43:16"}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":4723,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":4719,"name":"modules","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4543,"src":"3444:7:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_address_$","typeString":"mapping(address => address)"}},"id":4721,"indexExpression":{"id":4720,"name":"prevModule","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4697,"src":"3452:10:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3444:19:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":4722,"name":"module","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4699,"src":"3467:6:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3444:29:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4732,"nodeType":"IfStatement","src":"3440:184:16","trueBody":{"errorCall":{"arguments":[{"id":4725,"name":"module","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4699,"src":"3539:6:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"baseExpression":{"id":4726,"name":"modules","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4543,"src":"3563:7:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_address_$","typeString":"mapping(address => address)"}},"id":4728,"indexExpression":{"id":4727,"name":"prevModule","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4697,"src":"3571:10:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3563:19:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4729,"name":"prevModule","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4697,"src":"3600:10:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":4724,"name":"ModuleAndPrevModuleMismatch","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5088,"src":"3494:27:16","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_address_$_t_address_$returns$__$","typeString":"function (address,address,address) pure"}},"id":4730,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3494:130:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4731,"nodeType":"RevertStatement","src":"3487:137:16"}},{"expression":{"id":4739,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":4733,"name":"modules","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4543,"src":"3634:7:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_address_$","typeString":"mapping(address => address)"}},"id":4735,"indexExpression":{"id":4734,"name":"prevModule","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4697,"src":"3642:10:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3634:19:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":4736,"name":"modules","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4543,"src":"3656:7:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_address_$","typeString":"mapping(address => address)"}},"id":4738,"indexExpression":{"id":4737,"name":"module","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4699,"src":"3664:6:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3656:15:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3634:37:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4740,"nodeType":"ExpressionStatement","src":"3634:37:16"},{"expression":{"id":4744,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"delete","prefix":true,"src":"3681:22:16","subExpression":{"baseExpression":{"id":4741,"name":"modules","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4543,"src":"3688:7:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_address_$","typeString":"mapping(address => address)"}},"id":4743,"indexExpression":{"id":4742,"name":"module","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4699,"src":"3696:6:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3688:15:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4745,"nodeType":"ExpressionStatement","src":"3681:22:16"},{"eventCall":{"arguments":[{"id":4747,"name":"module","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4699,"src":"3733:6:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4746,"name":"DisabledModule","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4551,"src":"3718:14:16","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":4748,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3718:22:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4749,"nodeType":"EmitStatement","src":"3713:27:16"}]},"documentation":{"id":4695,"nodeType":"StructuredDocumentation","src":"2805:318:16","text":" @dev Removes a module from the allowlist.\n @notice This can only be done via a wallet transaction.\n @notice Disables the module `module` for the wallet.\n @param prevModule Module that pointed to the module to be removed in the linked list\n @param module Module to be removed."},"functionSelector":"e009cfde","id":4751,"implemented":true,"kind":"function","modifiers":[{"id":4702,"kind":"modifierInvocation","modifierName":{"id":4701,"name":"authorized","nameLocations":["3216:10:16"],"nodeType":"IdentifierPath","referencedDeclaration":5256,"src":"3216:10:16"},"nodeType":"ModifierInvocation","src":"3216:10:16"}],"name":"disableModule","nameLocation":"3137:13:16","nodeType":"FunctionDefinition","parameters":{"id":4700,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4697,"mutability":"mutable","name":"prevModule","nameLocation":"3168:10:16","nodeType":"VariableDeclaration","scope":4751,"src":"3160:18:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4696,"name":"address","nodeType":"ElementaryTypeName","src":"3160:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4699,"mutability":"mutable","name":"module","nameLocation":"3196:6:16","nodeType":"VariableDeclaration","scope":4751,"src":"3188:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4698,"name":"address","nodeType":"ElementaryTypeName","src":"3188:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3150:58:16"},"returnParameters":{"id":4703,"nodeType":"ParameterList","parameters":[],"src":"3227:0:16"},"scope":4924,"src":"3128:619:16","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":4819,"nodeType":"Block","src":"4286:530:16","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4779,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":4769,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4766,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4349:3:16","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4767,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4353:6:16","memberName":"sender","nodeType":"MemberAccess","src":"4349:10:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":4768,"name":"SENTINEL_MODULES","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4539,"src":"4363:16:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4349:30:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":4778,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":4770,"name":"modules","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4543,"src":"4383:7:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_address_$","typeString":"mapping(address => address)"}},"id":4773,"indexExpression":{"expression":{"id":4771,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4391:3:16","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4772,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4395:6:16","memberName":"sender","nodeType":"MemberAccess","src":"4391:10:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4383:19:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":4776,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4414:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":4775,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4406:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4774,"name":"address","nodeType":"ElementaryTypeName","src":"4406:7:16","typeDescriptions":{}}},"id":4777,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4406:10:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4383:33:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4349:67:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4785,"nodeType":"IfStatement","src":"4345:120:16","trueBody":{"errorCall":{"arguments":[{"expression":{"id":4781,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4454:3:16","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4782,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4458:6:16","memberName":"sender","nodeType":"MemberAccess","src":"4454:10:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4780,"name":"ModuleNotEnabled","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5093,"src":"4437:16:16","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":4783,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4437:28:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4784,"nodeType":"RevertStatement","src":"4430:35:16"}},{"expression":{"id":4795,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4786,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4764,"src":"4537:7:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4788,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4754,"src":"4555:2:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4789,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4756,"src":"4559:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4790,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4758,"src":"4566:4:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":4791,"name":"operation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4761,"src":"4572:9:16","typeDescriptions":{"typeIdentifier":"t_enum$_Operation_$4930","typeString":"enum Enum.Operation"}},{"arguments":[],"expression":{"argumentTypes":[],"id":4792,"name":"gasleft","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-7,"src":"4583:7:16","typeDescriptions":{"typeIdentifier":"t_function_gasleft_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":4793,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4583:9:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_enum$_Operation_$4930","typeString":"enum Enum.Operation"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4787,"name":"execute","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4432,"src":"4547:7:16","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$_t_enum$_Operation_$4930_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256,bytes memory,enum Enum.Operation,uint256) returns (bool)"}},"id":4794,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4547:46:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4537:56:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4796,"nodeType":"ExpressionStatement","src":"4537:56:16"},{"condition":{"id":4797,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4764,"src":"4607:7:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"eventCall":{"arguments":[{"expression":{"id":4814,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4798:3:16","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4815,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4802:6:16","memberName":"sender","nodeType":"MemberAccess","src":"4798:10:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4813,"name":"ExecutionFromModuleFailure","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4559,"src":"4771:26:16","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":4816,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4771:38:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4817,"nodeType":"EmitStatement","src":"4766:43:16"},"id":4818,"nodeType":"IfStatement","src":"4603:206:16","trueBody":{"id":4812,"nodeType":"Block","src":"4616:144:16","statements":[{"eventCall":{"arguments":[{"expression":{"id":4799,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4653:3:16","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4800,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4657:6:16","memberName":"sender","nodeType":"MemberAccess","src":"4653:10:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4801,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4754,"src":"4665:2:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4802,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4756,"src":"4669:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4803,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4758,"src":"4676:4:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":4804,"name":"operation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4761,"src":"4682:9:16","typeDescriptions":{"typeIdentifier":"t_enum$_Operation_$4930","typeString":"enum Enum.Operation"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_enum$_Operation_$4930","typeString":"enum Enum.Operation"}],"id":4798,"name":"ModuleTransaction","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4572,"src":"4635:17:16","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$_t_enum$_Operation_$4930_$returns$__$","typeString":"function (address,address,uint256,bytes memory,enum Enum.Operation)"}},"id":4805,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4635:57:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4806,"nodeType":"EmitStatement","src":"4630:62:16"},{"eventCall":{"arguments":[{"expression":{"id":4808,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4738:3:16","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4809,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4742:6:16","memberName":"sender","nodeType":"MemberAccess","src":"4738:10:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4807,"name":"ExecutionFromModuleSuccess","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4555,"src":"4711:26:16","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":4810,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4711:38:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4811,"nodeType":"EmitStatement","src":"4706:43:16"}]}}]},"documentation":{"id":4752,"nodeType":"StructuredDocumentation","src":"3753:345:16","text":" @dev Allows a Module to execute a Smart Account transaction without any further confirmations.\n @param to Destination address of module transaction.\n @param value Ether value of module transaction.\n @param data Data payload of module transaction.\n @param operation Operation type of module transaction."},"functionSelector":"468721a7","id":4820,"implemented":true,"kind":"function","modifiers":[],"name":"execTransactionFromModule","nameLocation":"4112:25:16","nodeType":"FunctionDefinition","parameters":{"id":4762,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4754,"mutability":"mutable","name":"to","nameLocation":"4155:2:16","nodeType":"VariableDeclaration","scope":4820,"src":"4147:10:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4753,"name":"address","nodeType":"ElementaryTypeName","src":"4147:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4756,"mutability":"mutable","name":"value","nameLocation":"4175:5:16","nodeType":"VariableDeclaration","scope":4820,"src":"4167:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4755,"name":"uint256","nodeType":"ElementaryTypeName","src":"4167:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4758,"mutability":"mutable","name":"data","nameLocation":"4203:4:16","nodeType":"VariableDeclaration","scope":4820,"src":"4190:17:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4757,"name":"bytes","nodeType":"ElementaryTypeName","src":"4190:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":4761,"mutability":"mutable","name":"operation","nameLocation":"4232:9:16","nodeType":"VariableDeclaration","scope":4820,"src":"4217:24:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Operation_$4930","typeString":"enum Enum.Operation"},"typeName":{"id":4760,"nodeType":"UserDefinedTypeName","pathNode":{"id":4759,"name":"Enum.Operation","nameLocations":["4217:4:16","4222:9:16"],"nodeType":"IdentifierPath","referencedDeclaration":4930,"src":"4217:14:16"},"referencedDeclaration":4930,"src":"4217:14:16","typeDescriptions":{"typeIdentifier":"t_enum$_Operation_$4930","typeString":"enum Enum.Operation"}},"visibility":"internal"}],"src":"4137:110:16"},"returnParameters":{"id":4765,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4764,"mutability":"mutable","name":"success","nameLocation":"4277:7:16","nodeType":"VariableDeclaration","scope":4820,"src":"4272:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4763,"name":"bool","nodeType":"ElementaryTypeName","src":"4272:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4271:14:16"},"scope":4924,"src":"4103:713:16","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":4847,"nodeType":"Block","src":"5391:749:16","statements":[{"expression":{"id":4844,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4837,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4833,"src":"5401:7:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4839,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4823,"src":"5437:2:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4840,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4825,"src":"5441:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4841,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4827,"src":"5448:4:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":4842,"name":"operation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4830,"src":"5454:9:16","typeDescriptions":{"typeIdentifier":"t_enum$_Operation_$4930","typeString":"enum Enum.Operation"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_enum$_Operation_$4930","typeString":"enum Enum.Operation"}],"id":4838,"name":"execTransactionFromModule","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4820,"src":"5411:25:16","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$_t_enum$_Operation_$4930_$returns$_t_bool_$","typeString":"function (address,uint256,bytes memory,enum Enum.Operation) returns (bool)"}},"id":4843,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5411:53:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"5401:63:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4845,"nodeType":"ExpressionStatement","src":"5401:63:16"},{"AST":{"nodeType":"YulBlock","src":"5539:595:16","statements":[{"nodeType":"YulVariableDeclaration","src":"5594:22:16","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5611:4:16","type":"","value":"0x40"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"5605:5:16"},"nodeType":"YulFunctionCall","src":"5605:11:16"},"variables":[{"name":"ptr","nodeType":"YulTypedName","src":"5598:3:16","type":""}]},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5816:4:16","type":"","value":"0x40"},{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"5826:3:16"},{"arguments":[{"arguments":[],"functionName":{"name":"returndatasize","nodeType":"YulIdentifier","src":"5835:14:16"},"nodeType":"YulFunctionCall","src":"5835:16:16"},{"kind":"number","nodeType":"YulLiteral","src":"5853:4:16","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5831:3:16"},"nodeType":"YulFunctionCall","src":"5831:27:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5822:3:16"},"nodeType":"YulFunctionCall","src":"5822:37:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5809:6:16"},"nodeType":"YulFunctionCall","src":"5809:51:16"},"nodeType":"YulExpressionStatement","src":"5809:51:16"},{"expression":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"5910:3:16"},{"arguments":[],"functionName":{"name":"returndatasize","nodeType":"YulIdentifier","src":"5915:14:16"},"nodeType":"YulFunctionCall","src":"5915:16:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5903:6:16"},"nodeType":"YulFunctionCall","src":"5903:29:16"},"nodeType":"YulExpressionStatement","src":"5903:29:16"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"5994:3:16"},{"kind":"number","nodeType":"YulLiteral","src":"5999:4:16","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5990:3:16"},"nodeType":"YulFunctionCall","src":"5990:14:16"},{"kind":"number","nodeType":"YulLiteral","src":"6006:1:16","type":"","value":"0"},{"arguments":[],"functionName":{"name":"returndatasize","nodeType":"YulIdentifier","src":"6009:14:16"},"nodeType":"YulFunctionCall","src":"6009:16:16"}],"functionName":{"name":"returndatacopy","nodeType":"YulIdentifier","src":"5975:14:16"},"nodeType":"YulFunctionCall","src":"5975:51:16"},"nodeType":"YulExpressionStatement","src":"5975:51:16"},{"nodeType":"YulAssignment","src":"6107:17:16","value":{"name":"ptr","nodeType":"YulIdentifier","src":"6121:3:16"},"variableNames":[{"name":"returnData","nodeType":"YulIdentifier","src":"6107:10:16"}]}]},"evmVersion":"london","externalReferences":[{"declaration":4835,"isOffset":false,"isSlot":false,"src":"6107:10:16","valueSize":1}],"id":4846,"nodeType":"InlineAssembly","src":"5530:604:16"}]},"documentation":{"id":4821,"nodeType":"StructuredDocumentation","src":"4822:354:16","text":" @dev Allows a Module to execute a wallet transaction without any further confirmations and returns data\n @param to Destination address of module transaction.\n @param value Ether value of module transaction.\n @param data Data payload of module transaction.\n @param operation Operation type of module transaction."},"functionSelector":"5229073f","id":4848,"implemented":true,"kind":"function","modifiers":[],"name":"execTransactionFromModuleReturnData","nameLocation":"5190:35:16","nodeType":"FunctionDefinition","parameters":{"id":4831,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4823,"mutability":"mutable","name":"to","nameLocation":"5243:2:16","nodeType":"VariableDeclaration","scope":4848,"src":"5235:10:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4822,"name":"address","nodeType":"ElementaryTypeName","src":"5235:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4825,"mutability":"mutable","name":"value","nameLocation":"5263:5:16","nodeType":"VariableDeclaration","scope":4848,"src":"5255:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4824,"name":"uint256","nodeType":"ElementaryTypeName","src":"5255:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4827,"mutability":"mutable","name":"data","nameLocation":"5291:4:16","nodeType":"VariableDeclaration","scope":4848,"src":"5278:17:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4826,"name":"bytes","nodeType":"ElementaryTypeName","src":"5278:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":4830,"mutability":"mutable","name":"operation","nameLocation":"5320:9:16","nodeType":"VariableDeclaration","scope":4848,"src":"5305:24:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Operation_$4930","typeString":"enum Enum.Operation"},"typeName":{"id":4829,"nodeType":"UserDefinedTypeName","pathNode":{"id":4828,"name":"Enum.Operation","nameLocations":["5305:4:16","5310:9:16"],"nodeType":"IdentifierPath","referencedDeclaration":4930,"src":"5305:14:16"},"referencedDeclaration":4930,"src":"5305:14:16","typeDescriptions":{"typeIdentifier":"t_enum$_Operation_$4930","typeString":"enum Enum.Operation"}},"visibility":"internal"}],"src":"5225:110:16"},"returnParameters":{"id":4836,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4833,"mutability":"mutable","name":"success","nameLocation":"5357:7:16","nodeType":"VariableDeclaration","scope":4848,"src":"5352:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4832,"name":"bool","nodeType":"ElementaryTypeName","src":"5352:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4835,"mutability":"mutable","name":"returnData","nameLocation":"5379:10:16","nodeType":"VariableDeclaration","scope":4848,"src":"5366:23:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4834,"name":"bytes","nodeType":"ElementaryTypeName","src":"5366:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5351:39:16"},"scope":4924,"src":"5181:959:16","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":4869,"nodeType":"Block","src":"6318:83:16","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4867,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":4858,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4856,"name":"SENTINEL_MODULES","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4539,"src":"6335:16:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":4857,"name":"module","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4851,"src":"6355:6:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6335:26:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":4866,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":4859,"name":"modules","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4543,"src":"6365:7:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_address_$","typeString":"mapping(address => address)"}},"id":4861,"indexExpression":{"id":4860,"name":"module","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4851,"src":"6373:6:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6365:15:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":4864,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6392:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":4863,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6384:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4862,"name":"address","nodeType":"ElementaryTypeName","src":"6384:7:16","typeDescriptions":{}}},"id":4865,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6384:10:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6365:29:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6335:59:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":4855,"id":4868,"nodeType":"Return","src":"6328:66:16"}]},"documentation":{"id":4849,"nodeType":"StructuredDocumentation","src":"6146:99:16","text":" @dev Returns if a module is enabled\n @return True if the module is enabled"},"functionSelector":"2d9ad53d","id":4870,"implemented":true,"kind":"function","modifiers":[],"name":"isModuleEnabled","nameLocation":"6259:15:16","nodeType":"FunctionDefinition","parameters":{"id":4852,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4851,"mutability":"mutable","name":"module","nameLocation":"6283:6:16","nodeType":"VariableDeclaration","scope":4870,"src":"6275:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4850,"name":"address","nodeType":"ElementaryTypeName","src":"6275:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6274:16:16"},"returnParameters":{"id":4855,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4854,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4870,"src":"6312:4:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4853,"name":"bool","nodeType":"ElementaryTypeName","src":"6312:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"6311:6:16"},"scope":4924,"src":"6250:151:16","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":4918,"nodeType":"Block","src":"6770:401:16","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":4885,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":4878,"name":"modules","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4543,"src":"6784:7:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_address_$","typeString":"mapping(address => address)"}},"id":4880,"indexExpression":{"id":4879,"name":"SENTINEL_MODULES","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4539,"src":"6792:16:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6784:25:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":4883,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6821:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":4882,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6813:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4881,"name":"address","nodeType":"ElementaryTypeName","src":"6813:7:16","typeDescriptions":{}}},"id":4884,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6813:10:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6784:39:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4889,"nodeType":"IfStatement","src":"6780:91:16","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":4886,"name":"ModulesAlreadyInitialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5066,"src":"6844:25:16","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":4887,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6844:27:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4888,"nodeType":"RevertStatement","src":"6837:34:16"}},{"expression":{"id":4894,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":4890,"name":"modules","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4543,"src":"6881:7:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_address_$","typeString":"mapping(address => address)"}},"id":4892,"indexExpression":{"id":4891,"name":"SENTINEL_MODULES","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4539,"src":"6889:16:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6881:25:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4893,"name":"SENTINEL_MODULES","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4539,"src":"6909:16:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6881:44:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4895,"nodeType":"ExpressionStatement","src":"6881:44:16"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":4901,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4896,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4873,"src":"6939:2:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":4899,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6953:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":4898,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6945:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4897,"name":"address","nodeType":"ElementaryTypeName","src":"6945:7:16","typeDescriptions":{}}},"id":4900,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6945:10:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6939:16:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4917,"nodeType":"IfStatement","src":"6935:229:16","trueBody":{"condition":{"id":4912,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"6973:61:16","subExpression":{"arguments":[{"id":4903,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4873,"src":"6982:2:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"hexValue":"30","id":4904,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6986:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"id":4905,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4875,"src":"6989:4:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"expression":{"expression":{"id":4906,"name":"Enum","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4931,"src":"6995:4:16","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Enum_$4931_$","typeString":"type(contract Enum)"}},"id":4907,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7000:9:16","memberName":"Operation","nodeType":"MemberAccess","referencedDeclaration":4930,"src":"6995:14:16","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Operation_$4930_$","typeString":"type(enum Enum.Operation)"}},"id":4908,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7010:12:16","memberName":"DelegateCall","nodeType":"MemberAccess","referencedDeclaration":4929,"src":"6995:27:16","typeDescriptions":{"typeIdentifier":"t_enum$_Operation_$4930","typeString":"enum Enum.Operation"}},{"arguments":[],"expression":{"argumentTypes":[],"id":4909,"name":"gasleft","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-7,"src":"7024:7:16","typeDescriptions":{"typeIdentifier":"t_function_gasleft_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":4910,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7024:9:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_enum$_Operation_$4930","typeString":"enum Enum.Operation"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4902,"name":"execute","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4432,"src":"6974:7:16","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$_t_enum$_Operation_$4930_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256,bytes memory,enum Enum.Operation,uint256) returns (bool)"}},"id":4911,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6974:60:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4916,"nodeType":"IfStatement","src":"6969:195:16","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":4913,"name":"ModulesSetupExecutionFailed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5069,"src":"7135:27:16","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":4914,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7135:29:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4915,"nodeType":"RevertStatement","src":"7128:36:16"}}}]},"documentation":{"id":4871,"nodeType":"StructuredDocumentation","src":"6407:295:16","text":" @notice Setup function sets the initial storage of the contract.\n         Optionally executes a delegate call to another contract to setup the modules.\n @param to Optional destination address of call to execute.\n @param data Optional data of call to execute."},"id":4919,"implemented":true,"kind":"function","modifiers":[],"name":"_setupModules","nameLocation":"6716:13:16","nodeType":"FunctionDefinition","parameters":{"id":4876,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4873,"mutability":"mutable","name":"to","nameLocation":"6738:2:16","nodeType":"VariableDeclaration","scope":4919,"src":"6730:10:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4872,"name":"address","nodeType":"ElementaryTypeName","src":"6730:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4875,"mutability":"mutable","name":"data","nameLocation":"6755:4:16","nodeType":"VariableDeclaration","scope":4919,"src":"6742:17:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4874,"name":"bytes","nodeType":"ElementaryTypeName","src":"6742:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6729:31:16"},"returnParameters":{"id":4877,"nodeType":"ParameterList","parameters":[],"src":"6770:0:16"},"scope":4924,"src":"6707:464:16","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"constant":false,"id":4923,"mutability":"mutable","name":"__gap","nameLocation":"7197:5:16","nodeType":"VariableDeclaration","scope":4924,"src":"7177:25:16","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$24_storage","typeString":"uint256[24]"},"typeName":{"baseType":{"id":4920,"name":"uint256","nodeType":"ElementaryTypeName","src":"7177:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4922,"length":{"hexValue":"3234","id":4921,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7185:2:16","typeDescriptions":{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},"value":"24"},"nodeType":"ArrayTypeName","src":"7177:11:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$24_storage_ptr","typeString":"uint256[24]"}},"visibility":"private"}],"scope":4925,"src":"391:6814:16","usedErrors":[5066,5069,5074,5079,5088,5093,5099]}],"src":"42:7164:16"}},"contracts/smart-contract-wallet/common/Enum.sol":{"id":17,"ast":{"absolutePath":"contracts/smart-contract-wallet/common/Enum.sol","exportedSymbols":{"Enum":[4931]},"id":4932,"license":"LGPL-3.0-only","nodeType":"SourceUnit","nodes":[{"id":4926,"literals":["solidity","0.8",".17"],"nodeType":"PragmaDirective","src":"42:23:17"},{"abstract":true,"baseContracts":[],"canonicalName":"Enum","contractDependencies":[],"contractKind":"contract","documentation":{"id":4927,"nodeType":"StructuredDocumentation","src":"67:38:17","text":"@title Enum - Collection of enums"},"fullyImplemented":true,"id":4931,"linearizedBaseContracts":[4931],"name":"Enum","nameLocation":"123:4:17","nodeType":"ContractDefinition","nodes":[{"canonicalName":"Enum.Operation","id":4930,"members":[{"id":4928,"name":"Call","nameLocation":"159:4:17","nodeType":"EnumValue","src":"159:4:17"},{"id":4929,"name":"DelegateCall","nameLocation":"173:12:17","nodeType":"EnumValue","src":"173:12:17"}],"name":"Operation","nameLocation":"139:9:17","nodeType":"EnumDefinition","src":"134:57:17"}],"scope":4932,"src":"105:88:17","usedErrors":[]}],"src":"42:152:17"}},"contracts/smart-contract-wallet/common/Errors.sol":{"id":18,"ast":{"absolutePath":"contracts/smart-contract-wallet/common/Errors.sol","exportedSymbols":{"BaseSmartAccountErrors":[4939],"FallbackManagerErrors":[4943],"ModuleManagerErrors":[5094],"SelfAuthorizedErrors":[5100],"SingletonPaymasterErrors":[5128],"SmartAccountErrors":[5053],"SmartAccountFactoryErrors":[5063]},"id":5129,"license":"LGPL-3.0-only","nodeType":"SourceUnit","nodes":[{"id":4933,"literals":["solidity","0.8",".17"],"nodeType":"PragmaDirective","src":"42:23:18"},{"abstract":false,"baseContracts":[],"canonicalName":"BaseSmartAccountErrors","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":4939,"linearizedBaseContracts":[4939],"name":"BaseSmartAccountErrors","nameLocation":"76:22:18","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":4934,"nodeType":"StructuredDocumentation","src":"105:195:18","text":" @notice Throws at onlyEntryPoint when msg.sender is not an EntryPoint set for this Smart Account\n @param caller address that tried to call onlyEntryPoint-protected method"},"errorSelector":"bb587b6e","id":4938,"name":"CallerIsNotAnEntryPoint","nameLocation":"311:23:18","nodeType":"ErrorDefinition","parameters":{"id":4937,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4936,"mutability":"mutable","name":"caller","nameLocation":"343:6:18","nodeType":"VariableDeclaration","scope":4938,"src":"335:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4935,"name":"address","nodeType":"ElementaryTypeName","src":"335:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"334:16:18"},"src":"305:46:18"}],"scope":5129,"src":"67:286:18","usedErrors":[4938]},{"abstract":false,"baseContracts":[],"canonicalName":"FallbackManagerErrors","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":4943,"linearizedBaseContracts":[4943],"name":"FallbackManagerErrors","nameLocation":"364:21:18","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":4940,"nodeType":"StructuredDocumentation","src":"392:95:18","text":" @notice Throws if zero address has been provided as Fallback Handler address"},"errorSelector":"dd449f5f","id":4942,"name":"HandlerCannotBeZero","nameLocation":"498:19:18","nodeType":"ErrorDefinition","parameters":{"id":4941,"nodeType":"ParameterList","parameters":[],"src":"517:2:18"},"src":"492:28:18"}],"scope":5129,"src":"355:167:18","usedErrors":[4942]},{"abstract":false,"baseContracts":[{"baseName":{"id":4944,"name":"BaseSmartAccountErrors","nameLocations":["555:22:18"],"nodeType":"IdentifierPath","referencedDeclaration":4939,"src":"555:22:18"},"id":4945,"nodeType":"InheritanceSpecifier","src":"555:22:18"}],"canonicalName":"SmartAccountErrors","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":5053,"linearizedBaseContracts":[5053,4939],"name":"SmartAccountErrors","nameLocation":"533:18:18","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":4946,"nodeType":"StructuredDocumentation","src":"584:90:18","text":" @notice Throws if zero address has been provided as Entry Point address"},"errorSelector":"245d23e4","id":4948,"name":"EntryPointCannotBeZero","nameLocation":"685:22:18","nodeType":"ErrorDefinition","parameters":{"id":4947,"nodeType":"ParameterList","parameters":[],"src":"707:2:18"},"src":"679:31:18"},{"documentation":{"id":4949,"nodeType":"StructuredDocumentation","src":"716:167:18","text":" @notice Throws at mixedAuth when msg.sender is not an owner neither _self\n @param caller address that tried to call mixedAuth-protected method"},"errorSelector":"1141614a","id":4953,"name":"MixedAuthFail","nameLocation":"894:13:18","nodeType":"ErrorDefinition","parameters":{"id":4952,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4951,"mutability":"mutable","name":"caller","nameLocation":"916:6:18","nodeType":"VariableDeclaration","scope":4953,"src":"908:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4950,"name":"address","nodeType":"ElementaryTypeName","src":"908:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"907:16:18"},"src":"888:36:18"},{"documentation":{"id":4954,"nodeType":"StructuredDocumentation","src":"930:211:18","text":" @notice Throws if transfer of tokens failed\n @param token token contract address\n @param dest token transfer receiver\n @param amount the amount of tokens in a failed transfer"},"errorSelector":"c8776798","id":4962,"name":"TokenTransferFailed","nameLocation":"1152:19:18","nodeType":"ErrorDefinition","parameters":{"id":4961,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4956,"mutability":"mutable","name":"token","nameLocation":"1180:5:18","nodeType":"VariableDeclaration","scope":4962,"src":"1172:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4955,"name":"address","nodeType":"ElementaryTypeName","src":"1172:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4958,"mutability":"mutable","name":"dest","nameLocation":"1195:4:18","nodeType":"VariableDeclaration","scope":4962,"src":"1187:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4957,"name":"address","nodeType":"ElementaryTypeName","src":"1187:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4960,"mutability":"mutable","name":"amount","nameLocation":"1209:6:18","nodeType":"VariableDeclaration","scope":4962,"src":"1201:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4959,"name":"uint256","nodeType":"ElementaryTypeName","src":"1201:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1171:45:18"},"src":"1146:71:18"},{"documentation":{"id":4963,"nodeType":"StructuredDocumentation","src":"1223:100:18","text":" @notice Throws if trying to change an owner of a SmartAccount to the zero address"},"errorSelector":"9b15e16f","id":4965,"name":"OwnerCannotBeZero","nameLocation":"1334:17:18","nodeType":"ErrorDefinition","parameters":{"id":4964,"nodeType":"ParameterList","parameters":[],"src":"1351:2:18"},"src":"1328:26:18"},{"documentation":{"id":4966,"nodeType":"StructuredDocumentation","src":"1360:98:18","text":" @notice Throws if zero address has been provided as Base Implementation address"},"errorSelector":"70204800","id":4968,"name":"BaseImplementationCannotBeZero","nameLocation":"1469:30:18","nodeType":"ErrorDefinition","parameters":{"id":4967,"nodeType":"ParameterList","parameters":[],"src":"1499:2:18"},"src":"1463:39:18"},{"documentation":{"id":4969,"nodeType":"StructuredDocumentation","src":"1508:146:18","text":" @notice Throws if there is no code at implementationAddress\n @param implementationAddress implementation address provided"},"errorSelector":"0c760937","id":4973,"name":"InvalidImplementation","nameLocation":"1665:21:18","nodeType":"ErrorDefinition","parameters":{"id":4972,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4971,"mutability":"mutable","name":"implementationAddress","nameLocation":"1695:21:18","nodeType":"VariableDeclaration","scope":4973,"src":"1687:29:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4970,"name":"address","nodeType":"ElementaryTypeName","src":"1687:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1686:31:18"},"src":"1659:59:18"},{"documentation":{"id":4974,"nodeType":"StructuredDocumentation","src":"1724:143:18","text":" @notice Throws at onlyOwner when msg.sender is not an owner\n @param caller address that tried to call onlyOwner method"},"errorSelector":"d4ed9a17","id":4978,"name":"CallerIsNotOwner","nameLocation":"1878:16:18","nodeType":"ErrorDefinition","parameters":{"id":4977,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4976,"mutability":"mutable","name":"caller","nameLocation":"1903:6:18","nodeType":"VariableDeclaration","scope":4978,"src":"1895:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4975,"name":"address","nodeType":"ElementaryTypeName","src":"1895:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1894:16:18"},"src":"1872:39:18"},{"documentation":{"id":4979,"nodeType":"StructuredDocumentation","src":"1917:215:18","text":" @notice Throws at _requireFromEntryPointOrOwner when msg.sender is not an EntryPoint neither an owner\n @param caller address that tried to call _requireFromEntryPointOrOwner-protected method"},"errorSelector":"65b7a78e","id":4983,"name":"CallerIsNotEntryPointOrOwner","nameLocation":"2143:28:18","nodeType":"ErrorDefinition","parameters":{"id":4982,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4981,"mutability":"mutable","name":"caller","nameLocation":"2180:6:18","nodeType":"VariableDeclaration","scope":4983,"src":"2172:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4980,"name":"address","nodeType":"ElementaryTypeName","src":"2172:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2171:16:18"},"src":"2137:51:18"},{"documentation":{"id":4984,"nodeType":"StructuredDocumentation","src":"2194:156:18","text":" @notice Throws if trying to initialize a Smart Account that has already been initialized\n @param smartAccount Smart Account Address"},"errorSelector":"93360fbf","id":4988,"name":"AlreadyInitialized","nameLocation":"2361:18:18","nodeType":"ErrorDefinition","parameters":{"id":4987,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4986,"mutability":"mutable","name":"smartAccount","nameLocation":"2388:12:18","nodeType":"VariableDeclaration","scope":4988,"src":"2380:20:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4985,"name":"address","nodeType":"ElementaryTypeName","src":"2380:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2379:22:18"},"src":"2355:47:18"},{"documentation":{"id":4989,"nodeType":"StructuredDocumentation","src":"2408:197:18","text":" @notice Throws if not enough gas is left at some point\n @param gasLeft how much gas left at the moment of a check\n @param gasRequired how much gas required to proceed"},"errorSelector":"3b4daac9","id":4995,"name":"NotEnoughGasLeft","nameLocation":"2616:16:18","nodeType":"ErrorDefinition","parameters":{"id":4994,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4991,"mutability":"mutable","name":"gasLeft","nameLocation":"2641:7:18","nodeType":"VariableDeclaration","scope":4995,"src":"2633:15:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4990,"name":"uint256","nodeType":"ElementaryTypeName","src":"2633:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4993,"mutability":"mutable","name":"gasRequired","nameLocation":"2658:11:18","nodeType":"VariableDeclaration","scope":4995,"src":"2650:19:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4992,"name":"uint256","nodeType":"ElementaryTypeName","src":"2650:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2632:38:18"},"src":"2610:61:18"},{"documentation":{"id":4996,"nodeType":"StructuredDocumentation","src":"2677:388:18","text":" @notice Throws if not able to estimate gas\n It can be when amount of gas and its price are both zero and at the same time\n transaction has failed to be executed\n @param targetTxGas gas required for target transaction\n @param gasPrice gas price passed in Refund Info\n @param success whether transaction has been executed successfully or not"},"errorSelector":"830fc3f8","id":5004,"name":"CanNotEstimateGas","nameLocation":"3076:17:18","nodeType":"ErrorDefinition","parameters":{"id":5003,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4998,"mutability":"mutable","name":"targetTxGas","nameLocation":"3111:11:18","nodeType":"VariableDeclaration","scope":5004,"src":"3103:19:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4997,"name":"uint256","nodeType":"ElementaryTypeName","src":"3103:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5000,"mutability":"mutable","name":"gasPrice","nameLocation":"3140:8:18","nodeType":"VariableDeclaration","scope":5004,"src":"3132:16:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4999,"name":"uint256","nodeType":"ElementaryTypeName","src":"3132:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5002,"mutability":"mutable","name":"success","nameLocation":"3163:7:18","nodeType":"VariableDeclaration","scope":5004,"src":"3158:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5001,"name":"bool","nodeType":"ElementaryTypeName","src":"3158:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3093:83:18"},"src":"3070:107:18"},{"documentation":{"id":5005,"nodeType":"StructuredDocumentation","src":"3183:252:18","text":" @notice Throws if contract signature is provided in frong format\n @param uintS s converted to uint256\n @param contractSignatureLength length of a contract signature\n @param signatureLength the whole signature length"},"errorSelector":"71448bfe","id":5013,"name":"WrongContractSignatureFormat","nameLocation":"3446:28:18","nodeType":"ErrorDefinition","parameters":{"id":5012,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5007,"mutability":"mutable","name":"uintS","nameLocation":"3492:5:18","nodeType":"VariableDeclaration","scope":5013,"src":"3484:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5006,"name":"uint256","nodeType":"ElementaryTypeName","src":"3484:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5009,"mutability":"mutable","name":"contractSignatureLength","nameLocation":"3515:23:18","nodeType":"VariableDeclaration","scope":5013,"src":"3507:31:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5008,"name":"uint256","nodeType":"ElementaryTypeName","src":"3507:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5011,"mutability":"mutable","name":"signatureLength","nameLocation":"3556:15:18","nodeType":"VariableDeclaration","scope":5013,"src":"3548:23:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5010,"name":"uint256","nodeType":"ElementaryTypeName","src":"3548:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3474:103:18"},"src":"3440:138:18"},{"documentation":{"id":5014,"nodeType":"StructuredDocumentation","src":"3584:214:18","text":" @notice Throws when isValidSignature for the conrtact signature and data hash return differs from EIP1271 Magic Value\n @param contractSignature the contract signature that has been verified"},"errorSelector":"605d3489","id":5018,"name":"WrongContractSignature","nameLocation":"3809:22:18","nodeType":"ErrorDefinition","parameters":{"id":5017,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5016,"mutability":"mutable","name":"contractSignature","nameLocation":"3838:17:18","nodeType":"VariableDeclaration","scope":5018,"src":"3832:23:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":5015,"name":"bytes","nodeType":"ElementaryTypeName","src":"3832:5:18","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3831:25:18"},"src":"3803:54:18"},{"documentation":{"id":5019,"nodeType":"StructuredDocumentation","src":"3863:335:18","text":" @notice Throws when the address that signed the data (restored from signature)\n differs from the address we expected to sign the data (i.e. some authorized address)\n @param restoredSigner the signer address restored from signature\n @param expectedSigner the address that was expected to be a signer"},"errorSelector":"42d750dc","id":5025,"name":"InvalidSignature","nameLocation":"4209:16:18","nodeType":"ErrorDefinition","parameters":{"id":5024,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5021,"mutability":"mutable","name":"restoredSigner","nameLocation":"4234:14:18","nodeType":"VariableDeclaration","scope":5025,"src":"4226:22:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5020,"name":"address","nodeType":"ElementaryTypeName","src":"4226:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5023,"mutability":"mutable","name":"expectedSigner","nameLocation":"4258:14:18","nodeType":"VariableDeclaration","scope":5025,"src":"4250:22:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5022,"name":"address","nodeType":"ElementaryTypeName","src":"4250:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4225:48:18"},"src":"4203:71:18"},{"documentation":{"id":5026,"nodeType":"StructuredDocumentation","src":"4280:70:18","text":" @notice Throws when the transaction execution fails"},"errorSelector":"acfdb444","id":5028,"name":"ExecutionFailed","nameLocation":"4361:15:18","nodeType":"ErrorDefinition","parameters":{"id":5027,"nodeType":"ParameterList","parameters":[],"src":"4376:2:18"},"src":"4355:24:18"},{"documentation":{"id":5029,"nodeType":"StructuredDocumentation","src":"4385:76:18","text":" @notice Throws when if trying to transfer to zero address"},"errorSelector":"9293b190","id":5031,"name":"TransferToZeroAddressAttempt","nameLocation":"4472:28:18","nodeType":"ErrorDefinition","parameters":{"id":5030,"nodeType":"ParameterList","parameters":[],"src":"4500:2:18"},"src":"4466:37:18"},{"documentation":{"id":5032,"nodeType":"StructuredDocumentation","src":"4509:305:18","text":" @notice Throws when data for executeBatchCall provided in wrong format (i.e. empty array or lengths mismatch)\n @param destLength length of destination contracts array\n @param valueLength length of txn values array\n @param funcLength length of function signatures array"},"errorSelector":"50605488","id":5040,"name":"WrongBatchProvided","nameLocation":"4825:18:18","nodeType":"ErrorDefinition","parameters":{"id":5039,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5034,"mutability":"mutable","name":"destLength","nameLocation":"4861:10:18","nodeType":"VariableDeclaration","scope":5040,"src":"4853:18:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5033,"name":"uint256","nodeType":"ElementaryTypeName","src":"4853:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5036,"mutability":"mutable","name":"valueLength","nameLocation":"4889:11:18","nodeType":"VariableDeclaration","scope":5040,"src":"4881:19:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5035,"name":"uint256","nodeType":"ElementaryTypeName","src":"4881:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5038,"mutability":"mutable","name":"funcLength","nameLocation":"4918:10:18","nodeType":"VariableDeclaration","scope":5040,"src":"4910:18:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5037,"name":"uint256","nodeType":"ElementaryTypeName","src":"4910:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4843:91:18"},"src":"4819:116:18"},{"documentation":{"id":5041,"nodeType":"StructuredDocumentation","src":"4941:112:18","text":" @notice Thrown when the function that must be called only via delegatecall is called directly"},"errorSelector":"f25c5994","id":5043,"name":"DelegateCallsOnly","nameLocation":"5064:17:18","nodeType":"ErrorDefinition","parameters":{"id":5042,"nodeType":"ParameterList","parameters":[],"src":"5081:2:18"},"src":"5058:26:18"},{"documentation":{"id":5044,"nodeType":"StructuredDocumentation","src":"5090:104:18","text":" @notice Thrown when trying to use address of the Smart Account as an owner for itself"},"errorSelector":"75b4d247","id":5046,"name":"OwnerCanNotBeSelf","nameLocation":"5205:17:18","nodeType":"ErrorDefinition","parameters":{"id":5045,"nodeType":"ParameterList","parameters":[],"src":"5222:2:18"},"src":"5199:26:18"},{"documentation":{"id":5047,"nodeType":"StructuredDocumentation","src":"5231:103:18","text":" @notice Thrown when trying to use current owner as a new owner in a _setOwner() call"},"errorSelector":"8a95d3fb","id":5049,"name":"OwnerProvidedIsSame","nameLocation":"5345:19:18","nodeType":"ErrorDefinition","parameters":{"id":5048,"nodeType":"ParameterList","parameters":[],"src":"5364:2:18"},"src":"5339:28:18"},{"documentation":{"id":5050,"nodeType":"StructuredDocumentation","src":"5373:77:18","text":" @notice Thrown when trying to use 0 as tokenGasPriceFactor"},"errorSelector":"653f35a3","id":5052,"name":"TokenGasPriceFactorCanNotBeZero","nameLocation":"5461:31:18","nodeType":"ErrorDefinition","parameters":{"id":5051,"nodeType":"ParameterList","parameters":[],"src":"5492:2:18"},"src":"5455:40:18"}],"scope":5129,"src":"524:4973:18","usedErrors":[4938,4948,4953,4962,4965,4968,4973,4978,4983,4988,4995,5004,5013,5018,5025,5028,5031,5040,5043,5046,5049,5052]},{"abstract":false,"baseContracts":[{"baseName":{"id":5054,"name":"SmartAccountErrors","nameLocations":["5537:18:18"],"nodeType":"IdentifierPath","referencedDeclaration":5053,"src":"5537:18:18"},"id":5055,"nodeType":"InheritanceSpecifier","src":"5537:18:18"}],"canonicalName":"SmartAccountFactoryErrors","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":5063,"linearizedBaseContracts":[5063,5053,4939],"name":"SmartAccountFactoryErrors","nameLocation":"5508:25:18","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":5056,"nodeType":"StructuredDocumentation","src":"5562:159:18","text":" @notice Throws when the new Proxy deployment fails\n @param owner Owner of a Proxy (Smart Account)\n @param index Deployment index"},"errorSelector":"6d05b867","id":5062,"name":"ProxyDeploymentFailed","nameLocation":"5732:21:18","nodeType":"ErrorDefinition","parameters":{"id":5061,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5058,"mutability":"mutable","name":"owner","nameLocation":"5762:5:18","nodeType":"VariableDeclaration","scope":5062,"src":"5754:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5057,"name":"address","nodeType":"ElementaryTypeName","src":"5754:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5060,"mutability":"mutable","name":"index","nameLocation":"5777:5:18","nodeType":"VariableDeclaration","scope":5062,"src":"5769:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5059,"name":"uint256","nodeType":"ElementaryTypeName","src":"5769:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5753:30:18"},"src":"5726:58:18"}],"scope":5129,"src":"5499:287:18","usedErrors":[4938,4948,4953,4962,4965,4968,4973,4978,4983,4988,4995,5004,5013,5018,5025,5028,5031,5040,5043,5046,5049,5052,5062]},{"abstract":false,"baseContracts":[],"canonicalName":"ModuleManagerErrors","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":5094,"linearizedBaseContracts":[5094],"name":"ModuleManagerErrors","nameLocation":"5797:19:18","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":5064,"nodeType":"StructuredDocumentation","src":"5823:104:18","text":" @notice Throws when trying to initialize module manager that already been initialized"},"errorSelector":"df8cc4e3","id":5066,"name":"ModulesAlreadyInitialized","nameLocation":"5938:25:18","nodeType":"ErrorDefinition","parameters":{"id":5065,"nodeType":"ParameterList","parameters":[],"src":"5963:2:18"},"src":"5932:34:18"},{"documentation":{"id":5067,"nodeType":"StructuredDocumentation","src":"5972:107:18","text":" @notice Throws when a delegatecall in course of module manager initialization has failed"},"errorSelector":"65c74720","id":5069,"name":"ModulesSetupExecutionFailed","nameLocation":"6090:27:18","nodeType":"ErrorDefinition","parameters":{"id":5068,"nodeType":"ParameterList","parameters":[],"src":"6117:2:18"},"src":"6084:36:18"},{"documentation":{"id":5070,"nodeType":"StructuredDocumentation","src":"6126:161:18","text":" @notice Throws when address(0) or SENTINEL_MODULES constant has been provided as a module address\n @param module Module address provided"},"errorSelector":"cadb248f","id":5074,"name":"ModuleCannotBeZeroOrSentinel","nameLocation":"6298:28:18","nodeType":"ErrorDefinition","parameters":{"id":5073,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5072,"mutability":"mutable","name":"module","nameLocation":"6335:6:18","nodeType":"VariableDeclaration","scope":5074,"src":"6327:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5071,"name":"address","nodeType":"ElementaryTypeName","src":"6327:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6326:16:18"},"src":"6292:51:18"},{"documentation":{"id":5075,"nodeType":"StructuredDocumentation","src":"6349:137:18","text":" @notice Throws when trying to enable module that has already been enabled\n @param module Module address provided"},"errorSelector":"b29d4595","id":5079,"name":"ModuleAlreadyEnabled","nameLocation":"6497:20:18","nodeType":"ErrorDefinition","parameters":{"id":5078,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5077,"mutability":"mutable","name":"module","nameLocation":"6526:6:18","nodeType":"VariableDeclaration","scope":5079,"src":"6518:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5076,"name":"address","nodeType":"ElementaryTypeName","src":"6518:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6517:16:18"},"src":"6491:43:18"},{"documentation":{"id":5080,"nodeType":"StructuredDocumentation","src":"6540:291:18","text":" @notice Throws when module and previous module mismatch\n @param expectedModule expected module at modules[prevModule]\n @param returnedModule the module that has been found at modules[prevModule]\n @param prevModule previous module address provided at call"},"errorSelector":"c40d496c","id":5088,"name":"ModuleAndPrevModuleMismatch","nameLocation":"6842:27:18","nodeType":"ErrorDefinition","parameters":{"id":5087,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5082,"mutability":"mutable","name":"expectedModule","nameLocation":"6887:14:18","nodeType":"VariableDeclaration","scope":5088,"src":"6879:22:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5081,"name":"address","nodeType":"ElementaryTypeName","src":"6879:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5084,"mutability":"mutable","name":"returnedModule","nameLocation":"6919:14:18","nodeType":"VariableDeclaration","scope":5088,"src":"6911:22:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5083,"name":"address","nodeType":"ElementaryTypeName","src":"6911:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5086,"mutability":"mutable","name":"prevModule","nameLocation":"6951:10:18","nodeType":"VariableDeclaration","scope":5088,"src":"6943:18:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5085,"name":"address","nodeType":"ElementaryTypeName","src":"6943:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6869:98:18"},"src":"6836:132:18"},{"documentation":{"id":5089,"nodeType":"StructuredDocumentation","src":"6974:145:18","text":" @notice Throws when trying to execute transaction from module that is not enabled\n @param module Module address provided"},"errorSelector":"21ac7c5f","id":5093,"name":"ModuleNotEnabled","nameLocation":"7130:16:18","nodeType":"ErrorDefinition","parameters":{"id":5092,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5091,"mutability":"mutable","name":"module","nameLocation":"7155:6:18","nodeType":"VariableDeclaration","scope":5093,"src":"7147:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5090,"name":"address","nodeType":"ElementaryTypeName","src":"7147:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"7146:16:18"},"src":"7124:39:18"}],"scope":5129,"src":"5788:1377:18","usedErrors":[5066,5069,5074,5079,5088,5093]},{"abstract":false,"baseContracts":[],"canonicalName":"SelfAuthorizedErrors","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":5100,"linearizedBaseContracts":[5100],"name":"SelfAuthorizedErrors","nameLocation":"7176:20:18","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":5095,"nodeType":"StructuredDocumentation","src":"7203:106:18","text":" @notice Throws when the caller is not address(this)\n @param caller Caller address"},"errorSelector":"051e38cc","id":5099,"name":"CallerIsNotSelf","nameLocation":"7320:15:18","nodeType":"ErrorDefinition","parameters":{"id":5098,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5097,"mutability":"mutable","name":"caller","nameLocation":"7344:6:18","nodeType":"VariableDeclaration","scope":5099,"src":"7336:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5096,"name":"address","nodeType":"ElementaryTypeName","src":"7336:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"7335:16:18"},"src":"7314:38:18"}],"scope":5129,"src":"7167:187:18","usedErrors":[5099]},{"abstract":false,"baseContracts":[],"canonicalName":"SingletonPaymasterErrors","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":5128,"linearizedBaseContracts":[5128],"name":"SingletonPaymasterErrors","nameLocation":"7365:24:18","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":5101,"nodeType":"StructuredDocumentation","src":"7396:84:18","text":" @notice Throws when the Entrypoint address provided is address(0)"},"errorSelector":"245d23e4","id":5103,"name":"EntryPointCannotBeZero","nameLocation":"7491:22:18","nodeType":"ErrorDefinition","parameters":{"id":5102,"nodeType":"ParameterList","parameters":[],"src":"7513:2:18"},"src":"7485:31:18"},{"documentation":{"id":5104,"nodeType":"StructuredDocumentation","src":"7522:91:18","text":" @notice Throws when the verifiying signer address provided is address(0)"},"errorSelector":"8fc6a931","id":5106,"name":"VerifyingSignerCannotBeZero","nameLocation":"7624:27:18","nodeType":"ErrorDefinition","parameters":{"id":5105,"nodeType":"ParameterList","parameters":[],"src":"7651:2:18"},"src":"7618:36:18"},{"documentation":{"id":5107,"nodeType":"StructuredDocumentation","src":"7660:83:18","text":" @notice Throws when the paymaster address provided is address(0)"},"errorSelector":"ab9a38ca","id":5109,"name":"PaymasterIdCannotBeZero","nameLocation":"7754:23:18","nodeType":"ErrorDefinition","parameters":{"id":5108,"nodeType":"ParameterList","parameters":[],"src":"7777:2:18"},"src":"7748:32:18"},{"documentation":{"id":5110,"nodeType":"StructuredDocumentation","src":"7786:73:18","text":" @notice Throws when the 0 has been provided as deposit"},"errorSelector":"674c2ee2","id":5112,"name":"DepositCanNotBeZero","nameLocation":"7870:19:18","nodeType":"ErrorDefinition","parameters":{"id":5111,"nodeType":"ParameterList","parameters":[],"src":"7889:2:18"},"src":"7864:28:18"},{"documentation":{"id":5113,"nodeType":"StructuredDocumentation","src":"7898:71:18","text":" @notice Throws when trying to withdraw to address(0)"},"errorSelector":"92bc9df3","id":5115,"name":"CanNotWithdrawToZeroAddress","nameLocation":"7980:27:18","nodeType":"ErrorDefinition","parameters":{"id":5114,"nodeType":"ParameterList","parameters":[],"src":"8007:2:18"},"src":"7974:36:18"},{"documentation":{"id":5116,"nodeType":"StructuredDocumentation","src":"8016:178:18","text":" @notice Throws when trying to withdraw more than balance available\n @param amountRequired required balance\n @param currentBalance available balance"},"errorSelector":"cf479181","id":5122,"name":"InsufficientBalance","nameLocation":"8205:19:18","nodeType":"ErrorDefinition","parameters":{"id":5121,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5118,"mutability":"mutable","name":"amountRequired","nameLocation":"8233:14:18","nodeType":"VariableDeclaration","scope":5122,"src":"8225:22:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5117,"name":"uint256","nodeType":"ElementaryTypeName","src":"8225:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5120,"mutability":"mutable","name":"currentBalance","nameLocation":"8257:14:18","nodeType":"VariableDeclaration","scope":5122,"src":"8249:22:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5119,"name":"uint256","nodeType":"ElementaryTypeName","src":"8249:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8224:48:18"},"src":"8199:74:18"},{"documentation":{"id":5123,"nodeType":"StructuredDocumentation","src":"8279:134:18","text":" @notice Throws when signature provided has invalid length\n @param sigLength length oif the signature provided"},"errorSelector":"e4b52b17","id":5127,"name":"InvalidPaymasterSignatureLength","nameLocation":"8424:31:18","nodeType":"ErrorDefinition","parameters":{"id":5126,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5125,"mutability":"mutable","name":"sigLength","nameLocation":"8464:9:18","nodeType":"VariableDeclaration","scope":5127,"src":"8456:17:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5124,"name":"uint256","nodeType":"ElementaryTypeName","src":"8456:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8455:19:18"},"src":"8418:57:18"}],"scope":5129,"src":"7356:1121:18","usedErrors":[5103,5106,5109,5112,5115,5122,5127]}],"src":"42:8440:18"}},"contracts/smart-contract-wallet/common/ReentrancyGuard.sol":{"id":19,"ast":{"absolutePath":"contracts/smart-contract-wallet/common/ReentrancyGuard.sol","exportedSymbols":{"ReentrancyGuard":[5179]},"id":5180,"license":"LGPL-3.0-only","nodeType":"SourceUnit","nodes":[{"id":5130,"literals":["solidity","0.8",".17"],"nodeType":"PragmaDirective","src":"42:23:19"},{"abstract":true,"baseContracts":[],"canonicalName":"ReentrancyGuard","contractDependencies":[],"contractKind":"contract","documentation":{"id":5131,"nodeType":"StructuredDocumentation","src":"67:52:19","text":"@title Reentrancy Guard - reentrancy protection"},"fullyImplemented":true,"id":5179,"linearizedBaseContracts":[5179],"name":"ReentrancyGuard","nameLocation":"137:15:19","nodeType":"ContractDefinition","nodes":[{"errorSelector":"7465d9d1","id":5133,"name":"ReentrancyProtectionActivated","nameLocation":"165:29:19","nodeType":"ErrorDefinition","parameters":{"id":5132,"nodeType":"ParameterList","parameters":[],"src":"194:2:19"},"src":"159:38:19"},{"constant":true,"id":5136,"mutability":"constant","name":"NOT_ENTERED","nameLocation":"228:11:19","nodeType":"VariableDeclaration","scope":5179,"src":"203:40:19","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5134,"name":"uint256","nodeType":"ElementaryTypeName","src":"203:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"31","id":5135,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"242:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"visibility":"private"},{"constant":true,"id":5139,"mutability":"constant","name":"ENTERED","nameLocation":"274:7:19","nodeType":"VariableDeclaration","scope":5179,"src":"249:36:19","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5137,"name":"uint256","nodeType":"ElementaryTypeName","src":"249:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"32","id":5138,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"284:1:19","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"visibility":"private"},{"constant":false,"id":5141,"mutability":"mutable","name":"reentrancyStatus","nameLocation":"308:16:19","nodeType":"VariableDeclaration","scope":5179,"src":"292:32:19","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5140,"name":"uint256","nodeType":"ElementaryTypeName","src":"292:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"body":{"id":5148,"nodeType":"Block","src":"345:47:19","statements":[{"expression":{"id":5146,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5144,"name":"reentrancyStatus","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5141,"src":"355:16:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":5145,"name":"NOT_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5136,"src":"374:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"355:30:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5147,"nodeType":"ExpressionStatement","src":"355:30:19"}]},"id":5149,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":5142,"nodeType":"ParameterList","parameters":[],"src":"342:2:19"},"returnParameters":{"id":5143,"nodeType":"ParameterList","parameters":[],"src":"345:0:19"},"scope":5179,"src":"331:61:19","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":5167,"nodeType":"Block","src":"422:175:19","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5153,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5151,"name":"reentrancyStatus","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5141,"src":"436:16:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":5152,"name":"ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5139,"src":"456:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"436:27:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5157,"nodeType":"IfStatement","src":"432:71:19","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":5154,"name":"ReentrancyProtectionActivated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5133,"src":"472:29:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":5155,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"472:31:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5156,"nodeType":"RevertStatement","src":"465:38:19"}},{"expression":{"id":5160,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5158,"name":"reentrancyStatus","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5141,"src":"513:16:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":5159,"name":"ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5139,"src":"532:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"513:26:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5161,"nodeType":"ExpressionStatement","src":"513:26:19"},{"id":5162,"nodeType":"PlaceholderStatement","src":"549:1:19"},{"expression":{"id":5165,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5163,"name":"reentrancyStatus","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5141,"src":"560:16:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":5164,"name":"NOT_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5136,"src":"579:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"560:30:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5166,"nodeType":"ExpressionStatement","src":"560:30:19"}]},"id":5168,"name":"nonReentrant","nameLocation":"407:12:19","nodeType":"ModifierDefinition","parameters":{"id":5150,"nodeType":"ParameterList","parameters":[],"src":"419:2:19"},"src":"398:199:19","virtual":false,"visibility":"internal"},{"body":{"id":5177,"nodeType":"Block","src":"669:51:19","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5175,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5173,"name":"reentrancyStatus","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5141,"src":"686:16:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":5174,"name":"ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5139,"src":"706:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"686:27:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":5172,"id":5176,"nodeType":"Return","src":"679:34:19"}]},"id":5178,"implemented":true,"kind":"function","modifiers":[],"name":"_isReentrancyGuardEntered","nameLocation":"612:25:19","nodeType":"FunctionDefinition","parameters":{"id":5169,"nodeType":"ParameterList","parameters":[],"src":"637:2:19"},"returnParameters":{"id":5172,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5171,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5178,"src":"663:4:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5170,"name":"bool","nodeType":"ElementaryTypeName","src":"663:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"662:6:19"},"scope":5179,"src":"603:117:19","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":5180,"src":"119:603:19","usedErrors":[5133]}],"src":"42:681:19"}},"contracts/smart-contract-wallet/common/SecuredTokenTransfer.sol":{"id":20,"ast":{"absolutePath":"contracts/smart-contract-wallet/common/SecuredTokenTransfer.sol","exportedSymbols":{"SecuredTokenTransfer":[5225]},"id":5226,"license":"LGPL-3.0-only","nodeType":"SourceUnit","nodes":[{"id":5181,"literals":["solidity","0.8",".17"],"nodeType":"PragmaDirective","src":"42:23:20"},{"abstract":true,"baseContracts":[],"canonicalName":"SecuredTokenTransfer","contractDependencies":[],"contractKind":"contract","documentation":{"id":5182,"nodeType":"StructuredDocumentation","src":"67:56:20","text":"@title SecuredTokenTransfer - Secure token transfer"},"fullyImplemented":true,"id":5225,"linearizedBaseContracts":[5225],"name":"SecuredTokenTransfer","nameLocation":"141:20:20","nodeType":"ContractDefinition","nodes":[{"body":{"id":5223,"nodeType":"Block","src":"566:1112:20","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":5200,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5195,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5185,"src":"584:5:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":5198,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"601:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":5197,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"593:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":5196,"name":"address","nodeType":"ElementaryTypeName","src":"593:7:20","typeDescriptions":{}}},"id":5199,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"593:10:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"584:19:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"746f6b656e2063616e206e6f74206265207a65726f2061646472657373","id":5201,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"605:31:20","typeDescriptions":{"typeIdentifier":"t_stringliteral_cf2b5dfcd86e3e97e687573e2f60523d013ec6bea7d5f73e350b92cfbe69fb72","typeString":"literal_string \"token can not be zero address\""},"value":"token can not be zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_cf2b5dfcd86e3e97e687573e2f60523d013ec6bea7d5f73e350b92cfbe69fb72","typeString":"literal_string \"token can not be zero address\""}],"id":5194,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"576:7:20","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5202,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"576:61:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5203,"nodeType":"ExpressionStatement","src":"576:61:20"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5209,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":5205,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5185,"src":"655:5:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":5206,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"661:4:20","memberName":"code","nodeType":"MemberAccess","src":"655:10:20","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":5207,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"666:6:20","memberName":"length","nodeType":"MemberAccess","src":"655:17:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":5208,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"675:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"655:21:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"746f6b656e20636f6e747261637420646f65736e2774206578697374","id":5210,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"678:30:20","typeDescriptions":{"typeIdentifier":"t_stringliteral_670cafbe68f85f32d041247a83a104af7f145386e5490e76521b568832e887ff","typeString":"literal_string \"token contract doesn't exist\""},"value":"token contract doesn't exist"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_670cafbe68f85f32d041247a83a104af7f145386e5490e76521b568832e887ff","typeString":"literal_string \"token contract doesn't exist\""}],"id":5204,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"647:7:20","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5211,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"647:62:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5212,"nodeType":"ExpressionStatement","src":"647:62:20"},{"assignments":[5214],"declarations":[{"constant":false,"id":5214,"mutability":"mutable","name":"data","nameLocation":"793:4:20","nodeType":"VariableDeclaration","scope":5223,"src":"780:17:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":5213,"name":"bytes","nodeType":"ElementaryTypeName","src":"780:5:20","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":5221,"initialValue":{"arguments":[{"hexValue":"30786139303539636262","id":5217,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"836:10:20","typeDescriptions":{"typeIdentifier":"t_rational_2835717307_by_1","typeString":"int_const 2835717307"},"value":"0xa9059cbb"},{"id":5218,"name":"receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5187,"src":"860:8:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":5219,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5189,"src":"882:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_2835717307_by_1","typeString":"int_const 2835717307"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":5215,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"800:3:20","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":5216,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"804:18:20","memberName":"encodeWithSelector","nodeType":"MemberAccess","src":"800:22:20","typeDescriptions":{"typeIdentifier":"t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes4) pure returns (bytes memory)"}},"id":5220,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"800:98:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"780:118:20"},{"AST":{"nodeType":"YulBlock","src":"973:699:20","statements":[{"nodeType":"YulVariableDeclaration","src":"1155:213:20","value":{"arguments":[{"arguments":[{"arguments":[],"functionName":{"name":"gas","nodeType":"YulIdentifier","src":"1196:3:20"},"nodeType":"YulFunctionCall","src":"1196:5:20"},{"kind":"number","nodeType":"YulLiteral","src":"1203:5:20","type":"","value":"10000"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1192:3:20"},"nodeType":"YulFunctionCall","src":"1192:17:20"},{"name":"token","nodeType":"YulIdentifier","src":"1227:5:20"},{"kind":"number","nodeType":"YulLiteral","src":"1250:1:20","type":"","value":"0"},{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"1273:4:20"},{"kind":"number","nodeType":"YulLiteral","src":"1279:4:20","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1269:3:20"},"nodeType":"YulFunctionCall","src":"1269:15:20"},{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"1308:4:20"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1302:5:20"},"nodeType":"YulFunctionCall","src":"1302:11:20"},{"kind":"number","nodeType":"YulLiteral","src":"1331:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1350:4:20","type":"","value":"0x20"}],"functionName":{"name":"call","nodeType":"YulIdentifier","src":"1170:4:20"},"nodeType":"YulFunctionCall","src":"1170:198:20"},"variables":[{"name":"success","nodeType":"YulTypedName","src":"1159:7:20","type":""}]},{"cases":[{"body":{"nodeType":"YulBlock","src":"1424:54:20","statements":[{"nodeType":"YulAssignment","src":"1442:22:20","value":{"name":"success","nodeType":"YulIdentifier","src":"1457:7:20"},"variableNames":[{"name":"transferred","nodeType":"YulIdentifier","src":"1442:11:20"}]}]},"nodeType":"YulCase","src":"1417:61:20","value":{"kind":"number","nodeType":"YulLiteral","src":"1422:1:20","type":"","value":"0"}},{"body":{"nodeType":"YulBlock","src":"1501:92:20","statements":[{"nodeType":"YulAssignment","src":"1519:60:20","value":{"arguments":[{"arguments":[{"arguments":[{"name":"success","nodeType":"YulIdentifier","src":"1551:7:20"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1544:6:20"},"nodeType":"YulFunctionCall","src":"1544:15:20"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1574:1:20","type":"","value":"0"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1568:5:20"},"nodeType":"YulFunctionCall","src":"1568:8:20"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1561:6:20"},"nodeType":"YulFunctionCall","src":"1561:16:20"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"1541:2:20"},"nodeType":"YulFunctionCall","src":"1541:37:20"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1534:6:20"},"nodeType":"YulFunctionCall","src":"1534:45:20"},"variableNames":[{"name":"transferred","nodeType":"YulIdentifier","src":"1519:11:20"}]}]},"nodeType":"YulCase","src":"1491:102:20","value":{"kind":"number","nodeType":"YulLiteral","src":"1496:4:20","type":"","value":"0x20"}},{"body":{"nodeType":"YulBlock","src":"1614:48:20","statements":[{"nodeType":"YulAssignment","src":"1632:16:20","value":{"kind":"number","nodeType":"YulLiteral","src":"1647:1:20","type":"","value":"0"},"variableNames":[{"name":"transferred","nodeType":"YulIdentifier","src":"1632:11:20"}]}]},"nodeType":"YulCase","src":"1606:56:20","value":"default"}],"expression":{"arguments":[],"functionName":{"name":"returndatasize","nodeType":"YulIdentifier","src":"1388:14:20"},"nodeType":"YulFunctionCall","src":"1388:16:20"},"nodeType":"YulSwitch","src":"1381:281:20"}]},"evmVersion":"london","externalReferences":[{"declaration":5214,"isOffset":false,"isSlot":false,"src":"1273:4:20","valueSize":1},{"declaration":5214,"isOffset":false,"isSlot":false,"src":"1308:4:20","valueSize":1},{"declaration":5185,"isOffset":false,"isSlot":false,"src":"1227:5:20","valueSize":1},{"declaration":5192,"isOffset":false,"isSlot":false,"src":"1442:11:20","valueSize":1},{"declaration":5192,"isOffset":false,"isSlot":false,"src":"1519:11:20","valueSize":1},{"declaration":5192,"isOffset":false,"isSlot":false,"src":"1632:11:20","valueSize":1}],"id":5222,"nodeType":"InlineAssembly","src":"964:708:20"}]},"documentation":{"id":5183,"nodeType":"StructuredDocumentation","src":"168:255:20","text":"@dev Transfers a token and returns if it was a success\n @param token Token that should be transferred\n @param receiver Receiver to whom the token should be transferred\n @param amount The amount of tokens that should be transferred"},"id":5224,"implemented":true,"kind":"function","modifiers":[],"name":"transferToken","nameLocation":"437:13:20","nodeType":"FunctionDefinition","parameters":{"id":5190,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5185,"mutability":"mutable","name":"token","nameLocation":"468:5:20","nodeType":"VariableDeclaration","scope":5224,"src":"460:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5184,"name":"address","nodeType":"ElementaryTypeName","src":"460:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5187,"mutability":"mutable","name":"receiver","nameLocation":"491:8:20","nodeType":"VariableDeclaration","scope":5224,"src":"483:16:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5186,"name":"address","nodeType":"ElementaryTypeName","src":"483:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5189,"mutability":"mutable","name":"amount","nameLocation":"517:6:20","nodeType":"VariableDeclaration","scope":5224,"src":"509:14:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5188,"name":"uint256","nodeType":"ElementaryTypeName","src":"509:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"450:79:20"},"returnParameters":{"id":5193,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5192,"mutability":"mutable","name":"transferred","nameLocation":"553:11:20","nodeType":"VariableDeclaration","scope":5224,"src":"548:16:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5191,"name":"bool","nodeType":"ElementaryTypeName","src":"548:4:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"547:18:20"},"scope":5225,"src":"428:1250:20","stateMutability":"nonpayable","virtual":false,"visibility":"internal"}],"scope":5226,"src":"123:1557:20","usedErrors":[]}],"src":"42:1639:20"}},"contracts/smart-contract-wallet/common/SelfAuthorized.sol":{"id":21,"ast":{"absolutePath":"contracts/smart-contract-wallet/common/SelfAuthorized.sol","exportedSymbols":{"SelfAuthorized":[5257],"SelfAuthorizedErrors":[5100]},"id":5258,"license":"LGPL-3.0-only","nodeType":"SourceUnit","nodes":[{"id":5227,"literals":["solidity","0.8",".17"],"nodeType":"PragmaDirective","src":"42:23:21"},{"absolutePath":"contracts/smart-contract-wallet/common/Errors.sol","file":"../common/Errors.sol","id":5229,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5258,"sourceUnit":5129,"src":"67:58:21","symbolAliases":[{"foreign":{"id":5228,"name":"SelfAuthorizedErrors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5100,"src":"75:20:21","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":5231,"name":"SelfAuthorizedErrors","nameLocations":["229:20:21"],"nodeType":"IdentifierPath","referencedDeclaration":5100,"src":"229:20:21"},"id":5232,"nodeType":"InheritanceSpecifier","src":"229:20:21"}],"canonicalName":"SelfAuthorized","contractDependencies":[],"contractKind":"contract","documentation":{"id":5230,"nodeType":"StructuredDocumentation","src":"127:75:21","text":"@title SelfAuthorized - authorizes current contract to perform actions"},"fullyImplemented":true,"id":5257,"linearizedBaseContracts":[5257,5100],"name":"SelfAuthorized","nameLocation":"211:14:21","nodeType":"ContractDefinition","nodes":[{"body":{"id":5248,"nodeType":"Block","src":"296:84:21","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":5241,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":5235,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"310:3:21","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":5236,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"314:6:21","memberName":"sender","nodeType":"MemberAccess","src":"310:10:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"id":5239,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"332:4:21","typeDescriptions":{"typeIdentifier":"t_contract$_SelfAuthorized_$5257","typeString":"contract SelfAuthorized"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_SelfAuthorized_$5257","typeString":"contract SelfAuthorized"}],"id":5238,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"324:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":5237,"name":"address","nodeType":"ElementaryTypeName","src":"324:7:21","typeDescriptions":{}}},"id":5240,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"324:13:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"310:27:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5247,"nodeType":"IfStatement","src":"306:67:21","trueBody":{"errorCall":{"arguments":[{"expression":{"id":5243,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"362:3:21","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":5244,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"366:6:21","memberName":"sender","nodeType":"MemberAccess","src":"362:10:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":5242,"name":"CallerIsNotSelf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5099,"src":"346:15:21","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":5245,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"346:27:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5246,"nodeType":"RevertStatement","src":"339:34:21"}}]},"id":5249,"implemented":true,"kind":"function","modifiers":[],"name":"requireSelfCall","nameLocation":"265:15:21","nodeType":"FunctionDefinition","parameters":{"id":5233,"nodeType":"ParameterList","parameters":[],"src":"280:2:21"},"returnParameters":{"id":5234,"nodeType":"ParameterList","parameters":[],"src":"296:0:21"},"scope":5257,"src":"256:124:21","stateMutability":"view","virtual":false,"visibility":"private"},{"body":{"id":5255,"nodeType":"Block","src":"408:114:21","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":5251,"name":"requireSelfCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5249,"src":"487:15:21","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":5252,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"487:17:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5253,"nodeType":"ExpressionStatement","src":"487:17:21"},{"id":5254,"nodeType":"PlaceholderStatement","src":"514:1:21"}]},"id":5256,"name":"authorized","nameLocation":"395:10:21","nodeType":"ModifierDefinition","parameters":{"id":5250,"nodeType":"ParameterList","parameters":[],"src":"405:2:21"},"src":"386:136:21","virtual":false,"visibility":"internal"}],"scope":5258,"src":"202:322:21","usedErrors":[5099]}],"src":"42:483:21"}},"contracts/smart-contract-wallet/common/SignatureDecoder.sol":{"id":22,"ast":{"absolutePath":"contracts/smart-contract-wallet/common/SignatureDecoder.sol","exportedSymbols":{"SignatureDecoder":[5275]},"id":5276,"license":"LGPL-3.0-only","nodeType":"SourceUnit","nodes":[{"id":5259,"literals":["solidity","0.8",".17"],"nodeType":"PragmaDirective","src":"42:23:22"},{"abstract":true,"baseContracts":[],"canonicalName":"SignatureDecoder","contractDependencies":[],"contractKind":"contract","documentation":{"id":5260,"nodeType":"StructuredDocumentation","src":"67:73:22","text":"@title SignatureDecoder - Decodes signatures that a encoded as bytes"},"fullyImplemented":true,"id":5275,"linearizedBaseContracts":[5275],"name":"SignatureDecoder","nameLocation":"158:16:22","nodeType":"ContractDefinition","nodes":[{"body":{"id":5273,"nodeType":"Block","src":"425:663:22","statements":[{"AST":{"nodeType":"YulBlock","src":"658:424:22","statements":[{"nodeType":"YulAssignment","src":"672:32:22","value":{"arguments":[{"arguments":[{"name":"signature","nodeType":"YulIdentifier","src":"687:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"698:4:22","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"683:3:22"},"nodeType":"YulFunctionCall","src":"683:20:22"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"677:5:22"},"nodeType":"YulFunctionCall","src":"677:27:22"},"variableNames":[{"name":"r","nodeType":"YulIdentifier","src":"672:1:22"}]},{"nodeType":"YulAssignment","src":"717:32:22","value":{"arguments":[{"arguments":[{"name":"signature","nodeType":"YulIdentifier","src":"732:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"743:4:22","type":"","value":"0x40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"728:3:22"},"nodeType":"YulFunctionCall","src":"728:20:22"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"722:5:22"},"nodeType":"YulFunctionCall","src":"722:27:22"},"variableNames":[{"name":"s","nodeType":"YulIdentifier","src":"717:1:22"}]},{"nodeType":"YulAssignment","src":"1029:43:22","value":{"arguments":[{"arguments":[{"arguments":[{"name":"signature","nodeType":"YulIdentifier","src":"1048:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"1059:4:22","type":"","value":"0x41"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1044:3:22"},"nodeType":"YulFunctionCall","src":"1044:20:22"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1038:5:22"},"nodeType":"YulFunctionCall","src":"1038:27:22"},{"kind":"number","nodeType":"YulLiteral","src":"1067:4:22","type":"","value":"0xff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1034:3:22"},"nodeType":"YulFunctionCall","src":"1034:38:22"},"variableNames":[{"name":"v","nodeType":"YulIdentifier","src":"1029:1:22"}]}]},"evmVersion":"london","externalReferences":[{"declaration":5268,"isOffset":false,"isSlot":false,"src":"672:1:22","valueSize":1},{"declaration":5270,"isOffset":false,"isSlot":false,"src":"717:1:22","valueSize":1},{"declaration":5263,"isOffset":false,"isSlot":false,"src":"1048:9:22","valueSize":1},{"declaration":5263,"isOffset":false,"isSlot":false,"src":"687:9:22","valueSize":1},{"declaration":5263,"isOffset":false,"isSlot":false,"src":"732:9:22","valueSize":1},{"declaration":5266,"isOffset":false,"isSlot":false,"src":"1029:1:22","valueSize":1}],"id":5272,"nodeType":"InlineAssembly","src":"649:433:22"}]},"documentation":{"id":5261,"nodeType":"StructuredDocumentation","src":"181:123:22","text":"@dev divides bytes signature into `uint8 v, bytes32 r, bytes32 s`.\n @param signature concatenated rsv signatures"},"id":5274,"implemented":true,"kind":"function","modifiers":[],"name":"signatureSplit","nameLocation":"318:14:22","nodeType":"FunctionDefinition","parameters":{"id":5264,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5263,"mutability":"mutable","name":"signature","nameLocation":"355:9:22","nodeType":"VariableDeclaration","scope":5274,"src":"342:22:22","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":5262,"name":"bytes","nodeType":"ElementaryTypeName","src":"342:5:22","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"332:38:22"},"returnParameters":{"id":5271,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5266,"mutability":"mutable","name":"v","nameLocation":"400:1:22","nodeType":"VariableDeclaration","scope":5274,"src":"394:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":5265,"name":"uint8","nodeType":"ElementaryTypeName","src":"394:5:22","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":5268,"mutability":"mutable","name":"r","nameLocation":"411:1:22","nodeType":"VariableDeclaration","scope":5274,"src":"403:9:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5267,"name":"bytes32","nodeType":"ElementaryTypeName","src":"403:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":5270,"mutability":"mutable","name":"s","nameLocation":"422:1:22","nodeType":"VariableDeclaration","scope":5274,"src":"414:9:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5269,"name":"bytes32","nodeType":"ElementaryTypeName","src":"414:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"393:31:22"},"scope":5275,"src":"309:779:22","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":5276,"src":"140:950:22","usedErrors":[]}],"src":"42:1049:22"}},"contracts/smart-contract-wallet/handler/DefaultCallbackHandler.sol":{"id":23,"ast":{"absolutePath":"contracts/smart-contract-wallet/handler/DefaultCallbackHandler.sol","exportedSymbols":{"DefaultCallbackHandler":[5420],"IERC1155TokenReceiver":[5458],"IERC165":[5470],"IERC721TokenReceiver":[5488],"IERC777TokensRecipient":[5506],"SmartAccount":[4046]},"id":5421,"license":"LGPL-3.0-only","nodeType":"SourceUnit","nodes":[{"id":5277,"literals":["solidity","0.8",".17"],"nodeType":"PragmaDirective","src":"42:23:23"},{"absolutePath":"contracts/smart-contract-wallet/interfaces/IERC1155TokenReceiver.sol","file":"../interfaces/IERC1155TokenReceiver.sol","id":5279,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5421,"sourceUnit":5459,"src":"67:78:23","symbolAliases":[{"foreign":{"id":5278,"name":"IERC1155TokenReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5458,"src":"75:21:23","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"contracts/smart-contract-wallet/interfaces/IERC721TokenReceiver.sol","file":"../interfaces/IERC721TokenReceiver.sol","id":5281,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5421,"sourceUnit":5489,"src":"146:76:23","symbolAliases":[{"foreign":{"id":5280,"name":"IERC721TokenReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5488,"src":"154:20:23","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"contracts/smart-contract-wallet/interfaces/IERC777TokensRecipient.sol","file":"../interfaces/IERC777TokensRecipient.sol","id":5283,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5421,"sourceUnit":5507,"src":"223:80:23","symbolAliases":[{"foreign":{"id":5282,"name":"IERC777TokensRecipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5506,"src":"231:22:23","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"contracts/smart-contract-wallet/interfaces/IERC165.sol","file":"../interfaces/IERC165.sol","id":5285,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5421,"sourceUnit":5471,"src":"304:50:23","symbolAliases":[{"foreign":{"id":5284,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5470,"src":"312:7:23","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"contracts/smart-contract-wallet/SmartAccount.sol","file":"../SmartAccount.sol","id":5287,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5421,"sourceUnit":4047,"src":"355:49:23","symbolAliases":[{"foreign":{"id":5286,"name":"SmartAccount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4046,"src":"363:12:23","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":5289,"name":"IERC1155TokenReceiver","nameLocations":["668:21:23"],"nodeType":"IdentifierPath","referencedDeclaration":5458,"src":"668:21:23"},"id":5290,"nodeType":"InheritanceSpecifier","src":"668:21:23"},{"baseName":{"id":5291,"name":"IERC777TokensRecipient","nameLocations":["695:22:23"],"nodeType":"IdentifierPath","referencedDeclaration":5506,"src":"695:22:23"},"id":5292,"nodeType":"InheritanceSpecifier","src":"695:22:23"},{"baseName":{"id":5293,"name":"IERC721TokenReceiver","nameLocations":["723:20:23"],"nodeType":"IdentifierPath","referencedDeclaration":5488,"src":"723:20:23"},"id":5294,"nodeType":"InheritanceSpecifier","src":"723:20:23"},{"baseName":{"id":5295,"name":"IERC165","nameLocations":["749:7:23"],"nodeType":"IdentifierPath","referencedDeclaration":5470,"src":"749:7:23"},"id":5296,"nodeType":"InheritanceSpecifier","src":"749:7:23"}],"canonicalName":"DefaultCallbackHandler","contractDependencies":[],"contractKind":"contract","documentation":{"id":5288,"nodeType":"StructuredDocumentation","src":"406:222:23","text":"@title Default Callback Handler - returns true for known token callbacks\n   @dev Handles EIP-1271 compliant isValidSignature requests.\n  @notice inspired by Richard Meissner's <richard@gnosis.pm> implementation"},"fullyImplemented":true,"id":5420,"linearizedBaseContracts":[5420,5470,5488,5506,5458],"name":"DefaultCallbackHandler","nameLocation":"638:22:23","nodeType":"ContractDefinition","nodes":[{"constant":true,"functionSelector":"a3f4df7e","id":5299,"mutability":"constant","name":"NAME","nameLocation":"786:4:23","nodeType":"VariableDeclaration","scope":5420,"src":"763:56:23","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":5297,"name":"string","nodeType":"ElementaryTypeName","src":"763:6:23","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":{"hexValue":"44656661756c742043616c6c6261636b2048616e646c6572","id":5298,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"793:26:23","typeDescriptions":{"typeIdentifier":"t_stringliteral_d9f4673df8041f58efa900bb2ad896c81d43067459342942ea342c4c043a7691","typeString":"literal_string \"Default Callback Handler\""},"value":"Default Callback Handler"},"visibility":"public"},{"constant":true,"functionSelector":"ffa1ad74","id":5302,"mutability":"constant","name":"VERSION","nameLocation":"848:7:23","nodeType":"VariableDeclaration","scope":5420,"src":"825:40:23","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":5300,"name":"string","nodeType":"ElementaryTypeName","src":"825:6:23","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":{"hexValue":"312e302e30","id":5301,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"858:7:23","typeDescriptions":{"typeIdentifier":"t_stringliteral_06c015bd22b4c69690933c1058878ebdfef31f9aaae40bbe86d8a09fe1b2972c","typeString":"literal_string \"1.0.0\""},"value":"1.0.0"},"visibility":"public"},{"baseFunctions":[5439],"body":{"id":5322,"nodeType":"Block","src":"1037:72:23","statements":[{"expression":{"expression":{"expression":{"id":5318,"name":"IERC1155TokenReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5458,"src":"1054:21:23","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC1155TokenReceiver_$5458_$","typeString":"type(contract IERC1155TokenReceiver)"}},"id":5319,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1076:17:23","memberName":"onERC1155Received","nodeType":"MemberAccess","referencedDeclaration":5439,"src":"1054:39:23","typeDescriptions":{"typeIdentifier":"t_function_declaration_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_calldata_ptr_$returns$_t_bytes4_$","typeString":"function IERC1155TokenReceiver.onERC1155Received(address,address,uint256,uint256,bytes calldata) returns (bytes4)"}},"id":5320,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1094:8:23","memberName":"selector","nodeType":"MemberAccess","src":"1054:48:23","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"functionReturnParameters":5317,"id":5321,"nodeType":"Return","src":"1047:55:23"}]},"functionSelector":"f23a6e61","id":5323,"implemented":true,"kind":"function","modifiers":[],"name":"onERC1155Received","nameLocation":"881:17:23","nodeType":"FunctionDefinition","overrides":{"id":5314,"nodeType":"OverrideSpecifier","overrides":[],"src":"1011:8:23"},"parameters":{"id":5313,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5304,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5323,"src":"908:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5303,"name":"address","nodeType":"ElementaryTypeName","src":"908:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5306,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5323,"src":"925:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5305,"name":"address","nodeType":"ElementaryTypeName","src":"925:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5308,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5323,"src":"942:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5307,"name":"uint256","nodeType":"ElementaryTypeName","src":"942:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5310,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5323,"src":"959:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5309,"name":"uint256","nodeType":"ElementaryTypeName","src":"959:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5312,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5323,"src":"976:14:23","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":5311,"name":"bytes","nodeType":"ElementaryTypeName","src":"976:5:23","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"898:98:23"},"returnParameters":{"id":5317,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5316,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5323,"src":"1029:6:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":5315,"name":"bytes4","nodeType":"ElementaryTypeName","src":"1029:6:23","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"1028:8:23"},"scope":5420,"src":"872:237:23","stateMutability":"pure","virtual":false,"visibility":"external"},{"baseFunctions":[5457],"body":{"id":5345,"nodeType":"Block","src":"1307:77:23","statements":[{"expression":{"expression":{"expression":{"id":5341,"name":"IERC1155TokenReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5458,"src":"1324:21:23","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC1155TokenReceiver_$5458_$","typeString":"type(contract IERC1155TokenReceiver)"}},"id":5342,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1346:22:23","memberName":"onERC1155BatchReceived","nodeType":"MemberAccess","referencedDeclaration":5457,"src":"1324:44:23","typeDescriptions":{"typeIdentifier":"t_function_declaration_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_calldata_ptr_$_t_array$_t_uint256_$dyn_calldata_ptr_$_t_bytes_calldata_ptr_$returns$_t_bytes4_$","typeString":"function IERC1155TokenReceiver.onERC1155BatchReceived(address,address,uint256[] calldata,uint256[] calldata,bytes calldata) returns (bytes4)"}},"id":5343,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1369:8:23","memberName":"selector","nodeType":"MemberAccess","src":"1324:53:23","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"functionReturnParameters":5340,"id":5344,"nodeType":"Return","src":"1317:60:23"}]},"functionSelector":"bc197c81","id":5346,"implemented":true,"kind":"function","modifiers":[],"name":"onERC1155BatchReceived","nameLocation":"1124:22:23","nodeType":"FunctionDefinition","overrides":{"id":5337,"nodeType":"OverrideSpecifier","overrides":[],"src":"1281:8:23"},"parameters":{"id":5336,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5325,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5346,"src":"1156:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5324,"name":"address","nodeType":"ElementaryTypeName","src":"1156:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5327,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5346,"src":"1173:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5326,"name":"address","nodeType":"ElementaryTypeName","src":"1173:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5330,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5346,"src":"1190:18:23","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":5328,"name":"uint256","nodeType":"ElementaryTypeName","src":"1190:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5329,"nodeType":"ArrayTypeName","src":"1190:9:23","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":5333,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5346,"src":"1218:18:23","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":5331,"name":"uint256","nodeType":"ElementaryTypeName","src":"1218:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5332,"nodeType":"ArrayTypeName","src":"1218:9:23","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":5335,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5346,"src":"1246:14:23","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":5334,"name":"bytes","nodeType":"ElementaryTypeName","src":"1246:5:23","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1146:120:23"},"returnParameters":{"id":5340,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5339,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5346,"src":"1299:6:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":5338,"name":"bytes4","nodeType":"ElementaryTypeName","src":"1299:6:23","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"1298:8:23"},"scope":5420,"src":"1115:269:23","stateMutability":"pure","virtual":false,"visibility":"external"},{"baseFunctions":[5487],"body":{"id":5364,"nodeType":"Block","src":"1537:70:23","statements":[{"expression":{"expression":{"expression":{"id":5360,"name":"IERC721TokenReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5488,"src":"1554:20:23","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC721TokenReceiver_$5488_$","typeString":"type(contract IERC721TokenReceiver)"}},"id":5361,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1575:16:23","memberName":"onERC721Received","nodeType":"MemberAccess","referencedDeclaration":5487,"src":"1554:37:23","typeDescriptions":{"typeIdentifier":"t_function_declaration_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_calldata_ptr_$returns$_t_bytes4_$","typeString":"function IERC721TokenReceiver.onERC721Received(address,address,uint256,bytes calldata) returns (bytes4)"}},"id":5362,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1592:8:23","memberName":"selector","nodeType":"MemberAccess","src":"1554:46:23","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"functionReturnParameters":5359,"id":5363,"nodeType":"Return","src":"1547:53:23"}]},"functionSelector":"150b7a02","id":5365,"implemented":true,"kind":"function","modifiers":[],"name":"onERC721Received","nameLocation":"1399:16:23","nodeType":"FunctionDefinition","overrides":{"id":5356,"nodeType":"OverrideSpecifier","overrides":[],"src":"1511:8:23"},"parameters":{"id":5355,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5348,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5365,"src":"1425:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5347,"name":"address","nodeType":"ElementaryTypeName","src":"1425:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5350,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5365,"src":"1442:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5349,"name":"address","nodeType":"ElementaryTypeName","src":"1442:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5352,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5365,"src":"1459:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5351,"name":"uint256","nodeType":"ElementaryTypeName","src":"1459:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5354,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5365,"src":"1476:14:23","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":5353,"name":"bytes","nodeType":"ElementaryTypeName","src":"1476:5:23","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1415:81:23"},"returnParameters":{"id":5359,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5358,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5365,"src":"1529:6:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":5357,"name":"bytes4","nodeType":"ElementaryTypeName","src":"1529:6:23","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"1528:8:23"},"scope":5420,"src":"1390:217:23","stateMutability":"pure","virtual":false,"visibility":"external"},{"baseFunctions":[5505],"body":{"id":5381,"nodeType":"Block","src":"1782:84:23","statements":[]},"functionSelector":"0023de29","id":5382,"implemented":true,"kind":"function","modifiers":[],"name":"tokensReceived","nameLocation":"1622:14:23","nodeType":"FunctionDefinition","overrides":{"id":5379,"nodeType":"OverrideSpecifier","overrides":[],"src":"1773:8:23"},"parameters":{"id":5378,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5367,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5382,"src":"1646:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5366,"name":"address","nodeType":"ElementaryTypeName","src":"1646:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5369,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5382,"src":"1663:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5368,"name":"address","nodeType":"ElementaryTypeName","src":"1663:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5371,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5382,"src":"1680:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5370,"name":"address","nodeType":"ElementaryTypeName","src":"1680:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5373,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5382,"src":"1697:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5372,"name":"uint256","nodeType":"ElementaryTypeName","src":"1697:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5375,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5382,"src":"1714:14:23","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":5374,"name":"bytes","nodeType":"ElementaryTypeName","src":"1714:5:23","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":5377,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5382,"src":"1738:14:23","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":5376,"name":"bytes","nodeType":"ElementaryTypeName","src":"1738:5:23","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1636:122:23"},"returnParameters":{"id":5380,"nodeType":"ParameterList","parameters":[],"src":"1782:0:23"},"scope":5420,"src":"1613:253:23","stateMutability":"pure","virtual":false,"visibility":"external"},{"baseFunctions":[5469],"body":{"id":5418,"nodeType":"Block","src":"1979:286:23","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5416,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5409,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5402,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":5395,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5390,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5384,"src":"2008:11:23","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":5392,"name":"IERC1155TokenReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5458,"src":"2028:21:23","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC1155TokenReceiver_$5458_$","typeString":"type(contract IERC1155TokenReceiver)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IERC1155TokenReceiver_$5458_$","typeString":"type(contract IERC1155TokenReceiver)"}],"id":5391,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"2023:4:23","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5393,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2023:27:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IERC1155TokenReceiver_$5458","typeString":"type(contract IERC1155TokenReceiver)"}},"id":5394,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2051:11:23","memberName":"interfaceId","nodeType":"MemberAccess","src":"2023:39:23","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"2008:54:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":5401,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5396,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5384,"src":"2078:11:23","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":5398,"name":"IERC721TokenReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5488,"src":"2098:20:23","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC721TokenReceiver_$5488_$","typeString":"type(contract IERC721TokenReceiver)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IERC721TokenReceiver_$5488_$","typeString":"type(contract IERC721TokenReceiver)"}],"id":5397,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"2093:4:23","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5399,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2093:26:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IERC721TokenReceiver_$5488","typeString":"type(contract IERC721TokenReceiver)"}},"id":5400,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2120:11:23","memberName":"interfaceId","nodeType":"MemberAccess","src":"2093:38:23","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"2078:53:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"2008:123:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":5408,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5403,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5384,"src":"2147:11:23","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":5405,"name":"IERC777TokensRecipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5506,"src":"2167:22:23","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC777TokensRecipient_$5506_$","typeString":"type(contract IERC777TokensRecipient)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IERC777TokensRecipient_$5506_$","typeString":"type(contract IERC777TokensRecipient)"}],"id":5404,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"2162:4:23","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5406,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2162:28:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IERC777TokensRecipient_$5506","typeString":"type(contract IERC777TokensRecipient)"}},"id":5407,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2191:11:23","memberName":"interfaceId","nodeType":"MemberAccess","src":"2162:40:23","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"2147:55:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"2008:194:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":5415,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5410,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5384,"src":"2218:11:23","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":5412,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5470,"src":"2238:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC165_$5470_$","typeString":"type(contract IERC165)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IERC165_$5470_$","typeString":"type(contract IERC165)"}],"id":5411,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"2233:4:23","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5413,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2233:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IERC165_$5470","typeString":"type(contract IERC165)"}},"id":5414,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2247:11:23","memberName":"interfaceId","nodeType":"MemberAccess","src":"2233:25:23","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"2218:40:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"2008:250:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":5389,"id":5417,"nodeType":"Return","src":"1989:269:23"}]},"functionSelector":"01ffc9a7","id":5419,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"1881:17:23","nodeType":"FunctionDefinition","overrides":{"id":5386,"nodeType":"OverrideSpecifier","overrides":[],"src":"1955:8:23"},"parameters":{"id":5385,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5384,"mutability":"mutable","name":"interfaceId","nameLocation":"1915:11:23","nodeType":"VariableDeclaration","scope":5419,"src":"1908:18:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":5383,"name":"bytes4","nodeType":"ElementaryTypeName","src":"1908:6:23","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"1898:34:23"},"returnParameters":{"id":5389,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5388,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5419,"src":"1973:4:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5387,"name":"bool","nodeType":"ElementaryTypeName","src":"1973:4:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1972:6:23"},"scope":5420,"src":"1872:393:23","stateMutability":"view","virtual":true,"visibility":"external"}],"scope":5421,"src":"629:1638:23","usedErrors":[]}],"src":"42:2226:23"}},"contracts/smart-contract-wallet/interfaces/IERC1155TokenReceiver.sol":{"id":24,"ast":{"absolutePath":"contracts/smart-contract-wallet/interfaces/IERC1155TokenReceiver.sol","exportedSymbols":{"IERC1155TokenReceiver":[5458]},"id":5459,"license":"LGPL-3.0-only","nodeType":"SourceUnit","nodes":[{"id":5422,"literals":["solidity","0.8",".17"],"nodeType":"PragmaDirective","src":"42:23:24"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC1155TokenReceiver","contractDependencies":[],"contractKind":"interface","documentation":{"id":5423,"nodeType":"StructuredDocumentation","src":"67:73:24","text":"Note: The ERC-165 identifier for this interface is 0x4e2312e0."},"fullyImplemented":false,"id":5458,"linearizedBaseContracts":[5458],"name":"IERC1155TokenReceiver","nameLocation":"151:21:24","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":5424,"nodeType":"StructuredDocumentation","src":"179:1083:24","text":"@notice Handle the receipt of a single ERC1155 token type.\n@dev An ERC1155-compliant smart contract MUST call this function on the token recipient contract, at the end of a `safeTransferFrom` after the balance has been updated.        \nThis function MUST return `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))` (i.e. 0xf23a6e61) if it accepts the transfer.\nThis function MUST revert if it rejects the transfer.\nReturn of any other value than the prescribed keccak256 generated value MUST result in the transaction being reverted by the caller.\n@param _operator  The address which initiated the transfer (i.e. msg.sender)\n@param _from      The address which previously owned the token\n@param _id        The ID of the token being transferred\n@param _value     The amount of tokens being transferred\n@param _data      Additional data with no specified format\n@return           `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))`"},"functionSelector":"f23a6e61","id":5439,"implemented":false,"kind":"function","modifiers":[],"name":"onERC1155Received","nameLocation":"1276:17:24","nodeType":"FunctionDefinition","parameters":{"id":5435,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5426,"mutability":"mutable","name":"_operator","nameLocation":"1311:9:24","nodeType":"VariableDeclaration","scope":5439,"src":"1303:17:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5425,"name":"address","nodeType":"ElementaryTypeName","src":"1303:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5428,"mutability":"mutable","name":"_from","nameLocation":"1338:5:24","nodeType":"VariableDeclaration","scope":5439,"src":"1330:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5427,"name":"address","nodeType":"ElementaryTypeName","src":"1330:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5430,"mutability":"mutable","name":"_id","nameLocation":"1361:3:24","nodeType":"VariableDeclaration","scope":5439,"src":"1353:11:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5429,"name":"uint256","nodeType":"ElementaryTypeName","src":"1353:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5432,"mutability":"mutable","name":"_value","nameLocation":"1382:6:24","nodeType":"VariableDeclaration","scope":5439,"src":"1374:14:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5431,"name":"uint256","nodeType":"ElementaryTypeName","src":"1374:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5434,"mutability":"mutable","name":"_data","nameLocation":"1413:5:24","nodeType":"VariableDeclaration","scope":5439,"src":"1398:20:24","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":5433,"name":"bytes","nodeType":"ElementaryTypeName","src":"1398:5:24","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1293:131:24"},"returnParameters":{"id":5438,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5437,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5439,"src":"1443:6:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":5436,"name":"bytes4","nodeType":"ElementaryTypeName","src":"1443:6:24","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"1442:8:24"},"scope":5458,"src":"1267:184:24","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":5440,"nodeType":"StructuredDocumentation","src":"1457:1245:24","text":"@notice Handle the receipt of multiple ERC1155 token types.\n@dev An ERC1155-compliant smart contract MUST call this function on the token recipient contract, at the end of a `safeBatchTransferFrom` after the balances have been updated.        \nThis function MUST return `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))` (i.e. 0xbc197c81) if it accepts the transfer(s).\nThis function MUST revert if it rejects the transfer(s).\nReturn of any other value than the prescribed keccak256 generated value MUST result in the transaction being reverted by the caller.\n@param _operator  The address which initiated the batch transfer (i.e. msg.sender)\n@param _from      The address which previously owned the token\n@param _ids       An array containing ids of each token being transferred (order and length must match _values array)\n@param _values    An array containing amounts of each token being transferred (order and length must match _ids array)\n@param _data      Additional data with no specified format\n@return           `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))`"},"functionSelector":"bc197c81","id":5457,"implemented":false,"kind":"function","modifiers":[],"name":"onERC1155BatchReceived","nameLocation":"2716:22:24","nodeType":"FunctionDefinition","parameters":{"id":5453,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5442,"mutability":"mutable","name":"_operator","nameLocation":"2756:9:24","nodeType":"VariableDeclaration","scope":5457,"src":"2748:17:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5441,"name":"address","nodeType":"ElementaryTypeName","src":"2748:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5444,"mutability":"mutable","name":"_from","nameLocation":"2783:5:24","nodeType":"VariableDeclaration","scope":5457,"src":"2775:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5443,"name":"address","nodeType":"ElementaryTypeName","src":"2775:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5447,"mutability":"mutable","name":"_ids","nameLocation":"2817:4:24","nodeType":"VariableDeclaration","scope":5457,"src":"2798:23:24","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":5445,"name":"uint256","nodeType":"ElementaryTypeName","src":"2798:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5446,"nodeType":"ArrayTypeName","src":"2798:9:24","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":5450,"mutability":"mutable","name":"_values","nameLocation":"2850:7:24","nodeType":"VariableDeclaration","scope":5457,"src":"2831:26:24","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":5448,"name":"uint256","nodeType":"ElementaryTypeName","src":"2831:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5449,"nodeType":"ArrayTypeName","src":"2831:9:24","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":5452,"mutability":"mutable","name":"_data","nameLocation":"2882:5:24","nodeType":"VariableDeclaration","scope":5457,"src":"2867:20:24","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":5451,"name":"bytes","nodeType":"ElementaryTypeName","src":"2867:5:24","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2738:155:24"},"returnParameters":{"id":5456,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5455,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5457,"src":"2912:6:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":5454,"name":"bytes4","nodeType":"ElementaryTypeName","src":"2912:6:24","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"2911:8:24"},"scope":5458,"src":"2707:213:24","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":5459,"src":"141:2781:24","usedErrors":[]}],"src":"42:2881:24"}},"contracts/smart-contract-wallet/interfaces/IERC165.sol":{"id":25,"ast":{"absolutePath":"contracts/smart-contract-wallet/interfaces/IERC165.sol","exportedSymbols":{"IERC165":[5470]},"id":5471,"license":"LGPL-3.0-only","nodeType":"SourceUnit","nodes":[{"id":5460,"literals":["solidity","0.8",".17"],"nodeType":"PragmaDirective","src":"42:23:25"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC165","contractDependencies":[],"contractKind":"interface","documentation":{"id":5461,"nodeType":"StructuredDocumentation","src":"67:137:25","text":"@notice More details at https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/introspection/IERC165.sol"},"fullyImplemented":false,"id":5470,"linearizedBaseContracts":[5470],"name":"IERC165","nameLocation":"214:7:25","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":5462,"nodeType":"StructuredDocumentation","src":"228:340:25","text":" @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."},"functionSelector":"01ffc9a7","id":5469,"implemented":false,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"582:17:25","nodeType":"FunctionDefinition","parameters":{"id":5465,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5464,"mutability":"mutable","name":"interfaceId","nameLocation":"607:11:25","nodeType":"VariableDeclaration","scope":5469,"src":"600:18:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":5463,"name":"bytes4","nodeType":"ElementaryTypeName","src":"600:6:25","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"599:20:25"},"returnParameters":{"id":5468,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5467,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5469,"src":"643:4:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5466,"name":"bool","nodeType":"ElementaryTypeName","src":"643:4:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"642:6:25"},"scope":5470,"src":"573:76:25","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":5471,"src":"204:447:25","usedErrors":[]}],"src":"42:610:25"}},"contracts/smart-contract-wallet/interfaces/IERC721TokenReceiver.sol":{"id":26,"ast":{"absolutePath":"contracts/smart-contract-wallet/interfaces/IERC721TokenReceiver.sol","exportedSymbols":{"IERC721TokenReceiver":[5488]},"id":5489,"license":"LGPL-3.0-only","nodeType":"SourceUnit","nodes":[{"id":5472,"literals":["solidity","0.8",".17"],"nodeType":"PragmaDirective","src":"42:23:26"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC721TokenReceiver","contractDependencies":[],"contractKind":"interface","documentation":{"id":5473,"nodeType":"StructuredDocumentation","src":"67:72:26","text":"@dev Note: the ERC-165 identifier for this interface is 0x150b7a02."},"fullyImplemented":false,"id":5488,"linearizedBaseContracts":[5488],"name":"IERC721TokenReceiver","nameLocation":"149:20:26","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":5474,"nodeType":"StructuredDocumentation","src":"176:760:26","text":"@notice Handle the receipt of an NFT\n @dev The ERC721 smart contract calls this function on the recipient\n  after a `transfer`. This function MAY throw to revert and reject the\n  transfer. Return of other than the magic value MUST result in the\n  transaction being reverted.\n  Note: the contract address is always the message sender.\n @param _operator The address which called `safeTransferFrom` function\n @param _from The address which previously owned the token\n @param _tokenId The NFT identifier which is being transferred\n @param _data Additional data with no specified format\n @return `bytes4(keccak256(\"onERC721Received(address,address,uint256,bytes)\"))`\n  unless throwing"},"functionSelector":"150b7a02","id":5487,"implemented":false,"kind":"function","modifiers":[],"name":"onERC721Received","nameLocation":"950:16:26","nodeType":"FunctionDefinition","parameters":{"id":5483,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5476,"mutability":"mutable","name":"_operator","nameLocation":"984:9:26","nodeType":"VariableDeclaration","scope":5487,"src":"976:17:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5475,"name":"address","nodeType":"ElementaryTypeName","src":"976:7:26","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5478,"mutability":"mutable","name":"_from","nameLocation":"1011:5:26","nodeType":"VariableDeclaration","scope":5487,"src":"1003:13:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5477,"name":"address","nodeType":"ElementaryTypeName","src":"1003:7:26","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5480,"mutability":"mutable","name":"_tokenId","nameLocation":"1034:8:26","nodeType":"VariableDeclaration","scope":5487,"src":"1026:16:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5479,"name":"uint256","nodeType":"ElementaryTypeName","src":"1026:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5482,"mutability":"mutable","name":"_data","nameLocation":"1067:5:26","nodeType":"VariableDeclaration","scope":5487,"src":"1052:20:26","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":5481,"name":"bytes","nodeType":"ElementaryTypeName","src":"1052:5:26","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"966:112:26"},"returnParameters":{"id":5486,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5485,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5487,"src":"1097:6:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":5484,"name":"bytes4","nodeType":"ElementaryTypeName","src":"1097:6:26","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"1096:8:26"},"scope":5488,"src":"941:164:26","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":5489,"src":"139:968:26","usedErrors":[]}],"src":"42:1066:26"}},"contracts/smart-contract-wallet/interfaces/IERC777TokensRecipient.sol":{"id":27,"ast":{"absolutePath":"contracts/smart-contract-wallet/interfaces/IERC777TokensRecipient.sol","exportedSymbols":{"IERC777TokensRecipient":[5506]},"id":5507,"license":"LGPL-3.0-only","nodeType":"SourceUnit","nodes":[{"id":5490,"literals":["solidity","0.8",".17"],"nodeType":"PragmaDirective","src":"42:23:27"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC777TokensRecipient","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":5506,"linearizedBaseContracts":[5506],"name":"IERC777TokensRecipient","nameLocation":"77:22:27","nodeType":"ContractDefinition","nodes":[{"functionSelector":"0023de29","id":5505,"implemented":false,"kind":"function","modifiers":[],"name":"tokensReceived","nameLocation":"115:14:27","nodeType":"FunctionDefinition","parameters":{"id":5503,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5492,"mutability":"mutable","name":"operator","nameLocation":"147:8:27","nodeType":"VariableDeclaration","scope":5505,"src":"139:16:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5491,"name":"address","nodeType":"ElementaryTypeName","src":"139:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5494,"mutability":"mutable","name":"from","nameLocation":"173:4:27","nodeType":"VariableDeclaration","scope":5505,"src":"165:12:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5493,"name":"address","nodeType":"ElementaryTypeName","src":"165:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5496,"mutability":"mutable","name":"to","nameLocation":"195:2:27","nodeType":"VariableDeclaration","scope":5505,"src":"187:10:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5495,"name":"address","nodeType":"ElementaryTypeName","src":"187:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5498,"mutability":"mutable","name":"amount","nameLocation":"215:6:27","nodeType":"VariableDeclaration","scope":5505,"src":"207:14:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5497,"name":"uint256","nodeType":"ElementaryTypeName","src":"207:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5500,"mutability":"mutable","name":"data","nameLocation":"246:4:27","nodeType":"VariableDeclaration","scope":5505,"src":"231:19:27","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":5499,"name":"bytes","nodeType":"ElementaryTypeName","src":"231:5:27","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":5502,"mutability":"mutable","name":"operatorData","nameLocation":"275:12:27","nodeType":"VariableDeclaration","scope":5505,"src":"260:27:27","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":5501,"name":"bytes","nodeType":"ElementaryTypeName","src":"260:5:27","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"129:164:27"},"returnParameters":{"id":5504,"nodeType":"ParameterList","parameters":[],"src":"302:0:27"},"scope":5506,"src":"106:197:27","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":5507,"src":"67:238:27","usedErrors":[]}],"src":"42:264:27"}},"contracts/smart-contract-wallet/interfaces/IModule.sol":{"id":28,"ast":{"absolutePath":"contracts/smart-contract-wallet/interfaces/IModule.sol","exportedSymbols":{"IModule":[5522],"UserOperation":[643]},"id":5523,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":5508,"literals":["solidity","0.8",".17"],"nodeType":"PragmaDirective","src":"32:23:28"},{"absolutePath":"@account-abstraction/contracts/interfaces/UserOperation.sol","file":"@account-abstraction/contracts/interfaces/UserOperation.sol","id":5510,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5523,"sourceUnit":814,"src":"56:90:28","symbolAliases":[{"foreign":{"id":5509,"name":"UserOperation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":643,"src":"64:13:28","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"IModule","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":5522,"linearizedBaseContracts":[5522],"name":"IModule","nameLocation":"227:7:28","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":5511,"nodeType":"StructuredDocumentation","src":"241:380:28","text":" @dev standard validateSignature for modules to validate and mark userOpHash as seen\n @param userOp the operation that is about to be executed.\n @param userOpHash hash of the user's request data. can be used as the basis for signature.\n @return sigValidationResult sigAuthorizer to be passed back to trusting Account, aligns with validationData"},"functionSelector":"22f383ea","id":5521,"implemented":false,"kind":"function","modifiers":[],"name":"validateSignature","nameLocation":"635:17:28","nodeType":"FunctionDefinition","parameters":{"id":5517,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5514,"mutability":"mutable","name":"userOp","nameLocation":"685:6:28","nodeType":"VariableDeclaration","scope":5521,"src":"662:29:28","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$643_calldata_ptr","typeString":"struct UserOperation"},"typeName":{"id":5513,"nodeType":"UserDefinedTypeName","pathNode":{"id":5512,"name":"UserOperation","nameLocations":["662:13:28"],"nodeType":"IdentifierPath","referencedDeclaration":643,"src":"662:13:28"},"referencedDeclaration":643,"src":"662:13:28","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$643_storage_ptr","typeString":"struct UserOperation"}},"visibility":"internal"},{"constant":false,"id":5516,"mutability":"mutable","name":"userOpHash","nameLocation":"709:10:28","nodeType":"VariableDeclaration","scope":5521,"src":"701:18:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5515,"name":"bytes32","nodeType":"ElementaryTypeName","src":"701:7:28","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"652:73:28"},"returnParameters":{"id":5520,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5519,"mutability":"mutable","name":"sigValidationResult","nameLocation":"752:19:28","nodeType":"VariableDeclaration","scope":5521,"src":"744:27:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5518,"name":"uint256","nodeType":"ElementaryTypeName","src":"744:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"743:29:28"},"scope":5522,"src":"626:147:28","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":5523,"src":"217:558:28","usedErrors":[]}],"src":"32:744:28"}},"contracts/smart-contract-wallet/interfaces/ISignatureValidator.sol":{"id":29,"ast":{"absolutePath":"contracts/smart-contract-wallet/interfaces/ISignatureValidator.sol","exportedSymbols":{"ISignatureValidator":[5541],"ISignatureValidatorConstants":[5528]},"id":5542,"license":"LGPL-3.0-only","nodeType":"SourceUnit","nodes":[{"id":5524,"literals":["solidity","0.8",".17"],"nodeType":"PragmaDirective","src":"42:23:29"},{"abstract":false,"baseContracts":[],"canonicalName":"ISignatureValidatorConstants","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":5528,"linearizedBaseContracts":[5528],"name":"ISignatureValidatorConstants","nameLocation":"76:28:29","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":5527,"mutability":"constant","name":"EIP1271_MAGIC_VALUE","nameLocation":"195:19:29","nodeType":"VariableDeclaration","scope":5528,"src":"170:57:29","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":5525,"name":"bytes4","nodeType":"ElementaryTypeName","src":"170:6:29","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"value":{"hexValue":"30783136323662613765","id":5526,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"217:10:29","typeDescriptions":{"typeIdentifier":"t_rational_371636862_by_1","typeString":"int_const 371636862"},"value":"0x1626ba7e"},"visibility":"internal"}],"scope":5542,"src":"67:163:29","usedErrors":[]},{"abstract":true,"baseContracts":[{"baseName":{"id":5529,"name":"ISignatureValidatorConstants","nameLocations":["273:28:29"],"nodeType":"IdentifierPath","referencedDeclaration":5528,"src":"273:28:29"},"id":5530,"nodeType":"InheritanceSpecifier","src":"273:28:29"}],"canonicalName":"ISignatureValidator","contractDependencies":[],"contractKind":"contract","fullyImplemented":false,"id":5541,"linearizedBaseContracts":[5541,5528],"name":"ISignatureValidator","nameLocation":"250:19:29","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":5531,"nodeType":"StructuredDocumentation","src":"308:455:29","text":" @dev Should return whether the signature provided is valid for the provided data\n @param _dataHash Arbitrary length data signed on behalf of address(this)\n @param _signature Signature byte array associated with _data\n MUST return the bytes4 magic value 0x20c13b0b when function passes.\n MUST NOT modify state (using STATICCALL for solc < 0.5, view modifier for solc > 0.5)\n MUST allow external calls"},"functionSelector":"1626ba7e","id":5540,"implemented":false,"kind":"function","modifiers":[],"name":"isValidSignature","nameLocation":"777:16:29","nodeType":"FunctionDefinition","parameters":{"id":5536,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5533,"mutability":"mutable","name":"_dataHash","nameLocation":"811:9:29","nodeType":"VariableDeclaration","scope":5540,"src":"803:17:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5532,"name":"bytes32","nodeType":"ElementaryTypeName","src":"803:7:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":5535,"mutability":"mutable","name":"_signature","nameLocation":"843:10:29","nodeType":"VariableDeclaration","scope":5540,"src":"830:23:29","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":5534,"name":"bytes","nodeType":"ElementaryTypeName","src":"830:5:29","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"793:66:29"},"returnParameters":{"id":5539,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5538,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5540,"src":"889:6:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":5537,"name":"bytes4","nodeType":"ElementaryTypeName","src":"889:6:29","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"888:8:29"},"scope":5541,"src":"768:129:29","stateMutability":"view","virtual":true,"visibility":"public"}],"scope":5542,"src":"232:667:29","usedErrors":[]}],"src":"42:858:29"}},"contracts/smart-contract-wallet/libs/LibAddress.sol":{"id":30,"ast":{"absolutePath":"contracts/smart-contract-wallet/libs/LibAddress.sol","exportedSymbols":{"LibAddress":[5561]},"id":5562,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":5543,"literals":["solidity","0.8",".17"],"nodeType":"PragmaDirective","src":"32:23:30"},{"abstract":false,"baseContracts":[],"canonicalName":"LibAddress","contractDependencies":[],"contractKind":"library","fullyImplemented":true,"id":5561,"linearizedBaseContracts":[5561],"name":"LibAddress","nameLocation":"65:10:30","nodeType":"ContractDefinition","nodes":[{"body":{"id":5559,"nodeType":"Block","src":"446:184:30","statements":[{"assignments":[5552],"declarations":[{"constant":false,"id":5552,"mutability":"mutable","name":"csize","nameLocation":"464:5:30","nodeType":"VariableDeclaration","scope":5559,"src":"456:13:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5551,"name":"uint256","nodeType":"ElementaryTypeName","src":"456:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5553,"nodeType":"VariableDeclarationStatement","src":"456:13:30"},{"AST":{"nodeType":"YulBlock","src":"544:53:30","statements":[{"nodeType":"YulAssignment","src":"558:29:30","value":{"arguments":[{"name":"account","nodeType":"YulIdentifier","src":"579:7:30"}],"functionName":{"name":"extcodesize","nodeType":"YulIdentifier","src":"567:11:30"},"nodeType":"YulFunctionCall","src":"567:20:30"},"variableNames":[{"name":"csize","nodeType":"YulIdentifier","src":"558:5:30"}]}]},"evmVersion":"london","externalReferences":[{"declaration":5546,"isOffset":false,"isSlot":false,"src":"579:7:30","valueSize":1},{"declaration":5552,"isOffset":false,"isSlot":false,"src":"558:5:30","valueSize":1}],"id":5554,"nodeType":"InlineAssembly","src":"535:62:30"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5557,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5555,"name":"csize","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5552,"src":"613:5:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":5556,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"622:1:30","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"613:10:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":5550,"id":5558,"nodeType":"Return","src":"606:17:30"}]},"documentation":{"id":5544,"nodeType":"StructuredDocumentation","src":"82:293:30","text":" @notice Will return true if provided address is a contract\n @param account Address to verify if contract or not\n @dev This contract will return false if called within the constructor of\n      a contract's deployment, as the code is not yet stored on-chain."},"id":5560,"implemented":true,"kind":"function","modifiers":[],"name":"isContract","nameLocation":"389:10:30","nodeType":"FunctionDefinition","parameters":{"id":5547,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5546,"mutability":"mutable","name":"account","nameLocation":"408:7:30","nodeType":"VariableDeclaration","scope":5560,"src":"400:15:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5545,"name":"address","nodeType":"ElementaryTypeName","src":"400:7:30","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"399:17:30"},"returnParameters":{"id":5550,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5549,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5560,"src":"440:4:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5548,"name":"bool","nodeType":"ElementaryTypeName","src":"440:4:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"439:6:30"},"scope":5561,"src":"380:250:30","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":5562,"src":"57:575:30","usedErrors":[]}],"src":"32:601:30"}},"contracts/smart-contract-wallet/libs/Math.sol":{"id":31,"ast":{"absolutePath":"contracts/smart-contract-wallet/libs/Math.sol","exportedSymbols":{"Math":[6427]},"id":6428,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":5563,"literals":["solidity","0.8",".17"],"nodeType":"PragmaDirective","src":"103:23:31"},{"abstract":false,"baseContracts":[],"canonicalName":"Math","contractDependencies":[],"contractKind":"library","documentation":{"id":5564,"nodeType":"StructuredDocumentation","src":"128:73:31","text":" @dev Standard math utilities missing in the Solidity language."},"fullyImplemented":true,"id":6427,"linearizedBaseContracts":[6427],"name":"Math","nameLocation":"210:4:31","nodeType":"ContractDefinition","nodes":[{"canonicalName":"Math.Rounding","id":5568,"members":[{"id":5565,"name":"Down","nameLocation":"245:4:31","nodeType":"EnumValue","src":"245:4:31"},{"id":5566,"name":"Up","nameLocation":"287:2:31","nodeType":"EnumValue","src":"287:2:31"},{"id":5567,"name":"Zero","nameLocation":"318:4:31","nodeType":"EnumValue","src":"318:4:31"}],"name":"Rounding","nameLocation":"226:8:31","nodeType":"EnumDefinition","src":"221:122:31"},{"body":{"id":5585,"nodeType":"Block","src":"480:37:31","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5580,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5578,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5571,"src":"497:1:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":5579,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5573,"src":"501:1:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"497:5:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":5582,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5573,"src":"509:1:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5583,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"497:13:31","trueExpression":{"id":5581,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5571,"src":"505:1:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5577,"id":5584,"nodeType":"Return","src":"490:20:31"}]},"documentation":{"id":5569,"nodeType":"StructuredDocumentation","src":"349:59:31","text":" @dev Returns the largest of two numbers."},"id":5586,"implemented":true,"kind":"function","modifiers":[],"name":"max","nameLocation":"422:3:31","nodeType":"FunctionDefinition","parameters":{"id":5574,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5571,"mutability":"mutable","name":"a","nameLocation":"434:1:31","nodeType":"VariableDeclaration","scope":5586,"src":"426:9:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5570,"name":"uint256","nodeType":"ElementaryTypeName","src":"426:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5573,"mutability":"mutable","name":"b","nameLocation":"445:1:31","nodeType":"VariableDeclaration","scope":5586,"src":"437:9:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5572,"name":"uint256","nodeType":"ElementaryTypeName","src":"437:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"425:22:31"},"returnParameters":{"id":5577,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5576,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5586,"src":"471:7:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5575,"name":"uint256","nodeType":"ElementaryTypeName","src":"471:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"470:9:31"},"scope":6427,"src":"413:104:31","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5603,"nodeType":"Block","src":"655:37:31","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5598,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5596,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5589,"src":"672:1:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":5597,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5591,"src":"676:1:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"672:5:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":5600,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5591,"src":"684:1:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5601,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"672:13:31","trueExpression":{"id":5599,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5589,"src":"680:1:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5595,"id":5602,"nodeType":"Return","src":"665:20:31"}]},"documentation":{"id":5587,"nodeType":"StructuredDocumentation","src":"523:60:31","text":" @dev Returns the smallest of two numbers."},"id":5604,"implemented":true,"kind":"function","modifiers":[],"name":"min","nameLocation":"597:3:31","nodeType":"FunctionDefinition","parameters":{"id":5592,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5589,"mutability":"mutable","name":"a","nameLocation":"609:1:31","nodeType":"VariableDeclaration","scope":5604,"src":"601:9:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5588,"name":"uint256","nodeType":"ElementaryTypeName","src":"601:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5591,"mutability":"mutable","name":"b","nameLocation":"620:1:31","nodeType":"VariableDeclaration","scope":5604,"src":"612:9:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5590,"name":"uint256","nodeType":"ElementaryTypeName","src":"612:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"600:22:31"},"returnParameters":{"id":5595,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5594,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5604,"src":"646:7:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5593,"name":"uint256","nodeType":"ElementaryTypeName","src":"646:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"645:9:31"},"scope":6427,"src":"588:104:31","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5626,"nodeType":"Block","src":"876:82:31","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5624,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5616,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5614,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5607,"src":"931:1:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":5615,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5609,"src":"935:1:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"931:5:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5617,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"930:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5623,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5620,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5618,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5607,"src":"941:1:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":5619,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5609,"src":"945:1:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"941:5:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5621,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"940:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"32","id":5622,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"950:1:31","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"940:11:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"930:21:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5613,"id":5625,"nodeType":"Return","src":"923:28:31"}]},"documentation":{"id":5605,"nodeType":"StructuredDocumentation","src":"698:102:31","text":" @dev Returns the average of two numbers. The result is rounded towards\n zero."},"id":5627,"implemented":true,"kind":"function","modifiers":[],"name":"average","nameLocation":"814:7:31","nodeType":"FunctionDefinition","parameters":{"id":5610,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5607,"mutability":"mutable","name":"a","nameLocation":"830:1:31","nodeType":"VariableDeclaration","scope":5627,"src":"822:9:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5606,"name":"uint256","nodeType":"ElementaryTypeName","src":"822:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5609,"mutability":"mutable","name":"b","nameLocation":"841:1:31","nodeType":"VariableDeclaration","scope":5627,"src":"833:9:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5608,"name":"uint256","nodeType":"ElementaryTypeName","src":"833:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"821:22:31"},"returnParameters":{"id":5613,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5612,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5627,"src":"867:7:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5611,"name":"uint256","nodeType":"ElementaryTypeName","src":"867:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"866:9:31"},"scope":6427,"src":"805:153:31","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5651,"nodeType":"Block","src":"1228:123:31","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5639,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5637,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5630,"src":"1316:1:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":5638,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1321:1:31","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1316:6:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5648,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5646,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5643,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5641,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5630,"src":"1330:1:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":5642,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1334:1:31","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1330:5:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5644,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1329:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":5645,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5632,"src":"1339:1:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1329:11:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":5647,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1343:1:31","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1329:15:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5649,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"1316:28:31","trueExpression":{"hexValue":"30","id":5640,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1325:1:31","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5636,"id":5650,"nodeType":"Return","src":"1309:35:31"}]},"documentation":{"id":5628,"nodeType":"StructuredDocumentation","src":"964:188:31","text":" @dev Returns the ceiling of the division of two numbers.\n This differs from standard division with `/` in that it rounds up instead\n of rounding down."},"id":5652,"implemented":true,"kind":"function","modifiers":[],"name":"ceilDiv","nameLocation":"1166:7:31","nodeType":"FunctionDefinition","parameters":{"id":5633,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5630,"mutability":"mutable","name":"a","nameLocation":"1182:1:31","nodeType":"VariableDeclaration","scope":5652,"src":"1174:9:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5629,"name":"uint256","nodeType":"ElementaryTypeName","src":"1174:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5632,"mutability":"mutable","name":"b","nameLocation":"1193:1:31","nodeType":"VariableDeclaration","scope":5652,"src":"1185:9:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5631,"name":"uint256","nodeType":"ElementaryTypeName","src":"1185:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1173:22:31"},"returnParameters":{"id":5636,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5635,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5652,"src":"1219:7:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5634,"name":"uint256","nodeType":"ElementaryTypeName","src":"1219:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1218:9:31"},"scope":6427,"src":"1157:194:31","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5774,"nodeType":"Block","src":"1795:4115:31","statements":[{"id":5773,"nodeType":"UncheckedBlock","src":"1805:4099:31","statements":[{"assignments":[5665],"declarations":[{"constant":false,"id":5665,"mutability":"mutable","name":"prod0","nameLocation":"2134:5:31","nodeType":"VariableDeclaration","scope":5773,"src":"2126:13:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5664,"name":"uint256","nodeType":"ElementaryTypeName","src":"2126:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5666,"nodeType":"VariableDeclarationStatement","src":"2126:13:31"},{"assignments":[5668],"declarations":[{"constant":false,"id":5668,"mutability":"mutable","name":"prod1","nameLocation":"2206:5:31","nodeType":"VariableDeclaration","scope":5773,"src":"2198:13:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5667,"name":"uint256","nodeType":"ElementaryTypeName","src":"2198:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5669,"nodeType":"VariableDeclarationStatement","src":"2198:13:31"},{"AST":{"nodeType":"YulBlock","src":"2278:157:31","statements":[{"nodeType":"YulVariableDeclaration","src":"2296:30:31","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"2313:1:31"},{"name":"y","nodeType":"YulIdentifier","src":"2316:1:31"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2323:1:31","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"2319:3:31"},"nodeType":"YulFunctionCall","src":"2319:6:31"}],"functionName":{"name":"mulmod","nodeType":"YulIdentifier","src":"2306:6:31"},"nodeType":"YulFunctionCall","src":"2306:20:31"},"variables":[{"name":"mm","nodeType":"YulTypedName","src":"2300:2:31","type":""}]},{"nodeType":"YulAssignment","src":"2343:18:31","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"2356:1:31"},{"name":"y","nodeType":"YulIdentifier","src":"2359:1:31"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"2352:3:31"},"nodeType":"YulFunctionCall","src":"2352:9:31"},"variableNames":[{"name":"prod0","nodeType":"YulIdentifier","src":"2343:5:31"}]},{"nodeType":"YulAssignment","src":"2378:43:31","value":{"arguments":[{"arguments":[{"name":"mm","nodeType":"YulIdentifier","src":"2395:2:31"},{"name":"prod0","nodeType":"YulIdentifier","src":"2399:5:31"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2391:3:31"},"nodeType":"YulFunctionCall","src":"2391:14:31"},{"arguments":[{"name":"mm","nodeType":"YulIdentifier","src":"2410:2:31"},{"name":"prod0","nodeType":"YulIdentifier","src":"2414:5:31"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"2407:2:31"},"nodeType":"YulFunctionCall","src":"2407:13:31"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2387:3:31"},"nodeType":"YulFunctionCall","src":"2387:34:31"},"variableNames":[{"name":"prod1","nodeType":"YulIdentifier","src":"2378:5:31"}]}]},"evmVersion":"london","externalReferences":[{"declaration":5665,"isOffset":false,"isSlot":false,"src":"2343:5:31","valueSize":1},{"declaration":5665,"isOffset":false,"isSlot":false,"src":"2399:5:31","valueSize":1},{"declaration":5665,"isOffset":false,"isSlot":false,"src":"2414:5:31","valueSize":1},{"declaration":5668,"isOffset":false,"isSlot":false,"src":"2378:5:31","valueSize":1},{"declaration":5655,"isOffset":false,"isSlot":false,"src":"2313:1:31","valueSize":1},{"declaration":5655,"isOffset":false,"isSlot":false,"src":"2356:1:31","valueSize":1},{"declaration":5657,"isOffset":false,"isSlot":false,"src":"2316:1:31","valueSize":1},{"declaration":5657,"isOffset":false,"isSlot":false,"src":"2359:1:31","valueSize":1}],"id":5670,"nodeType":"InlineAssembly","src":"2269:166:31"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5673,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5671,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5668,"src":"2516:5:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":5672,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2525:1:31","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2516:10:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5679,"nodeType":"IfStatement","src":"2512:368:31","trueBody":{"id":5678,"nodeType":"Block","src":"2528:352:31","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5676,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5674,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5665,"src":"2846:5:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":5675,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5659,"src":"2854:11:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2846:19:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5663,"id":5677,"nodeType":"Return","src":"2839:26:31"}]}},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5683,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5681,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5659,"src":"2990:11:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":5682,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5668,"src":"3004:5:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2990:19:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4d6174683a206d756c446976206f766572666c6f77","id":5684,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3011:23:31","typeDescriptions":{"typeIdentifier":"t_stringliteral_d87093691d63b122ac2c14d1b11554b287e2431cf2b03550b3be7cffb0f86851","typeString":"literal_string \"Math: mulDiv overflow\""},"value":"Math: mulDiv overflow"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_d87093691d63b122ac2c14d1b11554b287e2431cf2b03550b3be7cffb0f86851","typeString":"literal_string \"Math: mulDiv overflow\""}],"id":5680,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2982:7:31","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5685,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2982:53:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5686,"nodeType":"ExpressionStatement","src":"2982:53:31"},{"assignments":[5688],"declarations":[{"constant":false,"id":5688,"mutability":"mutable","name":"remainder","nameLocation":"3299:9:31","nodeType":"VariableDeclaration","scope":5773,"src":"3291:17:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5687,"name":"uint256","nodeType":"ElementaryTypeName","src":"3291:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5689,"nodeType":"VariableDeclarationStatement","src":"3291:17:31"},{"AST":{"nodeType":"YulBlock","src":"3331:291:31","statements":[{"nodeType":"YulAssignment","src":"3400:38:31","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"3420:1:31"},{"name":"y","nodeType":"YulIdentifier","src":"3423:1:31"},{"name":"denominator","nodeType":"YulIdentifier","src":"3426:11:31"}],"functionName":{"name":"mulmod","nodeType":"YulIdentifier","src":"3413:6:31"},"nodeType":"YulFunctionCall","src":"3413:25:31"},"variableNames":[{"name":"remainder","nodeType":"YulIdentifier","src":"3400:9:31"}]},{"nodeType":"YulAssignment","src":"3520:41:31","value":{"arguments":[{"name":"prod1","nodeType":"YulIdentifier","src":"3533:5:31"},{"arguments":[{"name":"remainder","nodeType":"YulIdentifier","src":"3543:9:31"},{"name":"prod0","nodeType":"YulIdentifier","src":"3554:5:31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3540:2:31"},"nodeType":"YulFunctionCall","src":"3540:20:31"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3529:3:31"},"nodeType":"YulFunctionCall","src":"3529:32:31"},"variableNames":[{"name":"prod1","nodeType":"YulIdentifier","src":"3520:5:31"}]},{"nodeType":"YulAssignment","src":"3578:30:31","value":{"arguments":[{"name":"prod0","nodeType":"YulIdentifier","src":"3591:5:31"},{"name":"remainder","nodeType":"YulIdentifier","src":"3598:9:31"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3587:3:31"},"nodeType":"YulFunctionCall","src":"3587:21:31"},"variableNames":[{"name":"prod0","nodeType":"YulIdentifier","src":"3578:5:31"}]}]},"evmVersion":"london","externalReferences":[{"declaration":5659,"isOffset":false,"isSlot":false,"src":"3426:11:31","valueSize":1},{"declaration":5665,"isOffset":false,"isSlot":false,"src":"3554:5:31","valueSize":1},{"declaration":5665,"isOffset":false,"isSlot":false,"src":"3578:5:31","valueSize":1},{"declaration":5665,"isOffset":false,"isSlot":false,"src":"3591:5:31","valueSize":1},{"declaration":5668,"isOffset":false,"isSlot":false,"src":"3520:5:31","valueSize":1},{"declaration":5668,"isOffset":false,"isSlot":false,"src":"3533:5:31","valueSize":1},{"declaration":5688,"isOffset":false,"isSlot":false,"src":"3400:9:31","valueSize":1},{"declaration":5688,"isOffset":false,"isSlot":false,"src":"3543:9:31","valueSize":1},{"declaration":5688,"isOffset":false,"isSlot":false,"src":"3598:9:31","valueSize":1},{"declaration":5655,"isOffset":false,"isSlot":false,"src":"3420:1:31","valueSize":1},{"declaration":5657,"isOffset":false,"isSlot":false,"src":"3423:1:31","valueSize":1}],"id":5690,"nodeType":"InlineAssembly","src":"3322:300:31"},{"assignments":[5692],"declarations":[{"constant":false,"id":5692,"mutability":"mutable","name":"twos","nameLocation":"3937:4:31","nodeType":"VariableDeclaration","scope":5773,"src":"3929:12:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5691,"name":"uint256","nodeType":"ElementaryTypeName","src":"3929:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5700,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5699,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5693,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5659,"src":"3944:11:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5697,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5695,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"~","prefix":true,"src":"3959:12:31","subExpression":{"id":5694,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5659,"src":"3960:11:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":5696,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3974:1:31","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3959:16:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5698,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3958:18:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3944:32:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3929:47:31"},{"AST":{"nodeType":"YulBlock","src":"3999:362:31","statements":[{"nodeType":"YulAssignment","src":"4064:37:31","value":{"arguments":[{"name":"denominator","nodeType":"YulIdentifier","src":"4083:11:31"},{"name":"twos","nodeType":"YulIdentifier","src":"4096:4:31"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"4079:3:31"},"nodeType":"YulFunctionCall","src":"4079:22:31"},"variableNames":[{"name":"denominator","nodeType":"YulIdentifier","src":"4064:11:31"}]},{"nodeType":"YulAssignment","src":"4168:25:31","value":{"arguments":[{"name":"prod0","nodeType":"YulIdentifier","src":"4181:5:31"},{"name":"twos","nodeType":"YulIdentifier","src":"4188:4:31"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"4177:3:31"},"nodeType":"YulFunctionCall","src":"4177:16:31"},"variableNames":[{"name":"prod0","nodeType":"YulIdentifier","src":"4168:5:31"}]},{"nodeType":"YulAssignment","src":"4308:39:31","value":{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4328:1:31","type":"","value":"0"},{"name":"twos","nodeType":"YulIdentifier","src":"4331:4:31"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4324:3:31"},"nodeType":"YulFunctionCall","src":"4324:12:31"},{"name":"twos","nodeType":"YulIdentifier","src":"4338:4:31"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"4320:3:31"},"nodeType":"YulFunctionCall","src":"4320:23:31"},{"kind":"number","nodeType":"YulLiteral","src":"4345:1:31","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4316:3:31"},"nodeType":"YulFunctionCall","src":"4316:31:31"},"variableNames":[{"name":"twos","nodeType":"YulIdentifier","src":"4308:4:31"}]}]},"evmVersion":"london","externalReferences":[{"declaration":5659,"isOffset":false,"isSlot":false,"src":"4064:11:31","valueSize":1},{"declaration":5659,"isOffset":false,"isSlot":false,"src":"4083:11:31","valueSize":1},{"declaration":5665,"isOffset":false,"isSlot":false,"src":"4168:5:31","valueSize":1},{"declaration":5665,"isOffset":false,"isSlot":false,"src":"4181:5:31","valueSize":1},{"declaration":5692,"isOffset":false,"isSlot":false,"src":"4096:4:31","valueSize":1},{"declaration":5692,"isOffset":false,"isSlot":false,"src":"4188:4:31","valueSize":1},{"declaration":5692,"isOffset":false,"isSlot":false,"src":"4308:4:31","valueSize":1},{"declaration":5692,"isOffset":false,"isSlot":false,"src":"4331:4:31","valueSize":1},{"declaration":5692,"isOffset":false,"isSlot":false,"src":"4338:4:31","valueSize":1}],"id":5701,"nodeType":"InlineAssembly","src":"3990:371:31"},{"expression":{"id":5706,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5702,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5665,"src":"4427:5:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5705,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5703,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5668,"src":"4436:5:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":5704,"name":"twos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5692,"src":"4444:4:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4436:12:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4427:21:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5707,"nodeType":"ExpressionStatement","src":"4427:21:31"},{"assignments":[5709],"declarations":[{"constant":false,"id":5709,"mutability":"mutable","name":"inverse","nameLocation":"4774:7:31","nodeType":"VariableDeclaration","scope":5773,"src":"4766:15:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5708,"name":"uint256","nodeType":"ElementaryTypeName","src":"4766:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5716,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5715,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5712,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"33","id":5710,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4785:1:31","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":5711,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5659,"src":"4789:11:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4785:15:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5713,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4784:17:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"hexValue":"32","id":5714,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4804:1:31","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"4784:21:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4766:39:31"},{"expression":{"id":5723,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5717,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5709,"src":"5022:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5722,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":5718,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5033:1:31","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5721,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5719,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5659,"src":"5037:11:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":5720,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5709,"src":"5051:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5037:21:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5033:25:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5022:36:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5724,"nodeType":"ExpressionStatement","src":"5022:36:31"},{"expression":{"id":5731,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5725,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5709,"src":"5091:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5730,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":5726,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5102:1:31","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5729,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5727,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5659,"src":"5106:11:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":5728,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5709,"src":"5120:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5106:21:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5102:25:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5091:36:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5732,"nodeType":"ExpressionStatement","src":"5091:36:31"},{"expression":{"id":5739,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5733,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5709,"src":"5161:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5738,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":5734,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5172:1:31","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5737,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5735,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5659,"src":"5176:11:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":5736,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5709,"src":"5190:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5176:21:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5172:25:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5161:36:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5740,"nodeType":"ExpressionStatement","src":"5161:36:31"},{"expression":{"id":5747,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5741,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5709,"src":"5231:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5746,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":5742,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5242:1:31","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5745,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5743,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5659,"src":"5246:11:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":5744,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5709,"src":"5260:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5246:21:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5242:25:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5231:36:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5748,"nodeType":"ExpressionStatement","src":"5231:36:31"},{"expression":{"id":5755,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5749,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5709,"src":"5301:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5754,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":5750,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5312:1:31","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5753,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5751,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5659,"src":"5316:11:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":5752,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5709,"src":"5330:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5316:21:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5312:25:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5301:36:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5756,"nodeType":"ExpressionStatement","src":"5301:36:31"},{"expression":{"id":5763,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5757,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5709,"src":"5372:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5762,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":5758,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5383:1:31","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5761,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5759,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5659,"src":"5387:11:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":5760,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5709,"src":"5401:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5387:21:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5383:25:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5372:36:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5764,"nodeType":"ExpressionStatement","src":"5372:36:31"},{"expression":{"id":5769,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5765,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5662,"src":"5842:6:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5768,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5766,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5665,"src":"5851:5:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":5767,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5709,"src":"5859:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5851:15:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5842:24:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5770,"nodeType":"ExpressionStatement","src":"5842:24:31"},{"expression":{"id":5771,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5662,"src":"5887:6:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5663,"id":5772,"nodeType":"Return","src":"5880:13:31"}]}]},"documentation":{"id":5653,"nodeType":"StructuredDocumentation","src":"1357:305:31","text":" @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\n @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\n with further edits by Uniswap Labs also under MIT license."},"id":5775,"implemented":true,"kind":"function","modifiers":[],"name":"mulDiv","nameLocation":"1676:6:31","nodeType":"FunctionDefinition","parameters":{"id":5660,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5655,"mutability":"mutable","name":"x","nameLocation":"1700:1:31","nodeType":"VariableDeclaration","scope":5775,"src":"1692:9:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5654,"name":"uint256","nodeType":"ElementaryTypeName","src":"1692:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5657,"mutability":"mutable","name":"y","nameLocation":"1719:1:31","nodeType":"VariableDeclaration","scope":5775,"src":"1711:9:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5656,"name":"uint256","nodeType":"ElementaryTypeName","src":"1711:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5659,"mutability":"mutable","name":"denominator","nameLocation":"1738:11:31","nodeType":"VariableDeclaration","scope":5775,"src":"1730:19:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5658,"name":"uint256","nodeType":"ElementaryTypeName","src":"1730:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1682:73:31"},"returnParameters":{"id":5663,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5662,"mutability":"mutable","name":"result","nameLocation":"1787:6:31","nodeType":"VariableDeclaration","scope":5775,"src":"1779:14:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5661,"name":"uint256","nodeType":"ElementaryTypeName","src":"1779:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1778:16:31"},"scope":6427,"src":"1667:4243:31","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5818,"nodeType":"Block","src":"6190:189:31","statements":[{"assignments":[5791],"declarations":[{"constant":false,"id":5791,"mutability":"mutable","name":"result","nameLocation":"6208:6:31","nodeType":"VariableDeclaration","scope":5818,"src":"6200:14:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5790,"name":"uint256","nodeType":"ElementaryTypeName","src":"6200:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5797,"initialValue":{"arguments":[{"id":5793,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5778,"src":"6224:1:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5794,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5780,"src":"6227:1:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5795,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5782,"src":"6230:11:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5792,"name":"mulDiv","nodeType":"Identifier","overloadedDeclarations":[5775,5819],"referencedDeclaration":5775,"src":"6217:6:31","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":5796,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6217:25:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6200:42:31"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5809,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_Rounding_$5568","typeString":"enum Math.Rounding"},"id":5801,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5798,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5785,"src":"6256:8:31","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$5568","typeString":"enum Math.Rounding"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":5799,"name":"Rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5568,"src":"6268:8:31","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Rounding_$5568_$","typeString":"type(enum Math.Rounding)"}},"id":5800,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6277:2:31","memberName":"Up","nodeType":"MemberAccess","referencedDeclaration":5566,"src":"6268:11:31","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$5568","typeString":"enum Math.Rounding"}},"src":"6256:23:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5808,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":5803,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5778,"src":"6290:1:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5804,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5780,"src":"6293:1:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5805,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5782,"src":"6296:11:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5802,"name":"mulmod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-16,"src":"6283:6:31","typeDescriptions":{"typeIdentifier":"t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":5806,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6283:25:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":5807,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6311:1:31","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6283:29:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6256:56:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5815,"nodeType":"IfStatement","src":"6252:98:31","trueBody":{"id":5814,"nodeType":"Block","src":"6314:36:31","statements":[{"expression":{"id":5812,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5810,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5791,"src":"6328:6:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":5811,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6338:1:31","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"6328:11:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5813,"nodeType":"ExpressionStatement","src":"6328:11:31"}]}},{"expression":{"id":5816,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5791,"src":"6366:6:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5789,"id":5817,"nodeType":"Return","src":"6359:13:31"}]},"documentation":{"id":5776,"nodeType":"StructuredDocumentation","src":"5916:121:31","text":" @notice Calculates x * y / denominator with full precision, following the selected rounding direction."},"id":5819,"implemented":true,"kind":"function","modifiers":[],"name":"mulDiv","nameLocation":"6051:6:31","nodeType":"FunctionDefinition","parameters":{"id":5786,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5778,"mutability":"mutable","name":"x","nameLocation":"6075:1:31","nodeType":"VariableDeclaration","scope":5819,"src":"6067:9:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5777,"name":"uint256","nodeType":"ElementaryTypeName","src":"6067:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5780,"mutability":"mutable","name":"y","nameLocation":"6094:1:31","nodeType":"VariableDeclaration","scope":5819,"src":"6086:9:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5779,"name":"uint256","nodeType":"ElementaryTypeName","src":"6086:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5782,"mutability":"mutable","name":"denominator","nameLocation":"6113:11:31","nodeType":"VariableDeclaration","scope":5819,"src":"6105:19:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5781,"name":"uint256","nodeType":"ElementaryTypeName","src":"6105:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5785,"mutability":"mutable","name":"rounding","nameLocation":"6143:8:31","nodeType":"VariableDeclaration","scope":5819,"src":"6134:17:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$5568","typeString":"enum Math.Rounding"},"typeName":{"id":5784,"nodeType":"UserDefinedTypeName","pathNode":{"id":5783,"name":"Rounding","nameLocations":["6134:8:31"],"nodeType":"IdentifierPath","referencedDeclaration":5568,"src":"6134:8:31"},"referencedDeclaration":5568,"src":"6134:8:31","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$5568","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"6057:100:31"},"returnParameters":{"id":5789,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5788,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5819,"src":"6181:7:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5787,"name":"uint256","nodeType":"ElementaryTypeName","src":"6181:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6180:9:31"},"scope":6427,"src":"6042:337:31","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5930,"nodeType":"Block","src":"6655:1585:31","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5829,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5827,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5822,"src":"6669:1:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":5828,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6674:1:31","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6669:6:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5833,"nodeType":"IfStatement","src":"6665:45:31","trueBody":{"id":5832,"nodeType":"Block","src":"6677:33:31","statements":[{"expression":{"hexValue":"30","id":5830,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6698:1:31","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":5826,"id":5831,"nodeType":"Return","src":"6691:8:31"}]}},{"assignments":[5835],"declarations":[{"constant":false,"id":5835,"mutability":"mutable","name":"result","nameLocation":"7397:6:31","nodeType":"VariableDeclaration","scope":5930,"src":"7389:14:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5834,"name":"uint256","nodeType":"ElementaryTypeName","src":"7389:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5844,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5843,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5836,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7406:1:31","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5841,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":5838,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5822,"src":"7417:1:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5837,"name":"log2","nodeType":"Identifier","overloadedDeclarations":[6099,6135],"referencedDeclaration":6099,"src":"7412:4:31","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":5839,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7412:7:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":5840,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7423:1:31","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7412:12:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5842,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7411:14:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7406:19:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7389:36:31"},{"id":5929,"nodeType":"UncheckedBlock","src":"7826:408:31","statements":[{"expression":{"id":5854,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5845,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5835,"src":"7850:6:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5853,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5850,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5846,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5835,"src":"7860:6:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5849,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5847,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5822,"src":"7869:1:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":5848,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5835,"src":"7873:6:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7869:10:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7860:19:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5851,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7859:21:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":5852,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7884:1:31","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7859:26:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7850:35:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5855,"nodeType":"ExpressionStatement","src":"7850:35:31"},{"expression":{"id":5865,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5856,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5835,"src":"7899:6:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5864,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5861,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5857,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5835,"src":"7909:6:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5860,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5858,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5822,"src":"7918:1:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":5859,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5835,"src":"7922:6:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7918:10:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7909:19:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5862,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7908:21:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":5863,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7933:1:31","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7908:26:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7899:35:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5866,"nodeType":"ExpressionStatement","src":"7899:35:31"},{"expression":{"id":5876,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5867,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5835,"src":"7948:6:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5875,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5872,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5868,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5835,"src":"7958:6:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5871,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5869,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5822,"src":"7967:1:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":5870,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5835,"src":"7971:6:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7967:10:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7958:19:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5873,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7957:21:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":5874,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7982:1:31","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7957:26:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7948:35:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5877,"nodeType":"ExpressionStatement","src":"7948:35:31"},{"expression":{"id":5887,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5878,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5835,"src":"7997:6:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5886,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5883,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5879,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5835,"src":"8007:6:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5882,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5880,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5822,"src":"8016:1:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":5881,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5835,"src":"8020:6:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8016:10:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8007:19:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5884,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8006:21:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":5885,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8031:1:31","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"8006:26:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7997:35:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5888,"nodeType":"ExpressionStatement","src":"7997:35:31"},{"expression":{"id":5898,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5889,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5835,"src":"8046:6:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5897,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5894,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5890,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5835,"src":"8056:6:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5893,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5891,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5822,"src":"8065:1:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":5892,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5835,"src":"8069:6:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8065:10:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8056:19:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5895,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8055:21:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":5896,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8080:1:31","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"8055:26:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8046:35:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5899,"nodeType":"ExpressionStatement","src":"8046:35:31"},{"expression":{"id":5909,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5900,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5835,"src":"8095:6:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5908,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5905,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5901,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5835,"src":"8105:6:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5904,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5902,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5822,"src":"8114:1:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":5903,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5835,"src":"8118:6:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8114:10:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8105:19:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5906,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8104:21:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":5907,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8129:1:31","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"8104:26:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8095:35:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5910,"nodeType":"ExpressionStatement","src":"8095:35:31"},{"expression":{"id":5920,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5911,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5835,"src":"8144:6:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5919,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5916,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5912,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5835,"src":"8154:6:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5915,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5913,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5822,"src":"8163:1:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":5914,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5835,"src":"8167:6:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8163:10:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8154:19:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5917,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8153:21:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":5918,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8178:1:31","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"8153:26:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8144:35:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5921,"nodeType":"ExpressionStatement","src":"8144:35:31"},{"expression":{"arguments":[{"id":5923,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5835,"src":"8204:6:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5926,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5924,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5822,"src":"8212:1:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":5925,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5835,"src":"8216:6:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8212:10:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5922,"name":"min","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5604,"src":"8200:3:31","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":5927,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8200:23:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5826,"id":5928,"nodeType":"Return","src":"8193:30:31"}]}]},"documentation":{"id":5820,"nodeType":"StructuredDocumentation","src":"6385:208:31","text":" @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded down.\n Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11)."},"id":5931,"implemented":true,"kind":"function","modifiers":[],"name":"sqrt","nameLocation":"6607:4:31","nodeType":"FunctionDefinition","parameters":{"id":5823,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5822,"mutability":"mutable","name":"a","nameLocation":"6620:1:31","nodeType":"VariableDeclaration","scope":5931,"src":"6612:9:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5821,"name":"uint256","nodeType":"ElementaryTypeName","src":"6612:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6611:11:31"},"returnParameters":{"id":5826,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5825,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5931,"src":"6646:7:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5824,"name":"uint256","nodeType":"ElementaryTypeName","src":"6646:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6645:9:31"},"scope":6427,"src":"6598:1642:31","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5966,"nodeType":"Block","src":"8438:193:31","statements":[{"id":5965,"nodeType":"UncheckedBlock","src":"8448:177:31","statements":[{"assignments":[5943],"declarations":[{"constant":false,"id":5943,"mutability":"mutable","name":"result","nameLocation":"8480:6:31","nodeType":"VariableDeclaration","scope":5965,"src":"8472:14:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5942,"name":"uint256","nodeType":"ElementaryTypeName","src":"8472:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5947,"initialValue":{"arguments":[{"id":5945,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5934,"src":"8494:1:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5944,"name":"sqrt","nodeType":"Identifier","overloadedDeclarations":[5931,5967],"referencedDeclaration":5931,"src":"8489:4:31","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":5946,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8489:7:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8472:24:31"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5963,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5948,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5943,"src":"8533:6:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5958,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_Rounding_$5568","typeString":"enum Math.Rounding"},"id":5952,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5949,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5937,"src":"8559:8:31","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$5568","typeString":"enum Math.Rounding"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":5950,"name":"Rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5568,"src":"8571:8:31","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Rounding_$5568_$","typeString":"type(enum Math.Rounding)"}},"id":5951,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8580:2:31","memberName":"Up","nodeType":"MemberAccess","referencedDeclaration":5566,"src":"8571:11:31","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$5568","typeString":"enum Math.Rounding"}},"src":"8559:23:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5957,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5955,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5953,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5943,"src":"8586:6:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":5954,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5943,"src":"8595:6:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8586:15:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":5956,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5934,"src":"8604:1:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8586:19:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"8559:46:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":5960,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8612:1:31","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":5961,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"8559:54:31","trueExpression":{"hexValue":"31","id":5959,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8608:1:31","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":5962,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8558:56:31","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"8533:81:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5941,"id":5964,"nodeType":"Return","src":"8510:104:31"}]}]},"documentation":{"id":5932,"nodeType":"StructuredDocumentation","src":"8246:89:31","text":" @notice Calculates sqrt(a), following the selected rounding direction."},"id":5967,"implemented":true,"kind":"function","modifiers":[],"name":"sqrt","nameLocation":"8349:4:31","nodeType":"FunctionDefinition","parameters":{"id":5938,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5934,"mutability":"mutable","name":"a","nameLocation":"8371:1:31","nodeType":"VariableDeclaration","scope":5967,"src":"8363:9:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5933,"name":"uint256","nodeType":"ElementaryTypeName","src":"8363:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5937,"mutability":"mutable","name":"rounding","nameLocation":"8391:8:31","nodeType":"VariableDeclaration","scope":5967,"src":"8382:17:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$5568","typeString":"enum Math.Rounding"},"typeName":{"id":5936,"nodeType":"UserDefinedTypeName","pathNode":{"id":5935,"name":"Rounding","nameLocations":["8382:8:31"],"nodeType":"IdentifierPath","referencedDeclaration":5568,"src":"8382:8:31"},"referencedDeclaration":5568,"src":"8382:8:31","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$5568","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"8353:52:31"},"returnParameters":{"id":5941,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5940,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5967,"src":"8429:7:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5939,"name":"uint256","nodeType":"ElementaryTypeName","src":"8429:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8428:9:31"},"scope":6427,"src":"8340:291:31","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6098,"nodeType":"Block","src":"8816:922:31","statements":[{"assignments":[5976],"declarations":[{"constant":false,"id":5976,"mutability":"mutable","name":"result","nameLocation":"8834:6:31","nodeType":"VariableDeclaration","scope":6098,"src":"8826:14:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5975,"name":"uint256","nodeType":"ElementaryTypeName","src":"8826:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5978,"initialValue":{"hexValue":"30","id":5977,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8843:1:31","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"8826:18:31"},{"id":6095,"nodeType":"UncheckedBlock","src":"8854:855:31","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5983,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5981,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5979,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5970,"src":"8882:5:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"313238","id":5980,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8891:3:31","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"8882:12:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":5982,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8897:1:31","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8882:16:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5993,"nodeType":"IfStatement","src":"8878:99:31","trueBody":{"id":5992,"nodeType":"Block","src":"8900:77:31","statements":[{"expression":{"id":5986,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5984,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5970,"src":"8918:5:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"313238","id":5985,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8928:3:31","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"8918:13:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5987,"nodeType":"ExpressionStatement","src":"8918:13:31"},{"expression":{"id":5990,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5988,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5976,"src":"8949:6:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"313238","id":5989,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8959:3:31","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"8949:13:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5991,"nodeType":"ExpressionStatement","src":"8949:13:31"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5998,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5996,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5994,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5970,"src":"8994:5:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3634","id":5995,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9003:2:31","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"8994:11:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":5997,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9008:1:31","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8994:15:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6008,"nodeType":"IfStatement","src":"8990:96:31","trueBody":{"id":6007,"nodeType":"Block","src":"9011:75:31","statements":[{"expression":{"id":6001,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5999,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5970,"src":"9029:5:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3634","id":6000,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9039:2:31","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"9029:12:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6002,"nodeType":"ExpressionStatement","src":"9029:12:31"},{"expression":{"id":6005,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6003,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5976,"src":"9059:6:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3634","id":6004,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9069:2:31","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"9059:12:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6006,"nodeType":"ExpressionStatement","src":"9059:12:31"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6013,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6011,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6009,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5970,"src":"9103:5:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3332","id":6010,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9112:2:31","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"9103:11:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":6012,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9117:1:31","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9103:15:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6023,"nodeType":"IfStatement","src":"9099:96:31","trueBody":{"id":6022,"nodeType":"Block","src":"9120:75:31","statements":[{"expression":{"id":6016,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6014,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5970,"src":"9138:5:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3332","id":6015,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9148:2:31","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"9138:12:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6017,"nodeType":"ExpressionStatement","src":"9138:12:31"},{"expression":{"id":6020,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6018,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5976,"src":"9168:6:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3332","id":6019,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9178:2:31","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"9168:12:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6021,"nodeType":"ExpressionStatement","src":"9168:12:31"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6028,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6026,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6024,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5970,"src":"9212:5:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3136","id":6025,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9221:2:31","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"9212:11:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":6027,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9226:1:31","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9212:15:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6038,"nodeType":"IfStatement","src":"9208:96:31","trueBody":{"id":6037,"nodeType":"Block","src":"9229:75:31","statements":[{"expression":{"id":6031,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6029,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5970,"src":"9247:5:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3136","id":6030,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9257:2:31","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"9247:12:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6032,"nodeType":"ExpressionStatement","src":"9247:12:31"},{"expression":{"id":6035,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6033,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5976,"src":"9277:6:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3136","id":6034,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9287:2:31","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"9277:12:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6036,"nodeType":"ExpressionStatement","src":"9277:12:31"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6043,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6041,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6039,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5970,"src":"9321:5:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"38","id":6040,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9330:1:31","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"9321:10:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":6042,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9334:1:31","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9321:14:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6053,"nodeType":"IfStatement","src":"9317:93:31","trueBody":{"id":6052,"nodeType":"Block","src":"9337:73:31","statements":[{"expression":{"id":6046,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6044,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5970,"src":"9355:5:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"38","id":6045,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9365:1:31","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"9355:11:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6047,"nodeType":"ExpressionStatement","src":"9355:11:31"},{"expression":{"id":6050,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6048,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5976,"src":"9384:6:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"38","id":6049,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9394:1:31","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"9384:11:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6051,"nodeType":"ExpressionStatement","src":"9384:11:31"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6058,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6056,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6054,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5970,"src":"9427:5:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"34","id":6055,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9436:1:31","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"9427:10:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":6057,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9440:1:31","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9427:14:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6068,"nodeType":"IfStatement","src":"9423:93:31","trueBody":{"id":6067,"nodeType":"Block","src":"9443:73:31","statements":[{"expression":{"id":6061,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6059,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5970,"src":"9461:5:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":6060,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9471:1:31","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"9461:11:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6062,"nodeType":"ExpressionStatement","src":"9461:11:31"},{"expression":{"id":6065,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6063,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5976,"src":"9490:6:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"34","id":6064,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9500:1:31","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"9490:11:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6066,"nodeType":"ExpressionStatement","src":"9490:11:31"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6073,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6071,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6069,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5970,"src":"9533:5:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"32","id":6070,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9542:1:31","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"9533:10:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":6072,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9546:1:31","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9533:14:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6083,"nodeType":"IfStatement","src":"9529:93:31","trueBody":{"id":6082,"nodeType":"Block","src":"9549:73:31","statements":[{"expression":{"id":6076,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6074,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5970,"src":"9567:5:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"32","id":6075,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9577:1:31","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"9567:11:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6077,"nodeType":"ExpressionStatement","src":"9567:11:31"},{"expression":{"id":6080,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6078,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5976,"src":"9596:6:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"32","id":6079,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9606:1:31","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"9596:11:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6081,"nodeType":"ExpressionStatement","src":"9596:11:31"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6088,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6086,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6084,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5970,"src":"9639:5:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":6085,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9648:1:31","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9639:10:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":6087,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9652:1:31","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9639:14:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6094,"nodeType":"IfStatement","src":"9635:64:31","trueBody":{"id":6093,"nodeType":"Block","src":"9655:44:31","statements":[{"expression":{"id":6091,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6089,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5976,"src":"9673:6:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":6090,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9683:1:31","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9673:11:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6092,"nodeType":"ExpressionStatement","src":"9673:11:31"}]}}]},{"expression":{"id":6096,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5976,"src":"9725:6:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5974,"id":6097,"nodeType":"Return","src":"9718:13:31"}]},"documentation":{"id":5968,"nodeType":"StructuredDocumentation","src":"8637:113:31","text":" @dev Return the log in base 2, rounded down, of a positive value.\n Returns 0 if given 0."},"id":6099,"implemented":true,"kind":"function","modifiers":[],"name":"log2","nameLocation":"8764:4:31","nodeType":"FunctionDefinition","parameters":{"id":5971,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5970,"mutability":"mutable","name":"value","nameLocation":"8777:5:31","nodeType":"VariableDeclaration","scope":6099,"src":"8769:13:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5969,"name":"uint256","nodeType":"ElementaryTypeName","src":"8769:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8768:15:31"},"returnParameters":{"id":5974,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5973,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6099,"src":"8807:7:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5972,"name":"uint256","nodeType":"ElementaryTypeName","src":"8807:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8806:9:31"},"scope":6427,"src":"8755:983:31","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6134,"nodeType":"Block","src":"9993:197:31","statements":[{"id":6133,"nodeType":"UncheckedBlock","src":"10003:181:31","statements":[{"assignments":[6111],"declarations":[{"constant":false,"id":6111,"mutability":"mutable","name":"result","nameLocation":"10035:6:31","nodeType":"VariableDeclaration","scope":6133,"src":"10027:14:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6110,"name":"uint256","nodeType":"ElementaryTypeName","src":"10027:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6115,"initialValue":{"arguments":[{"id":6113,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6102,"src":"10049:5:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6112,"name":"log2","nodeType":"Identifier","overloadedDeclarations":[6099,6135],"referencedDeclaration":6099,"src":"10044:4:31","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":6114,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10044:11:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10027:28:31"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6131,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6116,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6111,"src":"10092:6:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":6126,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_Rounding_$5568","typeString":"enum Math.Rounding"},"id":6120,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6117,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6105,"src":"10118:8:31","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$5568","typeString":"enum Math.Rounding"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":6118,"name":"Rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5568,"src":"10130:8:31","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Rounding_$5568_$","typeString":"type(enum Math.Rounding)"}},"id":6119,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10139:2:31","memberName":"Up","nodeType":"MemberAccess","referencedDeclaration":5566,"src":"10130:11:31","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$5568","typeString":"enum Math.Rounding"}},"src":"10118:23:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6125,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6123,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":6121,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10145:1:31","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"id":6122,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6111,"src":"10150:6:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10145:11:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":6124,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6102,"src":"10159:5:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10145:19:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"10118:46:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":6128,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10171:1:31","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":6129,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"10118:54:31","trueExpression":{"hexValue":"31","id":6127,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10167:1:31","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":6130,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"10117:56:31","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"10092:81:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6109,"id":6132,"nodeType":"Return","src":"10069:104:31"}]}]},"documentation":{"id":6100,"nodeType":"StructuredDocumentation","src":"9744:142:31","text":" @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":6135,"implemented":true,"kind":"function","modifiers":[],"name":"log2","nameLocation":"9900:4:31","nodeType":"FunctionDefinition","parameters":{"id":6106,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6102,"mutability":"mutable","name":"value","nameLocation":"9922:5:31","nodeType":"VariableDeclaration","scope":6135,"src":"9914:13:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6101,"name":"uint256","nodeType":"ElementaryTypeName","src":"9914:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6105,"mutability":"mutable","name":"rounding","nameLocation":"9946:8:31","nodeType":"VariableDeclaration","scope":6135,"src":"9937:17:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$5568","typeString":"enum Math.Rounding"},"typeName":{"id":6104,"nodeType":"UserDefinedTypeName","pathNode":{"id":6103,"name":"Rounding","nameLocations":["9937:8:31"],"nodeType":"IdentifierPath","referencedDeclaration":5568,"src":"9937:8:31"},"referencedDeclaration":5568,"src":"9937:8:31","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$5568","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"9904:56:31"},"returnParameters":{"id":6109,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6108,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6135,"src":"9984:7:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6107,"name":"uint256","nodeType":"ElementaryTypeName","src":"9984:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9983:9:31"},"scope":6427,"src":"9891:299:31","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6263,"nodeType":"Block","src":"10377:854:31","statements":[{"assignments":[6144],"declarations":[{"constant":false,"id":6144,"mutability":"mutable","name":"result","nameLocation":"10395:6:31","nodeType":"VariableDeclaration","scope":6263,"src":"10387:14:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6143,"name":"uint256","nodeType":"ElementaryTypeName","src":"10387:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6146,"initialValue":{"hexValue":"30","id":6145,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10404:1:31","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"10387:18:31"},{"id":6260,"nodeType":"UncheckedBlock","src":"10415:787:31","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6151,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6147,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6138,"src":"10443:5:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"},"id":6150,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":6148,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10452:2:31","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3634","id":6149,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10458:2:31","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"10452:8:31","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"}},"src":"10443:17:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6163,"nodeType":"IfStatement","src":"10439:103:31","trueBody":{"id":6162,"nodeType":"Block","src":"10462:80:31","statements":[{"expression":{"id":6156,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6152,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6138,"src":"10480:5:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"},"id":6155,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":6153,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10489:2:31","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3634","id":6154,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10495:2:31","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"10489:8:31","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"}},"src":"10480:17:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6157,"nodeType":"ExpressionStatement","src":"10480:17:31"},{"expression":{"id":6160,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6158,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6144,"src":"10515:6:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3634","id":6159,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10525:2:31","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"10515:12:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6161,"nodeType":"ExpressionStatement","src":"10515:12:31"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6168,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6164,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6138,"src":"10559:5:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"},"id":6167,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":6165,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10568:2:31","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3332","id":6166,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10574:2:31","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"10568:8:31","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"}},"src":"10559:17:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6180,"nodeType":"IfStatement","src":"10555:103:31","trueBody":{"id":6179,"nodeType":"Block","src":"10578:80:31","statements":[{"expression":{"id":6173,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6169,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6138,"src":"10596:5:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"},"id":6172,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":6170,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10605:2:31","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3332","id":6171,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10611:2:31","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"10605:8:31","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"}},"src":"10596:17:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6174,"nodeType":"ExpressionStatement","src":"10596:17:31"},{"expression":{"id":6177,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6175,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6144,"src":"10631:6:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3332","id":6176,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10641:2:31","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"10631:12:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6178,"nodeType":"ExpressionStatement","src":"10631:12:31"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6185,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6181,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6138,"src":"10675:5:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"},"id":6184,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":6182,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10684:2:31","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3136","id":6183,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10690:2:31","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"10684:8:31","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"}},"src":"10675:17:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6197,"nodeType":"IfStatement","src":"10671:103:31","trueBody":{"id":6196,"nodeType":"Block","src":"10694:80:31","statements":[{"expression":{"id":6190,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6186,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6138,"src":"10712:5:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"},"id":6189,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":6187,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10721:2:31","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3136","id":6188,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10727:2:31","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"10721:8:31","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"}},"src":"10712:17:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6191,"nodeType":"ExpressionStatement","src":"10712:17:31"},{"expression":{"id":6194,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6192,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6144,"src":"10747:6:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3136","id":6193,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10757:2:31","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"10747:12:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6195,"nodeType":"ExpressionStatement","src":"10747:12:31"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6202,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6198,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6138,"src":"10791:5:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":6201,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":6199,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10800:2:31","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"38","id":6200,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10806:1:31","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"10800:7:31","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"10791:16:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6214,"nodeType":"IfStatement","src":"10787:100:31","trueBody":{"id":6213,"nodeType":"Block","src":"10809:78:31","statements":[{"expression":{"id":6207,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6203,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6138,"src":"10827:5:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":6206,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":6204,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10836:2:31","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"38","id":6205,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10842:1:31","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"10836:7:31","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"10827:16:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6208,"nodeType":"ExpressionStatement","src":"10827:16:31"},{"expression":{"id":6211,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6209,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6144,"src":"10861:6:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"38","id":6210,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10871:1:31","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"10861:11:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6212,"nodeType":"ExpressionStatement","src":"10861:11:31"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6219,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6215,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6138,"src":"10904:5:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"id":6218,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":6216,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10913:2:31","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"34","id":6217,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10919:1:31","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"10913:7:31","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"}},"src":"10904:16:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6231,"nodeType":"IfStatement","src":"10900:100:31","trueBody":{"id":6230,"nodeType":"Block","src":"10922:78:31","statements":[{"expression":{"id":6224,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6220,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6138,"src":"10940:5:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"id":6223,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":6221,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10949:2:31","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"34","id":6222,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10955:1:31","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"10949:7:31","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"}},"src":"10940:16:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6225,"nodeType":"ExpressionStatement","src":"10940:16:31"},{"expression":{"id":6228,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6226,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6144,"src":"10974:6:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"34","id":6227,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10984:1:31","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"10974:11:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6229,"nodeType":"ExpressionStatement","src":"10974:11:31"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6236,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6232,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6138,"src":"11017:5:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"id":6235,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":6233,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11026:2:31","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"32","id":6234,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11032:1:31","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"11026:7:31","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"}},"src":"11017:16:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6248,"nodeType":"IfStatement","src":"11013:100:31","trueBody":{"id":6247,"nodeType":"Block","src":"11035:78:31","statements":[{"expression":{"id":6241,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6237,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6138,"src":"11053:5:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"id":6240,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":6238,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11062:2:31","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"32","id":6239,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11068:1:31","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"11062:7:31","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"}},"src":"11053:16:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6242,"nodeType":"ExpressionStatement","src":"11053:16:31"},{"expression":{"id":6245,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6243,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6144,"src":"11087:6:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"32","id":6244,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11097:1:31","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"11087:11:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6246,"nodeType":"ExpressionStatement","src":"11087:11:31"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6253,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6249,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6138,"src":"11130:5:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"id":6252,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":6250,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11139:2:31","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"31","id":6251,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11145:1:31","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"11139:7:31","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"}},"src":"11130:16:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6259,"nodeType":"IfStatement","src":"11126:66:31","trueBody":{"id":6258,"nodeType":"Block","src":"11148:44:31","statements":[{"expression":{"id":6256,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6254,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6144,"src":"11166:6:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":6255,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11176:1:31","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"11166:11:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6257,"nodeType":"ExpressionStatement","src":"11166:11:31"}]}}]},{"expression":{"id":6261,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6144,"src":"11218:6:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6142,"id":6262,"nodeType":"Return","src":"11211:13:31"}]},"documentation":{"id":6136,"nodeType":"StructuredDocumentation","src":"10196:114:31","text":" @dev Return the log in base 10, rounded down, of a positive value.\n Returns 0 if given 0."},"id":6264,"implemented":true,"kind":"function","modifiers":[],"name":"log10","nameLocation":"10324:5:31","nodeType":"FunctionDefinition","parameters":{"id":6139,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6138,"mutability":"mutable","name":"value","nameLocation":"10338:5:31","nodeType":"VariableDeclaration","scope":6264,"src":"10330:13:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6137,"name":"uint256","nodeType":"ElementaryTypeName","src":"10330:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10329:15:31"},"returnParameters":{"id":6142,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6141,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6264,"src":"10368:7:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6140,"name":"uint256","nodeType":"ElementaryTypeName","src":"10368:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10367:9:31"},"scope":6427,"src":"10315:916:31","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6299,"nodeType":"Block","src":"11488:199:31","statements":[{"id":6298,"nodeType":"UncheckedBlock","src":"11498:183:31","statements":[{"assignments":[6276],"declarations":[{"constant":false,"id":6276,"mutability":"mutable","name":"result","nameLocation":"11530:6:31","nodeType":"VariableDeclaration","scope":6298,"src":"11522:14:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6275,"name":"uint256","nodeType":"ElementaryTypeName","src":"11522:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6280,"initialValue":{"arguments":[{"id":6278,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6267,"src":"11545:5:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6277,"name":"log10","nodeType":"Identifier","overloadedDeclarations":[6264,6300],"referencedDeclaration":6264,"src":"11539:5:31","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":6279,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11539:12:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"11522:29:31"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6296,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6281,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6276,"src":"11588:6:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":6291,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_Rounding_$5568","typeString":"enum Math.Rounding"},"id":6285,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6282,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6270,"src":"11614:8:31","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$5568","typeString":"enum Math.Rounding"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":6283,"name":"Rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5568,"src":"11626:8:31","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Rounding_$5568_$","typeString":"type(enum Math.Rounding)"}},"id":6284,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11635:2:31","memberName":"Up","nodeType":"MemberAccess","referencedDeclaration":5566,"src":"11626:11:31","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$5568","typeString":"enum Math.Rounding"}},"src":"11614:23:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6290,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6288,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":6286,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11641:2:31","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"id":6287,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6276,"src":"11647:6:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11641:12:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":6289,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6267,"src":"11656:5:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11641:20:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"11614:47:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":6293,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11668:1:31","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":6294,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"11614:55:31","trueExpression":{"hexValue":"31","id":6292,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11664:1:31","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":6295,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11613:57:31","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"11588:82:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6274,"id":6297,"nodeType":"Return","src":"11565:105:31"}]}]},"documentation":{"id":6265,"nodeType":"StructuredDocumentation","src":"11237:143:31","text":" @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":6300,"implemented":true,"kind":"function","modifiers":[],"name":"log10","nameLocation":"11394:5:31","nodeType":"FunctionDefinition","parameters":{"id":6271,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6267,"mutability":"mutable","name":"value","nameLocation":"11417:5:31","nodeType":"VariableDeclaration","scope":6300,"src":"11409:13:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6266,"name":"uint256","nodeType":"ElementaryTypeName","src":"11409:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6270,"mutability":"mutable","name":"rounding","nameLocation":"11441:8:31","nodeType":"VariableDeclaration","scope":6300,"src":"11432:17:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$5568","typeString":"enum Math.Rounding"},"typeName":{"id":6269,"nodeType":"UserDefinedTypeName","pathNode":{"id":6268,"name":"Rounding","nameLocations":["11432:8:31"],"nodeType":"IdentifierPath","referencedDeclaration":5568,"src":"11432:8:31"},"referencedDeclaration":5568,"src":"11432:8:31","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$5568","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"11399:56:31"},"returnParameters":{"id":6274,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6273,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6300,"src":"11479:7:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6272,"name":"uint256","nodeType":"ElementaryTypeName","src":"11479:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11478:9:31"},"scope":6427,"src":"11385:302:31","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6386,"nodeType":"Block","src":"12001:600:31","statements":[{"assignments":[6309],"declarations":[{"constant":false,"id":6309,"mutability":"mutable","name":"result","nameLocation":"12019:6:31","nodeType":"VariableDeclaration","scope":6386,"src":"12011:14:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6308,"name":"uint256","nodeType":"ElementaryTypeName","src":"12011:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6311,"initialValue":{"hexValue":"30","id":6310,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12028:1:31","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"12011:18:31"},{"id":6383,"nodeType":"UncheckedBlock","src":"12039:533:31","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6316,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6314,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6312,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6303,"src":"12067:5:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"313238","id":6313,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12076:3:31","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"12067:12:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":6315,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12082:1:31","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"12067:16:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6326,"nodeType":"IfStatement","src":"12063:98:31","trueBody":{"id":6325,"nodeType":"Block","src":"12085:76:31","statements":[{"expression":{"id":6319,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6317,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6303,"src":"12103:5:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"313238","id":6318,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12113:3:31","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"12103:13:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6320,"nodeType":"ExpressionStatement","src":"12103:13:31"},{"expression":{"id":6323,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6321,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6309,"src":"12134:6:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3136","id":6322,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12144:2:31","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"12134:12:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6324,"nodeType":"ExpressionStatement","src":"12134:12:31"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6331,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6329,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6327,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6303,"src":"12178:5:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3634","id":6328,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12187:2:31","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"12178:11:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":6330,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12192:1:31","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"12178:15:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6341,"nodeType":"IfStatement","src":"12174:95:31","trueBody":{"id":6340,"nodeType":"Block","src":"12195:74:31","statements":[{"expression":{"id":6334,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6332,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6303,"src":"12213:5:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3634","id":6333,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12223:2:31","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"12213:12:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6335,"nodeType":"ExpressionStatement","src":"12213:12:31"},{"expression":{"id":6338,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6336,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6309,"src":"12243:6:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"38","id":6337,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12253:1:31","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"12243:11:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6339,"nodeType":"ExpressionStatement","src":"12243:11:31"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6346,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6344,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6342,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6303,"src":"12286:5:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3332","id":6343,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12295:2:31","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"12286:11:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":6345,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12300:1:31","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"12286:15:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6356,"nodeType":"IfStatement","src":"12282:95:31","trueBody":{"id":6355,"nodeType":"Block","src":"12303:74:31","statements":[{"expression":{"id":6349,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6347,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6303,"src":"12321:5:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3332","id":6348,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12331:2:31","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"12321:12:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6350,"nodeType":"ExpressionStatement","src":"12321:12:31"},{"expression":{"id":6353,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6351,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6309,"src":"12351:6:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"34","id":6352,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12361:1:31","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"12351:11:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6354,"nodeType":"ExpressionStatement","src":"12351:11:31"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6361,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6359,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6357,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6303,"src":"12394:5:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3136","id":6358,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12403:2:31","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"12394:11:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":6360,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12408:1:31","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"12394:15:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6371,"nodeType":"IfStatement","src":"12390:95:31","trueBody":{"id":6370,"nodeType":"Block","src":"12411:74:31","statements":[{"expression":{"id":6364,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6362,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6303,"src":"12429:5:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3136","id":6363,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12439:2:31","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"12429:12:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6365,"nodeType":"ExpressionStatement","src":"12429:12:31"},{"expression":{"id":6368,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6366,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6309,"src":"12459:6:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"32","id":6367,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12469:1:31","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"12459:11:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6369,"nodeType":"ExpressionStatement","src":"12459:11:31"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6376,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6374,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6372,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6303,"src":"12502:5:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"38","id":6373,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12511:1:31","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"12502:10:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":6375,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12515:1:31","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"12502:14:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6382,"nodeType":"IfStatement","src":"12498:64:31","trueBody":{"id":6381,"nodeType":"Block","src":"12518:44:31","statements":[{"expression":{"id":6379,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6377,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6309,"src":"12536:6:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":6378,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12546:1:31","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"12536:11:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6380,"nodeType":"ExpressionStatement","src":"12536:11:31"}]}}]},{"expression":{"id":6384,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6309,"src":"12588:6:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6307,"id":6385,"nodeType":"Return","src":"12581:13:31"}]},"documentation":{"id":6301,"nodeType":"StructuredDocumentation","src":"11693:240:31","text":" @dev Return the log in base 256, rounded down, of a positive value.\n Returns 0 if given 0.\n Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string."},"id":6387,"implemented":true,"kind":"function","modifiers":[],"name":"log256","nameLocation":"11947:6:31","nodeType":"FunctionDefinition","parameters":{"id":6304,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6303,"mutability":"mutable","name":"value","nameLocation":"11962:5:31","nodeType":"VariableDeclaration","scope":6387,"src":"11954:13:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6302,"name":"uint256","nodeType":"ElementaryTypeName","src":"11954:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11953:15:31"},"returnParameters":{"id":6307,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6306,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6387,"src":"11992:7:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6305,"name":"uint256","nodeType":"ElementaryTypeName","src":"11992:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11991:9:31"},"scope":6427,"src":"11938:663:31","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6425,"nodeType":"Block","src":"12860:206:31","statements":[{"id":6424,"nodeType":"UncheckedBlock","src":"12870:190:31","statements":[{"assignments":[6399],"declarations":[{"constant":false,"id":6399,"mutability":"mutable","name":"result","nameLocation":"12902:6:31","nodeType":"VariableDeclaration","scope":6424,"src":"12894:14:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6398,"name":"uint256","nodeType":"ElementaryTypeName","src":"12894:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6403,"initialValue":{"arguments":[{"id":6401,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6390,"src":"12918:5:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6400,"name":"log256","nodeType":"Identifier","overloadedDeclarations":[6387,6426],"referencedDeclaration":6387,"src":"12911:6:31","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":6402,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12911:13:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"12894:30:31"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6422,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6404,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6399,"src":"12961:6:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":6417,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_Rounding_$5568","typeString":"enum Math.Rounding"},"id":6408,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6405,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6393,"src":"12987:8:31","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$5568","typeString":"enum Math.Rounding"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":6406,"name":"Rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5568,"src":"12999:8:31","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Rounding_$5568_$","typeString":"type(enum Math.Rounding)"}},"id":6407,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"13008:2:31","memberName":"Up","nodeType":"MemberAccess","referencedDeclaration":5566,"src":"12999:11:31","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$5568","typeString":"enum Math.Rounding"}},"src":"12987:23:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6416,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6414,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":6409,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13014:1:31","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6412,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6410,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6399,"src":"13020:6:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"33","id":6411,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13030:1:31","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"src":"13020:11:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":6413,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"13019:13:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13014:18:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":6415,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6390,"src":"13035:5:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13014:26:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"12987:53:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":6419,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13047:1:31","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":6420,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"12987:61:31","trueExpression":{"hexValue":"31","id":6418,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13043:1:31","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":6421,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"12986:63:31","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"12961:88:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6397,"id":6423,"nodeType":"Return","src":"12938:111:31"}]}]},"documentation":{"id":6388,"nodeType":"StructuredDocumentation","src":"12607:144:31","text":" @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":6426,"implemented":true,"kind":"function","modifiers":[],"name":"log256","nameLocation":"12765:6:31","nodeType":"FunctionDefinition","parameters":{"id":6394,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6390,"mutability":"mutable","name":"value","nameLocation":"12789:5:31","nodeType":"VariableDeclaration","scope":6426,"src":"12781:13:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6389,"name":"uint256","nodeType":"ElementaryTypeName","src":"12781:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6393,"mutability":"mutable","name":"rounding","nameLocation":"12813:8:31","nodeType":"VariableDeclaration","scope":6426,"src":"12804:17:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$5568","typeString":"enum Math.Rounding"},"typeName":{"id":6392,"nodeType":"UserDefinedTypeName","pathNode":{"id":6391,"name":"Rounding","nameLocations":["12804:8:31"],"nodeType":"IdentifierPath","referencedDeclaration":5568,"src":"12804:8:31"},"referencedDeclaration":5568,"src":"12804:8:31","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$5568","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"12771:56:31"},"returnParameters":{"id":6397,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6396,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6426,"src":"12851:7:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6395,"name":"uint256","nodeType":"ElementaryTypeName","src":"12851:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12850:9:31"},"scope":6427,"src":"12756:310:31","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":6428,"src":"202:12866:31","usedErrors":[]}],"src":"103:12966:31"}},"contracts/smart-contract-wallet/utils/GasEstimatorSmartAccount.sol":{"id":32,"ast":{"absolutePath":"contracts/smart-contract-wallet/utils/GasEstimatorSmartAccount.sol","exportedSymbols":{"BaseSmartAccount":[2401],"BaseSmartAccountErrors":[4939],"DefaultCallbackHandler":[5420],"Enum":[4931],"FeeRefund":[2251],"GasEstimatorSmartAccount":[6482],"IAccount":[254],"IEntryPoint":[492],"Proxy":[2430],"SmartAccountFactory":[4356],"SmartAccountFactoryErrors":[5063],"Transaction":[2240],"UserOperation":[643],"UserOperationLib":[813],"ValidationData":[8],"_intersectTimeRange":[152],"_packValidationData":[189,227],"_parseValidationData":[67],"calldataKeccak":[237]},"id":6483,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":6429,"literals":["solidity","0.8",".17"],"nodeType":"PragmaDirective","src":"32:23:32"},{"absolutePath":"contracts/smart-contract-wallet/SmartAccountFactory.sol","file":"../SmartAccountFactory.sol","id":6430,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":6483,"sourceUnit":4357,"src":"57:36:32","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"GasEstimatorSmartAccount","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":6482,"linearizedBaseContracts":[6482],"name":"GasEstimatorSmartAccount","nameLocation":"228:24:32","nodeType":"ContractDefinition","nodes":[{"body":{"id":6480,"nodeType":"Block","src":"564:307:32","statements":[{"assignments":[6450],"declarations":[{"constant":false,"id":6450,"mutability":"mutable","name":"initialGas","nameLocation":"609:10:32","nodeType":"VariableDeclaration","scope":6480,"src":"601:18:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6449,"name":"uint256","nodeType":"ElementaryTypeName","src":"601:7:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6453,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":6451,"name":"gasleft","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-7,"src":"622:7:32","typeDescriptions":{"typeIdentifier":"t_function_gasleft_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":6452,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"622:9:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"601:30:32"},{"assignments":[6455],"declarations":[{"constant":false,"id":6455,"mutability":"mutable","name":"_wallet","nameLocation":"649:7:32","nodeType":"VariableDeclaration","scope":6480,"src":"641:15:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6454,"name":"address","nodeType":"ElementaryTypeName","src":"641:7:32","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":6463,"initialValue":{"arguments":[{"id":6460,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6436,"src":"730:6:32","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":6461,"name":"_index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6438,"src":"738:6:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":6457,"name":"_factory","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6434,"src":"679:8:32","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":6456,"name":"SmartAccountFactory","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4356,"src":"659:19:32","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SmartAccountFactory_$4356_$","typeString":"type(contract SmartAccountFactory)"}},"id":6458,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"659:29:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_SmartAccountFactory_$4356","typeString":"contract SmartAccountFactory"}},"id":6459,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"702:27:32","memberName":"deployCounterFactualAccount","nodeType":"MemberAccess","referencedDeclaration":4189,"src":"659:70:32","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_address_$","typeString":"function (address,uint256) external returns (address)"}},"id":6462,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"659:86:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"641:104:32"},{"expression":{"id":6471,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"components":[{"id":6464,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6443,"src":"756:7:32","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":6465,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6445,"src":"765:6:32","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"id":6466,"isConstant":false,"isInlineArray":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"TupleExpression","src":"755:17:32","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6469,"name":"_data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6440,"src":"794:5:32","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}],"expression":{"id":6467,"name":"_actualWallet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6432,"src":"775:13:32","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":6468,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"789:4:32","memberName":"call","nodeType":"MemberAccess","src":"775:18:32","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":6470,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"775:25:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"src":"755:45:32","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6472,"nodeType":"ExpressionStatement","src":"755:45:32"},{"expression":{"id":6478,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6473,"name":"gas","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6447,"src":"810:3:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6477,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6474,"name":"initialGas","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6450,"src":"816:10:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":6475,"name":"gasleft","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-7,"src":"829:7:32","typeDescriptions":{"typeIdentifier":"t_function_gasleft_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":6476,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"829:9:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"816:22:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"810:28:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6479,"nodeType":"ExpressionStatement","src":"810:28:32"}]},"functionSelector":"bb0aea3c","id":6481,"implemented":true,"kind":"function","modifiers":[],"name":"estimate","nameLocation":"268:8:32","nodeType":"FunctionDefinition","parameters":{"id":6441,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6432,"mutability":"mutable","name":"_actualWallet","nameLocation":"294:13:32","nodeType":"VariableDeclaration","scope":6481,"src":"286:21:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6431,"name":"address","nodeType":"ElementaryTypeName","src":"286:7:32","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6434,"mutability":"mutable","name":"_factory","nameLocation":"325:8:32","nodeType":"VariableDeclaration","scope":6481,"src":"317:16:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6433,"name":"address","nodeType":"ElementaryTypeName","src":"317:7:32","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6436,"mutability":"mutable","name":"_owner","nameLocation":"351:6:32","nodeType":"VariableDeclaration","scope":6481,"src":"343:14:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6435,"name":"address","nodeType":"ElementaryTypeName","src":"343:7:32","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6438,"mutability":"mutable","name":"_index","nameLocation":"375:6:32","nodeType":"VariableDeclaration","scope":6481,"src":"367:14:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6437,"name":"uint256","nodeType":"ElementaryTypeName","src":"367:7:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6440,"mutability":"mutable","name":"_data","nameLocation":"406:5:32","nodeType":"VariableDeclaration","scope":6481,"src":"391:20:32","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":6439,"name":"bytes","nodeType":"ElementaryTypeName","src":"391:5:32","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"276:221:32"},"returnParameters":{"id":6448,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6443,"mutability":"mutable","name":"success","nameLocation":"521:7:32","nodeType":"VariableDeclaration","scope":6481,"src":"516:12:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6442,"name":"bool","nodeType":"ElementaryTypeName","src":"516:4:32","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":6445,"mutability":"mutable","name":"result","nameLocation":"543:6:32","nodeType":"VariableDeclaration","scope":6481,"src":"530:19:32","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":6444,"name":"bytes","nodeType":"ElementaryTypeName","src":"530:5:32","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":6447,"mutability":"mutable","name":"gas","nameLocation":"559:3:32","nodeType":"VariableDeclaration","scope":6481,"src":"551:11:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6446,"name":"uint256","nodeType":"ElementaryTypeName","src":"551:7:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"515:48:32"},"scope":6482,"src":"259:612:32","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":6483,"src":"219:654:32","usedErrors":[]}],"src":"32:842:32"}}},"contracts":{"@account-abstraction/contracts/interfaces/IAccount.sol":{"IAccount":{"abi":[{"inputs":[{"components":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"nonce","type":"uint256"},{"internalType":"bytes","name":"initCode","type":"bytes"},{"internalType":"bytes","name":"callData","type":"bytes"},{"internalType":"uint256","name":"callGasLimit","type":"uint256"},{"internalType":"uint256","name":"verificationGasLimit","type":"uint256"},{"internalType":"uint256","name":"preVerificationGas","type":"uint256"},{"internalType":"uint256","name":"maxFeePerGas","type":"uint256"},{"internalType":"uint256","name":"maxPriorityFeePerGas","type":"uint256"},{"internalType":"bytes","name":"paymasterAndData","type":"bytes"},{"internalType":"bytes","name":"signature","type":"bytes"}],"internalType":"struct UserOperation","name":"userOp","type":"tuple"},{"internalType":"bytes32","name":"userOpHash","type":"bytes32"},{"internalType":"uint256","name":"missingAccountFunds","type":"uint256"}],"name":"validateUserOp","outputs":[{"internalType":"uint256","name":"validationData","type":"uint256"}],"stateMutability":"nonpayable","type":"function"}],"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"initCode\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"callData\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"callGasLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"verificationGasLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"preVerificationGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxFeePerGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxPriorityFeePerGas\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"paymasterAndData\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"internalType\":\"struct UserOperation\",\"name\":\"userOp\",\"type\":\"tuple\"},{\"internalType\":\"bytes32\",\"name\":\"userOpHash\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"missingAccountFunds\",\"type\":\"uint256\"}],\"name\":\"validateUserOp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"validationData\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"validateUserOp((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes),bytes32,uint256)\":{\"details\":\"Must validate caller is the entryPoint.      Must validate the signature and nonce\",\"params\":{\"missingAccountFunds\":\"missing funds on the account's deposit in the entrypoint.      This is the minimum amount to transfer to the sender(entryPoint) to be able to make the call.      The excess is left as a deposit in the entrypoint, for future calls.      can be withdrawn anytime using \\\"entryPoint.withdrawTo()\\\"      In case there is a paymaster in the request (or the current deposit is high enough), this value will be zero.\",\"userOp\":\"the operation that is about to be executed.\",\"userOpHash\":\"hash of the user's request data. can be used as the basis for signature.\"},\"returns\":{\"validationData\":\"packaged ValidationData structure. use `_packValidationData` and `_unpackValidationData` to encode and decode      <20-byte> sigAuthorizer - 0 for valid signature, 1 to mark signature failure,         otherwise, an address of an \\\"authorizer\\\" contract.      <6-byte> validUntil - last timestamp this operation is valid. 0 for \\\"indefinite\\\"      <6-byte> validAfter - first timestamp this operation is valid      If an account doesn't use time-range, it is enough to return SIG_VALIDATION_FAILED value (1) for signature failure.      Note that the validation code cannot use block.timestamp (or block.number) directly.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"validateUserOp((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes),bytes32,uint256)\":{\"notice\":\"Validate user's signature and nonce the entryPoint will make the call to the recipient only if this validation call returns successfully. signature failure should be reported by returning SIG_VALIDATION_FAILED (1). This allows making a \\\"simulation call\\\" without a valid signature Other failures (e.g. nonce mismatch, or invalid signature format) should still revert to signal failure.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@account-abstraction/contracts/interfaces/IAccount.sol\":\"IAccount\"},\"evmVersion\":\"london\",\"libraries\":{\":__CACHE_BREAKER__\":\"0x00000000d41867734bbee4c6863d9255b2b06ac1\"},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@account-abstraction/contracts/core/Helpers.sol\":{\"keccak256\":\"0x591c87519f7155d1909210276b77925ab2722a99b7b5d5649aecc36ebbdb045a\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://69643e83f68e6a13d5075c7565bfce326673b0bd98c432033c4603ea84835746\",\"dweb:/ipfs/QmSwSzjYyV7qudi5vvsmzHMG2Z4YJZxX51RRXXVCLaNcEU\"]},\"@account-abstraction/contracts/interfaces/IAccount.sol\":{\"keccak256\":\"0x556a0e5980de18e90b115553ed502408155ba35f58642823010d9288047bc418\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://a0f420134b79596db8737173c7b933ae0a33059e107b6327c43aa40d4744a9e4\",\"dweb:/ipfs/QmRo8s1AhXmEMV7uPYnbpYwU19e9Bk6jmYBJTiPx3Fo85W\"]},\"@account-abstraction/contracts/interfaces/UserOperation.sol\":{\"keccak256\":\"0x61374003361059087fdcf17967a7bba052badeaf5c7f0ae689166f8aafd3a45c\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://6ff83c59432e733bf6304dda27cd4b0f34401917dd535e2669cc842d2d26568c\",\"dweb:/ipfs/QmPJbHU5TAjHqUTZzAcicEeG2nknmwCN43L4EW9LHbknTN\"]}},\"version\":1}","devdoc":{"kind":"dev","methods":{"validateUserOp((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes),bytes32,uint256)":{"details":"Must validate caller is the entryPoint.      Must validate the signature and nonce","params":{"missingAccountFunds":"missing funds on the account's deposit in the entrypoint.      This is the minimum amount to transfer to the sender(entryPoint) to be able to make the call.      The excess is left as a deposit in the entrypoint, for future calls.      can be withdrawn anytime using \"entryPoint.withdrawTo()\"      In case there is a paymaster in the request (or the current deposit is high enough), this value will be zero.","userOp":"the operation that is about to be executed.","userOpHash":"hash of the user's request data. can be used as the basis for signature."},"returns":{"validationData":"packaged ValidationData structure. use `_packValidationData` and `_unpackValidationData` to encode and decode      <20-byte> sigAuthorizer - 0 for valid signature, 1 to mark signature failure,         otherwise, an address of an \"authorizer\" contract.      <6-byte> validUntil - last timestamp this operation is valid. 0 for \"indefinite\"      <6-byte> validAfter - first timestamp this operation is valid      If an account doesn't use time-range, it is enough to return SIG_VALIDATION_FAILED value (1) for signature failure.      Note that the validation code cannot use block.timestamp (or block.number) directly."}}},"version":1},"userdoc":{"kind":"user","methods":{"validateUserOp((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes),bytes32,uint256)":{"notice":"Validate user's signature and nonce the entryPoint will make the call to the recipient only if this validation call returns successfully. signature failure should be reported by returning SIG_VALIDATION_FAILED (1). This allows making a \"simulation call\" without a valid signature Other failures (e.g. nonce mismatch, or invalid signature format) should still revert to signal failure."}},"version":1},"storageLayout":{"storage":[],"types":null},"evm":{"legacyAssembly":null,"assembly":null,"bytecode":null,"methodIdentifiers":{"validateUserOp((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes),bytes32,uint256)":"3a871cdd"}},"irOptimized":""}},"@account-abstraction/contracts/interfaces/IAggregator.sol":{"IAggregator":{"abi":[{"inputs":[{"components":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"nonce","type":"uint256"},{"internalType":"bytes","name":"initCode","type":"bytes"},{"internalType":"bytes","name":"callData","type":"bytes"},{"internalType":"uint256","name":"callGasLimit","type":"uint256"},{"internalType":"uint256","name":"verificationGasLimit","type":"uint256"},{"internalType":"uint256","name":"preVerificationGas","type":"uint256"},{"internalType":"uint256","name":"maxFeePerGas","type":"uint256"},{"internalType":"uint256","name":"maxPriorityFeePerGas","type":"uint256"},{"internalType":"bytes","name":"paymasterAndData","type":"bytes"},{"internalType":"bytes","name":"signature","type":"bytes"}],"internalType":"struct UserOperation[]","name":"userOps","type":"tuple[]"}],"name":"aggregateSignatures","outputs":[{"internalType":"bytes","name":"aggregatedSignature","type":"bytes"}],"stateMutability":"view","type":"function"},{"inputs":[{"components":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"nonce","type":"uint256"},{"internalType":"bytes","name":"initCode","type":"bytes"},{"internalType":"bytes","name":"callData","type":"bytes"},{"internalType":"uint256","name":"callGasLimit","type":"uint256"},{"internalType":"uint256","name":"verificationGasLimit","type":"uint256"},{"internalType":"uint256","name":"preVerificationGas","type":"uint256"},{"internalType":"uint256","name":"maxFeePerGas","type":"uint256"},{"internalType":"uint256","name":"maxPriorityFeePerGas","type":"uint256"},{"internalType":"bytes","name":"paymasterAndData","type":"bytes"},{"internalType":"bytes","name":"signature","type":"bytes"}],"internalType":"struct UserOperation[]","name":"userOps","type":"tuple[]"},{"internalType":"bytes","name":"signature","type":"bytes"}],"name":"validateSignatures","outputs":[],"stateMutability":"view","type":"function"},{"inputs":[{"components":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"nonce","type":"uint256"},{"internalType":"bytes","name":"initCode","type":"bytes"},{"internalType":"bytes","name":"callData","type":"bytes"},{"internalType":"uint256","name":"callGasLimit","type":"uint256"},{"internalType":"uint256","name":"verificationGasLimit","type":"uint256"},{"internalType":"uint256","name":"preVerificationGas","type":"uint256"},{"internalType":"uint256","name":"maxFeePerGas","type":"uint256"},{"internalType":"uint256","name":"maxPriorityFeePerGas","type":"uint256"},{"internalType":"bytes","name":"paymasterAndData","type":"bytes"},{"internalType":"bytes","name":"signature","type":"bytes"}],"internalType":"struct UserOperation","name":"userOp","type":"tuple"}],"name":"validateUserOpSignature","outputs":[{"internalType":"bytes","name":"sigForUserOp","type":"bytes"}],"stateMutability":"view","type":"function"}],"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"initCode\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"callData\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"callGasLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"verificationGasLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"preVerificationGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxFeePerGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxPriorityFeePerGas\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"paymasterAndData\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"internalType\":\"struct UserOperation[]\",\"name\":\"userOps\",\"type\":\"tuple[]\"}],\"name\":\"aggregateSignatures\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"aggregatedSignature\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"initCode\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"callData\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"callGasLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"verificationGasLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"preVerificationGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxFeePerGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxPriorityFeePerGas\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"paymasterAndData\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"internalType\":\"struct UserOperation[]\",\"name\":\"userOps\",\"type\":\"tuple[]\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"name\":\"validateSignatures\",\"outputs\":[],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"initCode\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"callData\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"callGasLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"verificationGasLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"preVerificationGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxFeePerGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxPriorityFeePerGas\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"paymasterAndData\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"internalType\":\"struct UserOperation\",\"name\":\"userOp\",\"type\":\"tuple\"}],\"name\":\"validateUserOpSignature\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"sigForUserOp\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"aggregateSignatures((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes)[])\":{\"params\":{\"userOps\":\"array of UserOperations to collect the signatures from.\"},\"returns\":{\"aggregatedSignature\":\"the aggregated signature\"}},\"validateUserOpSignature((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes))\":{\"params\":{\"userOp\":\"the userOperation received from the user.\"},\"returns\":{\"sigForUserOp\":\"the value to put into the signature field of the userOp when calling handleOps.    (usually empty, unless account and aggregator support some kind of \\\"multisig\\\"\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"aggregateSignatures((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes)[])\":{\"notice\":\"aggregate multiple signatures into a single value. This method is called off-chain to calculate the signature to pass with handleOps() bundler MAY use optimized custom code perform this aggregation\"},\"validateSignatures((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes)[],bytes)\":{\"notice\":\"validate aggregated signature. revert if the aggregated signature does not match the given list of operations.\"},\"validateUserOpSignature((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes))\":{\"notice\":\"validate signature of a single userOp This method is should be called by bundler after EntryPoint.simulateValidation() returns (reverts) with ValidationResultWithAggregation First it validates the signature over the userOp. Then it returns data to be used when creating the handleOps.\"}},\"notice\":\"Aggregated Signatures validator.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@account-abstraction/contracts/interfaces/IAggregator.sol\":\"IAggregator\"},\"evmVersion\":\"london\",\"libraries\":{\":__CACHE_BREAKER__\":\"0x00000000d41867734bbee4c6863d9255b2b06ac1\"},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@account-abstraction/contracts/core/Helpers.sol\":{\"keccak256\":\"0x591c87519f7155d1909210276b77925ab2722a99b7b5d5649aecc36ebbdb045a\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://69643e83f68e6a13d5075c7565bfce326673b0bd98c432033c4603ea84835746\",\"dweb:/ipfs/QmSwSzjYyV7qudi5vvsmzHMG2Z4YJZxX51RRXXVCLaNcEU\"]},\"@account-abstraction/contracts/interfaces/IAggregator.sol\":{\"keccak256\":\"0x060e9ddb0152250c269ba0640dc5753834ac44cf182a2837d508c0c529cae26a\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://20ed837bc5909c89ff1910246bf245a5dad6840aa939382e1694964eb7dbd37b\",\"dweb:/ipfs/QmTMybRq5yyghPDDs1ZCNAVB9sSJ4WHe6Q9mejuKPTAdNP\"]},\"@account-abstraction/contracts/interfaces/UserOperation.sol\":{\"keccak256\":\"0x61374003361059087fdcf17967a7bba052badeaf5c7f0ae689166f8aafd3a45c\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://6ff83c59432e733bf6304dda27cd4b0f34401917dd535e2669cc842d2d26568c\",\"dweb:/ipfs/QmPJbHU5TAjHqUTZzAcicEeG2nknmwCN43L4EW9LHbknTN\"]}},\"version\":1}","devdoc":{"kind":"dev","methods":{"aggregateSignatures((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes)[])":{"params":{"userOps":"array of UserOperations to collect the signatures from."},"returns":{"aggregatedSignature":"the aggregated signature"}},"validateUserOpSignature((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes))":{"params":{"userOp":"the userOperation received from the user."},"returns":{"sigForUserOp":"the value to put into the signature field of the userOp when calling handleOps.    (usually empty, unless account and aggregator support some kind of \"multisig\""}}},"version":1},"userdoc":{"kind":"user","methods":{"aggregateSignatures((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes)[])":{"notice":"aggregate multiple signatures into a single value. This method is called off-chain to calculate the signature to pass with handleOps() bundler MAY use optimized custom code perform this aggregation"},"validateSignatures((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes)[],bytes)":{"notice":"validate aggregated signature. revert if the aggregated signature does not match the given list of operations."},"validateUserOpSignature((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes))":{"notice":"validate signature of a single userOp This method is should be called by bundler after EntryPoint.simulateValidation() returns (reverts) with ValidationResultWithAggregation First it validates the signature over the userOp. Then it returns data to be used when creating the handleOps."}},"notice":"Aggregated Signatures validator.","version":1},"storageLayout":{"storage":[],"types":null},"evm":{"legacyAssembly":null,"assembly":null,"bytecode":null,"methodIdentifiers":{"aggregateSignatures((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes)[])":"275e2d79","validateSignatures((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes)[],bytes)":"e3563a4f","validateUserOpSignature((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes))":"64c530cd"}},"irOptimized":""}},"@account-abstraction/contracts/interfaces/IEntryPoint.sol":{"IEntryPoint":{"abi":[{"inputs":[{"internalType":"uint256","name":"preOpGas","type":"uint256"},{"internalType":"uint256","name":"paid","type":"uint256"},{"internalType":"uint48","name":"validAfter","type":"uint48"},{"internalType":"uint48","name":"validUntil","type":"uint48"},{"internalType":"bool","name":"targetSuccess","type":"bool"},{"internalType":"bytes","name":"targetResult","type":"bytes"}],"name":"ExecutionResult","type":"error"},{"inputs":[{"internalType":"uint256","name":"opIndex","type":"uint256"},{"internalType":"string","name":"reason","type":"string"}],"name":"FailedOp","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"SenderAddressResult","type":"error"},{"inputs":[{"internalType":"address","name":"aggregator","type":"address"}],"name":"SignatureValidationFailed","type":"error"},{"inputs":[{"components":[{"internalType":"uint256","name":"preOpGas","type":"uint256"},{"internalType":"uint256","name":"prefund","type":"uint256"},{"internalType":"bool","name":"sigFailed","type":"bool"},{"internalType":"uint48","name":"validAfter","type":"uint48"},{"internalType":"uint48","name":"validUntil","type":"uint48"},{"internalType":"bytes","name":"paymasterContext","type":"bytes"}],"internalType":"struct IEntryPoint.ReturnInfo","name":"returnInfo","type":"tuple"},{"components":[{"internalType":"uint256","name":"stake","type":"uint256"},{"internalType":"uint256","name":"unstakeDelaySec","type":"uint256"}],"internalType":"struct IStakeManager.StakeInfo","name":"senderInfo","type":"tuple"},{"components":[{"internalType":"uint256","name":"stake","type":"uint256"},{"internalType":"uint256","name":"unstakeDelaySec","type":"uint256"}],"internalType":"struct IStakeManager.StakeInfo","name":"factoryInfo","type":"tuple"},{"components":[{"internalType":"uint256","name":"stake","type":"uint256"},{"internalType":"uint256","name":"unstakeDelaySec","type":"uint256"}],"internalType":"struct IStakeManager.StakeInfo","name":"paymasterInfo","type":"tuple"}],"name":"ValidationResult","type":"error"},{"inputs":[{"components":[{"internalType":"uint256","name":"preOpGas","type":"uint256"},{"internalType":"uint256","name":"prefund","type":"uint256"},{"internalType":"bool","name":"sigFailed","type":"bool"},{"internalType":"uint48","name":"validAfter","type":"uint48"},{"internalType":"uint48","name":"validUntil","type":"uint48"},{"internalType":"bytes","name":"paymasterContext","type":"bytes"}],"internalType":"struct IEntryPoint.ReturnInfo","name":"returnInfo","type":"tuple"},{"components":[{"internalType":"uint256","name":"stake","type":"uint256"},{"internalType":"uint256","name":"unstakeDelaySec","type":"uint256"}],"internalType":"struct IStakeManager.StakeInfo","name":"senderInfo","type":"tuple"},{"components":[{"internalType":"uint256","name":"stake","type":"uint256"},{"internalType":"uint256","name":"unstakeDelaySec","type":"uint256"}],"internalType":"struct IStakeManager.StakeInfo","name":"factoryInfo","type":"tuple"},{"components":[{"internalType":"uint256","name":"stake","type":"uint256"},{"internalType":"uint256","name":"unstakeDelaySec","type":"uint256"}],"internalType":"struct IStakeManager.StakeInfo","name":"paymasterInfo","type":"tuple"},{"components":[{"internalType":"address","name":"aggregator","type":"address"},{"components":[{"internalType":"uint256","name":"stake","type":"uint256"},{"internalType":"uint256","name":"unstakeDelaySec","type":"uint256"}],"internalType":"struct IStakeManager.StakeInfo","name":"stakeInfo","type":"tuple"}],"internalType":"struct IEntryPoint.AggregatorStakeInfo","name":"aggregatorInfo","type":"tuple"}],"name":"ValidationResultWithAggregation","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"userOpHash","type":"bytes32"},{"indexed":true,"internalType":"address","name":"sender","type":"address"},{"indexed":false,"internalType":"address","name":"factory","type":"address"},{"indexed":false,"internalType":"address","name":"paymaster","type":"address"}],"name":"AccountDeployed","type":"event"},{"anonymous":false,"inputs":[],"name":"BeforeExecution","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":false,"internalType":"uint256","name":"totalDeposit","type":"uint256"}],"name":"Deposited","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"aggregator","type":"address"}],"name":"SignatureAggregatorChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":false,"internalType":"uint256","name":"totalStaked","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"unstakeDelaySec","type":"uint256"}],"name":"StakeLocked","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":false,"internalType":"uint256","name":"withdrawTime","type":"uint256"}],"name":"StakeUnlocked","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":false,"internalType":"address","name":"withdrawAddress","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"StakeWithdrawn","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"userOpHash","type":"bytes32"},{"indexed":true,"internalType":"address","name":"sender","type":"address"},{"indexed":true,"internalType":"address","name":"paymaster","type":"address"},{"indexed":false,"internalType":"uint256","name":"nonce","type":"uint256"},{"indexed":false,"internalType":"bool","name":"success","type":"bool"},{"indexed":false,"internalType":"uint256","name":"actualGasCost","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"actualGasUsed","type":"uint256"}],"name":"UserOperationEvent","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"userOpHash","type":"bytes32"},{"indexed":true,"internalType":"address","name":"sender","type":"address"},{"indexed":false,"internalType":"uint256","name":"nonce","type":"uint256"},{"indexed":false,"internalType":"bytes","name":"revertReason","type":"bytes"}],"name":"UserOperationRevertReason","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":false,"internalType":"address","name":"withdrawAddress","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"Withdrawn","type":"event"},{"inputs":[{"internalType":"uint32","name":"_unstakeDelaySec","type":"uint32"}],"name":"addStake","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"depositTo","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"getDepositInfo","outputs":[{"components":[{"internalType":"uint112","name":"deposit","type":"uint112"},{"internalType":"bool","name":"staked","type":"bool"},{"internalType":"uint112","name":"stake","type":"uint112"},{"internalType":"uint32","name":"unstakeDelaySec","type":"uint32"},{"internalType":"uint48","name":"withdrawTime","type":"uint48"}],"internalType":"struct IStakeManager.DepositInfo","name":"info","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint192","name":"key","type":"uint192"}],"name":"getNonce","outputs":[{"internalType":"uint256","name":"nonce","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes","name":"initCode","type":"bytes"}],"name":"getSenderAddress","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"components":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"nonce","type":"uint256"},{"internalType":"bytes","name":"initCode","type":"bytes"},{"internalType":"bytes","name":"callData","type":"bytes"},{"internalType":"uint256","name":"callGasLimit","type":"uint256"},{"internalType":"uint256","name":"verificationGasLimit","type":"uint256"},{"internalType":"uint256","name":"preVerificationGas","type":"uint256"},{"internalType":"uint256","name":"maxFeePerGas","type":"uint256"},{"internalType":"uint256","name":"maxPriorityFeePerGas","type":"uint256"},{"internalType":"bytes","name":"paymasterAndData","type":"bytes"},{"internalType":"bytes","name":"signature","type":"bytes"}],"internalType":"struct UserOperation","name":"userOp","type":"tuple"}],"name":"getUserOpHash","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"components":[{"components":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"nonce","type":"uint256"},{"internalType":"bytes","name":"initCode","type":"bytes"},{"internalType":"bytes","name":"callData","type":"bytes"},{"internalType":"uint256","name":"callGasLimit","type":"uint256"},{"internalType":"uint256","name":"verificationGasLimit","type":"uint256"},{"internalType":"uint256","name":"preVerificationGas","type":"uint256"},{"internalType":"uint256","name":"maxFeePerGas","type":"uint256"},{"internalType":"uint256","name":"maxPriorityFeePerGas","type":"uint256"},{"internalType":"bytes","name":"paymasterAndData","type":"bytes"},{"internalType":"bytes","name":"signature","type":"bytes"}],"internalType":"struct UserOperation[]","name":"userOps","type":"tuple[]"},{"internalType":"contract IAggregator","name":"aggregator","type":"address"},{"internalType":"bytes","name":"signature","type":"bytes"}],"internalType":"struct IEntryPoint.UserOpsPerAggregator[]","name":"opsPerAggregator","type":"tuple[]"},{"internalType":"address payable","name":"beneficiary","type":"address"}],"name":"handleAggregatedOps","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"components":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"nonce","type":"uint256"},{"internalType":"bytes","name":"initCode","type":"bytes"},{"internalType":"bytes","name":"callData","type":"bytes"},{"internalType":"uint256","name":"callGasLimit","type":"uint256"},{"internalType":"uint256","name":"verificationGasLimit","type":"uint256"},{"internalType":"uint256","name":"preVerificationGas","type":"uint256"},{"internalType":"uint256","name":"maxFeePerGas","type":"uint256"},{"internalType":"uint256","name":"maxPriorityFeePerGas","type":"uint256"},{"internalType":"bytes","name":"paymasterAndData","type":"bytes"},{"internalType":"bytes","name":"signature","type":"bytes"}],"internalType":"struct UserOperation[]","name":"ops","type":"tuple[]"},{"internalType":"address payable","name":"beneficiary","type":"address"}],"name":"handleOps","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint192","name":"key","type":"uint192"}],"name":"incrementNonce","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"components":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"nonce","type":"uint256"},{"internalType":"bytes","name":"initCode","type":"bytes"},{"internalType":"bytes","name":"callData","type":"bytes"},{"internalType":"uint256","name":"callGasLimit","type":"uint256"},{"internalType":"uint256","name":"verificationGasLimit","type":"uint256"},{"internalType":"uint256","name":"preVerificationGas","type":"uint256"},{"internalType":"uint256","name":"maxFeePerGas","type":"uint256"},{"internalType":"uint256","name":"maxPriorityFeePerGas","type":"uint256"},{"internalType":"bytes","name":"paymasterAndData","type":"bytes"},{"internalType":"bytes","name":"signature","type":"bytes"}],"internalType":"struct UserOperation","name":"op","type":"tuple"},{"internalType":"address","name":"target","type":"address"},{"internalType":"bytes","name":"targetCallData","type":"bytes"}],"name":"simulateHandleOp","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"components":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"nonce","type":"uint256"},{"internalType":"bytes","name":"initCode","type":"bytes"},{"internalType":"bytes","name":"callData","type":"bytes"},{"internalType":"uint256","name":"callGasLimit","type":"uint256"},{"internalType":"uint256","name":"verificationGasLimit","type":"uint256"},{"internalType":"uint256","name":"preVerificationGas","type":"uint256"},{"internalType":"uint256","name":"maxFeePerGas","type":"uint256"},{"internalType":"uint256","name":"maxPriorityFeePerGas","type":"uint256"},{"internalType":"bytes","name":"paymasterAndData","type":"bytes"},{"internalType":"bytes","name":"signature","type":"bytes"}],"internalType":"struct UserOperation","name":"userOp","type":"tuple"}],"name":"simulateValidation","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"unlockStake","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address payable","name":"withdrawAddress","type":"address"}],"name":"withdrawStake","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address payable","name":"withdrawAddress","type":"address"},{"internalType":"uint256","name":"withdrawAmount","type":"uint256"}],"name":"withdrawTo","outputs":[],"stateMutability":"nonpayable","type":"function"}],"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"preOpGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"paid\",\"type\":\"uint256\"},{\"internalType\":\"uint48\",\"name\":\"validAfter\",\"type\":\"uint48\"},{\"internalType\":\"uint48\",\"name\":\"validUntil\",\"type\":\"uint48\"},{\"internalType\":\"bool\",\"name\":\"targetSuccess\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"targetResult\",\"type\":\"bytes\"}],\"name\":\"ExecutionResult\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"opIndex\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"reason\",\"type\":\"string\"}],\"name\":\"FailedOp\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"SenderAddressResult\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"aggregator\",\"type\":\"address\"}],\"name\":\"SignatureValidationFailed\",\"type\":\"error\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"preOpGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"prefund\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"sigFailed\",\"type\":\"bool\"},{\"internalType\":\"uint48\",\"name\":\"validAfter\",\"type\":\"uint48\"},{\"internalType\":\"uint48\",\"name\":\"validUntil\",\"type\":\"uint48\"},{\"internalType\":\"bytes\",\"name\":\"paymasterContext\",\"type\":\"bytes\"}],\"internalType\":\"struct IEntryPoint.ReturnInfo\",\"name\":\"returnInfo\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"stake\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"unstakeDelaySec\",\"type\":\"uint256\"}],\"internalType\":\"struct IStakeManager.StakeInfo\",\"name\":\"senderInfo\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"stake\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"unstakeDelaySec\",\"type\":\"uint256\"}],\"internalType\":\"struct IStakeManager.StakeInfo\",\"name\":\"factoryInfo\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"stake\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"unstakeDelaySec\",\"type\":\"uint256\"}],\"internalType\":\"struct IStakeManager.StakeInfo\",\"name\":\"paymasterInfo\",\"type\":\"tuple\"}],\"name\":\"ValidationResult\",\"type\":\"error\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"preOpGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"prefund\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"sigFailed\",\"type\":\"bool\"},{\"internalType\":\"uint48\",\"name\":\"validAfter\",\"type\":\"uint48\"},{\"internalType\":\"uint48\",\"name\":\"validUntil\",\"type\":\"uint48\"},{\"internalType\":\"bytes\",\"name\":\"paymasterContext\",\"type\":\"bytes\"}],\"internalType\":\"struct IEntryPoint.ReturnInfo\",\"name\":\"returnInfo\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"stake\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"unstakeDelaySec\",\"type\":\"uint256\"}],\"internalType\":\"struct IStakeManager.StakeInfo\",\"name\":\"senderInfo\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"stake\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"unstakeDelaySec\",\"type\":\"uint256\"}],\"internalType\":\"struct IStakeManager.StakeInfo\",\"name\":\"factoryInfo\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"stake\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"unstakeDelaySec\",\"type\":\"uint256\"}],\"internalType\":\"struct IStakeManager.StakeInfo\",\"name\":\"paymasterInfo\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"aggregator\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"stake\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"unstakeDelaySec\",\"type\":\"uint256\"}],\"internalType\":\"struct IStakeManager.StakeInfo\",\"name\":\"stakeInfo\",\"type\":\"tuple\"}],\"internalType\":\"struct IEntryPoint.AggregatorStakeInfo\",\"name\":\"aggregatorInfo\",\"type\":\"tuple\"}],\"name\":\"ValidationResultWithAggregation\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"userOpHash\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"factory\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"paymaster\",\"type\":\"address\"}],\"name\":\"AccountDeployed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"BeforeExecution\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"totalDeposit\",\"type\":\"uint256\"}],\"name\":\"Deposited\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"aggregator\",\"type\":\"address\"}],\"name\":\"SignatureAggregatorChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"totalStaked\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"unstakeDelaySec\",\"type\":\"uint256\"}],\"name\":\"StakeLocked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"withdrawTime\",\"type\":\"uint256\"}],\"name\":\"StakeUnlocked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"withdrawAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"StakeWithdrawn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"userOpHash\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"paymaster\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"actualGasCost\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"actualGasUsed\",\"type\":\"uint256\"}],\"name\":\"UserOperationEvent\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"userOpHash\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"revertReason\",\"type\":\"bytes\"}],\"name\":\"UserOperationRevertReason\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"withdrawAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Withdrawn\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"_unstakeDelaySec\",\"type\":\"uint32\"}],\"name\":\"addStake\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"depositTo\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"getDepositInfo\",\"outputs\":[{\"components\":[{\"internalType\":\"uint112\",\"name\":\"deposit\",\"type\":\"uint112\"},{\"internalType\":\"bool\",\"name\":\"staked\",\"type\":\"bool\"},{\"internalType\":\"uint112\",\"name\":\"stake\",\"type\":\"uint112\"},{\"internalType\":\"uint32\",\"name\":\"unstakeDelaySec\",\"type\":\"uint32\"},{\"internalType\":\"uint48\",\"name\":\"withdrawTime\",\"type\":\"uint48\"}],\"internalType\":\"struct IStakeManager.DepositInfo\",\"name\":\"info\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint192\",\"name\":\"key\",\"type\":\"uint192\"}],\"name\":\"getNonce\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"initCode\",\"type\":\"bytes\"}],\"name\":\"getSenderAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"initCode\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"callData\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"callGasLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"verificationGasLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"preVerificationGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxFeePerGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxPriorityFeePerGas\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"paymasterAndData\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"internalType\":\"struct UserOperation\",\"name\":\"userOp\",\"type\":\"tuple\"}],\"name\":\"getUserOpHash\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"initCode\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"callData\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"callGasLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"verificationGasLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"preVerificationGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxFeePerGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxPriorityFeePerGas\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"paymasterAndData\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"internalType\":\"struct UserOperation[]\",\"name\":\"userOps\",\"type\":\"tuple[]\"},{\"internalType\":\"contract IAggregator\",\"name\":\"aggregator\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"internalType\":\"struct IEntryPoint.UserOpsPerAggregator[]\",\"name\":\"opsPerAggregator\",\"type\":\"tuple[]\"},{\"internalType\":\"address payable\",\"name\":\"beneficiary\",\"type\":\"address\"}],\"name\":\"handleAggregatedOps\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"initCode\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"callData\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"callGasLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"verificationGasLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"preVerificationGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxFeePerGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxPriorityFeePerGas\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"paymasterAndData\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"internalType\":\"struct UserOperation[]\",\"name\":\"ops\",\"type\":\"tuple[]\"},{\"internalType\":\"address payable\",\"name\":\"beneficiary\",\"type\":\"address\"}],\"name\":\"handleOps\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint192\",\"name\":\"key\",\"type\":\"uint192\"}],\"name\":\"incrementNonce\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"initCode\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"callData\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"callGasLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"verificationGasLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"preVerificationGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxFeePerGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxPriorityFeePerGas\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"paymasterAndData\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"internalType\":\"struct UserOperation\",\"name\":\"op\",\"type\":\"tuple\"},{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"targetCallData\",\"type\":\"bytes\"}],\"name\":\"simulateHandleOp\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"initCode\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"callData\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"callGasLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"verificationGasLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"preVerificationGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxFeePerGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxPriorityFeePerGas\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"paymasterAndData\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"internalType\":\"struct UserOperation\",\"name\":\"userOp\",\"type\":\"tuple\"}],\"name\":\"simulateValidation\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unlockStake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"withdrawAddress\",\"type\":\"address\"}],\"name\":\"withdrawStake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"withdrawAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"withdrawAmount\",\"type\":\"uint256\"}],\"name\":\"withdrawTo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"FailedOp(uint256,string)\":[{\"params\":{\"opIndex\":\"- index into the array of ops to the failed one (in simulateValidation, this is always zero)\",\"reason\":\"- revert reason      The string starts with a unique code \\\"AAmn\\\", where \\\"m\\\" is \\\"1\\\" for factory, \\\"2\\\" for account and \\\"3\\\" for paymaster issues,      so a failure can be attributed to the correct entity.   Should be caught in off-chain handleOps simulation and not happen on-chain.   Useful for mitigating DoS attempts against batchers or for troubleshooting of factory/account/paymaster reverts.\"}}],\"ValidationResult((uint256,uint256,bool,uint48,uint48,bytes),(uint256,uint256),(uint256,uint256),(uint256,uint256))\":[{\"params\":{\"factoryInfo\":\"stake information about the factory (if any)\",\"paymasterInfo\":\"stake information about the paymaster (if any)\",\"returnInfo\":\"gas and time-range returned values\",\"senderInfo\":\"stake information about the sender\"}}],\"ValidationResultWithAggregation((uint256,uint256,bool,uint48,uint48,bytes),(uint256,uint256),(uint256,uint256),(uint256,uint256),(address,(uint256,uint256)))\":[{\"params\":{\"aggregatorInfo\":\"signature aggregation info (if the account requires signature aggregator)      bundler MUST use it to verify the signature, or reject the UserOperation\",\"factoryInfo\":\"stake information about the factory (if any)\",\"paymasterInfo\":\"stake information about the paymaster (if any)\",\"returnInfo\":\"gas and time-range returned values\",\"senderInfo\":\"stake information about the sender\"}}]},\"events\":{\"AccountDeployed(bytes32,address,address,address)\":{\"params\":{\"factory\":\"the factory used to deploy this account (in the initCode)\",\"paymaster\":\"the paymaster used by this UserOp\",\"sender\":\"the account that is deployed\",\"userOpHash\":\"the userOp that deployed this account. UserOperationEvent will follow.\"}},\"UserOperationRevertReason(bytes32,address,uint256,bytes)\":{\"params\":{\"nonce\":\"the nonce used in the request\",\"revertReason\":\"- the return bytes from the (reverted) call to \\\"callData\\\".\",\"sender\":\"the sender of this request\",\"userOpHash\":\"the request unique identifier.\"}}},\"kind\":\"dev\",\"methods\":{\"addStake(uint32)\":{\"params\":{\"_unstakeDelaySec\":\"the new lock duration before the deposit can be withdrawn.\"}},\"balanceOf(address)\":{\"returns\":{\"_0\":\"the deposit (for gas payment) of the account\"}},\"getDepositInfo(address)\":{\"returns\":{\"info\":\"- full deposit information of given account\"}},\"getNonce(address,uint192)\":{\"params\":{\"key\":\"the high 192 bit of the nonce\",\"sender\":\"the account address\"},\"returns\":{\"nonce\":\"a full nonce to pass for next UserOp with this sender.\"}},\"getSenderAddress(bytes)\":{\"params\":{\"initCode\":\"the constructor code to be passed into the UserOperation.\"}},\"handleAggregatedOps(((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes)[],address,bytes)[],address)\":{\"params\":{\"beneficiary\":\"the address to receive the fees\",\"opsPerAggregator\":\"the operations to execute, grouped by aggregator (or address(0) for no-aggregator accounts)\"}},\"handleOps((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes)[],address)\":{\"params\":{\"beneficiary\":\"the address to receive the fees\",\"ops\":\"the operations to execute\"}},\"simulateHandleOp((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes),address,bytes)\":{\"params\":{\"op\":\"the UserOperation to simulate\",\"target\":\"if nonzero, a target address to call after userop simulation. If called, the targetSuccess and targetResult        are set to the return from that call.\",\"targetCallData\":\"callData to pass to target address\"}},\"simulateValidation((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes))\":{\"details\":\"this method always revert. Successful result is ValidationResult error. other errors are failures.The node must also verify it doesn't use banned opcodes, and that it doesn't reference storage outside the account's data.\",\"params\":{\"userOp\":\"the user operation to validate.\"}},\"withdrawStake(address)\":{\"params\":{\"withdrawAddress\":\"the address to send withdrawn value.\"}},\"withdrawTo(address,uint256)\":{\"params\":{\"withdrawAddress\":\"the address to send withdrawn value.\",\"withdrawAmount\":\"the amount to withdraw.\"}}},\"version\":1},\"userdoc\":{\"errors\":{\"ExecutionResult(uint256,uint256,uint48,uint48,bool,bytes)\":[{\"notice\":\"return value of simulateHandleOp\"}],\"FailedOp(uint256,string)\":[{\"notice\":\"a custom revert error of handleOps, to identify the offending op.  NOTE: if simulateValidation passes successfully, there should be no reason for handleOps to fail on it.\"}],\"SenderAddressResult(address)\":[{\"notice\":\"return value of getSenderAddress\"}],\"SignatureValidationFailed(address)\":[{\"notice\":\"error case when a signature aggregator fails to verify the aggregated signature it had created.\"}],\"ValidationResult((uint256,uint256,bool,uint48,uint48,bytes),(uint256,uint256),(uint256,uint256),(uint256,uint256))\":[{\"notice\":\"Successful result from simulateValidation.\"}],\"ValidationResultWithAggregation((uint256,uint256,bool,uint48,uint48,bytes),(uint256,uint256),(uint256,uint256),(uint256,uint256),(address,(uint256,uint256)))\":[{\"notice\":\"Successful result from simulateValidation, if the account returns a signature aggregator\"}]},\"events\":{\"AccountDeployed(bytes32,address,address,address)\":{\"notice\":\"account \\\"sender\\\" was deployed.\"},\"BeforeExecution()\":{\"notice\":\"an event emitted by handleOps(), before starting the execution loop. any event emitted before this event, is part of the validation.\"},\"SignatureAggregatorChanged(address)\":{\"notice\":\"signature aggregator used by the following UserOperationEvents within this bundle.\"},\"StakeLocked(address,uint256,uint256)\":{\"notice\":\"Emitted when stake or unstake delay are modified\"},\"StakeUnlocked(address,uint256)\":{\"notice\":\"Emitted once a stake is scheduled for withdrawal\"},\"UserOperationRevertReason(bytes32,address,uint256,bytes)\":{\"notice\":\"An event emitted if the UserOperation \\\"callData\\\" reverted with non-zero length\"}},\"kind\":\"user\",\"methods\":{\"addStake(uint32)\":{\"notice\":\"add to the account's stake - amount and delay any pending unstake is first cancelled.\"},\"depositTo(address)\":{\"notice\":\"add to the deposit of the given account\"},\"getNonce(address,uint192)\":{\"notice\":\"Return the next nonce for this sender. Within a given key, the nonce values are sequenced (starting with zero, and incremented by one on each userop) But UserOp with different keys can come with arbitrary order.\"},\"getSenderAddress(bytes)\":{\"notice\":\"Get counterfactual sender address.  Calculate the sender contract address that will be generated by the initCode and salt in the UserOperation. this method always revert, and returns the address in SenderAddressResult error\"},\"getUserOpHash((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes))\":{\"notice\":\"generate a request Id - unique identifier for this request. the request ID is a hash over the content of the userOp (except the signature), the entrypoint and the chainid.\"},\"handleAggregatedOps(((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes)[],address,bytes)[],address)\":{\"notice\":\"Execute a batch of UserOperation with Aggregators\"},\"handleOps((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes)[],address)\":{\"notice\":\"Execute a batch of UserOperation. no signature aggregator is used. if any account requires an aggregator (that is, it returned an aggregator when performing simulateValidation), then handleAggregatedOps() must be used instead.\"},\"incrementNonce(uint192)\":{\"notice\":\"Manually increment the nonce of the sender. This method is exposed just for completeness.. Account does NOT need to call it, neither during validation, nor elsewhere, as the EntryPoint will update the nonce regardless. Possible use-case is call it with various keys to \\\"initialize\\\" their nonces to one, so that future UserOperations will not pay extra for the first transaction with a given key.\"},\"simulateHandleOp((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes),address,bytes)\":{\"notice\":\"simulate full execution of a UserOperation (including both validation and target execution) this method will always revert with \\\"ExecutionResult\\\". it performs full validation of the UserOperation, but ignores signature error. an optional target address is called after the userop succeeds, and its value is returned (before the entire call is reverted) Note that in order to collect the the success/failure of the target call, it must be executed with trace enabled to track the emitted events.\"},\"simulateValidation((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes))\":{\"notice\":\"Simulate a call to account.validateUserOp and paymaster.validatePaymasterUserOp.\"},\"unlockStake()\":{\"notice\":\"attempt to unlock the stake. the value can be withdrawn (using withdrawStake) after the unstake delay.\"},\"withdrawStake(address)\":{\"notice\":\"withdraw from the (unlocked) stake. must first call unlockStake and wait for the unstakeDelay to pass\"},\"withdrawTo(address,uint256)\":{\"notice\":\"withdraw from the deposit.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@account-abstraction/contracts/interfaces/IEntryPoint.sol\":\"IEntryPoint\"},\"evmVersion\":\"london\",\"libraries\":{\":__CACHE_BREAKER__\":\"0x00000000d41867734bbee4c6863d9255b2b06ac1\"},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@account-abstraction/contracts/core/Helpers.sol\":{\"keccak256\":\"0x591c87519f7155d1909210276b77925ab2722a99b7b5d5649aecc36ebbdb045a\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://69643e83f68e6a13d5075c7565bfce326673b0bd98c432033c4603ea84835746\",\"dweb:/ipfs/QmSwSzjYyV7qudi5vvsmzHMG2Z4YJZxX51RRXXVCLaNcEU\"]},\"@account-abstraction/contracts/interfaces/IAggregator.sol\":{\"keccak256\":\"0x060e9ddb0152250c269ba0640dc5753834ac44cf182a2837d508c0c529cae26a\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://20ed837bc5909c89ff1910246bf245a5dad6840aa939382e1694964eb7dbd37b\",\"dweb:/ipfs/QmTMybRq5yyghPDDs1ZCNAVB9sSJ4WHe6Q9mejuKPTAdNP\"]},\"@account-abstraction/contracts/interfaces/IEntryPoint.sol\":{\"keccak256\":\"0x3a90bf308819ed125fa4202f880999caff8a8686633b8ddb79a30ca240d5b8f8\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://d2d21cc92c2fdab2b58d21bc25d4cd0e8c284b922528a186b087b818d54bc6cf\",\"dweb:/ipfs/QmT1qrfuBjsv2rmRCDn8mgPXHp94hARJwzbcDuBLDTbFWd\"]},\"@account-abstraction/contracts/interfaces/INonceManager.sol\":{\"keccak256\":\"0x509871e6c63663cdcc3eba19920fe84e991f38b289b1377ac3c3a6d9f22d7e12\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://00fe21b4349b24c50df60e1a705179293982bd9e7a32b78d4bac9620f89e7fe2\",\"dweb:/ipfs/QmSFFYGfUwQbVa6hASjU7YxTvgi2HkfrPr4X5oPHscHg8b\"]},\"@account-abstraction/contracts/interfaces/IStakeManager.sol\":{\"keccak256\":\"0xd227b02888cd4ac68daebcdfd992ec00f9fff66fa3b3bb16f656cd582fa3480f\",\"license\":\"GPL-3.0-only\",\"urls\":[\"bzz-raw://b389da4714a138be63704a576a482505eab2855e263b38a93706395d8d42e7c3\",\"dweb:/ipfs/QmeeAZpdHwUXxqP8pxA7GNtoCGBmmH4FaqLLwScVKGxtxZ\"]},\"@account-abstraction/contracts/interfaces/UserOperation.sol\":{\"keccak256\":\"0x61374003361059087fdcf17967a7bba052badeaf5c7f0ae689166f8aafd3a45c\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://6ff83c59432e733bf6304dda27cd4b0f34401917dd535e2669cc842d2d26568c\",\"dweb:/ipfs/QmPJbHU5TAjHqUTZzAcicEeG2nknmwCN43L4EW9LHbknTN\"]}},\"version\":1}","devdoc":{"errors":{"FailedOp(uint256,string)":[{"params":{"opIndex":"- index into the array of ops to the failed one (in simulateValidation, this is always zero)","reason":"- revert reason      The string starts with a unique code \"AAmn\", where \"m\" is \"1\" for factory, \"2\" for account and \"3\" for paymaster issues,      so a failure can be attributed to the correct entity.   Should be caught in off-chain handleOps simulation and not happen on-chain.   Useful for mitigating DoS attempts against batchers or for troubleshooting of factory/account/paymaster reverts."}}],"ValidationResult((uint256,uint256,bool,uint48,uint48,bytes),(uint256,uint256),(uint256,uint256),(uint256,uint256))":[{"params":{"factoryInfo":"stake information about the factory (if any)","paymasterInfo":"stake information about the paymaster (if any)","returnInfo":"gas and time-range returned values","senderInfo":"stake information about the sender"}}],"ValidationResultWithAggregation((uint256,uint256,bool,uint48,uint48,bytes),(uint256,uint256),(uint256,uint256),(uint256,uint256),(address,(uint256,uint256)))":[{"params":{"aggregatorInfo":"signature aggregation info (if the account requires signature aggregator)      bundler MUST use it to verify the signature, or reject the UserOperation","factoryInfo":"stake information about the factory (if any)","paymasterInfo":"stake information about the paymaster (if any)","returnInfo":"gas and time-range returned values","senderInfo":"stake information about the sender"}}]},"events":{"AccountDeployed(bytes32,address,address,address)":{"params":{"factory":"the factory used to deploy this account (in the initCode)","paymaster":"the paymaster used by this UserOp","sender":"the account that is deployed","userOpHash":"the userOp that deployed this account. UserOperationEvent will follow."}},"UserOperationRevertReason(bytes32,address,uint256,bytes)":{"params":{"nonce":"the nonce used in the request","revertReason":"- the return bytes from the (reverted) call to \"callData\".","sender":"the sender of this request","userOpHash":"the request unique identifier."}}},"kind":"dev","methods":{"addStake(uint32)":{"params":{"_unstakeDelaySec":"the new lock duration before the deposit can be withdrawn."}},"balanceOf(address)":{"returns":{"_0":"the deposit (for gas payment) of the account"}},"getDepositInfo(address)":{"returns":{"info":"- full deposit information of given account"}},"getNonce(address,uint192)":{"params":{"key":"the high 192 bit of the nonce","sender":"the account address"},"returns":{"nonce":"a full nonce to pass for next UserOp with this sender."}},"getSenderAddress(bytes)":{"params":{"initCode":"the constructor code to be passed into the UserOperation."}},"handleAggregatedOps(((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes)[],address,bytes)[],address)":{"params":{"beneficiary":"the address to receive the fees","opsPerAggregator":"the operations to execute, grouped by aggregator (or address(0) for no-aggregator accounts)"}},"handleOps((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes)[],address)":{"params":{"beneficiary":"the address to receive the fees","ops":"the operations to execute"}},"simulateHandleOp((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes),address,bytes)":{"params":{"op":"the UserOperation to simulate","target":"if nonzero, a target address to call after userop simulation. If called, the targetSuccess and targetResult        are set to the return from that call.","targetCallData":"callData to pass to target address"}},"simulateValidation((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes))":{"details":"this method always revert. Successful result is ValidationResult error. other errors are failures.The node must also verify it doesn't use banned opcodes, and that it doesn't reference storage outside the account's data.","params":{"userOp":"the user operation to validate."}},"withdrawStake(address)":{"params":{"withdrawAddress":"the address to send withdrawn value."}},"withdrawTo(address,uint256)":{"params":{"withdrawAddress":"the address to send withdrawn value.","withdrawAmount":"the amount to withdraw."}}},"version":1},"userdoc":{"errors":{"ExecutionResult(uint256,uint256,uint48,uint48,bool,bytes)":[{"notice":"return value of simulateHandleOp"}],"FailedOp(uint256,string)":[{"notice":"a custom revert error of handleOps, to identify the offending op.  NOTE: if simulateValidation passes successfully, there should be no reason for handleOps to fail on it."}],"SenderAddressResult(address)":[{"notice":"return value of getSenderAddress"}],"SignatureValidationFailed(address)":[{"notice":"error case when a signature aggregator fails to verify the aggregated signature it had created."}],"ValidationResult((uint256,uint256,bool,uint48,uint48,bytes),(uint256,uint256),(uint256,uint256),(uint256,uint256))":[{"notice":"Successful result from simulateValidation."}],"ValidationResultWithAggregation((uint256,uint256,bool,uint48,uint48,bytes),(uint256,uint256),(uint256,uint256),(uint256,uint256),(address,(uint256,uint256)))":[{"notice":"Successful result from simulateValidation, if the account returns a signature aggregator"}]},"events":{"AccountDeployed(bytes32,address,address,address)":{"notice":"account \"sender\" was deployed."},"BeforeExecution()":{"notice":"an event emitted by handleOps(), before starting the execution loop. any event emitted before this event, is part of the validation."},"SignatureAggregatorChanged(address)":{"notice":"signature aggregator used by the following UserOperationEvents within this bundle."},"StakeLocked(address,uint256,uint256)":{"notice":"Emitted when stake or unstake delay are modified"},"StakeUnlocked(address,uint256)":{"notice":"Emitted once a stake is scheduled for withdrawal"},"UserOperationRevertReason(bytes32,address,uint256,bytes)":{"notice":"An event emitted if the UserOperation \"callData\" reverted with non-zero length"}},"kind":"user","methods":{"addStake(uint32)":{"notice":"add to the account's stake - amount and delay any pending unstake is first cancelled."},"depositTo(address)":{"notice":"add to the deposit of the given account"},"getNonce(address,uint192)":{"notice":"Return the next nonce for this sender. Within a given key, the nonce values are sequenced (starting with zero, and incremented by one on each userop) But UserOp with different keys can come with arbitrary order."},"getSenderAddress(bytes)":{"notice":"Get counterfactual sender address.  Calculate the sender contract address that will be generated by the initCode and salt in the UserOperation. this method always revert, and returns the address in SenderAddressResult error"},"getUserOpHash((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes))":{"notice":"generate a request Id - unique identifier for this request. the request ID is a hash over the content of the userOp (except the signature), the entrypoint and the chainid."},"handleAggregatedOps(((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes)[],address,bytes)[],address)":{"notice":"Execute a batch of UserOperation with Aggregators"},"handleOps((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes)[],address)":{"notice":"Execute a batch of UserOperation. no signature aggregator is used. if any account requires an aggregator (that is, it returned an aggregator when performing simulateValidation), then handleAggregatedOps() must be used instead."},"incrementNonce(uint192)":{"notice":"Manually increment the nonce of the sender. This method is exposed just for completeness.. Account does NOT need to call it, neither during validation, nor elsewhere, as the EntryPoint will update the nonce regardless. Possible use-case is call it with various keys to \"initialize\" their nonces to one, so that future UserOperations will not pay extra for the first transaction with a given key."},"simulateHandleOp((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes),address,bytes)":{"notice":"simulate full execution of a UserOperation (including both validation and target execution) this method will always revert with \"ExecutionResult\". it performs full validation of the UserOperation, but ignores signature error. an optional target address is called after the userop succeeds, and its value is returned (before the entire call is reverted) Note that in order to collect the the success/failure of the target call, it must be executed with trace enabled to track the emitted events."},"simulateValidation((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes))":{"notice":"Simulate a call to account.validateUserOp and paymaster.validatePaymasterUserOp."},"unlockStake()":{"notice":"attempt to unlock the stake. the value can be withdrawn (using withdrawStake) after the unstake delay."},"withdrawStake(address)":{"notice":"withdraw from the (unlocked) stake. must first call unlockStake and wait for the unstakeDelay to pass"},"withdrawTo(address,uint256)":{"notice":"withdraw from the deposit."}},"version":1},"storageLayout":{"storage":[],"types":null},"evm":{"legacyAssembly":null,"assembly":null,"bytecode":null,"methodIdentifiers":{"addStake(uint32)":"0396cb60","balanceOf(address)":"70a08231","depositTo(address)":"b760faf9","getDepositInfo(address)":"5287ce12","getNonce(address,uint192)":"35567e1a","getSenderAddress(bytes)":"9b249f69","getUserOpHash((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes))":"a6193531","handleAggregatedOps(((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes)[],address,bytes)[],address)":"4b1d7cf5","handleOps((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes)[],address)":"1fad948c","incrementNonce(uint192)":"0bd28e3b","simulateHandleOp((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes),address,bytes)":"d6383f94","simulateValidation((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes))":"ee219423","unlockStake()":"bb9fe6bf","withdrawStake(address)":"c23a5cea","withdrawTo(address,uint256)":"205c2878"}},"irOptimized":""}},"@account-abstraction/contracts/interfaces/INonceManager.sol":{"INonceManager":{"abi":[{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint192","name":"key","type":"uint192"}],"name":"getNonce","outputs":[{"internalType":"uint256","name":"nonce","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint192","name":"key","type":"uint192"}],"name":"incrementNonce","outputs":[],"stateMutability":"nonpayable","type":"function"}],"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint192\",\"name\":\"key\",\"type\":\"uint192\"}],\"name\":\"getNonce\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint192\",\"name\":\"key\",\"type\":\"uint192\"}],\"name\":\"incrementNonce\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"getNonce(address,uint192)\":{\"params\":{\"key\":\"the high 192 bit of the nonce\",\"sender\":\"the account address\"},\"returns\":{\"nonce\":\"a full nonce to pass for next UserOp with this sender.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"getNonce(address,uint192)\":{\"notice\":\"Return the next nonce for this sender. Within a given key, the nonce values are sequenced (starting with zero, and incremented by one on each userop) But UserOp with different keys can come with arbitrary order.\"},\"incrementNonce(uint192)\":{\"notice\":\"Manually increment the nonce of the sender. This method is exposed just for completeness.. Account does NOT need to call it, neither during validation, nor elsewhere, as the EntryPoint will update the nonce regardless. Possible use-case is call it with various keys to \\\"initialize\\\" their nonces to one, so that future UserOperations will not pay extra for the first transaction with a given key.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@account-abstraction/contracts/interfaces/INonceManager.sol\":\"INonceManager\"},\"evmVersion\":\"london\",\"libraries\":{\":__CACHE_BREAKER__\":\"0x00000000d41867734bbee4c6863d9255b2b06ac1\"},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@account-abstraction/contracts/interfaces/INonceManager.sol\":{\"keccak256\":\"0x509871e6c63663cdcc3eba19920fe84e991f38b289b1377ac3c3a6d9f22d7e12\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://00fe21b4349b24c50df60e1a705179293982bd9e7a32b78d4bac9620f89e7fe2\",\"dweb:/ipfs/QmSFFYGfUwQbVa6hASjU7YxTvgi2HkfrPr4X5oPHscHg8b\"]}},\"version\":1}","devdoc":{"kind":"dev","methods":{"getNonce(address,uint192)":{"params":{"key":"the high 192 bit of the nonce","sender":"the account address"},"returns":{"nonce":"a full nonce to pass for next UserOp with this sender."}}},"version":1},"userdoc":{"kind":"user","methods":{"getNonce(address,uint192)":{"notice":"Return the next nonce for this sender. Within a given key, the nonce values are sequenced (starting with zero, and incremented by one on each userop) But UserOp with different keys can come with arbitrary order."},"incrementNonce(uint192)":{"notice":"Manually increment the nonce of the sender. This method is exposed just for completeness.. Account does NOT need to call it, neither during validation, nor elsewhere, as the EntryPoint will update the nonce regardless. Possible use-case is call it with various keys to \"initialize\" their nonces to one, so that future UserOperations will not pay extra for the first transaction with a given key."}},"version":1},"storageLayout":{"storage":[],"types":null},"evm":{"legacyAssembly":null,"assembly":null,"bytecode":null,"methodIdentifiers":{"getNonce(address,uint192)":"35567e1a","incrementNonce(uint192)":"0bd28e3b"}},"irOptimized":""}},"@account-abstraction/contracts/interfaces/IStakeManager.sol":{"IStakeManager":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":false,"internalType":"uint256","name":"totalDeposit","type":"uint256"}],"name":"Deposited","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":false,"internalType":"uint256","name":"totalStaked","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"unstakeDelaySec","type":"uint256"}],"name":"StakeLocked","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":false,"internalType":"uint256","name":"withdrawTime","type":"uint256"}],"name":"StakeUnlocked","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":false,"internalType":"address","name":"withdrawAddress","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"StakeWithdrawn","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":false,"internalType":"address","name":"withdrawAddress","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"Withdrawn","type":"event"},{"inputs":[{"internalType":"uint32","name":"_unstakeDelaySec","type":"uint32"}],"name":"addStake","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"depositTo","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"getDepositInfo","outputs":[{"components":[{"internalType":"uint112","name":"deposit","type":"uint112"},{"internalType":"bool","name":"staked","type":"bool"},{"internalType":"uint112","name":"stake","type":"uint112"},{"internalType":"uint32","name":"unstakeDelaySec","type":"uint32"},{"internalType":"uint48","name":"withdrawTime","type":"uint48"}],"internalType":"struct IStakeManager.DepositInfo","name":"info","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"unlockStake","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address payable","name":"withdrawAddress","type":"address"}],"name":"withdrawStake","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address payable","name":"withdrawAddress","type":"address"},{"internalType":"uint256","name":"withdrawAmount","type":"uint256"}],"name":"withdrawTo","outputs":[],"stateMutability":"nonpayable","type":"function"}],"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"totalDeposit\",\"type\":\"uint256\"}],\"name\":\"Deposited\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"totalStaked\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"unstakeDelaySec\",\"type\":\"uint256\"}],\"name\":\"StakeLocked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"withdrawTime\",\"type\":\"uint256\"}],\"name\":\"StakeUnlocked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"withdrawAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"StakeWithdrawn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"withdrawAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Withdrawn\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"_unstakeDelaySec\",\"type\":\"uint32\"}],\"name\":\"addStake\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"depositTo\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"getDepositInfo\",\"outputs\":[{\"components\":[{\"internalType\":\"uint112\",\"name\":\"deposit\",\"type\":\"uint112\"},{\"internalType\":\"bool\",\"name\":\"staked\",\"type\":\"bool\"},{\"internalType\":\"uint112\",\"name\":\"stake\",\"type\":\"uint112\"},{\"internalType\":\"uint32\",\"name\":\"unstakeDelaySec\",\"type\":\"uint32\"},{\"internalType\":\"uint48\",\"name\":\"withdrawTime\",\"type\":\"uint48\"}],\"internalType\":\"struct IStakeManager.DepositInfo\",\"name\":\"info\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unlockStake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"withdrawAddress\",\"type\":\"address\"}],\"name\":\"withdrawStake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"withdrawAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"withdrawAmount\",\"type\":\"uint256\"}],\"name\":\"withdrawTo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"addStake(uint32)\":{\"params\":{\"_unstakeDelaySec\":\"the new lock duration before the deposit can be withdrawn.\"}},\"balanceOf(address)\":{\"returns\":{\"_0\":\"the deposit (for gas payment) of the account\"}},\"getDepositInfo(address)\":{\"returns\":{\"info\":\"- full deposit information of given account\"}},\"withdrawStake(address)\":{\"params\":{\"withdrawAddress\":\"the address to send withdrawn value.\"}},\"withdrawTo(address,uint256)\":{\"params\":{\"withdrawAddress\":\"the address to send withdrawn value.\",\"withdrawAmount\":\"the amount to withdraw.\"}}},\"version\":1},\"userdoc\":{\"events\":{\"StakeLocked(address,uint256,uint256)\":{\"notice\":\"Emitted when stake or unstake delay are modified\"},\"StakeUnlocked(address,uint256)\":{\"notice\":\"Emitted once a stake is scheduled for withdrawal\"}},\"kind\":\"user\",\"methods\":{\"addStake(uint32)\":{\"notice\":\"add to the account's stake - amount and delay any pending unstake is first cancelled.\"},\"depositTo(address)\":{\"notice\":\"add to the deposit of the given account\"},\"unlockStake()\":{\"notice\":\"attempt to unlock the stake. the value can be withdrawn (using withdrawStake) after the unstake delay.\"},\"withdrawStake(address)\":{\"notice\":\"withdraw from the (unlocked) stake. must first call unlockStake and wait for the unstakeDelay to pass\"},\"withdrawTo(address,uint256)\":{\"notice\":\"withdraw from the deposit.\"}},\"notice\":\"manage deposits and stakes. deposit is just a balance used to pay for UserOperations (either by a paymaster or an account) stake is value locked for at least \\\"unstakeDelay\\\" by the staked entity.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@account-abstraction/contracts/interfaces/IStakeManager.sol\":\"IStakeManager\"},\"evmVersion\":\"london\",\"libraries\":{\":__CACHE_BREAKER__\":\"0x00000000d41867734bbee4c6863d9255b2b06ac1\"},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@account-abstraction/contracts/interfaces/IStakeManager.sol\":{\"keccak256\":\"0xd227b02888cd4ac68daebcdfd992ec00f9fff66fa3b3bb16f656cd582fa3480f\",\"license\":\"GPL-3.0-only\",\"urls\":[\"bzz-raw://b389da4714a138be63704a576a482505eab2855e263b38a93706395d8d42e7c3\",\"dweb:/ipfs/QmeeAZpdHwUXxqP8pxA7GNtoCGBmmH4FaqLLwScVKGxtxZ\"]}},\"version\":1}","devdoc":{"kind":"dev","methods":{"addStake(uint32)":{"params":{"_unstakeDelaySec":"the new lock duration before the deposit can be withdrawn."}},"balanceOf(address)":{"returns":{"_0":"the deposit (for gas payment) of the account"}},"getDepositInfo(address)":{"returns":{"info":"- full deposit information of given account"}},"withdrawStake(address)":{"params":{"withdrawAddress":"the address to send withdrawn value."}},"withdrawTo(address,uint256)":{"params":{"withdrawAddress":"the address to send withdrawn value.","withdrawAmount":"the amount to withdraw."}}},"version":1},"userdoc":{"events":{"StakeLocked(address,uint256,uint256)":{"notice":"Emitted when stake or unstake delay are modified"},"StakeUnlocked(address,uint256)":{"notice":"Emitted once a stake is scheduled for withdrawal"}},"kind":"user","methods":{"addStake(uint32)":{"notice":"add to the account's stake - amount and delay any pending unstake is first cancelled."},"depositTo(address)":{"notice":"add to the deposit of the given account"},"unlockStake()":{"notice":"attempt to unlock the stake. the value can be withdrawn (using withdrawStake) after the unstake delay."},"withdrawStake(address)":{"notice":"withdraw from the (unlocked) stake. must first call unlockStake and wait for the unstakeDelay to pass"},"withdrawTo(address,uint256)":{"notice":"withdraw from the deposit."}},"notice":"manage deposits and stakes. deposit is just a balance used to pay for UserOperations (either by a paymaster or an account) stake is value locked for at least \"unstakeDelay\" by the staked entity.","version":1},"storageLayout":{"storage":[],"types":null},"evm":{"legacyAssembly":null,"assembly":null,"bytecode":null,"methodIdentifiers":{"addStake(uint32)":"0396cb60","balanceOf(address)":"70a08231","depositTo(address)":"b760faf9","getDepositInfo(address)":"5287ce12","unlockStake()":"bb9fe6bf","withdrawStake(address)":"c23a5cea","withdrawTo(address,uint256)":"205c2878"}},"irOptimized":""}},"@account-abstraction/contracts/interfaces/UserOperation.sol":{"UserOperationLib":{"abi":[],"metadata":{"optimizer_settings":"M3B3","solc_metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Utility functions helpful when working with UserOperation structs.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@account-abstraction/contracts/interfaces/UserOperation.sol\":\"UserOperationLib\"},\"evmVersion\":\"london\",\"libraries\":{\":__CACHE_BREAKER__\":\"0x00000000d41867734bbee4c6863d9255b2b06ac1\"},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@account-abstraction/contracts/core/Helpers.sol\":{\"keccak256\":\"0x591c87519f7155d1909210276b77925ab2722a99b7b5d5649aecc36ebbdb045a\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://69643e83f68e6a13d5075c7565bfce326673b0bd98c432033c4603ea84835746\",\"dweb:/ipfs/QmSwSzjYyV7qudi5vvsmzHMG2Z4YJZxX51RRXXVCLaNcEU\"]},\"@account-abstraction/contracts/interfaces/UserOperation.sol\":{\"keccak256\":\"0x61374003361059087fdcf17967a7bba052badeaf5c7f0ae689166f8aafd3a45c\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://6ff83c59432e733bf6304dda27cd4b0f34401917dd535e2669cc842d2d26568c\",\"dweb:/ipfs/QmPJbHU5TAjHqUTZzAcicEeG2nknmwCN43L4EW9LHbknTN\"]}},\"version\":1}","zk_version":"1.3.10"},"devdoc":{"kind":"dev","methods":{},"version":1},"userdoc":{"kind":"user","methods":{},"notice":"Utility functions helpful when working with UserOperation structs.","version":1},"storageLayout":{"storage":[],"types":null},"evm":{"legacyAssembly":null,"assembly":"\t.text\n\t.file\t\"UserOperation.sol:UserOperationLib\"\n\t.globl\t__entry\n__entry:\n.func_begin0:\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB0_2\n\tadd\t128, r0, r1\n\tst.1\t64, r1\n\tcontext.get_context_u128\tr1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_2\n\tadd\t32, r0, r1\n\tst.2\t256, r1\n\tst.2\t288, r0\n\tadd\t@CPI0_0[0], r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_2:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end0:\n\n\t.note.GNU-stack\n\t.rodata\nCPI0_0:\n\t.cell 53919893334301279589334030174039261352344891250716429051063678533632\n","bytecode":{"object":"00000001012001900000000c0000613d0000008001000039000000400010043f0000000001000416000000000110004c0000000c0000c13d00000020010000390000010000100443000001200000044300000005010000410000000f0001042e000000000100001900000010000104300000000e000004320000000f0001042e00000010000104300000000000000000000000000000000000000000000000000000000200000000000000000000000000000040000001000000000000000000c17d1579043443fb4f9aa39536a94a081a7d495f0e8eef1e548fb2c2dcf20574"},"methodIdentifiers":{}},"irOptimized":"/// @use-src 6:\"@account-abstraction/contracts/interfaces/UserOperation.sol\"\nobject \"UserOperationLib_813\" {\n    code {\n        {\n            /// @src 6:1630:3745  \"library UserOperationLib {...\"\n            let _1 := memoryguard(0x80)\n            mstore(64, _1)\n            if callvalue() { revert(0, 0) }\n            let _2 := datasize(\"UserOperationLib_813_deployed\")\n            codecopy(_1, dataoffset(\"UserOperationLib_813_deployed\"), _2)\n            setimmutable(_1, \"library_deploy_address\", address())\n            return(_1, _2)\n        }\n    }\n    /// @use-src 6:\"@account-abstraction/contracts/interfaces/UserOperation.sol\"\n    object \"UserOperationLib_813_deployed\" {\n        code {\n            {\n                /// @src 6:1630:3745  \"library UserOperationLib {...\"\n                revert(0, 0)\n            }\n        }\n        data \".metadata\" hex\"a26469706673582212202b73321341d47251b2b0ec798650211b21d2dfc725cb26194e969ee4053f89fa64736f6c63430008110033\"\n    }\n}\n","hash":"010000070d79b4f44b32327c7ad87f6718675298117df9bd974579522ff46780","factoryDependencies":{}}},"@openzeppelin/contracts/utils/Strings.sol":{"Strings":{"abi":[],"metadata":{"optimizer_settings":"M3B3","solc_metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"String operations.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Strings.sol\":\"Strings\"},\"evmVersion\":\"london\",\"libraries\":{\":__CACHE_BREAKER__\":\"0x00000000d41867734bbee4c6863d9255b2b06ac1\"},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0xa4d1d62251f8574deb032a35fc948386a9b4de74b812d4f545a1ac120486b48a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8c969013129ba9e651a20735ef659fef6d8a1139ea3607bd4b26ddea2d645634\",\"dweb:/ipfs/QmVhVa6LGuzAcB8qgDtVHRkucn4ihj5UZr8xBLcJkP6ucb\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa1e8e83cd0087785df04ac79fb395d9f3684caeaf973d9e2c71caef723a3a5d6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://33bbf48cc069be677705037ba7520c22b1b622c23b33e1a71495f2d36549d40b\",\"dweb:/ipfs/Qmct36zWXv3j7LZB83uwbg7TXwnZSN1fqHNDZ93GG98bGz\"]}},\"version\":1}","zk_version":"1.3.10"},"devdoc":{"details":"String operations.","kind":"dev","methods":{},"version":1},"userdoc":{"kind":"user","methods":{},"version":1},"storageLayout":{"storage":[],"types":null},"evm":{"legacyAssembly":null,"assembly":"\t.text\n\t.file\t\"Strings.sol:Strings\"\n\t.globl\t__entry\n__entry:\n.func_begin0:\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB0_2\n\tadd\t128, r0, r1\n\tst.1\t64, r1\n\tcontext.get_context_u128\tr1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_2\n\tadd\t32, r0, r1\n\tst.2\t256, r1\n\tst.2\t288, r0\n\tadd\t@CPI0_0[0], r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_2:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end0:\n\n\t.note.GNU-stack\n\t.rodata\nCPI0_0:\n\t.cell 53919893334301279589334030174039261352344891250716429051063678533632\n","bytecode":{"object":"00000001012001900000000c0000613d0000008001000039000000400010043f0000000001000416000000000110004c0000000c0000c13d00000020010000390000010000100443000001200000044300000005010000410000000f0001042e000000000100001900000010000104300000000e000004320000000f0001042e00000010000104300000000000000000000000000000000000000000000000000000000200000000000000000000000000000040000001000000000000000000a057a8ed974eb9146fe0805a49ca2c27a0083c4c01cc2dffb3659a2c7477a088"},"methodIdentifiers":{}},"irOptimized":"/// @use-src 7:\"@openzeppelin/contracts/utils/Strings.sol\"\nobject \"Strings_988\" {\n    code {\n        {\n            /// @src 7:188:2253  \"library Strings {...\"\n            let _1 := memoryguard(0x80)\n            mstore(64, _1)\n            if callvalue() { revert(0, 0) }\n            let _2 := datasize(\"Strings_988_deployed\")\n            codecopy(_1, dataoffset(\"Strings_988_deployed\"), _2)\n            setimmutable(_1, \"library_deploy_address\", address())\n            return(_1, _2)\n        }\n    }\n    /// @use-src 7:\"@openzeppelin/contracts/utils/Strings.sol\"\n    object \"Strings_988_deployed\" {\n        code {\n            {\n                /// @src 7:188:2253  \"library Strings {...\"\n                revert(0, 0)\n            }\n        }\n        data \".metadata\" hex\"a2646970667358221220214e2816e1da017e986e5c772c4297e7cb42a6652e9d9da4103d4bf5512a2a2364736f6c63430008110033\"\n    }\n}\n","hash":"0100000722b428ad8974941be4e372e9a84700716175e3fef4d8b9268b350b2c","factoryDependencies":{}}},"@openzeppelin/contracts/utils/cryptography/ECDSA.sol":{"ECDSA":{"abi":[],"metadata":{"optimizer_settings":"M3B3","solc_metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Elliptic Curve Digital Signature Algorithm (ECDSA) operations. These functions can be used to verify that a message was signed by the holder of the private keys of a given address.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":\"ECDSA\"},\"evmVersion\":\"london\",\"libraries\":{\":__CACHE_BREAKER__\":\"0x00000000d41867734bbee4c6863d9255b2b06ac1\"},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0xa4d1d62251f8574deb032a35fc948386a9b4de74b812d4f545a1ac120486b48a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8c969013129ba9e651a20735ef659fef6d8a1139ea3607bd4b26ddea2d645634\",\"dweb:/ipfs/QmVhVa6LGuzAcB8qgDtVHRkucn4ihj5UZr8xBLcJkP6ucb\"]},\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0xda898fa084aa1ddfdb346e6a40459e00a59d87071cce7c315a46d648dd71d0ba\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ce501a941f4aa1555c04dabb5e07992503bb6a9b32ff8f7cdcefdb4a742210cb\",\"dweb:/ipfs/QmeScPrUpdrGYs9BytV3Z5ZWJcBXtuAgCW4BLHua4xFUxx\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa1e8e83cd0087785df04ac79fb395d9f3684caeaf973d9e2c71caef723a3a5d6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://33bbf48cc069be677705037ba7520c22b1b622c23b33e1a71495f2d36549d40b\",\"dweb:/ipfs/Qmct36zWXv3j7LZB83uwbg7TXwnZSN1fqHNDZ93GG98bGz\"]}},\"version\":1}","zk_version":"1.3.10"},"devdoc":{"details":"Elliptic Curve Digital Signature Algorithm (ECDSA) operations. These functions can be used to verify that a message was signed by the holder of the private keys of a given address.","kind":"dev","methods":{},"version":1},"userdoc":{"kind":"user","methods":{},"version":1},"storageLayout":{"storage":[],"types":null},"evm":{"legacyAssembly":null,"assembly":"\t.text\n\t.file\t\"ECDSA.sol:ECDSA\"\n\t.globl\t__entry\n__entry:\n.func_begin0:\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB0_2\n\tadd\t128, r0, r1\n\tst.1\t64, r1\n\tcontext.get_context_u128\tr1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_2\n\tadd\t32, r0, r1\n\tst.2\t256, r1\n\tst.2\t288, r0\n\tadd\t@CPI0_0[0], r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_2:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end0:\n\n\t.note.GNU-stack\n\t.rodata\nCPI0_0:\n\t.cell 53919893334301279589334030174039261352344891250716429051063678533632\n","bytecode":{"object":"00000001012001900000000c0000613d0000008001000039000000400010043f0000000001000416000000000110004c0000000c0000c13d00000020010000390000010000100443000001200000044300000005010000410000000f0001042e000000000100001900000010000104300000000e000004320000000f0001042e00000010000104300000000000000000000000000000000000000000000000000000000200000000000000000000000000000040000001000000000000000000ce21eb7cc85881e028f53f7d29b32846fce03bc42c4cbe91f58dc66940eccb90"},"methodIdentifiers":{}},"irOptimized":"/// @use-src 8:\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\"\nobject \"ECDSA_1349\" {\n    code {\n        {\n            /// @src 8:369:8537  \"library ECDSA {...\"\n            let _1 := memoryguard(0x80)\n            mstore(64, _1)\n            if callvalue() { revert(0, 0) }\n            let _2 := datasize(\"ECDSA_1349_deployed\")\n            codecopy(_1, dataoffset(\"ECDSA_1349_deployed\"), _2)\n            setimmutable(_1, \"library_deploy_address\", address())\n            return(_1, _2)\n        }\n    }\n    /// @use-src 8:\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\"\n    object \"ECDSA_1349_deployed\" {\n        code {\n            {\n                /// @src 8:369:8537  \"library ECDSA {...\"\n                revert(0, 0)\n            }\n        }\n        data \".metadata\" hex\"a264697066735822122073788b86c0793b6784402ac2c5ee74e068d0e7609b8fd253e510ec64cb0524d464736f6c63430008110033\"\n    }\n}\n","hash":"01000007d7a0626467b4d8c478e32b589d02adf1422c9c7dcae0b71346a71f29","factoryDependencies":{}}},"@openzeppelin/contracts/utils/math/Math.sol":{"Math":{"abi":[],"metadata":{"optimizer_settings":"M3B3","solc_metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/Math.sol\":\"Math\"},\"evmVersion\":\"london\",\"libraries\":{\":__CACHE_BREAKER__\":\"0x00000000d41867734bbee4c6863d9255b2b06ac1\"},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa1e8e83cd0087785df04ac79fb395d9f3684caeaf973d9e2c71caef723a3a5d6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://33bbf48cc069be677705037ba7520c22b1b622c23b33e1a71495f2d36549d40b\",\"dweb:/ipfs/Qmct36zWXv3j7LZB83uwbg7TXwnZSN1fqHNDZ93GG98bGz\"]}},\"version\":1}","zk_version":"1.3.10"},"devdoc":{"details":"Standard math utilities missing in the Solidity language.","kind":"dev","methods":{},"version":1},"userdoc":{"kind":"user","methods":{},"version":1},"storageLayout":{"storage":[],"types":null},"evm":{"legacyAssembly":null,"assembly":"\t.text\n\t.file\t\"Math.sol:Math\"\n\t.globl\t__entry\n__entry:\n.func_begin0:\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB0_2\n\tadd\t128, r0, r1\n\tst.1\t64, r1\n\tcontext.get_context_u128\tr1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_2\n\tadd\t32, r0, r1\n\tst.2\t256, r1\n\tst.2\t288, r0\n\tadd\t@CPI0_0[0], r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_2:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end0:\n\n\t.note.GNU-stack\n\t.rodata\nCPI0_0:\n\t.cell 53919893334301279589334030174039261352344891250716429051063678533632\n","bytecode":{"object":"00000001012001900000000c0000613d0000008001000039000000400010043f0000000001000416000000000110004c0000000c0000c13d00000020010000390000010000100443000001200000044300000005010000410000000f0001042e000000000100001900000010000104300000000e000004320000000f0001042e00000010000104300000000000000000000000000000000000000000000000000000000200000000000000000000000000000040000001000000000000000000a69803788c3a610b1e9d48c6caade7f104cdc2295bfd1e0efdce6c722b63b2ec"},"methodIdentifiers":{}},"irOptimized":"/// @use-src 9:\"@openzeppelin/contracts/utils/math/Math.sol\"\nobject \"Math_2214\" {\n    code {\n        {\n            /// @src 9:202:12504  \"library Math {...\"\n            let _1 := memoryguard(0x80)\n            mstore(64, _1)\n            if callvalue() { revert(0, 0) }\n            let _2 := datasize(\"Math_2214_deployed\")\n            codecopy(_1, dataoffset(\"Math_2214_deployed\"), _2)\n            setimmutable(_1, \"library_deploy_address\", address())\n            return(_1, _2)\n        }\n    }\n    /// @use-src 9:\"@openzeppelin/contracts/utils/math/Math.sol\"\n    object \"Math_2214_deployed\" {\n        code {\n            {\n                /// @src 9:202:12504  \"library Math {...\"\n                revert(0, 0)\n            }\n        }\n        data \".metadata\" hex\"a2646970667358221220ef46be2fe9d199a6dc87b43a5b14a19af2919a3b7ad42b4977eb188052ecdae064736f6c63430008110033\"\n    }\n}\n","hash":"01000007f02d22540b7cb2290489a0263f660ba14fb3f81c1fe86e6a7ba00932","factoryDependencies":{}}},"contracts/smart-contract-wallet/BaseSmartAccount.sol":{"BaseSmartAccount":{"abi":[{"inputs":[{"internalType":"address","name":"caller","type":"address"}],"name":"CallerIsNotAnEntryPoint","type":"error"},{"inputs":[],"name":"entryPoint","outputs":[{"internalType":"contract IEntryPoint","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"components":[{"internalType":"address","name":"to","type":"address"},{"internalType":"enum Enum.Operation","name":"operation","type":"uint8"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"},{"internalType":"uint256","name":"targetTxGas","type":"uint256"}],"internalType":"struct Transaction","name":"_tx","type":"tuple"},{"components":[{"internalType":"uint256","name":"baseGas","type":"uint256"},{"internalType":"uint256","name":"gasPrice","type":"uint256"},{"internalType":"uint256","name":"tokenGasPriceFactor","type":"uint256"},{"internalType":"address","name":"gasToken","type":"address"},{"internalType":"address payable","name":"refundReceiver","type":"address"}],"internalType":"struct FeeRefund","name":"refundInfo","type":"tuple"},{"internalType":"bytes","name":"signatures","type":"bytes"}],"name":"execTransaction","outputs":[{"internalType":"bool","name":"success","type":"bool"}],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"address","name":"_owner","type":"address"},{"internalType":"address","name":"_handler","type":"address"}],"name":"init","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"nonce","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"components":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"nonce","type":"uint256"},{"internalType":"bytes","name":"initCode","type":"bytes"},{"internalType":"bytes","name":"callData","type":"bytes"},{"internalType":"uint256","name":"callGasLimit","type":"uint256"},{"internalType":"uint256","name":"verificationGasLimit","type":"uint256"},{"internalType":"uint256","name":"preVerificationGas","type":"uint256"},{"internalType":"uint256","name":"maxFeePerGas","type":"uint256"},{"internalType":"uint256","name":"maxPriorityFeePerGas","type":"uint256"},{"internalType":"bytes","name":"paymasterAndData","type":"bytes"},{"internalType":"bytes","name":"signature","type":"bytes"}],"internalType":"struct UserOperation","name":"userOp","type":"tuple"},{"internalType":"bytes32","name":"userOpHash","type":"bytes32"},{"internalType":"uint256","name":"missingAccountFunds","type":"uint256"}],"name":"validateUserOp","outputs":[{"internalType":"uint256","name":"validationData","type":"uint256"}],"stateMutability":"nonpayable","type":"function"}],"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"}],\"name\":\"CallerIsNotAnEntryPoint\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"entryPoint\",\"outputs\":[{\"internalType\":\"contract IEntryPoint\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"enum Enum.Operation\",\"name\":\"operation\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"targetTxGas\",\"type\":\"uint256\"}],\"internalType\":\"struct Transaction\",\"name\":\"_tx\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"baseGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"gasPrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenGasPriceFactor\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"gasToken\",\"type\":\"address\"},{\"internalType\":\"address payable\",\"name\":\"refundReceiver\",\"type\":\"address\"}],\"internalType\":\"struct FeeRefund\",\"name\":\"refundInfo\",\"type\":\"tuple\"},{\"internalType\":\"bytes\",\"name\":\"signatures\",\"type\":\"bytes\"}],\"name\":\"execTransaction\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_handler\",\"type\":\"address\"}],\"name\":\"init\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"nonce\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"initCode\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"callData\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"callGasLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"verificationGasLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"preVerificationGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxFeePerGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxPriorityFeePerGas\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"paymasterAndData\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"internalType\":\"struct UserOperation\",\"name\":\"userOp\",\"type\":\"tuple\"},{\"internalType\":\"bytes32\",\"name\":\"userOpHash\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"missingAccountFunds\",\"type\":\"uint256\"}],\"name\":\"validateUserOp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"validationData\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"CallerIsNotAnEntryPoint(address)\":[{\"params\":{\"caller\":\"address that tried to call onlyEntryPoint-protected method\"}}]},\"kind\":\"dev\",\"methods\":{\"execTransaction((address,uint8,uint256,bytes,uint256),(uint256,uint256,uint256,address,address),bytes)\":{\"details\":\"Gnosis style transaction with optional repay in native tokens OR ERC20Allows to execute a transaction confirmed by required signature/s and then pays the account that submitted the transaction.\",\"params\":{\"_tx\":\"Smart Account transaction\",\"refundInfo\":\"Required information for gas refunds\",\"signatures\":\"Packed signature/s data ({bytes32 r}{bytes32 s}{uint8 v})\"}},\"init(address,address)\":{\"details\":\"Initialize the Smart Account with required states\",\"params\":{\"_handler\":\"Default fallback handler provided in Smart Account\",\"_owner\":\"Signatory of the Smart Account\"}},\"nonce()\":{\"details\":\"This method returns the next sequential nonce.\",\"returns\":{\"_0\":\"nonce the account nonce.\"}}},\"version\":1},\"userdoc\":{\"errors\":{\"CallerIsNotAnEntryPoint(address)\":[{\"notice\":\"Throws at onlyEntryPoint when msg.sender is not an EntryPoint set for this Smart Account\"}]},\"kind\":\"user\",\"methods\":{\"entryPoint()\":{\"notice\":\"return the entryPoint used by this account. subclass should return the current entryPoint used by this account.\"},\"execTransaction((address,uint8,uint256,bytes,uint256),(uint256,uint256,uint256,address,address),bytes)\":{\"notice\":\"The fees are always transferred, even if the user transaction fails.\"},\"init(address,address)\":{\"notice\":\"devs need to make sure it is only callble once by initiazer or state check restrictions\"},\"nonce()\":{\"notice\":\"For a nonce of a specific key, use `entrypoint.getNonce(account, key)`\"},\"validateUserOp((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes),bytes32,uint256)\":{\"notice\":\"Validate user's signature and nonce. Subclass doesn't need to override this method. Instead, it should override the specific internal validation methods.\"}},\"notice\":\"Basic account implementation. This contract provides the basic logic for implementing the IAccount interface: validateUserOp function Specific account implementation should inherit it and provide the account-specific logic\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/smart-contract-wallet/BaseSmartAccount.sol\":\"BaseSmartAccount\"},\"evmVersion\":\"london\",\"libraries\":{\":__CACHE_BREAKER__\":\"0x00000000d41867734bbee4c6863d9255b2b06ac1\"},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@account-abstraction/contracts/core/Helpers.sol\":{\"keccak256\":\"0x591c87519f7155d1909210276b77925ab2722a99b7b5d5649aecc36ebbdb045a\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://69643e83f68e6a13d5075c7565bfce326673b0bd98c432033c4603ea84835746\",\"dweb:/ipfs/QmSwSzjYyV7qudi5vvsmzHMG2Z4YJZxX51RRXXVCLaNcEU\"]},\"@account-abstraction/contracts/interfaces/IAccount.sol\":{\"keccak256\":\"0x556a0e5980de18e90b115553ed502408155ba35f58642823010d9288047bc418\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://a0f420134b79596db8737173c7b933ae0a33059e107b6327c43aa40d4744a9e4\",\"dweb:/ipfs/QmRo8s1AhXmEMV7uPYnbpYwU19e9Bk6jmYBJTiPx3Fo85W\"]},\"@account-abstraction/contracts/interfaces/IAggregator.sol\":{\"keccak256\":\"0x060e9ddb0152250c269ba0640dc5753834ac44cf182a2837d508c0c529cae26a\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://20ed837bc5909c89ff1910246bf245a5dad6840aa939382e1694964eb7dbd37b\",\"dweb:/ipfs/QmTMybRq5yyghPDDs1ZCNAVB9sSJ4WHe6Q9mejuKPTAdNP\"]},\"@account-abstraction/contracts/interfaces/IEntryPoint.sol\":{\"keccak256\":\"0x3a90bf308819ed125fa4202f880999caff8a8686633b8ddb79a30ca240d5b8f8\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://d2d21cc92c2fdab2b58d21bc25d4cd0e8c284b922528a186b087b818d54bc6cf\",\"dweb:/ipfs/QmT1qrfuBjsv2rmRCDn8mgPXHp94hARJwzbcDuBLDTbFWd\"]},\"@account-abstraction/contracts/interfaces/INonceManager.sol\":{\"keccak256\":\"0x509871e6c63663cdcc3eba19920fe84e991f38b289b1377ac3c3a6d9f22d7e12\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://00fe21b4349b24c50df60e1a705179293982bd9e7a32b78d4bac9620f89e7fe2\",\"dweb:/ipfs/QmSFFYGfUwQbVa6hASjU7YxTvgi2HkfrPr4X5oPHscHg8b\"]},\"@account-abstraction/contracts/interfaces/IStakeManager.sol\":{\"keccak256\":\"0xd227b02888cd4ac68daebcdfd992ec00f9fff66fa3b3bb16f656cd582fa3480f\",\"license\":\"GPL-3.0-only\",\"urls\":[\"bzz-raw://b389da4714a138be63704a576a482505eab2855e263b38a93706395d8d42e7c3\",\"dweb:/ipfs/QmeeAZpdHwUXxqP8pxA7GNtoCGBmmH4FaqLLwScVKGxtxZ\"]},\"@account-abstraction/contracts/interfaces/UserOperation.sol\":{\"keccak256\":\"0x61374003361059087fdcf17967a7bba052badeaf5c7f0ae689166f8aafd3a45c\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://6ff83c59432e733bf6304dda27cd4b0f34401917dd535e2669cc842d2d26568c\",\"dweb:/ipfs/QmPJbHU5TAjHqUTZzAcicEeG2nknmwCN43L4EW9LHbknTN\"]},\"contracts/smart-contract-wallet/BaseSmartAccount.sol\":{\"keccak256\":\"0x59fbea0d532f8a11c3114613791e96e5412d109d78bdc39e46ad039aa8be6f5b\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://3b816aca2894404864952b8d180fa993d36abe08b0d587d6e7f236eb586444a4\",\"dweb:/ipfs/Qmb3fM6woAdtjDoTkAXC6bbcpfmp3Z3p7Kk3Cg919WQzH3\"]},\"contracts/smart-contract-wallet/common/Enum.sol\":{\"keccak256\":\"0x657464511d99c53126e008910b266875b299d6e328e105203cb53b6f467acdac\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://d31ced2b537c575f21e5d78989076ce76df8befb276d75c79cf64e44031ae527\",\"dweb:/ipfs/QmNh5E4sTYkphUs8P4rZ8WCQUkWZmjwAAyPzSr612rEs8C\"]},\"contracts/smart-contract-wallet/common/Errors.sol\":{\"keccak256\":\"0xef2989dcfc2aedddfd76865faa371b7cfb1e4e40592cc31d6d4151914f1a6aaa\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://8248d7e170d8ff5d67e62c2e0528e3700dfdc3f08eb6fa8a2a6d7c3c5fafee76\",\"dweb:/ipfs/QmbEpeNpBqHbu4Gx2nwGweynRJRoe5NdGCZZ64TPxRdn3X\"]}},\"version\":1}","devdoc":{"errors":{"CallerIsNotAnEntryPoint(address)":[{"params":{"caller":"address that tried to call onlyEntryPoint-protected method"}}]},"kind":"dev","methods":{"execTransaction((address,uint8,uint256,bytes,uint256),(uint256,uint256,uint256,address,address),bytes)":{"details":"Gnosis style transaction with optional repay in native tokens OR ERC20Allows to execute a transaction confirmed by required signature/s and then pays the account that submitted the transaction.","params":{"_tx":"Smart Account transaction","refundInfo":"Required information for gas refunds","signatures":"Packed signature/s data ({bytes32 r}{bytes32 s}{uint8 v})"}},"init(address,address)":{"details":"Initialize the Smart Account with required states","params":{"_handler":"Default fallback handler provided in Smart Account","_owner":"Signatory of the Smart Account"}},"nonce()":{"details":"This method returns the next sequential nonce.","returns":{"_0":"nonce the account nonce."}}},"version":1},"userdoc":{"errors":{"CallerIsNotAnEntryPoint(address)":[{"notice":"Throws at onlyEntryPoint when msg.sender is not an EntryPoint set for this Smart Account"}]},"kind":"user","methods":{"entryPoint()":{"notice":"return the entryPoint used by this account. subclass should return the current entryPoint used by this account."},"execTransaction((address,uint8,uint256,bytes,uint256),(uint256,uint256,uint256,address,address),bytes)":{"notice":"The fees are always transferred, even if the user transaction fails."},"init(address,address)":{"notice":"devs need to make sure it is only callble once by initiazer or state check restrictions"},"nonce()":{"notice":"For a nonce of a specific key, use `entrypoint.getNonce(account, key)`"},"validateUserOp((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes),bytes32,uint256)":{"notice":"Validate user's signature and nonce. Subclass doesn't need to override this method. Instead, it should override the specific internal validation methods."}},"notice":"Basic account implementation. This contract provides the basic logic for implementing the IAccount interface: validateUserOp function Specific account implementation should inherit it and provide the account-specific logic","version":1},"storageLayout":{"storage":[],"types":null},"evm":{"legacyAssembly":null,"assembly":null,"bytecode":null,"methodIdentifiers":{"entryPoint()":"b0d691fe","execTransaction((address,uint8,uint256,bytes,uint256),(uint256,uint256,uint256,address,address),bytes)":"fc7d3d79","init(address,address)":"f09a4016","nonce()":"affed0e0","validateUserOp((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes),bytes32,uint256)":"3a871cdd"}},"irOptimized":""}},"contracts/smart-contract-wallet/Proxy.sol":{"Proxy":{"abi":[{"inputs":[{"internalType":"address","name":"_implementation","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"stateMutability":"payable","type":"fallback"}],"metadata":{"optimizer_settings":"M3B3","solc_metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_implementation\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"}],\"devdoc\":{\"details\":\"Implementation address is stored in the slot defined by the Proxy's address\",\"kind\":\"dev\",\"methods\":{},\"title\":\"Proxy // This is the user's Smart Account\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Basic proxy that delegates all calls to a fixed implementation contract.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/smart-contract-wallet/Proxy.sol\":\"Proxy\"},\"evmVersion\":\"london\",\"libraries\":{\":__CACHE_BREAKER__\":\"0x00000000d41867734bbee4c6863d9255b2b06ac1\"},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"contracts/smart-contract-wallet/Proxy.sol\":{\"keccak256\":\"0x90f1f586b929825cbda2d743080fafc42fb5ef478a3d44ae60bb2803a9a46705\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://433c8e9766083a74ac6768dbef3b32365363e346b5d3431563819bdf72f0b62d\",\"dweb:/ipfs/QmcqrZpoHUMCmEcznCvDNEir17Eb8WVvYuGUpYvNE2UTSR\"]}},\"version\":1}","zk_version":"1.3.10"},"devdoc":{"details":"Implementation address is stored in the slot defined by the Proxy's address","kind":"dev","methods":{},"title":"Proxy // This is the user's Smart Account","version":1},"userdoc":{"kind":"user","methods":{},"notice":"Basic proxy that delegates all calls to a fixed implementation contract.","version":1},"storageLayout":{"storage":[],"types":null},"evm":{"legacyAssembly":null,"assembly":"\t.text\n\t.file\t\"Proxy.sol:Proxy\"\n\t.globl\t__entry\n__entry:\n.func_begin0:\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, r4\n\tptr.add\tr1, r4, stack[@ptr_return_data]\n\tptr.add\tr1, r0, stack[@ptr_calldata]\n\tand\t@CPI0_0[0], r3, stack[@calldatasize]\n\tadd\t0, r0, stack[@returndatasize]\n\tand!\t1, r2, r1\n\tjump.ne\t@.BB0_1\n\tadd\t128, r0, r1\n\tst.1\t64, r1\n\tptr.add\tstack[@ptr_calldata], r0, r1\n\tcontext.this\tr2\n\tsload\tr2, r2\n\tadd\tstack[@calldatasize], r0, r3\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r3\n\tjump.eq\t@.BB0_32\n\tadd\tr0, r0, r5\n.BB0_16:\n\tshl.s\t5, r5, r6\n\tptr.add\tr1, r6, r7\n\tld\tr7, r7\n\tst.1\tr6, r7\n\tadd\t1, r5, r5\n\tsub!\tr5, r3, r6\n\tjump.lt\t@.BB0_16\n.BB0_32:\n\tsub.s!\t0, r4, r5\n\tjump.eq\t@.BB0_18\n\tshl.s\t3, r4, r4\n\tshl.s\t5, r3, r3\n\tld.1\tr3, r5\n\tshl\tr5, r4, r5\n\tshr\tr5, r4, r5\n\tptr.add\tr1, r3, r1\n\tld\tr1, r1\n\tsub\t256, r4, r4\n\tshr\tr1, r4, r1\n\tshl\tr1, r4, r1\n\tor\tr1, r5, r1\n\tst.1\tr3, r1\n.BB0_18:\n\tadd\tstack[@calldatasize], r0, r1\n\tcontext.gas_left\tr3\n\tsub.s!\t4, r2, r4\n\tjump.ne\t@.BB0_23\n\tptr.add\tstack[@ptr_return_data], r0, r1\n\tadd\tstack[@returndatasize], r0, r2\n\tand\t31, r2, r3\n\tshr.s!\t5, r2, r2\n\tjump.eq\t@.BB0_30\n\tadd\tr0, r0, r4\n.BB0_21:\n\tshl.s\t5, r4, r5\n\tptr.add\tr1, r5, r6\n\tld\tr6, r6\n\tst.1\tr5, r6\n\tadd\t1, r4, r4\n\tsub!\tr4, r2, r5\n\tjump.lt\t@.BB0_21\n.BB0_30:\n\tsub.s!\t0, r3, r4\n\tjump.eq\t@.BB0_29\n\tshl.s\t3, r3, r3\n\tshl.s\t5, r2, r2\n\tld.1\tr2, r4\n\tshl\tr4, r3, r4\n\tshr\tr4, r3, r4\n\tptr.add\tr1, r2, r1\n\tld\tr1, r1\n\tsub\t256, r3, r3\n\tshr\tr1, r3, r1\n\tshl\tr1, r3, r1\n\tor\tr1, r4, r1\n\tst.1\tr2, r1\n\tjump\t@.BB0_29\n.BB0_1:\n\tcontext.get_context_u128\tr1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_2\n\tadd\tstack[@calldatasize], r0, r1\n\tadd\t159, r1, r2\n\tsub.s\t32, r0, r3\n\tand\tr2, r3, r2\n\tsub.s!\t@CPI0_1[0], r2, r3\n\tjump.lt\t@.BB0_5\n\tadd\t@CPI0_8[0], r0, r1\n\tst.1\t0, r1\n\tadd\t65, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI0_9[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_23:\n\tadd\t@CPI0_0[0], r0, r4\n\tsub.s!\t@CPI0_0[0], r3, r5\n\tadd.ge\tr4, r0, r3\n\tshl.s\t192, r3, r3\n\tshl.s\t96, r1, r1\n\tadd\tr3, r1, r1\n\tnear_call\tr0, @__delegatecall, @DEFAULT_UNWIND\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r4\n\tand\t31, r4, r3\n\tand\t@CPI0_0[0], r4, stack[@returndatasize]\n\tand\t@CPI0_0[0], r4, r4\n\tshr.s!\t5, r4, r4\n\tjump.eq\t@.BB0_31\n\tadd\tr0, r0, r5\n.BB0_25:\n\tshl.s\t5, r5, r6\n\tptr.add\tr1, r6, r7\n\tld\tr7, r7\n\tst.1\tr6, r7\n\tadd\t1, r5, r5\n\tsub!\tr5, r4, r6\n\tjump.lt\t@.BB0_25\n.BB0_31:\n\tsub.s!\t0, r3, r5\n\tjump.eq\t@.BB0_27\n\tshl.s\t3, r3, r3\n\tshl.s\t5, r4, r4\n\tld.1\tr4, r5\n\tshl\tr5, r3, r5\n\tshr\tr5, r3, r5\n\tptr.add\tr1, r4, r1\n\tld\tr1, r1\n\tsub\t256, r3, r3\n\tshr\tr1, r3, r1\n\tshl\tr1, r3, r1\n\tor\tr1, r5, r1\n\tst.1\tr4, r1\n.BB0_27:\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB0_28\n.BB0_29:\n\tadd\t96, r0, r1\n\tshl\tstack[@returndatasize], r1, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_5:\n\tst.1\t64, r2\n\tand\t31, r1, r2\n\tptr.add\tstack[@ptr_calldata], r0, r3\n\tshr.s!\t5, r1, r4\n\tjump.eq\t@.BB0_33\n\tadd\tr0, r0, r5\n.BB0_7:\n\tshl.s\t5, r5, r6\n\tptr.add\tr3, r6, r7\n\tld\tr7, r7\n\tadd\t128, r6, r6\n\tst.1\tr6, r7\n\tadd\t1, r5, r5\n\tsub!\tr5, r4, r6\n\tjump.lt\t@.BB0_7\n.BB0_33:\n\tsub.s!\t0, r2, r5\n\tjump.eq\t@.BB0_9\n\tshl.s\t5, r4, r4\n\tptr.add\tr3, r4, r3\n\tshl.s\t3, r2, r2\n\tadd\t128, r4, r4\n\tld.1\tr4, r5\n\tshl\tr5, r2, r5\n\tshr\tr5, r2, r5\n\tld\tr3, r3\n\tsub\t256, r2, r2\n\tshr\tr3, r2, r3\n\tshl\tr3, r2, r2\n\tor\tr2, r5, r2\n\tst.1\tr4, r2\n.BB0_9:\n\tadd\t@CPI0_2[0], r0, r2\n\tsub.s!\t32, r1, r3\n\tadd\t0, r0, r3\n\tadd.lt\tr2, r0, r3\n\tand\t@CPI0_2[0], r1, r1\n\tsub.s!\t0, r1, r4\n\tadd.le\t0, r0, r2\n\tsub.s!\t@CPI0_2[0], r1, r1\n\tadd\tr3, r0, r1\n\tadd.eq\tr2, r0, r1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_2\n\tld.1\t128, r1\n\tsub.s!\t@CPI0_3[0], r1, r2\n\tjump.le\t@.BB0_11\n.BB0_2:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_28:\n\tadd\t96, r0, r1\n\tshl\tstack[@returndatasize], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_11:\n\tsub.s!\t0, r1, r2\n\tjump.ne\t@.BB0_13\n\tld.1\t64, r1\n\tadd\t68, r1, r2\n\tadd\t@CPI0_5[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t30, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI0_6[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI0_0[0], r0, r2\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI0_7[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_13:\n\tcontext.this\tr2\n\tsstore\tr2, r1\n\tadd\t32, r0, r1\n\tst.2\t256, r1\n\tst.2\t288, r0\n\tadd\t@CPI0_4[0], r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.func_end0:\n\n__delegatecall:\n.func_begin1:\n.tmp0:\n\tfar_call.delegate\tr1, r2, @.BB1_2\n.tmp1:\n\tadd\t1, r0, r2\n\tret\n.BB1_2:\n.tmp2:\n\tadd\tr0, r0, r2\n\tret\n.func_end1:\n\n\t.data\n\t.p2align\t5\ncalldatasize:\n\t.cell 0\n\n\t.p2align\t5\nreturndatasize:\n\t.cell 0\n\n\t.p2align\t5\nptr_calldata:\n.cell\t0\n\n\t.p2align\t5\nptr_return_data:\n.cell\t0\n\n\t.note.GNU-stack\n\t.rodata\nCPI0_0:\n\t.cell 4294967295\nCPI0_1:\n\t.cell 18446744073709551616\nCPI0_2:\n\t.cell -57896044618658097711785492504343953926634992332820282019728792003956564819968\nCPI0_3:\n\t.cell 1461501637330902918203684832716283019655932542975\nCPI0_4:\n\t.cell 53919893334301279589334030174039261352344891250716429051063678533632\nCPI0_5:\n\t.cell 33214008156304899519736417753363660178547698374393523799449448842728842657792\nCPI0_6:\n\t.cell 3963877391197344453575983046348115674221700746820753546331534351508065746944\nCPI0_7:\n\t.cell 7922816251426433759354395033600\nCPI0_8:\n\t.cell 35408467139433450592217433187231851964531694900788300625387963629091585785856\nCPI0_9:\n\t.cell 2852213850513516153367582212096\n","bytecode":{"object":"000400000000000200000000030100190000006003300270000000360430019700030000004103550002000000010355000000360030019d000100000000001f0000000101200190000000490000c13d0000008001000039000000400010043f00000002010003670000000002000410000000000202041a00000000030000310000001f0430018f00000005033002720000001b0000613d00000000050000190000000506500210000000000761034f000000000707043b00000000007604350000000105500039000000000635004b000000140000413d000000000540004c000000290000613d00000003044002100000000503300210000000000503043300000000054501cf000000000545022f000000000131034f000000000101043b0000010004400089000000000141022f00000000014101cf000000000151019f000000000013043500000000010000310000000003000414000000040420008c000000580000c13d000000030100036700000001020000310000001f0320018f00000005022002720000003a0000613d00000000040000190000000505400210000000000651034f000000000606043b00000000006504350000000104400039000000000524004b000000330000413d000000000430004c0000007f0000613d00000003033002100000000502200210000000000402043300000000043401cf000000000434022f000000000121034f000000000101043b0000010003300089000000000131022f00000000013101cf000000000141019f00000000001204350000007f0000013d0000000001000416000000000110004c000000ae0000c13d00000000010000310000009f02100039000000200300008a000000000232016f000000370320009c000000820000413d0000003e0100004100000000001004350000004101000039000000040010043f0000003f01000041000000d5000104300000003604000041000000360530009c0000000003048019000000c0033002100000006001100210000000000113001900d300ce0000040f0003000000010355000000000301001900000060043002700000001f0340018f000100360040019d000000360440019700000005044002720000006f0000613d00000000050000190000000506500210000000000761034f000000000707043b00000000007604350000000105500039000000000645004b000000680000413d000000000530004c0000007d0000613d00000003033002100000000504400210000000000504043300000000053501cf000000000535022f000000000141034f000000000101043b0000010003300089000000000131022f00000000013101cf000000000151019f00000000001404350000000101200190000000b00000613d000000600100003900000001011001ff000000d40001042e000000400020043f0000001f0210018f00000002030003670000000504100272000000900000613d00000000050000190000000506500210000000000763034f000000000707043b000000800660003900000000007604350000000105500039000000000645004b000000880000413d000000000520004c0000009f0000613d0000000504400210000000000343034f00000003022002100000008004400039000000000504043300000000052501cf000000000525022f000000000303043b0000010002200089000000000323022f00000000022301cf000000000252019f00000000002404350000003802000041000000200310008c000000000300001900000000030240190000003801100197000000000410004c000000000200a019000000380110009c00000000010300190000000001026019000000000110004c000000ae0000c13d000000800100043d000000390210009c000000b30000a13d0000000001000019000000d500010430000000600100003900000001011001ff000000d500010430000000000210004c000000c70000c13d000000400100043d00000044021000390000003b03000041000000000032043500000024021000390000001e0300003900000000003204350000003c0200004100000000002104350000000402100039000000200300003900000000003204350000003602000041000000360310009c000000000102801900000040011002100000003d011001c7000000d5000104300000000002000410000000000012041b0000002001000039000001000010044300000120000004430000003a01000041000000d40001042e000000d1002104250000000102000039000000000001042d0000000002000019000000000001042d000000d300000432000000d40001042e000000d5000104300000000000000000000000000000000000000000000000000000000000000000000000000000000000000000ffffffff00000000000000000000000000000000000000000000000100000000000000008000000000000000000000000000000000000000000000000000000000000000000000000000000000000000ffffffffffffffffffffffffffffffffffffffff0000000200000000000000000000000000000040000001000000000000000000496e76616c696420696d706c656d656e746174696f6e2061646472657373000008c379a00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000640000000000000000000000004e487b71000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000024000000000000000000000000e773af98a25710bc0fbd4f4f09161dd7673beb2c4a462ae5d6d2a772a1dfc811"},"methodIdentifiers":{}},"irOptimized":"/// @use-src 11:\"contracts/smart-contract-wallet/Proxy.sol\"\nobject \"Proxy_2430\" {\n    code {\n        {\n            /// @src 11:288:1154  \"contract Proxy {...\"\n            let _1 := memoryguard(0x80)\n            if callvalue() { revert(0, 0) }\n            let programSize := datasize(\"Proxy_2430\")\n            let argSize := sub(codesize(), programSize)\n            let newFreePtr := add(_1, and(add(argSize, 31), not(31)))\n            if or(gt(newFreePtr, sub(shl(64, 1), 1)), lt(newFreePtr, _1))\n            {\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 11:288:1154  \"contract Proxy {...\" */ shl(224, 0x4e487b71))\n                mstore(4, 0x41)\n                revert(/** @src -1:-1:-1 */ 0, /** @src 11:288:1154  \"contract Proxy {...\" */ 0x24)\n            }\n            mstore(64, newFreePtr)\n            codecopy(_1, programSize, argSize)\n            if slt(sub(add(_1, argSize), _1), 32)\n            {\n                revert(/** @src -1:-1:-1 */ 0, 0)\n            }\n            /// @src 11:288:1154  \"contract Proxy {...\"\n            let value := mload(_1)\n            let _2 := and(value, sub(shl(160, 1), 1))\n            if iszero(eq(value, _2))\n            {\n                revert(/** @src -1:-1:-1 */ 0, 0)\n            }\n            /// @src 11:288:1154  \"contract Proxy {...\"\n            if /** @src 11:377:406  \"_implementation != address(0)\" */ iszero(/** @src 11:288:1154  \"contract Proxy {...\" */ _2)\n            {\n                let memPtr := mload(64)\n                mstore(memPtr, shl(229, 4594637))\n                mstore(add(memPtr, 4), 32)\n                mstore(add(memPtr, 36), 30)\n                mstore(add(memPtr, 68), \"Invalid implementation address\")\n                revert(memPtr, 100)\n            }\n            /// @src 11:528:595  \"assembly {...\"\n            sstore(address(), value)\n            /// @src 11:288:1154  \"contract Proxy {...\"\n            let _3 := mload(64)\n            let _4 := datasize(\"Proxy_2430_deployed\")\n            codecopy(_3, dataoffset(\"Proxy_2430_deployed\"), _4)\n            return(_3, _4)\n        }\n    }\n    /// @use-src 11:\"contracts/smart-contract-wallet/Proxy.sol\"\n    object \"Proxy_2430_deployed\" {\n        code {\n            {\n                /// @src 11:288:1154  \"contract Proxy {...\"\n                mstore(64, 128)\n                /// @src 11:725:1146  \"assembly {...\"\n                let var_target := sload(address())\n                /// @src -1:-1:-1\n                let _1 := 0\n                /// @src 11:725:1146  \"assembly {...\"\n                calldatacopy(/** @src -1:-1:-1 */ _1, _1, /** @src 11:725:1146  \"assembly {...\" */ calldatasize())\n                let usr$result := delegatecall(gas(), var_target, /** @src -1:-1:-1 */ _1, /** @src 11:725:1146  \"assembly {...\" */ calldatasize(), /** @src -1:-1:-1 */ _1, _1)\n                /// @src 11:725:1146  \"assembly {...\"\n                returndatacopy(/** @src -1:-1:-1 */ _1, _1, /** @src 11:725:1146  \"assembly {...\" */ returndatasize())\n                switch usr$result\n                case 0 {\n                    revert(/** @src -1:-1:-1 */ _1, /** @src 11:725:1146  \"assembly {...\" */ returndatasize())\n                }\n                default {\n                    return(/** @src -1:-1:-1 */ _1, /** @src 11:725:1146  \"assembly {...\" */ returndatasize())\n                }\n            }\n        }\n        data \".metadata\" hex\"a26469706673582212209930b9524191608295fed5719e760e81a0ae63f6e3a529e53caa1208e58fe7f864736f6c63430008110033\"\n    }\n}\n","hash":"0100004183928552137bb299e683df59b5c4644944861ff209e8262bed10426e","factoryDependencies":{}}},"contracts/smart-contract-wallet/SmartAccount.sol":{"SmartAccount":{"abi":[{"inputs":[{"internalType":"contract IEntryPoint","name":"anEntryPoint","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[{"internalType":"address","name":"smartAccount","type":"address"}],"name":"AlreadyInitialized","type":"error"},{"inputs":[],"name":"BaseImplementationCannotBeZero","type":"error"},{"inputs":[{"internalType":"address","name":"caller","type":"address"}],"name":"CallerIsNotAnEntryPoint","type":"error"},{"inputs":[{"internalType":"address","name":"caller","type":"address"}],"name":"CallerIsNotEntryPointOrOwner","type":"error"},{"inputs":[{"internalType":"address","name":"caller","type":"address"}],"name":"CallerIsNotOwner","type":"error"},{"inputs":[{"internalType":"address","name":"caller","type":"address"}],"name":"CallerIsNotSelf","type":"error"},{"inputs":[{"internalType":"uint256","name":"targetTxGas","type":"uint256"},{"internalType":"uint256","name":"gasPrice","type":"uint256"},{"internalType":"bool","name":"success","type":"bool"}],"name":"CanNotEstimateGas","type":"error"},{"inputs":[],"name":"DelegateCallsOnly","type":"error"},{"inputs":[],"name":"EntryPointCannotBeZero","type":"error"},{"inputs":[],"name":"ExecutionFailed","type":"error"},{"inputs":[],"name":"HandlerCannotBeZero","type":"error"},{"inputs":[{"internalType":"address","name":"implementationAddress","type":"address"}],"name":"InvalidImplementation","type":"error"},{"inputs":[{"internalType":"address","name":"restoredSigner","type":"address"},{"internalType":"address","name":"expectedSigner","type":"address"}],"name":"InvalidSignature","type":"error"},{"inputs":[{"internalType":"address","name":"caller","type":"address"}],"name":"MixedAuthFail","type":"error"},{"inputs":[{"internalType":"address","name":"module","type":"address"}],"name":"ModuleAlreadyEnabled","type":"error"},{"inputs":[{"internalType":"address","name":"expectedModule","type":"address"},{"internalType":"address","name":"returnedModule","type":"address"},{"internalType":"address","name":"prevModule","type":"address"}],"name":"ModuleAndPrevModuleMismatch","type":"error"},{"inputs":[{"internalType":"address","name":"module","type":"address"}],"name":"ModuleCannotBeZeroOrSentinel","type":"error"},{"inputs":[{"internalType":"address","name":"module","type":"address"}],"name":"ModuleNotEnabled","type":"error"},{"inputs":[],"name":"ModulesAlreadyInitialized","type":"error"},{"inputs":[],"name":"ModulesSetupExecutionFailed","type":"error"},{"inputs":[{"internalType":"uint256","name":"gasLeft","type":"uint256"},{"internalType":"uint256","name":"gasRequired","type":"uint256"}],"name":"NotEnoughGasLeft","type":"error"},{"inputs":[],"name":"OwnerCanNotBeSelf","type":"error"},{"inputs":[],"name":"OwnerCannotBeZero","type":"error"},{"inputs":[],"name":"OwnerProvidedIsSame","type":"error"},{"inputs":[],"name":"ReentrancyProtectionActivated","type":"error"},{"inputs":[],"name":"TokenGasPriceFactorCanNotBeZero","type":"error"},{"inputs":[{"internalType":"address","name":"token","type":"address"},{"internalType":"address","name":"dest","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"TokenTransferFailed","type":"error"},{"inputs":[],"name":"TransferToZeroAddressAttempt","type":"error"},{"inputs":[{"internalType":"uint256","name":"destLength","type":"uint256"},{"internalType":"uint256","name":"valueLength","type":"uint256"},{"internalType":"uint256","name":"funcLength","type":"uint256"}],"name":"WrongBatchProvided","type":"error"},{"inputs":[{"internalType":"bytes","name":"contractSignature","type":"bytes"}],"name":"WrongContractSignature","type":"error"},{"inputs":[{"internalType":"uint256","name":"uintS","type":"uint256"},{"internalType":"uint256","name":"contractSignatureLength","type":"uint256"},{"internalType":"uint256","name":"signatureLength","type":"uint256"}],"name":"WrongContractSignatureFormat","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"txHash","type":"bytes32"},{"indexed":true,"internalType":"uint256","name":"payment","type":"uint256"}],"name":"AccountHandlePayment","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousHandler","type":"address"},{"indexed":true,"internalType":"address","name":"handler","type":"address"}],"name":"ChangedFallbackHandler","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"module","type":"address"}],"name":"DisabledModule","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"_scw","type":"address"},{"indexed":true,"internalType":"address","name":"_oldEOA","type":"address"},{"indexed":true,"internalType":"address","name":"_newEOA","type":"address"}],"name":"EOAChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"module","type":"address"}],"name":"EnabledModule","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"value","type":"uint256"},{"indexed":true,"internalType":"bytes","name":"data","type":"bytes"},{"indexed":false,"internalType":"enum Enum.Operation","name":"operation","type":"uint8"},{"indexed":false,"internalType":"uint256","name":"txGas","type":"uint256"}],"name":"ExecutionFailure","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"module","type":"address"}],"name":"ExecutionFromModuleFailure","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"module","type":"address"}],"name":"ExecutionFromModuleSuccess","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"value","type":"uint256"},{"indexed":true,"internalType":"bytes","name":"data","type":"bytes"},{"indexed":false,"internalType":"enum Enum.Operation","name":"operation","type":"uint8"},{"indexed":false,"internalType":"uint256","name":"txGas","type":"uint256"}],"name":"ExecutionSuccess","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"oldImplementation","type":"address"},{"indexed":true,"internalType":"address","name":"newImplementation","type":"address"}],"name":"ImplementationUpdated","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"module","type":"address"},{"indexed":false,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"},{"indexed":false,"internalType":"bytes","name":"data","type":"bytes"},{"indexed":false,"internalType":"enum Enum.Operation","name":"operation","type":"uint8"}],"name":"ModuleTransaction","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"sender","type":"address"},{"indexed":true,"internalType":"uint256","name":"value","type":"uint256"}],"name":"SmartAccountReceivedNativeToken","type":"event"},{"stateMutability":"nonpayable","type":"fallback"},{"inputs":[],"name":"VERSION","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"addDeposit","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"dataHash","type":"bytes32"},{"internalType":"bytes","name":"signatures","type":"bytes"}],"name":"checkSignatures","outputs":[],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"prevModule","type":"address"},{"internalType":"address","name":"module","type":"address"}],"name":"disableModule","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"domainSeparator","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"module","type":"address"}],"name":"enableModule","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"components":[{"internalType":"address","name":"to","type":"address"},{"internalType":"enum Enum.Operation","name":"operation","type":"uint8"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"},{"internalType":"uint256","name":"targetTxGas","type":"uint256"}],"internalType":"struct Transaction","name":"_tx","type":"tuple"},{"components":[{"internalType":"uint256","name":"baseGas","type":"uint256"},{"internalType":"uint256","name":"gasPrice","type":"uint256"},{"internalType":"uint256","name":"tokenGasPriceFactor","type":"uint256"},{"internalType":"address","name":"gasToken","type":"address"},{"internalType":"address payable","name":"refundReceiver","type":"address"}],"internalType":"struct FeeRefund","name":"refundInfo","type":"tuple"},{"internalType":"uint256","name":"_nonce","type":"uint256"}],"name":"encodeTransactionData","outputs":[{"internalType":"bytes","name":"","type":"bytes"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"entryPoint","outputs":[{"internalType":"contract IEntryPoint","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"components":[{"internalType":"address","name":"to","type":"address"},{"internalType":"enum Enum.Operation","name":"operation","type":"uint8"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"},{"internalType":"uint256","name":"targetTxGas","type":"uint256"}],"internalType":"struct Transaction","name":"_tx","type":"tuple"},{"components":[{"internalType":"uint256","name":"baseGas","type":"uint256"},{"internalType":"uint256","name":"gasPrice","type":"uint256"},{"internalType":"uint256","name":"tokenGasPriceFactor","type":"uint256"},{"internalType":"address","name":"gasToken","type":"address"},{"internalType":"address payable","name":"refundReceiver","type":"address"}],"internalType":"struct FeeRefund","name":"refundInfo","type":"tuple"},{"internalType":"bytes","name":"signatures","type":"bytes"}],"name":"execTransaction","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"},{"internalType":"enum Enum.Operation","name":"operation","type":"uint8"}],"name":"execTransactionFromModule","outputs":[{"internalType":"bool","name":"success","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"},{"internalType":"enum Enum.Operation","name":"operation","type":"uint8"}],"name":"execTransactionFromModuleReturnData","outputs":[{"internalType":"bool","name":"success","type":"bool"},{"internalType":"bytes","name":"returnData","type":"bytes"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"components":[{"internalType":"address","name":"to","type":"address"},{"internalType":"enum Enum.Operation","name":"operation","type":"uint8"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"},{"internalType":"uint256","name":"targetTxGas","type":"uint256"}],"internalType":"struct Transaction","name":"_tx","type":"tuple"},{"components":[{"internalType":"uint256","name":"baseGas","type":"uint256"},{"internalType":"uint256","name":"gasPrice","type":"uint256"},{"internalType":"uint256","name":"tokenGasPriceFactor","type":"uint256"},{"internalType":"address","name":"gasToken","type":"address"},{"internalType":"address payable","name":"refundReceiver","type":"address"}],"internalType":"struct FeeRefund","name":"refundInfo","type":"tuple"},{"internalType":"bytes","name":"signatures","type":"bytes"}],"name":"execTransaction_S6W","outputs":[{"internalType":"bool","name":"success","type":"bool"}],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"address[]","name":"dest","type":"address[]"},{"internalType":"uint256[]","name":"value","type":"uint256[]"},{"internalType":"bytes[]","name":"func","type":"bytes[]"}],"name":"executeBatchCall","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address[]","name":"dest","type":"address[]"},{"internalType":"uint256[]","name":"value","type":"uint256[]"},{"internalType":"bytes[]","name":"func","type":"bytes[]"}],"name":"executeBatchCall_4by","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"dest","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"bytes","name":"func","type":"bytes"}],"name":"executeCall","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"dest","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"bytes","name":"func","type":"bytes"}],"name":"executeCall_s1m","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"getChainId","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getDeposit","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getFallbackHandler","outputs":[{"internalType":"address","name":"_handler","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getImplementation","outputs":[{"internalType":"address","name":"_implementation","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"start","type":"address"},{"internalType":"uint256","name":"pageSize","type":"uint256"}],"name":"getModulesPaginated","outputs":[{"internalType":"address[]","name":"array","type":"address[]"},{"internalType":"address","name":"next","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"batchId","type":"uint256"}],"name":"getNonce","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"},{"internalType":"enum Enum.Operation","name":"operation","type":"uint8"},{"internalType":"uint256","name":"targetTxGas","type":"uint256"},{"internalType":"uint256","name":"baseGas","type":"uint256"},{"internalType":"uint256","name":"gasPrice","type":"uint256"},{"internalType":"uint256","name":"tokenGasPriceFactor","type":"uint256"},{"internalType":"address","name":"gasToken","type":"address"},{"internalType":"address payable","name":"refundReceiver","type":"address"},{"internalType":"uint256","name":"_nonce","type":"uint256"}],"name":"getTransactionHash","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"gasUsed","type":"uint256"},{"internalType":"uint256","name":"baseGas","type":"uint256"},{"internalType":"uint256","name":"gasPrice","type":"uint256"},{"internalType":"uint256","name":"tokenGasPriceFactor","type":"uint256"},{"internalType":"address","name":"gasToken","type":"address"},{"internalType":"address payable","name":"refundReceiver","type":"address"}],"name":"handlePaymentRevert","outputs":[{"internalType":"uint256","name":"requiredGas","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_owner","type":"address"},{"internalType":"address","name":"_handler","type":"address"}],"name":"init","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"module","type":"address"}],"name":"isModuleEnabled","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"_dataHash","type":"bytes32"},{"internalType":"bytes","name":"_signature","type":"bytes"}],"name":"isValidSignature","outputs":[{"internalType":"bytes4","name":"","type":"bytes4"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"nonce","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"nonces","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"token","type":"address"},{"internalType":"address","name":"dest","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"pullTokens","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"},{"internalType":"enum Enum.Operation","name":"operation","type":"uint8"}],"name":"requiredTxGas","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"handler","type":"address"}],"name":"setFallbackHandler","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_newOwner","type":"address"}],"name":"setOwner","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"_interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address payable","name":"dest","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_implementation","type":"address"}],"name":"updateImplementation","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"components":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"nonce","type":"uint256"},{"internalType":"bytes","name":"initCode","type":"bytes"},{"internalType":"bytes","name":"callData","type":"bytes"},{"internalType":"uint256","name":"callGasLimit","type":"uint256"},{"internalType":"uint256","name":"verificationGasLimit","type":"uint256"},{"internalType":"uint256","name":"preVerificationGas","type":"uint256"},{"internalType":"uint256","name":"maxFeePerGas","type":"uint256"},{"internalType":"uint256","name":"maxPriorityFeePerGas","type":"uint256"},{"internalType":"bytes","name":"paymasterAndData","type":"bytes"},{"internalType":"bytes","name":"signature","type":"bytes"}],"internalType":"struct UserOperation","name":"userOp","type":"tuple"},{"internalType":"bytes32","name":"userOpHash","type":"bytes32"},{"internalType":"uint256","name":"missingAccountFunds","type":"uint256"}],"name":"validateUserOp","outputs":[{"internalType":"uint256","name":"validationData","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address payable","name":"withdrawAddress","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"withdrawDepositTo","outputs":[],"stateMutability":"payable","type":"function"},{"stateMutability":"payable","type":"receive"}],"metadata":{"optimizer_settings":"M3B3","solc_metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract IEntryPoint\",\"name\":\"anEntryPoint\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"smartAccount\",\"type\":\"address\"}],\"name\":\"AlreadyInitialized\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"BaseImplementationCannotBeZero\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"}],\"name\":\"CallerIsNotAnEntryPoint\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"}],\"name\":\"CallerIsNotEntryPointOrOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"}],\"name\":\"CallerIsNotOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"}],\"name\":\"CallerIsNotSelf\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"targetTxGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"gasPrice\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"name\":\"CanNotEstimateGas\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"DelegateCallsOnly\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"EntryPointCannotBeZero\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ExecutionFailed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"HandlerCannotBeZero\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"implementationAddress\",\"type\":\"address\"}],\"name\":\"InvalidImplementation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"restoredSigner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"expectedSigner\",\"type\":\"address\"}],\"name\":\"InvalidSignature\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"}],\"name\":\"MixedAuthFail\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"module\",\"type\":\"address\"}],\"name\":\"ModuleAlreadyEnabled\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"expectedModule\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"returnedModule\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"prevModule\",\"type\":\"address\"}],\"name\":\"ModuleAndPrevModuleMismatch\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"module\",\"type\":\"address\"}],\"name\":\"ModuleCannotBeZeroOrSentinel\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"module\",\"type\":\"address\"}],\"name\":\"ModuleNotEnabled\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ModulesAlreadyInitialized\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ModulesSetupExecutionFailed\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"gasLeft\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"gasRequired\",\"type\":\"uint256\"}],\"name\":\"NotEnoughGasLeft\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OwnerCanNotBeSelf\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OwnerCannotBeZero\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OwnerProvidedIsSame\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ReentrancyProtectionActivated\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TokenGasPriceFactorCanNotBeZero\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"dest\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"TokenTransferFailed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferToZeroAddressAttempt\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"destLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valueLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"funcLength\",\"type\":\"uint256\"}],\"name\":\"WrongBatchProvided\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"contractSignature\",\"type\":\"bytes\"}],\"name\":\"WrongContractSignature\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"uintS\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"contractSignatureLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"signatureLength\",\"type\":\"uint256\"}],\"name\":\"WrongContractSignatureFormat\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"txHash\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"payment\",\"type\":\"uint256\"}],\"name\":\"AccountHandlePayment\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousHandler\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"handler\",\"type\":\"address\"}],\"name\":\"ChangedFallbackHandler\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"module\",\"type\":\"address\"}],\"name\":\"DisabledModule\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_scw\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_oldEOA\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_newEOA\",\"type\":\"address\"}],\"name\":\"EOAChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"module\",\"type\":\"address\"}],\"name\":\"EnabledModule\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"enum Enum.Operation\",\"name\":\"operation\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"txGas\",\"type\":\"uint256\"}],\"name\":\"ExecutionFailure\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"module\",\"type\":\"address\"}],\"name\":\"ExecutionFromModuleFailure\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"module\",\"type\":\"address\"}],\"name\":\"ExecutionFromModuleSuccess\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"enum Enum.Operation\",\"name\":\"operation\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"txGas\",\"type\":\"uint256\"}],\"name\":\"ExecutionSuccess\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"oldImplementation\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"}],\"name\":\"ImplementationUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"module\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"enum Enum.Operation\",\"name\":\"operation\",\"type\":\"uint8\"}],\"name\":\"ModuleTransaction\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"SmartAccountReceivedNativeToken\",\"type\":\"event\"},{\"stateMutability\":\"nonpayable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"VERSION\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"addDeposit\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"dataHash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"signatures\",\"type\":\"bytes\"}],\"name\":\"checkSignatures\",\"outputs\":[],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"prevModule\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"module\",\"type\":\"address\"}],\"name\":\"disableModule\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"domainSeparator\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"module\",\"type\":\"address\"}],\"name\":\"enableModule\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"enum Enum.Operation\",\"name\":\"operation\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"targetTxGas\",\"type\":\"uint256\"}],\"internalType\":\"struct Transaction\",\"name\":\"_tx\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"baseGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"gasPrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenGasPriceFactor\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"gasToken\",\"type\":\"address\"},{\"internalType\":\"address payable\",\"name\":\"refundReceiver\",\"type\":\"address\"}],\"internalType\":\"struct FeeRefund\",\"name\":\"refundInfo\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"_nonce\",\"type\":\"uint256\"}],\"name\":\"encodeTransactionData\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"entryPoint\",\"outputs\":[{\"internalType\":\"contract IEntryPoint\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"enum Enum.Operation\",\"name\":\"operation\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"targetTxGas\",\"type\":\"uint256\"}],\"internalType\":\"struct Transaction\",\"name\":\"_tx\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"baseGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"gasPrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenGasPriceFactor\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"gasToken\",\"type\":\"address\"},{\"internalType\":\"address payable\",\"name\":\"refundReceiver\",\"type\":\"address\"}],\"internalType\":\"struct FeeRefund\",\"name\":\"refundInfo\",\"type\":\"tuple\"},{\"internalType\":\"bytes\",\"name\":\"signatures\",\"type\":\"bytes\"}],\"name\":\"execTransaction\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"enum Enum.Operation\",\"name\":\"operation\",\"type\":\"uint8\"}],\"name\":\"execTransactionFromModule\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"enum Enum.Operation\",\"name\":\"operation\",\"type\":\"uint8\"}],\"name\":\"execTransactionFromModuleReturnData\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"returnData\",\"type\":\"bytes\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"enum Enum.Operation\",\"name\":\"operation\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"targetTxGas\",\"type\":\"uint256\"}],\"internalType\":\"struct Transaction\",\"name\":\"_tx\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"baseGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"gasPrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenGasPriceFactor\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"gasToken\",\"type\":\"address\"},{\"internalType\":\"address payable\",\"name\":\"refundReceiver\",\"type\":\"address\"}],\"internalType\":\"struct FeeRefund\",\"name\":\"refundInfo\",\"type\":\"tuple\"},{\"internalType\":\"bytes\",\"name\":\"signatures\",\"type\":\"bytes\"}],\"name\":\"execTransaction_S6W\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"dest\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"value\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes[]\",\"name\":\"func\",\"type\":\"bytes[]\"}],\"name\":\"executeBatchCall\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"dest\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"value\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes[]\",\"name\":\"func\",\"type\":\"bytes[]\"}],\"name\":\"executeBatchCall_4by\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"dest\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"func\",\"type\":\"bytes\"}],\"name\":\"executeCall\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"dest\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"func\",\"type\":\"bytes\"}],\"name\":\"executeCall_s1m\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getChainId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getDeposit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getFallbackHandler\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"_handler\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getImplementation\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"_implementation\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"start\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"pageSize\",\"type\":\"uint256\"}],\"name\":\"getModulesPaginated\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"array\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"next\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"batchId\",\"type\":\"uint256\"}],\"name\":\"getNonce\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"enum Enum.Operation\",\"name\":\"operation\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"targetTxGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"baseGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"gasPrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenGasPriceFactor\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"gasToken\",\"type\":\"address\"},{\"internalType\":\"address payable\",\"name\":\"refundReceiver\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_nonce\",\"type\":\"uint256\"}],\"name\":\"getTransactionHash\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"gasUsed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"baseGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"gasPrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenGasPriceFactor\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"gasToken\",\"type\":\"address\"},{\"internalType\":\"address payable\",\"name\":\"refundReceiver\",\"type\":\"address\"}],\"name\":\"handlePaymentRevert\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"requiredGas\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_handler\",\"type\":\"address\"}],\"name\":\"init\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"module\",\"type\":\"address\"}],\"name\":\"isModuleEnabled\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_dataHash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"_signature\",\"type\":\"bytes\"}],\"name\":\"isValidSignature\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"nonce\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"dest\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"pullTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"enum Enum.Operation\",\"name\":\"operation\",\"type\":\"uint8\"}],\"name\":\"requiredTxGas\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"handler\",\"type\":\"address\"}],\"name\":\"setFallbackHandler\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"setOwner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"_interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"dest\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_implementation\",\"type\":\"address\"}],\"name\":\"updateImplementation\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"initCode\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"callData\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"callGasLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"verificationGasLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"preVerificationGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxFeePerGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxPriorityFeePerGas\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"paymasterAndData\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"internalType\":\"struct UserOperation\",\"name\":\"userOp\",\"type\":\"tuple\"},{\"internalType\":\"bytes32\",\"name\":\"userOpHash\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"missingAccountFunds\",\"type\":\"uint256\"}],\"name\":\"validateUserOp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"validationData\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"withdrawAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdrawDepositTo\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"author\":\"Chirag Titiya - <chirag@biconomy.io>\",\"details\":\"This contract is the base for the Smart Account functionality.         - It provides the functionality to execute both gnosis-style txns and AA (EIP-4337) userOps         - It allows to receive and manage assets.         - It is responsible for managing the modules and fallbacks.         - The Smart Account can be extended with modules, such as Social Recovery, Session Key and others.\",\"errors\":{\"AlreadyInitialized(address)\":[{\"params\":{\"smartAccount\":\"Smart Account Address\"}}],\"CallerIsNotAnEntryPoint(address)\":[{\"params\":{\"caller\":\"address that tried to call onlyEntryPoint-protected method\"}}],\"CallerIsNotEntryPointOrOwner(address)\":[{\"params\":{\"caller\":\"address that tried to call _requireFromEntryPointOrOwner-protected method\"}}],\"CallerIsNotOwner(address)\":[{\"params\":{\"caller\":\"address that tried to call onlyOwner method\"}}],\"CallerIsNotSelf(address)\":[{\"params\":{\"caller\":\"Caller address\"}}],\"CanNotEstimateGas(uint256,uint256,bool)\":[{\"params\":{\"gasPrice\":\"gas price passed in Refund Info\",\"success\":\"whether transaction has been executed successfully or not\",\"targetTxGas\":\"gas required for target transaction\"}}],\"InvalidImplementation(address)\":[{\"params\":{\"implementationAddress\":\"implementation address provided\"}}],\"InvalidSignature(address,address)\":[{\"params\":{\"expectedSigner\":\"the address that was expected to be a signer\",\"restoredSigner\":\"the signer address restored from signature\"}}],\"MixedAuthFail(address)\":[{\"params\":{\"caller\":\"address that tried to call mixedAuth-protected method\"}}],\"ModuleAlreadyEnabled(address)\":[{\"params\":{\"module\":\"Module address provided\"}}],\"ModuleAndPrevModuleMismatch(address,address,address)\":[{\"params\":{\"expectedModule\":\"expected module at modules[prevModule]\",\"prevModule\":\"previous module address provided at call\",\"returnedModule\":\"the module that has been found at modules[prevModule]\"}}],\"ModuleCannotBeZeroOrSentinel(address)\":[{\"params\":{\"module\":\"Module address provided\"}}],\"ModuleNotEnabled(address)\":[{\"params\":{\"module\":\"Module address provided\"}}],\"NotEnoughGasLeft(uint256,uint256)\":[{\"params\":{\"gasLeft\":\"how much gas left at the moment of a check\",\"gasRequired\":\"how much gas required to proceed\"}}],\"TokenTransferFailed(address,address,uint256)\":[{\"params\":{\"amount\":\"the amount of tokens in a failed transfer\",\"dest\":\"token transfer receiver\",\"token\":\"token contract address\"}}],\"WrongBatchProvided(uint256,uint256,uint256)\":[{\"params\":{\"destLength\":\"length of destination contracts array\",\"funcLength\":\"length of function signatures array\",\"valueLength\":\"length of txn values array\"}}],\"WrongContractSignature(bytes)\":[{\"params\":{\"contractSignature\":\"the contract signature that has been verified\"}}],\"WrongContractSignatureFormat(uint256,uint256,uint256)\":[{\"params\":{\"contractSignatureLength\":\"length of a contract signature\",\"signatureLength\":\"the whole signature length\",\"uintS\":\"s converted to uint256\"}}]},\"kind\":\"dev\",\"methods\":{\"addDeposit()\":{\"details\":\"Deposit more funds for this account in the entryPoint\"},\"checkSignatures(bytes32,bytes)\":{\"details\":\"Checks whether the signature provided is valid for the provided data, hash. Will revert otherwise.\",\"params\":{\"dataHash\":\"Hash of the data (could be either a message hash or transaction hash)\",\"signatures\":\"Signature data that should be verified. Can be ECDSA signature, contract signature (EIP-1271) or approved hash.\"}},\"constructor\":{\"details\":\"Constructor that sets the owner of the contract and the entry point contract.\",\"params\":{\"anEntryPoint\":\"The address of the entry point contract.\"}},\"disableModule(address,address)\":{\"details\":\"Removes a module from the allowlist.\",\"params\":{\"module\":\"Module to be removed.\",\"prevModule\":\"Module that pointed to the module to be removed in the linked list\"}},\"domainSeparator()\":{\"details\":\"Returns the domain separator for this contract, as defined in the EIP-712 standard.\",\"returns\":{\"_0\":\"bytes32 The domain separator hash.\"}},\"enableModule(address)\":{\"details\":\"Adds a module to the allowlist.\",\"params\":{\"module\":\"Module to be allow-listed.\"}},\"encodeTransactionData((address,uint8,uint256,bytes,uint256),(uint256,uint256,uint256,address,address),uint256)\":{\"details\":\"Returns the bytes that are hashed to be signed by owner.\",\"params\":{\"_nonce\":\"Transaction nonce.\",\"_tx\":\"The wallet transaction to be signed.\",\"refundInfo\":\"Required information for gas refunds.\"},\"returns\":{\"_0\":\"transactionHash bytes that are hashed to be signed by the owner.\"}},\"entryPoint()\":{\"details\":\"Returns the current entry point used by this account.This function should be implemented by the subclass to return the current entry point used by this account.\",\"returns\":{\"_0\":\"EntryPoint as an `IEntryPoint` interface.\"}},\"execTransaction((address,uint8,uint256,bytes,uint256),(uint256,uint256,uint256,address,address),bytes)\":{\"details\":\"Interface function with the standard name for execTransaction_S6W\"},\"execTransactionFromModule(address,uint256,bytes,uint8)\":{\"details\":\"Allows a Module to execute a Smart Account transaction without any further confirmations.\",\"params\":{\"data\":\"Data payload of module transaction.\",\"operation\":\"Operation type of module transaction.\",\"to\":\"Destination address of module transaction.\",\"value\":\"Ether value of module transaction.\"}},\"execTransactionFromModuleReturnData(address,uint256,bytes,uint8)\":{\"details\":\"Allows a Module to execute a wallet transaction without any further confirmations and returns data\",\"params\":{\"data\":\"Data payload of module transaction.\",\"operation\":\"Operation type of module transaction.\",\"to\":\"Destination address of module transaction.\",\"value\":\"Ether value of module transaction.\"}},\"execTransaction_S6W((address,uint8,uint256,bytes,uint256),(uint256,uint256,uint256,address,address),bytes)\":{\"details\":\"Gnosis style transaction with optional repay in native tokens OR ERC20Allows to execute a transaction confirmed by required signature/s and then pays the account that submitted the transaction.Function name optimized to have hash started with zeros to make this function calls cheaper\",\"params\":{\"_tx\":\"Smart Account transaction\",\"refundInfo\":\"Required information for gas refunds\",\"signatures\":\"Packed signature/s data ({bytes32 r}{bytes32 s}{uint8 v})\"}},\"executeBatchCall(address[],uint256[],bytes[])\":{\"details\":\"Interface function with the standard name for executeBatchCall_4by\",\"params\":{\"dest\":\"Addresses of the contracts to call\",\"func\":\"Data of the transactions\",\"value\":\"Amounts of native tokens to send along with the transactions\"}},\"executeBatchCall_4by(address[],uint256[],bytes[])\":{\"details\":\"Execute a sequence of transactions\",\"params\":{\"dest\":\"Addresses of the contracts to call\",\"func\":\"Data of the transactions\",\"value\":\"Amounts of native tokens to send along with the transactions\"}},\"executeCall(address,uint256,bytes)\":{\"details\":\"Interface function with the standard name for executeCall_s1m\",\"params\":{\"dest\":\"Address of the contract to call\",\"func\":\"Data of the transaction\",\"value\":\"Amount of native tokens to send along with the transaction\"}},\"executeCall_s1m(address,uint256,bytes)\":{\"details\":\"Execute a transaction (called directly from owner, or by entryPoint)\",\"params\":{\"dest\":\"Address of the contract to call\",\"func\":\"Data of the transaction\",\"value\":\"Amount of native tokens to send along with the transaction\"}},\"getChainId()\":{\"returns\":{\"_0\":\"_chainId The ID of the current chain as a uint256.\"}},\"getDeposit()\":{\"details\":\"Check current account deposit in the entryPoint\"},\"getImplementation()\":{\"details\":\"Returns the address of the implementation contract associated with this contract.\"},\"getModulesPaginated(address,uint256)\":{\"details\":\"Returns array of modules. Useful for a widget\",\"params\":{\"pageSize\":\"Maximum number of modules that should be returned.\",\"start\":\"Start of the page.\"},\"returns\":{\"array\":\"Array of modules.\",\"next\":\"Start of the next page.\"}},\"getNonce(uint256)\":{\"details\":\"returns a value from the nonces 2d mapping\",\"params\":{\"batchId\":\": the key of the user's batch being queried\"},\"returns\":{\"_0\":\"nonce : the number of transactions made within said batch\"}},\"getTransactionHash(address,uint256,bytes,uint8,uint256,uint256,uint256,uint256,address,address,uint256)\":{\"details\":\"Returns hash to be signed by owner.\",\"params\":{\"_nonce\":\"Transaction nonce.\",\"baseGas\":\"Additional Gas costs for data used to trigger the transaction.\",\"data\":\"Data payload.\",\"gasPrice\":\"Maximum gas price/ token gas price that should be used for this transaction.\",\"gasToken\":\"Token address (or 0 if ETH) that is used for the payment.\",\"operation\":\"Operation type.\",\"refundReceiver\":\"Address of receiver of gas payment (or 0 if tx.origin).\",\"targetTxGas\":\"Fas that should be used for the internal Smart Account transaction.\",\"to\":\"Destination address.\",\"tokenGasPriceFactor\":\"factor by which calculated token gas price is already multiplied.\",\"value\":\"Ether value.\"},\"returns\":{\"_0\":\"Transaction hash.\"}},\"handlePaymentRevert(uint256,uint256,uint256,uint256,address,address)\":{\"details\":\"Allows to estimate a transaction.\",\"params\":{\"baseGas\":\"Gas costs that are independent of the transaction execution (e.g. base transaction fee, signature check, payment of the refund, emitted events).\",\"gasPrice\":\"Gas price / TokenGasPrice (gas price in the context of token using offchain price feeds) that should be used for the payment calculation.\",\"gasToken\":\"Token address (or 0 if ETH) that is used for the payment.\",\"gasUsed\":\"Gas used by the transaction.\",\"tokenGasPriceFactor\":\"factor by which calculated token gas price is already multiplied.\"},\"returns\":{\"requiredGas\":\"Estimate of refunds\"}},\"init(address,address)\":{\"details\":\"Initialize the Smart Account with required states\",\"params\":{\"_handler\":\"Default fallback handler provided in Smart Account\",\"_owner\":\"Signatory of the Smart Account\"}},\"isModuleEnabled(address)\":{\"details\":\"Returns if a module is enabled\",\"returns\":{\"_0\":\"True if the module is enabled\"}},\"isValidSignature(bytes32,bytes)\":{\"details\":\"If owner is a smart-contract (other smart contract wallet or module, that controls      signature verifications - like multisig), forward isValidSignature request to it.      In case of multisig, _signature can be several concatenated signatures      If owner is EOA, perform a regular ecrecover.\",\"params\":{\"_dataHash\":\"32 bytes hash of the data signed on the behalf of address(msg.sender)\",\"_signature\":\"Signature byte array associated with _dataHash\"},\"returns\":{\"_0\":\"bytes4 value.\"}},\"nonce()\":{\"details\":\"This method returns the next sequential nonce.\",\"returns\":{\"_0\":\"nonce the account nonce.\"}},\"pullTokens(address,address,uint256)\":{\"details\":\"Utility method to be able to transfer ERC20 tokens out of Smart Account\",\"params\":{\"amount\":\"Amount of tokens\",\"dest\":\"Destination/ Receiver address\",\"token\":\"Token address\"}},\"requiredTxGas(address,uint256,bytes,uint8)\":{\"details\":\"Allows to estimate a transaction.      This method is only meant for estimation purpose, therefore the call will always revert and encode the result in the revert data.      Since the `estimateGas` function includes refunds, call this method to get an estimated of the costs that are deducted from the wallet with `execTransaction`\",\"params\":{\"data\":\"Data payload of transaction.\",\"operation\":\"Operation type of transaction.\",\"to\":\"Destination address of the transaction.\",\"value\":\"Ether value of transaction.\"},\"returns\":{\"_0\":\"Estimate without refunds and overhead fees (base transaction and payload data gas costs).\"}},\"setFallbackHandler(address)\":{\"details\":\"Allows to add a contract to handle fallback calls.      Only fallback calls without value and with data will be forwarded.      This can only be done via a smartAccount transaction.\",\"params\":{\"handler\":\"contract to handle fallback calls.\"}},\"setOwner(address)\":{\"details\":\"Allows to change the owner of the smart account by current owner or self-call (modules)\",\"params\":{\"_newOwner\":\"Address of the new signatory\"}},\"supportsInterface(bytes4)\":{\"params\":{\"_interfaceId\":\"The interface identifier, as specified in ERC165\"},\"returns\":{\"_0\":\"`true` if the contract implements `_interfaceID`\"}},\"transfer(address,uint256)\":{\"details\":\"Utility method to be able to transfer native tokens out of Smart Account\",\"params\":{\"amount\":\"Amount of native tokens\",\"dest\":\"Destination address\"}},\"updateImplementation(address)\":{\"params\":{\"_implementation\":\"New wallet implementation\"}},\"withdrawDepositTo(address,uint256)\":{\"details\":\"Withdraw value from the account's deposit\",\"params\":{\"amount\":\"to withdraw\",\"withdrawAddress\":\"target to send to\"}}},\"title\":\"SmartAccount - EIP-4337 compatible smart contract wallet.\",\"version\":1},\"userdoc\":{\"errors\":{\"AlreadyInitialized(address)\":[{\"notice\":\"Throws if trying to initialize a Smart Account that has already been initialized\"}],\"BaseImplementationCannotBeZero()\":[{\"notice\":\"Throws if zero address has been provided as Base Implementation address\"}],\"CallerIsNotAnEntryPoint(address)\":[{\"notice\":\"Throws at onlyEntryPoint when msg.sender is not an EntryPoint set for this Smart Account\"}],\"CallerIsNotEntryPointOrOwner(address)\":[{\"notice\":\"Throws at _requireFromEntryPointOrOwner when msg.sender is not an EntryPoint neither an owner\"}],\"CallerIsNotOwner(address)\":[{\"notice\":\"Throws at onlyOwner when msg.sender is not an owner\"}],\"CallerIsNotSelf(address)\":[{\"notice\":\"Throws when the caller is not address(this)\"}],\"CanNotEstimateGas(uint256,uint256,bool)\":[{\"notice\":\"Throws if not able to estimate gas It can be when amount of gas and its price are both zero and at the same time transaction has failed to be executed\"}],\"DelegateCallsOnly()\":[{\"notice\":\"Thrown when the function that must be called only via delegatecall is called directly\"}],\"EntryPointCannotBeZero()\":[{\"notice\":\"Throws if zero address has been provided as Entry Point address\"}],\"ExecutionFailed()\":[{\"notice\":\"Throws when the transaction execution fails\"}],\"HandlerCannotBeZero()\":[{\"notice\":\"Throws if zero address has been provided as Fallback Handler address\"}],\"InvalidImplementation(address)\":[{\"notice\":\"Throws if there is no code at implementationAddress\"}],\"InvalidSignature(address,address)\":[{\"notice\":\"Throws when the address that signed the data (restored from signature) differs from the address we expected to sign the data (i.e. some authorized address)\"}],\"MixedAuthFail(address)\":[{\"notice\":\"Throws at mixedAuth when msg.sender is not an owner neither _self\"}],\"ModuleAlreadyEnabled(address)\":[{\"notice\":\"Throws when trying to enable module that has already been enabled\"}],\"ModuleAndPrevModuleMismatch(address,address,address)\":[{\"notice\":\"Throws when module and previous module mismatch\"}],\"ModuleCannotBeZeroOrSentinel(address)\":[{\"notice\":\"Throws when address(0) or SENTINEL_MODULES constant has been provided as a module address\"}],\"ModuleNotEnabled(address)\":[{\"notice\":\"Throws when trying to execute transaction from module that is not enabled\"}],\"ModulesAlreadyInitialized()\":[{\"notice\":\"Throws when trying to initialize module manager that already been initialized\"}],\"ModulesSetupExecutionFailed()\":[{\"notice\":\"Throws when a delegatecall in course of module manager initialization has failed\"}],\"NotEnoughGasLeft(uint256,uint256)\":[{\"notice\":\"Throws if not enough gas is left at some point\"}],\"OwnerCanNotBeSelf()\":[{\"notice\":\"Thrown when trying to use address of the Smart Account as an owner for itself\"}],\"OwnerCannotBeZero()\":[{\"notice\":\"Throws if trying to change an owner of a SmartAccount to the zero address\"}],\"OwnerProvidedIsSame()\":[{\"notice\":\"Thrown when trying to use current owner as a new owner in a _setOwner() call\"}],\"TokenGasPriceFactorCanNotBeZero()\":[{\"notice\":\"Thrown when trying to use 0 as tokenGasPriceFactor\"}],\"TokenTransferFailed(address,address,uint256)\":[{\"notice\":\"Throws if transfer of tokens failed\"}],\"TransferToZeroAddressAttempt()\":[{\"notice\":\"Throws when if trying to transfer to zero address\"}],\"WrongBatchProvided(uint256,uint256,uint256)\":[{\"notice\":\"Throws when data for executeBatchCall provided in wrong format (i.e. empty array or lengths mismatch)\"}],\"WrongContractSignature(bytes)\":[{\"notice\":\"Throws when isValidSignature for the conrtact signature and data hash return differs from EIP1271 Magic Value\"}],\"WrongContractSignatureFormat(uint256,uint256,uint256)\":[{\"notice\":\"Throws if contract signature is provided in frong format\"}]},\"kind\":\"user\",\"methods\":{\"disableModule(address,address)\":{\"notice\":\"This can only be done via a wallet transaction.Disables the module `module` for the wallet.\"},\"enableModule(address)\":{\"notice\":\"This can only be done via a wallet transaction.Enables the module `module` for the wallet.\"},\"execTransaction_S6W((address,uint8,uint256,bytes,uint256),(uint256,uint256,uint256,address,address),bytes)\":{\"notice\":\"The fees are always transferred, even if the user transaction fails.\"},\"executeBatchCall_4by(address[],uint256[],bytes[])\":{\"notice\":\"Name is optimized for this method to be cheaper to be called\"},\"executeCall_s1m(address,uint256,bytes)\":{\"notice\":\"Name is optimized for this method to be cheaper to be called\"},\"getChainId()\":{\"notice\":\"Returns the ID of the chain the contract is currently deployed on.\"},\"getImplementation()\":{\"notice\":\"The implementation address is stored in the contract's storage slot with index 0.\"},\"handlePaymentRevert(uint256,uint256,uint256,uint256,address,address)\":{\"notice\":\"This method is only meant for estimation purpose, therefore the call will always revert and encode the result in the revert data.Call this method to get an estimate of the handlePayment costs that are deducted with `execTransaction`\"},\"init(address,address)\":{\"notice\":\"devs need to make sure it is only callble once by initiazer or state check restrictionsany further implementations that introduces a new state must have a reinit methodinit is prevented here by setting owner in the constructor and checking here for address(0)\"},\"isValidSignature(bytes32,bytes)\":{\"notice\":\"Implementation of ISignatureValidator (see `interfaces/ISignatureValidator.sol`)\"},\"nonce()\":{\"notice\":\"For a nonce of a specific key, use `entrypoint.getNonce(account, key)`\"},\"pullTokens(address,address,uint256)\":{\"notice\":\"only owner/ signatory of Smart Account with enough gas to spend can call this methodWhile enabling multisig module and renouncing ownership this will not work\"},\"supportsInterface(bytes4)\":{\"notice\":\"Query if a contract implements an interface\"},\"transfer(address,uint256)\":{\"notice\":\"only owner/ signatory of Smart Account with enough gas to spend can call this methodWhile enabling multisig module and renouncing ownership this will not work\"},\"updateImplementation(address)\":{\"notice\":\"All the new implementations MUST have this method!Updates the implementation of the base wallet\"},\"validateUserOp((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes),bytes32,uint256)\":{\"notice\":\"Validate user's signature and nonce. Subclass doesn't need to override this method. Instead, it should override the specific internal validation methods.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/smart-contract-wallet/SmartAccount.sol\":\"SmartAccount\"},\"evmVersion\":\"london\",\"libraries\":{\":__CACHE_BREAKER__\":\"0x00000000d41867734bbee4c6863d9255b2b06ac1\"},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@account-abstraction/contracts/core/Helpers.sol\":{\"keccak256\":\"0x591c87519f7155d1909210276b77925ab2722a99b7b5d5649aecc36ebbdb045a\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://69643e83f68e6a13d5075c7565bfce326673b0bd98c432033c4603ea84835746\",\"dweb:/ipfs/QmSwSzjYyV7qudi5vvsmzHMG2Z4YJZxX51RRXXVCLaNcEU\"]},\"@account-abstraction/contracts/interfaces/IAccount.sol\":{\"keccak256\":\"0x556a0e5980de18e90b115553ed502408155ba35f58642823010d9288047bc418\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://a0f420134b79596db8737173c7b933ae0a33059e107b6327c43aa40d4744a9e4\",\"dweb:/ipfs/QmRo8s1AhXmEMV7uPYnbpYwU19e9Bk6jmYBJTiPx3Fo85W\"]},\"@account-abstraction/contracts/interfaces/IAggregator.sol\":{\"keccak256\":\"0x060e9ddb0152250c269ba0640dc5753834ac44cf182a2837d508c0c529cae26a\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://20ed837bc5909c89ff1910246bf245a5dad6840aa939382e1694964eb7dbd37b\",\"dweb:/ipfs/QmTMybRq5yyghPDDs1ZCNAVB9sSJ4WHe6Q9mejuKPTAdNP\"]},\"@account-abstraction/contracts/interfaces/IEntryPoint.sol\":{\"keccak256\":\"0x3a90bf308819ed125fa4202f880999caff8a8686633b8ddb79a30ca240d5b8f8\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://d2d21cc92c2fdab2b58d21bc25d4cd0e8c284b922528a186b087b818d54bc6cf\",\"dweb:/ipfs/QmT1qrfuBjsv2rmRCDn8mgPXHp94hARJwzbcDuBLDTbFWd\"]},\"@account-abstraction/contracts/interfaces/INonceManager.sol\":{\"keccak256\":\"0x509871e6c63663cdcc3eba19920fe84e991f38b289b1377ac3c3a6d9f22d7e12\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://00fe21b4349b24c50df60e1a705179293982bd9e7a32b78d4bac9620f89e7fe2\",\"dweb:/ipfs/QmSFFYGfUwQbVa6hASjU7YxTvgi2HkfrPr4X5oPHscHg8b\"]},\"@account-abstraction/contracts/interfaces/IStakeManager.sol\":{\"keccak256\":\"0xd227b02888cd4ac68daebcdfd992ec00f9fff66fa3b3bb16f656cd582fa3480f\",\"license\":\"GPL-3.0-only\",\"urls\":[\"bzz-raw://b389da4714a138be63704a576a482505eab2855e263b38a93706395d8d42e7c3\",\"dweb:/ipfs/QmeeAZpdHwUXxqP8pxA7GNtoCGBmmH4FaqLLwScVKGxtxZ\"]},\"@account-abstraction/contracts/interfaces/UserOperation.sol\":{\"keccak256\":\"0x61374003361059087fdcf17967a7bba052badeaf5c7f0ae689166f8aafd3a45c\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://6ff83c59432e733bf6304dda27cd4b0f34401917dd535e2669cc842d2d26568c\",\"dweb:/ipfs/QmPJbHU5TAjHqUTZzAcicEeG2nknmwCN43L4EW9LHbknTN\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0xa4d1d62251f8574deb032a35fc948386a9b4de74b812d4f545a1ac120486b48a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8c969013129ba9e651a20735ef659fef6d8a1139ea3607bd4b26ddea2d645634\",\"dweb:/ipfs/QmVhVa6LGuzAcB8qgDtVHRkucn4ihj5UZr8xBLcJkP6ucb\"]},\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0xda898fa084aa1ddfdb346e6a40459e00a59d87071cce7c315a46d648dd71d0ba\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ce501a941f4aa1555c04dabb5e07992503bb6a9b32ff8f7cdcefdb4a742210cb\",\"dweb:/ipfs/QmeScPrUpdrGYs9BytV3Z5ZWJcBXtuAgCW4BLHua4xFUxx\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa1e8e83cd0087785df04ac79fb395d9f3684caeaf973d9e2c71caef723a3a5d6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://33bbf48cc069be677705037ba7520c22b1b622c23b33e1a71495f2d36549d40b\",\"dweb:/ipfs/Qmct36zWXv3j7LZB83uwbg7TXwnZSN1fqHNDZ93GG98bGz\"]},\"contracts/smart-contract-wallet/BaseSmartAccount.sol\":{\"keccak256\":\"0x59fbea0d532f8a11c3114613791e96e5412d109d78bdc39e46ad039aa8be6f5b\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://3b816aca2894404864952b8d180fa993d36abe08b0d587d6e7f236eb586444a4\",\"dweb:/ipfs/Qmb3fM6woAdtjDoTkAXC6bbcpfmp3Z3p7Kk3Cg919WQzH3\"]},\"contracts/smart-contract-wallet/SmartAccount.sol\":{\"keccak256\":\"0x823cc4ebcb0ecabad0c933362293d938d218fc87051ff71250617aa55b978500\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a986065f9b39d736e00c6540bd227025671d00e31802032780f51026756da578\",\"dweb:/ipfs/QmZ3CYv1V2dozmwMs5isWvE1W1VxCAHQvnfoF984nzJn4q\"]},\"contracts/smart-contract-wallet/base/Executor.sol\":{\"keccak256\":\"0x578ee56ff18e80fbf5ae28644ddc47f6a480e906d676caca3b43df89ef425647\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://a038b142793c435c9b3a349c808a4d7c8c934a57d82c32384c36501c5069891f\",\"dweb:/ipfs/QmQUUJcbjTjeJQFjFVk6D6a3EtVbkwEsRHmRVcc1FJmuRr\"]},\"contracts/smart-contract-wallet/base/FallbackManager.sol\":{\"keccak256\":\"0xe3b6dbcfb3bfa65dba011674892778d1578d40421d0ed7700e1ac2582541954e\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://479d9add893ed5b96c9be32d2fceec345fbe60ca03b3a26ffd7fe91afaafb678\",\"dweb:/ipfs/QmWmVeiLU19Bk3s5R57oDMZibRNsB8tb279kRx1JrAHsCh\"]},\"contracts/smart-contract-wallet/base/ModuleManager.sol\":{\"keccak256\":\"0x98210b7ffe719d9873fb24ef89cbbbc58729412f4e9285bae09e9c205731a665\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://f58685b75663559e39d5980238b9b25c2bd299050e66e47b50266e2dce6738ae\",\"dweb:/ipfs/QmZV3vZ9X1Nt96ty12Vy54n818w2Fafs5gkhkgxQotZxF5\"]},\"contracts/smart-contract-wallet/common/Enum.sol\":{\"keccak256\":\"0x657464511d99c53126e008910b266875b299d6e328e105203cb53b6f467acdac\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://d31ced2b537c575f21e5d78989076ce76df8befb276d75c79cf64e44031ae527\",\"dweb:/ipfs/QmNh5E4sTYkphUs8P4rZ8WCQUkWZmjwAAyPzSr612rEs8C\"]},\"contracts/smart-contract-wallet/common/Errors.sol\":{\"keccak256\":\"0xef2989dcfc2aedddfd76865faa371b7cfb1e4e40592cc31d6d4151914f1a6aaa\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://8248d7e170d8ff5d67e62c2e0528e3700dfdc3f08eb6fa8a2a6d7c3c5fafee76\",\"dweb:/ipfs/QmbEpeNpBqHbu4Gx2nwGweynRJRoe5NdGCZZ64TPxRdn3X\"]},\"contracts/smart-contract-wallet/common/ReentrancyGuard.sol\":{\"keccak256\":\"0x399687cf8c0703996a34d63ccf3c5ef19471aa3b02fcbae6cd6ac5c839ae7b1b\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://406c6236f2c8e80ebd75306449ad99bc0e47b26200d0a9e68b8a72a69eeb12e8\",\"dweb:/ipfs/QmSuw7b1T5ttyQQ1qioV2vLpKGY9HGBnPJNmwZEgBUL8jp\"]},\"contracts/smart-contract-wallet/common/SecuredTokenTransfer.sol\":{\"keccak256\":\"0x53c6c0faaba3c0a3abe6aecd08b7bfbf530246930f52ef6642394040a09d8dae\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://e62c706474f89b74d95fde23921bbb7d9017f6a54ad1297731c58424eba3a23e\",\"dweb:/ipfs/QmXF8uAVt6x6E1P1LUG8e15WpLYznfxAJpGr1BREiUhbMG\"]},\"contracts/smart-contract-wallet/common/SelfAuthorized.sol\":{\"keccak256\":\"0xaff7f31a495e6455b386d215dc8413efb816ca340b7a4254ea1c799766451b2f\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://0cdda0e1a507a8faca7fcbab22324c5a26ddd0be417488de48a86b983b8ceacc\",\"dweb:/ipfs/QmTC2y5o6skp95sStYU86Djetk3HPvTXoZrDMaYFnKuBJG\"]},\"contracts/smart-contract-wallet/common/SignatureDecoder.sol\":{\"keccak256\":\"0x591c6470fc0854467a1ae2ab17977c38de055ba3c4e7f3c9a903dd10997e3d4f\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://a3f0bee474df330369650e186a43ce4437330017a4e0125c7bb614a905dbf783\",\"dweb:/ipfs/QmSYnyHoPBUP3wBfAPp3HDujH7tMZeDMpGJg75nZtgs6Em\"]},\"contracts/smart-contract-wallet/interfaces/IERC165.sol\":{\"keccak256\":\"0x03db523eaf7cef6e0513cc29d5014aa2802eb78ebe7280272c01258adecab521\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://ebf25bc7844ee820464be1bb804f2ef75e0d9ce53c9e45a133da82f00f1c9e88\",\"dweb:/ipfs/QmcZrTHuEcimUpmwgSx4sx7SpfY13wN5S2HNDRk4x7qHXt\"]},\"contracts/smart-contract-wallet/interfaces/IModule.sol\":{\"keccak256\":\"0x541a85fb77cc5294cbbf8239b1aa42e2b675fc126316b58206d1cde32426765b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ff846ad4331c8df2cb995e3e6b07e17b538c228e54df2ec5b5f7c9e7ba9612f\",\"dweb:/ipfs/QmZyuBY2E84RBjABFoGcGYYvG15uD9LMWE9ME3vnwQLmuB\"]},\"contracts/smart-contract-wallet/interfaces/ISignatureValidator.sol\":{\"keccak256\":\"0x99786ee319572532d07ac0da01cb78529b5e76f5f5d99dc607e90893b8326e39\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://f21e5a4e4c017e8efe545f6d1c6d9e2931a60b5f5d04cfea0e779cd55bac4990\",\"dweb:/ipfs/Qmchyq9Mg794PubDEV1JZX91Gz7fK5JKLLCToUhREnqDzG\"]},\"contracts/smart-contract-wallet/libs/LibAddress.sol\":{\"keccak256\":\"0xc002ad1e29166d55aa40f8d034506aa1922cf2e49be798dcbc51f9add2715d81\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a47ef7173ad22cdce729aeffad27b0e7dd2aa6e111c292989828ae04fb352164\",\"dweb:/ipfs/QmSeV8s3q9emK2XH7kYnZfzjpWgr4SbyST9rQTURGUxhYW\"]},\"contracts/smart-contract-wallet/libs/Math.sol\":{\"keccak256\":\"0x4e04d4c68c9940d8ef91fb4b44cefaa0429e7cad784ac1fc819de757da058f73\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://52a9975f411611a8976fbc427b6a7971644b75566cf749243b8a7edad4f892c7\",\"dweb:/ipfs/QmVkvPYeLwFxbPKWWmLjivxTYvaAdU2vd1GNHvV8D5BmZf\"]}},\"version\":1}","zk_version":"1.3.10"},"devdoc":{"author":"Chirag Titiya - <chirag@biconomy.io>","details":"This contract is the base for the Smart Account functionality.         - It provides the functionality to execute both gnosis-style txns and AA (EIP-4337) userOps         - It allows to receive and manage assets.         - It is responsible for managing the modules and fallbacks.         - The Smart Account can be extended with modules, such as Social Recovery, Session Key and others.","errors":{"AlreadyInitialized(address)":[{"params":{"smartAccount":"Smart Account Address"}}],"CallerIsNotAnEntryPoint(address)":[{"params":{"caller":"address that tried to call onlyEntryPoint-protected method"}}],"CallerIsNotEntryPointOrOwner(address)":[{"params":{"caller":"address that tried to call _requireFromEntryPointOrOwner-protected method"}}],"CallerIsNotOwner(address)":[{"params":{"caller":"address that tried to call onlyOwner method"}}],"CallerIsNotSelf(address)":[{"params":{"caller":"Caller address"}}],"CanNotEstimateGas(uint256,uint256,bool)":[{"params":{"gasPrice":"gas price passed in Refund Info","success":"whether transaction has been executed successfully or not","targetTxGas":"gas required for target transaction"}}],"InvalidImplementation(address)":[{"params":{"implementationAddress":"implementation address provided"}}],"InvalidSignature(address,address)":[{"params":{"expectedSigner":"the address that was expected to be a signer","restoredSigner":"the signer address restored from signature"}}],"MixedAuthFail(address)":[{"params":{"caller":"address that tried to call mixedAuth-protected method"}}],"ModuleAlreadyEnabled(address)":[{"params":{"module":"Module address provided"}}],"ModuleAndPrevModuleMismatch(address,address,address)":[{"params":{"expectedModule":"expected module at modules[prevModule]","prevModule":"previous module address provided at call","returnedModule":"the module that has been found at modules[prevModule]"}}],"ModuleCannotBeZeroOrSentinel(address)":[{"params":{"module":"Module address provided"}}],"ModuleNotEnabled(address)":[{"params":{"module":"Module address provided"}}],"NotEnoughGasLeft(uint256,uint256)":[{"params":{"gasLeft":"how much gas left at the moment of a check","gasRequired":"how much gas required to proceed"}}],"TokenTransferFailed(address,address,uint256)":[{"params":{"amount":"the amount of tokens in a failed transfer","dest":"token transfer receiver","token":"token contract address"}}],"WrongBatchProvided(uint256,uint256,uint256)":[{"params":{"destLength":"length of destination contracts array","funcLength":"length of function signatures array","valueLength":"length of txn values array"}}],"WrongContractSignature(bytes)":[{"params":{"contractSignature":"the contract signature that has been verified"}}],"WrongContractSignatureFormat(uint256,uint256,uint256)":[{"params":{"contractSignatureLength":"length of a contract signature","signatureLength":"the whole signature length","uintS":"s converted to uint256"}}]},"kind":"dev","methods":{"addDeposit()":{"details":"Deposit more funds for this account in the entryPoint"},"checkSignatures(bytes32,bytes)":{"details":"Checks whether the signature provided is valid for the provided data, hash. Will revert otherwise.","params":{"dataHash":"Hash of the data (could be either a message hash or transaction hash)","signatures":"Signature data that should be verified. Can be ECDSA signature, contract signature (EIP-1271) or approved hash."}},"constructor":{"details":"Constructor that sets the owner of the contract and the entry point contract.","params":{"anEntryPoint":"The address of the entry point contract."}},"disableModule(address,address)":{"details":"Removes a module from the allowlist.","params":{"module":"Module to be removed.","prevModule":"Module that pointed to the module to be removed in the linked list"}},"domainSeparator()":{"details":"Returns the domain separator for this contract, as defined in the EIP-712 standard.","returns":{"_0":"bytes32 The domain separator hash."}},"enableModule(address)":{"details":"Adds a module to the allowlist.","params":{"module":"Module to be allow-listed."}},"encodeTransactionData((address,uint8,uint256,bytes,uint256),(uint256,uint256,uint256,address,address),uint256)":{"details":"Returns the bytes that are hashed to be signed by owner.","params":{"_nonce":"Transaction nonce.","_tx":"The wallet transaction to be signed.","refundInfo":"Required information for gas refunds."},"returns":{"_0":"transactionHash bytes that are hashed to be signed by the owner."}},"entryPoint()":{"details":"Returns the current entry point used by this account.This function should be implemented by the subclass to return the current entry point used by this account.","returns":{"_0":"EntryPoint as an `IEntryPoint` interface."}},"execTransaction((address,uint8,uint256,bytes,uint256),(uint256,uint256,uint256,address,address),bytes)":{"details":"Interface function with the standard name for execTransaction_S6W"},"execTransactionFromModule(address,uint256,bytes,uint8)":{"details":"Allows a Module to execute a Smart Account transaction without any further confirmations.","params":{"data":"Data payload of module transaction.","operation":"Operation type of module transaction.","to":"Destination address of module transaction.","value":"Ether value of module transaction."}},"execTransactionFromModuleReturnData(address,uint256,bytes,uint8)":{"details":"Allows a Module to execute a wallet transaction without any further confirmations and returns data","params":{"data":"Data payload of module transaction.","operation":"Operation type of module transaction.","to":"Destination address of module transaction.","value":"Ether value of module transaction."}},"execTransaction_S6W((address,uint8,uint256,bytes,uint256),(uint256,uint256,uint256,address,address),bytes)":{"details":"Gnosis style transaction with optional repay in native tokens OR ERC20Allows to execute a transaction confirmed by required signature/s and then pays the account that submitted the transaction.Function name optimized to have hash started with zeros to make this function calls cheaper","params":{"_tx":"Smart Account transaction","refundInfo":"Required information for gas refunds","signatures":"Packed signature/s data ({bytes32 r}{bytes32 s}{uint8 v})"}},"executeBatchCall(address[],uint256[],bytes[])":{"details":"Interface function with the standard name for executeBatchCall_4by","params":{"dest":"Addresses of the contracts to call","func":"Data of the transactions","value":"Amounts of native tokens to send along with the transactions"}},"executeBatchCall_4by(address[],uint256[],bytes[])":{"details":"Execute a sequence of transactions","params":{"dest":"Addresses of the contracts to call","func":"Data of the transactions","value":"Amounts of native tokens to send along with the transactions"}},"executeCall(address,uint256,bytes)":{"details":"Interface function with the standard name for executeCall_s1m","params":{"dest":"Address of the contract to call","func":"Data of the transaction","value":"Amount of native tokens to send along with the transaction"}},"executeCall_s1m(address,uint256,bytes)":{"details":"Execute a transaction (called directly from owner, or by entryPoint)","params":{"dest":"Address of the contract to call","func":"Data of the transaction","value":"Amount of native tokens to send along with the transaction"}},"getChainId()":{"returns":{"_0":"_chainId The ID of the current chain as a uint256."}},"getDeposit()":{"details":"Check current account deposit in the entryPoint"},"getImplementation()":{"details":"Returns the address of the implementation contract associated with this contract."},"getModulesPaginated(address,uint256)":{"details":"Returns array of modules. Useful for a widget","params":{"pageSize":"Maximum number of modules that should be returned.","start":"Start of the page."},"returns":{"array":"Array of modules.","next":"Start of the next page."}},"getNonce(uint256)":{"details":"returns a value from the nonces 2d mapping","params":{"batchId":": the key of the user's batch being queried"},"returns":{"_0":"nonce : the number of transactions made within said batch"}},"getTransactionHash(address,uint256,bytes,uint8,uint256,uint256,uint256,uint256,address,address,uint256)":{"details":"Returns hash to be signed by owner.","params":{"_nonce":"Transaction nonce.","baseGas":"Additional Gas costs for data used to trigger the transaction.","data":"Data payload.","gasPrice":"Maximum gas price/ token gas price that should be used for this transaction.","gasToken":"Token address (or 0 if ETH) that is used for the payment.","operation":"Operation type.","refundReceiver":"Address of receiver of gas payment (or 0 if tx.origin).","targetTxGas":"Fas that should be used for the internal Smart Account transaction.","to":"Destination address.","tokenGasPriceFactor":"factor by which calculated token gas price is already multiplied.","value":"Ether value."},"returns":{"_0":"Transaction hash."}},"handlePaymentRevert(uint256,uint256,uint256,uint256,address,address)":{"details":"Allows to estimate a transaction.","params":{"baseGas":"Gas costs that are independent of the transaction execution (e.g. base transaction fee, signature check, payment of the refund, emitted events).","gasPrice":"Gas price / TokenGasPrice (gas price in the context of token using offchain price feeds) that should be used for the payment calculation.","gasToken":"Token address (or 0 if ETH) that is used for the payment.","gasUsed":"Gas used by the transaction.","tokenGasPriceFactor":"factor by which calculated token gas price is already multiplied."},"returns":{"requiredGas":"Estimate of refunds"}},"init(address,address)":{"details":"Initialize the Smart Account with required states","params":{"_handler":"Default fallback handler provided in Smart Account","_owner":"Signatory of the Smart Account"}},"isModuleEnabled(address)":{"details":"Returns if a module is enabled","returns":{"_0":"True if the module is enabled"}},"isValidSignature(bytes32,bytes)":{"details":"If owner is a smart-contract (other smart contract wallet or module, that controls      signature verifications - like multisig), forward isValidSignature request to it.      In case of multisig, _signature can be several concatenated signatures      If owner is EOA, perform a regular ecrecover.","params":{"_dataHash":"32 bytes hash of the data signed on the behalf of address(msg.sender)","_signature":"Signature byte array associated with _dataHash"},"returns":{"_0":"bytes4 value."}},"nonce()":{"details":"This method returns the next sequential nonce.","returns":{"_0":"nonce the account nonce."}},"pullTokens(address,address,uint256)":{"details":"Utility method to be able to transfer ERC20 tokens out of Smart Account","params":{"amount":"Amount of tokens","dest":"Destination/ Receiver address","token":"Token address"}},"requiredTxGas(address,uint256,bytes,uint8)":{"details":"Allows to estimate a transaction.      This method is only meant for estimation purpose, therefore the call will always revert and encode the result in the revert data.      Since the `estimateGas` function includes refunds, call this method to get an estimated of the costs that are deducted from the wallet with `execTransaction`","params":{"data":"Data payload of transaction.","operation":"Operation type of transaction.","to":"Destination address of the transaction.","value":"Ether value of transaction."},"returns":{"_0":"Estimate without refunds and overhead fees (base transaction and payload data gas costs)."}},"setFallbackHandler(address)":{"details":"Allows to add a contract to handle fallback calls.      Only fallback calls without value and with data will be forwarded.      This can only be done via a smartAccount transaction.","params":{"handler":"contract to handle fallback calls."}},"setOwner(address)":{"details":"Allows to change the owner of the smart account by current owner or self-call (modules)","params":{"_newOwner":"Address of the new signatory"}},"supportsInterface(bytes4)":{"params":{"_interfaceId":"The interface identifier, as specified in ERC165"},"returns":{"_0":"`true` if the contract implements `_interfaceID`"}},"transfer(address,uint256)":{"details":"Utility method to be able to transfer native tokens out of Smart Account","params":{"amount":"Amount of native tokens","dest":"Destination address"}},"updateImplementation(address)":{"params":{"_implementation":"New wallet implementation"}},"withdrawDepositTo(address,uint256)":{"details":"Withdraw value from the account's deposit","params":{"amount":"to withdraw","withdrawAddress":"target to send to"}}},"title":"SmartAccount - EIP-4337 compatible smart contract wallet.","version":1},"userdoc":{"errors":{"AlreadyInitialized(address)":[{"notice":"Throws if trying to initialize a Smart Account that has already been initialized"}],"BaseImplementationCannotBeZero()":[{"notice":"Throws if zero address has been provided as Base Implementation address"}],"CallerIsNotAnEntryPoint(address)":[{"notice":"Throws at onlyEntryPoint when msg.sender is not an EntryPoint set for this Smart Account"}],"CallerIsNotEntryPointOrOwner(address)":[{"notice":"Throws at _requireFromEntryPointOrOwner when msg.sender is not an EntryPoint neither an owner"}],"CallerIsNotOwner(address)":[{"notice":"Throws at onlyOwner when msg.sender is not an owner"}],"CallerIsNotSelf(address)":[{"notice":"Throws when the caller is not address(this)"}],"CanNotEstimateGas(uint256,uint256,bool)":[{"notice":"Throws if not able to estimate gas It can be when amount of gas and its price are both zero and at the same time transaction has failed to be executed"}],"DelegateCallsOnly()":[{"notice":"Thrown when the function that must be called only via delegatecall is called directly"}],"EntryPointCannotBeZero()":[{"notice":"Throws if zero address has been provided as Entry Point address"}],"ExecutionFailed()":[{"notice":"Throws when the transaction execution fails"}],"HandlerCannotBeZero()":[{"notice":"Throws if zero address has been provided as Fallback Handler address"}],"InvalidImplementation(address)":[{"notice":"Throws if there is no code at implementationAddress"}],"InvalidSignature(address,address)":[{"notice":"Throws when the address that signed the data (restored from signature) differs from the address we expected to sign the data (i.e. some authorized address)"}],"MixedAuthFail(address)":[{"notice":"Throws at mixedAuth when msg.sender is not an owner neither _self"}],"ModuleAlreadyEnabled(address)":[{"notice":"Throws when trying to enable module that has already been enabled"}],"ModuleAndPrevModuleMismatch(address,address,address)":[{"notice":"Throws when module and previous module mismatch"}],"ModuleCannotBeZeroOrSentinel(address)":[{"notice":"Throws when address(0) or SENTINEL_MODULES constant has been provided as a module address"}],"ModuleNotEnabled(address)":[{"notice":"Throws when trying to execute transaction from module that is not enabled"}],"ModulesAlreadyInitialized()":[{"notice":"Throws when trying to initialize module manager that already been initialized"}],"ModulesSetupExecutionFailed()":[{"notice":"Throws when a delegatecall in course of module manager initialization has failed"}],"NotEnoughGasLeft(uint256,uint256)":[{"notice":"Throws if not enough gas is left at some point"}],"OwnerCanNotBeSelf()":[{"notice":"Thrown when trying to use address of the Smart Account as an owner for itself"}],"OwnerCannotBeZero()":[{"notice":"Throws if trying to change an owner of a SmartAccount to the zero address"}],"OwnerProvidedIsSame()":[{"notice":"Thrown when trying to use current owner as a new owner in a _setOwner() call"}],"TokenGasPriceFactorCanNotBeZero()":[{"notice":"Thrown when trying to use 0 as tokenGasPriceFactor"}],"TokenTransferFailed(address,address,uint256)":[{"notice":"Throws if transfer of tokens failed"}],"TransferToZeroAddressAttempt()":[{"notice":"Throws when if trying to transfer to zero address"}],"WrongBatchProvided(uint256,uint256,uint256)":[{"notice":"Throws when data for executeBatchCall provided in wrong format (i.e. empty array or lengths mismatch)"}],"WrongContractSignature(bytes)":[{"notice":"Throws when isValidSignature for the conrtact signature and data hash return differs from EIP1271 Magic Value"}],"WrongContractSignatureFormat(uint256,uint256,uint256)":[{"notice":"Throws if contract signature is provided in frong format"}]},"kind":"user","methods":{"disableModule(address,address)":{"notice":"This can only be done via a wallet transaction.Disables the module `module` for the wallet."},"enableModule(address)":{"notice":"This can only be done via a wallet transaction.Enables the module `module` for the wallet."},"execTransaction_S6W((address,uint8,uint256,bytes,uint256),(uint256,uint256,uint256,address,address),bytes)":{"notice":"The fees are always transferred, even if the user transaction fails."},"executeBatchCall_4by(address[],uint256[],bytes[])":{"notice":"Name is optimized for this method to be cheaper to be called"},"executeCall_s1m(address,uint256,bytes)":{"notice":"Name is optimized for this method to be cheaper to be called"},"getChainId()":{"notice":"Returns the ID of the chain the contract is currently deployed on."},"getImplementation()":{"notice":"The implementation address is stored in the contract's storage slot with index 0."},"handlePaymentRevert(uint256,uint256,uint256,uint256,address,address)":{"notice":"This method is only meant for estimation purpose, therefore the call will always revert and encode the result in the revert data.Call this method to get an estimate of the handlePayment costs that are deducted with `execTransaction`"},"init(address,address)":{"notice":"devs need to make sure it is only callble once by initiazer or state check restrictionsany further implementations that introduces a new state must have a reinit methodinit is prevented here by setting owner in the constructor and checking here for address(0)"},"isValidSignature(bytes32,bytes)":{"notice":"Implementation of ISignatureValidator (see `interfaces/ISignatureValidator.sol`)"},"nonce()":{"notice":"For a nonce of a specific key, use `entrypoint.getNonce(account, key)`"},"pullTokens(address,address,uint256)":{"notice":"only owner/ signatory of Smart Account with enough gas to spend can call this methodWhile enabling multisig module and renouncing ownership this will not work"},"supportsInterface(bytes4)":{"notice":"Query if a contract implements an interface"},"transfer(address,uint256)":{"notice":"only owner/ signatory of Smart Account with enough gas to spend can call this methodWhile enabling multisig module and renouncing ownership this will not work"},"updateImplementation(address)":{"notice":"All the new implementations MUST have this method!Updates the implementation of the base wallet"},"validateUserOp((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes),bytes32,uint256)":{"notice":"Validate user's signature and nonce. Subclass doesn't need to override this method. Instead, it should override the specific internal validation methods."}},"version":1},"storageLayout":{"storage":[{"astId":4543,"contract":"contracts/smart-contract-wallet/SmartAccount.sol:SmartAccount","label":"modules","offset":0,"slot":"0","type":"t_mapping(t_address,t_address)"},{"astId":4923,"contract":"contracts/smart-contract-wallet/SmartAccount.sol:SmartAccount","label":"__gap","offset":0,"slot":"1","type":"t_array(t_uint256)24_storage"},{"astId":4516,"contract":"contracts/smart-contract-wallet/SmartAccount.sol:SmartAccount","label":"__gap","offset":0,"slot":"25","type":"t_array(t_uint256)24_storage"},{"astId":5141,"contract":"contracts/smart-contract-wallet/SmartAccount.sol:SmartAccount","label":"reentrancyStatus","offset":0,"slot":"49","type":"t_uint256"},{"astId":2499,"contract":"contracts/smart-contract-wallet/SmartAccount.sol:SmartAccount","label":"owner","offset":0,"slot":"50","type":"t_address"},{"astId":2503,"contract":"contracts/smart-contract-wallet/SmartAccount.sol:SmartAccount","label":"nonces","offset":0,"slot":"51","type":"t_mapping(t_uint256,t_uint256)"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_array(t_uint256)24_storage":{"base":"t_uint256","encoding":"inplace","label":"uint256[24]","numberOfBytes":"768"},"t_mapping(t_address,t_address)":{"encoding":"mapping","key":"t_address","label":"mapping(address => address)","numberOfBytes":"32","value":"t_address"},"t_mapping(t_uint256,t_uint256)":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}},"evm":{"legacyAssembly":null,"assembly":"\t.text\n\t.file\t\"SmartAccount.sol:SmartAccount\"\n\t.globl\t__entry\n__entry:\n.func_begin0:\n\tnop\tstack+=[3]\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, r4\n\tptr.add\tr1, r4, stack[@ptr_return_data]\n\tptr.add\tr1, r0, stack[@ptr_calldata]\n\tand\t@CPI0_0[0], r3, stack[@calldatasize]\n\tadd\t0, r0, stack[@returndatasize]\n\tand!\t1, r2, r1\n\tjump.ne\t@.BB0_1\n\tadd\t128, r0, r1\n\tst.1\t64, r1\n\tadd\tstack[@calldatasize], r0, r1\n\tsub.s!\t4, r1, r2\n\tjump.lt\t@.BB0_69\n\tptr.add\tstack[@ptr_calldata], r0, r1\n\tld\tr1, r1\n\tshr.s\t224, r1, r1\n\tsub.s!\t@CPI0_10[0], r1, r2\n\tjump.le\t@.BB0_16\n\tsub.s!\t@CPI0_11[0], r1, r2\n\tjump.gt\t@.BB0_56\n\tsub.s!\t@CPI0_25[0], r1, r2\n\tjump.gt\t@.BB0_50\n\tsub.s!\t@CPI0_32[0], r1, r2\n\tjump.le\t@.BB0_45\n\tsub.s!\t@CPI0_33[0], r1, r2\n\tjump.eq\t@.BB0_131\n\tsub.s!\t@CPI0_34[0], r1, r2\n\tjump.eq\t@.BB0_136\n\tsub.s!\t@CPI0_35[0], r1, r1\n\tjump.ne\t@.BB0_188\n\tnear_call\tr0, @external_fun_transfer, @DEFAULT_UNWIND\n.BB0_1:\n\tcontext.get_context_u128\tr1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_2\n\tadd\tstack[@calldatasize], r0, r1\n\tadd\t255, r1, r2\n\tsub.s\t32, r0, r3\n\tand\tr2, r3, r2\n\tsub.s!\t@CPI0_1[0], r2, r3\n\tjump.lt\t@.BB0_5\n.BB0_4:\n\tadd\t@CPI0_68[0], r0, r1\n\tst.1\t0, r1\n\tadd\t65, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI0_65[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_69:\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_188\n\tnear_call\tr0, @fun, @DEFAULT_UNWIND\n\tadd\tr0, r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_5:\n\tst.1\t64, r2\n\tand\t31, r1, r2\n\tptr.add\tstack[@ptr_calldata], r0, r3\n\tshr.s!\t5, r1, r4\n\tjump.eq\t@.BB0_210\n\tadd\tr0, r0, r5\n.BB0_7:\n\tshl.s\t5, r5, r6\n\tptr.add\tr3, r6, r7\n\tld\tr7, r7\n\tadd\t224, r6, r6\n\tst.1\tr6, r7\n\tadd\t1, r5, r5\n\tsub!\tr5, r4, r6\n\tjump.lt\t@.BB0_7\n.BB0_210:\n\tsub.s!\t0, r2, r5\n\tjump.eq\t@.BB0_9\n\tshl.s\t5, r4, r4\n\tptr.add\tr3, r4, r3\n\tshl.s\t3, r2, r2\n\tadd\t224, r4, r4\n\tld.1\tr4, r5\n\tshl\tr5, r2, r5\n\tshr\tr5, r2, r5\n\tld\tr3, r3\n\tsub\t256, r2, r2\n\tshr\tr3, r2, r3\n\tshl\tr3, r2, r2\n\tor\tr2, r5, r2\n\tst.1\tr4, r2\n.BB0_9:\n\tadd\t@CPI0_2[0], r0, r2\n\tsub.s!\t32, r1, r3\n\tadd\t0, r0, r3\n\tadd.lt\tr2, r0, r3\n\tand\t@CPI0_2[0], r1, r1\n\tsub.s!\t0, r1, r4\n\tadd.le\t0, r0, r2\n\tsub.s!\t@CPI0_2[0], r1, r1\n\tadd\tr3, r0, r1\n\tadd.eq\tr2, r0, r1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_2\n\tld.1\t224, r1\n\tsub.s!\t@CPI0_3[0], r1, r2\n\tjump.gt\t@.BB0_2\n\tadd\t1, r0, r2\n\tadd\t49, r0, r3\n\tsstore\tr3, r2\n\tcontext.this\tr2\n\tst.1\t192, r2\n\tadd\t50, r0, r2\n\tsload\tr2, r3\n\tand\t@CPI0_4[0], r3, r3\n\tor\t@CPI0_5[0], r3, r3\n\tsstore\tr2, r3\n\tsub.s!\t0, r1, r2\n\tjump.ne\t@.BB0_13\n\tld.1\t64, r1\n\tadd\t@CPI0_8[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t@CPI0_0[0], r0, r2\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI0_9[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_16:\n\tsub.s!\t@CPI0_38[0], r1, r2\n\tjump.le\t@.BB0_17\n\tsub.s!\t@CPI0_39[0], r1, r2\n\tjump.gt\t@.BB0_36\n\tsub.s!\t@CPI0_46[0], r1, r2\n\tjump.le\t@.BB0_31\n\tsub.s!\t@CPI0_47[0], r1, r2\n\tjump.eq\t@.BB0_112\n\tsub.s!\t@CPI0_48[0], r1, r2\n\tjump.eq\t@.BB0_114\n\tsub.s!\t@CPI0_49[0], r1, r1\n\tjump.ne\t@.BB0_188\n\tnear_call\tr0, @external_fun_withdrawDepositTo, @DEFAULT_UNWIND\n.BB0_56:\n\tsub.s!\t@CPI0_12[0], r1, r2\n\tjump.gt\t@.BB0_63\n\tsub.s!\t@CPI0_19[0], r1, r2\n\tjump.le\t@.BB0_58\n\tsub.s!\t@CPI0_20[0], r1, r2\n\tjump.eq\t@.BB0_159\n\tsub.s!\t@CPI0_21[0], r1, r2\n\tjump.eq\t@.BB0_160\n\tsub.s!\t@CPI0_22[0], r1, r1\n\tjump.ne\t@.BB0_188\n\tcontext.get_context_u128\tr1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_2\n\tadd\tstack[@calldatasize], r0, r1\n\tnear_call\tr0, @abi_decode_bytes32t_bytes, @DEFAULT_UNWIND\n\tnear_call\tr0, @fun_checkSignatures, @DEFAULT_UNWIND\n\tadd\tr0, r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_17:\n\tsub.s!\t@CPI0_52[0], r1, r2\n\tjump.le\t@.BB0_18\n\tsub.s!\t@CPI0_53[0], r1, r2\n\tjump.le\t@.BB0_24\n\tsub.s!\t@CPI0_54[0], r1, r2\n\tjump.eq\t@.BB0_98\n\tsub.s!\t@CPI0_55[0], r1, r2\n\tjump.eq\t@.BB0_100\n\tsub.s!\t@CPI0_56[0], r1, r1\n\tjump.ne\t@.BB0_188\n\tcontext.get_context_u128\tr1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r0, r1\n\tadd\tstack[@calldatasize], r1, r1\n\tadd\t@CPI0_2[0], r0, r2\n\tsub.s!\t0, r1, r3\n\tadd\t0, r0, r3\n\tadd.lt\tr2, r0, r3\n\tand\t@CPI0_2[0], r1, r1\n\tsub.s!\t0, r1, r4\n\tadd.le\t0, r0, r2\n\tsub.s!\t@CPI0_2[0], r1, r1\n\tadd\tr3, r0, r1\n\tadd.eq\tr2, r0, r1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_2\n\tld.1\t64, r1\n\tadd\tr1, r0, stack-[3]\n\tadd\t@CPI0_73[0], r0, r1\n\tst.2\t0, r1\n\tcontext.code_source\tr1\n\tst.2\t4, r1\n\tadd\t32, r0, r1\n\tst.2\t36, r1\n\tadd\t32773, r0, r1\n\tadd\t68, r0, r2\n\tnear_call\tr0, @__system_request, @DEFAULT_UNWIND\n\tadd\tstack-[3], r0, r3\n\tst.1\tr3, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tsub.s!\t@CPI0_0[0], r3, r2\n\tadd.lt\tr3, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI0_63[0], r1, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_50:\n\tsub.s!\t@CPI0_26[0], r1, r2\n\tjump.le\t@.BB0_51\n\tsub.s!\t@CPI0_27[0], r1, r2\n\tjump.eq\t@.BB0_152\n\tsub.s!\t@CPI0_28[0], r1, r2\n\tjump.eq\t@.BB0_153\n\tsub.s!\t@CPI0_29[0], r1, r1\n\tjump.ne\t@.BB0_188\n\tcontext.get_context_u128\tr1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r0, r1\n\tadd\tstack[@calldatasize], r1, r1\n\tadd\t@CPI0_2[0], r0, r2\n\tsub.s!\t0, r1, r3\n\tadd\t0, r0, r3\n\tadd.lt\tr2, r0, r3\n\tand\t@CPI0_2[0], r1, r1\n\tsub.s!\t0, r1, r4\n\tadd.le\t0, r0, r2\n\tsub.s!\t@CPI0_2[0], r1, r1\n\tadd\tr3, r0, r1\n\tadd.eq\tr2, r0, r1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_2\n\tld.1\t64, r1\n\tadd\tr1, r0, stack-[3]\n\tadd\t@CPI0_73[0], r0, r1\n\tst.2\t0, r1\n\tcontext.code_source\tr1\n\tst.2\t4, r1\n\tst.2\t36, r0\n\tadd\t32773, r0, r1\n\tadd\t68, r0, r2\n\tnear_call\tr0, @__system_request, @DEFAULT_UNWIND\n\tand\t@CPI0_3[0], r1, r1\n\tadd\tstack-[3], r0, r3\n\tst.1\tr3, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tsub.s!\t@CPI0_0[0], r3, r2\n\tadd.lt\tr3, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI0_63[0], r1, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_36:\n\tsub.s!\t@CPI0_40[0], r1, r2\n\tjump.le\t@.BB0_37\n\tsub.s!\t@CPI0_41[0], r1, r2\n\tjump.eq\t@.BB0_123\n\tsub.s!\t@CPI0_42[0], r1, r2\n\tjump.eq\t@.BB0_124\n\tsub.s!\t@CPI0_43[0], r1, r1\n\tjump.ne\t@.BB0_188\n\tcontext.get_context_u128\tr1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r0, r1\n\tadd\tstack[@calldatasize], r1, r1\n\tadd\t@CPI0_2[0], r0, r2\n\tsub.s!\t0, r1, r3\n\tadd\t0, r0, r3\n\tadd.lt\tr2, r0, r3\n\tand\t@CPI0_2[0], r1, r1\n\tsub.s!\t0, r1, r4\n\tadd.le\t0, r0, r2\n\tsub.s!\t@CPI0_2[0], r1, r1\n\tadd\tr3, r0, r1\n\tadd.eq\tr2, r0, r1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_2\n\tadd\t@CPI0_66[0], r0, r1\n\tsload\tr1, r1\n\tand\t@CPI0_3[0], r1, r1\n\tld.1\t64, r2\n\tst.1\tr2, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI0_63[0], r1, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_63:\n\tsub.s!\t@CPI0_13[0], r1, r2\n\tjump.le\t@.BB0_64\n\tsub.s!\t@CPI0_14[0], r1, r2\n\tjump.eq\t@.BB0_181\n\tsub.s!\t@CPI0_15[0], r1, r2\n\tjump.eq\t@.BB0_124\n\tsub.s!\t@CPI0_16[0], r1, r1\n\tjump.ne\t@.BB0_188\n\tcontext.get_context_u128\tr1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r0, r1\n\tadd\tstack[@calldatasize], r1, r1\n\tadd\t@CPI0_2[0], r0, r2\n\tsub.s!\t0, r1, r3\n\tadd\t0, r0, r3\n\tadd.lt\tr2, r0, r3\n\tand\t@CPI0_2[0], r1, r1\n\tsub.s!\t0, r1, r4\n\tadd.le\t0, r0, r2\n\tsub.s!\t@CPI0_2[0], r1, r1\n\tadd\tr3, r0, r1\n\tadd.eq\tr2, r0, r1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_2\n\tld.1\t64, r1\n\tadd\tr1, r0, stack-[2]\n\tnear_call\tr0, @finalize_allocation_21860, @DEFAULT_UNWIND\n\tadd\tstack-[2], r0, r3\n\tadd\t32, r3, r1\n\tadd\t@CPI0_62[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t5, r0, r1\n\tst.1\tr3, r1\n\tadd\tr3, r0, r1\n\tadd\t32, r0, r2\n\tld.1\t64, r3\n\tadd\tr3, r0, stack-[3]\n\tst.1.inc\tr3, r2, r2\n\tnear_call\tr0, @abi_encode_bytes_to_bytes, @DEFAULT_UNWIND\n\tadd\tstack-[3], r0, r4\n\tsub\tr1, r4, r1\n\tadd\t@CPI0_0[0], r0, r2\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tsub.s!\t@CPI0_0[0], r4, r3\n\tadd.lt\tr4, r0, r2\n\tshl.s\t64, r2, r2\n\tshl.s\t96, r1, r1\n\tor\tr1, r2, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_18:\n\tsub.s!\t@CPI0_59[0], r1, r2\n\tjump.gt\t@.BB0_21\n\tsub.s!\t1906, r1, r2\n\tjump.eq\t@.BB0_70\n\tsub.s!\t36653, r1, r1\n\tjump.eq\t@.BB0_75\n\tjump\t@.BB0_188\n.BB0_13:\n\tst.1\t128, r1\n\tadd\t@CPI0_6[0], r0, r1\n\tst.2\t0, r1\n\tadd\t32779, r0, r1\n\tadd\t4, r0, r2\n\tnear_call\tr0, @__system_request, @DEFAULT_UNWIND\n\tst.1\t160, r1\n\tld.1\t128, r1\n\tst.2\t320, r0\n\tst.2\t352, r1\n\tadd\t32, r0, r1\n\tld.1\t160, r2\n\tst.2\t384, r1\n\tst.2\t416, r2\n\tadd\t64, r0, r2\n\tld.1\t192, r3\n\tst.2\t448, r2\n\tst.2\t480, r3\n\tst.2\t256, r1\n\tadd\t3, r0, r1\n\tst.2\t288, r1\n\tadd\t@CPI0_7[0], r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_45:\n\tsub.s!\t@CPI0_36[0], r1, r2\n\tjump.eq\t@.BB0_128\n\tsub.s!\t@CPI0_37[0], r1, r1\n\tjump.ne\t@.BB0_188\n.BB0_75:\n\tnear_call\tr0, @external_fun_executeBatchCall_4by, @DEFAULT_UNWIND\n.BB0_31:\n\tsub.s!\t@CPI0_50[0], r1, r2\n\tjump.eq\t@.BB0_110\n\tsub.s!\t@CPI0_51[0], r1, r1\n\tjump.ne\t@.BB0_188\n\tcontext.get_context_u128\tr1\n\tsub.s!\t0, r1, r1\n\tjump.eq\t@.BB0_96\n\tjump\t@.BB0_2\n.BB0_58:\n\tsub.s!\t@CPI0_23[0], r1, r2\n\tjump.eq\t@.BB0_157\n\tsub.s!\t@CPI0_24[0], r1, r1\n\tjump.ne\t@.BB0_188\n\tnear_call\tr0, @external_fun_requiredTxGas, @DEFAULT_UNWIND\n.BB0_24:\n\tsub.s!\t@CPI0_57[0], r1, r2\n\tjump.eq\t@.BB0_81\n\tsub.s!\t@CPI0_58[0], r1, r1\n\tjump.ne\t@.BB0_188\n\tcontext.get_context_u128\tr1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_2\n.BB0_96:\n\tsub.s\t4, r0, r1\n\tadd\tstack[@calldatasize], r1, r1\n\tadd\t@CPI0_2[0], r0, r2\n\tsub.s!\t32, r1, r3\n\tadd\t0, r0, r3\n\tadd.lt\tr2, r0, r3\n\tand\t@CPI0_2[0], r1, r1\n\tsub.s!\t0, r1, r4\n\tadd.le\t0, r0, r2\n\tsub.s!\t@CPI0_2[0], r1, r1\n\tadd\tr3, r0, r1\n\tadd.eq\tr2, r0, r1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_2\n\tadd\t4, r0, r1\n\tptr.add\tstack[@ptr_calldata], r1, r1\n\tld\tr1, r1\n\tst.1\t0, r1\n\tadd\t51, r0, r1\n\tst.1\t32, r1\n\tadd\t64, r0, r2\n\tadd\tr0, r0, r1\n\tnear_call\tr0, @__keccak256, @DEFAULT_UNWIND\n\tsload\tr1, r1\n\tld.1\t64, r2\n\tst.1\tr2, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI0_63[0], r1, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_51:\n\tsub.s!\t@CPI0_30[0], r1, r2\n\tjump.eq\t@.BB0_138\n\tsub.s!\t@CPI0_31[0], r1, r1\n\tjump.ne\t@.BB0_188\n\tcontext.get_context_u128\tr1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_2\n\tadd\tstack[@calldatasize], r0, r2\n\tsub.s\t4, r2, r1\n\tadd\t@CPI0_2[0], r0, r3\n\tsub.s!\t352, r1, r4\n\tadd\t0, r0, r4\n\tadd.lt\tr3, r0, r4\n\tand\t@CPI0_2[0], r1, r1\n\tsub.s!\t0, r1, r5\n\tadd.le\t0, r0, r3\n\tsub.s!\t@CPI0_2[0], r1, r1\n\tadd\tr4, r0, r1\n\tadd.eq\tr3, r0, r1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_2\n\tptr.add\tstack[@ptr_calldata], r0, r12\n\tptr.add.s\t4, r12, r1\n\tld\tr1, r1\n\tsub.s!\t@CPI0_3[0], r1, r3\n\tjump.gt\t@.BB0_2\n\tptr.add.s\t68, r12, r3\n\tld\tr3, r3\n\tsub.s!\t@CPI0_74[0], r3, r4\n\tjump.gt\t@.BB0_2\n\tadd\t35, r3, r4\n\tadd\t@CPI0_2[0], r0, r5\n\tsub!\tr4, r2, r6\n\tadd\t0, r0, r6\n\tadd.ge\tr5, r0, r6\n\tand\t@CPI0_2[0], r2, r7\n\tand\t@CPI0_2[0], r4, r4\n\tsub!\tr4, r7, r8\n\tadd.ge\t0, r0, r5\n\txor\tr4, r7, r4\n\tsub.s!\t@CPI0_2[0], r4, r4\n\tadd\tr6, r0, r4\n\tadd.eq\tr5, r0, r4\n\tsub.s!\t0, r4, r4\n\tjump.ne\t@.BB0_2\n\tadd\t4, r3, r4\n\tptr.add\tr12, r4, r4\n\tld\tr4, r4\n\tsub.s!\t@CPI0_74[0], r4, r5\n\tjump.gt\t@.BB0_2\n\tadd\t36, r3, r3\n\tadd\tr4, r3, r5\n\tsub!\tr5, r2, r2\n\tjump.gt\t@.BB0_2\n\tptr.add.s\t100, r12, r2\n\tld\tr2, r5\n\tsub.s!\t1, r5, r2\n\tjump.gt\t@.BB0_2\n\tptr.add.s\t260, r12, r2\n\tld\tr2, r10\n\tsub.s!\t@CPI0_3[0], r10, r2\n\tjump.gt\t@.BB0_2\n\tptr.add.s\t292, r12, r2\n\tld\tr2, r11\n\tsub.s!\t@CPI0_3[0], r11, r2\n\tjump.gt\t@.BB0_2\n\tptr.add.s\t36, r12, r2\n\tld\tr2, r2\n\tptr.add.s\t132, r12, r6\n\tld\tr6, r6\n\tptr.add.s\t164, r12, r7\n\tld\tr7, r7\n\tptr.add.s\t196, r12, r8\n\tld\tr8, r8\n\tptr.add.s\t228, r12, r9\n\tld\tr9, r9\n\tptr.add.s\t324, r12, r12\n\tld\tr12, r12\n\tnear_call\tr0, @fun_getTransactionHash, @DEFAULT_UNWIND\n\tld.1\t64, r2\n\tst.1\tr2, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI0_63[0], r1, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_37:\n\tsub.s!\t@CPI0_44[0], r1, r2\n\tjump.eq\t@.BB0_116\n\tsub.s!\t@CPI0_45[0], r1, r1\n\tjump.ne\t@.BB0_188\n\tnear_call\tr0, @external_fun_encodeTransactionData, @DEFAULT_UNWIND\n.BB0_64:\n\tsub.s!\t@CPI0_17[0], r1, r2\n\tjump.eq\t@.BB0_163\n\tsub.s!\t@CPI0_18[0], r1, r1\n\tjump.ne\t@.BB0_188\n\tcontext.get_context_u128\tr1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r0, r1\n\tadd\tstack[@calldatasize], r1, r1\n\tadd\t@CPI0_2[0], r0, r2\n\tsub.s!\t64, r1, r3\n\tadd\t0, r0, r3\n\tadd.lt\tr2, r0, r3\n\tand\t@CPI0_2[0], r1, r1\n\tsub.s!\t0, r1, r4\n\tadd.le\t0, r0, r2\n\tsub.s!\t@CPI0_2[0], r1, r1\n\tadd\tr3, r0, r1\n\tadd.eq\tr2, r0, r1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_2\n\tptr.add\tstack[@ptr_calldata], r0, r1\n\tptr.add.s\t4, r1, r2\n\tld\tr2, r2\n\tsub.s!\t@CPI0_3[0], r2, r3\n\tjump.gt\t@.BB0_2\n\tptr.add.s\t36, r1, r1\n\tld\tr1, r1\n\tsub.s!\t@CPI0_3[0], r1, r3\n\tjump.gt\t@.BB0_2\n\tadd\t50, r0, r3\n\tsload\tr3, r4\n\tand!\t@CPI0_3[0], r4, r5\n\tjump.ne\t@.BB0_176\n\tsub.s!\t0, r2, r5\n\tjump.eq\t@.BB0_88\n\tand\t@CPI0_4[0], r4, r4\n\tor\tr4, r2, r2\n\tsstore\tr3, r2\n\tsub.s!\t0, r1, r2\n\tjump.eq\t@.BB0_169\n\tadd\t@CPI0_66[0], r0, r2\n\tsstore\tr2, r1\n\tld.1\t64, r1\n\tsub.s!\t@CPI0_67[0], r1, r2\n\tjump.gt\t@.BB0_4\n\tadd\t32, r1, r2\n\tst.1\t64, r2\n\tst.1\tr1, r0\n\tnear_call\tr0, @fun_setupModules, @DEFAULT_UNWIND\n\tadd\tr0, r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_21:\n\tsub.s!\t@CPI0_60[0], r1, r2\n\tjump.eq\t@.BB0_76\n\tsub.s!\t@CPI0_61[0], r1, r1\n\tjump.ne\t@.BB0_188\n\tnear_call\tr0, @external_fun_updateImplementation, @DEFAULT_UNWIND\n.BB0_188:\n\tcontext.get_context_u128\tr1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_2\n\tadd\t@CPI0_66[0], r0, r1\n\tsload\tr1, r2\n\tsub.s!\t0, r2, r1\n\tjump.ne\t@.BB0_190\n.BB0_94:\n\tadd\tr0, r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_190:\n\tptr.add\tstack[@ptr_calldata], r0, r1\n\tadd\tstack[@calldatasize], r0, r3\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r3\n\tjump.eq\t@.BB0_209\n\tadd\tr0, r0, r5\n.BB0_192:\n\tshl.s\t5, r5, r6\n\tptr.add\tr1, r6, r7\n\tld\tr7, r7\n\tst.1\tr6, r7\n\tadd\t1, r5, r5\n\tsub!\tr5, r3, r6\n\tjump.lt\t@.BB0_192\n.BB0_209:\n\tsub.s!\t0, r4, r5\n\tjump.eq\t@.BB0_194\n\tshl.s\t3, r4, r4\n\tshl.s\t5, r3, r3\n\tld.1\tr3, r5\n\tshl\tr5, r4, r5\n\tshr\tr5, r4, r5\n\tptr.add\tr1, r3, r1\n\tld\tr1, r1\n\tsub\t256, r4, r4\n\tshr\tr1, r4, r1\n\tshl\tr1, r4, r1\n\tor\tr1, r5, r1\n\tst.1\tr3, r1\n.BB0_194:\n\tcontext.caller\tr1\n\tshl.s\t96, r1, r1\n\tadd\tstack[@calldatasize], r0, r3\n\tst.1\tr3, r1\n\tadd\tstack[@calldatasize], r0, r3\n\tcontext.gas_left\tr1\n\tsub.s!\t4, r2, r4\n\tjump.ne\t@.BB0_199\n\tptr.add\tstack[@ptr_return_data], r0, r1\n\tadd\tstack[@returndatasize], r0, r2\n\tand\t31, r2, r3\n\tshr.s!\t5, r2, r2\n\tjump.eq\t@.BB0_207\n\tadd\tr0, r0, r4\n.BB0_197:\n\tshl.s\t5, r4, r5\n\tptr.add\tr1, r5, r6\n\tld\tr6, r6\n\tst.1\tr5, r6\n\tadd\t1, r4, r4\n\tsub!\tr4, r2, r5\n\tjump.lt\t@.BB0_197\n.BB0_207:\n\tsub.s!\t0, r3, r4\n\tjump.eq\t@.BB0_205\n\tshl.s\t3, r3, r3\n\tshl.s\t5, r2, r2\n\tld.1\tr2, r4\n\tshl\tr4, r3, r4\n\tshr\tr4, r3, r4\n\tptr.add\tr1, r2, r1\n\tld\tr1, r1\n\tsub\t256, r3, r3\n\tshr\tr1, r3, r1\n\tshl\tr1, r3, r1\n\tor\tr1, r4, r1\n\tst.1\tr2, r1\n\tjump\t@.BB0_205\n.BB0_199:\n\tadd\t20, r3, r3\n\tadd\t@CPI0_0[0], r0, r4\n\tsub.s!\t@CPI0_0[0], r3, r5\n\tadd.ge\tr4, r0, r3\n\tsub.s!\t@CPI0_0[0], r1, r5\n\tadd.ge\tr4, r0, r1\n\tshl.s\t192, r1, r1\n\tshl.s\t96, r3, r3\n\tor\tr3, r1, r1\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r4\n\tand\t31, r4, r3\n\tand\t@CPI0_0[0], r4, stack[@returndatasize]\n\tand\t@CPI0_0[0], r4, r4\n\tshr.s!\t5, r4, r4\n\tjump.eq\t@.BB0_208\n\tadd\tr0, r0, r5\n.BB0_201:\n\tshl.s\t5, r5, r6\n\tptr.add\tr1, r6, r7\n\tld\tr7, r7\n\tst.1\tr6, r7\n\tadd\t1, r5, r5\n\tsub!\tr5, r4, r6\n\tjump.lt\t@.BB0_201\n.BB0_208:\n\tsub.s!\t0, r3, r5\n\tjump.eq\t@.BB0_203\n\tshl.s\t3, r3, r3\n\tshl.s\t5, r4, r4\n\tld.1\tr4, r5\n\tshl\tr5, r3, r5\n\tshr\tr5, r3, r5\n\tptr.add\tr1, r4, r1\n\tld\tr1, r1\n\tsub\t256, r3, r3\n\tshr\tr1, r3, r1\n\tshl\tr1, r3, r1\n\tor\tr1, r5, r1\n\tst.1\tr4, r1\n.BB0_203:\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB0_204\n.BB0_205:\n\tadd\t@CPI0_0[0], r0, r1\n\tadd\tstack[@returndatasize], r0, r2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t96, r1, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_124:\n\tnear_call\tr0, @external_fun_execTransaction_S6W, @DEFAULT_UNWIND\n.BB0_204:\n\tadd\t@CPI0_0[0], r0, r1\n\tadd\tstack[@returndatasize], r0, r2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t96, r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_131:\n\tcontext.get_context_u128\tr1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_2\n\tadd\tstack[@calldatasize], r0, r2\n\tsub.s\t4, r2, r1\n\tadd\t@CPI0_2[0], r0, r3\n\tsub.s!\t96, r1, r4\n\tadd\t0, r0, r4\n\tadd.lt\tr3, r0, r4\n\tand\t@CPI0_2[0], r1, r1\n\tsub.s!\t0, r1, r5\n\tadd.le\t0, r0, r3\n\tsub.s!\t@CPI0_2[0], r1, r1\n\tadd\tr4, r0, r1\n\tadd.eq\tr3, r0, r1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_2\n\tptr.add\tstack[@ptr_calldata], r0, r1\n\tptr.add.s\t4, r1, r3\n\tld\tr3, r4\n\tsub.s!\t@CPI0_3[0], r4, r3\n\tjump.gt\t@.BB0_2\n\tptr.add.s\t68, r1, r1\n\tld\tr1, r1\n\tsub.s!\t@CPI0_74[0], r1, r3\n\tjump.gt\t@.BB0_2\n\tadd\t4, r1, r1\n\tadd\tr4, r0, stack-[3]\n\tnear_call\tr0, @abi_decode_bytes_calldata, @DEFAULT_UNWIND\n\tadd\tr1, r0, stack-[2]\n\tadd\tr2, r0, stack-[1]\n\tnear_call\tr0, @fun_requireFromEntryPointOrOwner, @DEFAULT_UNWIND\n\tadd\tstack[@calldatasize], r0, r3\n\tadd\tstack-[2], r0, r1\n\tadd\tstack-[1], r0, r2\n\tnear_call\tr0, @abi_decode_available_length_bytes, @DEFAULT_UNWIND\n\tadd\t36, r0, r2\n\tptr.add\tstack[@ptr_calldata], r2, r2\n\tld\tr2, r2\n\tadd\tr1, r0, r3\n\tadd\tstack-[3], r0, r1\n\tnear_call\tr0, @fun_call, @DEFAULT_UNWIND\n\tadd\tr0, r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_136:\n\tnear_call\tr0, @external_fun_handlePaymentRevert, @DEFAULT_UNWIND\n.BB0_159:\n\tnear_call\tr0, @external_fun_getModulesPaginated, @DEFAULT_UNWIND\n.BB0_160:\n\tnear_call\tr0, @external_fun_disableModule, @DEFAULT_UNWIND\n.BB0_100:\n\tcontext.get_context_u128\tr1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r0, r1\n\tadd\tstack[@calldatasize], r1, r1\n\tadd\t@CPI0_2[0], r0, r2\n\tsub.s!\t32, r1, r3\n\tadd\t0, r0, r3\n\tadd.lt\tr2, r0, r3\n\tand\t@CPI0_2[0], r1, r1\n\tsub.s!\t0, r1, r4\n\tadd.le\t0, r0, r2\n\tsub.s!\t@CPI0_2[0], r1, r1\n\tadd\tr3, r0, r1\n\tadd.eq\tr2, r0, r1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_2\n\tadd\t4, r0, r1\n\tptr.add\tstack[@ptr_calldata], r1, r1\n\tld\tr1, r1\n\tsub.s!\t@CPI0_3[0], r1, r2\n\tjump.gt\t@.BB0_2\n\tsub.s!\t1, r1, r2\n\tadd\tr0, r0, r2\n\tjump.eq\t@.BB0_106\n\tst.1\t0, r1\n\tst.1\t32, r0\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_75[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tsload\tr1, r1\n\tand!\t@CPI0_3[0], r1, r1\n\tadd\t0, r0, r2\n\tadd.ne\t1, r0, r2\n.BB0_106:\n\tand\t1, r2, r1\n\tld.1\t64, r2\n\tst.1\tr2, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI0_63[0], r1, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_152:\n\tnear_call\tr0, @external_fun_pullTokens, @DEFAULT_UNWIND\n.BB0_153:\n\tnear_call\tr0, @external_fun_nonce, @DEFAULT_UNWIND\n.BB0_181:\n\tcontext.get_context_u128\tr1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r0, r1\n\tadd\tstack[@calldatasize], r1, r1\n\tadd\t@CPI0_2[0], r0, r2\n\tsub.s!\t0, r1, r3\n\tadd\t0, r0, r3\n\tadd.lt\tr2, r0, r3\n\tand\t@CPI0_2[0], r1, r1\n\tsub.s!\t0, r1, r4\n\tadd.le\t0, r0, r2\n\tsub.s!\t@CPI0_2[0], r1, r1\n\tadd\tr3, r0, r1\n\tadd.eq\tr2, r0, r1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_2\n\tnear_call\tr0, @fun_domainSeparator, @DEFAULT_UNWIND\n\tld.1\t64, r2\n\tst.1\tr2, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI0_63[0], r1, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_70:\n\tcontext.get_context_u128\tr1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_2\n\tadd\tstack[@calldatasize], r0, r2\n\tsub.s\t4, r2, r1\n\tadd\t@CPI0_2[0], r0, r3\n\tsub.s!\t96, r1, r4\n\tadd\t0, r0, r4\n\tadd.lt\tr3, r0, r4\n\tand\t@CPI0_2[0], r1, r1\n\tsub.s!\t0, r1, r5\n\tadd.le\t0, r0, r3\n\tsub.s!\t@CPI0_2[0], r1, r1\n\tadd\tr4, r0, r1\n\tadd.eq\tr3, r0, r1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_2\n\tptr.add\tstack[@ptr_calldata], r0, r1\n\tptr.add.s\t4, r1, r3\n\tld\tr3, r4\n\tsub.s!\t@CPI0_3[0], r4, r3\n\tjump.gt\t@.BB0_2\n\tptr.add.s\t68, r1, r1\n\tld\tr1, r1\n\tsub.s!\t@CPI0_74[0], r1, r3\n\tjump.gt\t@.BB0_2\n\tadd\t4, r1, r1\n\tadd\tr4, r0, stack-[3]\n\tnear_call\tr0, @abi_decode_bytes_calldata, @DEFAULT_UNWIND\n\tadd\tr1, r0, stack-[2]\n\tadd\tr2, r0, stack-[1]\n\tnear_call\tr0, @fun_requireFromEntryPointOrOwner, @DEFAULT_UNWIND\n\tadd\tstack[@calldatasize], r0, r3\n\tadd\tstack-[2], r0, r1\n\tadd\tstack-[1], r0, r2\n\tnear_call\tr0, @abi_decode_available_length_bytes, @DEFAULT_UNWIND\n\tadd\t36, r0, r2\n\tptr.add\tstack[@ptr_calldata], r2, r2\n\tld\tr2, r2\n\tadd\tr1, r0, r3\n\tadd\tstack-[3], r0, r1\n\tnear_call\tr0, @fun_call, @DEFAULT_UNWIND\n\tadd\tr0, r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_128:\n\tcontext.get_context_u128\tr1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r0, r1\n\tadd\tstack[@calldatasize], r1, r1\n\tadd\t@CPI0_2[0], r0, r2\n\tsub.s!\t0, r1, r3\n\tadd\t0, r0, r3\n\tadd.lt\tr2, r0, r3\n\tand\t@CPI0_2[0], r1, r1\n\tsub.s!\t0, r1, r4\n\tadd.le\t0, r0, r2\n\tsub.s!\t@CPI0_2[0], r1, r1\n\tadd\tr3, r0, r1\n\tadd.eq\tr2, r0, r1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_2\n\tadd\t50, r0, r1\n\tsload\tr1, r1\n\tand\t@CPI0_3[0], r1, r1\n\tld.1\t64, r2\n\tst.1\tr2, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI0_63[0], r1, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_157:\n\tnear_call\tr0, @external_fun_getDeposit, @DEFAULT_UNWIND\n.BB0_81:\n\tcontext.get_context_u128\tr1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r0, r1\n\tadd\tstack[@calldatasize], r1, r1\n\tadd\t@CPI0_2[0], r0, r2\n\tsub.s!\t32, r1, r3\n\tadd\t0, r0, r3\n\tadd.lt\tr2, r0, r3\n\tand\t@CPI0_2[0], r1, r1\n\tsub.s!\t0, r1, r4\n\tadd.le\t0, r0, r2\n\tsub.s!\t@CPI0_2[0], r1, r1\n\tadd\tr3, r0, r1\n\tadd.eq\tr2, r0, r1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_2\n\tadd\t4, r0, r1\n\tptr.add\tstack[@ptr_calldata], r1, r1\n\tld\tr1, r7\n\tsub.s!\t@CPI0_3[0], r7, r1\n\tjump.gt\t@.BB0_2\n\tadd\t50, r0, r1\n\tsload\tr1, r2\n\tand\t@CPI0_3[0], r2, r6\n\tcontext.caller\tr2\n\tsub!\tr2, r6, r3\n\tjump.eq\t@.BB0_87\n\tcontext.this\tr3\n\tsub!\tr2, r3, r3\n\tjump.ne\t@.BB0_86\n.BB0_87:\n\tsub.s!\t0, r7, r2\n\tjump.ne\t@.BB0_89\n.BB0_88:\n\tld.1\t64, r1\n\tadd\t@CPI0_81[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t@CPI0_0[0], r0, r2\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI0_9[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_138:\n\tcontext.get_context_u128\tr1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r0, r1\n\tadd\tstack[@calldatasize], r1, r1\n\tadd\t@CPI0_2[0], r0, r2\n\tsub.s!\t0, r1, r3\n\tadd\t0, r0, r3\n\tadd.lt\tr2, r0, r3\n\tand\t@CPI0_2[0], r1, r1\n\tsub.s!\t0, r1, r4\n\tadd.le\t0, r0, r2\n\tsub.s!\t@CPI0_2[0], r1, r1\n\tadd\tr3, r0, r1\n\tadd.eq\tr2, r0, r1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_2\n\tcontext.this\tr1\n\tsload\tr1, r1\n\tand\t@CPI0_3[0], r1, r1\n\tld.1\t64, r2\n\tst.1\tr2, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI0_63[0], r1, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_163:\n\tcontext.get_context_u128\tr1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r0, r1\n\tadd\tstack[@calldatasize], r1, r1\n\tadd\t@CPI0_2[0], r0, r2\n\tsub.s!\t32, r1, r3\n\tadd\t0, r0, r3\n\tadd.lt\tr2, r0, r3\n\tand\t@CPI0_2[0], r1, r1\n\tsub.s!\t0, r1, r4\n\tadd.le\t0, r0, r2\n\tsub.s!\t@CPI0_2[0], r1, r1\n\tadd\tr3, r0, r1\n\tadd.eq\tr2, r0, r1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_2\n\tadd\t4, r0, r1\n\tptr.add\tstack[@ptr_calldata], r1, r1\n\tld\tr1, r6\n\tsub.s!\t@CPI0_3[0], r6, r1\n\tjump.gt\t@.BB0_2\n\tcontext.caller\tr1\n\tcontext.this\tr2\n\tsub!\tr1, r2, r2\n\tjump.ne\t@.BB0_167\n\tsub.s!\t0, r6, r1\n\tjump.ne\t@.BB0_170\n.BB0_169:\n\tld.1\t64, r1\n\tadd\t@CPI0_72[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t@CPI0_0[0], r0, r2\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI0_9[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_76:\n\tcontext.get_context_u128\tr1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r0, r1\n\tadd\tstack[@calldatasize], r1, r1\n\tadd\t@CPI0_2[0], r0, r2\n\tsub.s!\t32, r1, r3\n\tadd\t0, r0, r3\n\tadd.lt\tr2, r0, r3\n\tand\t@CPI0_2[0], r1, r1\n\tsub.s!\t0, r1, r4\n\tadd.le\t0, r0, r2\n\tsub.s!\t@CPI0_2[0], r1, r1\n\tadd\tr3, r0, r1\n\tadd.eq\tr2, r0, r1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_2\n\tadd\t4, r0, r1\n\tptr.add\tstack[@ptr_calldata], r1, r1\n\tld\tr1, r1\n\tand\t@CPI0_76[0], r1, r2\n\tsub!\tr2, r1, r2\n\tjump.ne\t@.BB0_2\n\tsub.s!\t@CPI0_82[0], r1, r1\n\tadd\t0, r0, r1\n\tadd.eq\t1, r0, r1\n\tld.1\t64, r2\n\tst.1\tr2, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI0_63[0], r1, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_112:\n\tcontext.get_context_u128\tr1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_2\n\tadd\tstack[@calldatasize], r0, r1\n\tnear_call\tr0, @abi_decode_addresst_uint256t_bytest_enum_Operation, @DEFAULT_UNWIND\n\tnear_call\tr0, @fun_execTransactionFromModule, @DEFAULT_UNWIND\n\tsub.s!\t0, r1, r1\n\tadd\t0, r0, r1\n\tadd.ne\t1, r0, r1\n\tld.1\t64, r2\n\tst.1\tr2, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI0_63[0], r1, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_114:\n\tnear_call\tr0, @external_fun_addDeposit, @DEFAULT_UNWIND\n.BB0_98:\n\tcontext.get_context_u128\tr1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_2\n\tadd\tstack[@calldatasize], r0, r1\n\tnear_call\tr0, @abi_decode_bytes32t_bytes, @DEFAULT_UNWIND\n\tnear_call\tr0, @fun_isValidSignature, @DEFAULT_UNWIND\n\tand\t@CPI0_76[0], r1, r1\n\tld.1\t64, r2\n\tst.1\tr2, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI0_63[0], r1, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_123:\n\tnear_call\tr0, @external_fun_enableModule, @DEFAULT_UNWIND\n.BB0_110:\n\tnear_call\tr0, @external_fun_validateUserOp, @DEFAULT_UNWIND\n.BB0_116:\n\tcontext.get_context_u128\tr1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_2\n\tadd\tstack[@calldatasize], r0, r1\n\tnear_call\tr0, @abi_decode_addresst_uint256t_bytest_enum_Operation, @DEFAULT_UNWIND\n\tnear_call\tr0, @fun_execTransactionFromModule, @DEFAULT_UNWIND\n\tld.1\t64, r3\n\tadd\t32, r3, r2\n\tadd\tstack[@returndatasize], r2, r4\n\tst.1\t64, r4\n\tadd\tstack[@returndatasize], r0, r4\n\tst.1\tr3, r4\n\tptr.add\tstack[@ptr_return_data], r0, r4\n\tadd\tstack[@returndatasize], r0, r6\n\tand\t31, r6, r5\n\tshr.s!\t5, r6, r6\n\tjump.eq\t@.BB0_206\n\tadd\tr0, r0, r7\n.BB0_119:\n\tshl.s\t5, r7, r8\n\tadd\tr2, r8, r9\n\tptr.add\tr4, r8, r8\n\tld\tr8, r8\n\tst.1\tr9, r8\n\tadd\t1, r7, r7\n\tsub!\tr7, r6, r8\n\tjump.lt\t@.BB0_119\n.BB0_206:\n\tsub.s!\t0, r5, r7\n\tjump.eq\t@.BB0_121\n\tshl.s\t5, r6, r6\n\tptr.add\tr4, r6, r4\n\tadd\tr2, r6, r2\n\tshl.s\t3, r5, r5\n\tld.1\tr2, r6\n\tshl\tr6, r5, r6\n\tshr\tr6, r5, r6\n\tld\tr4, r4\n\tsub\t256, r5, r5\n\tshr\tr4, r5, r4\n\tshl\tr4, r5, r4\n\tor\tr4, r6, r4\n\tst.1\tr2, r4\n.BB0_121:\n\tld.1\t64, r5\n\tadd\tr5, r0, stack-[3]\n\tadd\t32, r5, r2\n\tadd\t64, r0, r4\n\tst.1\tr2, r4\n\tsub.s!\t0, r1, r1\n\tadd\t0, r0, r1\n\tadd.ne\t1, r0, r1\n\tst.1\tr5, r1\n\tadd\t64, r5, r2\n\tadd\tr3, r0, r1\n\tnear_call\tr0, @abi_encode_bytes_to_bytes, @DEFAULT_UNWIND\n\tadd\tstack-[3], r0, r4\n\tsub\tr1, r4, r1\n\tadd\t@CPI0_0[0], r0, r2\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tsub.s!\t@CPI0_0[0], r4, r3\n\tadd.lt\tr4, r0, r2\n\tshl.s\t64, r2, r2\n\tshl.s\t96, r1, r1\n\tor\tr1, r2, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_167:\n\tld.1\t64, r2\n\tadd\t@CPI0_69[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t4, r2, r3\n\tst.1\tr3, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI0_65[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_89:\n\tcontext.this\tr5\n\tsub!\tr7, r5, r2\n\tjump.ne\t@.BB0_91\n\tld.1\t64, r1\n\tadd\t@CPI0_80[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t@CPI0_0[0], r0, r2\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI0_9[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_176:\n\tld.1\t64, r1\n\tadd\t@CPI0_64[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tcontext.this\tr3\n\tst.1\tr2, r3\n\tadd\t@CPI0_0[0], r0, r2\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI0_65[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_86:\n\tld.1\t64, r1\n\tadd\t@CPI0_77[0], r0, r3\n\tst.1\tr1, r3\n\tadd\t4, r1, r3\n\tst.1\tr3, r2\n\tadd\t@CPI0_0[0], r0, r2\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI0_65[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_170:\n\tadd\t@CPI0_66[0], r0, r1\n\tsload\tr1, r2\n\tsstore\tr1, r6\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr3\n\tsub.s!\t@CPI0_0[0], r3, r4\n\tadd.lt\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_70[0], r1, r1\n\tand\t@CPI0_3[0], r2, r5\n\tadd\t32781, r0, r2\n\tadd\t3, r0, r3\n\tadd\t@CPI0_71[0], r0, r4\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.ne\t@.BB0_94\n\tjump\t@.BB0_2\n.BB0_91:\n\tsub!\tr7, r6, r2\n\tjump.ne\t@.BB0_93\n\tld.1\t64, r1\n\tadd\t@CPI0_79[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t@CPI0_0[0], r0, r2\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI0_9[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_93:\n\tsstore\tr1, r7\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_70[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t4, r0, r3\n\tadd\t@CPI0_78[0], r0, r4\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.ne\t@.BB0_94\n.BB0_2:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end0:\n\n__keccak256:\n.func_begin1:\n\tadd\t@CPI1_0[0], r0, r3\n\tsub.s!\t@CPI1_0[0], r1, r4\n\tadd.ge\tr3, r0, r1\n\tshl.s\t64, r1, r1\n\tsub.s!\t@CPI1_0[0], r2, r4\n\tadd.ge\tr3, r0, r2\n\tshl.s\t96, r2, r2\n\tor\tr2, r1, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI1_0[0], r2, r4\n\tadd.ge\tr3, r0, r2\n\tshl.s\t192, r2, r2\n\tor\tr2, r1, r1\n\tor\t@CPI1_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB1_2\n\tld\tr1, r1\n\tret\n.BB1_2:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end1:\n\n__system_request:\n.func_begin2:\n\tadd\tr1, r0, r3\n\tadd\t@CPI2_0[0], r0, r1\n\tcontext.gas_left\tr4\n\tsub.s!\t@CPI2_0[0], r4, r5\n\tadd.lt\tr4, r0, r1\n\tshl.s\t192, r1, r1\n\tshl.s\t96, r2, r2\n\tadd\tr2, r1, r1\n\tadd\t@CPI2_1[0], r1, r1\n\tadd\tr3, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB2_2\n\tld\tr1, r1\n\tret\n.BB2_2:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end2:\n\nabi_decode_bytes_calldata:\n.func_begin3:\n\tadd\t31, r1, r3\n\tadd\t@CPI3_0[0], r0, r4\n\tsub!\tr3, r2, r5\n\tadd\t0, r0, r5\n\tadd.lt\tr4, r0, r5\n\tand\t@CPI3_0[0], r2, r6\n\tand\t@CPI3_0[0], r3, r3\n\tsub!\tr3, r6, r7\n\tadd.le\t0, r0, r4\n\txor\tr3, r6, r3\n\tsub.s!\t@CPI3_0[0], r3, r3\n\tadd\tr5, r0, r3\n\tadd.eq\tr4, r0, r3\n\tsub.s!\t0, r3, r3\n\tjump.eq\t@.BB3_1\n\tptr.add\tstack[@ptr_calldata], r1, r3\n\tld\tr3, r3\n\tsub.s!\t@CPI3_1[0], r3, r4\n\tjump.gt\t@.BB3_1\n\tadd\t32, r1, r1\n\tadd\tr1, r3, r4\n\tsub!\tr4, r2, r2\n\tjump.gt\t@.BB3_1\n\tadd\tr3, r0, r2\n\tret\n.BB3_1:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end3:\n\nexternal_fun_executeBatchCall_4by:\n.func_begin4:\n\tnop\tstack+=[7]\n\tcontext.get_context_u128\tr1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB4_1\n\tadd\tstack[@calldatasize], r0, r1\n\tsub.s\t4, r1, r2\n\tadd\t@CPI4_0[0], r0, r3\n\tsub.s!\t96, r2, r4\n\tadd\t0, r0, r4\n\tadd.lt\tr3, r0, r4\n\tand\t@CPI4_0[0], r2, r2\n\tsub.s!\t0, r2, r5\n\tadd.le\t0, r0, r3\n\tsub.s!\t@CPI4_0[0], r2, r2\n\tadd\tr4, r0, r2\n\tadd.eq\tr3, r0, r2\n\tsub.s!\t0, r2, r2\n\tjump.eq\t@.BB4_3\n.BB4_1:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB4_3:\n\tptr.add\tstack[@ptr_calldata], r0, r2\n\tptr.add.s\t4, r2, r3\n\tld\tr3, r3\n\tsub.s!\t@CPI4_1[0], r3, r4\n\tjump.gt\t@.BB4_1\n\tadd\t35, r3, r4\n\tadd\t@CPI4_0[0], r0, r5\n\tsub!\tr4, r1, r6\n\tadd\t0, r0, r6\n\tadd.ge\tr5, r0, r6\n\tand\t@CPI4_0[0], r1, r7\n\tand\t@CPI4_0[0], r4, r4\n\tsub!\tr4, r7, r8\n\tadd.ge\t0, r0, r5\n\txor\tr4, r7, r4\n\tsub.s!\t@CPI4_0[0], r4, r4\n\tadd\tr6, r0, r4\n\tadd.eq\tr5, r0, r4\n\tsub.s!\t0, r4, r4\n\tjump.ne\t@.BB4_1\n\tadd\t4, r3, r4\n\tptr.add\tr2, r4, r4\n\tld\tr4, r9\n\tsub.s!\t@CPI4_1[0], r9, r4\n\tjump.gt\t@.BB4_1\n\tadd\t36, r3, r10\n\tshl.s\t5, r9, r3\n\tadd\tr3, r10, r3\n\tsub!\tr3, r1, r3\n\tjump.gt\t@.BB4_1\n\tptr.add.s\t36, r2, r3\n\tld\tr3, r3\n\tsub.s!\t@CPI4_1[0], r3, r4\n\tjump.gt\t@.BB4_1\n\tadd\t35, r3, r4\n\tadd\t@CPI4_0[0], r0, r5\n\tsub!\tr4, r1, r6\n\tadd\t0, r0, r6\n\tadd.ge\tr5, r0, r6\n\tand\t@CPI4_0[0], r1, r7\n\tand\t@CPI4_0[0], r4, r4\n\tsub!\tr4, r7, r8\n\tadd.ge\t0, r0, r5\n\txor\tr4, r7, r4\n\tsub.s!\t@CPI4_0[0], r4, r4\n\tadd\tr6, r0, r4\n\tadd.eq\tr5, r0, r4\n\tsub.s!\t0, r4, r4\n\tjump.ne\t@.BB4_1\n\tadd\t4, r3, r4\n\tptr.add\tr2, r4, r4\n\tld\tr4, r11\n\tsub.s!\t@CPI4_1[0], r11, r4\n\tjump.gt\t@.BB4_1\n\tadd\t36, r3, r8\n\tshl.s\t5, r11, r3\n\tadd\tr3, r8, r3\n\tsub!\tr3, r1, r3\n\tjump.gt\t@.BB4_1\n\tptr.add.s\t68, r2, r3\n\tld\tr3, r12\n\tsub.s!\t@CPI4_1[0], r12, r3\n\tjump.gt\t@.BB4_1\n\tadd\t35, r12, r3\n\tadd\t@CPI4_0[0], r0, r4\n\tsub!\tr3, r1, r5\n\tadd\t0, r0, r5\n\tadd.ge\tr4, r0, r5\n\tand\t@CPI4_0[0], r1, r6\n\tand\t@CPI4_0[0], r3, r3\n\tsub!\tr3, r6, r7\n\tadd.ge\t0, r0, r4\n\txor\tr3, r6, r3\n\tsub.s!\t@CPI4_0[0], r3, r3\n\tadd\tr5, r0, r3\n\tadd.eq\tr4, r0, r3\n\tsub.s!\t0, r3, r3\n\tjump.ne\t@.BB4_1\n\tadd\t4, r12, r3\n\tptr.add\tr2, r3, r2\n\tld\tr2, r5\n\tsub.s!\t@CPI4_1[0], r5, r2\n\tjump.gt\t@.BB4_1\n\tadd\t36, r12, r4\n\tshl.s\t5, r5, r2\n\tadd\tr2, r4, r2\n\tsub!\tr2, r1, r1\n\tjump.gt\t@.BB4_1\n\tadd\t@CPI4_2[0], r0, r1\n\tst.2\t0, r1\n\tcontext.code_source\tr1\n\tst.2\t4, r1\n\tst.2\t36, r0\n\tadd\t@CPI4_3[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI4_3[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI4_4[0], r1, r1\n\tadd\t32773, r0, r2\n\tadd\tr9, r0, stack-[6]\n\tadd\tr10, r0, stack-[5]\n\tadd\tr8, r0, stack-[4]\n\tadd\tr4, r0, stack-[3]\n\tadd\tr11, r0, stack-[7]\n\tadd\tr12, r0, stack-[2]\n\tadd\tr5, r0, stack-[1]\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tstack-[1], r0, r5\n\tadd\tstack-[2], r0, r4\n\tadd\tstack-[7], r0, r3\n\tadd\tstack-[3], r0, r14\n\tadd\tstack-[4], r0, r13\n\tadd\tstack-[5], r0, r12\n\tadd\tstack-[6], r0, r11\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB4_1\n\tld\tr1, r1\n\tand\t@CPI4_5[0], r1, r2\n\tcontext.caller\tr1\n\tsub!\tr1, r2, r2\n\tjump.eq\t@.BB4_19\n\tadd\t50, r0, r2\n\tsload\tr2, r2\n\tand\t@CPI4_5[0], r2, r2\n\tsub!\tr1, r2, r2\n\tjump.ne\t@.BB4_18\n.BB4_19:\n\tsub.s!\t0, r11, r1\n\tjump.eq\t@.BB4_23\n\tsub!\tr11, r3, r1\n\tjump.ne\t@.BB4_23\n\tsub!\tr3, r5, r1\n\tjump.ne\t@.BB4_23\n\tsub.s\t67, r0, r1\n\tsub\tr1, r4, r15\n\tadd\tr0, r0, r2\n\tadd\tr15, r0, stack-[2]\n\tjump\t@.BB4_24\n.BB4_54:\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB4_55\n.BB4_56:\n\tadd\tstack-[7], r0, r2\n\tadd\t1, r2, r2\n\tsub!\tr2, r11, r1\n\tjump.ge\t@.BB4_27\n.BB4_24:\n\tadd\tr2, r0, stack-[7]\n\tshl.s\t5, r2, r3\n\tadd\tr3, r12, r2\n\tptr.add\tstack[@ptr_calldata], r0, r1\n\tptr.add\tr1, r2, r2\n\tld\tr2, r4\n\tsub.s!\t@CPI4_5[0], r4, r2\n\tjump.gt\t@.BB4_1\n\tadd\tstack-[7], r0, r2\n\tsub!\tr2, r11, r2\n\tjump.ge\t@.BB4_26\n\tadd\tstack[@calldatasize], r0, r2\n\tadd\tr15, r2, r6\n\tadd\tr3, r14, r5\n\tptr.add\tr1, r5, r5\n\tld\tr5, r5\n\tadd\t@CPI4_0[0], r0, r7\n\tsub!\tr5, r6, r8\n\tadd\t0, r0, r8\n\tadd.ge\tr7, r0, r8\n\tand\t@CPI4_0[0], r6, r6\n\tand\t@CPI4_0[0], r5, r9\n\tsub!\tr9, r6, r10\n\tadd.ge\t0, r0, r7\n\txor\tr9, r6, r6\n\tsub.s!\t@CPI4_0[0], r6, r6\n\tadd\tr8, r0, r6\n\tadd.eq\tr7, r0, r6\n\tadd\tr3, r13, r3\n\tptr.add\tr1, r3, r3\n\tld\tr3, r3\n\tsub.s!\t0, r6, r6\n\tjump.ne\t@.BB4_1\n\tadd\tr5, r14, r5\n\tptr.add\tr1, r5, r1\n\tld\tr1, r1\n\tsub.s!\t@CPI4_1[0], r1, r6\n\tjump.gt\t@.BB4_1\n\tsub\tr2, r1, r6\n\tadd\t32, r5, r7\n\tadd\t@CPI4_0[0], r0, r5\n\tsub!\tr7, r6, r8\n\tadd\t0, r0, r8\n\tadd.gt\tr5, r0, r8\n\tand\t@CPI4_0[0], r6, r6\n\tand\t@CPI4_0[0], r7, r9\n\tsub!\tr9, r6, r10\n\tadd.ge\t0, r0, r5\n\txor\tr9, r6, r6\n\tsub.s!\t@CPI4_0[0], r6, r6\n\tadd.ne\tr8, r0, r5\n\tsub.s!\t0, r5, r5\n\tjump.ne\t@.BB4_1\n\tadd\t63, r1, r5\n\tsub.s\t32, r0, r6\n\tand\tr5, r6, r6\n\tld.1\t64, r5\n\tadd\tr5, r6, r6\n\tsub!\tr6, r5, r8\n\tadd\t0, r0, r8\n\tadd.lt\t1, r0, r8\n\tsub.s!\t@CPI4_1[0], r6, r9\n\tjump.gt\t@.BB4_31\n\tand!\t1, r8, r8\n\tjump.ne\t@.BB4_31\n\tst.1\t64, r6\n\tst.1.inc\tr5, r1, r6\n\tadd\tr1, r7, r8\n\tsub!\tr8, r2, r2\n\tjump.gt\t@.BB4_1\n\tptr.add\tstack[@ptr_calldata], r7, r2\n\tshr.s!\t5, r1, r7\n\tjump.eq\t@.BB4_60\n\tadd\tr0, r0, r8\n.BB4_37:\n\tshl.s\t5, r8, r9\n\tadd\tr6, r9, r10\n\tptr.add\tr2, r9, r9\n\tld\tr9, r9\n\tst.1\tr10, r9\n\tadd\t1, r8, r8\n\tsub!\tr8, r7, r9\n\tjump.lt\t@.BB4_37\n.BB4_60:\n\tand!\t31, r1, r8\n\tjump.eq\t@.BB4_39\n\tshl.s\t5, r7, r7\n\tptr.add\tr2, r7, r2\n\tadd\tr6, r7, r7\n\tshl.s\t3, r8, r8\n\tld.1\tr7, r9\n\tshl\tr9, r8, r9\n\tshr\tr9, r8, r9\n\tld\tr2, r2\n\tsub\t256, r8, r8\n\tshr\tr2, r8, r2\n\tshl\tr2, r8, r2\n\tor\tr2, r9, r2\n\tst.1\tr7, r2\n.BB4_39:\n\tadd\tr6, r1, r1\n\tst.1\tr1, r0\n\tld.1\tr5, r2\n\tcontext.gas_left\tr1\n\tsub.s!\t4, r4, r5\n\tjump.ne\t@.BB4_44\n\tld.1\t64, r1\n\tptr.add\tstack[@ptr_return_data], r0, r2\n\tadd\tstack[@returndatasize], r0, r4\n\tshr.s!\t5, r4, r3\n\tjump.eq\t@.BB4_57\n\tadd\tr0, r0, r5\n.BB4_42:\n\tshl.s\t5, r5, r6\n\tadd\tr1, r6, r7\n\tptr.add\tr2, r6, r6\n\tld\tr6, r6\n\tst.1\tr7, r6\n\tadd\t1, r5, r5\n\tsub!\tr5, r3, r6\n\tjump.lt\t@.BB4_42\n.BB4_57:\n\tand!\t31, r4, r4\n\tjump.eq\t@.BB4_56\n\tshl.s\t5, r3, r3\n\tptr.add\tr2, r3, r2\n\tadd\tr1, r3, r1\n\tshl.s\t3, r4, r3\n\tld.1\tr1, r4\n\tshl\tr4, r3, r4\n\tshr\tr4, r3, r4\n\tld\tr2, r2\n\tsub\t256, r3, r3\n\tshr\tr2, r3, r2\n\tshl\tr2, r3, r2\n\tor\tr2, r4, r2\n\tst.1\tr1, r2\n\tjump\t@.BB4_56\n.BB4_44:\n\tadd\t@CPI4_3[0], r0, r5\n\tsub.s!\t@CPI4_3[0], r6, r7\n\tadd.ge\tr5, r0, r6\n\tshl.s\t64, r6, r6\n\tsub.s!\t@CPI4_3[0], r2, r7\n\tadd.ge\tr5, r0, r2\n\tshl.s\t96, r2, r2\n\tor\tr2, r6, r2\n\tsub.s!\t@CPI4_3[0], r1, r6\n\tadd.ge\tr5, r0, r1\n\tshl.s\t192, r1, r1\n\tor\tr2, r1, r1\n\tsub.s!\t0, r3, r2\n\tjump.eq\t@.BB4_45\n\tor\t@CPI4_11[0], r1, r1\n\tadd\t32777, r0, r2\n\tadd\tr0, r0, r5\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r5\n\tand\t@CPI4_3[0], r5, stack[@returndatasize]\n\tld.1\t64, r3\n\tand\t@CPI4_3[0], r5, r4\n\tshr.s!\t5, r4, r4\n\tjump.eq\t@.BB4_59\n\tadd\tr0, r0, r6\n.BB4_52:\n\tshl.s\t5, r6, r7\n\tadd\tr3, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r4, r7\n\tjump.lt\t@.BB4_52\n.BB4_59:\n\tand!\t31, r5, r5\n\tadd\tstack-[6], r0, r11\n\tadd\tstack-[5], r0, r12\n\tadd\tstack-[4], r0, r13\n\tadd\tstack-[3], r0, r14\n\tadd\tstack-[2], r0, r15\n\tjump.eq\t@.BB4_54\n\tshl.s\t5, r4, r4\n\tptr.add\tr1, r4, r1\n\tadd\tr3, r4, r4\n\tshl.s\t3, r5, r5\n\tld.1\tr4, r6\n\tshl\tr6, r5, r6\n\tshr\tr6, r5, r6\n\tld\tr1, r1\n\tsub\t256, r5, r5\n\tshr\tr1, r5, r1\n\tshl\tr1, r5, r1\n\tor\tr1, r6, r1\n\tst.1\tr4, r1\n\tjump\t@.BB4_54\n.BB4_45:\n\tadd\tr4, r0, r2\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r5\n\tand\t@CPI4_3[0], r5, stack[@returndatasize]\n\tld.1\t64, r3\n\tand\t@CPI4_3[0], r5, r4\n\tshr.s!\t5, r4, r4\n\tjump.eq\t@.BB4_58\n\tadd\tr0, r0, r6\n.BB4_47:\n\tshl.s\t5, r6, r7\n\tadd\tr3, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r4, r7\n\tjump.lt\t@.BB4_47\n.BB4_58:\n\tand!\t31, r5, r5\n\tadd\tstack-[6], r0, r11\n\tadd\tstack-[5], r0, r12\n\tadd\tstack-[4], r0, r13\n\tadd\tstack-[3], r0, r14\n\tadd\tstack-[2], r0, r15\n\tjump.eq\t@.BB4_49\n\tshl.s\t5, r4, r4\n\tptr.add\tr1, r4, r1\n\tadd\tr3, r4, r4\n\tshl.s\t3, r5, r5\n\tld.1\tr4, r6\n\tshl\tr6, r5, r6\n\tshr\tr6, r5, r6\n\tld\tr1, r1\n\tsub\t256, r5, r5\n\tshr\tr1, r5, r1\n\tshl\tr1, r5, r1\n\tor\tr1, r6, r1\n\tst.1\tr4, r1\n.BB4_49:\n\tand!\t1, r2, r1\n\tjump.ne\t@.BB4_56\n.BB4_55:\n\tadd\t@CPI4_3[0], r0, r1\n\tadd\tstack[@returndatasize], r0, r2\n\tsub.s!\t@CPI4_3[0], r2, r4\n\tadd.ge\tr1, r0, r2\n\tsub.s!\t@CPI4_3[0], r3, r4\n\tadd.lt\tr3, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t96, r2, r2\n\tor\tr2, r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB4_23:\n\tld.1\t64, r1\n\tadd\t68, r1, r2\n\tst.1\tr2, r5\n\tadd\t36, r1, r2\n\tst.1\tr2, r3\n\tadd\t@CPI4_8[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tst.1\tr2, r11\n\tadd\t@CPI4_3[0], r0, r2\n\tsub.s!\t@CPI4_3[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI4_9[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB4_18:\n\tld.1\t64, r2\n\tadd\t@CPI4_6[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t4, r2, r3\n\tst.1\tr3, r1\n\tadd\t@CPI4_3[0], r0, r1\n\tsub.s!\t@CPI4_3[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI4_7[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB4_26:\n\tadd\t@CPI4_10[0], r0, r1\n\tst.1\t0, r1\n\tadd\t50, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI4_7[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB4_31:\n\tadd\t@CPI4_10[0], r0, r1\n\tst.1\t0, r1\n\tadd\t65, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI4_7[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB4_27:\n\tadd\tr0, r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.func_end4:\n\nexternal_fun_updateImplementation:\n.func_begin5:\n\tnop\tstack+=[1]\n\tcontext.get_context_u128\tr1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB5_1\n\tsub.s\t4, r0, r1\n\tadd\tstack[@calldatasize], r1, r1\n\tadd\t@CPI5_0[0], r0, r2\n\tsub.s!\t32, r1, r3\n\tadd\t0, r0, r3\n\tadd.lt\tr2, r0, r3\n\tand\t@CPI5_0[0], r1, r1\n\tsub.s!\t0, r1, r4\n\tadd.le\t0, r0, r2\n\tsub.s!\t@CPI5_0[0], r1, r1\n\tadd\tr3, r0, r1\n\tadd.eq\tr2, r0, r1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB5_1\n\tadd\t4, r0, r1\n\tptr.add\tstack[@ptr_calldata], r1, r1\n\tld\tr1, r4\n\tsub.s!\t@CPI5_1[0], r4, r1\n\tjump.le\t@.BB5_4\n.BB5_1:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB5_4:\n\tadd\t50, r0, r1\n\tsload\tr1, r1\n\tand\t@CPI5_1[0], r1, r2\n\tcontext.caller\tr1\n\tsub!\tr1, r2, r2\n\tjump.eq\t@.BB5_7\n\tcontext.this\tr2\n\tsub!\tr1, r2, r2\n\tjump.ne\t@.BB5_6\n.BB5_7:\n\tsub.s!\t0, r4, r1\n\tjump.ne\t@.BB5_9\n\tld.1\t64, r1\n\tadd\t68, r1, r2\n\tadd\t@CPI5_10[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t22, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI5_11[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI5_3[0], r0, r2\n\tsub.s!\t@CPI5_3[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI5_12[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB5_9:\n\tadd\t@CPI5_5[0], r0, r1\n\tst.2\t0, r1\n\tst.2\t4, r4\n\tadd\t@CPI5_3[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI5_3[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI5_6[0], r1, r1\n\tadd\t32770, r0, r2\n\tadd\tr4, r0, stack-[1]\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tstack-[1], r0, r6\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB5_1\n\tld\tr1, r1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB5_12\n\tld.1\t64, r1\n\tadd\t@CPI5_9[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tst.1\tr2, r6\n\tadd\t@CPI5_3[0], r0, r2\n\tsub.s!\t@CPI5_3[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI5_4[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB5_6:\n\tld.1\t64, r2\n\tadd\t@CPI5_2[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t4, r2, r3\n\tst.1\tr3, r1\n\tadd\t@CPI5_3[0], r0, r1\n\tsub.s!\t@CPI5_3[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI5_4[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB5_12:\n\tcontext.this\tr1\n\tsload\tr1, r2\n\tsstore\tr1, r6\n\tadd\t@CPI5_3[0], r0, r1\n\tcontext.gas_left\tr3\n\tsub.s!\t@CPI5_3[0], r3, r4\n\tadd.lt\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI5_7[0], r1, r1\n\tand\t@CPI5_1[0], r2, r5\n\tadd\t32781, r0, r2\n\tadd\t3, r0, r3\n\tadd\t@CPI5_8[0], r0, r4\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB5_1\n\tadd\tr0, r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.func_end5:\n\nfinalize_allocation_13219:\n.func_begin6:\n\tsub.s!\t@CPI6_0[0], r1, r2\n\tjump.ge\t@.BB6_1\n\tadd\t160, r1, r1\n\tst.1\t64, r1\n\tret\n.BB6_1:\n\tadd\t@CPI6_1[0], r0, r1\n\tst.1\t0, r1\n\tadd\t65, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI6_2[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end6:\n\nfinalize_allocation_21860:\n.func_begin7:\n\tsub.s!\t@CPI7_0[0], r1, r2\n\tjump.ge\t@.BB7_1\n\tadd\t64, r1, r1\n\tst.1\t64, r1\n\tret\n.BB7_1:\n\tadd\t@CPI7_1[0], r0, r1\n\tst.1\t0, r1\n\tadd\t65, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI7_2[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end7:\n\nfinalize_allocation:\n.func_begin8:\n\tadd\t31, r2, r2\n\tsub.s\t32, r0, r3\n\tand\tr2, r3, r2\n\tadd\tr2, r1, r1\n\tsub!\tr1, r2, r2\n\tadd\t0, r0, r2\n\tadd.lt\t1, r0, r2\n\tsub.s!\t@CPI8_0[0], r1, r3\n\tjump.gt\t@.BB8_2\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB8_2\n\tst.1\t64, r1\n\tret\n.BB8_2:\n\tadd\t@CPI8_1[0], r0, r1\n\tst.1\t0, r1\n\tadd\t65, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI8_2[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end8:\n\nabi_decode_available_length_bytes:\n.func_begin9:\n\tadd\tr1, r0, r4\n\tsub.s!\t@CPI9_0[0], r2, r1\n\tjump.ge\t@.BB9_1\n\tadd\t63, r2, r1\n\tsub.s\t32, r0, r5\n\tand\tr1, r5, r5\n\tld.1\t64, r1\n\tadd\tr1, r5, r5\n\tsub!\tr5, r1, r6\n\tadd\t0, r0, r6\n\tadd.lt\t1, r0, r6\n\tsub.s!\t@CPI9_1[0], r5, r7\n\tjump.gt\t@.BB9_1\n\tand!\t1, r6, r6\n\tjump.ne\t@.BB9_1\n\tst.1\t64, r5\n\tst.1.inc\tr1, r2, r5\n\tadd\tr2, r4, r6\n\tsub!\tr6, r3, r3\n\tjump.gt\t@.BB9_5\n\tand\t31, r2, r3\n\tptr.add\tstack[@ptr_calldata], r4, r4\n\tshr.s!\t5, r2, r6\n\tjump.eq\t@.BB9_11\n\tadd\tr0, r0, r7\n.BB9_8:\n\tshl.s\t5, r7, r8\n\tadd\tr5, r8, r9\n\tptr.add\tr4, r8, r8\n\tld\tr8, r8\n\tst.1\tr9, r8\n\tadd\t1, r7, r7\n\tsub!\tr7, r6, r8\n\tjump.lt\t@.BB9_8\n.BB9_11:\n\tsub.s!\t0, r3, r7\n\tjump.eq\t@.BB9_10\n\tshl.s\t5, r6, r6\n\tptr.add\tr4, r6, r4\n\tadd\tr5, r6, r6\n\tshl.s\t3, r3, r3\n\tld.1\tr6, r7\n\tshl\tr7, r3, r7\n\tshr\tr7, r3, r7\n\tld\tr4, r4\n\tsub\t256, r3, r3\n\tshr\tr4, r3, r4\n\tshl\tr4, r3, r3\n\tor\tr3, r7, r3\n\tst.1\tr6, r3\n.BB9_10:\n\tadd\tr5, r2, r2\n\tst.1\tr2, r0\n\tret\n.BB9_1:\n\tadd\t@CPI9_2[0], r0, r1\n\tst.1\t0, r1\n\tadd\t65, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI9_3[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB9_5:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end9:\n\nabi_decode_bytes:\n.func_begin10:\n\tadd\tr1, r0, r3\n\tadd\t31, r3, r1\n\tadd\t@CPI10_0[0], r0, r4\n\tsub!\tr1, r2, r5\n\tadd\t0, r0, r5\n\tadd.lt\tr4, r0, r5\n\tand\t@CPI10_0[0], r2, r6\n\tand\t@CPI10_0[0], r1, r1\n\tsub!\tr1, r6, r7\n\tadd.le\t0, r0, r4\n\txor\tr1, r6, r1\n\tsub.s!\t@CPI10_0[0], r1, r1\n\tadd\tr5, r0, r1\n\tadd.eq\tr4, r0, r1\n\tsub.s!\t0, r1, r1\n\tjump.eq\t@.BB10_1\n\tptr.add\tstack[@ptr_calldata], r3, r1\n\tld\tr1, r4\n\tsub.s!\t@CPI10_1[0], r4, r1\n\tjump.ge\t@.BB10_3\n\tadd\t63, r4, r1\n\tsub.s\t32, r0, r5\n\tand\tr1, r5, r5\n\tld.1\t64, r1\n\tadd\tr1, r5, r5\n\tsub!\tr5, r1, r6\n\tadd\t0, r0, r6\n\tadd.lt\t1, r0, r6\n\tsub.s!\t@CPI10_2[0], r5, r7\n\tjump.gt\t@.BB10_3\n\tand!\t1, r6, r6\n\tjump.ne\t@.BB10_3\n\tadd\t32, r3, r6\n\tst.1\t64, r5\n\tst.1.inc\tr1, r4, r3\n\tadd\tr4, r6, r5\n\tsub!\tr5, r2, r2\n\tjump.gt\t@.BB10_1\n\tand\t31, r4, r2\n\tptr.add\tstack[@ptr_calldata], r6, r5\n\tshr.s!\t5, r4, r6\n\tjump.eq\t@.BB10_12\n\tadd\tr0, r0, r7\n.BB10_9:\n\tshl.s\t5, r7, r8\n\tadd\tr3, r8, r9\n\tptr.add\tr5, r8, r8\n\tld\tr8, r8\n\tst.1\tr9, r8\n\tadd\t1, r7, r7\n\tsub!\tr7, r6, r8\n\tjump.lt\t@.BB10_9\n.BB10_12:\n\tsub.s!\t0, r2, r7\n\tjump.eq\t@.BB10_11\n\tshl.s\t5, r6, r6\n\tptr.add\tr5, r6, r5\n\tadd\tr3, r6, r6\n\tshl.s\t3, r2, r2\n\tld.1\tr6, r7\n\tshl\tr7, r2, r7\n\tshr\tr7, r2, r7\n\tld\tr5, r5\n\tsub\t256, r2, r2\n\tshr\tr5, r2, r5\n\tshl\tr5, r2, r2\n\tor\tr2, r7, r2\n\tst.1\tr6, r2\n.BB10_11:\n\tadd\tr3, r4, r2\n\tst.1\tr2, r0\n\tret\n.BB10_3:\n\tadd\t@CPI10_3[0], r0, r1\n\tst.1\t0, r1\n\tadd\t65, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI10_4[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB10_1:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end10:\n\nabi_decode_bytes32t_bytes:\n.func_begin11:\n\tadd\tr1, r0, r3\n\tsub.s\t4, r3, r1\n\tadd\t@CPI11_0[0], r0, r2\n\tsub.s!\t63, r1, r4\n\tadd\t0, r0, r4\n\tadd.gt\tr2, r0, r4\n\tand\t@CPI11_0[0], r1, r1\n\tsub.s!\t0, r1, r5\n\tadd.ge\t0, r0, r2\n\tsub.s!\t@CPI11_0[0], r1, r1\n\tadd\tr4, r0, r1\n\tadd.eq\tr2, r0, r1\n\tsub.s!\t0, r1, r1\n\tjump.eq\t@.BB11_1\n\tptr.add\tstack[@ptr_calldata], r0, r2\n\tptr.add.s\t36, r2, r1\n\tld\tr1, r5\n\tsub.s!\t@CPI11_1[0], r5, r1\n\tjump.gt\t@.BB11_1\n\tadd\t35, r5, r1\n\tadd\t@CPI11_0[0], r0, r4\n\tsub!\tr1, r3, r6\n\tadd\t0, r0, r6\n\tadd.ge\tr4, r0, r6\n\tand\t@CPI11_0[0], r3, r7\n\tand\t@CPI11_0[0], r1, r1\n\tsub!\tr1, r7, r8\n\tadd.ge\t0, r0, r4\n\txor\tr1, r7, r1\n\tsub.s!\t@CPI11_0[0], r1, r1\n\tadd.ne\tr6, r0, r4\n\tptr.add.s\t4, r2, r1\n\tld\tr1, r1\n\tsub.s!\t0, r4, r4\n\tjump.ne\t@.BB11_1\n\tadd\t4, r5, r4\n\tptr.add\tr2, r4, r2\n\tld\tr2, r4\n\tsub.s!\t@CPI11_2[0], r4, r2\n\tjump.ge\t@.BB11_5\n\tadd\t63, r4, r2\n\tsub.s\t32, r0, r6\n\tand\tr2, r6, r6\n\tld.1\t64, r2\n\tadd\tr2, r6, r6\n\tsub!\tr6, r2, r7\n\tadd\t0, r0, r7\n\tadd.lt\t1, r0, r7\n\tsub.s!\t@CPI11_1[0], r6, r8\n\tjump.gt\t@.BB11_5\n\tand!\t1, r7, r7\n\tjump.ne\t@.BB11_5\n\tadd\t36, r5, r7\n\tst.1\t64, r6\n\tst.1.inc\tr2, r4, r5\n\tadd\tr4, r7, r6\n\tsub!\tr6, r3, r3\n\tjump.gt\t@.BB11_1\n\tand\t31, r4, r3\n\tptr.add\tstack[@ptr_calldata], r7, r6\n\tshr.s!\t5, r4, r7\n\tjump.eq\t@.BB11_14\n\tadd\tr0, r0, r8\n.BB11_11:\n\tshl.s\t5, r8, r9\n\tadd\tr5, r9, r10\n\tptr.add\tr6, r9, r9\n\tld\tr9, r9\n\tst.1\tr10, r9\n\tadd\t1, r8, r8\n\tsub!\tr8, r7, r9\n\tjump.lt\t@.BB11_11\n.BB11_14:\n\tsub.s!\t0, r3, r8\n\tjump.eq\t@.BB11_13\n\tshl.s\t5, r7, r7\n\tptr.add\tr6, r7, r6\n\tadd\tr5, r7, r7\n\tshl.s\t3, r3, r3\n\tld.1\tr7, r8\n\tshl\tr8, r3, r8\n\tshr\tr8, r3, r8\n\tld\tr6, r6\n\tsub\t256, r3, r3\n\tshr\tr6, r3, r6\n\tshl\tr6, r3, r3\n\tor\tr3, r8, r3\n\tst.1\tr7, r3\n.BB11_13:\n\tadd\tr5, r4, r3\n\tst.1\tr3, r0\n\tret\n.BB11_1:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB11_5:\n\tadd\t@CPI11_3[0], r0, r1\n\tst.1\t0, r1\n\tadd\t65, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI11_4[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end11:\n\nexternal_fun_validateUserOp:\n.func_begin12:\n\tnop\tstack+=[10]\n\tcontext.get_context_u128\tr1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB12_1\n\tsub.s\t4, r0, r1\n\tadd\tstack[@calldatasize], r1, r1\n\tadd\t@CPI12_0[0], r0, r2\n\tsub.s!\t96, r1, r3\n\tadd\t0, r0, r3\n\tadd.lt\tr2, r0, r3\n\tand\t@CPI12_0[0], r1, r4\n\tsub.s!\t0, r4, r5\n\tadd.le\t0, r0, r2\n\tsub.s!\t@CPI12_0[0], r4, r4\n\tadd.ne\tr3, r0, r2\n\tsub.s!\t0, r2, r2\n\tjump.eq\t@.BB12_3\n.BB12_1:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB12_3:\n\tptr.add\tstack[@ptr_calldata], r0, r2\n\tptr.add.s\t4, r2, r3\n\tld\tr3, r6\n\tsub.s!\t@CPI12_1[0], r6, r3\n\tjump.gt\t@.BB12_1\n\tsub\tr1, r6, r1\n\tadd\t@CPI12_0[0], r0, r3\n\tsub.s!\t352, r1, r4\n\tadd\t0, r0, r4\n\tadd.lt\tr3, r0, r4\n\tand\t@CPI12_0[0], r1, r1\n\tsub.s!\t0, r1, r5\n\tadd.le\t0, r0, r3\n\tsub.s!\t@CPI12_0[0], r1, r1\n\tadd\tr4, r0, r1\n\tadd.eq\tr3, r0, r1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB12_1\n\tptr.add.s\t68, r2, r1\n\tld\tr1, r1\n\tadd\tr1, r0, stack-[9]\n\tadd\t@CPI12_2[0], r0, r1\n\tst.2\t0, r1\n\tcontext.code_source\tr1\n\tst.2\t4, r1\n\tst.2\t36, r0\n\tadd\t@CPI12_3[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI12_3[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI12_4[0], r1, r1\n\tadd\t32773, r0, r2\n\tadd\tr6, r0, stack-[10]\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tstack-[10], r0, r9\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB12_1\n\tld\tr1, r1\n\tand\t@CPI12_5[0], r1, r10\n\tcontext.caller\tr1\n\tsub!\tr1, r10, r2\n\tjump.ne\t@.BB12_7\n\tadd\t100, r9, r14\n\tptr.add\tstack[@ptr_calldata], r0, r1\n\tptr.add\tr1, r14, r2\n\tld\tr2, r2\n\tsub.s\t35, r0, r3\n\tsub\tr3, r9, r13\n\tadd\tstack[@calldatasize], r0, r4\n\tadd\tr4, r13, r3\n\tadd\t@CPI12_0[0], r0, r5\n\tsub!\tr2, r3, r6\n\tadd\t0, r0, r6\n\tadd.ge\tr5, r0, r6\n\tand\t@CPI12_0[0], r3, r3\n\tand\t@CPI12_0[0], r2, r7\n\tsub!\tr7, r3, r8\n\tadd.ge\t0, r0, r5\n\txor\tr7, r3, r3\n\tsub.s!\t@CPI12_0[0], r3, r3\n\tadd\tr6, r0, r3\n\tadd.eq\tr5, r0, r3\n\tptr.add.s\t36, r1, r5\n\tld\tr5, r11\n\tsub.s!\t0, r3, r3\n\tjump.ne\t@.BB12_1\n\tadd\t4, r9, r12\n\tadd\tr2, r12, r2\n\tptr.add\tr1, r2, r3\n\tld\tr3, r3\n\tsub.s!\t@CPI12_1[0], r3, r5\n\tjump.gt\t@.BB12_1\n\tsub\tr4, r3, r5\n\tadd\t32, r2, r4\n\tadd\t@CPI12_0[0], r0, r6\n\tsub!\tr4, r5, r7\n\tadd\t0, r0, r7\n\tadd.gt\tr6, r0, r7\n\tand\t@CPI12_0[0], r5, r5\n\tand\t@CPI12_0[0], r4, r8\n\tsub!\tr8, r5, r9\n\tadd.ge\t0, r0, r6\n\txor\tr8, r5, r5\n\tsub.s!\t@CPI12_0[0], r5, r5\n\tadd\tr7, r0, r5\n\tadd.eq\tr6, r0, r5\n\tsub.s!\t0, r5, r5\n\tjump.ne\t@.BB12_1\n\tsub.s!\t0, r3, r5\n\tjump.eq\t@.BB12_14\n\tsub.s!\t4, r3, r5\n\tjump.lt\t@.BB12_1\n\tptr.add\tr1, r4, r4\n\tld\tr4, r4\n\tand\t@CPI12_8[0], r4, r4\n\tsub.s!\t@CPI12_9[0], r4, r4\n\tjump.ne\t@.BB12_14\n\tsub.s\t4, r3, r3\n\tsub.s!\t96, r3, r4\n\tjump.lt\t@.BB12_1\n\tadd\t36, r2, r4\n\tptr.add\tr1, r4, r5\n\tld\tr5, r9\n\tsub.s!\t@CPI12_5[0], r9, r5\n\tjump.gt\t@.BB12_1\n\tadd\t100, r2, r2\n\tptr.add\tr1, r2, r2\n\tld\tr2, r2\n\tsub.s!\t@CPI12_1[0], r2, r5\n\tjump.gt\t@.BB12_1\n\tadd\tr3, r4, r3\n\tadd\tr2, r4, r2\n\tadd\t31, r2, r4\n\tadd\t@CPI12_0[0], r0, r5\n\tsub!\tr4, r3, r6\n\tadd\t0, r0, r6\n\tadd.ge\tr5, r0, r6\n\tand\t@CPI12_0[0], r4, r4\n\tand\t@CPI12_0[0], r3, r7\n\tsub!\tr4, r7, r8\n\tadd.ge\t0, r0, r5\n\txor\tr4, r7, r4\n\tsub.s!\t@CPI12_0[0], r4, r4\n\tadd\tr6, r0, r4\n\tadd.eq\tr5, r0, r4\n\tsub.s!\t0, r4, r4\n\tjump.ne\t@.BB12_1\n\tadd\tr14, r0, stack-[3]\n\tadd\tr9, r0, stack-[5]\n\tadd\tr11, r0, stack-[4]\n\tptr.add\tr1, r2, r1\n\tld\tr1, r1\n\tsub.s!\t@CPI12_1[0], r1, r4\n\tjump.gt\t@.BB12_15\n\tadd\t63, r1, r4\n\tsub.s\t32, r0, r5\n\tadd\tr5, r0, stack-[2]\n\tand\tr4, r5, r5\n\tld.1\t64, r4\n\tadd\tr4, r5, r5\n\tsub!\tr5, r4, r6\n\tadd\t0, r0, r6\n\tadd.lt\t1, r0, r6\n\tsub.s!\t@CPI12_1[0], r5, r7\n\tjump.gt\t@.BB12_15\n\tand!\t1, r6, r6\n\tjump.ne\t@.BB12_15\n\tadd\t32, r2, r6\n\tst.1\t64, r5\n\tst.1.inc\tr4, r1, r2\n\tadd\tr1, r6, r4\n\tsub!\tr4, r3, r3\n\tjump.gt\t@.BB12_1\n\tadd\tr13, r0, stack-[7]\n\tadd\tr12, r0, stack-[8]\n\tadd\tr10, r0, stack-[6]\n\tand\t31, r1, r3\n\tptr.add\tstack[@ptr_calldata], r6, r4\n\tshr.s!\t5, r1, r5\n\tjump.eq\t@.BB12_122\n\tadd\tr0, r0, r6\n.BB12_54:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr4, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB12_54\n.BB12_122:\n\tsub.s!\t0, r3, r6\n\tjump.eq\t@.BB12_56\n\tshl.s\t5, r5, r5\n\tptr.add\tr4, r5, r4\n\tadd\tr2, r5, r5\n\tshl.s\t3, r3, r3\n\tld.1\tr5, r6\n\tshl\tr6, r3, r6\n\tshr\tr6, r3, r6\n\tld\tr4, r4\n\tsub\t256, r3, r3\n\tshr\tr4, r3, r4\n\tshl\tr4, r3, r3\n\tor\tr3, r6, r3\n\tst.1\tr5, r3\n.BB12_56:\n\tadd\tr2, r1, r1\n\tst.1\tr1, r0\n\tadd\tstack-[5], r0, r1\n\tst.1\t0, r1\n\tst.1\t32, r0\n\tadd\t@CPI12_3[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI12_3[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI12_10[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tadd\tstack-[6], r0, r10\n\tadd\tstack-[10], r0, r3\n\tadd\tstack-[4], r0, r11\n\tadd\tstack-[8], r0, r12\n\tadd\tstack-[7], r0, r13\n\tjump.eq\t@.BB12_1\n\tld\tr1, r1\n\tsload\tr1, r1\n\tand!\t@CPI12_5[0], r1, r1\n\tjump.ne\t@.BB12_58\n.BB12_14:\n\tld.1\t64, r1\n\tadd\t32, r1, r2\n\tadd\t@CPI12_12[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t60, r1, r3\n\tst.1\tr3, r11\n\tadd\t60, r0, r3\n\tst.1\tr1, r3\n\tsub.s!\t@CPI12_13[0], r1, r3\n\tjump.lt\t@.BB12_16\n.BB12_15:\n\tadd\t@CPI12_20[0], r0, r1\n\tst.1\t0, r1\n\tadd\t65, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI12_7[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB12_7:\n\tld.1\t64, r2\n\tadd\t@CPI12_6[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t4, r2, r3\n\tst.1\tr3, r1\n\tadd\t@CPI12_3[0], r0, r1\n\tsub.s!\t@CPI12_3[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI12_7[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB12_16:\n\tadd\t96, r1, r3\n\tst.1\t64, r3\n\tadd\t@CPI12_3[0], r0, r3\n\tsub.s!\t@CPI12_3[0], r2, r4\n\tadd.ge\tr3, r0, r2\n\tshl.s\t64, r2, r2\n\tld.1\tr1, r1\n\tsub.s!\t@CPI12_3[0], r1, r4\n\tadd.ge\tr3, r0, r1\n\tshl.s\t96, r1, r1\n\tor\tr1, r2, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI12_3[0], r2, r4\n\tadd.ge\tr3, r0, r2\n\tshl.s\t192, r2, r2\n\tor\tr2, r1, r1\n\tor\t@CPI12_14[0], r1, r1\n\tadd\t32784, r0, r2\n\tadd\tr10, r0, stack-[6]\n\tadd\tr12, r0, stack-[8]\n\tadd\tr13, r0, stack-[7]\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tstack-[7], r0, r5\n\tadd\tstack-[8], r0, r10\n\tadd\tstack-[10], r0, r3\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB12_1\n\tadd\tstack[@calldatasize], r0, r4\n\tadd\tr4, r5, r5\n\tadd\t324, r3, r3\n\tptr.add\tstack[@ptr_calldata], r0, r2\n\tptr.add\tr2, r3, r3\n\tld\tr3, r3\n\tadd\t@CPI12_0[0], r0, r6\n\tsub!\tr3, r5, r7\n\tadd\t0, r0, r7\n\tadd.ge\tr6, r0, r7\n\tand\t@CPI12_0[0], r5, r5\n\tand\t@CPI12_0[0], r3, r8\n\tsub!\tr8, r5, r9\n\tadd.ge\t0, r0, r6\n\txor\tr8, r5, r5\n\tsub.s!\t@CPI12_0[0], r5, r5\n\tadd\tr7, r0, r5\n\tadd.eq\tr6, r0, r5\n\tld\tr1, r1\n\tadd\t50, r0, r6\n\tsload\tr6, r6\n\tand\t@CPI12_5[0], r6, r11\n\tsub.s!\t0, r5, r5\n\tjump.ne\t@.BB12_1\n\tadd\tr3, r10, r3\n\tptr.add\tr2, r3, r2\n\tld\tr2, r2\n\tsub.s!\t@CPI12_1[0], r2, r5\n\tjump.gt\t@.BB12_1\n\tsub\tr4, r2, r5\n\tadd\t32, r3, r6\n\tadd\t@CPI12_0[0], r0, r3\n\tsub!\tr6, r5, r7\n\tadd\t0, r0, r7\n\tadd.gt\tr3, r0, r7\n\tand\t@CPI12_0[0], r5, r5\n\tand\t@CPI12_0[0], r6, r8\n\tsub!\tr8, r5, r9\n\tadd.ge\t0, r0, r3\n\txor\tr8, r5, r5\n\tsub.s!\t@CPI12_0[0], r5, r5\n\tadd.ne\tr7, r0, r3\n\tsub.s!\t0, r3, r3\n\tjump.ne\t@.BB12_1\n\tadd\tr11, r0, stack-[10]\n\tadd\t63, r2, r3\n\tsub.s\t32, r0, r5\n\tand\tr3, r5, r5\n\tld.1\t64, r3\n\tadd\tr3, r5, r5\n\tsub!\tr5, r3, r7\n\tadd\t0, r0, r7\n\tadd.lt\t1, r0, r7\n\tsub.s!\t@CPI12_1[0], r5, r8\n\tjump.gt\t@.BB12_15\n\tand!\t1, r7, r7\n\tjump.ne\t@.BB12_15\n\tst.1\t64, r5\n\tst.1.inc\tr3, r2, r5\n\tadd\tr2, r6, r7\n\tsub!\tr7, r4, r4\n\tjump.gt\t@.BB12_1\n\tand\t31, r2, r4\n\tptr.add\tstack[@ptr_calldata], r6, r6\n\tshr.s!\t5, r2, r7\n\tjump.eq\t@.BB12_125\n\tadd\tr0, r0, r8\n.BB12_25:\n\tshl.s\t5, r8, r9\n\tadd\tr5, r9, r10\n\tptr.add\tr6, r9, r9\n\tld\tr9, r9\n\tst.1\tr10, r9\n\tadd\t1, r8, r8\n\tsub!\tr8, r7, r9\n\tjump.lt\t@.BB12_25\n.BB12_125:\n\tsub.s!\t0, r4, r8\n\tjump.eq\t@.BB12_27\n\tshl.s\t5, r7, r7\n\tptr.add\tr6, r7, r6\n\tadd\tr5, r7, r7\n\tshl.s\t3, r4, r4\n\tld.1\tr7, r8\n\tshl\tr8, r4, r8\n\tshr\tr8, r4, r8\n\tld\tr6, r6\n\tsub\t256, r4, r4\n\tshr\tr6, r4, r6\n\tshl\tr6, r4, r4\n\tor\tr4, r8, r4\n\tst.1\tr7, r4\n.BB12_27:\n\tadd\tr5, r2, r2\n\tst.1\tr2, r0\n\tld.1\tr3, r2\n\tsub.s!\t65, r2, r2\n\tjump.ne\t@.BB12_41\n\tadd\t64, r3, r2\n\tld.1\tr2, r2\n\tsub.s!\t@CPI12_16[0], r2, r4\n\tjump.le\t@.BB12_29\n\tld.1\t64, r2\n\tadd\tr2, r0, stack-[10]\n\tadd\t@CPI12_15[0], r0, r1\n\tst.1\tr2, r1\n\tadd\t4, r2, r1\n\tnear_call\tr0, @abi_encode_stringliteral_520d, @DEFAULT_UNWIND\n\tadd\tstack-[10], r0, r4\n\tsub\tr1, r4, r1\n\tadd\t@CPI12_3[0], r0, r2\n\tsub.s!\t@CPI12_3[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tsub.s!\t@CPI12_3[0], r4, r3\n\tadd.lt\tr4, r0, r2\n\tshl.s\t64, r2, r2\n\tshl.s\t96, r1, r1\n\tor\tr1, r2, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB12_41:\n\tld.1\t64, r2\n\tadd\tr2, r0, stack-[10]\n\tadd\t@CPI12_15[0], r0, r1\n\tst.1\tr2, r1\n\tadd\t4, r2, r1\n\tnear_call\tr0, @abi_encode_stringliteral, @DEFAULT_UNWIND\n\tadd\tstack-[10], r0, r4\n\tsub\tr1, r4, r1\n\tadd\t@CPI12_3[0], r0, r2\n\tsub.s!\t@CPI12_3[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tsub.s!\t@CPI12_3[0], r4, r3\n\tadd.lt\tr4, r0, r2\n\tshl.s\t64, r2, r2\n\tshl.s\t96, r1, r1\n\tor\tr1, r2, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB12_29:\n\tadd\t96, r3, r3\n\tld.1\tr3, r3\n\tld.1\tr5, r4\n\tld.1\t64, r5\n\tadd\t96, r5, r6\n\tst.1\tr6, r2\n\tadd\t64, r5, r2\n\tst.1\tr2, r4\n\tshr.s\t248, r3, r2\n\tadd\t32, r5, r3\n\tst.1\tr3, r2\n\tst.1\tr5, r1\n\tst.1\t0, r0\n\tadd\t@CPI12_3[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI12_3[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tsub.s!\t@CPI12_3[0], r5, r3\n\tadd.lt\tr5, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r2, r2\n\tor\tr2, r1, r1\n\tor\t@CPI12_17[0], r1, r1\n\tadd\t1, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI12_3[0], r3, r3\n\tsub.s!\t32, r3, r4\n\tadd\t32, r0, r4\n\tadd.lt\tr3, r0, r4\n\tand\t31, r4, r5\n\tshr.s!\t5, r4, r4\n\tjump.eq\t@.BB12_124\n\tadd\tr0, r0, r6\n.BB12_31:\n\tshl.s\t5, r6, r7\n\tptr.add\tr1, r7, r8\n\tld\tr8, r8\n\tst.1\tr7, r8\n\tadd\t1, r6, r6\n\tsub!\tr6, r4, r7\n\tjump.lt\t@.BB12_31\n.BB12_124:\n\tsub.s!\t0, r5, r6\n\tjump.eq\t@.BB12_33\n\tshl.s\t3, r5, r5\n\tshl.s\t5, r4, r4\n\tld.1\tr4, r6\n\tshl\tr6, r5, r6\n\tshr\tr6, r5, r6\n\tptr.add\tr1, r4, r7\n\tld\tr7, r7\n\tsub\t256, r5, r5\n\tshr\tr7, r5, r7\n\tshl\tr7, r5, r5\n\tor\tr5, r6, r5\n\tst.1\tr4, r5\n.BB12_33:\n\tadd\tr3, r0, stack[@returndatasize]\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB12_34\n\tld.1\t0, r1\n\tand!\t@CPI12_5[0], r1, r1\n\tjump.ne\t@.BB12_43\n\tld.1\t64, r2\n\tadd\tr2, r0, stack-[10]\n\tadd\t@CPI12_15[0], r0, r1\n\tst.1\tr2, r1\n\tadd\t4, r2, r1\n\tnear_call\tr0, @abi_encode_tuple_stringliteral, @DEFAULT_UNWIND\n\tadd\tstack-[10], r0, r4\n\tsub\tr1, r4, r1\n\tadd\t@CPI12_3[0], r0, r2\n\tsub.s!\t@CPI12_3[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tsub.s!\t@CPI12_3[0], r4, r3\n\tadd.lt\tr4, r0, r2\n\tshl.s\t64, r2, r2\n\tshl.s\t96, r1, r1\n\tor\tr1, r2, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB12_34:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r3\n\tjump.eq\t@.BB12_123\n\tadd\tr0, r0, r5\n.BB12_36:\n\tshl.s\t5, r5, r6\n\tadd\tr2, r6, r7\n\tptr.add\tr1, r6, r6\n\tld\tr6, r6\n\tst.1\tr7, r6\n\tadd\t1, r5, r5\n\tsub!\tr5, r3, r6\n\tjump.lt\t@.BB12_36\n.BB12_123:\n\tsub.s!\t0, r4, r5\n\tjump.eq\t@.BB12_38\n\tshl.s\t5, r3, r3\n\tptr.add\tr1, r3, r1\n\tadd\tr2, r3, r3\n\tshl.s\t3, r4, r4\n\tld.1\tr3, r5\n\tshl\tr5, r4, r5\n\tshr\tr5, r4, r5\n\tld\tr1, r1\n\tsub\t256, r4, r4\n\tshr\tr1, r4, r1\n\tshl\tr1, r4, r1\n\tor\tr1, r5, r1\n\tst.1\tr3, r1\n.BB12_38:\n\tadd\t@CPI12_3[0], r0, r1\n\tadd\tstack[@returndatasize], r0, r3\n\tsub.s!\t@CPI12_3[0], r3, r4\n\tadd.ge\tr1, r0, r3\n\tsub.s!\t@CPI12_3[0], r2, r4\n\tadd.lt\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t96, r3, r2\n\tor\tr2, r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB12_43:\n\tadd\tstack-[10], r0, r2\n\tsub!\tr2, r1, r1\n\tadd\t0, r0, r1\n\tadd.ne\t1, r0, r1\n\tadd\tr1, r0, stack-[10]\n.BB12_103:\n\tadd\tstack-[9], r0, r1\n\tsub.s!\t0, r1, r1\n\tjump.eq\t@.BB12_105\n\tadd\tstack-[6], r0, r1\n\tsub.s!\t4, r1, r1\n\tjump.ne\t@.BB12_108\n\tadd\tstack[@returndatasize], r0, r2\n\tjump\t@.BB12_107\n.BB12_58:\n\tld.1\t64, r2\n\tadd\t@CPI12_11[0], r0, r1\n\tst.1\tr2, r1\n\tadd\tr2, r0, stack-[1]\n\tadd\t4, r2, r1\n\tadd\t64, r0, r2\n\tst.1\tr1, r2\n\tptr.add\tstack[@ptr_calldata], r12, r1\n\tld\tr1, r1\n\tsub.s!\t@CPI12_5[0], r1, r2\n\tjump.gt\t@.BB12_1\n\tadd\tstack-[1], r0, r4\n\tadd\t68, r4, r2\n\tst.1\tr2, r1\n\tadd\t36, r3, r1\n\tptr.add\tstack[@ptr_calldata], r1, r1\n\tld\tr1, r1\n\tadd\t100, r4, r2\n\tst.1\tr2, r1\n\tadd\tstack[@calldatasize], r0, r1\n\tadd\tr1, r13, r4\n\tadd\t68, r3, r3\n\tptr.add\tstack[@ptr_calldata], r0, r2\n\tptr.add\tr2, r3, r3\n\tld\tr3, r3\n\tadd\t@CPI12_0[0], r0, r5\n\tsub!\tr3, r4, r6\n\tadd\t0, r0, r6\n\tadd.ge\tr5, r0, r6\n\tand\t@CPI12_0[0], r4, r4\n\tand\t@CPI12_0[0], r3, r7\n\tsub!\tr7, r4, r8\n\tadd.ge\t0, r0, r5\n\txor\tr7, r4, r4\n\tsub.s!\t@CPI12_0[0], r4, r4\n\tadd\tr6, r0, r4\n\tadd.eq\tr5, r0, r4\n\tsub.s!\t0, r4, r4\n\tjump.ne\t@.BB12_1\n\tadd\tr3, r12, r3\n\tptr.add\tr2, r3, r2\n\tld\tr2, r2\n\tsub.s!\t@CPI12_1[0], r2, r4\n\tjump.gt\t@.BB12_1\n\tadd\t32, r3, r4\n\tsub\tr1, r2, r1\n\tadd\t@CPI12_0[0], r0, r3\n\tsub!\tr4, r1, r5\n\tadd\t0, r0, r5\n\tadd.gt\tr3, r0, r5\n\tand\t@CPI12_0[0], r1, r1\n\tand\t@CPI12_0[0], r4, r6\n\tsub!\tr6, r1, r7\n\tadd.ge\t0, r0, r3\n\txor\tr6, r1, r1\n\tsub.s!\t@CPI12_0[0], r1, r1\n\tadd\tr5, r0, r1\n\tadd.eq\tr3, r0, r1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB12_1\n\tadd\tstack-[1], r0, r5\n\tadd\t132, r5, r1\n\tadd\t352, r0, r3\n\tst.1\tr1, r3\n\tadd\t420, r5, r1\n\tst.1\tr1, r2\n\tand\t31, r2, r1\n\tadd\t452, r5, r3\n\tptr.add\tstack[@ptr_calldata], r4, r4\n\tshr.s!\t5, r2, r5\n\tjump.eq\t@.BB12_121\n\tadd\tr0, r0, r6\n.BB12_64:\n\tshl.s\t5, r6, r7\n\tadd\tr3, r7, r8\n\tptr.add\tr4, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB12_64\n.BB12_121:\n\tsub.s!\t0, r1, r6\n\tjump.eq\t@.BB12_66\n\tshl.s\t5, r5, r5\n\tptr.add\tr4, r5, r4\n\tadd\tr3, r5, r5\n\tshl.s\t3, r1, r1\n\tld.1\tr5, r6\n\tshl\tr6, r1, r6\n\tshr\tr6, r1, r6\n\tld\tr4, r4\n\tsub\t256, r1, r1\n\tshr\tr4, r1, r4\n\tshl\tr4, r1, r1\n\tor\tr1, r6, r1\n\tst.1\tr5, r1\n.BB12_66:\n\tadd\tr2, r3, r1\n\tst.1\tr1, r0\n\tadd\tstack[@calldatasize], r0, r4\n\tadd\tstack-[7], r0, r1\n\tadd\tr4, r1, r6\n\tptr.add\tstack[@ptr_calldata], r0, r1\n\tadd\tstack-[3], r0, r5\n\tptr.add\tr1, r5, r5\n\tld\tr5, r5\n\tadd\t@CPI12_0[0], r0, r7\n\tsub!\tr5, r6, r8\n\tadd\t0, r0, r8\n\tadd.ge\tr7, r0, r8\n\tand\t@CPI12_0[0], r6, r6\n\tand\t@CPI12_0[0], r5, r9\n\tsub!\tr9, r6, r10\n\tadd.ge\t0, r0, r7\n\txor\tr9, r6, r6\n\tsub.s!\t@CPI12_0[0], r6, r6\n\tadd\tr8, r0, r6\n\tadd.eq\tr7, r0, r6\n\tsub.s!\t0, r6, r6\n\tadd\tstack-[8], r0, r6\n\tjump.ne\t@.BB12_1\n\tadd\tr5, r6, r5\n\tptr.add\tr1, r5, r1\n\tld\tr1, r1\n\tsub.s!\t@CPI12_1[0], r1, r6\n\tjump.gt\t@.BB12_1\n\tadd\t32, r5, r5\n\tsub\tr4, r1, r4\n\tadd\t@CPI12_0[0], r0, r6\n\tsub!\tr5, r4, r7\n\tadd\t0, r0, r7\n\tadd.gt\tr6, r0, r7\n\tand\t@CPI12_0[0], r4, r4\n\tand\t@CPI12_0[0], r5, r8\n\tsub!\tr8, r4, r9\n\tadd.ge\t0, r0, r6\n\txor\tr8, r4, r4\n\tsub.s!\t@CPI12_0[0], r4, r4\n\tadd\tr7, r0, r4\n\tadd.eq\tr6, r0, r4\n\tsub.s!\t0, r4, r4\n\tjump.ne\t@.BB12_1\n\tadd\t31, r2, r2\n\tadd\tstack-[2], r0, r4\n\tand\tr2, r4, r2\n\tadd\tr2, r3, r3\n\tadd\t384, r2, r2\n\tadd\tstack-[1], r0, r4\n\tadd\t164, r4, r4\n\tst.1\tr4, r2\n\tand\t31, r1, r2\n\tst.1.inc\tr3, r1, r3\n\tptr.add\tstack[@ptr_calldata], r5, r4\n\tshr.s!\t5, r1, r5\n\tjump.eq\t@.BB12_120\n\tadd\tr0, r0, r6\n.BB12_71:\n\tshl.s\t5, r6, r7\n\tadd\tr3, r7, r8\n\tptr.add\tr4, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB12_71\n.BB12_120:\n\tsub.s!\t0, r2, r6\n\tjump.eq\t@.BB12_73\n\tshl.s\t5, r5, r5\n\tptr.add\tr4, r5, r4\n\tadd\tr3, r5, r5\n\tshl.s\t3, r2, r2\n\tld.1\tr5, r6\n\tshl\tr6, r2, r6\n\tshr\tr6, r2, r6\n\tld\tr4, r4\n\tsub\t256, r2, r2\n\tshr\tr4, r2, r4\n\tshl\tr4, r2, r2\n\tor\tr2, r6, r2\n\tst.1\tr5, r2\n.BB12_73:\n\tadd\tr1, r3, r2\n\tst.1\tr2, r0\n\tadd\tstack-[10], r0, r5\n\tadd\t132, r5, r2\n\tptr.add\tstack[@ptr_calldata], r2, r2\n\tld\tr2, r2\n\tadd\tstack-[1], r0, r6\n\tadd\t196, r6, r4\n\tst.1\tr4, r2\n\tadd\t164, r5, r2\n\tptr.add\tstack[@ptr_calldata], r2, r2\n\tld\tr2, r2\n\tadd\t228, r6, r4\n\tst.1\tr4, r2\n\tadd\t196, r5, r2\n\tptr.add\tstack[@ptr_calldata], r2, r2\n\tld\tr2, r2\n\tadd\t260, r6, r4\n\tst.1\tr4, r2\n\tadd\t228, r5, r2\n\tptr.add\tstack[@ptr_calldata], r2, r2\n\tld\tr2, r2\n\tadd\t292, r6, r4\n\tst.1\tr4, r2\n\tadd\t324, r6, r2\n\tadd\t260, r5, r4\n\tptr.add\tstack[@ptr_calldata], r4, r4\n\tld\tr4, r4\n\tst.1\tr2, r4\n\tadd\t292, r5, r5\n\tadd\tstack[@calldatasize], r0, r4\n\tadd\tstack-[7], r0, r2\n\tadd\tr4, r2, r6\n\tptr.add\tstack[@ptr_calldata], r0, r2\n\tptr.add\tr2, r5, r5\n\tld\tr5, r5\n\tadd\t@CPI12_0[0], r0, r7\n\tsub!\tr5, r6, r8\n\tadd\t0, r0, r8\n\tadd.ge\tr7, r0, r8\n\tand\t@CPI12_0[0], r6, r6\n\tand\t@CPI12_0[0], r5, r9\n\tsub!\tr9, r6, r10\n\tadd.ge\t0, r0, r7\n\txor\tr9, r6, r6\n\tsub.s!\t@CPI12_0[0], r6, r6\n\tadd\tr8, r0, r6\n\tadd.eq\tr7, r0, r6\n\tsub.s!\t0, r6, r6\n\tadd\tstack-[8], r0, r6\n\tjump.ne\t@.BB12_1\n\tadd\tr5, r6, r5\n\tptr.add\tr2, r5, r2\n\tld\tr2, r2\n\tsub.s!\t@CPI12_1[0], r2, r6\n\tjump.gt\t@.BB12_1\n\tadd\t32, r5, r5\n\tsub\tr4, r2, r4\n\tadd\t@CPI12_0[0], r0, r6\n\tsub!\tr5, r4, r7\n\tadd\t0, r0, r7\n\tadd.gt\tr6, r0, r7\n\tand\t@CPI12_0[0], r4, r4\n\tand\t@CPI12_0[0], r5, r8\n\tsub!\tr8, r4, r9\n\tadd.ge\t0, r0, r6\n\txor\tr8, r4, r4\n\tsub.s!\t@CPI12_0[0], r4, r4\n\tadd\tr7, r0, r4\n\tadd.eq\tr6, r0, r4\n\tsub.s!\t0, r4, r4\n\tjump.ne\t@.BB12_1\n\tadd\t31, r1, r1\n\tadd\tstack-[2], r0, r4\n\tand\tr1, r4, r1\n\tadd\tr1, r3, r3\n\tsub.s\t68, r0, r1\n\tadd\tstack-[1], r0, r4\n\tsub\tr1, r4, r1\n\tadd\t356, r4, r4\n\tadd\tr3, r1, r6\n\tst.1\tr4, r6\n\tand\t31, r2, r4\n\tst.1.inc\tr3, r2, r3\n\tptr.add\tstack[@ptr_calldata], r5, r5\n\tshr.s!\t5, r2, r6\n\tjump.eq\t@.BB12_119\n\tadd\tr0, r0, r7\n.BB12_78:\n\tshl.s\t5, r7, r8\n\tadd\tr3, r8, r9\n\tptr.add\tr5, r8, r8\n\tld\tr8, r8\n\tst.1\tr9, r8\n\tadd\t1, r7, r7\n\tsub!\tr7, r6, r8\n\tjump.lt\t@.BB12_78\n.BB12_119:\n\tsub.s!\t0, r4, r7\n\tjump.eq\t@.BB12_80\n\tshl.s\t5, r6, r6\n\tptr.add\tr5, r6, r5\n\tadd\tr3, r6, r6\n\tshl.s\t3, r4, r4\n\tld.1\tr6, r7\n\tshl\tr7, r4, r7\n\tshr\tr7, r4, r7\n\tld\tr5, r5\n\tsub\t256, r4, r4\n\tshr\tr5, r4, r5\n\tshl\tr5, r4, r4\n\tor\tr4, r7, r4\n\tst.1\tr6, r4\n.BB12_80:\n\tadd\tr2, r3, r4\n\tst.1\tr4, r0\n\tadd\tstack[@calldatasize], r0, r5\n\tadd\tstack-[7], r0, r4\n\tadd\tr5, r4, r7\n\tadd\tstack-[10], r0, r4\n\tadd\t324, r4, r6\n\tptr.add\tstack[@ptr_calldata], r0, r4\n\tptr.add\tr4, r6, r6\n\tld\tr6, r6\n\tadd\t@CPI12_0[0], r0, r8\n\tsub!\tr6, r7, r9\n\tadd\t0, r0, r9\n\tadd.ge\tr8, r0, r9\n\tand\t@CPI12_0[0], r7, r7\n\tand\t@CPI12_0[0], r6, r10\n\tsub!\tr10, r7, r11\n\tadd.ge\t0, r0, r8\n\txor\tr10, r7, r7\n\tsub.s!\t@CPI12_0[0], r7, r7\n\tadd\tr9, r0, r7\n\tadd.eq\tr8, r0, r7\n\tsub.s!\t0, r7, r7\n\tadd\tstack-[8], r0, r7\n\tjump.ne\t@.BB12_1\n\tadd\tr6, r7, r6\n\tptr.add\tr4, r6, r4\n\tld\tr4, r4\n\tsub.s!\t@CPI12_1[0], r4, r7\n\tjump.gt\t@.BB12_1\n\tadd\t32, r6, r6\n\tsub\tr5, r4, r5\n\tadd\t@CPI12_0[0], r0, r7\n\tsub!\tr6, r5, r8\n\tadd\t0, r0, r8\n\tadd.gt\tr7, r0, r8\n\tand\t@CPI12_0[0], r5, r5\n\tand\t@CPI12_0[0], r6, r9\n\tsub!\tr9, r5, r10\n\tadd.ge\t0, r0, r7\n\txor\tr9, r5, r5\n\tsub.s!\t@CPI12_0[0], r5, r5\n\tadd\tr8, r0, r5\n\tadd.eq\tr7, r0, r5\n\tsub.s!\t0, r5, r5\n\tjump.ne\t@.BB12_1\n\tadd\t31, r2, r2\n\tadd\tstack-[2], r0, r5\n\tand\tr2, r5, r2\n\tadd\tr2, r3, r3\n\tadd\tr3, r1, r1\n\tadd\tstack-[1], r0, r2\n\tadd\t388, r2, r2\n\tst.1\tr2, r1\n\tand\t31, r4, r2\n\tst.1.inc\tr3, r4, r1\n\tptr.add\tstack[@ptr_calldata], r6, r3\n\tshr.s!\t5, r4, r5\n\tjump.eq\t@.BB12_118\n\tadd\tr0, r0, r6\n.BB12_85:\n\tshl.s\t5, r6, r7\n\tadd\tr1, r7, r8\n\tptr.add\tr3, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB12_85\n.BB12_118:\n\tsub.s!\t0, r2, r6\n\tjump.eq\t@.BB12_87\n\tshl.s\t5, r5, r5\n\tptr.add\tr3, r5, r3\n\tadd\tr1, r5, r5\n\tshl.s\t3, r2, r2\n\tld.1\tr5, r6\n\tshl\tr6, r2, r6\n\tshr\tr6, r2, r6\n\tld\tr3, r3\n\tsub\t256, r2, r2\n\tshr\tr3, r2, r3\n\tshl\tr3, r2, r2\n\tor\tr2, r6, r2\n\tst.1\tr5, r2\n.BB12_87:\n\tadd\tr4, r1, r2\n\tst.1\tr2, r0\n\tadd\tstack-[1], r0, r2\n\tadd\t36, r2, r2\n\tadd\tstack-[4], r0, r3\n\tst.1\tr2, r3\n\tcontext.gas_left\tr2\n\tadd\tstack-[5], r0, r3\n\tsub.s!\t4, r3, r3\n\tjump.ne\t@.BB12_89\n\tadd\tstack[@returndatasize], r0, r3\n\tsub.s!\t32, r3, r1\n\tadd\t32, r0, r4\n\tadd.lt\tr3, r0, r4\n\tjump\t@.BB12_99\n.BB12_108:\n\tadd\t@CPI12_18[0], r0, r1\n\tadd\t32777, r0, r2\n\tadd\tstack-[9], r0, r3\n\tadd\tstack-[6], r0, r4\n\tadd\tr0, r0, r5\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tadd\tr1, r0, r2\n\tshr.s\t96, r2, r2\n\tand\t@CPI12_3[0], r2, stack[@returndatasize]\n\tand\t@CPI12_3[0], r2, r2\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n.BB12_107:\n\tsub.s!\t0, r2, r1\n\tjump.ne\t@.BB12_109\n.BB12_105:\n\tld.1\t64, r1\n\tadd\tstack-[10], r0, r2\n\tst.1\tr1, r2\n\tadd\t@CPI12_3[0], r0, r2\n\tsub.s!\t@CPI12_3[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI12_19[0], r1, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB12_109:\n\tsub.s!\t@CPI12_1[0], r2, r1\n\tjump.gt\t@.BB12_15\n\tadd\t63, r2, r1\n\tsub.s\t32, r0, r3\n\tand\tr1, r3, r3\n\tld.1\t64, r1\n\tadd\tr1, r3, r3\n\tsub!\tr3, r1, r4\n\tadd\t0, r0, r4\n\tadd.lt\t1, r0, r4\n\tsub.s!\t@CPI12_1[0], r3, r5\n\tjump.gt\t@.BB12_15\n\tand!\t1, r4, r4\n\tjump.ne\t@.BB12_15\n\tst.1\t64, r3\n\tst.1.inc\tr1, r2, r1\n\tptr.add\tstack[@ptr_return_data], r0, r2\n\tadd\tstack[@returndatasize], r0, r4\n\tand\t31, r4, r3\n\tshr.s!\t5, r4, r4\n\tjump.eq\t@.BB12_126\n\tadd\tr0, r0, r5\n.BB12_114:\n\tshl.s\t5, r5, r6\n\tadd\tr1, r6, r7\n\tptr.add\tr2, r6, r6\n\tld\tr6, r6\n\tst.1\tr7, r6\n\tadd\t1, r5, r5\n\tsub!\tr5, r4, r6\n\tjump.lt\t@.BB12_114\n.BB12_126:\n\tsub.s!\t0, r3, r5\n\tjump.eq\t@.BB12_105\n\tshl.s\t5, r4, r4\n\tptr.add\tr2, r4, r2\n\tadd\tr1, r4, r1\n\tshl.s\t3, r3, r3\n\tld.1\tr1, r4\n\tshl\tr4, r3, r4\n\tshr\tr4, r3, r4\n\tld\tr2, r2\n\tsub\t256, r3, r3\n\tshr\tr2, r3, r2\n\tshl\tr2, r3, r2\n\tor\tr2, r4, r2\n\tst.1\tr1, r2\n\tjump\t@.BB12_105\n.BB12_89:\n\tadd\t31, r4, r3\n\tadd\tstack-[2], r0, r4\n\tand\tr3, r4, r3\n\tadd\tstack-[1], r0, r5\n\tsub\tr1, r5, r1\n\tadd\tr1, r3, r1\n\tadd\t@CPI12_3[0], r0, r3\n\tsub.s!\t@CPI12_3[0], r1, r4\n\tadd.ge\tr3, r0, r1\n\tshl.s\t96, r1, r1\n\tsub.s!\t@CPI12_3[0], r5, r4\n\tadd\tr3, r0, r4\n\tadd.lt\tr5, r0, r4\n\tshl.s\t64, r4, r4\n\tor\tr1, r4, r1\n\tsub.s!\t@CPI12_3[0], r2, r4\n\tadd.ge\tr3, r0, r2\n\tshl.s\t192, r2, r2\n\tor\tr2, r1, r1\n\tadd\tstack-[5], r0, r2\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tadd\tstack-[1], r0, r10\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI12_3[0], r3, r3\n\tsub.s!\t32, r3, r4\n\tadd\t32, r0, r4\n\tadd.lt\tr3, r0, r4\n\tand\t31, r4, r5\n\tshr.s!\t5, r4, r6\n\tjump.eq\t@.BB12_117\n\tadd\tr0, r0, r7\n.BB12_91:\n\tshl.s\t5, r7, r8\n\tadd\tr10, r8, r9\n\tptr.add\tr1, r8, r8\n\tld\tr8, r8\n\tst.1\tr9, r8\n\tadd\t1, r7, r7\n\tsub!\tr7, r6, r8\n\tjump.lt\t@.BB12_91\n.BB12_117:\n\tsub.s!\t0, r5, r7\n\tjump.eq\t@.BB12_93\n\tshl.s\t5, r6, r6\n\tptr.add\tr1, r6, r7\n\tadd\tstack-[1], r0, r8\n\tadd\tr8, r6, r6\n\tshl.s\t3, r5, r5\n\tld.1\tr6, r8\n\tshl\tr8, r5, r8\n\tshr\tr8, r5, r8\n\tld\tr7, r7\n\tsub\t256, r5, r5\n\tshr\tr7, r5, r7\n\tshl\tr7, r5, r5\n\tor\tr5, r8, r5\n\tst.1\tr6, r5\n.BB12_93:\n\tadd\tr3, r0, stack[@returndatasize]\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB12_94\n.BB12_99:\n\tadd\t31, r4, r1\n\tand\t96, r1, r2\n\tadd\tstack-[1], r0, r1\n\tadd\tr2, r1, r1\n\tsub!\tr1, r2, r2\n\tadd\t0, r0, r2\n\tadd.lt\t1, r0, r2\n\tsub.s!\t@CPI12_1[0], r1, r4\n\tjump.gt\t@.BB12_15\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB12_15\n\tst.1\t64, r1\n\tsub.s!\t32, r3, r1\n\tjump.lt\t@.BB12_1\n\tadd\tstack-[1], r0, r1\n\tld.1\tr1, r1\n\tadd\tr1, r0, stack-[10]\n\tjump\t@.BB12_103\n.BB12_94:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r3\n\tjump.eq\t@.BB12_116\n\tadd\tr0, r0, r5\n.BB12_96:\n\tshl.s\t5, r5, r6\n\tadd\tr2, r6, r7\n\tptr.add\tr1, r6, r6\n\tld\tr6, r6\n\tst.1\tr7, r6\n\tadd\t1, r5, r5\n\tsub!\tr5, r3, r6\n\tjump.lt\t@.BB12_96\n.BB12_116:\n\tsub.s!\t0, r4, r5\n\tjump.eq\t@.BB12_98\n\tshl.s\t5, r3, r3\n\tptr.add\tr1, r3, r1\n\tadd\tr2, r3, r3\n\tshl.s\t3, r4, r4\n\tld.1\tr3, r5\n\tshl\tr5, r4, r5\n\tshr\tr5, r4, r5\n\tld\tr1, r1\n\tsub\t256, r4, r4\n\tshr\tr1, r4, r1\n\tshl\tr1, r4, r1\n\tor\tr1, r5, r1\n\tst.1\tr3, r1\n.BB12_98:\n\tadd\t@CPI12_3[0], r0, r1\n\tadd\tstack[@returndatasize], r0, r3\n\tsub.s!\t@CPI12_3[0], r3, r4\n\tadd.ge\tr1, r0, r3\n\tsub.s!\t@CPI12_3[0], r2, r4\n\tadd.lt\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t96, r3, r2\n\tor\tr2, r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end12:\n\nabi_decode_addresst_uint256t_bytest_enum_Operation:\n.func_begin13:\n\tadd\tr1, r0, r4\n\tsub.s\t4, r4, r1\n\tadd\t@CPI13_0[0], r0, r2\n\tsub.s!\t127, r1, r3\n\tadd\t0, r0, r3\n\tadd.gt\tr2, r0, r3\n\tand\t@CPI13_0[0], r1, r1\n\tsub.s!\t0, r1, r5\n\tadd.ge\t0, r0, r2\n\tsub.s!\t@CPI13_0[0], r1, r1\n\tadd\tr3, r0, r1\n\tadd.eq\tr2, r0, r1\n\tsub.s!\t0, r1, r1\n\tjump.eq\t@.BB13_1\n\tptr.add\tstack[@ptr_calldata], r0, r3\n\tptr.add.s\t4, r3, r1\n\tld\tr1, r1\n\tsub.s!\t@CPI13_1[0], r1, r2\n\tjump.gt\t@.BB13_1\n\tptr.add.s\t36, r3, r2\n\tld\tr2, r2\n\tptr.add.s\t68, r3, r5\n\tld\tr5, r6\n\tsub.s!\t@CPI13_2[0], r6, r5\n\tjump.gt\t@.BB13_1\n\tadd\t35, r6, r5\n\tadd\t@CPI13_0[0], r0, r7\n\tsub!\tr5, r4, r8\n\tadd\t0, r0, r8\n\tadd.ge\tr7, r0, r8\n\tand\t@CPI13_0[0], r4, r9\n\tand\t@CPI13_0[0], r5, r5\n\tsub!\tr5, r9, r10\n\tadd.ge\t0, r0, r7\n\txor\tr5, r9, r5\n\tsub.s!\t@CPI13_0[0], r5, r5\n\tadd\tr8, r0, r5\n\tadd.eq\tr7, r0, r5\n\tsub.s!\t0, r5, r5\n\tjump.ne\t@.BB13_1\n\tadd\t4, r6, r5\n\tptr.add\tr3, r5, r3\n\tld\tr3, r5\n\tsub.s!\t@CPI13_3[0], r5, r3\n\tjump.ge\t@.BB13_6\n\tadd\t63, r5, r3\n\tsub.s\t32, r0, r7\n\tand\tr3, r7, r7\n\tld.1\t64, r3\n\tadd\tr3, r7, r7\n\tsub!\tr7, r3, r8\n\tadd\t0, r0, r8\n\tadd.lt\t1, r0, r8\n\tsub.s!\t@CPI13_2[0], r7, r9\n\tjump.gt\t@.BB13_6\n\tand!\t1, r8, r8\n\tjump.ne\t@.BB13_6\n\tadd\t36, r6, r8\n\tst.1\t64, r7\n\tst.1.inc\tr3, r5, r6\n\tadd\tr5, r8, r7\n\tsub!\tr7, r4, r4\n\tjump.gt\t@.BB13_1\n\tand\t31, r5, r4\n\tptr.add\tstack[@ptr_calldata], r8, r7\n\tshr.s!\t5, r5, r8\n\tjump.eq\t@.BB13_16\n\tadd\tr0, r0, r9\n.BB13_12:\n\tshl.s\t5, r9, r10\n\tadd\tr6, r10, r11\n\tptr.add\tr7, r10, r10\n\tld\tr10, r10\n\tst.1\tr11, r10\n\tadd\t1, r9, r9\n\tsub!\tr9, r8, r10\n\tjump.lt\t@.BB13_12\n.BB13_16:\n\tsub.s!\t0, r4, r9\n\tjump.eq\t@.BB13_14\n\tshl.s\t5, r8, r8\n\tptr.add\tr7, r8, r7\n\tadd\tr6, r8, r8\n\tshl.s\t3, r4, r4\n\tld.1\tr8, r9\n\tshl\tr9, r4, r9\n\tshr\tr9, r4, r9\n\tld\tr7, r7\n\tsub\t256, r4, r4\n\tshr\tr7, r4, r7\n\tshl\tr7, r4, r4\n\tor\tr4, r9, r4\n\tst.1\tr8, r4\n.BB13_14:\n\tadd\tr6, r5, r4\n\tst.1\tr4, r0\n\tadd\t100, r0, r4\n\tptr.add\tstack[@ptr_calldata], r4, r4\n\tld\tr4, r4\n\tsub.s!\t1, r4, r5\n\tjump.gt\t@.BB13_1\n\tret\n.BB13_1:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB13_6:\n\tadd\t@CPI13_4[0], r0, r1\n\tst.1\t0, r1\n\tadd\t65, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI13_5[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end13:\n\nexternal_fun_addDeposit:\n.func_begin14:\n\tnop\tstack+=[2]\n\tsub.s\t4, r0, r1\n\tadd\tstack[@calldatasize], r1, r1\n\tsub.s\t1, r0, r2\n\tadd\t@CPI14_0[0], r0, r3\n\tsub!\tr1, r2, r2\n\tadd\t0, r0, r2\n\tadd.gt\tr3, r0, r2\n\tand\t@CPI14_0[0], r1, r1\n\tsub.s!\t@CPI14_0[0], r1, r4\n\tadd.ge\t0, r0, r3\n\txor\t@CPI14_0[0], r1, r1\n\tsub.s!\t@CPI14_0[0], r1, r1\n\tadd\tr2, r0, r1\n\tadd.eq\tr3, r0, r1\n\tsub.s!\t0, r1, r1\n\tjump.eq\t@.BB14_1\n\tadd\t@CPI14_1[0], r0, r1\n\tst.2\t0, r1\n\tcontext.code_source\tr1\n\tst.2\t4, r1\n\tst.2\t36, r0\n\tadd\t@CPI14_2[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI14_2[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI14_3[0], r1, r1\n\tadd\t32773, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB14_1\n\tld\tr1, r1\n\tadd\t@CPI14_4[0], r0, r2\n\tst.2\t0, r2\n\tand\t@CPI14_5[0], r1, r1\n\tadd\tr1, r0, stack-[2]\n\tst.2\t4, r1\n\tadd\t@CPI14_2[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI14_2[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI14_6[0], r1, r1\n\tadd\t32770, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB14_1\n\tld\tr1, r1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB14_5\n.BB14_1:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB14_5:\n\tld.1\t64, r5\n\tadd\t@CPI14_7[0], r0, r1\n\tst.1\tr5, r1\n\tadd\t4, r5, r1\n\tcontext.this\tr2\n\tst.1\tr1, r2\n\tcontext.get_context_u128\tr3\n\tcontext.gas_left\tr1\n\tadd\tstack-[2], r0, r6\n\tsub.s!\t4, r6, r2\n\tjump.eq\t@.BB14_15\n\tadd\t@CPI14_2[0], r0, r2\n\tsub.s!\t@CPI14_2[0], r1, r4\n\tadd.ge\tr2, r0, r1\n\tsub.s!\t@CPI14_2[0], r5, r4\n\tadd\tr5, r0, stack-[1]\n\tadd.lt\tr5, r0, r2\n\tshl.s\t64, r2, r2\n\tshl.s\t192, r1, r1\n\tor\tr1, r2, r1\n\tsub.s!\t0, r3, r2\n\tjump.ne\t@.BB14_9\n\tor\t@CPI14_9[0], r1, r1\n\tadd\tr6, r0, r2\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tjump\t@.BB14_7\n.BB14_9:\n\tor\t@CPI14_8[0], r1, r1\n\tadd\t32777, r0, r2\n\tadd\tr6, r0, r4\n\tadd\tr0, r0, r5\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n.BB14_7:\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI14_2[0], r3, stack[@returndatasize]\n\tand\t@CPI14_2[0], r3, r4\n\tand!\t1, r2, r2\n\tadd\tstack-[1], r0, r5\n\tjump.eq\t@.BB14_10\n.BB14_15:\n\tsub.s!\t@CPI14_10[0], r5, r1\n\tjump.lt\t@.BB14_17\n\tadd\t@CPI14_11[0], r0, r1\n\tst.1\t0, r1\n\tadd\t65, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI14_9[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB14_17:\n\tst.1\t64, r5\n\tadd\tr0, r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB14_10:\n\tld.1\t64, r2\n\tand\t31, r4, r3\n\tshr.s!\t5, r4, r4\n\tjump.eq\t@.BB14_18\n\tadd\tr0, r0, r5\n.BB14_12:\n\tshl.s\t5, r5, r6\n\tadd\tr2, r6, r7\n\tptr.add\tr1, r6, r6\n\tld\tr6, r6\n\tst.1\tr7, r6\n\tadd\t1, r5, r5\n\tsub!\tr5, r4, r6\n\tjump.lt\t@.BB14_12\n.BB14_18:\n\tsub.s!\t0, r3, r5\n\tjump.eq\t@.BB14_14\n\tshl.s\t5, r4, r4\n\tptr.add\tr1, r4, r1\n\tadd\tr2, r4, r4\n\tshl.s\t3, r3, r3\n\tld.1\tr4, r5\n\tshl\tr5, r3, r5\n\tshr\tr5, r3, r5\n\tld\tr1, r1\n\tsub\t256, r3, r3\n\tshr\tr1, r3, r1\n\tshl\tr1, r3, r1\n\tor\tr1, r5, r1\n\tst.1\tr4, r1\n.BB14_14:\n\tadd\t@CPI14_2[0], r0, r1\n\tadd\tstack[@returndatasize], r0, r3\n\tsub.s!\t@CPI14_2[0], r3, r4\n\tadd.ge\tr1, r0, r3\n\tsub.s!\t@CPI14_2[0], r2, r4\n\tadd.lt\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t96, r3, r2\n\tor\tr2, r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end14:\n\nexternal_fun_withdrawDepositTo:\n.func_begin15:\n\tnop\tstack+=[2]\n\tsub.s\t4, r0, r1\n\tadd\tstack[@calldatasize], r1, r1\n\tadd\t@CPI15_0[0], r0, r2\n\tsub.s!\t63, r1, r3\n\tadd\t0, r0, r3\n\tadd.gt\tr2, r0, r3\n\tand\t@CPI15_0[0], r1, r1\n\tsub.s!\t0, r1, r4\n\tadd.ge\t0, r0, r2\n\tsub.s!\t@CPI15_0[0], r1, r1\n\tadd\tr3, r0, r1\n\tadd.eq\tr2, r0, r1\n\tsub.s!\t0, r1, r1\n\tjump.eq\t@.BB15_1\n\tadd\t4, r0, r1\n\tptr.add\tstack[@ptr_calldata], r1, r1\n\tld\tr1, r3\n\tsub.s!\t@CPI15_1[0], r3, r1\n\tjump.le\t@.BB15_3\n.BB15_1:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB15_3:\n\tadd\t50, r0, r1\n\tsload\tr1, r1\n\tand\t@CPI15_1[0], r1, r2\n\tcontext.caller\tr1\n\tsub!\tr1, r2, r2\n\tjump.ne\t@.BB15_4\n\tadd\t@CPI15_5[0], r0, r1\n\tst.2\t0, r1\n\tcontext.code_source\tr1\n\tst.2\t4, r1\n\tst.2\t36, r0\n\tadd\t@CPI15_3[0], r0, r1\n\tcontext.gas_left\tr2\n\tadd\tr3, r0, stack-[2]\n\tsub.s!\t@CPI15_3[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI15_6[0], r1, r1\n\tadd\t32773, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB15_1\n\tld\tr1, r1\n\tadd\t@CPI15_7[0], r0, r2\n\tst.2\t0, r2\n\tand\t@CPI15_1[0], r1, r1\n\tadd\tr1, r0, stack-[1]\n\tst.2\t4, r1\n\tadd\t@CPI15_3[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI15_3[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI15_8[0], r1, r1\n\tadd\t32770, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tstack-[2], r0, r3\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB15_1\n\tld\tr1, r1\n\tsub.s!\t0, r1, r1\n\tjump.eq\t@.BB15_1\n\tld.1\t64, r5\n\tadd\t@CPI15_9[0], r0, r1\n\tst.1\tr5, r1\n\tadd\t4, r5, r1\n\tst.1\tr1, r3\n\tadd\t36, r0, r1\n\tptr.add\tstack[@ptr_calldata], r1, r1\n\tld\tr1, r1\n\tadd\t36, r5, r2\n\tst.1\tr2, r1\n\tcontext.gas_left\tr1\n\tadd\tstack-[1], r0, r2\n\tsub.s!\t4, r2, r3\n\tjump.eq\t@.BB15_15\n\tadd\t@CPI15_3[0], r0, r4\n\tsub.s!\t@CPI15_3[0], r1, r3\n\tadd.ge\tr4, r0, r1\n\tsub.s!\t@CPI15_3[0], r5, r3\n\tadd\tr4, r0, r3\n\tadd.lt\tr5, r0, r3\n\tshl.s\t64, r3, r3\n\tshl.s\t192, r1, r1\n\tor\tr1, r3, r1\n\tor\t@CPI15_10[0], r1, r1\n\tadd\tr5, r0, stack-[2]\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tadd\tstack-[2], r0, r5\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI15_3[0], r3, stack[@returndatasize]\n\tand\t@CPI15_3[0], r3, r4\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB15_10\n.BB15_15:\n\tsub.s!\t@CPI15_11[0], r5, r1\n\tjump.lt\t@.BB15_17\n\tadd\t@CPI15_12[0], r0, r1\n\tst.1\t0, r1\n\tadd\t65, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI15_4[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB15_4:\n\tld.1\t64, r2\n\tadd\t@CPI15_2[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t4, r2, r3\n\tst.1\tr3, r1\n\tadd\t@CPI15_3[0], r0, r1\n\tsub.s!\t@CPI15_3[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI15_4[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB15_17:\n\tst.1\t64, r5\n\tadd\tr0, r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB15_10:\n\tld.1\t64, r2\n\tand\t31, r4, r3\n\tshr.s!\t5, r4, r4\n\tjump.eq\t@.BB15_18\n\tadd\tr0, r0, r5\n.BB15_12:\n\tshl.s\t5, r5, r6\n\tadd\tr2, r6, r7\n\tptr.add\tr1, r6, r6\n\tld\tr6, r6\n\tst.1\tr7, r6\n\tadd\t1, r5, r5\n\tsub!\tr5, r4, r6\n\tjump.lt\t@.BB15_12\n.BB15_18:\n\tsub.s!\t0, r3, r5\n\tjump.eq\t@.BB15_14\n\tshl.s\t5, r4, r4\n\tptr.add\tr1, r4, r1\n\tadd\tr2, r4, r4\n\tshl.s\t3, r3, r3\n\tld.1\tr4, r5\n\tshl\tr5, r3, r5\n\tshr\tr5, r3, r5\n\tld\tr1, r1\n\tsub\t256, r3, r3\n\tshr\tr1, r3, r1\n\tshl\tr1, r3, r1\n\tor\tr1, r5, r1\n\tst.1\tr4, r1\n.BB15_14:\n\tadd\t@CPI15_3[0], r0, r1\n\tadd\tstack[@returndatasize], r0, r3\n\tsub.s!\t@CPI15_3[0], r3, r4\n\tadd.ge\tr1, r0, r3\n\tsub.s!\t@CPI15_3[0], r2, r4\n\tadd.lt\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t96, r3, r2\n\tor\tr2, r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end15:\n\nabi_encode_bytes_to_bytes:\n.func_begin16:\n\tld.1\tr1, r3\n\tst.1.inc\tr2, r3, r2\n\tsub.s!\t0, r3, r4\n\tjump.eq\t@.BB16_3\n\tadd\tr0, r0, r4\n.BB16_2:\n\tadd\tr4, r2, r5\n\tadd\t32, r4, r4\n\tadd\tr4, r1, r6\n\tld.1\tr6, r6\n\tst.1\tr5, r6\n\tsub!\tr4, r3, r5\n\tjump.lt\t@.BB16_2\n.BB16_3:\n\tadd\tr3, r2, r1\n\tst.1\tr1, r0\n\tadd\t31, r3, r1\n\tsub.s\t32, r0, r3\n\tand\tr1, r3, r1\n\tadd\tr2, r1, r1\n\tret\n.func_end16:\n\nabi_encode_bytes:\n.func_begin17:\n\tadd\t32, r0, r3\n\tst.1.inc\tr1, r3, r4\n\tld.1\tr2, r3\n\tst.1\tr4, r3\n\tadd\t64, r1, r1\n\tsub.s!\t0, r3, r4\n\tjump.eq\t@.BB17_3\n\tadd\tr0, r0, r4\n.BB17_2:\n\tadd\tr4, r1, r5\n\tadd\t32, r4, r4\n\tadd\tr4, r2, r6\n\tld.1\tr6, r6\n\tst.1\tr5, r6\n\tsub!\tr4, r3, r5\n\tjump.lt\t@.BB17_2\n.BB17_3:\n\tadd\tr3, r1, r2\n\tst.1\tr2, r0\n\tadd\t31, r3, r2\n\tsub.s\t32, r0, r3\n\tand\tr2, r3, r2\n\tadd\tr2, r1, r1\n\tret\n.func_end17:\n\nexternal_fun_encodeTransactionData:\n.func_begin18:\n\tnop\tstack+=[2]\n\tcontext.get_context_u128\tr1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB18_1\n\tadd\tstack[@calldatasize], r0, r2\n\tsub.s\t4, r2, r1\n\tadd\t@CPI18_0[0], r0, r3\n\tsub.s!\t224, r1, r4\n\tadd\t0, r0, r4\n\tadd.lt\tr3, r0, r4\n\tand\t@CPI18_0[0], r1, r1\n\tsub.s!\t0, r1, r5\n\tadd.le\t0, r0, r3\n\tsub.s!\t@CPI18_0[0], r1, r1\n\tadd\tr4, r0, r1\n\tadd.eq\tr3, r0, r1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB18_1\n\tadd\t4, r0, r1\n\tptr.add\tstack[@ptr_calldata], r1, r1\n\tld\tr1, r1\n\tsub.s!\t@CPI18_1[0], r1, r3\n\tjump.gt\t@.BB18_1\n\tadd\t4, r1, r3\n\tsub\tr2, r3, r4\n\tadd\t@CPI18_0[0], r0, r5\n\tsub.s!\t160, r4, r6\n\tadd\t0, r0, r6\n\tadd.lt\tr5, r0, r6\n\tand\t@CPI18_0[0], r4, r4\n\tsub.s!\t0, r4, r7\n\tadd.le\t0, r0, r5\n\tsub.s!\t@CPI18_0[0], r4, r4\n\tadd\tr6, r0, r4\n\tadd.eq\tr5, r0, r4\n\tsub.s!\t0, r4, r4\n\tjump.ne\t@.BB18_1\n\tld.1\t64, r11\n\tsub.s!\t@CPI18_2[0], r11, r4\n\tjump.lt\t@.BB18_7\n.BB18_6:\n\tadd\t@CPI18_5[0], r0, r1\n\tst.1\t0, r1\n\tadd\t65, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI18_6[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB18_7:\n\tadd\t160, r11, r4\n\tst.1\t64, r4\n\tptr.add\tstack[@ptr_calldata], r3, r4\n\tld\tr4, r4\n\tsub.s!\t@CPI18_3[0], r4, r5\n\tjump.gt\t@.BB18_1\n\tst.1.inc\tr11, r4, r4\n\tadd\t36, r1, r5\n\tptr.add\tstack[@ptr_calldata], r5, r5\n\tld\tr5, r5\n\tsub.s!\t1, r5, r6\n\tjump.gt\t@.BB18_1\n\tst.1\tr4, r5\n\tadd\t68, r1, r4\n\tptr.add\tstack[@ptr_calldata], r4, r4\n\tld\tr4, r4\n\tadd\t64, r11, r5\n\tst.1\tr5, r4\n\tadd\t100, r1, r5\n\tptr.add\tstack[@ptr_calldata], r0, r4\n\tptr.add\tr4, r5, r5\n\tld\tr5, r5\n\tsub.s!\t@CPI18_1[0], r5, r6\n\tjump.gt\t@.BB18_1\n\tadd\tr5, r3, r5\n\tadd\t31, r5, r3\n\tadd\t@CPI18_0[0], r0, r6\n\tsub!\tr3, r2, r7\n\tadd\t0, r0, r7\n\tadd.ge\tr6, r0, r7\n\tand\t@CPI18_0[0], r3, r3\n\tand\t@CPI18_0[0], r2, r8\n\tsub!\tr3, r8, r9\n\tadd.ge\t0, r0, r6\n\txor\tr3, r8, r3\n\tsub.s!\t@CPI18_0[0], r3, r3\n\tadd\tr7, r0, r3\n\tadd.eq\tr6, r0, r3\n\tsub.s!\t0, r3, r3\n\tjump.ne\t@.BB18_1\n\tptr.add\tr4, r5, r3\n\tld\tr3, r3\n\tsub.s!\t@CPI18_1[0], r3, r4\n\tjump.gt\t@.BB18_6\n\tadd\t63, r3, r4\n\tsub.s\t32, r0, r6\n\tand\tr4, r6, r6\n\tld.1\t64, r4\n\tadd\tr4, r6, r6\n\tsub!\tr6, r4, r7\n\tadd\t0, r0, r7\n\tadd.lt\t1, r0, r7\n\tsub.s!\t@CPI18_1[0], r6, r8\n\tjump.gt\t@.BB18_6\n\tand!\t1, r7, r7\n\tjump.ne\t@.BB18_6\n\tadd\t32, r5, r7\n\tst.1\t64, r6\n\tst.1.inc\tr4, r3, r5\n\tadd\tr3, r7, r6\n\tsub!\tr6, r2, r2\n\tjump.gt\t@.BB18_1\n\tand\t31, r3, r2\n\tptr.add\tstack[@ptr_calldata], r7, r6\n\tshr.s!\t5, r3, r7\n\tjump.eq\t@.BB18_23\n\tadd\tr0, r0, r8\n.BB18_17:\n\tshl.s\t5, r8, r9\n\tadd\tr5, r9, r10\n\tptr.add\tr6, r9, r9\n\tld\tr9, r9\n\tst.1\tr10, r9\n\tadd\t1, r8, r8\n\tsub!\tr8, r7, r9\n\tjump.lt\t@.BB18_17\n.BB18_23:\n\tsub.s!\t0, r2, r8\n\tjump.eq\t@.BB18_19\n\tshl.s\t5, r7, r7\n\tptr.add\tr6, r7, r6\n\tadd\tr5, r7, r7\n\tshl.s\t3, r2, r2\n\tld.1\tr7, r8\n\tshl\tr8, r2, r8\n\tshr\tr8, r2, r8\n\tld\tr6, r6\n\tsub\t256, r2, r2\n\tshr\tr6, r2, r6\n\tshl\tr6, r2, r2\n\tor\tr2, r8, r2\n\tst.1\tr7, r2\n.BB18_19:\n\tadd\tr5, r3, r2\n\tst.1\tr2, r0\n\tadd\t96, r11, r2\n\tst.1\tr2, r4\n\tadd\t132, r1, r1\n\tptr.add\tstack[@ptr_calldata], r1, r1\n\tld\tr1, r1\n\tadd\t128, r11, r2\n\tst.1\tr2, r1\n\tsub.s\t36, r0, r1\n\tadd\tstack[@calldatasize], r1, r1\n\tadd\t@CPI18_0[0], r0, r2\n\tsub.s!\t160, r1, r3\n\tadd\t0, r0, r3\n\tadd.lt\tr2, r0, r3\n\tand\t@CPI18_0[0], r1, r1\n\tsub.s!\t0, r1, r4\n\tadd.le\t0, r0, r2\n\tsub.s!\t@CPI18_0[0], r1, r1\n\tadd\tr3, r0, r1\n\tadd.eq\tr2, r0, r1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB18_1\n\tld.1\t64, r1\n\tadd\tr1, r0, stack-[1]\n\tadd\tr11, r0, stack-[2]\n\tnear_call\tr0, @finalize_allocation_13219, @DEFAULT_UNWIND\n\tadd\tstack-[1], r0, r2\n\tadd\tstack-[2], r0, r4\n\tadd\t36, r0, r1\n\tptr.add\tstack[@ptr_calldata], r1, r1\n\tld\tr1, r1\n\tst.1.inc\tr2, r1, r1\n\tadd\t68, r0, r3\n\tptr.add\tstack[@ptr_calldata], r3, r3\n\tld\tr3, r3\n\tst.1\tr1, r3\n\tadd\t100, r0, r1\n\tptr.add\tstack[@ptr_calldata], r1, r1\n\tld\tr1, r1\n\tadd\t64, r2, r3\n\tst.1\tr3, r1\n\tadd\t132, r0, r1\n\tptr.add\tstack[@ptr_calldata], r1, r1\n\tld\tr1, r1\n\tsub.s!\t@CPI18_3[0], r1, r3\n\tjump.gt\t@.BB18_1\n\tadd\t96, r2, r3\n\tst.1\tr3, r1\n\tadd\t164, r0, r1\n\tptr.add\tstack[@ptr_calldata], r1, r1\n\tld\tr1, r1\n\tsub.s!\t@CPI18_3[0], r1, r3\n\tjump.le\t@.BB18_22\n.BB18_1:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB18_22:\n\tadd\t128, r2, r3\n\tst.1\tr3, r1\n\tadd\t196, r0, r1\n\tptr.add\tstack[@ptr_calldata], r1, r1\n\tld\tr1, r3\n\tadd\tr4, r0, r1\n\tnear_call\tr0, @fun_encodeTransactionData, @DEFAULT_UNWIND\n\tadd\tr1, r0, r2\n\tld.1\t64, r1\n\tadd\tr1, r0, stack-[2]\n\tnear_call\tr0, @abi_encode_bytes, @DEFAULT_UNWIND\n\tadd\tstack-[2], r0, r4\n\tsub\tr1, r4, r1\n\tadd\t@CPI18_4[0], r0, r2\n\tsub.s!\t@CPI18_4[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tsub.s!\t@CPI18_4[0], r4, r3\n\tadd.lt\tr4, r0, r2\n\tshl.s\t64, r2, r2\n\tshl.s\t96, r1, r1\n\tor\tr1, r2, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.func_end18:\n\nexternal_fun_enableModule:\n.func_begin19:\n\tnop\tstack+=[3]\n\tcontext.get_context_u128\tr1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB19_1\n\tsub.s\t4, r0, r1\n\tadd\tstack[@calldatasize], r1, r1\n\tadd\t@CPI19_0[0], r0, r2\n\tsub.s!\t32, r1, r3\n\tadd\t0, r0, r3\n\tadd.lt\tr2, r0, r3\n\tand\t@CPI19_0[0], r1, r1\n\tsub.s!\t0, r1, r4\n\tadd.le\t0, r0, r2\n\tsub.s!\t@CPI19_0[0], r1, r1\n\tadd\tr3, r0, r1\n\tadd.eq\tr2, r0, r1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB19_1\n\tadd\t4, r0, r1\n\tptr.add\tstack[@ptr_calldata], r1, r1\n\tld\tr1, r3\n\tsub.s!\t@CPI19_1[0], r3, r1\n\tjump.le\t@.BB19_4\n.BB19_1:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB19_4:\n\tcontext.caller\tr1\n\tcontext.this\tr2\n\tsub!\tr1, r2, r2\n\tjump.ne\t@.BB19_5\n\tsub.s!\t1, r3, r1\n\tjump.gt\t@.BB19_8\n\tld.1\t64, r1\n\tadd\t@CPI19_10[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tst.1\tr2, r3\n\tadd\t@CPI19_3[0], r0, r2\n\tsub.s!\t@CPI19_3[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI19_4[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB19_5:\n\tld.1\t64, r2\n\tadd\t@CPI19_2[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t4, r2, r3\n\tst.1\tr3, r1\n\tadd\t@CPI19_3[0], r0, r1\n\tsub.s!\t@CPI19_3[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI19_4[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB19_8:\n\tst.1\t0, r3\n\tst.1\t32, r0\n\tadd\t@CPI19_3[0], r0, r1\n\tcontext.gas_left\tr2\n\tadd\tr3, r0, stack-[3]\n\tsub.s!\t@CPI19_3[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI19_5[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tstack-[3], r0, r3\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB19_1\n\tld\tr1, r1\n\tsload\tr1, r1\n\tand!\t@CPI19_1[0], r1, r1\n\tjump.ne\t@.BB19_10\n\tadd\t1, r0, r1\n\tadd\tr1, r0, stack-[2]\n\tst.1\t0, r1\n\tst.1\t32, r0\n\tadd\t@CPI19_3[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI19_3[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI19_5[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tstack-[3], r0, r3\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB19_1\n\tld\tr1, r1\n\tsload\tr1, r1\n\tadd\tr1, r0, stack-[1]\n\tst.1\t0, r3\n\tst.1\t32, r0\n\tadd\t@CPI19_3[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI19_3[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI19_5[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB19_1\n\tadd\tstack-[1], r0, r2\n\tand\t@CPI19_1[0], r2, r2\n\tld\tr1, r1\n\tsload\tr1, r3\n\tand\t@CPI19_7[0], r3, r3\n\tor\tr3, r2, r2\n\tsstore\tr1, r2\n\tadd\tstack-[2], r0, r1\n\tst.1\t0, r1\n\tst.1\t32, r0\n\tadd\t@CPI19_3[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI19_3[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI19_5[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tstack-[3], r0, r3\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB19_1\n\tld\tr1, r1\n\tsload\tr1, r2\n\tand\t@CPI19_7[0], r2, r2\n\tor\tr2, r3, r2\n\tsstore\tr1, r2\n\tld.1\t64, r1\n\tst.1\tr1, r3\n\tadd\t@CPI19_3[0], r0, r2\n\tcontext.gas_left\tr3\n\tsub.s!\t@CPI19_3[0], r3, r4\n\tadd.ge\tr2, r0, r3\n\tsub.s!\t@CPI19_3[0], r1, r4\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r3, r2\n\tor\tr2, r1, r1\n\tor\t@CPI19_8[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t1, r0, r3\n\tadd\t@CPI19_9[0], r0, r4\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB19_1\n\tadd\tr0, r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB19_10:\n\tld.1\t64, r1\n\tadd\t@CPI19_6[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tst.1\tr2, r3\n\tadd\t@CPI19_3[0], r0, r2\n\tsub.s!\t@CPI19_3[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI19_4[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end19:\n\nexternal_fun_execTransaction_S6W:\n.func_begin20:\n\tnop\tstack+=[2]\n\tadd\tstack[@calldatasize], r0, r2\n\tsub.s\t4, r2, r1\n\tadd\t@CPI20_0[0], r0, r3\n\tsub.s!\t223, r1, r4\n\tadd\t0, r0, r4\n\tadd.gt\tr3, r0, r4\n\tand\t@CPI20_0[0], r1, r1\n\tsub.s!\t0, r1, r5\n\tadd.ge\t0, r0, r3\n\tsub.s!\t@CPI20_0[0], r1, r1\n\tadd\tr4, r0, r1\n\tadd.eq\tr3, r0, r1\n\tsub.s!\t0, r1, r1\n\tjump.eq\t@.BB20_1\n\tadd\t4, r0, r1\n\tptr.add\tstack[@ptr_calldata], r1, r1\n\tld\tr1, r1\n\tsub.s!\t@CPI20_1[0], r1, r3\n\tjump.gt\t@.BB20_1\n\tadd\t4, r1, r3\n\tsub\tr2, r3, r4\n\tadd\t@CPI20_0[0], r0, r5\n\tsub.s!\t160, r4, r6\n\tadd\t0, r0, r6\n\tadd.lt\tr5, r0, r6\n\tand\t@CPI20_0[0], r4, r4\n\tsub.s!\t0, r4, r7\n\tadd.le\t0, r0, r5\n\tsub.s!\t@CPI20_0[0], r4, r4\n\tadd\tr6, r0, r4\n\tadd.eq\tr5, r0, r4\n\tsub.s!\t0, r4, r4\n\tjump.ne\t@.BB20_1\n\tld.1\t64, r11\n\tsub.s!\t@CPI20_2[0], r11, r4\n\tjump.lt\t@.BB20_6\n.BB20_5:\n\tadd\t@CPI20_7[0], r0, r1\n\tst.1\t0, r1\n\tadd\t65, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI20_8[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB20_6:\n\tadd\t160, r11, r4\n\tst.1\t64, r4\n\tptr.add\tstack[@ptr_calldata], r3, r4\n\tld\tr4, r4\n\tsub.s!\t@CPI20_3[0], r4, r5\n\tjump.gt\t@.BB20_1\n\tst.1.inc\tr11, r4, r4\n\tadd\t36, r1, r5\n\tptr.add\tstack[@ptr_calldata], r5, r5\n\tld\tr5, r5\n\tsub.s!\t1, r5, r6\n\tjump.gt\t@.BB20_1\n\tst.1\tr4, r5\n\tadd\t68, r1, r4\n\tptr.add\tstack[@ptr_calldata], r4, r4\n\tld\tr4, r4\n\tadd\t64, r11, r5\n\tst.1\tr5, r4\n\tadd\t100, r1, r5\n\tptr.add\tstack[@ptr_calldata], r0, r4\n\tptr.add\tr4, r5, r5\n\tld\tr5, r5\n\tsub.s!\t@CPI20_1[0], r5, r6\n\tjump.gt\t@.BB20_1\n\tadd\tr5, r3, r5\n\tadd\t31, r5, r3\n\tadd\t@CPI20_0[0], r0, r6\n\tsub!\tr3, r2, r7\n\tadd\t0, r0, r7\n\tadd.ge\tr6, r0, r7\n\tand\t@CPI20_0[0], r3, r3\n\tand\t@CPI20_0[0], r2, r8\n\tsub!\tr3, r8, r9\n\tadd.ge\t0, r0, r6\n\txor\tr3, r8, r3\n\tsub.s!\t@CPI20_0[0], r3, r3\n\tadd\tr7, r0, r3\n\tadd.eq\tr6, r0, r3\n\tsub.s!\t0, r3, r3\n\tjump.ne\t@.BB20_1\n\tptr.add\tr4, r5, r3\n\tld\tr3, r3\n\tsub.s!\t@CPI20_1[0], r3, r4\n\tjump.gt\t@.BB20_5\n\tadd\t63, r3, r4\n\tsub.s\t32, r0, r6\n\tand\tr4, r6, r6\n\tld.1\t64, r4\n\tadd\tr4, r6, r6\n\tsub!\tr6, r4, r7\n\tadd\t0, r0, r7\n\tadd.lt\t1, r0, r7\n\tsub.s!\t@CPI20_1[0], r6, r8\n\tjump.gt\t@.BB20_5\n\tand!\t1, r7, r7\n\tjump.ne\t@.BB20_5\n\tadd\t32, r5, r7\n\tst.1\t64, r6\n\tst.1.inc\tr4, r3, r5\n\tadd\tr3, r7, r6\n\tsub!\tr6, r2, r2\n\tjump.gt\t@.BB20_1\n\tand\t31, r3, r2\n\tptr.add\tstack[@ptr_calldata], r7, r6\n\tshr.s!\t5, r3, r7\n\tjump.eq\t@.BB20_24\n\tadd\tr0, r0, r8\n.BB20_16:\n\tshl.s\t5, r8, r9\n\tadd\tr5, r9, r10\n\tptr.add\tr6, r9, r9\n\tld\tr9, r9\n\tst.1\tr10, r9\n\tadd\t1, r8, r8\n\tsub!\tr8, r7, r9\n\tjump.lt\t@.BB20_16\n.BB20_24:\n\tsub.s!\t0, r2, r8\n\tjump.eq\t@.BB20_18\n\tshl.s\t5, r7, r7\n\tptr.add\tr6, r7, r6\n\tadd\tr5, r7, r7\n\tshl.s\t3, r2, r2\n\tld.1\tr7, r8\n\tshl\tr8, r2, r8\n\tshr\tr8, r2, r8\n\tld\tr6, r6\n\tsub\t256, r2, r2\n\tshr\tr6, r2, r6\n\tshl\tr6, r2, r2\n\tor\tr2, r8, r2\n\tst.1\tr7, r2\n.BB20_18:\n\tadd\tr5, r3, r2\n\tst.1\tr2, r0\n\tadd\t96, r11, r2\n\tst.1\tr2, r4\n\tadd\t132, r1, r1\n\tptr.add\tstack[@ptr_calldata], r1, r1\n\tld\tr1, r1\n\tadd\t128, r11, r2\n\tst.1\tr2, r1\n\tsub.s\t36, r0, r1\n\tadd\tstack[@calldatasize], r1, r1\n\tadd\t@CPI20_0[0], r0, r2\n\tsub.s!\t160, r1, r3\n\tadd\t0, r0, r3\n\tadd.lt\tr2, r0, r3\n\tand\t@CPI20_0[0], r1, r1\n\tsub.s!\t0, r1, r4\n\tadd.le\t0, r0, r2\n\tsub.s!\t@CPI20_0[0], r1, r1\n\tadd\tr3, r0, r1\n\tadd.eq\tr2, r0, r1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB20_1\n\tld.1\t64, r3\n\tsub.s!\t@CPI20_4[0], r3, r1\n\tjump.gt\t@.BB20_5\n\tadd\t160, r3, r1\n\tst.1\t64, r1\n\tadd\t36, r0, r1\n\tptr.add\tstack[@ptr_calldata], r1, r1\n\tld\tr1, r1\n\tst.1.inc\tr3, r1, r1\n\tadd\t68, r0, r2\n\tptr.add\tstack[@ptr_calldata], r2, r2\n\tld\tr2, r2\n\tst.1\tr1, r2\n\tadd\t64, r3, r1\n\tadd\t100, r0, r2\n\tptr.add\tstack[@ptr_calldata], r2, r2\n\tld\tr2, r2\n\tst.1\tr1, r2\n\tadd\t132, r0, r1\n\tptr.add\tstack[@ptr_calldata], r1, r1\n\tld\tr1, r1\n\tsub.s!\t@CPI20_3[0], r1, r2\n\tjump.gt\t@.BB20_1\n\tadd\t96, r3, r2\n\tst.1\tr2, r1\n\tadd\t164, r0, r1\n\tptr.add\tstack[@ptr_calldata], r1, r1\n\tld\tr1, r1\n\tsub.s!\t@CPI20_3[0], r1, r2\n\tjump.gt\t@.BB20_1\n\tadd\t128, r3, r2\n\tst.1\tr2, r1\n\tadd\t196, r0, r1\n\tptr.add\tstack[@ptr_calldata], r1, r1\n\tld\tr1, r1\n\tsub.s!\t@CPI20_1[0], r1, r2\n\tjump.le\t@.BB20_23\n.BB20_1:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB20_23:\n\tadd\tstack[@calldatasize], r0, r2\n\tadd\t4, r1, r1\n\tadd\tr11, r0, stack-[1]\n\tadd\tr3, r0, stack-[2]\n\tnear_call\tr0, @abi_decode_bytes, @DEFAULT_UNWIND\n\tadd\tr1, r0, r3\n\tadd\tstack-[1], r0, r1\n\tadd\tstack-[2], r0, r2\n\tnear_call\tr0, @modifier_nonReentrant, @DEFAULT_UNWIND\n\tsub.s!\t0, r1, r1\n\tadd\t0, r0, r1\n\tadd.ne\t1, r0, r1\n\tld.1\t64, r2\n\tst.1\tr2, r1\n\tadd\t@CPI20_5[0], r0, r1\n\tsub.s!\t@CPI20_5[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI20_6[0], r1, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.func_end20:\n\nexternal_fun_handlePaymentRevert:\n.func_begin21:\n\tnop\tstack+=[6]\n\tcontext.get_context_u128\tr1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB21_1\n\tsub.s\t4, r0, r1\n\tadd\tstack[@calldatasize], r1, r1\n\tadd\t@CPI21_0[0], r0, r2\n\tsub.s!\t192, r1, r3\n\tadd\t0, r0, r3\n\tadd.lt\tr2, r0, r3\n\tand\t@CPI21_0[0], r1, r1\n\tsub.s!\t0, r1, r4\n\tadd.le\t0, r0, r2\n\tsub.s!\t@CPI21_0[0], r1, r1\n\tadd\tr3, r0, r1\n\tadd.eq\tr2, r0, r1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB21_1\n\tptr.add\tstack[@ptr_calldata], r0, r1\n\tptr.add.s\t100, r1, r2\n\tld\tr2, r6\n\tptr.add.s\t68, r1, r2\n\tld\tr2, r3\n\tptr.add.s\t36, r1, r2\n\tld\tr2, r8\n\tptr.add.s\t4, r1, r2\n\tld\tr2, r7\n\tptr.add.s\t132, r1, r2\n\tld\tr2, r5\n\tsub.s!\t@CPI21_1[0], r5, r2\n\tjump.gt\t@.BB21_1\n\tptr.add.s\t164, r1, r1\n\tld\tr1, r4\n\tsub.s!\t@CPI21_1[0], r4, r1\n\tjump.le\t@.BB21_5\n.BB21_1:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB21_5:\n\tsub.s!\t0, r6, r1\n\tjump.ne\t@.BB21_7\n\tld.1\t64, r1\n\tadd\t68, r1, r2\n\tadd\t@CPI21_17[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t27, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI21_13[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI21_3[0], r0, r2\n\tsub.s!\t@CPI21_3[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI21_14[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB21_7:\n\tcontext.gas_left\tr1\n\tadd\tr1, r0, stack-[3]\n\tsub.s!\t0, r4, r1\n\tjump.ne\t@.BB21_8\n\tadd\t@CPI21_2[0], r0, r1\n\tst.2\t0, r1\n\tadd\t@CPI21_3[0], r0, r1\n\tcontext.gas_left\tr2\n\tadd\tr3, r0, stack-[6]\n\tsub.s!\t@CPI21_3[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI21_4[0], r1, r1\n\tadd\t32779, r0, r2\n\tadd\tr5, r0, stack-[5]\n\tadd\tr6, r0, stack-[4]\n\tadd\tr7, r0, stack-[2]\n\tadd\tr8, r0, stack-[1]\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tstack-[1], r0, r8\n\tadd\tstack-[2], r0, r7\n\tadd\tstack-[4], r0, r6\n\tadd\tstack-[6], r0, r3\n\tadd\tstack-[5], r0, r5\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB21_1\n\tld\tr1, r4\n.BB21_8:\n\tadd\tr8, r7, r2\n\tsub.s!\t0, r5, r1\n\tjump.ne\t@.BB21_12\n\tsub!\tr2, r7, r1\n\tjump.lt\t@.BB21_13\n\tadd\tr2, r0, stack-[5]\n\tadd\t@CPI21_15[0], r0, r1\n\tst.2\t0, r1\n\tadd\t@CPI21_3[0], r0, r1\n\tcontext.gas_left\tr2\n\tadd\tr3, r0, stack-[6]\n\tsub.s!\t@CPI21_3[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI21_4[0], r1, r1\n\tadd\t32779, r0, r2\n\tadd\tr4, r0, stack-[2]\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tstack-[6], r0, r5\n\tadd\tstack-[2], r0, r4\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB21_1\n\tld\tr1, r1\n\tsub!\tr5, r1, r1\n\tjump.lt\t@.BB21_38\n\tadd\t@CPI21_15[0], r0, r1\n\tst.2\t0, r1\n\tadd\t@CPI21_3[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI21_3[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI21_4[0], r1, r1\n\tadd\t32779, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tstack-[2], r0, r4\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB21_1\n\tld\tr1, r5\n.BB21_38:\n\tadd\tstack-[5], r0, r2\n\tmul\tr5, r2, r3, r1\n\tsub.s!\t0, r2, r1\n\tjump.ne\t@.BB21_39\n\tcontext.gas_left\tr1\n\tsub.s!\t4, r4, r2\n\tjump.eq\t@.BB21_11\n\tjump\t@.BB21_46\n.BB21_12:\n\tsub!\tr2, r7, r1\n\tjump.ge\t@.BB21_14\n.BB21_13:\n\tadd\t@CPI21_10[0], r0, r1\n\tst.1\t0, r1\n\tadd\t17, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI21_11[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB21_14:\n\tmul\tr3, r2, r7, r1\n\tsub.s!\t0, r2, r1\n\tjump.eq\t@.BB21_16\n\tdiv\tr7, r2, r1, r2\n\tsub!\tr1, r3, r1\n\tjump.ne\t@.BB21_13\n.BB21_16:\n\tadd\tr7, r0, stack-[6]\n\tadd\t@CPI21_5[0], r0, r1\n\tst.2\t0, r1\n\tst.2\t4, r5\n\tadd\t@CPI21_3[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI21_3[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI21_6[0], r1, r1\n\tadd\t32770, r0, r2\n\tadd\tr4, r0, stack-[2]\n\tadd\tr5, r0, stack-[5]\n\tadd\tr6, r0, stack-[4]\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tstack-[4], r0, r4\n\tadd\tstack-[5], r0, r7\n\tadd\tstack-[2], r0, r3\n\tand\t@CPI21_1[0], r3, r5\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB21_1\n\tld.1\t64, r2\n\tld\tr1, r1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB21_19\n\tadd\t68, r2, r1\n\tadd\t@CPI21_12[0], r0, r3\n\tst.1\tr1, r3\n\tadd\t36, r2, r1\n\tadd\t28, r0, r3\n\tst.1\tr1, r3\n\tadd\t@CPI21_13[0], r0, r1\n\tst.1\tr2, r1\n\tadd\t4, r2, r1\n\tadd\t32, r0, r3\n\tst.1\tr1, r3\n\tadd\t@CPI21_3[0], r0, r1\n\tsub.s!\t@CPI21_3[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI21_14[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB21_39:\n\tdiv\tr3, r2, r1, r2\n\tsub!\tr1, r5, r1\n\tjump.ne\t@.BB21_13\n\tcontext.gas_left\tr1\n\tsub.s!\t4, r4, r2\n\tjump.eq\t@.BB21_11\n\tsub.s!\t0, r3, r2\n\tjump.ne\t@.BB21_47\n.BB21_46:\n\tadd\tr3, r0, stack-[6]\n\tadd\t@CPI21_3[0], r0, r2\n\tsub.s!\t@CPI21_3[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tadd\tr4, r0, r2\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n.BB21_45:\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tshr.s\t96, r1, r1\n\tand\t@CPI21_3[0], r1, stack[@returndatasize]\n\tand!\t1, r2, r1\n\tadd\tstack-[2], r0, r2\n\tadd\tstack-[6], r0, r3\n\tjump.ne\t@.BB21_11\n\tld.1\t64, r4\n\tadd\tr4, r0, stack-[5]\n\tadd\t@CPI21_9[0], r0, r1\n\tst.1\tr4, r1\n\tadd\t4, r4, r1\n\tnear_call\tr0, @abi_encode_address_address_payable_uint256_13235, @DEFAULT_UNWIND\n\tadd\tstack-[5], r0, r4\n\tsub\tr1, r4, r1\n\tadd\t@CPI21_3[0], r0, r2\n\tsub.s!\t@CPI21_3[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tsub.s!\t@CPI21_3[0], r4, r3\n\tadd.lt\tr4, r0, r2\n\tshl.s\t64, r2, r2\n\tshl.s\t96, r1, r1\n\tor\tr1, r2, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB21_19:\n\tadd\tstack-[6], r0, r1\n\tdiv\tr1, r4, r8, r1\n\tadd\t68, r2, r1\n\tst.1\tr1, r8\n\tadd\t32, r2, r1\n\tadd\t@CPI21_7[0], r0, r4\n\tst.1\tr1, r4\n\tadd\t36, r2, r4\n\tst.1\tr4, r5\n\tadd\t68, r0, r4\n\tst.1\tr2, r4\n\tsub.s!\t@CPI21_8[0], r2, r4\n\tjump.lt\t@.BB21_21\n\tadd\t@CPI21_10[0], r0, r1\n\tst.1\t0, r1\n\tadd\t65, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI21_11[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB21_21:\n\tadd\t128, r2, r4\n\tst.1\t64, r4\n\tld.1\tr2, r6\n\tcontext.gas_left\tr2\n\tsub.s!\t4, r7, r4\n\tjump.ne\t@.BB21_25\n\tadd\tr0, r0, r2\n.BB21_23:\n\tshl.s\t5, r2, r5\n\tadd\tr1, r5, r4\n\tld.1\tr4, r4\n\tst.1\tr5, r4\n\tadd!\t1, r2, r2\n\tadd\t0, r0, r4\n\tadd.eq\t1, r0, r4\n\tand!\t1, r4, r4\n\tjump.ne\t@.BB21_23\n\tadd\t1, r0, r2\n\tadd\tstack[@returndatasize], r0, r9\n\tjump\t@.BB21_30\n.BB21_25:\n\tadd\tr8, r0, stack-[6]\n\tadd\t@CPI21_3[0], r0, r4\n\tsub.s!\t@CPI21_3[0], r1, r5\n\tadd.ge\tr4, r0, r1\n\tshl.s\t64, r1, r1\n\tsub.s!\t@CPI21_3[0], r6, r5\n\tadd\tr4, r0, r3\n\tadd.lt\tr6, r0, r3\n\tshl.s\t96, r3, r3\n\tor\tr3, r1, r1\n\tsub.s\t10000, r2, r2\n\tsub.s!\t@CPI21_3[0], r2, r3\n\tadd.ge\tr4, r0, r2\n\tshl.s\t192, r2, r2\n\tor\tr2, r1, r1\n\tadd\tr7, r0, r2\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI21_3[0], r3, r9\n\tsub.s!\t32, r9, r4\n\tadd\t32, r0, r4\n\tadd.lt\tr9, r0, r4\n\tand\t31, r4, r5\n\tshr.s!\t5, r4, r4\n\tjump.eq\t@.BB21_49\n\tadd\tr0, r0, r6\n.BB21_27:\n\tshl.s\t5, r6, r7\n\tptr.add\tr1, r7, r8\n\tld\tr8, r8\n\tst.1\tr7, r8\n\tadd\t1, r6, r6\n\tsub!\tr6, r4, r7\n\tjump.lt\t@.BB21_27\n.BB21_49:\n\tsub.s!\t0, r5, r6\n\tjump.eq\t@.BB21_29\n\tshl.s\t3, r5, r5\n\tshl.s\t5, r4, r4\n\tld.1\tr4, r6\n\tshl\tr6, r5, r6\n\tshr\tr6, r5, r6\n\tptr.add\tr1, r4, r7\n\tld\tr7, r7\n\tsub\t256, r5, r5\n\tshr\tr7, r5, r7\n\tshl\tr7, r5, r5\n\tor\tr5, r6, r5\n\tst.1\tr4, r5\n.BB21_29:\n\tand\t1, r2, r2\n\tadd\tr9, r0, stack[@returndatasize]\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tadd\tstack-[2], r0, r3\n\tadd\tstack-[5], r0, r7\n\tadd\tstack-[6], r0, r8\n.BB21_30:\n\tsub.s!\t0, r9, r1\n\tjump.eq\t@.BB21_33\n\tsub.s!\t32, r9, r1\n\tjump.ne\t@.BB21_34\n\tld.1\t0, r1\n\tsub.s!\t0, r1, r1\n\tadd\t0, r0, r1\n\tadd.ne\t1, r0, r1\n\tsub.s!\t0, r2, r2\n\tadd\t0, r0, r2\n\tadd.ne\t1, r0, r2\n\tand\tr2, r1, r1\n\tand\t1, r1, r2\n.BB21_33:\n\tsub.s!\t0, r2, r1\n\tjump.ne\t@.BB21_11\n.BB21_34:\n\tld.1\t64, r2\n\tadd\tr2, r0, stack-[6]\n\tadd\t@CPI21_9[0], r0, r1\n\tst.1\tr2, r1\n\tadd\t4, r2, r1\n\tadd\tr7, r0, r2\n\tadd\tr8, r0, r4\n\tnear_call\tr0, @abi_encode_address_address_payable_uint256, @DEFAULT_UNWIND\n\tadd\tstack-[6], r0, r4\n\tsub\tr1, r4, r1\n\tadd\t@CPI21_3[0], r0, r2\n\tsub.s!\t@CPI21_3[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tsub.s!\t@CPI21_3[0], r4, r3\n\tadd.lt\tr4, r0, r2\n\tshl.s\t64, r2, r2\n\tshl.s\t96, r1, r1\n\tor\tr1, r2, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB21_11:\n\tcontext.gas_left\tr1\n\tadd\tstack-[3], r0, r2\n\tsub\tr2, r1, r3\n\tld.1\t64, r1\n\tadd\tr1, r0, stack-[6]\n\tadd\t32, r1, r2\n\tst.1\tr2, r3\n\tadd\t32, r0, r2\n\tst.1\tr1, r2\n\tadd\t64, r0, r2\n\tnear_call\tr0, @finalize_allocation, @DEFAULT_UNWIND\n\tadd\t@CPI21_13[0], r0, r1\n\tld.1\t64, r2\n\tadd\tr2, r0, stack-[5]\n\tst.1\tr2, r1\n\tadd\t4, r2, r1\n\tadd\tstack-[6], r0, r2\n\tnear_call\tr0, @abi_encode_bytes, @DEFAULT_UNWIND\n\tadd\tstack-[5], r0, r4\n\tsub\tr1, r4, r1\n\tadd\t@CPI21_3[0], r0, r2\n\tsub.s!\t@CPI21_3[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tsub.s!\t@CPI21_3[0], r4, r3\n\tadd.lt\tr4, r0, r2\n\tshl.s\t64, r2, r2\n\tshl.s\t96, r1, r1\n\tor\tr1, r2, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB21_47:\n\tadd\t@CPI21_3[0], r0, r2\n\tsub.s!\t@CPI21_3[0], r1, r5\n\tadd.ge\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI21_16[0], r1, r1\n\tadd\t32777, r0, r2\n\tadd\tr3, r0, stack-[6]\n\tadd\tr0, r0, r5\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tjump\t@.BB21_45\n.func_end21:\n\nexternal_fun_transfer:\n.func_begin22:\n\tnop\tstack+=[3]\n\tcontext.get_context_u128\tr1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB22_1\n\tsub.s\t4, r0, r1\n\tadd\tstack[@calldatasize], r1, r1\n\tadd\t@CPI22_0[0], r0, r2\n\tsub.s!\t64, r1, r3\n\tadd\t0, r0, r3\n\tadd.lt\tr2, r0, r3\n\tand\t@CPI22_0[0], r1, r1\n\tsub.s!\t0, r1, r4\n\tadd.le\t0, r0, r2\n\tsub.s!\t@CPI22_0[0], r1, r1\n\tadd\tr3, r0, r1\n\tadd.eq\tr2, r0, r1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB22_1\n\tptr.add\tstack[@ptr_calldata], r0, r1\n\tptr.add.s\t4, r1, r2\n\tld\tr2, r4\n\tsub.s!\t@CPI22_1[0], r4, r2\n\tjump.le\t@.BB22_4\n.BB22_1:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB22_4:\n\tptr.add.s\t36, r1, r1\n\tld\tr1, r3\n\tadd\t50, r0, r1\n\tsload\tr1, r1\n\tand\t@CPI22_1[0], r1, r2\n\tcontext.caller\tr1\n\tsub!\tr1, r2, r2\n\tjump.ne\t@.BB22_5\n\tsub.s!\t0, r4, r1\n\tjump.ne\t@.BB22_8\n\tld.1\t64, r1\n\tadd\t@CPI22_7[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t@CPI22_3[0], r0, r2\n\tsub.s!\t@CPI22_3[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI22_8[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB22_5:\n\tld.1\t64, r2\n\tadd\t@CPI22_2[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t4, r2, r3\n\tst.1\tr3, r1\n\tadd\t@CPI22_3[0], r0, r1\n\tsub.s!\t@CPI22_3[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI22_4[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB22_8:\n\tcontext.gas_left\tr1\n\tsub.s!\t4, r4, r2\n\tjump.eq\t@.BB22_14\n\tadd\t@CPI22_3[0], r0, r2\n\tsub.s!\t@CPI22_3[0], r1, r5\n\tadd.ge\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tsub.s!\t0, r3, r2\n\tadd\tr4, r0, stack-[3]\n\tadd\tr3, r0, stack-[2]\n\tjump.ne\t@.BB22_12\n\tadd\tr4, r0, r2\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tjump\t@.BB22_10\n.BB22_12:\n\tor\t@CPI22_5[0], r1, r1\n\tadd\t32777, r0, r2\n\tadd\tr0, r0, r5\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n.BB22_10:\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tshr.s\t96, r1, r1\n\tand\t@CPI22_3[0], r1, stack[@returndatasize]\n\tand!\t1, r2, r1\n\tadd\tstack-[3], r0, r2\n\tadd\tstack-[2], r0, r3\n\tjump.eq\t@.BB22_13\n.BB22_14:\n\tadd\tr0, r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB22_13:\n\tld.1\t64, r4\n\tadd\tr4, r0, stack-[1]\n\tadd\t@CPI22_6[0], r0, r1\n\tst.1\tr4, r1\n\tadd\t4, r4, r1\n\tnear_call\tr0, @abi_encode_address_address_payable_uint256_13235, @DEFAULT_UNWIND\n\tadd\tstack-[1], r0, r4\n\tsub\tr1, r4, r1\n\tadd\t@CPI22_3[0], r0, r2\n\tsub.s!\t@CPI22_3[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tsub.s!\t@CPI22_3[0], r4, r3\n\tadd.lt\tr4, r0, r2\n\tshl.s\t64, r2, r2\n\tshl.s\t96, r1, r1\n\tor\tr1, r2, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end22:\n\nexternal_fun_pullTokens:\n.func_begin23:\n\tnop\tstack+=[3]\n\tcontext.get_context_u128\tr1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB23_1\n\tsub.s\t4, r0, r1\n\tadd\tstack[@calldatasize], r1, r1\n\tadd\t@CPI23_0[0], r0, r2\n\tsub.s!\t96, r1, r3\n\tadd\t0, r0, r3\n\tadd.lt\tr2, r0, r3\n\tand\t@CPI23_0[0], r1, r1\n\tsub.s!\t0, r1, r4\n\tadd.le\t0, r0, r2\n\tsub.s!\t@CPI23_0[0], r1, r1\n\tadd\tr3, r0, r1\n\tadd.eq\tr2, r0, r1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB23_1\n\tptr.add\tstack[@ptr_calldata], r0, r1\n\tptr.add.s\t4, r1, r2\n\tld\tr2, r4\n\tsub.s!\t@CPI23_1[0], r4, r2\n\tjump.gt\t@.BB23_1\n\tptr.add.s\t36, r1, r2\n\tld\tr2, r5\n\tsub.s!\t@CPI23_1[0], r5, r2\n\tjump.le\t@.BB23_5\n.BB23_1:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB23_5:\n\tptr.add.s\t68, r1, r1\n\tld\tr1, r3\n\tadd\t50, r0, r1\n\tsload\tr1, r1\n\tand\t@CPI23_1[0], r1, r2\n\tcontext.caller\tr1\n\tsub!\tr1, r2, r2\n\tjump.ne\t@.BB23_6\n\tsub.s!\t0, r5, r1\n\tjump.ne\t@.BB23_9\n\tld.1\t64, r1\n\tadd\t@CPI23_15[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t@CPI23_3[0], r0, r2\n\tsub.s!\t@CPI23_3[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI23_16[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB23_6:\n\tld.1\t64, r2\n\tadd\t@CPI23_2[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t4, r2, r3\n\tst.1\tr3, r1\n\tadd\t@CPI23_3[0], r0, r1\n\tsub.s!\t@CPI23_3[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI23_4[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB23_9:\n\tsub.s!\t0, r4, r1\n\tjump.ne\t@.BB23_11\n\tld.1\t64, r1\n\tadd\t68, r1, r2\n\tadd\t@CPI23_14[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t29, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI23_13[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI23_3[0], r0, r2\n\tsub.s!\t@CPI23_3[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI23_10[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB23_11:\n\tadd\tr3, r0, stack-[1]\n\tadd\t@CPI23_5[0], r0, r1\n\tst.2\t0, r1\n\tst.2\t4, r4\n\tadd\t@CPI23_3[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI23_3[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI23_6[0], r1, r1\n\tadd\t32770, r0, r2\n\tadd\tr4, r0, stack-[3]\n\tadd\tr5, r0, stack-[2]\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tstack-[2], r0, r5\n\tadd\tstack-[3], r0, r6\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB23_1\n\tld.1\t64, r2\n\tld\tr1, r1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB23_14\n\tadd\t68, r2, r1\n\tadd\t@CPI23_12[0], r0, r3\n\tst.1\tr1, r3\n\tadd\t36, r2, r1\n\tadd\t28, r0, r3\n\tst.1\tr1, r3\n\tadd\t@CPI23_13[0], r0, r1\n\tst.1\tr2, r1\n\tadd\t4, r2, r1\n\tadd\t32, r0, r3\n\tst.1\tr1, r3\n\tadd\t@CPI23_3[0], r0, r1\n\tsub.s!\t@CPI23_3[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI23_10[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB23_14:\n\tadd\t68, r2, r1\n\tadd\tstack-[1], r0, r7\n\tst.1\tr1, r7\n\tadd\t32, r2, r1\n\tadd\t@CPI23_7[0], r0, r3\n\tst.1\tr1, r3\n\tadd\t36, r2, r3\n\tst.1\tr3, r5\n\tadd\t68, r0, r3\n\tst.1\tr2, r3\n\tsub.s!\t@CPI23_8[0], r2, r3\n\tjump.lt\t@.BB23_16\n\tadd\t@CPI23_11[0], r0, r1\n\tst.1\t0, r1\n\tadd\t65, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI23_4[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB23_16:\n\tadd\t128, r2, r3\n\tst.1\t64, r3\n\tld.1\tr2, r3\n\tcontext.gas_left\tr2\n\tsub.s!\t4, r6, r4\n\tjump.ne\t@.BB23_20\n\tadd\tr0, r0, r2\n.BB23_18:\n\tshl.s\t5, r2, r3\n\tadd\tr1, r3, r4\n\tld.1\tr4, r4\n\tst.1\tr3, r4\n\tadd!\t1, r2, r2\n\tadd\t0, r0, r3\n\tadd.eq\t1, r0, r3\n\tand!\t1, r3, r3\n\tjump.ne\t@.BB23_18\n\tadd\t1, r0, r2\n\tadd\tstack[@returndatasize], r0, r3\n\tjump\t@.BB23_25\n.BB23_20:\n\tadd\t@CPI23_3[0], r0, r4\n\tsub.s!\t@CPI23_3[0], r1, r5\n\tadd.ge\tr4, r0, r1\n\tshl.s\t64, r1, r1\n\tsub.s!\t@CPI23_3[0], r3, r5\n\tadd.ge\tr4, r0, r3\n\tshl.s\t96, r3, r3\n\tor\tr3, r1, r1\n\tsub.s\t10000, r2, r2\n\tsub.s!\t@CPI23_3[0], r2, r3\n\tadd.ge\tr4, r0, r2\n\tshl.s\t192, r2, r2\n\tor\tr2, r1, r1\n\tadd\tr6, r0, r2\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI23_3[0], r3, r3\n\tsub.s!\t32, r3, r4\n\tadd\t32, r0, r4\n\tadd.lt\tr3, r0, r4\n\tand\t31, r4, r5\n\tshr.s!\t5, r4, r4\n\tjump.eq\t@.BB23_31\n\tadd\tr0, r0, r6\n.BB23_22:\n\tshl.s\t5, r6, r7\n\tptr.add\tr1, r7, r8\n\tld\tr8, r8\n\tst.1\tr7, r8\n\tadd\t1, r6, r6\n\tsub!\tr6, r4, r7\n\tjump.lt\t@.BB23_22\n.BB23_31:\n\tsub.s!\t0, r5, r6\n\tjump.eq\t@.BB23_24\n\tshl.s\t3, r5, r5\n\tshl.s\t5, r4, r4\n\tld.1\tr4, r6\n\tshl\tr6, r5, r6\n\tshr\tr6, r5, r6\n\tptr.add\tr1, r4, r7\n\tld\tr7, r7\n\tsub\t256, r5, r5\n\tshr\tr7, r5, r7\n\tshl\tr7, r5, r5\n\tor\tr5, r6, r5\n\tst.1\tr4, r5\n.BB23_24:\n\tand\t1, r2, r2\n\tadd\tr3, r0, stack[@returndatasize]\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tadd\tstack-[3], r0, r6\n\tadd\tstack-[2], r0, r5\n\tadd\tstack-[1], r0, r7\n.BB23_25:\n\tsub.s!\t0, r3, r1\n\tjump.eq\t@.BB23_28\n\tsub.s!\t32, r3, r1\n\tjump.ne\t@.BB23_29\n\tld.1\t0, r1\n\tsub.s!\t0, r1, r1\n\tadd\t0, r0, r1\n\tadd.ne\t1, r0, r1\n\tsub.s!\t0, r2, r2\n\tadd\t0, r0, r2\n\tadd.ne\t1, r0, r2\n\tand\tr2, r1, r1\n\tand\t1, r1, r2\n.BB23_28:\n\tsub.s!\t0, r2, r1\n\tjump.ne\t@.BB23_30\n.BB23_29:\n\tld.1\t64, r1\n\tadd\t68, r1, r2\n\tst.1\tr2, r7\n\tadd\t36, r1, r2\n\tst.1\tr2, r5\n\tadd\t@CPI23_9[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tst.1\tr2, r6\n\tadd\t@CPI23_3[0], r0, r2\n\tsub.s!\t@CPI23_3[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI23_10[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB23_30:\n\tadd\tr0, r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.func_end23:\n\nexternal_fun_nonce:\n.func_begin24:\n\tnop\tstack+=[1]\n\tcontext.get_context_u128\tr1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB24_1\n\tsub.s\t4, r0, r1\n\tadd\tstack[@calldatasize], r1, r1\n\tadd\t@CPI24_0[0], r0, r2\n\tsub.s!\t0, r1, r3\n\tadd\t0, r0, r3\n\tadd.lt\tr2, r0, r3\n\tand\t@CPI24_0[0], r1, r1\n\tsub.s!\t0, r1, r4\n\tadd.le\t0, r0, r2\n\tsub.s!\t@CPI24_0[0], r1, r1\n\tadd\tr3, r0, r1\n\tadd.eq\tr2, r0, r1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB24_1\n\tld.1\t64, r3\n\tadd\t@CPI24_1[0], r0, r1\n\tst.1\tr3, r1\n\tadd\t4, r3, r1\n\tcontext.this\tr2\n\tst.1\tr1, r2\n\tadd\tr3, r0, stack-[1]\n\tadd\t36, r3, r1\n\tst.1\tr1, r0\n\tadd\t@CPI24_2[0], r0, r1\n\tst.2\t0, r1\n\tcontext.code_source\tr1\n\tst.2\t4, r1\n\tst.2\t36, r0\n\tadd\t@CPI24_3[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI24_3[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI24_4[0], r1, r1\n\tadd\t32773, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB24_1\n\tld\tr1, r2\n\tcontext.gas_left\tr1\n\tand\t@CPI24_5[0], r2, r2\n\tsub.s!\t4, r2, r3\n\tjump.ne\t@.BB24_6\n\tadd\tstack[@returndatasize], r0, r3\n\tsub.s!\t32, r3, r1\n\tadd\t32, r0, r4\n\tadd.lt\tr3, r0, r4\n\tadd\tstack-[1], r0, r10\n\tjump\t@.BB24_16\n.BB24_6:\n\tadd\t@CPI24_3[0], r0, r3\n\tsub.s!\t@CPI24_3[0], r1, r4\n\tadd.ge\tr3, r0, r1\n\tadd\tstack-[1], r0, r5\n\tsub.s!\t@CPI24_3[0], r5, r4\n\tadd.lt\tr5, r0, r3\n\tshl.s\t64, r3, r3\n\tshl.s\t192, r1, r1\n\tor\tr1, r3, r1\n\tor\t@CPI24_6[0], r1, r1\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tstack-[1], r0, r10\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI24_3[0], r3, r3\n\tsub.s!\t32, r3, r4\n\tadd\t32, r0, r4\n\tadd.lt\tr3, r0, r4\n\tand\t31, r4, r5\n\tshr.s!\t5, r4, r6\n\tjump.eq\t@.BB24_22\n\tadd\tr0, r0, r7\n.BB24_8:\n\tshl.s\t5, r7, r8\n\tadd\tr10, r8, r9\n\tptr.add\tr1, r8, r8\n\tld\tr8, r8\n\tst.1\tr9, r8\n\tadd\t1, r7, r7\n\tsub!\tr7, r6, r8\n\tjump.lt\t@.BB24_8\n.BB24_22:\n\tsub.s!\t0, r5, r7\n\tjump.eq\t@.BB24_10\n\tshl.s\t5, r6, r6\n\tptr.add\tr1, r6, r7\n\tadd\tr10, r6, r6\n\tshl.s\t3, r5, r5\n\tld.1\tr6, r8\n\tshl\tr8, r5, r8\n\tshr\tr8, r5, r8\n\tld\tr7, r7\n\tsub\t256, r5, r5\n\tshr\tr7, r5, r7\n\tshl\tr7, r5, r5\n\tor\tr5, r8, r5\n\tst.1\tr6, r5\n.BB24_10:\n\tadd\tr3, r0, stack[@returndatasize]\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB24_11\n.BB24_16:\n\tadd\t31, r4, r1\n\tand\t96, r1, r2\n\tadd\tr2, r10, r1\n\tsub!\tr1, r2, r2\n\tadd\t0, r0, r2\n\tadd.lt\t1, r0, r2\n\tsub.s!\t@CPI24_7[0], r1, r4\n\tjump.gt\t@.BB24_18\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB24_18\n\tst.1\t64, r1\n\tsub.s!\t32, r3, r2\n\tjump.ge\t@.BB24_20\n.BB24_1:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB24_18:\n\tadd\t@CPI24_9[0], r0, r1\n\tst.1\t0, r1\n\tadd\t65, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI24_10[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB24_11:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r3\n\tjump.eq\t@.BB24_21\n\tadd\tr0, r0, r5\n.BB24_13:\n\tshl.s\t5, r5, r6\n\tadd\tr2, r6, r7\n\tptr.add\tr1, r6, r6\n\tld\tr6, r6\n\tst.1\tr7, r6\n\tadd\t1, r5, r5\n\tsub!\tr5, r3, r6\n\tjump.lt\t@.BB24_13\n.BB24_21:\n\tsub.s!\t0, r4, r5\n\tjump.eq\t@.BB24_15\n\tshl.s\t5, r3, r3\n\tptr.add\tr1, r3, r1\n\tadd\tr2, r3, r3\n\tshl.s\t3, r4, r4\n\tld.1\tr3, r5\n\tshl\tr5, r4, r5\n\tshr\tr5, r4, r5\n\tld\tr1, r1\n\tsub\t256, r4, r4\n\tshr\tr1, r4, r1\n\tshl\tr1, r4, r1\n\tor\tr1, r5, r1\n\tst.1\tr3, r1\n.BB24_15:\n\tadd\t@CPI24_3[0], r0, r1\n\tadd\tstack[@returndatasize], r0, r3\n\tsub.s!\t@CPI24_3[0], r3, r4\n\tadd.ge\tr1, r0, r3\n\tsub.s!\t@CPI24_3[0], r2, r4\n\tadd.lt\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t96, r3, r2\n\tor\tr2, r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB24_20:\n\tadd\tstack-[1], r0, r2\n\tld.1\tr2, r2\n\tst.1\tr1, r2\n\tadd\t@CPI24_3[0], r0, r2\n\tsub.s!\t@CPI24_3[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI24_8[0], r1, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.func_end24:\n\nexternal_fun_getDeposit:\n.func_begin25:\n\tnop\tstack+=[1]\n\tcontext.get_context_u128\tr1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB25_1\n\tsub.s\t4, r0, r1\n\tadd\tstack[@calldatasize], r1, r1\n\tadd\t@CPI25_0[0], r0, r2\n\tsub.s!\t0, r1, r3\n\tadd\t0, r0, r3\n\tadd.lt\tr2, r0, r3\n\tand\t@CPI25_0[0], r1, r1\n\tsub.s!\t0, r1, r4\n\tadd.le\t0, r0, r2\n\tsub.s!\t@CPI25_0[0], r1, r1\n\tadd\tr3, r0, r1\n\tadd.eq\tr2, r0, r1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB25_1\n\tld.1\t64, r2\n\tadd\t@CPI25_1[0], r0, r1\n\tst.1\tr2, r1\n\tadd\tr2, r0, stack-[1]\n\tadd\t4, r2, r1\n\tcontext.this\tr2\n\tst.1\tr1, r2\n\tadd\t@CPI25_2[0], r0, r1\n\tst.2\t0, r1\n\tcontext.code_source\tr1\n\tst.2\t4, r1\n\tst.2\t36, r0\n\tadd\t@CPI25_3[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI25_3[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI25_4[0], r1, r1\n\tadd\t32773, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB25_1\n\tld\tr1, r2\n\tcontext.gas_left\tr1\n\tand\t@CPI25_5[0], r2, r2\n\tsub.s!\t4, r2, r3\n\tjump.ne\t@.BB25_6\n\tadd\tstack[@returndatasize], r0, r3\n\tsub.s!\t32, r3, r1\n\tadd\t32, r0, r4\n\tadd.lt\tr3, r0, r4\n\tadd\tstack-[1], r0, r10\n\tjump\t@.BB25_16\n.BB25_6:\n\tadd\t@CPI25_3[0], r0, r3\n\tsub.s!\t@CPI25_3[0], r1, r4\n\tadd.ge\tr3, r0, r1\n\tadd\tstack-[1], r0, r5\n\tsub.s!\t@CPI25_3[0], r5, r4\n\tadd.lt\tr5, r0, r3\n\tshl.s\t64, r3, r3\n\tshl.s\t192, r1, r1\n\tor\tr1, r3, r1\n\tor\t@CPI25_6[0], r1, r1\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tstack-[1], r0, r10\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI25_3[0], r3, r3\n\tsub.s!\t32, r3, r4\n\tadd\t32, r0, r4\n\tadd.lt\tr3, r0, r4\n\tand\t31, r4, r5\n\tshr.s!\t5, r4, r6\n\tjump.eq\t@.BB25_22\n\tadd\tr0, r0, r7\n.BB25_8:\n\tshl.s\t5, r7, r8\n\tadd\tr10, r8, r9\n\tptr.add\tr1, r8, r8\n\tld\tr8, r8\n\tst.1\tr9, r8\n\tadd\t1, r7, r7\n\tsub!\tr7, r6, r8\n\tjump.lt\t@.BB25_8\n.BB25_22:\n\tsub.s!\t0, r5, r7\n\tjump.eq\t@.BB25_10\n\tshl.s\t5, r6, r6\n\tptr.add\tr1, r6, r7\n\tadd\tr10, r6, r6\n\tshl.s\t3, r5, r5\n\tld.1\tr6, r8\n\tshl\tr8, r5, r8\n\tshr\tr8, r5, r8\n\tld\tr7, r7\n\tsub\t256, r5, r5\n\tshr\tr7, r5, r7\n\tshl\tr7, r5, r5\n\tor\tr5, r8, r5\n\tst.1\tr6, r5\n.BB25_10:\n\tadd\tr3, r0, stack[@returndatasize]\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB25_11\n.BB25_16:\n\tadd\t31, r4, r1\n\tand\t96, r1, r2\n\tadd\tr2, r10, r1\n\tsub!\tr1, r2, r2\n\tadd\t0, r0, r2\n\tadd.lt\t1, r0, r2\n\tsub.s!\t@CPI25_7[0], r1, r4\n\tjump.gt\t@.BB25_18\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB25_18\n\tst.1\t64, r1\n\tsub.s!\t32, r3, r2\n\tjump.ge\t@.BB25_20\n.BB25_1:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB25_18:\n\tadd\t@CPI25_9[0], r0, r1\n\tst.1\t0, r1\n\tadd\t65, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI25_6[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB25_11:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r3\n\tjump.eq\t@.BB25_21\n\tadd\tr0, r0, r5\n.BB25_13:\n\tshl.s\t5, r5, r6\n\tadd\tr2, r6, r7\n\tptr.add\tr1, r6, r6\n\tld\tr6, r6\n\tst.1\tr7, r6\n\tadd\t1, r5, r5\n\tsub!\tr5, r3, r6\n\tjump.lt\t@.BB25_13\n.BB25_21:\n\tsub.s!\t0, r4, r5\n\tjump.eq\t@.BB25_15\n\tshl.s\t5, r3, r3\n\tptr.add\tr1, r3, r1\n\tadd\tr2, r3, r3\n\tshl.s\t3, r4, r4\n\tld.1\tr3, r5\n\tshl\tr5, r4, r5\n\tshr\tr5, r4, r5\n\tld\tr1, r1\n\tsub\t256, r4, r4\n\tshr\tr1, r4, r1\n\tshl\tr1, r4, r1\n\tor\tr1, r5, r1\n\tst.1\tr3, r1\n.BB25_15:\n\tadd\t@CPI25_3[0], r0, r1\n\tadd\tstack[@returndatasize], r0, r3\n\tsub.s!\t@CPI25_3[0], r3, r4\n\tadd.ge\tr1, r0, r3\n\tsub.s!\t@CPI25_3[0], r2, r4\n\tadd.lt\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t96, r3, r2\n\tor\tr2, r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB25_20:\n\tadd\tstack-[1], r0, r2\n\tld.1\tr2, r2\n\tst.1\tr1, r2\n\tadd\t@CPI25_3[0], r0, r2\n\tsub.s!\t@CPI25_3[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI25_8[0], r1, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.func_end25:\n\nexternal_fun_requiredTxGas:\n.func_begin26:\n\tnop\tstack+=[6]\n\tcontext.get_context_u128\tr1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB26_1\n\tadd\tstack[@calldatasize], r0, r2\n\tsub.s\t4, r2, r1\n\tadd\t@CPI26_0[0], r0, r3\n\tsub.s!\t128, r1, r4\n\tadd\t0, r0, r4\n\tadd.lt\tr3, r0, r4\n\tand\t@CPI26_0[0], r1, r1\n\tsub.s!\t0, r1, r5\n\tadd.le\t0, r0, r3\n\tsub.s!\t@CPI26_0[0], r1, r1\n\tadd\tr4, r0, r1\n\tadd.eq\tr3, r0, r1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB26_1\n\tptr.add\tstack[@ptr_calldata], r0, r3\n\tptr.add.s\t4, r3, r1\n\tld\tr1, r9\n\tsub.s!\t@CPI26_1[0], r9, r1\n\tjump.gt\t@.BB26_1\n\tptr.add.s\t68, r3, r1\n\tld\tr1, r4\n\tsub.s!\t@CPI26_2[0], r4, r1\n\tjump.gt\t@.BB26_1\n\tadd\t35, r4, r1\n\tadd\t@CPI26_0[0], r0, r5\n\tsub!\tr1, r2, r6\n\tadd\t0, r0, r6\n\tadd.ge\tr5, r0, r6\n\tand\t@CPI26_0[0], r2, r7\n\tand\t@CPI26_0[0], r1, r1\n\tsub!\tr1, r7, r8\n\tadd.ge\t0, r0, r5\n\txor\tr1, r7, r1\n\tsub.s!\t@CPI26_0[0], r1, r1\n\tadd\tr6, r0, r1\n\tadd.eq\tr5, r0, r1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB26_1\n\tadd\t4, r4, r1\n\tptr.add\tr3, r1, r1\n\tld\tr1, r1\n\tsub.s!\t@CPI26_2[0], r1, r5\n\tjump.gt\t@.BB26_1\n\tadd\t36, r4, r4\n\tadd\tr1, r4, r5\n\tsub!\tr5, r2, r2\n\tjump.gt\t@.BB26_1\n\tptr.add.s\t100, r3, r2\n\tld\tr2, r10\n\tsub.s!\t1, r10, r2\n\tjump.gt\t@.BB26_1\n\tadd\t63, r1, r2\n\tsub.s\t32, r0, r3\n\tand\tr2, r3, r2\n\tcontext.gas_left\tr7\n\tcontext.gas_left\tr11\n\tld.1\t64, r12\n\tadd\tr12, r2, r2\n\tsub!\tr2, r12, r3\n\tadd\t0, r0, r3\n\tadd.lt\t1, r0, r3\n\tsub.s!\t@CPI26_2[0], r2, r6\n\tjump.gt\t@.BB26_9\n\tand!\t1, r3, r3\n\tjump.ne\t@.BB26_9\n\tadd\tr7, r0, stack-[6]\n\tadd\tstack[@calldatasize], r0, r3\n\tst.1\t64, r2\n\tst.1.inc\tr12, r1, r2\n\tsub!\tr5, r3, r3\n\tjump.gt\t@.BB26_1\n\tand\t31, r1, r3\n\tptr.add\tstack[@ptr_calldata], r4, r4\n\tshr.s!\t5, r1, r5\n\tjump.eq\t@.BB26_37\n\tadd\tr0, r0, r6\n.BB26_15:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr4, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB26_15\n.BB26_37:\n\tsub.s!\t0, r3, r6\n\tjump.eq\t@.BB26_17\n\tshl.s\t5, r5, r5\n\tptr.add\tr4, r5, r4\n\tadd\tr2, r5, r5\n\tshl.s\t3, r3, r3\n\tld.1\tr5, r6\n\tshl\tr6, r3, r6\n\tshr\tr6, r3, r6\n\tld\tr4, r4\n\tsub\t256, r3, r3\n\tshr\tr4, r3, r4\n\tshl\tr4, r3, r3\n\tor\tr3, r6, r3\n\tst.1\tr5, r3\n.BB26_17:\n\tadd\tr2, r1, r1\n\tst.1\tr1, r0\n\tadd\t36, r0, r1\n\tptr.add\tstack[@ptr_calldata], r1, r1\n\tld\tr1, r1\n\tadd\tr1, r0, stack-[2]\n\tsub.s!\t1, r10, r1\n\tadd\tr9, r0, stack-[5]\n\tadd\tr10, r0, stack-[4]\n\tadd\tr11, r0, stack-[3]\n\tjump.ne\t@.BB26_19\n\tsub.s!\t4, r9, r1\n\tjump.eq\t@.BB26_30\n\tadd\t@CPI26_3[0], r0, r1\n\tsub.s!\t@CPI26_3[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t64, r2, r2\n\tadd\tr12, r0, stack-[1]\n\tld.1\tr12, r3\n\tsub.s!\t@CPI26_3[0], r3, r4\n\tadd.ge\tr1, r0, r3\n\tshl.s\t96, r3, r3\n\tor\tr3, r2, r2\n\tsub.s!\t@CPI26_3[0], r11, r3\n\tadd.lt\tr11, r0, r1\n\tshl.s\t192, r1, r1\n\tor\tr2, r1, r1\n\tadd\tr9, r0, r2\n\tnear_call\tr0, @__delegatecall, @DEFAULT_UNWIND\n\tjump\t@.BB26_18\n.BB26_9:\n\tadd\t@CPI26_11[0], r0, r1\n\tst.1\t0, r1\n\tadd\t65, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI26_12[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB26_19:\n\tsub.s!\t4, r9, r1\n\tjump.eq\t@.BB26_30\n\tadd\t@CPI26_3[0], r0, r1\n\tsub.s!\t@CPI26_3[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t64, r2, r2\n\tadd\tr12, r0, stack-[1]\n\tld.1\tr12, r3\n\tsub.s!\t@CPI26_3[0], r3, r4\n\tadd.ge\tr1, r0, r3\n\tshl.s\t96, r3, r3\n\tor\tr3, r2, r2\n\tsub.s!\t@CPI26_3[0], r11, r3\n\tadd.lt\tr11, r0, r1\n\tshl.s\t192, r1, r1\n\tor\tr2, r1, r1\n\tadd\tstack-[2], r0, r3\n\tsub.s!\t0, r3, r2\n\tjump.ne\t@.BB26_22\n\tadd\tr9, r0, r2\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tjump\t@.BB26_18\n.BB26_22:\n\tor\t@CPI26_4[0], r1, r1\n\tadd\t32777, r0, r2\n\tadd\tr9, r0, r4\n\tadd\tr0, r0, r5\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n.BB26_18:\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tshr.s\t96, r1, r1\n\tand\t@CPI26_3[0], r1, stack[@returndatasize]\n\tand!\t1, r2, r1\n\tadd\tstack-[1], r0, r12\n\tjump.eq\t@.BB26_25\n.BB26_30:\n\tld.1\t64, r2\n\tld.1\tr12, r1\n\tsub.s!\t0, r1, r3\n\tjump.eq\t@.BB26_33\n\tadd\tr0, r0, r3\n.BB26_32:\n\tadd\tr3, r2, r4\n\tadd\t32, r3, r3\n\tadd\tr3, r12, r5\n\tld.1\tr5, r5\n\tst.1\tr4, r5\n\tsub!\tr3, r1, r4\n\tjump.lt\t@.BB26_32\n.BB26_33:\n\tadd\tr1, r2, r3\n\tst.1\tr3, r0\n\tadd\t@CPI26_3[0], r0, r3\n\tsub.s!\t@CPI26_3[0], r2, r4\n\tadd.ge\tr3, r0, r2\n\tshl.s\t64, r2, r2\n\tsub.s!\t@CPI26_3[0], r1, r4\n\tadd.ge\tr3, r0, r1\n\tshl.s\t96, r1, r1\n\tor\tr1, r2, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI26_3[0], r2, r4\n\tadd.ge\tr3, r0, r2\n\tshl.s\t192, r2, r2\n\tor\tr2, r1, r1\n\tor\t@CPI26_4[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tadd\tstack-[5], r0, r5\n\tadd\tstack-[4], r0, r3\n\tadd\tstack-[3], r0, r4\n\tjump.eq\t@.BB26_1\n\tld\tr1, r7\n\tld.1\t64, r1\n\tadd\t32, r1, r2\n\tst.1\tr2, r4\n\tst.1\tr1, r3\n\tadd\t@CPI26_3[0], r0, r2\n\tcontext.gas_left\tr3\n\tsub.s!\t@CPI26_3[0], r3, r4\n\tadd.ge\tr2, r0, r3\n\tsub.s!\t@CPI26_3[0], r1, r4\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r3, r2\n\tor\tr2, r1, r1\n\tor\t@CPI26_5[0], r1, r1\n\tand\t@CPI26_1[0], r5, r5\n\tadd\t32781, r0, r2\n\tadd\t4, r0, r3\n\tadd\t@CPI26_9[0], r0, r4\n\tadd\tstack-[2], r0, r6\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB26_1\n\tcontext.gas_left\tr1\n\tadd\tstack-[6], r0, r2\n\tsub\tr2, r1, r3\n\tld.1\t64, r1\n\tadd\tr1, r0, stack-[6]\n\tadd\t32, r1, r2\n\tst.1\tr2, r3\n\tadd\t32, r0, r2\n\tst.1\tr1, r2\n\tnear_call\tr0, @finalize_allocation_21860, @DEFAULT_UNWIND\n\tadd\t@CPI26_10[0], r0, r1\n\tld.1\t64, r2\n\tadd\tr2, r0, stack-[5]\n\tst.1\tr2, r1\n\tadd\t4, r2, r1\n\tadd\tstack-[6], r0, r2\n\tnear_call\tr0, @abi_encode_bytes, @DEFAULT_UNWIND\n\tadd\tstack-[5], r0, r4\n\tsub\tr1, r4, r1\n\tadd\t@CPI26_3[0], r0, r2\n\tsub.s!\t@CPI26_3[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tsub.s!\t@CPI26_3[0], r4, r3\n\tadd.lt\tr4, r0, r2\n\tshl.s\t64, r2, r2\n\tshl.s\t96, r1, r1\n\tor\tr1, r2, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB26_25:\n\tld.1\t64, r2\n\tld.1\tr12, r1\n\tsub.s!\t0, r1, r3\n\tjump.eq\t@.BB26_28\n\tadd\tr0, r0, r3\n.BB26_27:\n\tadd\tr3, r2, r4\n\tadd\t32, r3, r3\n\tadd\tr3, r12, r5\n\tld.1\tr5, r5\n\tst.1\tr4, r5\n\tsub!\tr3, r1, r4\n\tjump.lt\t@.BB26_27\n.BB26_28:\n\tadd\tr1, r2, r3\n\tst.1\tr3, r0\n\tadd\t@CPI26_3[0], r0, r3\n\tsub.s!\t@CPI26_3[0], r2, r4\n\tadd.ge\tr3, r0, r2\n\tshl.s\t64, r2, r2\n\tsub.s!\t@CPI26_3[0], r1, r4\n\tadd.ge\tr3, r0, r1\n\tshl.s\t96, r1, r1\n\tor\tr1, r2, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI26_3[0], r2, r4\n\tadd.ge\tr3, r0, r2\n\tshl.s\t192, r2, r2\n\tor\tr2, r1, r1\n\tor\t@CPI26_4[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tadd\tstack-[5], r0, r5\n\tadd\tstack-[4], r0, r3\n\tadd\tstack-[3], r0, r4\n\tjump.eq\t@.BB26_1\n\tld\tr1, r7\n\tld.1\t64, r1\n\tadd\t32, r1, r2\n\tst.1\tr2, r4\n\tst.1\tr1, r3\n\tadd\t@CPI26_3[0], r0, r2\n\tcontext.gas_left\tr3\n\tsub.s!\t@CPI26_3[0], r3, r4\n\tadd.ge\tr2, r0, r3\n\tsub.s!\t@CPI26_3[0], r1, r4\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r3, r2\n\tor\tr2, r1, r1\n\tor\t@CPI26_5[0], r1, r1\n\tand\t@CPI26_1[0], r5, r5\n\tadd\t32781, r0, r2\n\tadd\t4, r0, r3\n\tadd\t@CPI26_6[0], r0, r4\n\tadd\tstack-[2], r0, r6\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB26_1\n\tld.1\t64, r1\n\tadd\t@CPI26_7[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t@CPI26_3[0], r0, r2\n\tsub.s!\t@CPI26_3[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI26_8[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB26_1:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end26:\n\nabi_encode_array_address_dyn_address:\n.func_begin27:\n\tadd\t64, r0, r4\n\tst.1.inc\tr1, r4, r4\n\tld.1\tr2, r5\n\tadd\t64, r1, r6\n\tst.1\tr6, r5\n\tadd\t96, r1, r1\n\tsub.s!\t0, r5, r6\n\tjump.eq\t@.BB27_3\n\tadd\tr0, r0, r6\n.BB27_2:\n\tadd\t32, r2, r2\n\tld.1\tr2, r7\n\tand\t@CPI27_0[0], r7, r7\n\tst.1.inc\tr1, r7, r1\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB27_2\n.BB27_3:\n\tand\t@CPI27_0[0], r3, r2\n\tst.1\tr4, r2\n\tret\n.func_end27:\n\nexternal_fun_getModulesPaginated:\n.func_begin28:\n\tnop\tstack+=[5]\n\tcontext.get_context_u128\tr1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB28_1\n\tsub.s\t4, r0, r1\n\tadd\tstack[@calldatasize], r1, r1\n\tadd\t@CPI28_0[0], r0, r2\n\tsub.s!\t64, r1, r3\n\tadd\t0, r0, r3\n\tadd.lt\tr2, r0, r3\n\tand\t@CPI28_0[0], r1, r1\n\tsub.s!\t0, r1, r4\n\tadd.le\t0, r0, r2\n\tsub.s!\t@CPI28_0[0], r1, r1\n\tadd\tr3, r0, r1\n\tadd.eq\tr2, r0, r1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB28_1\n\tptr.add\tstack[@ptr_calldata], r0, r2\n\tptr.add.s\t4, r2, r1\n\tld\tr1, r1\n\tsub.s!\t@CPI28_1[0], r1, r3\n\tjump.le\t@.BB28_4\n.BB28_1:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB28_4:\n\tptr.add.s\t36, r2, r2\n\tld\tr2, r6\n\tsub.s!\t@CPI28_2[0], r6, r2\n\tjump.lt\t@.BB28_6\n.BB28_5:\n\tadd\t@CPI28_6[0], r0, r1\n\tst.1\t0, r1\n\tadd\t65, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI28_7[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB28_6:\n\tshl.s\t5, r6, r4\n\tadd\t63, r4, r2\n\tsub.s\t32, r0, r3\n\tand\tr2, r3, r2\n\tld.1\t64, r3\n\tadd\tr3, r2, r2\n\tadd\tr3, r0, stack-[4]\n\tsub!\tr2, r3, r3\n\tadd\t0, r0, r3\n\tadd.lt\t1, r0, r3\n\tsub.s!\t@CPI28_3[0], r2, r5\n\tjump.gt\t@.BB28_5\n\tand!\t1, r3, r3\n\tjump.ne\t@.BB28_5\n\tst.1\t64, r2\n\tadd\tr6, r0, stack-[3]\n\tadd\tstack-[4], r0, r2\n\tst.1.inc\tr2, r6, r8\n\tand\t31, r4, r2\n\tadd\tstack[@calldatasize], r0, r3\n\tptr.add\tstack[@ptr_calldata], r3, r3\n\tshr.s!\t5, r4, r4\n\tjump.eq\t@.BB28_22\n\tadd\tr0, r0, r5\n.BB28_10:\n\tshl.s\t5, r5, r6\n\tadd\tr8, r6, r7\n\tptr.add\tr3, r6, r6\n\tld\tr6, r6\n\tst.1\tr7, r6\n\tadd\t1, r5, r5\n\tsub!\tr5, r4, r6\n\tjump.lt\t@.BB28_10\n.BB28_22:\n\tsub.s!\t0, r2, r5\n\tjump.eq\t@.BB28_12\n\tshl.s\t5, r4, r4\n\tptr.add\tr3, r4, r3\n\tadd\tr8, r4, r4\n\tshl.s\t3, r2, r2\n\tld.1\tr4, r5\n\tshl\tr5, r2, r5\n\tshr\tr5, r2, r5\n\tld\tr3, r3\n\tsub\t256, r2, r2\n\tshr\tr3, r2, r3\n\tshl\tr3, r2, r2\n\tor\tr2, r5, r2\n\tst.1\tr4, r2\n.BB28_12:\n\tadd\tr8, r0, stack-[2]\n\tst.1\t0, r1\n\tst.1\t32, r0\n\tadd\t@CPI28_4[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI28_4[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI28_5[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB28_1\n\tld\tr1, r1\n\tsload\tr1, r1\n\tand\t@CPI28_1[0], r1, r3\n\tsub.s!\t2, r3, r1\n\tadd\tr0, r0, r4\n\tadd\tstack-[3], r0, r1\n\tjump.lt\t@.BB28_16\n\tsub.s!\t0, r1, r1\n\tadd\tr0, r0, r4\n\tjump.eq\t@.BB28_16\n\tadd\t32784, r0, r1\n\tadd\tr1, r0, stack-[1]\n\tadd\tr0, r0, r4\n.BB28_17:\n\tadd\tstack-[4], r0, r1\n\tld.1\tr1, r1\n\tsub!\tr1, r4, r1\n\tjump.le\t@.BB28_18\n\tadd\tr4, r0, stack-[5]\n\tshl.s\t5, r4, r1\n\tadd\tstack-[2], r0, r2\n\tadd\tr1, r2, r1\n\tst.1\tr1, r3\n\tst.1\t0, r3\n\tst.1\t32, r0\n\tadd\t@CPI28_4[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI28_4[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI28_5[0], r1, r1\n\tadd\tstack-[1], r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB28_1\n\tadd\tstack-[5], r0, r4\n\tadd\t1, r4, r4\n\tld\tr1, r1\n\tsload\tr1, r1\n\tand\t@CPI28_1[0], r1, r3\n\tsub.s!\t2, r3, r1\n\tadd\tstack-[3], r0, r1\n\tjump.lt\t@.BB28_16\n\tsub!\tr4, r1, r1\n\tjump.lt\t@.BB28_17\n.BB28_16:\n\tadd\tstack-[4], r0, r2\n\tst.1\tr2, r4\n\tld.1\t64, r1\n\tadd\tr1, r0, stack-[5]\n\tnear_call\tr0, @abi_encode_array_address_dyn_address, @DEFAULT_UNWIND\n\tadd\tstack-[5], r0, r4\n\tsub\tr1, r4, r1\n\tadd\t@CPI28_4[0], r0, r2\n\tsub.s!\t@CPI28_4[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tsub.s!\t@CPI28_4[0], r4, r3\n\tadd.lt\tr4, r0, r2\n\tshl.s\t64, r2, r2\n\tshl.s\t96, r1, r1\n\tor\tr1, r2, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB28_18:\n\tadd\t@CPI28_6[0], r0, r1\n\tst.1\t0, r1\n\tadd\t50, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI28_7[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end28:\n\nexternal_fun_disableModule:\n.func_begin29:\n\tnop\tstack+=[3]\n\tcontext.get_context_u128\tr1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB29_1\n\tsub.s\t4, r0, r1\n\tadd\tstack[@calldatasize], r1, r1\n\tadd\t@CPI29_0[0], r0, r2\n\tsub.s!\t64, r1, r3\n\tadd\t0, r0, r3\n\tadd.lt\tr2, r0, r3\n\tand\t@CPI29_0[0], r1, r1\n\tsub.s!\t0, r1, r4\n\tadd.le\t0, r0, r2\n\tsub.s!\t@CPI29_0[0], r1, r1\n\tadd\tr3, r0, r1\n\tadd.eq\tr2, r0, r1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB29_1\n\tptr.add\tstack[@ptr_calldata], r0, r1\n\tptr.add.s\t4, r1, r2\n\tld\tr2, r5\n\tsub.s!\t@CPI29_1[0], r5, r2\n\tjump.gt\t@.BB29_1\n\tptr.add.s\t36, r1, r1\n\tld\tr1, r4\n\tsub.s!\t@CPI29_1[0], r4, r1\n\tjump.le\t@.BB29_5\n.BB29_1:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB29_5:\n\tcontext.caller\tr1\n\tcontext.this\tr2\n\tsub!\tr1, r2, r2\n\tjump.ne\t@.BB29_6\n\tsub.s!\t1, r4, r1\n\tjump.gt\t@.BB29_9\n\tld.1\t64, r1\n\tadd\t@CPI29_10[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tst.1\tr2, r4\n\tadd\t@CPI29_3[0], r0, r2\n\tsub.s!\t@CPI29_3[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI29_4[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB29_6:\n\tld.1\t64, r2\n\tadd\t@CPI29_2[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t4, r2, r3\n\tst.1\tr3, r1\n\tadd\t@CPI29_3[0], r0, r1\n\tsub.s!\t@CPI29_3[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI29_4[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB29_9:\n\tst.1\t0, r5\n\tst.1\t32, r0\n\tadd\t@CPI29_3[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI29_3[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI29_5[0], r1, r1\n\tadd\t32784, r0, r2\n\tadd\tr4, r0, stack-[2]\n\tadd\tr5, r0, stack-[3]\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tstack-[3], r0, r4\n\tadd\tstack-[2], r0, r3\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB29_1\n\tld\tr1, r1\n\tsload\tr1, r1\n\tand\t@CPI29_1[0], r1, r1\n\tsub!\tr1, r3, r1\n\tjump.ne\t@.BB29_11\n\tst.1\t0, r3\n\tst.1\t32, r0\n\tadd\t@CPI29_3[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI29_3[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI29_5[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tstack-[3], r0, r3\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB29_1\n\tld\tr1, r1\n\tsload\tr1, r1\n\tadd\tr1, r0, stack-[1]\n\tst.1\t0, r3\n\tst.1\t32, r0\n\tadd\t@CPI29_3[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI29_3[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI29_5[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tstack-[2], r0, r4\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB29_1\n\tadd\tstack-[1], r0, r2\n\tand\t@CPI29_1[0], r2, r2\n\tld\tr1, r1\n\tsload\tr1, r3\n\tand\t@CPI29_7[0], r3, r3\n\tor\tr3, r2, r2\n\tsstore\tr1, r2\n\tst.1\t0, r4\n\tst.1\t32, r0\n\tadd\t@CPI29_3[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI29_3[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI29_5[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tstack-[2], r0, r3\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB29_1\n\tld\tr1, r1\n\tsload\tr1, r2\n\tand\t@CPI29_7[0], r2, r2\n\tsstore\tr1, r2\n\tld.1\t64, r1\n\tst.1\tr1, r3\n\tadd\t@CPI29_3[0], r0, r2\n\tcontext.gas_left\tr3\n\tsub.s!\t@CPI29_3[0], r3, r4\n\tadd.ge\tr2, r0, r3\n\tsub.s!\t@CPI29_3[0], r1, r4\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r3, r2\n\tor\tr2, r1, r1\n\tor\t@CPI29_8[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t1, r0, r3\n\tadd\t@CPI29_9[0], r0, r4\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB29_1\n\tadd\tr0, r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB29_11:\n\tadd\tr4, r0, r1\n\tnear_call\tr0, @mapping_index_access_mapping_address_address_of_address_13223, @DEFAULT_UNWIND\n\tsload\tr1, r1\n\tld.1\t64, r4\n\tadd\tr4, r0, stack-[1]\n\tadd\t@CPI29_6[0], r0, r2\n\tst.1\tr4, r2\n\tand\t@CPI29_1[0], r1, r3\n\tadd\t4, r4, r1\n\tadd\tstack-[2], r0, r2\n\tadd\tstack-[3], r0, r4\n\tnear_call\tr0, @abi_encode_address_address_address, @DEFAULT_UNWIND\n\tadd\tstack-[1], r0, r4\n\tsub\tr1, r4, r1\n\tadd\t@CPI29_3[0], r0, r2\n\tsub.s!\t@CPI29_3[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tsub.s!\t@CPI29_3[0], r4, r3\n\tadd.lt\tr4, r0, r2\n\tshl.s\t64, r2, r2\n\tshl.s\t96, r1, r1\n\tor\tr1, r2, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end29:\n\nfun_domainSeparator:\n.func_begin30:\n\tnop\tstack+=[2]\n\tld.1\t64, r1\n\tadd\tr1, r0, stack-[2]\n\tadd\t32, r1, r2\n\tadd\t@CPI30_0[0], r0, r1\n\tadd\tr2, r0, stack-[1]\n\tst.1\tr2, r1\n\tadd\t@CPI30_1[0], r0, r1\n\tst.2\t0, r1\n\tadd\t@CPI30_2[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI30_2[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI30_3[0], r1, r1\n\tadd\t32779, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB30_1\n\tld\tr1, r1\n\tadd\tstack-[2], r0, r4\n\tadd\t96, r4, r2\n\tcontext.this\tr3\n\tst.1\tr2, r3\n\tadd\t64, r4, r2\n\tst.1\tr2, r1\n\tadd\t96, r0, r1\n\tst.1\tr4, r1\n\tsub.s!\t@CPI30_4[0], r4, r1\n\tjump.ge\t@.BB30_3\n\tadd\t128, r4, r1\n\tst.1\t64, r1\n\tadd\t@CPI30_2[0], r0, r1\n\tadd\tstack-[1], r0, r3\n\tsub.s!\t@CPI30_2[0], r3, r2\n\tadd\tr1, r0, r2\n\tadd.lt\tr3, r0, r2\n\tshl.s\t64, r2, r2\n\tld.1\tr4, r3\n\tsub.s!\t@CPI30_2[0], r3, r4\n\tadd.ge\tr1, r0, r3\n\tshl.s\t96, r3, r3\n\tor\tr3, r2, r2\n\tcontext.gas_left\tr3\n\tsub.s!\t@CPI30_2[0], r3, r4\n\tadd.lt\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\tr1, r2, r1\n\tor\t@CPI30_5[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB30_1\n\tld\tr1, r1\n\tret\n.BB30_1:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB30_3:\n\tadd\t@CPI30_6[0], r0, r1\n\tst.1\t0, r1\n\tadd\t65, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI30_7[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end30:\n\nmodifier_nonReentrant:\n.func_begin31:\n\tnop\tstack+=[17]\n\tadd\tr3, r0, stack-[9]\n\tadd\tr2, r0, stack-[14]\n\tadd\tr1, r0, stack-[17]\n\tadd\t49, r0, r2\n\tsload\tr2, r1\n\tsub.s!\t2, r1, r1\n\tjump.eq\t@.BB31_1\n\tadd\t2, r0, r1\n\tadd\tr2, r0, stack-[5]\n\tsstore\tr2, r1\n\tcontext.gas_left\tr1\n\tadd\tr1, r0, stack-[12]\n\tadd\t1, r0, r1\n\tadd\tr1, r0, stack-[1]\n\tst.1\t0, r1\n\tadd\t51, r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI31_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI31_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI31_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB31_3\n\tld\tr1, r1\n\tsload\tr1, r3\n\tsub.s\t1, r0, r2\n\tsub!\tr3, r2, r2\n\tjump.eq\t@.BB31_5\n\tadd\tr3, r0, stack-[13]\n\tadd\t1, r3, r2\n\tsstore\tr1, r2\n\tadd\tstack-[17], r0, r5\n\tadd\t96, r5, r1\n\tadd\tr1, r0, stack-[7]\n\tld.1\tr1, r1\n\tadd\t32, r1, r2\n\tadd\t@CPI31_0[0], r0, r3\n\tsub.s!\t@CPI31_0[0], r2, r4\n\tadd.ge\tr3, r0, r2\n\tshl.s\t64, r2, r2\n\tld.1\tr1, r1\n\tsub.s!\t@CPI31_0[0], r1, r4\n\tadd.ge\tr3, r0, r1\n\tshl.s\t96, r1, r1\n\tor\tr1, r2, r1\n\tld.1.inc\tr5, r4, r2\n\tadd\tr4, r0, stack-[16]\n\tadd\tr2, r0, stack-[15]\n\tadd\t64, r5, r2\n\tadd\tr2, r0, stack-[6]\n\tld.1\tr2, r2\n\tadd\tr2, r0, stack-[10]\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI31_0[0], r2, r4\n\tadd.ge\tr3, r0, r2\n\tshl.s\t192, r2, r2\n\tor\tr2, r1, r1\n\tor\t@CPI31_2[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tstack-[16], r0, r3\n\tand\t@CPI31_3[0], r3, r3\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB31_3\n\tadd\tstack-[15], r0, r2\n\tld.1\tr2, r2\n\tsub.s!\t2, r2, r4\n\tjump.ge\t@.BB31_8\n\tld\tr1, r4\n\tadd\tstack-[17], r0, r1\n\tadd\t128, r1, r8\n\tadd\tstack-[14], r0, r1\n\tadd\t32, r1, r9\n\tadd\t96, r1, r6\n\tld.1\tr1, r5\n\tadd\t64, r1, r10\n\tadd\t128, r1, r1\n\tadd\tr6, r0, stack-[3]\n\tld.1\tr6, r6\n\tadd\tr1, r0, stack-[2]\n\tld.1\tr1, r7\n\tadd\tr8, r0, stack-[11]\n\tld.1\tr8, r8\n\tadd\tr9, r0, stack-[16]\n\tld.1\tr9, r9\n\tadd\tr10, r0, stack-[4]\n\tld.1\tr10, r10\n\tld.1\t64, r1\n\tadd\t384, r1, r11\n\tadd\tstack-[13], r0, r12\n\tst.1\tr11, r12\n\tadd\t288, r1, r11\n\tst.1\tr11, r10\n\tadd\t256, r1, r10\n\tst.1\tr10, r9\n\tadd\t224, r1, r9\n\tst.1\tr9, r5\n\tadd\t192, r1, r5\n\tst.1\tr5, r8\n\tadd\t160, r1, r5\n\tst.1\tr5, r2\n\tadd\t128, r1, r2\n\tst.1\tr2, r4\n\tadd\t96, r1, r2\n\tadd\tstack-[10], r0, r4\n\tst.1\tr2, r4\n\tadd\t64, r1, r2\n\tst.1\tr2, r3\n\tand\t@CPI31_3[0], r7, r2\n\tadd\t352, r1, r3\n\tst.1\tr3, r2\n\tand\t@CPI31_3[0], r6, r2\n\tadd\t320, r1, r3\n\tst.1\tr3, r2\n\tadd\t32, r1, r2\n\tadd\t@CPI31_4[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t384, r0, r3\n\tst.1\tr1, r3\n\tsub.s!\t@CPI31_5[0], r1, r3\n\tjump.ge\t@.BB31_10\n\tadd\t416, r1, r3\n\tst.1\t64, r3\n\tadd\t@CPI31_0[0], r0, r3\n\tsub.s!\t@CPI31_0[0], r2, r4\n\tadd.ge\tr3, r0, r2\n\tshl.s\t64, r2, r2\n\tld.1\tr1, r1\n\tsub.s!\t@CPI31_0[0], r1, r4\n\tadd.ge\tr3, r0, r1\n\tshl.s\t96, r1, r1\n\tor\tr1, r2, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI31_0[0], r2, r4\n\tadd.ge\tr3, r0, r2\n\tshl.s\t192, r2, r2\n\tor\tr2, r1, r1\n\tor\t@CPI31_2[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB31_3\n\tld\tr1, r1\n\tadd\tr1, r0, stack-[8]\n\tld.1\t64, r1\n\tadd\tr1, r0, stack-[13]\n\tadd\t32, r1, r2\n\tadd\t@CPI31_6[0], r0, r1\n\tadd\tr2, r0, stack-[10]\n\tst.1\tr2, r1\n\tadd\t@CPI31_7[0], r0, r1\n\tst.2\t0, r1\n\tadd\t@CPI31_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI31_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI31_8[0], r1, r1\n\tadd\t32779, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB31_3\n\tld\tr1, r1\n\tadd\tstack-[13], r0, r4\n\tadd\t96, r4, r2\n\tcontext.this\tr3\n\tst.1\tr2, r3\n\tadd\t64, r4, r2\n\tst.1\tr2, r1\n\tadd\t96, r0, r1\n\tst.1\tr4, r1\n\tsub.s!\t@CPI31_9[0], r4, r1\n\tjump.gt\t@.BB31_10\n\tadd\t128, r4, r1\n\tst.1\t64, r1\n\tadd\t@CPI31_0[0], r0, r1\n\tadd\tstack-[10], r0, r3\n\tsub.s!\t@CPI31_0[0], r3, r2\n\tadd\tr1, r0, r2\n\tadd.lt\tr3, r0, r2\n\tshl.s\t64, r2, r2\n\tld.1\tr4, r3\n\tsub.s!\t@CPI31_0[0], r3, r4\n\tadd.ge\tr1, r0, r3\n\tshl.s\t96, r3, r3\n\tor\tr3, r2, r2\n\tcontext.gas_left\tr3\n\tsub.s!\t@CPI31_0[0], r3, r4\n\tadd.lt\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\tr1, r2, r1\n\tor\t@CPI31_2[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB31_3\n\tld\tr1, r3\n\tld.1\t64, r1\n\tadd\t32, r1, r2\n\tadd\t@CPI31_10[0], r0, r4\n\tst.1\tr2, r4\n\tadd\t33, r1, r4\n\tadd\t@CPI31_11[0], r0, r5\n\tst.1\tr4, r5\n\tadd\t66, r1, r4\n\tadd\tstack-[8], r0, r5\n\tst.1\tr4, r5\n\tadd\t34, r1, r4\n\tst.1\tr4, r3\n\tadd\t66, r0, r3\n\tst.1\tr1, r3\n\tsub.s!\t@CPI31_9[0], r1, r3\n\tjump.gt\t@.BB31_10\n\tadd\t128, r1, r3\n\tst.1\t64, r3\n\tadd\t@CPI31_0[0], r0, r3\n\tsub.s!\t@CPI31_0[0], r2, r4\n\tadd.ge\tr3, r0, r2\n\tshl.s\t64, r2, r2\n\tld.1\tr1, r1\n\tsub.s!\t@CPI31_0[0], r1, r4\n\tadd.ge\tr3, r0, r1\n\tshl.s\t96, r1, r1\n\tor\tr1, r2, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI31_0[0], r2, r4\n\tadd.ge\tr3, r0, r2\n\tshl.s\t192, r2, r2\n\tor\tr2, r1, r1\n\tor\t@CPI31_2[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB31_3\n\tld\tr1, r1\n\tadd\tr1, r0, stack-[13]\n\tadd\tstack-[9], r0, r4\n\tld.1.inc\tr4, r1, r2\n\tsub.s!\t64, r1, r3\n\tjump.le\t@.BB31_18\n\tadd\t64, r4, r3\n\tld.1\tr3, r8\n\tld.1\tr2, r5\n\tadd\t65, r4, r3\n\tld.1\tr3, r3\n\tand!\t255, r3, r3\n\tjump.eq\t@.BB31_50\n\tsub.s!\t30, r3, r1\n\tjump.gt\t@.BB31_35\n\tsub.s!\t@CPI31_14[0], r8, r1\n\tadd\tr0, r0, r6\n\tjump.gt\t@.BB31_20\n\tld.1\t64, r1\n\tadd\t96, r1, r2\n\tst.1\tr2, r8\n\tadd\t64, r1, r2\n\tst.1\tr2, r5\n\tadd\t32, r1, r2\n\tst.1\tr2, r3\n\tadd\tstack-[13], r0, r2\n\tst.1\tr1, r2\n\tst.1\t0, r0\n\tadd\t@CPI31_0[0], r0, r2\n\tcontext.gas_left\tr3\n\tsub.s!\t@CPI31_0[0], r3, r4\n\tadd.ge\tr2, r0, r3\n\tsub.s!\t@CPI31_0[0], r1, r4\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r3, r2\n\tor\tr2, r1, r1\n\tor\t@CPI31_15[0], r1, r1\n\tadd\t1, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI31_0[0], r3, r3\n\tsub.s!\t32, r3, r4\n\tadd\t32, r0, r4\n\tadd.lt\tr3, r0, r4\n\tand\t31, r4, r5\n\tshr.s!\t5, r4, r4\n\tjump.eq\t@.BB31_158\n\tadd\tr0, r0, r6\n.BB31_25:\n\tshl.s\t5, r6, r7\n\tptr.add\tr1, r7, r8\n\tld\tr8, r8\n\tst.1\tr7, r8\n\tadd\t1, r6, r6\n\tsub!\tr6, r4, r7\n\tjump.lt\t@.BB31_25\n.BB31_158:\n\tsub.s!\t0, r5, r6\n\tjump.eq\t@.BB31_27\n\tshl.s\t3, r5, r5\n\tshl.s\t5, r4, r4\n\tld.1\tr4, r6\n\tshl\tr6, r5, r6\n\tshr\tr6, r5, r6\n\tptr.add\tr1, r4, r7\n\tld\tr7, r7\n\tsub\t256, r5, r5\n\tshr\tr7, r5, r7\n\tshl\tr7, r5, r5\n\tor\tr5, r6, r5\n\tst.1\tr4, r5\n.BB31_27:\n\tadd\tr3, r0, stack[@returndatasize]\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB31_28\n\tld.1\t0, r1\n\tand!\t@CPI31_3[0], r1, r2\n\tadd\tr0, r0, r6\n\tjump.eq\t@.BB31_20\n\tadd\tr1, r0, r6\n\tjump\t@.BB31_20\n.BB31_50:\n\tand\t@CPI31_3[0], r5, r6\n\tsub.s!\t64, r8, r3\n\tjump.le\t@.BB31_51\n\tsub.s\t33, r0, r3\n\tsub!\tr8, r3, r3\n\tjump.gt\t@.BB31_5\n\tadd\tr8, r2, r2\n\tld.1\tr2, r7\n\tadd\tr8, r7, r3\n\tadd\t32, r3, r3\n\tsub!\tr3, r7, r4\n\tadd\t0, r0, r4\n\tadd.lt\t1, r0, r4\n\tand!\t1, r4, r4\n\tjump.ne\t@.BB31_5\n\tld.1\t64, r10\n\tsub!\tr3, r1, r3\n\tadd\t68, r10, r3\n\tadd\t36, r10, r5\n\tadd\t4, r10, r4\n\tjump.gt\t@.BB31_55\n\tadd\t64, r0, r1\n\tst.1\tr5, r1\n\tadd\t@CPI31_16[0], r0, r1\n\tst.1\tr10, r1\n\tadd\tstack-[13], r0, r1\n\tst.1\tr4, r1\n\tld.1\tr2, r1\n\tst.1\tr3, r1\n\tadd\t100, r10, r7\n\tsub.s!\t0, r1, r3\n\tjump.eq\t@.BB31_59\n\tadd\tr0, r0, r3\n.BB31_58:\n\tadd\tr3, r7, r4\n\tadd\t32, r3, r3\n\tadd\tr3, r2, r5\n\tld.1\tr5, r5\n\tst.1\tr4, r5\n\tsub!\tr3, r1, r4\n\tjump.lt\t@.BB31_58\n.BB31_59:\n\tadd\tr1, r7, r3\n\tst.1\tr3, r0\n\tcontext.gas_left\tr7\n\tsub.s!\t4, r6, r3\n\tjump.ne\t@.BB31_61\n\tadd\tstack[@returndatasize], r0, r3\n\tsub.s!\t32, r3, r1\n\tadd\t32, r0, r4\n\tadd.lt\tr3, r0, r4\n\tjump\t@.BB31_71\n.BB31_35:\n\tadd\tr3, r0, stack-[8]\n\tadd\tr5, r0, stack-[9]\n\tadd\tr8, r0, stack-[10]\n\tld.1\t64, r1\n\tadd\t32, r1, r2\n\tadd\t@CPI31_12[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t60, r1, r3\n\tadd\tstack-[13], r0, r4\n\tst.1\tr3, r4\n\tadd\t60, r0, r3\n\tst.1\tr1, r3\n\tsub.s!\t@CPI31_13[0], r1, r3\n\tjump.gt\t@.BB31_10\n\tadd\t96, r1, r3\n\tst.1\t64, r3\n\tadd\t@CPI31_0[0], r0, r3\n\tsub.s!\t@CPI31_0[0], r2, r4\n\tadd.ge\tr3, r0, r2\n\tshl.s\t64, r2, r2\n\tld.1\tr1, r1\n\tsub.s!\t@CPI31_0[0], r1, r4\n\tadd.ge\tr3, r0, r1\n\tshl.s\t96, r1, r1\n\tor\tr1, r2, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI31_0[0], r2, r4\n\tadd.ge\tr3, r0, r2\n\tshl.s\t192, r2, r2\n\tor\tr2, r1, r1\n\tor\t@CPI31_2[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB31_3\n\tadd\tstack-[10], r0, r4\n\tsub.s!\t@CPI31_14[0], r4, r2\n\tadd\tr0, r0, r6\n\tadd\tstack-[9], r0, r5\n\tadd\tstack-[8], r0, r7\n\tjump.gt\t@.BB31_20\n\tld\tr1, r1\n\tld.1\t64, r2\n\tadd\t96, r2, r3\n\tst.1\tr3, r4\n\tadd\t64, r2, r3\n\tst.1\tr3, r5\n\tsub.s\t4, r7, r3\n\tadd\t32, r2, r4\n\tst.1\tr4, r3\n\tst.1\tr2, r1\n\tst.1\t0, r0\n\tadd\t@CPI31_0[0], r0, r1\n\tcontext.gas_left\tr3\n\tsub.s!\t@CPI31_0[0], r3, r4\n\tadd.ge\tr1, r0, r3\n\tsub.s!\t@CPI31_0[0], r2, r4\n\tadd.lt\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r3, r2\n\tor\tr2, r1, r1\n\tor\t@CPI31_15[0], r1, r1\n\tadd\t1, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI31_0[0], r3, r3\n\tsub.s!\t32, r3, r4\n\tadd\t32, r0, r4\n\tadd.lt\tr3, r0, r4\n\tand\t31, r4, r5\n\tshr.s!\t5, r4, r4\n\tjump.eq\t@.BB31_160\n\tadd\tr0, r0, r6\n.BB31_40:\n\tshl.s\t5, r6, r7\n\tptr.add\tr1, r7, r8\n\tld\tr8, r8\n\tst.1\tr7, r8\n\tadd\t1, r6, r6\n\tsub!\tr6, r4, r7\n\tjump.lt\t@.BB31_40\n.BB31_160:\n\tsub.s!\t0, r5, r6\n\tjump.eq\t@.BB31_42\n\tshl.s\t3, r5, r5\n\tshl.s\t5, r4, r4\n\tld.1\tr4, r6\n\tshl\tr6, r5, r6\n\tshr\tr6, r5, r6\n\tptr.add\tr1, r4, r7\n\tld\tr7, r7\n\tsub\t256, r5, r5\n\tshr\tr7, r5, r7\n\tshl\tr7, r5, r5\n\tor\tr5, r6, r5\n\tst.1\tr4, r5\n.BB31_42:\n\tadd\tr3, r0, stack[@returndatasize]\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB31_43\n\tld.1\t0, r1\n\tand!\t@CPI31_3[0], r1, r2\n\tadd\tr0, r0, r6\n\tjump.eq\t@.BB31_20\n\tadd\tr1, r0, r6\n\tjump\t@.BB31_20\n.BB31_61:\n\tadd\tr2, r0, stack-[9]\n\tadd\t31, r1, r1\n\tsub.s\t32, r0, r3\n\tand\tr1, r3, r1\n\tadd\t@CPI31_0[0], r0, r3\n\tsub.s!\t@CPI31_0[0], r10, r4\n\tadd\tr3, r0, r4\n\tadd.lt\tr10, r0, r4\n\tshl.s\t64, r4, r4\n\tadd\t100, r1, r1\n\tsub.s!\t@CPI31_0[0], r1, r5\n\tadd.ge\tr3, r0, r1\n\tshl.s\t96, r1, r1\n\tor\tr1, r4, r1\n\tsub.s!\t@CPI31_0[0], r7, r4\n\tadd\tr3, r0, r2\n\tadd.lt\tr7, r0, r2\n\tshl.s\t192, r2, r2\n\tor\tr2, r1, r1\n\tadd\tr6, r0, stack-[10]\n\tadd\tr6, r0, r2\n\tadd\tr10, r0, stack-[8]\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tstack-[8], r0, r10\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI31_0[0], r3, r3\n\tsub.s!\t32, r3, r4\n\tadd\t32, r0, r4\n\tadd.lt\tr3, r0, r4\n\tand\t31, r4, r5\n\tshr.s!\t5, r4, r6\n\tjump.eq\t@.BB31_156\n\tadd\tr0, r0, r7\n.BB31_63:\n\tshl.s\t5, r7, r8\n\tadd\tr10, r8, r9\n\tptr.add\tr1, r8, r8\n\tld\tr8, r8\n\tst.1\tr9, r8\n\tadd\t1, r7, r7\n\tsub!\tr7, r6, r8\n\tjump.lt\t@.BB31_63\n.BB31_156:\n\tsub.s!\t0, r5, r7\n\tjump.eq\t@.BB31_65\n\tshl.s\t5, r6, r6\n\tptr.add\tr1, r6, r7\n\tadd\tr10, r6, r6\n\tshl.s\t3, r5, r5\n\tld.1\tr6, r8\n\tshl\tr8, r5, r8\n\tshr\tr8, r5, r8\n\tld\tr7, r7\n\tsub\t256, r5, r5\n\tshr\tr7, r5, r7\n\tshl\tr7, r5, r5\n\tor\tr5, r8, r5\n\tst.1\tr6, r5\n.BB31_65:\n\tadd\tr3, r0, stack[@returndatasize]\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tadd\tstack-[10], r0, r6\n\tadd\tstack-[9], r0, r2\n\tjump.eq\t@.BB31_66\n.BB31_71:\n\tadd\t31, r4, r1\n\tand\t96, r1, r1\n\tadd\tr1, r10, r5\n\tsub!\tr5, r1, r1\n\tadd\t0, r0, r1\n\tadd.lt\t1, r0, r1\n\tsub.s!\t@CPI31_17[0], r5, r4\n\tjump.gt\t@.BB31_10\n\tand!\t1, r1, r1\n\tjump.ne\t@.BB31_10\n\tst.1\t64, r5\n\tsub.s!\t32, r3, r1\n\tjump.lt\t@.BB31_3\n\tld.1\tr10, r1\n\tand\t@CPI31_18[0], r1, r3\n\tsub!\tr3, r1, r3\n\tjump.ne\t@.BB31_3\n\tsub.s!\t@CPI31_16[0], r1, r1\n\tjump.ne\t@.BB31_76\n.BB31_20:\n\tadd\t50, r0, r1\n\tsload\tr1, r1\n\txor\tr1, r6, r2\n\tand!\t@CPI31_3[0], r2, r2\n\tjump.ne\t@.BB31_77\n\tcontext.gas_left\tr1\n\tadd\tstack-[11], r0, r2\n\tld.1\tr2, r6\n\tsub.s\t2501, r0, r2\n\tsub!\tr6, r2, r3\n\tjump.gt\t@.BB31_5\n\tadd\t2500, r6, r3\n\tshl.s\t6, r6, r4\n\tdiv.s\t63, r4, r4, r5\n\tsub!\tr4, r3, r5\n\tadd.le\tr3, r0, r4\n\tsub.s\t501, r0, r3\n\tsub!\tr4, r3, r5\n\tjump.gt\t@.BB31_5\n\tadd\t500, r4, r4\n\tsub!\tr1, r4, r1\n\tjump.lt\t@.BB31_81\n\tadd\tstack-[7], r0, r1\n\tld.1\tr1, r7\n\tadd\tstack-[6], r0, r1\n\tld.1\tr1, r3\n\tadd\tstack-[17], r0, r1\n\tld.1\tr1, r1\n\tand\t@CPI31_3[0], r1, r5\n\tadd\tstack-[15], r0, r1\n\tld.1\tr1, r2\n\tsub.s!\t1, r2, r1\n\tjump.gt\t@.BB31_8\n\tadd\tstack-[16], r0, r1\n\tld.1\tr1, r1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB31_86\n\tadd\tr2, r0, r4\n\tcontext.gas_left\tr1\n\tsub.s!\t2500, r1, r2\n\tjump.lt\t@.BB31_5\n\tsub.s\t2500, r1, r6\n\tadd\tr4, r0, r2\n.BB31_86:\n\tadd\tr3, r0, stack-[17]\n\tadd\tr2, r0, stack-[9]\n\tsub.s!\t1, r2, r1\n\tadd\tr5, r0, stack-[15]\n\tadd\tr6, r0, stack-[10]\n\tjump.ne\t@.BB31_88\n\tsub.s!\t4, r5, r1\n\tjump.eq\t@.BB31_99\n\tadd\t32, r7, r1\n\tadd\t@CPI31_0[0], r0, r2\n\tsub.s!\t@CPI31_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tadd\tr7, r0, stack-[8]\n\tld.1\tr7, r3\n\tsub.s!\t@CPI31_0[0], r3, r4\n\tadd.ge\tr2, r0, r3\n\tshl.s\t96, r3, r3\n\tor\tr3, r1, r1\n\tsub.s!\t@CPI31_0[0], r6, r3\n\tadd.lt\tr6, r0, r2\n\tshl.s\t192, r2, r2\n\tor\tr1, r2, r1\n\tadd\tr5, r0, r2\n\tnear_call\tr0, @__delegatecall, @DEFAULT_UNWIND\n\tjump\t@.BB31_87\n.BB31_88:\n\tsub.s!\t4, r5, r1\n\tjump.eq\t@.BB31_99\n\tadd\t32, r7, r1\n\tadd\t@CPI31_0[0], r0, r2\n\tsub.s!\t@CPI31_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tadd\tr7, r0, stack-[8]\n\tld.1\tr7, r3\n\tsub.s!\t@CPI31_0[0], r3, r4\n\tadd.ge\tr2, r0, r3\n\tshl.s\t96, r3, r3\n\tor\tr3, r1, r1\n\tsub.s!\t@CPI31_0[0], r6, r3\n\tadd.lt\tr6, r0, r2\n\tshl.s\t192, r2, r2\n\tor\tr1, r2, r1\n\tadd\tstack-[17], r0, r3\n\tsub.s!\t0, r3, r2\n\tjump.eq\t@.BB31_90\n\tor\t@CPI31_2[0], r1, r1\n\tadd\t32777, r0, r2\n\tadd\tr5, r0, r4\n\tadd\tr0, r0, r5\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tjump\t@.BB31_87\n.BB31_90:\n\tadd\tr5, r0, r2\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n.BB31_87:\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tshr.s\t96, r1, r1\n\tand\t@CPI31_0[0], r1, stack[@returndatasize]\n\tand!\t1, r2, r1\n\tadd\tstack-[8], r0, r7\n\tjump.eq\t@.BB31_94\n.BB31_99:\n\tld.1\t64, r2\n\tld.1\tr7, r1\n\tsub.s!\t0, r1, r3\n\tjump.eq\t@.BB31_102\n\tadd\tr0, r0, r3\n.BB31_101:\n\tadd\tr3, r2, r4\n\tadd\t32, r3, r3\n\tadd\tr3, r7, r5\n\tld.1\tr5, r5\n\tst.1\tr4, r5\n\tsub!\tr3, r1, r4\n\tjump.lt\t@.BB31_101\n.BB31_102:\n\tadd\tr1, r2, r3\n\tst.1\tr3, r0\n\tadd\t@CPI31_0[0], r0, r3\n\tsub.s!\t@CPI31_0[0], r2, r4\n\tadd.ge\tr3, r0, r2\n\tshl.s\t64, r2, r2\n\tsub.s!\t@CPI31_0[0], r1, r4\n\tadd.ge\tr3, r0, r1\n\tshl.s\t96, r1, r1\n\tor\tr1, r2, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI31_0[0], r2, r4\n\tadd.ge\tr3, r0, r2\n\tshl.s\t192, r2, r2\n\tor\tr2, r1, r1\n\tor\t@CPI31_2[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB31_3\n\tld\tr1, r7\n\tld.1\t64, r1\n\tadd\t32, r1, r2\n\tadd\tstack-[10], r0, r3\n\tst.1\tr2, r3\n\tadd\tstack-[9], r0, r2\n\tst.1\tr1, r2\n\tadd\t@CPI31_0[0], r0, r2\n\tcontext.gas_left\tr3\n\tsub.s!\t@CPI31_0[0], r3, r4\n\tadd.ge\tr2, r0, r3\n\tsub.s!\t@CPI31_0[0], r1, r4\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r3, r2\n\tor\tr2, r1, r1\n\tor\t@CPI31_1[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t4, r0, r3\n\tadd\t@CPI31_24[0], r0, r4\n\tadd\tstack-[15], r0, r5\n\tadd\tstack-[17], r0, r6\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tadd\t1, r0, r1\n\tadd\tr1, r0, stack-[17]\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB31_3\n.BB31_109:\n\tadd\tstack-[16], r0, r1\n\tld.1\tr1, r1\n\tsub.s!\t0, r1, r1\n\tjump.eq\t@.BB31_153\n.BB31_110:\n\tcontext.gas_left\tr2\n\tadd\tstack-[12], r0, r1\n\tsub!\tr1, r2, r1\n\tjump.lt\t@.BB31_5\n\tadd\tstack-[16], r0, r1\n\tld.1\tr1, r4\n\tadd\tstack-[14], r0, r1\n\tld.1\tr1, r5\n\tadd\tstack-[3], r0, r1\n\tld.1\tr1, r1\n\tand\t@CPI31_3[0], r1, r3\n\tadd\tstack-[4], r0, r1\n\tld.1\tr1, r1\n\tadd\tr1, r0, stack-[14]\n\tsub.s!\t0, r1, r1\n\tjump.eq\t@.BB31_112\n\tadd\tstack-[2], r0, r1\n\tld.1\tr1, r1\n\tand!\t@CPI31_3[0], r1, r1\n\tadd\tr1, r0, stack-[16]\n\tadd\tr3, r0, stack-[15]\n\tjump.ne\t@.BB31_114\n\tadd\tr5, r0, stack-[9]\n\tadd\tr2, r0, stack-[10]\n\tadd\tr4, r0, stack-[11]\n\tadd\t@CPI31_25[0], r0, r1\n\tst.2\t0, r1\n\tadd\t@CPI31_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI31_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI31_8[0], r1, r1\n\tadd\t32779, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB31_3\n\tld\tr1, r1\n\tadd\tr1, r0, stack-[16]\n\tadd\tstack-[15], r0, r3\n\tadd\tstack-[11], r0, r4\n\tadd\tstack-[10], r0, r2\n\tadd\tstack-[9], r0, r5\n.BB31_114:\n\tadd\tstack-[12], r0, r1\n\tsub\tr1, r2, r1\n\tadd\tr5, r1, r5\n\tsub.s!\t0, r3, r2\n\tjump.eq\t@.BB31_138\n\tsub!\tr5, r1, r1\n\tjump.lt\t@.BB31_5\n\tmul\tr5, r4, r6, r1\n\tsub.s!\t0, r5, r1\n\tjump.eq\t@.BB31_120\n\tdiv\tr6, r5, r1, r2\n\tsub!\tr1, r4, r1\n\tjump.ne\t@.BB31_5\n.BB31_120:\n\tadd\tr6, r0, stack-[12]\n\tadd\t@CPI31_26[0], r0, r1\n\tst.2\t0, r1\n\tst.2\t4, r3\n\tadd\t@CPI31_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI31_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI31_27[0], r1, r1\n\tadd\t32770, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tstack-[16], r0, r3\n\tand\t@CPI31_3[0], r3, r3\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB31_3\n\tld.1\t64, r5\n\tld\tr1, r1\n\tsub.s!\t0, r1, r1\n\tadd\tstack-[12], r0, r2\n\tjump.eq\t@.BB31_122\n\tadd\tstack-[14], r0, r1\n\tdiv\tr2, r1, r6, r1\n\tadd\t68, r5, r1\n\tst.1\tr1, r6\n\tadd\t32, r5, r1\n\tadd\t@CPI31_28[0], r0, r4\n\tst.1\tr1, r4\n\tadd\t36, r5, r4\n\tst.1\tr4, r3\n\tadd\t68, r0, r3\n\tst.1\tr5, r3\n\tsub.s!\t@CPI31_9[0], r5, r3\n\tadd\tstack-[15], r0, r2\n\tjump.gt\t@.BB31_10\n\tadd\t128, r5, r3\n\tst.1\t64, r3\n\tld.1\tr5, r3\n\tcontext.gas_left\tr7\n\tsub.s!\t4, r2, r4\n\tjump.ne\t@.BB31_128\n\tadd\tr0, r0, r5\n.BB31_126:\n\tshl.s\t5, r5, r3\n\tadd\tr1, r3, r4\n\tld.1\tr4, r4\n\tst.1\tr3, r4\n\tadd!\t1, r5, r5\n\tadd\t0, r0, r3\n\tadd.eq\t1, r0, r3\n\tand!\t1, r3, r3\n\tjump.ne\t@.BB31_126\n\tadd\tstack[@returndatasize], r0, r3\n\tadd\tstack-[1], r0, r4\n\tjump\t@.BB31_133\n.BB31_94:\n\tadd\tr1, r0, stack-[7]\n\tld.1\t64, r2\n\tld.1\tr7, r1\n\tsub.s!\t0, r1, r3\n\tjump.eq\t@.BB31_97\n\tadd\tr0, r0, r3\n.BB31_96:\n\tadd\tr3, r2, r4\n\tadd\t32, r3, r3\n\tadd\tr3, r7, r5\n\tld.1\tr5, r5\n\tst.1\tr4, r5\n\tsub!\tr3, r1, r4\n\tjump.lt\t@.BB31_96\n.BB31_97:\n\tadd\tr1, r2, r3\n\tst.1\tr3, r0\n\tadd\t@CPI31_0[0], r0, r3\n\tsub.s!\t@CPI31_0[0], r2, r4\n\tadd.ge\tr3, r0, r2\n\tshl.s\t64, r2, r2\n\tsub.s!\t@CPI31_0[0], r1, r4\n\tadd.ge\tr3, r0, r1\n\tshl.s\t96, r1, r1\n\tor\tr1, r2, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI31_0[0], r2, r4\n\tadd.ge\tr3, r0, r2\n\tshl.s\t192, r2, r2\n\tor\tr2, r1, r1\n\tor\t@CPI31_2[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB31_3\n\tld\tr1, r7\n\tld.1\t64, r1\n\tadd\t32, r1, r2\n\tadd\tstack-[10], r0, r3\n\tst.1\tr2, r3\n\tadd\tstack-[9], r0, r2\n\tst.1\tr1, r2\n\tadd\t@CPI31_0[0], r0, r2\n\tcontext.gas_left\tr3\n\tsub.s!\t@CPI31_0[0], r3, r4\n\tadd.ge\tr2, r0, r3\n\tsub.s!\t@CPI31_0[0], r1, r4\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r3, r2\n\tor\tr2, r1, r1\n\tor\t@CPI31_1[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t4, r0, r3\n\tadd\t@CPI31_22[0], r0, r4\n\tadd\tstack-[15], r0, r5\n\tadd\tstack-[17], r0, r6\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB31_3\n\tadd\tstack-[11], r0, r1\n\tld.1\tr1, r1\n\tsub.s!\t0, r1, r1\n\tadd\tr0, r0, stack-[17]\n\tjump.ne\t@.BB31_109\n\tadd\tstack-[16], r0, r1\n\tld.1\tr1, r1\n\tsub.s!\t0, r1, r1\n\tadd\tr0, r0, stack-[17]\n\tjump.ne\t@.BB31_110\n\tld.1\t64, r2\n\tadd\tr2, r0, stack-[17]\n\tadd\t@CPI31_23[0], r0, r1\n\tst.1\tr2, r1\n\tadd\t4, r2, r1\n\tadd\tr0, r0, r2\n\tadd\tr0, r0, r3\n\tadd\tstack-[7], r0, r4\n\tnear_call\tr0, @abi_encode_uint256_uint256_bool, @DEFAULT_UNWIND\n\tadd\tstack-[17], r0, r4\n\tsub\tr1, r4, r1\n\tadd\t@CPI31_0[0], r0, r2\n\tsub.s!\t@CPI31_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tsub.s!\t@CPI31_0[0], r4, r3\n\tadd.lt\tr4, r0, r2\n\tshl.s\t64, r2, r2\n\tshl.s\t96, r1, r1\n\tor\tr1, r2, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB31_138:\n\tsub!\tr5, r1, r1\n\tjump.lt\t@.BB31_5\n\tadd\tr5, r0, stack-[15]\n\tadd\tr4, r0, stack-[11]\n\tadd\t@CPI31_33[0], r0, r1\n\tst.2\t0, r1\n\tadd\t@CPI31_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI31_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI31_8[0], r1, r1\n\tadd\t32779, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB31_3\n\tld\tr1, r1\n\tadd\tstack-[11], r0, r4\n\tsub!\tr1, r4, r1\n\tadd\tstack-[15], r0, r2\n\tjump.gt\t@.BB31_141\n\tadd\t@CPI31_33[0], r0, r1\n\tst.2\t0, r1\n\tadd\t@CPI31_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI31_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI31_8[0], r1, r1\n\tadd\t32779, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB31_3\n\tld\tr1, r4\n\tadd\tstack-[15], r0, r2\n.BB31_141:\n\tmul\tr4, r2, r3, r1\n\tsub.s!\t0, r2, r1\n\tjump.eq\t@.BB31_144\n\tdiv\tr3, r2, r1, r2\n\tsub!\tr1, r4, r1\n\tjump.ne\t@.BB31_5\n\tcontext.gas_left\tr1\n\tadd\tstack-[16], r0, r2\n\tsub.s!\t4, r2, r2\n\tadd\tr3, r0, r6\n\tjump.eq\t@.BB31_152\n\tsub.s!\t0, r3, r2\n\tjump.eq\t@.BB31_149\n\tadd\t@CPI31_0[0], r0, r2\n\tsub.s!\t@CPI31_0[0], r1, r4\n\tadd.ge\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI31_2[0], r1, r1\n\tadd\t32777, r0, r2\n\tadd\tr3, r0, stack-[15]\n\tadd\tstack-[16], r0, r4\n\tadd\tr0, r0, r5\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tjump\t@.BB31_148\n.BB31_128:\n\tadd\tr6, r0, stack-[14]\n\tadd\t@CPI31_0[0], r0, r4\n\tsub.s!\t@CPI31_0[0], r1, r5\n\tadd.ge\tr4, r0, r1\n\tshl.s\t64, r1, r1\n\tsub.s!\t@CPI31_0[0], r3, r5\n\tadd.ge\tr4, r0, r3\n\tshl.s\t96, r3, r3\n\tor\tr3, r1, r1\n\tsub.s\t10000, r7, r5\n\tsub.s!\t@CPI31_0[0], r5, r3\n\tadd\tr4, r0, r3\n\tadd.lt\tr5, r0, r3\n\tshl.s\t192, r3, r3\n\tor\tr3, r1, r1\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI31_0[0], r3, r3\n\tsub.s!\t32, r3, r4\n\tadd\t32, r0, r4\n\tadd.lt\tr3, r0, r4\n\tand\t31, r4, r5\n\tshr.s!\t5, r4, r4\n\tjump.eq\t@.BB31_154\n\tadd\tr0, r0, r6\n.BB31_130:\n\tshl.s\t5, r6, r7\n\tptr.add\tr1, r7, r8\n\tld\tr8, r8\n\tst.1\tr7, r8\n\tadd\t1, r6, r6\n\tsub!\tr6, r4, r7\n\tjump.lt\t@.BB31_130\n.BB31_154:\n\tsub.s!\t0, r5, r6\n\tjump.eq\t@.BB31_132\n\tshl.s\t3, r5, r5\n\tshl.s\t5, r4, r4\n\tld.1\tr4, r6\n\tshl\tr6, r5, r6\n\tshr\tr6, r5, r6\n\tptr.add\tr1, r4, r7\n\tld\tr7, r7\n\tsub\t256, r5, r5\n\tshr\tr7, r5, r7\n\tshl\tr7, r5, r5\n\tor\tr5, r6, r5\n\tst.1\tr4, r5\n.BB31_132:\n\tand\t1, r2, r4\n\tadd\tr3, r0, stack[@returndatasize]\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tadd\tstack-[15], r0, r2\n\tadd\tstack-[14], r0, r6\n.BB31_133:\n\tsub.s!\t0, r3, r1\n\tjump.eq\t@.BB31_136\n\tsub.s!\t32, r3, r1\n\tjump.ne\t@.BB31_137\n\tld.1\t0, r1\n\tsub.s!\t0, r1, r1\n\tadd\t0, r0, r1\n\tadd.ne\t1, r0, r1\n\tsub.s!\t0, r4, r3\n\tadd\t0, r0, r3\n\tadd.ne\t1, r0, r3\n\tand\tr3, r1, r1\n\tand\t1, r1, r4\n.BB31_136:\n\tsub.s!\t0, r4, r1\n\tjump.ne\t@.BB31_152\n.BB31_137:\n\tld.1\t64, r3\n\tadd\tr3, r0, stack-[17]\n\tadd\t@CPI31_29[0], r0, r1\n\tst.1\tr3, r1\n\tadd\t4, r3, r1\n\tadd\tstack-[16], r0, r3\n\tadd\tr6, r0, r4\n\tnear_call\tr0, @abi_encode_address_address_payable_uint256, @DEFAULT_UNWIND\n\tadd\tstack-[17], r0, r4\n\tsub\tr1, r4, r1\n\tadd\t@CPI31_0[0], r0, r2\n\tsub.s!\t@CPI31_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tsub.s!\t@CPI31_0[0], r4, r3\n\tadd.lt\tr4, r0, r2\n\tshl.s\t64, r2, r2\n\tshl.s\t96, r1, r1\n\tor\tr1, r2, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB31_144:\n\tcontext.gas_left\tr1\n\tadd\tstack-[16], r0, r2\n\tsub.s!\t4, r2, r2\n\tadd\tr0, r0, r6\n\tjump.eq\t@.BB31_152\n.BB31_149:\n\tadd\t@CPI31_0[0], r0, r2\n\tsub.s!\t@CPI31_0[0], r1, r4\n\tadd.ge\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tadd\tstack-[16], r0, r2\n\tadd\tr3, r0, stack-[15]\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n.BB31_148:\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tshr.s\t96, r1, r1\n\tand\t@CPI31_0[0], r1, stack[@returndatasize]\n\tand!\t1, r2, r1\n\tadd\tstack-[15], r0, r3\n\tadd\tr3, r0, r6\n\tjump.eq\t@.BB31_151\n.BB31_152:\n\tadd\t@CPI31_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI31_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI31_2[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t3, r0, r3\n\tadd\t@CPI31_34[0], r0, r4\n\tadd\tstack-[13], r0, r5\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB31_3\n.BB31_153:\n\tadd\t1, r0, r1\n\tadd\tstack-[5], r0, r2\n\tsstore\tr2, r1\n\tadd\tstack-[17], r0, r1\n\tret\n.BB31_3:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB31_10:\n\tadd\t@CPI31_40[0], r0, r1\n\tst.1\t0, r1\n\tadd\t65, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI31_41[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB31_8:\n\tadd\t@CPI31_40[0], r0, r1\n\tst.1\t0, r1\n\tadd\t33, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI31_41[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB31_1:\n\tld.1\t64, r1\n\tadd\t@CPI31_42[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t@CPI31_0[0], r0, r2\n\tsub.s!\t@CPI31_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI31_36[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB31_18:\n\tld.1\t64, r1\n\tadd\t68, r1, r2\n\tadd\t@CPI31_39[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t25, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI31_31[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI31_0[0], r0, r2\n\tsub.s!\t@CPI31_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI31_32[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB31_77:\n\tand\t@CPI31_3[0], r1, r1\n\tld.1\t64, r2\n\tadd\t36, r2, r3\n\tst.1\tr3, r1\n\tadd\t@CPI31_20[0], r0, r1\n\tst.1\tr2, r1\n\tand\t@CPI31_3[0], r6, r1\n\tadd\t4, r2, r3\n\tst.1\tr3, r1\n\tadd\t@CPI31_0[0], r0, r1\n\tsub.s!\t@CPI31_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI31_21[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB31_81:\n\tcontext.gas_left\tr1\n\tadd\tstack-[11], r0, r4\n\tld.1\tr4, r4\n\tsub!\tr4, r2, r2\n\tjump.gt\t@.BB31_5\n\tadd\t2500, r4, r2\n\tshl.s\t6, r4, r4\n\tdiv.s\t63, r4, r4, r5\n\tsub!\tr4, r2, r5\n\tadd.gt\tr4, r0, r2\n\tsub!\tr2, r3, r3\n\tjump.le\t@.BB31_83\n.BB31_5:\n\tadd\t@CPI31_40[0], r0, r1\n\tst.1\t0, r1\n\tadd\t17, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI31_41[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB31_112:\n\tld.1\t64, r1\n\tadd\t@CPI31_35[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t@CPI31_0[0], r0, r2\n\tsub.s!\t@CPI31_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI31_36[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB31_122:\n\tadd\t68, r5, r1\n\tadd\t@CPI31_30[0], r0, r3\n\tst.1\tr1, r3\n\tadd\t36, r5, r1\n\tadd\t28, r0, r3\n\tst.1\tr1, r3\n\tadd\t@CPI31_31[0], r0, r1\n\tst.1\tr5, r1\n\tadd\t4, r5, r1\n\tadd\t32, r0, r3\n\tst.1\tr1, r3\n\tadd\t@CPI31_0[0], r0, r1\n\tsub.s!\t@CPI31_0[0], r5, r3\n\tadd.lt\tr5, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI31_32[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB31_51:\n\tld.1\t64, r2\n\tadd\tr2, r0, stack-[17]\n\tadd\t@CPI31_38[0], r0, r1\n\tst.1\tr2, r1\n\tadd\t4, r2, r1\n\tadd\tr8, r0, r2\n\tnear_call\tr0, @abi_encode_uint256_rational_by_rational_by, @DEFAULT_UNWIND\n\tadd\tstack-[17], r0, r4\n\tsub\tr1, r4, r1\n\tadd\t@CPI31_0[0], r0, r2\n\tsub.s!\t@CPI31_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tsub.s!\t@CPI31_0[0], r4, r3\n\tadd.lt\tr4, r0, r2\n\tshl.s\t64, r2, r2\n\tshl.s\t96, r1, r1\n\tor\tr1, r2, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB31_55:\n\tst.1\tr3, r1\n\tst.1\tr5, r7\n\tadd\t@CPI31_38[0], r0, r1\n\tst.1\tr10, r1\n\tst.1\tr4, r8\n\tadd\t@CPI31_0[0], r0, r1\n\tsub.s!\t@CPI31_0[0], r10, r2\n\tadd.lt\tr10, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI31_32[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB31_76:\n\tadd\t@CPI31_19[0], r0, r1\n\tst.1\tr5, r1\n\tadd\t4, r5, r1\n\tadd\tr5, r0, stack-[17]\n\tnear_call\tr0, @abi_encode_bytes, @DEFAULT_UNWIND\n\tadd\tstack-[17], r0, r4\n\tsub\tr1, r4, r1\n\tadd\t@CPI31_0[0], r0, r2\n\tsub.s!\t@CPI31_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tsub.s!\t@CPI31_0[0], r4, r3\n\tadd.lt\tr4, r0, r2\n\tshl.s\t64, r2, r2\n\tshl.s\t96, r1, r1\n\tor\tr1, r2, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB31_83:\n\tadd\t500, r2, r2\n\tld.1\t64, r3\n\tadd\t36, r3, r4\n\tst.1\tr4, r2\n\tadd\t@CPI31_37[0], r0, r2\n\tst.1\tr3, r2\n\tadd\t4, r3, r2\n\tst.1\tr2, r1\n\tadd\t@CPI31_0[0], r0, r1\n\tsub.s!\t@CPI31_0[0], r3, r2\n\tadd.lt\tr3, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI31_21[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB31_66:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r3\n\tjump.eq\t@.BB31_155\n\tadd\tr0, r0, r5\n.BB31_68:\n\tshl.s\t5, r5, r6\n\tadd\tr2, r6, r7\n\tptr.add\tr1, r6, r6\n\tld\tr6, r6\n\tst.1\tr7, r6\n\tadd\t1, r5, r5\n\tsub!\tr5, r3, r6\n\tjump.lt\t@.BB31_68\n.BB31_155:\n\tsub.s!\t0, r4, r5\n\tjump.eq\t@.BB31_70\n\tshl.s\t5, r3, r3\n\tptr.add\tr1, r3, r1\n\tadd\tr2, r3, r3\n\tshl.s\t3, r4, r4\n\tld.1\tr3, r5\n\tshl\tr5, r4, r5\n\tshr\tr5, r4, r5\n\tld\tr1, r1\n\tsub\t256, r4, r4\n\tshr\tr1, r4, r1\n\tshl\tr1, r4, r1\n\tor\tr1, r5, r1\n\tst.1\tr3, r1\n.BB31_70:\n\tadd\t@CPI31_0[0], r0, r1\n\tadd\tstack[@returndatasize], r0, r3\n\tsub.s!\t@CPI31_0[0], r3, r4\n\tadd.ge\tr1, r0, r3\n\tsub.s!\t@CPI31_0[0], r2, r4\n\tadd.lt\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t96, r3, r2\n\tor\tr2, r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB31_28:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r3\n\tjump.eq\t@.BB31_157\n\tadd\tr0, r0, r5\n.BB31_30:\n\tshl.s\t5, r5, r6\n\tadd\tr2, r6, r7\n\tptr.add\tr1, r6, r6\n\tld\tr6, r6\n\tst.1\tr7, r6\n\tadd\t1, r5, r5\n\tsub!\tr5, r3, r6\n\tjump.lt\t@.BB31_30\n.BB31_157:\n\tsub.s!\t0, r4, r5\n\tjump.eq\t@.BB31_32\n\tshl.s\t5, r3, r3\n\tptr.add\tr1, r3, r1\n\tadd\tr2, r3, r3\n\tshl.s\t3, r4, r4\n\tld.1\tr3, r5\n\tshl\tr5, r4, r5\n\tshr\tr5, r4, r5\n\tld\tr1, r1\n\tsub\t256, r4, r4\n\tshr\tr1, r4, r1\n\tshl\tr1, r4, r1\n\tor\tr1, r5, r1\n\tst.1\tr3, r1\n.BB31_32:\n\tadd\t@CPI31_0[0], r0, r1\n\tadd\tstack[@returndatasize], r0, r3\n\tsub.s!\t@CPI31_0[0], r3, r4\n\tadd.ge\tr1, r0, r3\n\tsub.s!\t@CPI31_0[0], r2, r4\n\tadd.lt\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t96, r3, r2\n\tor\tr2, r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB31_43:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r3\n\tjump.eq\t@.BB31_159\n\tadd\tr0, r0, r5\n.BB31_45:\n\tshl.s\t5, r5, r6\n\tadd\tr2, r6, r7\n\tptr.add\tr1, r6, r6\n\tld\tr6, r6\n\tst.1\tr7, r6\n\tadd\t1, r5, r5\n\tsub!\tr5, r3, r6\n\tjump.lt\t@.BB31_45\n.BB31_159:\n\tsub.s!\t0, r4, r5\n\tjump.eq\t@.BB31_47\n\tshl.s\t5, r3, r3\n\tptr.add\tr1, r3, r1\n\tadd\tr2, r3, r3\n\tshl.s\t3, r4, r4\n\tld.1\tr3, r5\n\tshl\tr5, r4, r5\n\tshr\tr5, r4, r5\n\tld\tr1, r1\n\tsub\t256, r4, r4\n\tshr\tr1, r4, r1\n\tshl\tr1, r4, r1\n\tor\tr1, r5, r1\n\tst.1\tr3, r1\n.BB31_47:\n\tadd\t@CPI31_0[0], r0, r1\n\tadd\tstack[@returndatasize], r0, r3\n\tsub.s!\t@CPI31_0[0], r3, r4\n\tadd.ge\tr1, r0, r3\n\tsub.s!\t@CPI31_0[0], r2, r4\n\tadd.lt\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t96, r3, r2\n\tor\tr2, r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB31_151:\n\tld.1\t64, r2\n\tadd\tr2, r0, stack-[17]\n\tadd\t@CPI31_29[0], r0, r1\n\tst.1\tr2, r1\n\tadd\t4, r2, r1\n\tadd\tstack-[16], r0, r2\n\tnear_call\tr0, @abi_encode_address_address_payable_uint256_13235, @DEFAULT_UNWIND\n\tadd\tstack-[17], r0, r4\n\tsub\tr1, r4, r1\n\tadd\t@CPI31_0[0], r0, r2\n\tsub.s!\t@CPI31_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tsub.s!\t@CPI31_0[0], r4, r3\n\tadd.lt\tr4, r0, r2\n\tshl.s\t64, r2, r2\n\tshl.s\t96, r1, r1\n\tor\tr1, r2, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end31:\n\nabi_encode_uint256_uint256_bool:\n.func_begin32:\n\tsub.s!\t0, r4, r4\n\tadd\t0, r0, r4\n\tadd.ne\t1, r0, r4\n\tadd\t64, r1, r5\n\tst.1\tr5, r4\n\tadd\t32, r1, r4\n\tst.1\tr4, r3\n\tst.1\tr1, r2\n\tadd\t96, r1, r1\n\tret\n.func_end32:\n\nabi_encode_address_address_payable_uint256_13235:\n.func_begin33:\n\tadd\t64, r1, r4\n\tst.1\tr4, r3\n\tand\t@CPI33_0[0], r2, r2\n\tadd\t32, r1, r3\n\tst.1\tr3, r2\n\tst.1\tr1, r0\n\tadd\t96, r1, r1\n\tret\n.func_end33:\n\nabi_encode_address_address_payable_uint256:\n.func_begin34:\n\tadd\t64, r1, r5\n\tst.1\tr5, r4\n\tand\t@CPI34_0[0], r3, r3\n\tadd\t32, r1, r4\n\tst.1\tr4, r3\n\tand\t@CPI34_0[0], r2, r2\n\tst.1\tr1, r2\n\tadd\t96, r1, r1\n\tret\n.func_end34:\n\nabi_encode_uint256_rational_by_rational_by:\n.func_begin35:\n\tst.1.inc\tr1, r2, r2\n\tadd\t64, r1, r3\n\tst.1\tr3, r0\n\tst.1\tr2, r0\n\tadd\t96, r1, r1\n\tret\n.func_end35:\n\nfun_checkSignatures:\n.func_begin36:\n\tnop\tstack+=[3]\n\tld.1.inc\tr2, r3, r4\n\tsub.s!\t64, r3, r5\n\tjump.le\t@.BB36_1\n\tadd\t64, r2, r5\n\tld.1\tr5, r9\n\tld.1\tr4, r5\n\tadd\t65, r2, r2\n\tld.1\tr2, r2\n\tand!\t255, r2, r6\n\tjump.eq\t@.BB36_35\n\tsub.s!\t30, r6, r2\n\tjump.gt\t@.BB36_18\n\tsub.s!\t@CPI36_4[0], r9, r2\n\tadd\tr0, r0, r7\n\tjump.gt\t@.BB36_3\n\tld.1\t64, r2\n\tadd\t96, r2, r3\n\tst.1\tr3, r9\n\tadd\t64, r2, r3\n\tst.1\tr3, r5\n\tadd\t32, r2, r3\n\tst.1\tr3, r6\n\tst.1\tr2, r1\n\tst.1\t0, r0\n\tadd\t@CPI36_2[0], r0, r1\n\tcontext.gas_left\tr3\n\tsub.s!\t@CPI36_2[0], r3, r4\n\tadd.ge\tr1, r0, r3\n\tsub.s!\t@CPI36_2[0], r2, r4\n\tadd.lt\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r3, r2\n\tor\tr2, r1, r1\n\tor\t@CPI36_5[0], r1, r1\n\tadd\t1, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI36_2[0], r3, r3\n\tsub.s!\t32, r3, r4\n\tadd\t32, r0, r4\n\tadd.lt\tr3, r0, r4\n\tand\t31, r4, r5\n\tshr.s!\t5, r4, r4\n\tjump.eq\t@.BB36_70\n\tadd\tr0, r0, r6\n.BB36_8:\n\tshl.s\t5, r6, r7\n\tptr.add\tr1, r7, r8\n\tld\tr8, r8\n\tst.1\tr7, r8\n\tadd\t1, r6, r6\n\tsub!\tr6, r4, r7\n\tjump.lt\t@.BB36_8\n.BB36_70:\n\tsub.s!\t0, r5, r6\n\tjump.eq\t@.BB36_10\n\tshl.s\t3, r5, r5\n\tshl.s\t5, r4, r4\n\tld.1\tr4, r6\n\tshl\tr6, r5, r6\n\tshr\tr6, r5, r6\n\tptr.add\tr1, r4, r7\n\tld\tr7, r7\n\tsub\t256, r5, r5\n\tshr\tr7, r5, r7\n\tshl\tr7, r5, r5\n\tor\tr5, r6, r5\n\tst.1\tr4, r5\n.BB36_10:\n\tadd\tr3, r0, stack[@returndatasize]\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB36_11\n\tld.1\t0, r1\n\tand!\t@CPI36_6[0], r1, r2\n\tadd\tr0, r0, r7\n\tjump.eq\t@.BB36_3\n\tadd\tr1, r0, r7\n\tjump\t@.BB36_3\n.BB36_35:\n\tand\t@CPI36_6[0], r5, r7\n\tsub.s!\t64, r9, r2\n\tjump.le\t@.BB36_36\n\tsub.s\t32, r0, r8\n\tsub!\tr9, r8, r5\n\tjump.ge\t@.BB36_38\n\tadd\tr4, r9, r2\n\tld.1\tr2, r4\n\tadd\tr9, r4, r5\n\tadd\t32, r5, r5\n\tsub!\tr5, r4, r6\n\tadd\t0, r0, r6\n\tadd.lt\t1, r0, r6\n\tand!\t1, r6, r6\n\tjump.ne\t@.BB36_38\n\tld.1\t64, r10\n\tsub!\tr5, r3, r5\n\tjump.gt\t@.BB36_41\n\tadd\t36, r10, r3\n\tadd\t64, r0, r4\n\tst.1\tr3, r4\n\tadd\t@CPI36_7[0], r0, r3\n\tst.1\tr10, r3\n\tadd\t4, r10, r3\n\tst.1\tr3, r1\n\tld.1\tr2, r1\n\tadd\t68, r10, r3\n\tst.1\tr3, r1\n\tadd\t100, r10, r3\n\tsub.s!\t0, r1, r4\n\tjump.eq\t@.BB36_45\n\tadd\tr0, r0, r4\n.BB36_44:\n\tadd\tr4, r3, r5\n\tadd\t32, r4, r4\n\tadd\tr4, r2, r6\n\tld.1\tr6, r6\n\tst.1\tr5, r6\n\tsub!\tr4, r1, r5\n\tjump.lt\t@.BB36_44\n.BB36_45:\n\tadd\tr1, r3, r3\n\tst.1\tr3, r0\n\tcontext.gas_left\tr3\n\tsub.s!\t4, r7, r4\n\tjump.ne\t@.BB36_47\n\tadd\tstack[@returndatasize], r0, r3\n\tsub.s!\t32, r3, r1\n\tadd\t32, r0, r4\n\tadd.lt\tr3, r0, r4\n\tjump\t@.BB36_57\n.BB36_18:\n\tadd\tr6, r0, stack-[1]\n\tadd\tr5, r0, stack-[2]\n\tadd\tr9, r0, stack-[3]\n\tld.1\t64, r2\n\tadd\t32, r2, r3\n\tadd\t@CPI36_0[0], r0, r4\n\tst.1\tr3, r4\n\tadd\t60, r2, r4\n\tst.1\tr4, r1\n\tadd\t60, r0, r1\n\tst.1\tr2, r1\n\tsub.s!\t@CPI36_1[0], r2, r1\n\tjump.ge\t@.BB36_19\n\tadd\t96, r2, r1\n\tst.1\t64, r1\n\tadd\t@CPI36_2[0], r0, r1\n\tsub.s!\t@CPI36_2[0], r3, r4\n\tadd.ge\tr1, r0, r3\n\tshl.s\t64, r3, r3\n\tld.1\tr2, r2\n\tsub.s!\t@CPI36_2[0], r2, r4\n\tadd.ge\tr1, r0, r2\n\tshl.s\t96, r2, r2\n\tor\tr2, r3, r2\n\tcontext.gas_left\tr3\n\tsub.s!\t@CPI36_2[0], r3, r4\n\tadd.lt\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\tr1, r2, r1\n\tor\t@CPI36_3[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB36_21\n\tadd\tstack-[3], r0, r4\n\tsub.s!\t@CPI36_4[0], r4, r2\n\tadd\tr0, r0, r7\n\tadd\tstack-[2], r0, r5\n\tadd\tstack-[1], r0, r6\n\tjump.gt\t@.BB36_3\n\tld\tr1, r1\n\tld.1\t64, r2\n\tadd\t96, r2, r3\n\tst.1\tr3, r4\n\tadd\t64, r2, r3\n\tst.1\tr3, r5\n\tsub.s\t4, r6, r3\n\tadd\t32, r2, r4\n\tst.1\tr4, r3\n\tst.1\tr2, r1\n\tst.1\t0, r0\n\tadd\t@CPI36_2[0], r0, r1\n\tcontext.gas_left\tr3\n\tsub.s!\t@CPI36_2[0], r3, r4\n\tadd.ge\tr1, r0, r3\n\tsub.s!\t@CPI36_2[0], r2, r4\n\tadd.lt\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r3, r2\n\tor\tr2, r1, r1\n\tor\t@CPI36_5[0], r1, r1\n\tadd\t1, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI36_2[0], r3, r3\n\tsub.s!\t32, r3, r4\n\tadd\t32, r0, r4\n\tadd.lt\tr3, r0, r4\n\tand\t31, r4, r5\n\tshr.s!\t5, r4, r4\n\tjump.eq\t@.BB36_68\n\tadd\tr0, r0, r6\n.BB36_25:\n\tshl.s\t5, r6, r7\n\tptr.add\tr1, r7, r8\n\tld\tr8, r8\n\tst.1\tr7, r8\n\tadd\t1, r6, r6\n\tsub!\tr6, r4, r7\n\tjump.lt\t@.BB36_25\n.BB36_68:\n\tsub.s!\t0, r5, r6\n\tjump.eq\t@.BB36_27\n\tshl.s\t3, r5, r5\n\tshl.s\t5, r4, r4\n\tld.1\tr4, r6\n\tshl\tr6, r5, r6\n\tshr\tr6, r5, r6\n\tptr.add\tr1, r4, r7\n\tld\tr7, r7\n\tsub\t256, r5, r5\n\tshr\tr7, r5, r7\n\tshl\tr7, r5, r5\n\tor\tr5, r6, r5\n\tst.1\tr4, r5\n.BB36_27:\n\tadd\tr3, r0, stack[@returndatasize]\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB36_28\n\tld.1\t0, r1\n\tand!\t@CPI36_6[0], r1, r2\n\tadd\tr0, r0, r7\n\tjump.eq\t@.BB36_3\n\tadd\tr1, r0, r7\n\tjump\t@.BB36_3\n.BB36_47:\n\tadd\tr2, r0, stack-[2]\n\tadd\t31, r1, r1\n\tand\tr1, r8, r1\n\tadd\t@CPI36_2[0], r0, r2\n\tsub.s!\t@CPI36_2[0], r10, r4\n\tadd\tr2, r0, r4\n\tadd.lt\tr10, r0, r4\n\tshl.s\t64, r4, r4\n\tadd\t100, r1, r1\n\tsub.s!\t@CPI36_2[0], r1, r5\n\tadd.ge\tr2, r0, r1\n\tshl.s\t96, r1, r1\n\tor\tr1, r4, r1\n\tsub.s!\t@CPI36_2[0], r3, r4\n\tadd.lt\tr3, r0, r2\n\tshl.s\t192, r2, r2\n\tor\tr2, r1, r1\n\tadd\tr7, r0, stack-[3]\n\tadd\tr7, r0, r2\n\tadd\tr10, r0, stack-[1]\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tstack-[1], r0, r10\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI36_2[0], r3, r3\n\tsub.s!\t32, r3, r4\n\tadd\t32, r0, r4\n\tadd.lt\tr3, r0, r4\n\tand\t31, r4, r5\n\tshr.s!\t5, r4, r6\n\tjump.eq\t@.BB36_66\n\tadd\tr0, r0, r7\n.BB36_49:\n\tshl.s\t5, r7, r8\n\tadd\tr10, r8, r9\n\tptr.add\tr1, r8, r8\n\tld\tr8, r8\n\tst.1\tr9, r8\n\tadd\t1, r7, r7\n\tsub!\tr7, r6, r8\n\tjump.lt\t@.BB36_49\n.BB36_66:\n\tsub.s!\t0, r5, r7\n\tjump.eq\t@.BB36_51\n\tshl.s\t5, r6, r6\n\tptr.add\tr1, r6, r7\n\tadd\tr10, r6, r6\n\tshl.s\t3, r5, r5\n\tld.1\tr6, r8\n\tshl\tr8, r5, r8\n\tshr\tr8, r5, r8\n\tld\tr7, r7\n\tsub\t256, r5, r5\n\tshr\tr7, r5, r7\n\tshl\tr7, r5, r5\n\tor\tr5, r8, r5\n\tst.1\tr6, r5\n.BB36_51:\n\tadd\tr3, r0, stack[@returndatasize]\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tadd\tstack-[3], r0, r7\n\tadd\tstack-[2], r0, r2\n\tjump.eq\t@.BB36_52\n.BB36_57:\n\tadd\t31, r4, r1\n\tand\t96, r1, r1\n\tadd\tr1, r10, r5\n\tsub!\tr5, r1, r1\n\tadd\t0, r0, r1\n\tadd.lt\t1, r0, r1\n\tsub.s!\t@CPI36_8[0], r5, r4\n\tjump.gt\t@.BB36_19\n\tand!\t1, r1, r1\n\tjump.ne\t@.BB36_19\n\tst.1\t64, r5\n\tsub.s!\t32, r3, r1\n\tjump.lt\t@.BB36_21\n\tld.1\tr10, r1\n\tand\t@CPI36_9[0], r1, r3\n\tsub!\tr3, r1, r3\n\tjump.ne\t@.BB36_21\n\tsub.s!\t@CPI36_7[0], r1, r1\n\tjump.ne\t@.BB36_62\n.BB36_3:\n\tadd\t50, r0, r1\n\tsload\tr1, r1\n\txor\tr1, r7, r2\n\tand!\t@CPI36_6[0], r2, r2\n\tjump.ne\t@.BB36_63\n\tret\n.BB36_21:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB36_1:\n\tld.1\t64, r1\n\tadd\t68, r1, r2\n\tadd\t@CPI36_17[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t25, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI36_18[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI36_2[0], r0, r2\n\tsub.s!\t@CPI36_2[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI36_16[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB36_63:\n\tand\t@CPI36_6[0], r1, r1\n\tld.1\t64, r2\n\tadd\t36, r2, r3\n\tst.1\tr3, r1\n\tadd\t@CPI36_11[0], r0, r1\n\tst.1\tr2, r1\n\tand\t@CPI36_6[0], r7, r1\n\tadd\t4, r2, r3\n\tst.1\tr3, r1\n\tadd\t@CPI36_2[0], r0, r1\n\tsub.s!\t@CPI36_2[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI36_12[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB36_38:\n\tadd\t@CPI36_13[0], r0, r1\n\tst.1\t0, r1\n\tadd\t17, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI36_14[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB36_19:\n\tadd\t@CPI36_13[0], r0, r1\n\tst.1\t0, r1\n\tadd\t65, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI36_14[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB36_36:\n\tld.1\t64, r2\n\tadd\tr2, r0, stack-[3]\n\tadd\t@CPI36_15[0], r0, r1\n\tst.1\tr2, r1\n\tadd\t4, r2, r1\n\tadd\tr9, r0, r2\n\tnear_call\tr0, @abi_encode_uint256_rational_by_rational_by, @DEFAULT_UNWIND\n\tadd\tstack-[3], r0, r4\n\tsub\tr1, r4, r1\n\tadd\t@CPI36_2[0], r0, r2\n\tsub.s!\t@CPI36_2[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tsub.s!\t@CPI36_2[0], r4, r3\n\tadd.lt\tr4, r0, r2\n\tshl.s\t64, r2, r2\n\tshl.s\t96, r1, r1\n\tor\tr1, r2, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB36_41:\n\tadd\t68, r10, r1\n\tst.1\tr1, r3\n\tadd\t36, r10, r1\n\tst.1\tr1, r4\n\tadd\t@CPI36_15[0], r0, r1\n\tst.1\tr10, r1\n\tadd\t4, r10, r1\n\tst.1\tr1, r9\n\tadd\t@CPI36_2[0], r0, r1\n\tsub.s!\t@CPI36_2[0], r10, r2\n\tadd.lt\tr10, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI36_16[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB36_62:\n\tadd\t@CPI36_10[0], r0, r1\n\tst.1\tr5, r1\n\tadd\t4, r5, r1\n\tadd\tr5, r0, stack-[3]\n\tnear_call\tr0, @abi_encode_bytes, @DEFAULT_UNWIND\n\tadd\tstack-[3], r0, r4\n\tsub\tr1, r4, r1\n\tadd\t@CPI36_2[0], r0, r2\n\tsub.s!\t@CPI36_2[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tsub.s!\t@CPI36_2[0], r4, r3\n\tadd.lt\tr4, r0, r2\n\tshl.s\t64, r2, r2\n\tshl.s\t96, r1, r1\n\tor\tr1, r2, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB36_52:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r3\n\tjump.eq\t@.BB36_65\n\tadd\tr0, r0, r5\n.BB36_54:\n\tshl.s\t5, r5, r6\n\tadd\tr2, r6, r7\n\tptr.add\tr1, r6, r6\n\tld\tr6, r6\n\tst.1\tr7, r6\n\tadd\t1, r5, r5\n\tsub!\tr5, r3, r6\n\tjump.lt\t@.BB36_54\n.BB36_65:\n\tsub.s!\t0, r4, r5\n\tjump.eq\t@.BB36_56\n\tshl.s\t5, r3, r3\n\tptr.add\tr1, r3, r1\n\tadd\tr2, r3, r3\n\tshl.s\t3, r4, r4\n\tld.1\tr3, r5\n\tshl\tr5, r4, r5\n\tshr\tr5, r4, r5\n\tld\tr1, r1\n\tsub\t256, r4, r4\n\tshr\tr1, r4, r1\n\tshl\tr1, r4, r1\n\tor\tr1, r5, r1\n\tst.1\tr3, r1\n.BB36_56:\n\tadd\t@CPI36_2[0], r0, r1\n\tadd\tstack[@returndatasize], r0, r3\n\tsub.s!\t@CPI36_2[0], r3, r4\n\tadd.ge\tr1, r0, r3\n\tsub.s!\t@CPI36_2[0], r2, r4\n\tadd.lt\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t96, r3, r2\n\tor\tr2, r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB36_11:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r3\n\tjump.eq\t@.BB36_69\n\tadd\tr0, r0, r5\n.BB36_13:\n\tshl.s\t5, r5, r6\n\tadd\tr2, r6, r7\n\tptr.add\tr1, r6, r6\n\tld\tr6, r6\n\tst.1\tr7, r6\n\tadd\t1, r5, r5\n\tsub!\tr5, r3, r6\n\tjump.lt\t@.BB36_13\n.BB36_69:\n\tsub.s!\t0, r4, r5\n\tjump.eq\t@.BB36_15\n\tshl.s\t5, r3, r3\n\tptr.add\tr1, r3, r1\n\tadd\tr2, r3, r3\n\tshl.s\t3, r4, r4\n\tld.1\tr3, r5\n\tshl\tr5, r4, r5\n\tshr\tr5, r4, r5\n\tld\tr1, r1\n\tsub\t256, r4, r4\n\tshr\tr1, r4, r1\n\tshl\tr1, r4, r1\n\tor\tr1, r5, r1\n\tst.1\tr3, r1\n.BB36_15:\n\tadd\t@CPI36_2[0], r0, r1\n\tadd\tstack[@returndatasize], r0, r3\n\tsub.s!\t@CPI36_2[0], r3, r4\n\tadd.ge\tr1, r0, r3\n\tsub.s!\t@CPI36_2[0], r2, r4\n\tadd.lt\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t96, r3, r2\n\tor\tr2, r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB36_28:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r3\n\tjump.eq\t@.BB36_67\n\tadd\tr0, r0, r5\n.BB36_30:\n\tshl.s\t5, r5, r6\n\tadd\tr2, r6, r7\n\tptr.add\tr1, r6, r6\n\tld\tr6, r6\n\tst.1\tr7, r6\n\tadd\t1, r5, r5\n\tsub!\tr5, r3, r6\n\tjump.lt\t@.BB36_30\n.BB36_67:\n\tsub.s!\t0, r4, r5\n\tjump.eq\t@.BB36_32\n\tshl.s\t5, r3, r3\n\tptr.add\tr1, r3, r1\n\tadd\tr2, r3, r3\n\tshl.s\t3, r4, r4\n\tld.1\tr3, r5\n\tshl\tr5, r4, r5\n\tshr\tr5, r4, r5\n\tld\tr1, r1\n\tsub\t256, r4, r4\n\tshr\tr1, r4, r1\n\tshl\tr1, r4, r1\n\tor\tr1, r5, r1\n\tst.1\tr3, r1\n.BB36_32:\n\tadd\t@CPI36_2[0], r0, r1\n\tadd\tstack[@returndatasize], r0, r3\n\tsub.s!\t@CPI36_2[0], r3, r4\n\tadd.ge\tr1, r0, r3\n\tsub.s!\t@CPI36_2[0], r2, r4\n\tadd.lt\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t96, r3, r2\n\tor\tr2, r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end36:\n\nfun_getTransactionHash:\n.func_begin37:\n\tnop\tstack+=[10]\n\tadd\tr12, r0, stack-[8]\n\tadd\tr9, r0, stack-[9]\n\tadd\tr8, r0, stack-[10]\n\tld.1\t64, r12\n\tsub.s!\t@CPI37_0[0], r12, r13\n\tjump.ge\t@.BB37_1\n\tadd\t160, r12, r13\n\tst.1\t64, r13\n\tand\t@CPI37_1[0], r1, r1\n\tst.1.inc\tr12, r1, r8\n\tsub.s!\t2, r5, r1\n\tjump.ge\t@.BB37_3\n\tadd\t64, r12, r9\n\tst.1\tr9, r2\n\tadd\tr8, r0, stack-[7]\n\tst.1\tr8, r5\n\tadd\tstack[@calldatasize], r0, r13\n\tsub.s!\t@CPI37_2[0], r4, r2\n\tjump.gt\t@.BB37_1\n\tadd\t63, r4, r2\n\tsub.s\t32, r0, r5\n\tand\tr2, r5, r5\n\tld.1\t64, r2\n\tadd\tr2, r5, r5\n\tsub!\tr5, r2, r14\n\tadd\t0, r0, r14\n\tadd.lt\t1, r0, r14\n\tsub.s!\t@CPI37_2[0], r5, r15\n\tjump.gt\t@.BB37_1\n\tand!\t1, r14, r14\n\tjump.ne\t@.BB37_1\n\tst.1\t64, r5\n\tst.1.inc\tr2, r4, r5\n\tadd\tr4, r3, r14\n\tsub!\tr14, r13, r13\n\tjump.gt\t@.BB37_8\n\tand\t31, r4, r13\n\tptr.add\tstack[@ptr_calldata], r3, r3\n\tshr.s!\t5, r4, r14\n\tjump.eq\t@.BB37_24\n\tadd\tr0, r0, r15\n.BB37_11:\n\tshl.s\t5, r15, r1\n\tadd\tr5, r1, r8\n\tptr.add\tr3, r1, r1\n\tld\tr1, r1\n\tst.1\tr8, r1\n\tadd\t1, r15, r15\n\tsub!\tr15, r14, r1\n\tjump.lt\t@.BB37_11\n.BB37_24:\n\tsub.s!\t0, r13, r1\n\tjump.eq\t@.BB37_13\n\tshl.s\t5, r14, r1\n\tptr.add\tr3, r1, r3\n\tadd\tr5, r1, r1\n\tshl.s\t3, r13, r8\n\tld.1\tr1, r13\n\tshl\tr13, r8, r13\n\tshr\tr13, r8, r13\n\tld\tr3, r3\n\tsub\t256, r8, r8\n\tshr\tr3, r8, r3\n\tshl\tr3, r8, r3\n\tor\tr3, r13, r3\n\tst.1\tr1, r3\n.BB37_13:\n\tadd\tr5, r4, r1\n\tst.1\tr1, r0\n\tadd\t128, r12, r1\n\tadd\tr1, r0, stack-[6]\n\tst.1\tr1, r6\n\tadd\t96, r12, r3\n\tst.1\tr3, r2\n\tld.1\t64, r2\n\tsub.s!\t@CPI37_3[0], r2, r1\n\tjump.gt\t@.BB37_1\n\tadd\t160, r2, r1\n\tst.1\t64, r1\n\tand\t@CPI37_1[0], r11, r1\n\tadd\t128, r2, r4\n\tadd\tr4, r0, stack-[3]\n\tst.1\tr4, r1\n\tand\t@CPI37_1[0], r10, r1\n\tadd\t96, r2, r4\n\tadd\tr4, r0, stack-[1]\n\tst.1\tr4, r1\n\tadd\t64, r2, r4\n\tadd\tstack-[9], r0, r1\n\tadd\tr4, r0, stack-[4]\n\tst.1\tr4, r1\n\tadd\tr2, r0, stack-[9]\n\tst.1.inc\tr2, r7, r2\n\tadd\tstack-[10], r0, r1\n\tadd\tr2, r0, stack-[2]\n\tst.1\tr2, r1\n\tld.1\tr3, r1\n\tadd\t32, r1, r2\n\tadd\t@CPI37_4[0], r0, r3\n\tsub.s!\t@CPI37_4[0], r2, r4\n\tadd.ge\tr3, r0, r2\n\tshl.s\t64, r2, r2\n\tld.1\tr1, r1\n\tsub.s!\t@CPI37_4[0], r1, r4\n\tadd.ge\tr3, r0, r1\n\tshl.s\t96, r1, r1\n\tor\tr1, r2, r1\n\tld.1\tr9, r2\n\tadd\tr2, r0, stack-[5]\n\tld.1\tr12, r2\n\tadd\tr2, r0, stack-[10]\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI37_4[0], r2, r4\n\tadd.ge\tr3, r0, r2\n\tshl.s\t192, r2, r2\n\tor\tr2, r1, r1\n\tor\t@CPI37_5[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tstack-[10], r0, r3\n\tand\t@CPI37_1[0], r3, r3\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB37_8\n\tadd\tstack-[7], r0, r2\n\tld.1\tr2, r2\n\tsub.s!\t1, r2, r4\n\tjump.gt\t@.BB37_3\n\tadd\tstack-[1], r0, r4\n\tld.1\tr4, r4\n\tadd\tstack-[3], r0, r5\n\tld.1\tr5, r5\n\tld\tr1, r6\n\tadd\tstack-[6], r0, r1\n\tld.1\tr1, r7\n\tadd\tstack-[9], r0, r1\n\tld.1\tr1, r8\n\tadd\tstack-[2], r0, r1\n\tld.1\tr1, r9\n\tadd\tstack-[4], r0, r1\n\tld.1\tr1, r10\n\tld.1\t64, r1\n\tadd\t384, r1, r11\n\tadd\tstack-[8], r0, r12\n\tst.1\tr11, r12\n\tadd\t288, r1, r11\n\tst.1\tr11, r10\n\tadd\t256, r1, r10\n\tst.1\tr10, r9\n\tadd\t224, r1, r9\n\tst.1\tr9, r8\n\tadd\t192, r1, r8\n\tst.1\tr8, r7\n\tadd\t160, r1, r7\n\tst.1\tr7, r2\n\tadd\t128, r1, r2\n\tst.1\tr2, r6\n\tadd\t96, r1, r2\n\tadd\tstack-[5], r0, r6\n\tst.1\tr2, r6\n\tadd\t64, r1, r2\n\tst.1\tr2, r3\n\tand\t@CPI37_1[0], r5, r2\n\tadd\t352, r1, r3\n\tst.1\tr3, r2\n\tand\t@CPI37_1[0], r4, r2\n\tadd\t320, r1, r3\n\tst.1\tr3, r2\n\tadd\t32, r1, r2\n\tadd\t@CPI37_6[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t384, r0, r3\n\tst.1\tr1, r3\n\tsub.s!\t@CPI37_7[0], r1, r3\n\tjump.gt\t@.BB37_1\n\tadd\t416, r1, r3\n\tst.1\t64, r3\n\tadd\t@CPI37_4[0], r0, r3\n\tsub.s!\t@CPI37_4[0], r2, r4\n\tadd.ge\tr3, r0, r2\n\tshl.s\t64, r2, r2\n\tld.1\tr1, r1\n\tsub.s!\t@CPI37_4[0], r1, r4\n\tadd.ge\tr3, r0, r1\n\tshl.s\t96, r1, r1\n\tor\tr1, r2, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI37_4[0], r2, r4\n\tadd.ge\tr3, r0, r2\n\tshl.s\t192, r2, r2\n\tor\tr2, r1, r1\n\tor\t@CPI37_5[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB37_8\n\tld\tr1, r1\n\tadd\tr1, r0, stack-[8]\n\tld.1\t64, r1\n\tadd\tr1, r0, stack-[10]\n\tadd\t32, r1, r2\n\tadd\t@CPI37_8[0], r0, r1\n\tadd\tr2, r0, stack-[9]\n\tst.1\tr2, r1\n\tadd\t@CPI37_9[0], r0, r1\n\tst.2\t0, r1\n\tadd\t@CPI37_4[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI37_4[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI37_10[0], r1, r1\n\tadd\t32779, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB37_8\n\tld\tr1, r1\n\tadd\tstack-[10], r0, r4\n\tadd\t96, r4, r2\n\tcontext.this\tr3\n\tst.1\tr2, r3\n\tadd\t64, r4, r2\n\tst.1\tr2, r1\n\tadd\t96, r0, r1\n\tst.1\tr4, r1\n\tsub.s!\t@CPI37_11[0], r4, r1\n\tjump.gt\t@.BB37_1\n\tadd\t128, r4, r1\n\tst.1\t64, r1\n\tadd\t@CPI37_4[0], r0, r1\n\tadd\tstack-[9], r0, r3\n\tsub.s!\t@CPI37_4[0], r3, r2\n\tadd\tr1, r0, r2\n\tadd.lt\tr3, r0, r2\n\tshl.s\t64, r2, r2\n\tld.1\tr4, r3\n\tsub.s!\t@CPI37_4[0], r3, r4\n\tadd.ge\tr1, r0, r3\n\tshl.s\t96, r3, r3\n\tor\tr3, r2, r2\n\tcontext.gas_left\tr3\n\tsub.s!\t@CPI37_4[0], r3, r4\n\tadd.lt\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\tr1, r2, r1\n\tor\t@CPI37_5[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB37_8\n\tld\tr1, r3\n\tld.1\t64, r1\n\tadd\t32, r1, r2\n\tadd\t@CPI37_12[0], r0, r4\n\tst.1\tr2, r4\n\tadd\t33, r1, r4\n\tadd\t@CPI37_13[0], r0, r5\n\tst.1\tr4, r5\n\tadd\t66, r1, r4\n\tadd\tstack-[8], r0, r5\n\tst.1\tr4, r5\n\tadd\t34, r1, r4\n\tst.1\tr4, r3\n\tadd\t66, r0, r3\n\tst.1\tr1, r3\n\tsub.s!\t@CPI37_11[0], r1, r3\n\tjump.gt\t@.BB37_1\n\tadd\t128, r1, r3\n\tst.1\t64, r3\n\tadd\t@CPI37_4[0], r0, r3\n\tsub.s!\t@CPI37_4[0], r2, r4\n\tadd.ge\tr3, r0, r2\n\tshl.s\t64, r2, r2\n\tld.1\tr1, r1\n\tsub.s!\t@CPI37_4[0], r1, r4\n\tadd.ge\tr3, r0, r1\n\tshl.s\t96, r1, r1\n\tor\tr1, r2, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI37_4[0], r2, r4\n\tadd.ge\tr3, r0, r2\n\tshl.s\t192, r2, r2\n\tor\tr2, r1, r1\n\tor\t@CPI37_5[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB37_8\n\tld\tr1, r1\n\tret\n.BB37_1:\n\tadd\t@CPI37_14[0], r0, r1\n\tst.1\t0, r1\n\tadd\t65, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI37_15[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB37_8:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB37_3:\n\tadd\t@CPI37_14[0], r0, r1\n\tst.1\t0, r1\n\tadd\t33, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI37_15[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end37:\n\nfun_encodeTransactionData:\n.func_begin38:\n\tnop\tstack+=[6]\n\tadd\tr3, r0, stack-[4]\n\tadd\tr2, r0, stack-[2]\n\tadd\t96, r1, r2\n\tld.1\tr2, r5\n\tadd\t32, r5, r2\n\tadd\t@CPI38_0[0], r0, r3\n\tsub.s!\t@CPI38_0[0], r2, r4\n\tadd.ge\tr3, r0, r2\n\tshl.s\t64, r2, r2\n\tld.1\tr5, r5\n\tsub.s!\t@CPI38_0[0], r5, r4\n\tadd\tr3, r0, r4\n\tadd.lt\tr5, r0, r4\n\tshl.s\t96, r4, r4\n\tor\tr4, r2, r5\n\tadd\t64, r1, r2\n\tld.1\tr2, r2\n\tadd\tr2, r0, stack-[3]\n\tadd\tr1, r0, stack-[1]\n\tld.1.inc\tr1, r2, r1\n\tadd\tr2, r0, stack-[6]\n\tadd\tr1, r0, stack-[5]\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI38_0[0], r2, r4\n\tadd.ge\tr3, r0, r2\n\tshl.s\t192, r2, r2\n\tor\tr2, r5, r1\n\tor\t@CPI38_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tstack-[6], r0, r3\n\tand\t@CPI38_2[0], r3, r3\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB38_1\n\tadd\tstack-[5], r0, r2\n\tld.1\tr2, r4\n\tsub.s!\t2, r4, r2\n\tjump.ge\t@.BB38_3\n\tadd\tstack-[1], r0, r2\n\tadd\t128, r2, r5\n\tadd\tstack-[2], r0, r10\n\tadd\t96, r10, r2\n\tld.1\tr2, r2\n\tadd\t128, r10, r6\n\tld.1\tr6, r6\n\tld\tr1, r7\n\tld.1\tr5, r5\n\tadd\t32, r10, r1\n\tld.1\tr1, r8\n\tld.1\tr10, r9\n\tadd\t64, r10, r1\n\tld.1\tr1, r10\n\tld.1\t64, r1\n\tadd\t384, r1, r11\n\tadd\tstack-[4], r0, r12\n\tst.1\tr11, r12\n\tadd\t288, r1, r11\n\tst.1\tr11, r10\n\tadd\t256, r1, r10\n\tst.1\tr10, r8\n\tadd\t224, r1, r8\n\tst.1\tr8, r9\n\tadd\t192, r1, r8\n\tst.1\tr8, r5\n\tadd\t160, r1, r5\n\tst.1\tr5, r4\n\tadd\t128, r1, r4\n\tst.1\tr4, r7\n\tadd\t96, r1, r4\n\tadd\tstack-[3], r0, r5\n\tst.1\tr4, r5\n\tadd\t64, r1, r4\n\tst.1\tr4, r3\n\tand\t@CPI38_2[0], r6, r3\n\tadd\t352, r1, r4\n\tst.1\tr4, r3\n\tand\t@CPI38_2[0], r2, r2\n\tadd\t320, r1, r3\n\tst.1\tr3, r2\n\tadd\t32, r1, r2\n\tadd\t@CPI38_3[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t384, r0, r3\n\tst.1\tr1, r3\n\tsub.s!\t@CPI38_4[0], r1, r3\n\tjump.ge\t@.BB38_5\n\tadd\t416, r1, r3\n\tst.1\t64, r3\n\tadd\t@CPI38_0[0], r0, r3\n\tsub.s!\t@CPI38_0[0], r2, r4\n\tadd.ge\tr3, r0, r2\n\tshl.s\t64, r2, r2\n\tld.1\tr1, r1\n\tsub.s!\t@CPI38_0[0], r1, r4\n\tadd.ge\tr3, r0, r1\n\tshl.s\t96, r1, r1\n\tor\tr1, r2, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI38_0[0], r2, r4\n\tadd.ge\tr3, r0, r2\n\tshl.s\t192, r2, r2\n\tor\tr2, r1, r1\n\tor\t@CPI38_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB38_1\n\tld\tr1, r1\n\tadd\tr1, r0, stack-[4]\n\tld.1\t64, r1\n\tadd\tr1, r0, stack-[6]\n\tadd\t32, r1, r2\n\tadd\t@CPI38_5[0], r0, r1\n\tadd\tr2, r0, stack-[5]\n\tst.1\tr2, r1\n\tadd\t@CPI38_6[0], r0, r1\n\tst.2\t0, r1\n\tadd\t@CPI38_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI38_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI38_7[0], r1, r1\n\tadd\t32779, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB38_1\n\tld\tr1, r1\n\tadd\tstack-[6], r0, r4\n\tadd\t96, r4, r2\n\tcontext.this\tr3\n\tst.1\tr2, r3\n\tadd\t64, r4, r2\n\tst.1\tr2, r1\n\tadd\t96, r0, r1\n\tst.1\tr4, r1\n\tsub.s!\t@CPI38_8[0], r4, r1\n\tjump.gt\t@.BB38_5\n\tadd\t128, r4, r1\n\tst.1\t64, r1\n\tadd\t@CPI38_0[0], r0, r1\n\tadd\tstack-[5], r0, r3\n\tsub.s!\t@CPI38_0[0], r3, r2\n\tadd\tr1, r0, r2\n\tadd.lt\tr3, r0, r2\n\tshl.s\t64, r2, r2\n\tld.1\tr4, r3\n\tsub.s!\t@CPI38_0[0], r3, r4\n\tadd.ge\tr1, r0, r3\n\tshl.s\t96, r3, r3\n\tor\tr3, r2, r2\n\tcontext.gas_left\tr3\n\tsub.s!\t@CPI38_0[0], r3, r4\n\tadd.lt\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\tr1, r2, r1\n\tor\t@CPI38_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB38_1\n\tld\tr1, r2\n\tld.1\t64, r1\n\tadd\t32, r1, r3\n\tadd\t@CPI38_9[0], r0, r4\n\tst.1\tr3, r4\n\tadd\t33, r1, r3\n\tadd\t@CPI38_10[0], r0, r4\n\tst.1\tr3, r4\n\tadd\t66, r1, r3\n\tadd\tstack-[4], r0, r4\n\tst.1\tr3, r4\n\tadd\t34, r1, r3\n\tst.1\tr3, r2\n\tadd\t66, r0, r2\n\tst.1\tr1, r2\n\tsub.s!\t@CPI38_8[0], r1, r2\n\tjump.gt\t@.BB38_5\n\tadd\t128, r1, r2\n\tst.1\t64, r2\n\tret\n.BB38_1:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB38_5:\n\tadd\t@CPI38_11[0], r0, r1\n\tst.1\t0, r1\n\tadd\t65, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI38_12[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB38_3:\n\tadd\t@CPI38_11[0], r0, r1\n\tst.1\t0, r1\n\tadd\t33, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI38_12[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end38:\n\nfun_requireFromEntryPointOrOwner:\n.func_begin39:\n\tadd\t@CPI39_0[0], r0, r1\n\tst.2\t0, r1\n\tcontext.code_source\tr1\n\tst.2\t4, r1\n\tst.2\t36, r0\n\tadd\t@CPI39_1[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI39_1[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI39_2[0], r1, r1\n\tadd\t32773, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB39_1\n\tld\tr1, r1\n\tand\t@CPI39_3[0], r1, r2\n\tcontext.caller\tr1\n\tsub!\tr1, r2, r2\n\tjump.eq\t@.BB39_5\n\tadd\t50, r0, r2\n\tsload\tr2, r2\n\tand\t@CPI39_3[0], r2, r2\n\tsub!\tr1, r2, r2\n\tjump.ne\t@.BB39_4\n.BB39_5:\n\tret\n.BB39_1:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB39_4:\n\tld.1\t64, r2\n\tadd\t@CPI39_4[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t4, r2, r3\n\tst.1\tr3, r1\n\tadd\t@CPI39_1[0], r0, r1\n\tsub.s!\t@CPI39_1[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI39_5[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end39:\n\nfun_call:\n.func_begin40:\n\tadd\tr2, r0, r5\n\tadd\tr1, r0, r4\n\tld.1.inc\tr3, r3, r2\n\tcontext.gas_left\tr1\n\tsub.s!\t4, r4, r6\n\tjump.ne\t@.BB40_5\n\tld.1\t64, r1\n\tptr.add\tstack[@ptr_return_data], r0, r2\n\tadd\tstack[@returndatasize], r0, r4\n\tand\t31, r4, r3\n\tshr.s!\t5, r4, r4\n\tjump.eq\t@.BB40_19\n\tadd\tr0, r0, r5\n.BB40_3:\n\tshl.s\t5, r5, r6\n\tadd\tr1, r6, r7\n\tptr.add\tr2, r6, r6\n\tld\tr6, r6\n\tst.1\tr7, r6\n\tadd\t1, r5, r5\n\tsub!\tr5, r4, r6\n\tjump.lt\t@.BB40_3\n.BB40_19:\n\tsub.s!\t0, r3, r5\n\tjump.eq\t@.BB40_17\n\tshl.s\t5, r4, r4\n\tptr.add\tr2, r4, r2\n\tadd\tr1, r4, r1\n\tshl.s\t3, r3, r3\n\tld.1\tr1, r4\n\tshl\tr4, r3, r4\n\tshr\tr4, r3, r4\n\tld\tr2, r2\n\tsub\t256, r3, r3\n\tshr\tr2, r3, r2\n\tshl\tr2, r3, r2\n\tor\tr2, r4, r2\n\tst.1\tr1, r2\n\tjump\t@.BB40_17\n.BB40_5:\n\tadd\t@CPI40_0[0], r0, r6\n\tsub.s!\t@CPI40_0[0], r3, r7\n\tadd.ge\tr6, r0, r3\n\tshl.s\t96, r3, r3\n\tsub.s!\t@CPI40_0[0], r2, r7\n\tadd.ge\tr6, r0, r2\n\tshl.s\t64, r2, r2\n\tor\tr3, r2, r2\n\tsub.s!\t@CPI40_0[0], r1, r3\n\tadd.ge\tr6, r0, r1\n\tshl.s\t192, r1, r1\n\tor\tr2, r1, r1\n\tsub.s!\t0, r5, r2\n\tjump.eq\t@.BB40_6\n\tor\t@CPI40_1[0], r1, r1\n\tadd\t32777, r0, r2\n\tadd\tr5, r0, r3\n\tadd\tr0, r0, r5\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r5\n\tand\t31, r5, r4\n\tand\t@CPI40_0[0], r5, stack[@returndatasize]\n\tld.1\t64, r3\n\tand\t@CPI40_0[0], r5, r5\n\tshr.s!\t5, r5, r5\n\tjump.eq\t@.BB40_18\n\tadd\tr0, r0, r6\n.BB40_13:\n\tshl.s\t5, r6, r7\n\tadd\tr3, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB40_13\n.BB40_18:\n\tsub.s!\t0, r4, r6\n\tjump.eq\t@.BB40_15\n\tshl.s\t5, r5, r5\n\tptr.add\tr1, r5, r1\n\tadd\tr3, r5, r5\n\tshl.s\t3, r4, r4\n\tld.1\tr5, r6\n\tshl\tr6, r4, r6\n\tshr\tr6, r4, r6\n\tld\tr1, r1\n\tsub\t256, r4, r4\n\tshr\tr1, r4, r1\n\tshl\tr1, r4, r1\n\tor\tr1, r6, r1\n\tst.1\tr5, r1\n.BB40_15:\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB40_16\n.BB40_17:\n\tret\n.BB40_6:\n\tadd\tr4, r0, r2\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r5\n\tand\t31, r5, r4\n\tand\t@CPI40_0[0], r5, stack[@returndatasize]\n\tld.1\t64, r3\n\tand\t@CPI40_0[0], r5, r5\n\tshr.s!\t5, r5, r5\n\tjump.eq\t@.BB40_20\n\tadd\tr0, r0, r6\n.BB40_8:\n\tshl.s\t5, r6, r7\n\tadd\tr3, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB40_8\n.BB40_20:\n\tsub.s!\t0, r4, r6\n\tjump.eq\t@.BB40_10\n\tshl.s\t5, r5, r5\n\tptr.add\tr1, r5, r1\n\tadd\tr3, r5, r5\n\tshl.s\t3, r4, r4\n\tld.1\tr5, r6\n\tshl\tr6, r4, r6\n\tshr\tr6, r4, r6\n\tld\tr1, r1\n\tsub\t256, r4, r4\n\tshr\tr1, r4, r1\n\tshl\tr1, r4, r1\n\tor\tr1, r6, r1\n\tst.1\tr5, r1\n.BB40_10:\n\tand!\t1, r2, r1\n\tjump.ne\t@.BB40_17\n.BB40_16:\n\tadd\t@CPI40_0[0], r0, r1\n\tadd\tstack[@returndatasize], r0, r2\n\tsub.s!\t@CPI40_0[0], r2, r4\n\tadd.ge\tr1, r0, r2\n\tsub.s!\t@CPI40_0[0], r3, r4\n\tadd.lt\tr3, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t96, r2, r2\n\tor\tr2, r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end40:\n\nmapping_index_access_mapping_address_address_of_address_13223:\n.func_begin41:\n\tand\t@CPI41_0[0], r1, r1\n\tst.1\t0, r1\n\tst.1\t32, r0\n\tadd\t@CPI41_1[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI41_1[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI41_2[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB41_1\n\tld\tr1, r1\n\tret\n.BB41_1:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end41:\n\nabi_encode_stringliteral_520d:\n.func_begin42:\n\tadd\t96, r1, r2\n\tadd\t@CPI42_0[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t64, r1, r2\n\tadd\t@CPI42_1[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t32, r1, r2\n\tadd\t34, r0, r3\n\tst.1\tr2, r3\n\tadd\t32, r0, r2\n\tst.1\tr1, r2\n\tadd\t128, r1, r1\n\tret\n.func_end42:\n\nabi_encode_stringliteral:\n.func_begin43:\n\tadd\t64, r1, r2\n\tadd\t@CPI43_0[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t32, r1, r2\n\tadd\t31, r0, r3\n\tst.1\tr2, r3\n\tadd\t32, r0, r2\n\tst.1\tr1, r2\n\tadd\t96, r1, r1\n\tret\n.func_end43:\n\nabi_encode_tuple_stringliteral:\n.func_begin44:\n\tadd\t64, r1, r2\n\tadd\t@CPI44_0[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t32, r1, r2\n\tadd\t24, r0, r3\n\tst.1\tr2, r3\n\tadd\t32, r0, r2\n\tst.1\tr1, r2\n\tadd\t96, r1, r1\n\tret\n.func_end44:\n\nfun_isValidSignature:\n.func_begin45:\n\tnop\tstack+=[3]\n\tadd\tr2, r0, stack-[3]\n\tadd\tr1, r0, stack-[2]\n\tadd\t50, r0, r1\n\tsload\tr1, r1\n\tadd\t@CPI45_0[0], r0, r2\n\tst.2\t0, r2\n\tand\t@CPI45_1[0], r1, r1\n\tadd\tr1, r0, stack-[1]\n\tst.2\t4, r1\n\tadd\t@CPI45_2[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI45_2[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI45_3[0], r1, r1\n\tadd\t32770, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB45_1\n\tld\tr1, r1\n\tsub.s!\t0, r1, r1\n\tjump.eq\t@.BB45_9\n\tld.1\t64, r10\n\tadd\t36, r10, r1\n\tadd\t64, r0, r2\n\tst.1\tr1, r2\n\tadd\t@CPI45_4[0], r0, r1\n\tst.1\tr10, r1\n\tadd\t4, r10, r1\n\tadd\tstack-[2], r0, r2\n\tst.1\tr1, r2\n\tadd\tstack-[3], r0, r7\n\tld.1\tr7, r1\n\tadd\t68, r10, r2\n\tst.1\tr2, r1\n\tadd\t100, r10, r6\n\tsub.s!\t0, r1, r3\n\tadd\tstack-[1], r0, r2\n\tjump.eq\t@.BB45_7\n\tadd\tr0, r0, r3\n.BB45_6:\n\tadd\tr3, r6, r4\n\tadd\t32, r3, r3\n\tadd\tr3, r7, r5\n\tld.1\tr5, r5\n\tst.1\tr4, r5\n\tsub!\tr3, r1, r4\n\tjump.lt\t@.BB45_6\n.BB45_7:\n\tadd\tr1, r6, r3\n\tst.1\tr3, r0\n\tcontext.gas_left\tr6\n\tsub.s!\t4, r2, r3\n\tjump.ne\t@.BB45_26\n\tadd\tstack[@returndatasize], r0, r3\n\tsub.s!\t32, r3, r1\n\tadd\t32, r0, r4\n\tadd.lt\tr3, r0, r4\n\tjump\t@.BB45_36\n.BB45_9:\n\tadd\tstack-[3], r0, r4\n\tld.1.inc\tr4, r2, r1\n\tsub.s!\t65, r2, r2\n\tjump.ne\t@.BB45_23\n\tadd\t64, r4, r2\n\tld.1\tr2, r2\n\tsub.s!\t@CPI45_10[0], r2, r3\n\tjump.gt\t@.BB45_22\n\tadd\t96, r4, r3\n\tld.1\tr3, r3\n\tld.1\tr1, r1\n\tld.1\t64, r4\n\tadd\t96, r4, r5\n\tst.1\tr5, r2\n\tadd\t64, r4, r2\n\tst.1\tr2, r1\n\tshr.s\t248, r3, r1\n\tadd\t32, r4, r2\n\tst.1\tr2, r1\n\tadd\tstack-[2], r0, r1\n\tst.1\tr4, r1\n\tst.1\t0, r0\n\tadd\t@CPI45_2[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI45_2[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tsub.s!\t@CPI45_2[0], r4, r3\n\tadd.lt\tr4, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r2, r2\n\tor\tr2, r1, r1\n\tor\t@CPI45_11[0], r1, r1\n\tadd\t1, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI45_2[0], r3, r3\n\tsub.s!\t32, r3, r4\n\tadd\t32, r0, r4\n\tadd.lt\tr3, r0, r4\n\tand\t31, r4, r5\n\tshr.s!\t5, r4, r4\n\tjump.eq\t@.BB45_44\n\tadd\tr0, r0, r6\n.BB45_13:\n\tshl.s\t5, r6, r7\n\tptr.add\tr1, r7, r8\n\tld\tr8, r8\n\tst.1\tr7, r8\n\tadd\t1, r6, r6\n\tsub!\tr6, r4, r7\n\tjump.lt\t@.BB45_13\n.BB45_44:\n\tsub.s!\t0, r5, r6\n\tjump.eq\t@.BB45_15\n\tshl.s\t3, r5, r5\n\tshl.s\t5, r4, r4\n\tld.1\tr4, r6\n\tshl\tr6, r5, r6\n\tshr\tr6, r5, r6\n\tptr.add\tr1, r4, r7\n\tld\tr7, r7\n\tsub\t256, r5, r5\n\tshr\tr7, r5, r7\n\tshl\tr7, r5, r5\n\tor\tr5, r6, r5\n\tst.1\tr4, r5\n.BB45_15:\n\tadd\tr3, r0, stack[@returndatasize]\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB45_16\n\tld.1\t0, r1\n\tand!\t@CPI45_1[0], r1, r1\n\tadd\tstack-[1], r0, r4\n\tjump.eq\t@.BB45_24\n\tadd\t@CPI45_6[0], r0, r2\n\tadd\t@CPI45_4[0], r0, r3\n\tsub!\tr4, r1, r1\n\tadd\tr2, r0, r1\n\tadd.eq\tr3, r0, r1\n\tjump\t@.BB45_3\n.BB45_26:\n\tadd\t31, r1, r1\n\tsub.s\t32, r0, r3\n\tand\tr1, r3, r1\n\tadd\t@CPI45_2[0], r0, r3\n\tsub.s!\t@CPI45_2[0], r10, r4\n\tadd\tr3, r0, r4\n\tadd.lt\tr10, r0, r4\n\tshl.s\t64, r4, r4\n\tadd\t100, r1, r1\n\tsub.s!\t@CPI45_2[0], r1, r5\n\tadd.ge\tr3, r0, r1\n\tshl.s\t96, r1, r1\n\tor\tr1, r4, r1\n\tsub.s!\t@CPI45_2[0], r6, r4\n\tadd.lt\tr6, r0, r3\n\tshl.s\t192, r3, r3\n\tor\tr3, r1, r1\n\tadd\tr10, r0, stack-[3]\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tstack-[3], r0, r10\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI45_2[0], r3, r3\n\tsub.s!\t32, r3, r4\n\tadd\t32, r0, r4\n\tadd.lt\tr3, r0, r4\n\tand\t31, r4, r5\n\tshr.s!\t5, r4, r6\n\tjump.eq\t@.BB45_42\n\tadd\tr0, r0, r7\n.BB45_28:\n\tshl.s\t5, r7, r8\n\tadd\tr10, r8, r9\n\tptr.add\tr1, r8, r8\n\tld\tr8, r8\n\tst.1\tr9, r8\n\tadd\t1, r7, r7\n\tsub!\tr7, r6, r8\n\tjump.lt\t@.BB45_28\n.BB45_42:\n\tsub.s!\t0, r5, r7\n\tjump.eq\t@.BB45_30\n\tshl.s\t5, r6, r6\n\tptr.add\tr1, r6, r7\n\tadd\tr10, r6, r6\n\tshl.s\t3, r5, r5\n\tld.1\tr6, r8\n\tshl\tr8, r5, r8\n\tshr\tr8, r5, r8\n\tld\tr7, r7\n\tsub\t256, r5, r5\n\tshr\tr7, r5, r7\n\tshl\tr7, r5, r5\n\tor\tr5, r8, r5\n\tst.1\tr6, r5\n.BB45_30:\n\tadd\tr3, r0, stack[@returndatasize]\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB45_31\n.BB45_36:\n\tadd\t31, r4, r1\n\tand\t96, r1, r2\n\tadd\tr2, r10, r1\n\tsub!\tr1, r2, r2\n\tadd\t0, r0, r2\n\tadd.lt\t1, r0, r2\n\tsub.s!\t@CPI45_5[0], r1, r4\n\tjump.gt\t@.BB45_38\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB45_38\n\tst.1\t64, r1\n\tsub.s!\t32, r3, r1\n\tjump.lt\t@.BB45_1\n\tld.1\tr10, r1\n\tand\t@CPI45_6[0], r1, r2\n\tsub!\tr2, r1, r2\n\tjump.ne\t@.BB45_1\n.BB45_3:\n\tret\n.BB45_1:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB45_38:\n\tadd\t@CPI45_7[0], r0, r1\n\tst.1\t0, r1\n\tadd\t65, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI45_8[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB45_23:\n\tld.1\t64, r2\n\tadd\tr2, r0, stack-[3]\n\tadd\t@CPI45_9[0], r0, r1\n\tst.1\tr2, r1\n\tadd\t4, r2, r1\n\tnear_call\tr0, @abi_encode_stringliteral, @DEFAULT_UNWIND\n\tadd\tstack-[3], r0, r4\n\tsub\tr1, r4, r1\n\tadd\t@CPI45_2[0], r0, r2\n\tsub.s!\t@CPI45_2[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tsub.s!\t@CPI45_2[0], r4, r3\n\tadd.lt\tr4, r0, r2\n\tshl.s\t64, r2, r2\n\tshl.s\t96, r1, r1\n\tor\tr1, r2, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB45_22:\n\tld.1\t64, r2\n\tadd\tr2, r0, stack-[3]\n\tadd\t@CPI45_9[0], r0, r1\n\tst.1\tr2, r1\n\tadd\t4, r2, r1\n\tnear_call\tr0, @abi_encode_stringliteral_520d, @DEFAULT_UNWIND\n\tadd\tstack-[3], r0, r4\n\tsub\tr1, r4, r1\n\tadd\t@CPI45_2[0], r0, r2\n\tsub.s!\t@CPI45_2[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tsub.s!\t@CPI45_2[0], r4, r3\n\tadd.lt\tr4, r0, r2\n\tshl.s\t64, r2, r2\n\tshl.s\t96, r1, r1\n\tor\tr1, r2, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB45_16:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r3\n\tjump.eq\t@.BB45_43\n\tadd\tr0, r0, r5\n.BB45_18:\n\tshl.s\t5, r5, r6\n\tadd\tr2, r6, r7\n\tptr.add\tr1, r6, r6\n\tld\tr6, r6\n\tst.1\tr7, r6\n\tadd\t1, r5, r5\n\tsub!\tr5, r3, r6\n\tjump.lt\t@.BB45_18\n.BB45_43:\n\tsub.s!\t0, r4, r5\n\tjump.eq\t@.BB45_20\n\tshl.s\t5, r3, r3\n\tptr.add\tr1, r3, r1\n\tadd\tr2, r3, r3\n\tshl.s\t3, r4, r4\n\tld.1\tr3, r5\n\tshl\tr5, r4, r5\n\tshr\tr5, r4, r5\n\tld\tr1, r1\n\tsub\t256, r4, r4\n\tshr\tr1, r4, r1\n\tshl\tr1, r4, r1\n\tor\tr1, r5, r1\n\tst.1\tr3, r1\n.BB45_20:\n\tadd\t@CPI45_2[0], r0, r1\n\tadd\tstack[@returndatasize], r0, r3\n\tsub.s!\t@CPI45_2[0], r3, r4\n\tadd.ge\tr1, r0, r3\n\tsub.s!\t@CPI45_2[0], r2, r4\n\tadd.lt\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t96, r3, r2\n\tor\tr2, r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB45_24:\n\tld.1\t64, r2\n\tadd\tr2, r0, stack-[3]\n\tadd\t@CPI45_9[0], r0, r1\n\tst.1\tr2, r1\n\tadd\t4, r2, r1\n\tnear_call\tr0, @abi_encode_tuple_stringliteral, @DEFAULT_UNWIND\n\tadd\tstack-[3], r0, r4\n\tsub\tr1, r4, r1\n\tadd\t@CPI45_2[0], r0, r2\n\tsub.s!\t@CPI45_2[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tsub.s!\t@CPI45_2[0], r4, r3\n\tadd.lt\tr4, r0, r2\n\tshl.s\t64, r2, r2\n\tshl.s\t96, r1, r1\n\tor\tr1, r2, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB45_31:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r3\n\tjump.eq\t@.BB45_41\n\tadd\tr0, r0, r5\n.BB45_33:\n\tshl.s\t5, r5, r6\n\tadd\tr2, r6, r7\n\tptr.add\tr1, r6, r6\n\tld\tr6, r6\n\tst.1\tr7, r6\n\tadd\t1, r5, r5\n\tsub!\tr5, r3, r6\n\tjump.lt\t@.BB45_33\n.BB45_41:\n\tsub.s!\t0, r4, r5\n\tjump.eq\t@.BB45_35\n\tshl.s\t5, r3, r3\n\tptr.add\tr1, r3, r1\n\tadd\tr2, r3, r3\n\tshl.s\t3, r4, r4\n\tld.1\tr3, r5\n\tshl\tr5, r4, r5\n\tshr\tr5, r4, r5\n\tld\tr1, r1\n\tsub\t256, r4, r4\n\tshr\tr1, r4, r1\n\tshl\tr1, r4, r1\n\tor\tr1, r5, r1\n\tst.1\tr3, r1\n.BB45_35:\n\tadd\t@CPI45_2[0], r0, r1\n\tadd\tstack[@returndatasize], r0, r3\n\tsub.s!\t@CPI45_2[0], r3, r4\n\tadd.ge\tr1, r0, r3\n\tsub.s!\t@CPI45_2[0], r2, r4\n\tadd.lt\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t96, r3, r2\n\tor\tr2, r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end45:\n\nfun:\n.func_begin46:\n\tadd\t@CPI46_0[0], r0, r1\n\tst.2\t0, r1\n\tcontext.code_source\tr1\n\tst.2\t4, r1\n\tadd\t64, r0, r1\n\tst.2\t36, r1\n\tadd\t@CPI46_1[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI46_1[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI46_2[0], r1, r1\n\tadd\t32773, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB46_1\n\tld\tr1, r1\n\tand\t@CPI46_3[0], r1, r1\n\tcontext.this\tr2\n\tsub!\tr2, r1, r1\n\tjump.eq\t@.BB46_3\n\tcontext.get_context_u128\tr6\n\tadd\t@CPI46_1[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI46_1[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI46_4[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t3, r0, r3\n\tadd\t@CPI46_5[0], r0, r4\n\tcontext.caller\tr5\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB46_1\n\tret\n.BB46_1:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB46_3:\n\tld.1\t64, r1\n\tadd\t@CPI46_6[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t@CPI46_1[0], r0, r2\n\tsub.s!\t@CPI46_1[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI46_7[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end46:\n\nabi_encode_address_address_address:\n.func_begin47:\n\tand\t@CPI47_0[0], r4, r4\n\tadd\t64, r1, r5\n\tst.1\tr5, r4\n\tand\t@CPI47_0[0], r3, r3\n\tadd\t32, r1, r4\n\tst.1\tr4, r3\n\tand\t@CPI47_0[0], r2, r2\n\tst.1\tr1, r2\n\tadd\t96, r1, r1\n\tret\n.func_end47:\n\nfun_execTransactionFromModule:\n.func_begin48:\n\tnop\tstack+=[6]\n\tadd\tr4, r0, stack-[5]\n\tadd\tr3, r0, stack-[3]\n\tadd\tr2, r0, stack-[2]\n\tadd\tr1, r0, stack-[4]\n\tcontext.caller\tr1\n\tadd\tr1, r0, stack-[6]\n\tsub.s!\t1, r1, r1\n\tjump.eq\t@.BB48_4\n\tadd\tstack-[6], r0, r1\n\tand\t@CPI48_0[0], r1, r1\n\tst.1\t0, r1\n\tst.1\t32, r0\n\tadd\t@CPI48_1[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI48_1[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI48_2[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB48_2\n\tld\tr1, r1\n\tsload\tr1, r1\n\tand!\t@CPI48_0[0], r1, r1\n\tjump.eq\t@.BB48_4\n\tcontext.gas_left\tr1\n\tadd\tr1, r0, stack-[1]\n\tadd\tstack-[5], r0, r2\n\tsub.s!\t2, r2, r1\n\tadd\tstack-[3], r0, r6\n\tjump.ge\t@.BB48_6\n\tsub.s!\t1, r2, r1\n\tjump.ne\t@.BB48_9\n\tadd\tstack-[4], r0, r1\n\tsub.s!\t4, r1, r1\n\tjump.eq\t@.BB48_20\n\tadd\t32, r6, r1\n\tadd\t@CPI48_1[0], r0, r2\n\tsub.s!\t@CPI48_1[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tld.1\tr6, r3\n\tsub.s!\t@CPI48_1[0], r3, r4\n\tadd.ge\tr2, r0, r3\n\tshl.s\t96, r3, r3\n\tor\tr3, r1, r1\n\tadd\tstack-[1], r0, r4\n\tsub.s!\t@CPI48_1[0], r4, r3\n\tadd.lt\tr4, r0, r2\n\tshl.s\t192, r2, r2\n\tor\tr1, r2, r1\n\tadd\tstack-[4], r0, r2\n\tnear_call\tr0, @__delegatecall, @DEFAULT_UNWIND\n\tjump\t@.BB48_8\n.BB48_9:\n\tadd\tstack-[4], r0, r1\n\tsub.s!\t4, r1, r1\n\tjump.eq\t@.BB48_20\n\tadd\t32, r6, r1\n\tadd\t@CPI48_1[0], r0, r2\n\tsub.s!\t@CPI48_1[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tld.1\tr6, r3\n\tsub.s!\t@CPI48_1[0], r3, r4\n\tadd.ge\tr2, r0, r3\n\tshl.s\t96, r3, r3\n\tor\tr3, r1, r1\n\tadd\tstack-[1], r0, r4\n\tsub.s!\t@CPI48_1[0], r4, r3\n\tadd.lt\tr4, r0, r2\n\tshl.s\t192, r2, r2\n\tor\tr1, r2, r1\n\tadd\tstack-[2], r0, r3\n\tsub.s!\t0, r3, r2\n\tjump.eq\t@.BB48_11\n\tor\t@CPI48_3[0], r1, r1\n\tadd\t32777, r0, r2\n\tadd\tstack-[4], r0, r4\n\tadd\tr0, r0, r5\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tjump\t@.BB48_8\n.BB48_11:\n\tadd\tstack-[4], r0, r2\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n.BB48_8:\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tshr.s\t96, r1, r1\n\tand\t@CPI48_1[0], r1, stack[@returndatasize]\n\tand!\t1, r2, r1\n\tadd\tstack-[3], r0, r6\n\tjump.eq\t@.BB48_15\n.BB48_20:\n\tld.1\t64, r2\n\tld.1\tr6, r1\n\tsub.s!\t0, r1, r3\n\tjump.eq\t@.BB48_23\n\tadd\tr0, r0, r3\n.BB48_22:\n\tadd\tr3, r2, r4\n\tadd\t32, r3, r3\n\tadd\tr3, r6, r5\n\tld.1\tr5, r5\n\tst.1\tr4, r5\n\tsub!\tr3, r1, r4\n\tjump.lt\t@.BB48_22\n.BB48_23:\n\tadd\tr1, r2, r3\n\tst.1\tr3, r0\n\tadd\t@CPI48_1[0], r0, r3\n\tsub.s!\t@CPI48_1[0], r2, r4\n\tadd.ge\tr3, r0, r2\n\tshl.s\t64, r2, r2\n\tsub.s!\t@CPI48_1[0], r1, r4\n\tadd.ge\tr3, r0, r1\n\tshl.s\t96, r1, r1\n\tor\tr1, r2, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI48_1[0], r2, r4\n\tadd.ge\tr3, r0, r2\n\tshl.s\t192, r2, r2\n\tor\tr2, r1, r1\n\tor\t@CPI48_3[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB48_2\n\tld\tr1, r7\n\tld.1\t64, r1\n\tadd\t32, r1, r2\n\tadd\tstack-[1], r0, r3\n\tst.1\tr2, r3\n\tadd\tstack-[5], r0, r2\n\tst.1\tr1, r2\n\tadd\t@CPI48_1[0], r0, r2\n\tcontext.gas_left\tr3\n\tsub.s!\t@CPI48_1[0], r3, r4\n\tadd.ge\tr2, r0, r3\n\tsub.s!\t@CPI48_1[0], r1, r4\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r3, r2\n\tor\tr2, r1, r1\n\tor\t@CPI48_2[0], r1, r1\n\tadd\tstack-[4], r0, r2\n\tand\t@CPI48_0[0], r2, r5\n\tadd\t32781, r0, r2\n\tadd\t4, r0, r3\n\tadd\t@CPI48_6[0], r0, r4\n\tadd\tr5, r0, stack-[4]\n\tadd\tstack-[2], r0, r6\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB48_2\n\tld.1\t64, r1\n\tadd\t96, r1, r2\n\tadd\t160, r0, r3\n\tst.1\tr2, r3\n\tadd\t64, r1, r2\n\tadd\tstack-[2], r0, r3\n\tst.1\tr2, r3\n\tadd\t32, r1, r2\n\tadd\tstack-[4], r0, r3\n\tst.1\tr2, r3\n\tadd\tstack-[6], r0, r2\n\tst.1\tr1, r2\n\tadd\tstack-[3], r0, r7\n\tld.1\tr7, r2\n\tadd\t160, r1, r3\n\tst.1\tr3, r2\n\tadd\t192, r1, r3\n\tsub.s!\t0, r2, r4\n\tjump.eq\t@.BB48_30\n\tadd\tr0, r0, r4\n.BB48_29:\n\tadd\tr4, r3, r5\n\tadd\t32, r4, r4\n\tadd\tr4, r7, r6\n\tld.1\tr6, r6\n\tst.1\tr5, r6\n\tsub!\tr4, r2, r5\n\tjump.lt\t@.BB48_29\n.BB48_30:\n\tadd\tr2, r3, r3\n\tst.1\tr3, r0\n\tadd\t128, r1, r3\n\tadd\tstack-[5], r0, r4\n\tst.1\tr3, r4\n\tadd\t223, r2, r2\n\tsub.s\t32, r0, r3\n\tand\tr2, r3, r2\n\tadd\t@CPI48_1[0], r0, r3\n\tsub.s!\t@CPI48_1[0], r1, r4\n\tadd.ge\tr3, r0, r1\n\tshl.s\t64, r1, r1\n\tsub.s!\t@CPI48_1[0], r2, r4\n\tadd.ge\tr3, r0, r2\n\tshl.s\t96, r2, r2\n\tor\tr2, r1, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI48_1[0], r2, r4\n\tadd.ge\tr3, r0, r2\n\tshl.s\t192, r2, r2\n\tor\tr2, r1, r1\n\tor\t@CPI48_3[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t1, r0, r3\n\tadd\t@CPI48_7[0], r0, r4\n\tadd\tr3, r0, stack-[5]\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB48_2\n\tadd\t@CPI48_1[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI48_1[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI48_3[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t2, r0, r3\n\tadd\t@CPI48_8[0], r0, r4\n\tadd\tstack-[6], r0, r5\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.ne\t@.BB48_25\n.BB48_2:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB48_15:\n\tld.1\t64, r2\n\tld.1\tr6, r1\n\tsub.s!\t0, r1, r3\n\tjump.eq\t@.BB48_18\n\tadd\tr0, r0, r3\n.BB48_17:\n\tadd\tr3, r2, r4\n\tadd\t32, r3, r3\n\tadd\tr3, r6, r5\n\tld.1\tr5, r5\n\tst.1\tr4, r5\n\tsub!\tr3, r1, r4\n\tjump.lt\t@.BB48_17\n.BB48_18:\n\tadd\tr1, r2, r3\n\tst.1\tr3, r0\n\tadd\t@CPI48_1[0], r0, r3\n\tsub.s!\t@CPI48_1[0], r2, r4\n\tadd.ge\tr3, r0, r2\n\tshl.s\t64, r2, r2\n\tsub.s!\t@CPI48_1[0], r1, r4\n\tadd.ge\tr3, r0, r1\n\tshl.s\t96, r1, r1\n\tor\tr1, r2, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI48_1[0], r2, r4\n\tadd.ge\tr3, r0, r2\n\tshl.s\t192, r2, r2\n\tor\tr2, r1, r1\n\tor\t@CPI48_3[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB48_2\n\tld\tr1, r7\n\tld.1\t64, r1\n\tadd\t32, r1, r2\n\tadd\tstack-[1], r0, r3\n\tst.1\tr2, r3\n\tadd\tstack-[5], r0, r2\n\tst.1\tr1, r2\n\tadd\t@CPI48_1[0], r0, r2\n\tcontext.gas_left\tr3\n\tsub.s!\t@CPI48_1[0], r3, r4\n\tadd.ge\tr2, r0, r3\n\tsub.s!\t@CPI48_1[0], r1, r4\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r3, r2\n\tor\tr2, r1, r1\n\tor\t@CPI48_2[0], r1, r1\n\tadd\tstack-[4], r0, r2\n\tand\t@CPI48_0[0], r2, r5\n\tadd\t32781, r0, r2\n\tadd\t4, r0, r3\n\tadd\t@CPI48_4[0], r0, r4\n\tadd\tstack-[2], r0, r6\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB48_2\n\tadd\t@CPI48_1[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI48_1[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI48_3[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t2, r0, r3\n\tadd\t@CPI48_5[0], r0, r4\n\tadd\tstack-[6], r0, r5\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tadd\tr0, r0, stack-[5]\n\tjump.eq\t@.BB48_2\n.BB48_25:\n\tadd\tstack-[5], r0, r1\n\tret\n.BB48_4:\n\tld.1\t64, r1\n\tadd\t@CPI48_11[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\tstack-[6], r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI48_1[0], r0, r2\n\tsub.s!\t@CPI48_1[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI48_10[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB48_6:\n\tadd\t@CPI48_9[0], r0, r1\n\tst.1\t0, r1\n\tadd\t33, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI48_10[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end48:\n\nfun_setupModules:\n.func_begin49:\n\tnop\tstack+=[1]\n\tadd\t1, r0, r1\n\tadd\tr1, r0, stack-[1]\n\tst.1\t0, r1\n\tst.1\t32, r0\n\tadd\t@CPI49_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI49_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI49_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB49_1\n\tld\tr1, r1\n\tsload\tr1, r1\n\tand!\t@CPI49_2[0], r1, r1\n\tjump.ne\t@.BB49_3\n\tadd\tstack-[1], r0, r1\n\tst.1\t0, r1\n\tst.1\t32, r0\n\tadd\t@CPI49_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI49_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI49_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB49_1\n\tld\tr1, r1\n\tsload\tr1, r2\n\tand\t@CPI49_5[0], r2, r2\n\tor\t1, r2, r2\n\tsstore\tr1, r2\n\tret\n.BB49_1:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB49_3:\n\tld.1\t64, r1\n\tadd\t@CPI49_3[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t@CPI49_0[0], r0, r2\n\tsub.s!\t@CPI49_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI49_4[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end49:\n\n__farcall:\n.func_begin50:\n.tmp0:\n\tfar_call\tr1, r2, @.BB50_2\n.tmp1:\n\tadd\t1, r0, r2\n\tret\n.BB50_2:\n.tmp2:\n\tadd\tr0, r0, r2\n\tret\n.func_end50:\n\n__staticcall:\n.func_begin51:\n.tmp3:\n\tfar_call.static\tr1, r2, @.BB51_2\n.tmp4:\n\tadd\t1, r0, r2\n\tret\n.BB51_2:\n.tmp5:\n\tadd\tr0, r0, r2\n\tret\n.func_end51:\n\n__delegatecall:\n.func_begin52:\n.tmp6:\n\tfar_call.delegate\tr1, r2, @.BB52_2\n.tmp7:\n\tadd\t1, r0, r2\n\tret\n.BB52_2:\n.tmp8:\n\tadd\tr0, r0, r2\n\tret\n.func_end52:\n\n\t.data\n\t.p2align\t5\ncalldatasize:\n\t.cell 0\n\n\t.p2align\t5\nreturndatasize:\n\t.cell 0\n\n\t.p2align\t5\nptr_calldata:\n.cell\t0\n\n\t.p2align\t5\nptr_return_data:\n.cell\t0\n\n\t.note.GNU-stack\n\t.rodata\nCPI0_0:\nCPI1_0:\nCPI2_0:\nCPI4_3:\nCPI5_3:\nCPI12_3:\nCPI14_2:\nCPI15_3:\nCPI18_4:\nCPI19_3:\nCPI20_5:\nCPI21_3:\nCPI22_3:\nCPI23_3:\nCPI24_3:\nCPI25_3:\nCPI26_3:\nCPI28_4:\nCPI29_3:\nCPI30_2:\nCPI31_0:\nCPI36_2:\nCPI37_4:\nCPI38_0:\nCPI39_1:\nCPI40_0:\nCPI41_1:\nCPI45_2:\nCPI46_1:\nCPI48_1:\nCPI49_0:\n\t.cell 4294967295\nCPI0_1:\nCPI9_0:\nCPI10_1:\nCPI11_2:\nCPI13_3:\nCPI14_10:\nCPI15_11:\nCPI28_2:\n\t.cell 18446744073709551616\nCPI0_2:\nCPI3_0:\nCPI4_0:\nCPI5_0:\nCPI10_0:\nCPI11_0:\nCPI12_0:\nCPI13_0:\nCPI14_0:\nCPI15_0:\nCPI18_0:\nCPI19_0:\nCPI20_0:\nCPI21_0:\nCPI22_0:\nCPI23_0:\nCPI24_0:\nCPI25_0:\nCPI26_0:\nCPI28_0:\nCPI29_0:\n\t.cell -57896044618658097711785492504343953926634992332820282019728792003956564819968\nCPI0_3:\nCPI4_5:\nCPI5_1:\nCPI12_5:\nCPI13_1:\nCPI14_5:\nCPI15_1:\nCPI18_3:\nCPI19_1:\nCPI20_3:\nCPI21_1:\nCPI22_1:\nCPI23_1:\nCPI24_5:\nCPI25_5:\nCPI26_1:\nCPI27_0:\nCPI28_1:\nCPI29_1:\nCPI31_3:\nCPI33_0:\nCPI34_0:\nCPI36_6:\nCPI37_1:\nCPI38_2:\nCPI39_3:\nCPI41_0:\nCPI45_1:\nCPI46_3:\nCPI47_0:\nCPI48_0:\nCPI49_2:\n\t.cell 1461501637330902918203684832716283019655932542975\nCPI0_4:\nCPI19_7:\nCPI29_7:\nCPI49_5:\n\t.cell -1461501637330902918203684832716283019655932542976\nCPI0_5:\n\t.cell 1364068194842176056990105843868530818345537040110\nCPI0_6:\nCPI30_1:\nCPI31_7:\nCPI37_9:\nCPI38_6:\n\t.cell -45892047197499416867505091379861151366373029554911521591129889233172042914037\nCPI0_7:\n\t.cell 53919893334301279589334030174039261367556698453455181869024116998144\nCPI0_8:\n\t.cell 16447827034011957504169349834950448000204676974098091183933988507803967291392\nCPI0_9:\nCPI22_8:\nCPI23_16:\nCPI26_8:\nCPI31_36:\nCPI46_7:\nCPI49_4:\n\t.cell 316912650057057350374175801344\nCPI0_10:\n\t.cell 2376452954\nCPI0_11:\n\t.cell 3281644679\nCPI0_12:\n\t.cell 4035576610\nCPI0_13:\n\t.cell 4137212452\nCPI0_14:\n\t.cell 4137212453\nCPI0_15:\n\t.cell 4236066169\nCPI0_16:\n\t.cell 4288785780\nCPI0_17:\n\t.cell 4035576611\nCPI0_18:\n\t.cell 4036640790\nCPI0_19:\n\t.cell 3425666129\nCPI0_20:\n\t.cell 3425666130\nCPI0_21:\n\t.cell 3758739422\nCPI0_22:\n\t.cell 3981536593\nCPI0_23:\n\t.cell 3281644680\nCPI0_24:\n\t.cell 3301587612\nCPI0_25:\n\t.cell 2867924801\nCPI0_26:\n\t.cell 2894453926\nCPI0_27:\n\t.cell 2894453927\nCPI0_28:\n\t.cell 2952712416\nCPI0_29:\n\t.cell 2966852094\nCPI0_30:\n\t.cell 2867924802\nCPI0_31:\n\t.cell 2881599301\nCPI0_32:\n\t.cell 2656914504\nCPI0_33:\n\t.cell 2656914505\nCPI0_34:\n\t.cell 2710524389\nCPI0_35:\n\t.cell 2835717307\nCPI0_36:\n\t.cell 2376452955\nCPI0_37:\n\t.cell 2435631779\nCPI0_38:\n\t.cell 981933276\nCPI0_39:\n\t.cell 1378420542\nCPI0_40:\n\t.cell 1628133668\nCPI0_41:\n\t.cell 1628133669\nCPI0_42:\n\t.cell 1951780412\nCPI0_43:\n\t.cell 2238578073\nCPI0_44:\n\t.cell 1378420543\nCPI0_45:\n\t.cell 1544266393\nCPI0_46:\n\t.cell 1183261094\nCPI0_47:\n\t.cell 1183261095\nCPI0_48:\n\t.cell 1247337241\nCPI0_49:\n\t.cell 1296324109\nCPI0_50:\n\t.cell 981933277\nCPI0_51:\n\t.cell 1028044825\nCPI0_52:\n\t.cell 330252340\nCPI0_53:\n\t.cell 371636861\nCPI0_54:\n\t.cell 371636862\nCPI0_55:\n\t.cell 765121853\nCPI0_56:\n\t.cell 872998000\nCPI0_57:\n\t.cell 330252341\nCPI0_58:\n\t.cell 337266316\nCPI0_59:\n\t.cell 33540518\nCPI0_60:\n\t.cell 33540519\nCPI0_61:\n\t.cell 39527100\nCPI0_62:\n\t.cell 22244937074597041345535687918817492743208931653510314877398361346409823731712\nCPI0_63:\nCPI12_19:\nCPI20_6:\nCPI24_8:\nCPI25_8:\n\t.cell 2535301200456458802993406410752\nCPI0_64:\n\t.cell -49206582078532988294665823092952464889664181096656820722639061377346546171904\nCPI0_65:\nCPI4_7:\nCPI5_4:\nCPI6_2:\nCPI7_2:\nCPI8_2:\nCPI9_3:\nCPI10_4:\nCPI11_4:\nCPI12_7:\nCPI13_5:\nCPI14_9:\nCPI15_4:\nCPI18_6:\nCPI19_4:\nCPI20_8:\nCPI21_11:\nCPI22_4:\nCPI23_4:\nCPI24_10:\nCPI25_6:\nCPI26_12:\nCPI28_7:\nCPI29_4:\nCPI30_7:\nCPI31_41:\nCPI36_14:\nCPI37_15:\nCPI38_12:\nCPI39_5:\nCPI45_8:\nCPI48_10:\n\t.cell 2852213850513516153367582212096\nCPI0_66:\n\t.cell 49122629484629529244014240937346711770925847994644146912111677022347558721748\nCPI0_67:\n\t.cell 18446744073709551583\nCPI0_68:\nCPI4_10:\nCPI6_1:\nCPI7_1:\nCPI8_1:\nCPI9_2:\nCPI10_3:\nCPI11_3:\nCPI12_20:\nCPI13_4:\nCPI14_11:\nCPI15_12:\nCPI18_5:\nCPI20_7:\nCPI21_10:\nCPI23_11:\nCPI24_9:\nCPI25_9:\nCPI26_11:\nCPI28_6:\nCPI30_6:\nCPI31_40:\nCPI36_13:\nCPI37_14:\nCPI38_11:\nCPI45_7:\nCPI48_9:\n\t.cell 35408467139433450592217433187231851964531694900788300625387963629091585785856\nCPI0_69:\nCPI19_2:\nCPI29_2:\n\t.cell 2314961652484223842056734184372588521163998588986964575063179370186355507200\nCPI0_70:\nCPI1_1:\nCPI4_11:\nCPI5_7:\nCPI12_14:\nCPI21_16:\nCPI22_5:\nCPI26_4:\nCPI30_5:\nCPI31_2:\nCPI36_3:\nCPI37_5:\nCPI38_1:\nCPI40_1:\nCPI46_4:\nCPI48_3:\n\t.cell 904625697166532776746648320380374280103671755200316906558262375061821325312\nCPI0_71:\n\t.cell 3050641655321938317497333562880296954050227422519783909568816504046463548172\nCPI0_72:\n\t.cell -15709704161145320379701698757057496128826133089162708542800665795699417284608\nCPI0_73:\nCPI4_2:\nCPI12_2:\nCPI14_1:\nCPI15_5:\nCPI24_2:\nCPI25_2:\nCPI39_0:\nCPI46_0:\n\t.cell 22182216476136578060272566318850604970565072242024486780356928325126096266030\nCPI0_74:\nCPI3_1:\nCPI4_1:\nCPI8_0:\nCPI9_1:\nCPI10_2:\nCPI11_1:\nCPI12_1:\nCPI13_2:\nCPI18_1:\nCPI20_1:\nCPI24_7:\nCPI25_7:\nCPI26_2:\nCPI28_3:\nCPI31_17:\nCPI36_8:\nCPI37_2:\nCPI45_5:\n\t.cell 18446744073709551615\nCPI0_75:\nCPI12_10:\nCPI19_5:\nCPI26_5:\nCPI28_5:\nCPI29_5:\nCPI31_1:\nCPI41_2:\nCPI48_2:\nCPI49_1:\n\t.cell 904625697166532776746648320380374280103671760270919307471179981048634146816\nCPI0_76:\nCPI12_8:\nCPI31_18:\nCPI36_9:\nCPI45_6:\n\t.cell -26959946667150639794667015087019630673637144422540572481103610249216\nCPI0_77:\nCPI5_2:\n\t.cell 7804834949557815637604151037459228395331553979218596733521348957626368524288\nCPI0_78:\n\t.cell -5988385055566954207512379357851643752421768481887707390901132236958251737900\nCPI0_79:\n\t.cell -53108192884747668299174602379923660372960572189267852252930528755037463642112\nCPI0_80:\n\t.cell 53240087036791316005094707012474770072652537341777560227677468345792544636928\nCPI0_81:\n\t.cell -45644938033067451224211300903585612866497240202539846544093239239943739408384\nCPI0_82:\n\t.cell 904250603428552709895185118199468575982109441609966099573332780532423983104\nCPI2_1:\n\t.cell 904625751086426111047927909714404454142933102474605751639407337269041823744\nCPI4_4:\nCPI12_4:\nCPI14_3:\nCPI15_6:\nCPI24_4:\nCPI25_4:\nCPI39_2:\nCPI46_2:\n\t.cell 904625751086426111047927909714404454142933107862120802609382293630030446592\nCPI4_6:\nCPI39_4:\n\t.cell 46008087139716690317562836068789997853669968182417102505844508333716556218368\nCPI4_8:\n\t.cell 36355228618125913105351085969492774486474086169918039460298660279922737545216\nCPI4_9:\nCPI5_12:\nCPI21_14:\nCPI23_10:\nCPI31_32:\nCPI36_16:\n\t.cell 7922816251426433759354395033600\nCPI5_5:\nCPI14_4:\nCPI15_7:\nCPI21_5:\nCPI23_5:\nCPI31_26:\nCPI45_0:\n\t.cell 10867283408178898638301172343726954674910073630256871736220740970449699113859\nCPI5_6:\nCPI14_6:\nCPI15_8:\nCPI21_6:\nCPI23_6:\nCPI31_27:\nCPI45_3:\n\t.cell 904625751086426111047927909714404454142933105326819602152923490636624035840\nCPI5_8:\n\t.cell -38786799470080918508919183609338697644188432806836758903269897796691510233126\nCPI5_9:\n\t.cell 5636305735157233819729994646858500344798432741056917249618406705540034985984\nCPI5_10:\n\t.cell 29577713123142787504502491084755193936718975572448565997155485387337871917056\nCPI5_11:\nCPI12_15:\nCPI21_13:\nCPI23_13:\nCPI26_10:\nCPI31_31:\nCPI36_18:\nCPI45_9:\n\t.cell 3963877391197344453575983046348115674221700746820753546331534351508065746944\nCPI6_0:\nCPI18_2:\nCPI20_2:\nCPI37_0:\n\t.cell 18446744073709551456\nCPI7_0:\n\t.cell 18446744073709551552\nCPI12_6:\n\t.cell -31053252130150094350839804984714816187893831384996415370936092682042430455808\nCPI12_9:\n\t.cell -44161815883337253533089970978931613896740534542612668063409563528904474361856\nCPI12_11:\n\t.cell 15808891125971154273887628644246380614036347151713312013446697551883185160192\nCPI12_12:\nCPI31_12:\nCPI36_0:\n\t.cell 11430537079145650693387304458692941425836787954612963690241153482819318579200\nCPI12_13:\nCPI36_1:\n\t.cell 18446744073709551520\nCPI12_16:\nCPI31_14:\nCPI36_4:\nCPI45_10:\n\t.cell 57896044618658097711785492504343953926418782139537452191302581570759080747168\nCPI12_17:\nCPI31_15:\nCPI36_5:\nCPI45_11:\n\t.cell 10141204801825835211973625643008\nCPI12_18:\n\t.cell 904625724126479437620186379660708603287513005629794912996479411701397061632\nCPI14_7:\n\t.cell -32847488478746303694156499572760015122013430097819503860155564068577484996608\nCPI14_8:\n\t.cell 904625697166532776746648320380374280103671758052530757071778528429403537408\nCPI15_2:\nCPI22_2:\nCPI23_2:\n\t.cell -19481959094295064911027041310948024810658481966411414293244289487540217446400\nCPI15_9:\n\t.cell 14636840389671607466896309246430638508488655482533844969410290004910244102144\nCPI15_10:\nCPI24_6:\nCPI31_21:\nCPI36_12:\n\t.cell 5387515050969974956360988622848\nCPI19_6:\n\t.cell -35002526962794589999028044383678213636377093982549288464129534555198721097728\nCPI19_8:\nCPI29_8:\n\t.cell 904625697166532776746648320380374280103671757735618107014721178055227736064\nCPI19_9:\n\t.cell -8651848076463903823918924292415382029599645115761830655193662184890266844096\nCPI19_10:\nCPI29_10:\n\t.cell -24037701998169060941142924209013206991109443846958145368026601719897769639936\nCPI20_4:\nCPI37_3:\n\t.cell 18446744073709551455\nCPI21_2:\nCPI31_25:\n\t.cell -49055851723492158665586780202317987059303639521795833122053527884510425477757\nCPI21_4:\nCPI30_3:\nCPI31_8:\nCPI37_10:\nCPI38_7:\n\t.cell 904625751086426111047927909714404454142933102791518401696464687643217625088\nCPI21_7:\nCPI23_7:\nCPI31_28:\n\t.cell -39341301877480157781710804024396230103289065588583741745104145964028735258624\nCPI21_8:\nCPI23_8:\nCPI30_4:\n\t.cell 18446744073709551488\nCPI21_9:\nCPI22_6:\nCPI23_9:\nCPI31_29:\n\t.cell -25118549742168677178718385998821964778913873704810588951632676496033366147072\nCPI21_12:\nCPI23_12:\nCPI31_30:\n\t.cell 52665151681260697590762103377349490436286080880601586834650049103650359345152\nCPI21_15:\nCPI31_33:\n\t.cell -863576915667596556986430499451085822141134050697128152731937873053716140381\nCPI21_17:\n\t.cell 47688019310969423947952699775682579232337128936828809077169407320028352610304\nCPI22_7:\nCPI23_15:\n\t.cell -49493461334301178225134406504473580819543405553139842869597853471102669422592\nCPI23_14:\n\t.cell 52665151681260697502874632004324945452020282553697709183012324652088203149312\nCPI24_1:\n\t.cell 24125400143482368593084195515724848582825871482235949708953246059195495612416\nCPI25_1:\n\t.cell 50942633119752846454219349998365661925608737367104304655302372697894809501696\nCPI26_6:\nCPI31_22:\nCPI48_4:\n\t.cell 27981581538126626394111396837360047489659402739770898519645427668349645522762\nCPI26_7:\n\t.cell -37546022825986649720249410894875525597933533285562967076703395414263682039808\nCPI26_9:\nCPI31_24:\nCPI48_6:\n\t.cell -57074129454889732134992093672753772871569639904641530318939980404317901135378\nCPI29_6:\n\t.cell -27115295163996308542689286182685994841426253681583558077691935547779591438336\nCPI29_9:\n\t.cell -38579145903238477197690838637025038479173759962435433734891280069874589285770\nCPI30_0:\nCPI31_6:\nCPI37_8:\nCPI38_5:\n\t.cell 32523383700587834770323112271211932718128200013265661849047136999858837557784\nCPI31_4:\nCPI37_6:\nCPI38_3:\n\t.cell -17182198461625349128391352695608331132430775963578230088191840831208680952082\nCPI31_5:\nCPI38_4:\n\t.cell 18446744073709551200\nCPI31_9:\nCPI37_11:\nCPI38_8:\n\t.cell 18446744073709551487\nCPI31_10:\nCPI37_12:\nCPI38_9:\n\t.cell 11307821214581659709333104004754678501295896940003961331978279688272766566400\nCPI31_11:\nCPI37_13:\nCPI38_10:\n\t.cell 452312848583266388373324160190187140051835877600158453279131187530910662656\nCPI31_13:\n\t.cell 18446744073709551519\nCPI31_16:\nCPI36_7:\nCPI45_4:\n\t.cell 10019309979067222254582373821846632475949454479833780424560900009889672200192\nCPI31_19:\nCPI36_10:\n\t.cell 43586712825340689535444964522512962193961129997979982826061201742141878960128\nCPI31_20:\nCPI36_11:\n\t.cell 30233078196318944281743553142424380030679021248328262582269162555050175758336\nCPI31_23:\n\t.cell -56511250840332225168424551706449363127910437413305282360079342342425460867072\nCPI31_34:\n\t.cell 28876107643419710787655510823486756644625118958199280451210932780989352228203\nCPI31_35:\n\t.cell 45795279259018630083904508494539864878281334834749233680154649164975743959040\nCPI31_37:\n\t.cell 26823684006228887000526501995344865574049715128060069299613550072766966792192\nCPI31_38:\nCPI36_15:\n\t.cell 51232463680882689365226255608028353894457804881787262318730671203864914427904\nCPI31_39:\nCPI36_17:\n\t.cell 33214008156304899519981230551617538325202878677129922308148427027936758988800\nCPI31_42:\n\t.cell 52648245302787624855419106057065010317737530356012963380011618798327297998848\nCPI37_7:\n\t.cell 18446744073709551199\nCPI42_0:\n\t.cell 53099054837784784256966839789826930156163373552802976548428631167447102128128\nCPI42_1:\n\t.cell 31328436868881898538041100389690153948709681386377410647826978248703857811820\nCPI43_0:\n\t.cell 31328436868881898538041100389690153948709681386377410647826997655390221789184\nCPI44_0:\n\t.cell 31328436868881898538041100389690153948709681386377410647824661301558666854400\nCPI46_5:\n\t.cell 368130207666166306925480411041063133770465002460309937979386503911929859586\nCPI46_6:\n\t.cell -6169211704709146980433103568604295923098965920893763701352512186923593236480\nCPI48_5:\n\t.cell -37621858024393364081336463131611671964906787500860187320155741432839870360715\nCPI48_7:\n\t.cell -52465983478078648807994228814405349807294238958331094407573419044041028934950\nCPI48_8:\n\t.cell 47305129968795024967062117798590983053302821274770012008259295614936177962168\nCPI48_11:\n\t.cell 15231080076131608330228446859497313224453929124109104688295471312989107257344\nCPI49_3:\n\t.cell -14677606551986952616480465034610735979049892882252312991599539255071693864960\n","bytecode":{"object":""},"methodIdentifiers":{"VERSION()":"ffa1ad74","addDeposit()":"4a58db19","checkSignatures(bytes32,bytes)":"ed516d51","disableModule(address,address)":"e009cfde","domainSeparator()":"f698da25","enableModule(address)":"610b5925","encodeTransactionData((address,uint8,uint256,bytes,uint256),(uint256,uint256,uint256,address,address),uint256)":"5c0ba299","entryPoint()":"b0d691fe","execTransaction((address,uint8,uint256,bytes,uint256),(uint256,uint256,uint256,address,address),bytes)":"fc7d3d79","execTransactionFromModule(address,uint256,bytes,uint8)":"468721a7","execTransactionFromModuleReturnData(address,uint256,bytes,uint8)":"5229073f","execTransaction_S6W((address,uint8,uint256,bytes,uint256),(uint256,uint256,uint256,address,address),bytes)":"7455ce3c","executeBatchCall(address[],uint256[],bytes[])":"912ccaa3","executeBatchCall_4by(address[],uint256[],bytes[])":"00008f2d","executeCall(address,uint256,bytes)":"9e5d4c49","executeCall_s1m(address,uint256,bytes)":"00000772","getChainId()":"3408e470","getDeposit()":"c399ec88","getFallbackHandler()":"856dfd99","getImplementation()":"aaf10f42","getModulesPaginated(address,uint256)":"cc2f8452","getNonce(uint256)":"3d46b819","getTransactionHash(address,uint256,bytes,uint8,uint256,uint256,uint256,uint256,address,address,uint256)":"abc1b745","handlePaymentRevert(uint256,uint256,uint256,uint256,address,address)":"a18f51e5","init(address,address)":"f09a4016","isModuleEnabled(address)":"2d9ad53d","isValidSignature(bytes32,bytes)":"1626ba7e","nonce()":"affed0e0","nonces(uint256)":"141a468c","owner()":"8da5cb5b","pullTokens(address,address,uint256)":"ac85dca7","requiredTxGas(address,uint256,bytes,uint8)":"c4ca3a9c","setFallbackHandler(address)":"f08a0323","setOwner(address)":"13af4035","supportsInterface(bytes4)":"01ffc9a7","transfer(address,uint256)":"a9059cbb","updateImplementation(address)":"025b22bc","validateUserOp((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes),bytes32,uint256)":"3a871cdd","withdrawDepositTo(address,uint256)":"4d44560d"}},"irOptimized":"/// @use-src 1:\"@account-abstraction/contracts/interfaces/IAccount.sol\", 10:\"contracts/smart-contract-wallet/BaseSmartAccount.sol\", 12:\"contracts/smart-contract-wallet/SmartAccount.sol\", 14:\"contracts/smart-contract-wallet/base/Executor.sol\", 15:\"contracts/smart-contract-wallet/base/FallbackManager.sol\", 16:\"contracts/smart-contract-wallet/base/ModuleManager.sol\", 18:\"contracts/smart-contract-wallet/common/Errors.sol\", 19:\"contracts/smart-contract-wallet/common/ReentrancyGuard.sol\", 20:\"contracts/smart-contract-wallet/common/SecuredTokenTransfer.sol\", 21:\"contracts/smart-contract-wallet/common/SelfAuthorized.sol\", 22:\"contracts/smart-contract-wallet/common/SignatureDecoder.sol\", 25:\"contracts/smart-contract-wallet/interfaces/IERC165.sol\", 29:\"contracts/smart-contract-wallet/interfaces/ISignatureValidator.sol\"\nobject \"SmartAccount_4046\" {\n    code {\n        {\n            /// @src 12:1413:33642  \"contract SmartAccount is...\"\n            let _1 := memoryguard(0xe0)\n            if callvalue() { revert(0, 0) }\n            let programSize := datasize(\"SmartAccount_4046\")\n            let argSize := sub(codesize(), programSize)\n            let newFreePtr := add(_1, and(add(argSize, 31), not(31)))\n            if or(gt(newFreePtr, sub(shl(64, 1), 1)), lt(newFreePtr, _1))\n            {\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 12:1413:33642  \"contract SmartAccount is...\" */ shl(224, 0x4e487b71))\n                mstore(4, 0x41)\n                revert(/** @src -1:-1:-1 */ 0, /** @src 12:1413:33642  \"contract SmartAccount is...\" */ 0x24)\n            }\n            mstore(64, newFreePtr)\n            codecopy(_1, programSize, argSize)\n            if slt(sub(add(_1, argSize), _1), 32)\n            {\n                revert(/** @src -1:-1:-1 */ 0, 0)\n            }\n            /// @src 12:1413:33642  \"contract SmartAccount is...\"\n            let value := mload(_1)\n            let _2 := and(value, sub(shl(160, 1), 1))\n            if iszero(eq(value, _2))\n            {\n                revert(/** @src -1:-1:-1 */ 0, 0)\n            }\n            /// @src 19:242:243  \"1\"\n            sstore(/** @src 19:355:385  \"reentrancyStatus = NOT_ENTERED\" */ 0x31, /** @src 19:242:243  \"1\" */ 0x01)\n            /// @src 12:3364:3385  \"_self = address(this)\"\n            mstore(192, /** @src 12:3380:3384  \"this\" */ address())\n            /// @src 12:1413:33642  \"contract SmartAccount is...\"\n            sstore(/** @src 12:3596:3655  \"owner = address(0xEeeeeEeeeEeEeeEeEeEeeEEEeeeeEeeeeeeeEEeE)\" */ 0x32, /** @src 12:1413:33642  \"contract SmartAccount is...\" */ or(and(sload(/** @src 12:3596:3655  \"owner = address(0xEeeeeEeeeEeEeeEeEeEeeEEEeeeeEeeeeeeeEEeE)\" */ 0x32), /** @src 12:1413:33642  \"contract SmartAccount is...\" */ not(sub(shl(160, 1), 1))), /** @src 12:3612:3654  \"0xEeeeeEeeeEeEeeEeEeEeeEEEeeeeEeeeeeeeEEeE\" */ 0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee))\n            /// @src 12:3665:3749  \"if (address(anEntryPoint) == address(0))...\"\n            if /** @src 12:3669:3704  \"address(anEntryPoint) == address(0)\" */ iszero(/** @src 12:1413:33642  \"contract SmartAccount is...\" */ _2)\n            /// @src 12:3665:3749  \"if (address(anEntryPoint) == address(0))...\"\n            {\n                /// @src 12:3725:3749  \"EntryPointCannotBeZero()\"\n                let _3 := /** @src 12:1413:33642  \"contract SmartAccount is...\" */ mload(64)\n                /// @src 12:3725:3749  \"EntryPointCannotBeZero()\"\n                mstore(_3, shl(226, 0x091748f9))\n                revert(_3, 4)\n            }\n            /// @src 12:3759:3785  \"_entryPoint = anEntryPoint\"\n            mstore(128, value)\n            /// @src 12:3795:3819  \"_chainId = block.chainid\"\n            mstore(160, /** @src 12:3806:3819  \"block.chainid\" */ chainid())\n            /// @src 12:1413:33642  \"contract SmartAccount is...\"\n            let _4 := mload(64)\n            let _5 := datasize(\"SmartAccount_4046_deployed\")\n            codecopy(_4, dataoffset(\"SmartAccount_4046_deployed\"), _5)\n            setimmutable(_4, \"2506\", mload(/** @src 12:3759:3785  \"_entryPoint = anEntryPoint\" */ 128))\n            /// @src 12:1413:33642  \"contract SmartAccount is...\"\n            setimmutable(_4, \"2508\", mload(/** @src 12:3795:3819  \"_chainId = block.chainid\" */ 160))\n            /// @src 12:1413:33642  \"contract SmartAccount is...\"\n            setimmutable(_4, \"2510\", mload(/** @src 12:3364:3385  \"_self = address(this)\" */ 192))\n            /// @src 12:1413:33642  \"contract SmartAccount is...\"\n            return(_4, _5)\n        }\n    }\n    /// @use-src 8:\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\", 10:\"contracts/smart-contract-wallet/BaseSmartAccount.sol\", 12:\"contracts/smart-contract-wallet/SmartAccount.sol\", 14:\"contracts/smart-contract-wallet/base/Executor.sol\", 15:\"contracts/smart-contract-wallet/base/FallbackManager.sol\", 16:\"contracts/smart-contract-wallet/base/ModuleManager.sol\", 19:\"contracts/smart-contract-wallet/common/ReentrancyGuard.sol\", 20:\"contracts/smart-contract-wallet/common/SecuredTokenTransfer.sol\", 21:\"contracts/smart-contract-wallet/common/SelfAuthorized.sol\", 22:\"contracts/smart-contract-wallet/common/SignatureDecoder.sol\", 29:\"contracts/smart-contract-wallet/interfaces/ISignatureValidator.sol\", 30:\"contracts/smart-contract-wallet/libs/LibAddress.sol\", 31:\"contracts/smart-contract-wallet/libs/Math.sol\"\n    object \"SmartAccount_4046_deployed\" {\n        code {\n            {\n                /// @src 12:1413:33642  \"contract SmartAccount is...\"\n                mstore(64, 128)\n                if iszero(lt(calldatasize(), 4))\n                {\n                    switch shr(224, calldataload(0))\n                    case 0x00000772 {\n                        external_fun_executeCall_s1m()\n                    }\n                    case 0x00008f2d {\n                        external_fun_executeBatchCall_4by()\n                    }\n                    case 0x01ffc9a7 {\n                        external_fun_supportsInterface()\n                    }\n                    case 0x025b22bc {\n                        external_fun_updateImplementation()\n                    }\n                    case 0x13af4035 { external_fun_setOwner() }\n                    case 0x141a468c { external_fun_nonces() }\n                    case 0x1626ba7e {\n                        external_fun_isValidSignature()\n                    }\n                    case 0x2d9ad53d {\n                        external_fun_isModuleEnabled()\n                    }\n                    case 0x3408e470 { external_fun_getChainId() }\n                    case 0x3a871cdd { external_fun_validateUserOp() }\n                    case 0x3d46b819 { external_fun_getNonce() }\n                    case 0x468721a7 {\n                        external_fun_execTransactionFromModule()\n                    }\n                    case 0x4a58db19 { external_fun_addDeposit() }\n                    case 0x4d44560d {\n                        external_fun_withdrawDepositTo()\n                    }\n                    case 0x5229073f {\n                        external_fun_execTransactionFromModuleReturnData()\n                    }\n                    case 0x5c0ba299 {\n                        external_fun_encodeTransactionData()\n                    }\n                    case 0x610b5925 { external_fun_enableModule() }\n                    case 0x7455ce3c {\n                        external_fun_execTransaction_S6W()\n                    }\n                    case 0x856dfd99 {\n                        external_fun_getFallbackHandler()\n                    }\n                    case 0x8da5cb5b { external_fun_owner() }\n                    case 0x912ccaa3 {\n                        external_fun_executeBatchCall_4by()\n                    }\n                    case 0x9e5d4c49 {\n                        external_fun_executeCall_s1m()\n                    }\n                    case 0xa18f51e5 {\n                        external_fun_handlePaymentRevert()\n                    }\n                    case 0xa9059cbb { external_fun_transfer() }\n                    case 0xaaf10f42 {\n                        external_fun_getImplementation()\n                    }\n                    case 0xabc1b745 {\n                        external_fun_getTransactionHash()\n                    }\n                    case 0xac85dca7 { external_fun_pullTokens() }\n                    case 0xaffed0e0 { external_fun_nonce() }\n                    case 0xb0d691fe { external_fun_entryPoint() }\n                    case 0xc399ec88 { external_fun_getDeposit() }\n                    case 0xc4ca3a9c { external_fun_requiredTxGas() }\n                    case 0xcc2f8452 {\n                        external_fun_getModulesPaginated()\n                    }\n                    case 0xe009cfde { external_fun_disableModule() }\n                    case 0xed516d51 {\n                        external_fun_checkSignatures()\n                    }\n                    case 0xf08a0323 {\n                        external_fun_setFallbackHandler()\n                    }\n                    case 0xf09a4016 { external_fun_init() }\n                    case 0xf698da25 {\n                        external_fun_domainSeparator()\n                    }\n                    case 0xfc7d3d79 {\n                        external_fun_execTransaction_S6W()\n                    }\n                    case 0xffa1ad74 { external_fun_VERSION() }\n                }\n                if iszero(calldatasize())\n                {\n                    fun()\n                    stop()\n                }\n                if callvalue() { revert(0, 0) }\n                fun_()\n            }\n            function cleanup_address(value) -> cleaned\n            {\n                cleaned := and(value, sub(shl(160, 1), 1))\n            }\n            function validator_revert_address(value)\n            {\n                if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n            }\n            function abi_decode_address(offset) -> value\n            {\n                value := calldataload(offset)\n                validator_revert_address(value)\n            }\n            function abi_decode_bytes_calldata(offset, end) -> arrayPos, length\n            {\n                if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n                length := calldataload(offset)\n                if gt(length, 0xffffffffffffffff) { revert(0, 0) }\n                arrayPos := add(offset, 0x20)\n                if gt(add(add(offset, length), 0x20), end) { revert(0, 0) }\n            }\n            function external_fun_executeCall_s1m()\n            {\n                if callvalue() { revert(0, 0) }\n                if slt(add(calldatasize(), not(3)), 96)\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 12:1413:33642  \"contract SmartAccount is...\"\n                let value := calldataload(4)\n                validator_revert_address(value)\n                let offset := calldataload(68)\n                if gt(offset, 0xffffffffffffffff)\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 12:1413:33642  \"contract SmartAccount is...\"\n                let value2, value3 := abi_decode_bytes_calldata(add(4, offset), calldatasize())\n                /// @src 12:26556:26750  \"function executeCall_s1m(...\"\n                fun_requireFromEntryPointOrOwner()\n                /// @src 12:26719:26743  \"_call(dest, value, func)\"\n                fun_call(value, /** @src 12:1413:33642  \"contract SmartAccount is...\" */ calldataload(36), abi_decode_available_length_bytes(/** @src 12:26719:26743  \"_call(dest, value, func)\" */ value2, value3, /** @src 12:1413:33642  \"contract SmartAccount is...\" */ calldatasize()))\n                return(/** @src -1:-1:-1 */ 0, 0)\n            }\n            /// @src 12:1413:33642  \"contract SmartAccount is...\"\n            function abi_decode_array_address_dyn_calldata(offset, end) -> arrayPos, length\n            {\n                if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n                length := calldataload(offset)\n                if gt(length, 0xffffffffffffffff) { revert(0, 0) }\n                arrayPos := add(offset, 0x20)\n                if gt(add(add(offset, shl(5, length)), 0x20), end) { revert(0, 0) }\n            }\n            function external_fun_executeBatchCall_4by()\n            {\n                if callvalue() { revert(0, 0) }\n                if slt(add(calldatasize(), not(3)), 96)\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 12:1413:33642  \"contract SmartAccount is...\"\n                let offset := calldataload(4)\n                let _1 := 0xffffffffffffffff\n                if gt(offset, _1)\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 12:1413:33642  \"contract SmartAccount is...\"\n                let value0, value1 := abi_decode_array_address_dyn_calldata(add(4, offset), calldatasize())\n                let offset_1 := calldataload(36)\n                if gt(offset_1, _1)\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 12:1413:33642  \"contract SmartAccount is...\"\n                let value2, value3 := abi_decode_array_address_dyn_calldata(add(4, offset_1), calldatasize())\n                let offset_2 := calldataload(68)\n                if gt(offset_2, _1)\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 12:1413:33642  \"contract SmartAccount is...\"\n                let value4, value5 := abi_decode_array_address_dyn_calldata(add(4, offset_2), calldatasize())\n                /// @src 12:27504:28059  \"function executeBatchCall_4by(...\"\n                fun_requireFromEntryPointOrOwner()\n                /// @src 12:27713:27772  \"dest.length == 0 ||...\"\n                let expr := /** @src 12:27713:27729  \"dest.length == 0\" */ iszero(value1)\n                /// @src 12:27713:27772  \"dest.length == 0 ||...\"\n                if iszero(expr)\n                {\n                    expr := /** @src 12:27745:27772  \"dest.length != value.length\" */ iszero(eq(value1, /** @src 12:27760:27772  \"value.length\" */ value3))\n                }\n                /// @src 12:27713:27815  \"dest.length == 0 ||...\"\n                let expr_1 := expr\n                if iszero(expr)\n                {\n                    expr_1 := /** @src 12:27788:27815  \"value.length != func.length\" */ iszero(eq(value3, /** @src 12:27804:27815  \"func.length\" */ value5))\n                }\n                /// @src 12:27696:27891  \"if (...\"\n                if expr_1\n                {\n                    /// @src 12:27833:27891  \"WrongBatchProvided(dest.length, value.length, func.length)\"\n                    let _2 := /** @src 12:1413:33642  \"contract SmartAccount is...\" */ mload(64)\n                    /// @src 12:27833:27891  \"WrongBatchProvided(dest.length, value.length, func.length)\"\n                    mstore(_2, shl(227, 0x0a0c0a91))\n                    revert(_2, sub(abi_encode_uint256_uint256_uint256(add(_2, /** @src 12:1413:33642  \"contract SmartAccount is...\" */ 4), /** @src 12:27833:27891  \"WrongBatchProvided(dest.length, value.length, func.length)\" */ value1, value3, value5), _2))\n                }\n                /// @src 12:27906:27915  \"uint256 i\"\n                let var_i := /** @src -1:-1:-1 */ 0\n                /// @src 12:27901:28053  \"for (uint256 i; i < dest.length; ) {...\"\n                for { }\n                /** @src 12:27917:27932  \"i < dest.length\" */ lt(var_i, value1)\n                /// @src 12:27906:27915  \"uint256 i\"\n                { }\n                {\n                    /// @src 12:1413:33642  \"contract SmartAccount is...\"\n                    let value := calldataload(/** @src 12:27956:27963  \"dest[i]\" */ calldata_array_index_access_address_dyn_calldata(value0, value1, var_i))\n                    /// @src 12:1413:33642  \"contract SmartAccount is...\"\n                    validator_revert_address(value)\n                    let returnValue := calldataload(/** @src 12:27965:27973  \"value[i]\" */ calldata_array_index_access_address_dyn_calldata(value2, value3, var_i))\n                    /// @src 12:1413:33642  \"contract SmartAccount is...\"\n                    if iszero(lt(var_i, value5)) { panic_error_0x32() }\n                    let addr, len := access_calldata_tail_bytes_calldata(value4, add(value4, shl(5, var_i)))\n                    /// @src 12:27950:27983  \"_call(dest[i], value[i], func[i])\"\n                    fun_call(value, returnValue, /** @src 12:1413:33642  \"contract SmartAccount is...\" */ abi_decode_available_length_bytes(/** @src 12:27950:27983  \"_call(dest[i], value[i], func[i])\" */ addr, len, /** @src 12:1413:33642  \"contract SmartAccount is...\" */ calldatasize()))\n                    /// @src 12:28025:28028  \"++i\"\n                    var_i := /** @src 12:1413:33642  \"contract SmartAccount is...\" */ add(/** @src 12:28025:28028  \"++i\" */ var_i, /** @src 12:1413:33642  \"contract SmartAccount is...\" */ 1)\n                }\n                return(/** @src -1:-1:-1 */ 0, 0)\n            }\n            /// @src 12:1413:33642  \"contract SmartAccount is...\"\n            function validator_revert_bytes4(value)\n            {\n                if iszero(eq(value, and(value, shl(224, 0xffffffff)))) { revert(0, 0) }\n            }\n            function cleanup_bool(value) -> cleaned\n            {\n                cleaned := iszero(iszero(value))\n            }\n            function external_fun_supportsInterface()\n            {\n                if callvalue() { revert(0, 0) }\n                if slt(add(calldatasize(), not(3)), 32)\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 12:1413:33642  \"contract SmartAccount is...\"\n                let value := calldataload(4)\n                validator_revert_bytes4(value)\n                let memPos := mload(64)\n                mstore(memPos, /** @src 12:33042:33083  \"_interfaceId == type(IERC165).interfaceId\" */ eq(/** @src 12:1413:33642  \"contract SmartAccount is...\" */ and(/** @src 12:33042:33083  \"_interfaceId == type(IERC165).interfaceId\" */ value, /** @src 12:1413:33642  \"contract SmartAccount is...\" */ shl(224, 0xffffffff)), /** @src 12:33058:33083  \"type(IERC165).interfaceId\" */ shl(224, 0x01ffc9a7)))\n                /// @src 12:1413:33642  \"contract SmartAccount is...\"\n                return(memPos, 32)\n            }\n            function external_fun_updateImplementation()\n            {\n                if callvalue() { revert(0, 0) }\n                if slt(add(calldatasize(), not(3)), 32)\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 12:1413:33642  \"contract SmartAccount is...\"\n                let value := calldataload(4)\n                validator_revert_address(value)\n                let _1 := sub(shl(160, 1), 1)\n                /// @src 12:4346:4396  \"msg.sender != owner && msg.sender != address(this)\"\n                let expr := /** @src 12:4346:4365  \"msg.sender != owner\" */ iszero(eq(/** @src 12:4346:4356  \"msg.sender\" */ caller(), /** @src 12:1413:33642  \"contract SmartAccount is...\" */ and(sload(/** @src 12:4360:4365  \"owner\" */ 0x32), /** @src 12:1413:33642  \"contract SmartAccount is...\" */ _1)))\n                /// @src 12:4346:4396  \"msg.sender != owner && msg.sender != address(this)\"\n                if expr\n                {\n                    expr := /** @src 12:4369:4396  \"msg.sender != address(this)\" */ iszero(eq(/** @src 12:4346:4356  \"msg.sender\" */ caller(), /** @src 12:4391:4395  \"this\" */ address()))\n                }\n                /// @src 12:4342:4442  \"if (msg.sender != owner && msg.sender != address(this))...\"\n                if expr\n                {\n                    /// @src 12:4417:4442  \"MixedAuthFail(msg.sender)\"\n                    let _2 := /** @src 12:1413:33642  \"contract SmartAccount is...\" */ mload(64)\n                    /// @src 12:4417:4442  \"MixedAuthFail(msg.sender)\"\n                    mstore(_2, shl(225, 0x08a0b0a5))\n                    /// @src 12:1413:33642  \"contract SmartAccount is...\"\n                    mstore(/** @src 12:4417:4442  \"MixedAuthFail(msg.sender)\" */ add(_2, /** @src 12:1413:33642  \"contract SmartAccount is...\" */ 4), /** @src 12:4346:4356  \"msg.sender\" */ caller())\n                    /// @src 12:4417:4442  \"MixedAuthFail(msg.sender)\"\n                    revert(_2, /** @src 12:1413:33642  \"contract SmartAccount is...\" */ 36)\n                }\n                let _3 := and(/** @src 12:5867:5896  \"_implementation != address(0)\" */ value, /** @src 12:1413:33642  \"contract SmartAccount is...\" */ _1)\n                if /** @src 12:5867:5896  \"_implementation != address(0)\" */ iszero(/** @src 12:1413:33642  \"contract SmartAccount is...\" */ _3)\n                {\n                    let memPtr := mload(64)\n                    mstore(memPtr, shl(229, 4594637))\n                    mstore(add(memPtr, 4), 32)\n                    mstore(add(memPtr, 36), 22)\n                    mstore(add(memPtr, 68), \"Address cannot be zero\")\n                    revert(memPtr, 100)\n                }\n                /// @src 12:5933:6025  \"if (!_implementation.isContract())...\"\n                if /** @src 12:5937:5966  \"!_implementation.isContract()\" */ cleanup_bool(/** @src 30:613:623  \"csize != 0\" */ iszero(/** @src 30:535:597  \"assembly {...\" */ extcodesize(/** @src 12:5938:5966  \"_implementation.isContract()\" */ value)))\n                /// @src 12:5933:6025  \"if (!_implementation.isContract())...\"\n                {\n                    /// @src 12:5987:6025  \"InvalidImplementation(_implementation)\"\n                    let _4 := /** @src 12:1413:33642  \"contract SmartAccount is...\" */ mload(64)\n                    /// @src 12:5987:6025  \"InvalidImplementation(_implementation)\"\n                    mstore(_4, shl(224, 0x0c760937))\n                    revert(_4, sub(abi_encode_tuple_address(add(_4, /** @src 12:1413:33642  \"contract SmartAccount is...\" */ 4), /** @src 12:5987:6025  \"InvalidImplementation(_implementation)\" */ value), _4))\n                }\n                /// @src 12:6126:6243  \"assembly {...\"\n                let var_oldImplementation := sload(address())\n                sstore(address(), value)\n                /// @src 12:6257:6314  \"ImplementationUpdated(oldImplementation, _implementation)\"\n                log3(/** @src -1:-1:-1 */ 0, 0, /** @src 12:6257:6314  \"ImplementationUpdated(oldImplementation, _implementation)\" */ 0xaa3f731066a578e5f39b4215468d826cdd15373cbc0dfc9cb9bdc649718ef7da, /** @src 12:1413:33642  \"contract SmartAccount is...\" */ and(/** @src 12:6257:6314  \"ImplementationUpdated(oldImplementation, _implementation)\" */ var_oldImplementation, /** @src 12:1413:33642  \"contract SmartAccount is...\" */ _1), /** @src 12:6257:6314  \"ImplementationUpdated(oldImplementation, _implementation)\" */ _3)\n                /// @src 12:1413:33642  \"contract SmartAccount is...\"\n                return(/** @src -1:-1:-1 */ 0, 0)\n            }\n            /// @src 12:1413:33642  \"contract SmartAccount is...\"\n            function external_fun_setOwner()\n            {\n                if callvalue() { revert(0, 0) }\n                if slt(add(calldatasize(), not(3)), 32)\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 12:1413:33642  \"contract SmartAccount is...\"\n                let value := calldataload(4)\n                validator_revert_address(value)\n                let _1 := sub(shl(160, 1), 1)\n                let _2 := and(sload(/** @src 12:4360:4365  \"owner\" */ 0x32), /** @src 12:1413:33642  \"contract SmartAccount is...\" */ _1)\n                /// @src 12:4346:4396  \"msg.sender != owner && msg.sender != address(this)\"\n                let expr := /** @src 12:4346:4365  \"msg.sender != owner\" */ iszero(eq(/** @src 12:4346:4356  \"msg.sender\" */ caller(), /** @src 12:1413:33642  \"contract SmartAccount is...\" */ _2))\n                /// @src 12:4346:4396  \"msg.sender != owner && msg.sender != address(this)\"\n                if expr\n                {\n                    expr := /** @src 12:4369:4396  \"msg.sender != address(this)\" */ iszero(eq(/** @src 12:4346:4356  \"msg.sender\" */ caller(), /** @src 12:4391:4395  \"this\" */ address()))\n                }\n                /// @src 12:4342:4442  \"if (msg.sender != owner && msg.sender != address(this))...\"\n                if expr\n                {\n                    /// @src 12:4417:4442  \"MixedAuthFail(msg.sender)\"\n                    let _3 := /** @src 12:1413:33642  \"contract SmartAccount is...\" */ mload(64)\n                    /// @src 12:4417:4442  \"MixedAuthFail(msg.sender)\"\n                    mstore(_3, shl(225, 0x08a0b0a5))\n                    /// @src 12:1413:33642  \"contract SmartAccount is...\"\n                    mstore(/** @src 12:4417:4442  \"MixedAuthFail(msg.sender)\" */ add(_3, /** @src 12:1413:33642  \"contract SmartAccount is...\" */ 4), /** @src 12:4346:4356  \"msg.sender\" */ caller())\n                    /// @src 12:4417:4442  \"MixedAuthFail(msg.sender)\"\n                    revert(_3, /** @src 12:1413:33642  \"contract SmartAccount is...\" */ 36)\n                }\n                /// @src 12:5196:5219  \"_newOwner == address(0)\"\n                let _4 := /** @src 12:1413:33642  \"contract SmartAccount is...\" */ and(/** @src 12:5196:5219  \"_newOwner == address(0)\" */ value, /** @src 12:1413:33642  \"contract SmartAccount is...\" */ _1)\n                /// @src 12:5192:5247  \"if (_newOwner == address(0)) revert OwnerCannotBeZero()\"\n                if /** @src 12:5196:5219  \"_newOwner == address(0)\" */ iszero(_4)\n                /// @src 12:5192:5247  \"if (_newOwner == address(0)) revert OwnerCannotBeZero()\"\n                {\n                    /// @src 12:5228:5247  \"OwnerCannotBeZero()\"\n                    let _5 := /** @src 12:1413:33642  \"contract SmartAccount is...\" */ mload(64)\n                    /// @src 12:5228:5247  \"OwnerCannotBeZero()\"\n                    mstore(_5, shl(224, 0x9b15e16f))\n                    revert(_5, /** @src 12:1413:33642  \"contract SmartAccount is...\" */ 4)\n                }\n                /// @src 12:5257:5315  \"if (_newOwner == address(this)) revert OwnerCanNotBeSelf()\"\n                if /** @src 12:5261:5287  \"_newOwner == address(this)\" */ eq(_4, /** @src 12:5282:5286  \"this\" */ address())\n                /// @src 12:5257:5315  \"if (_newOwner == address(this)) revert OwnerCanNotBeSelf()\"\n                {\n                    /// @src 12:5296:5315  \"OwnerCanNotBeSelf()\"\n                    let _6 := /** @src 12:1413:33642  \"contract SmartAccount is...\" */ mload(64)\n                    /// @src 12:5296:5315  \"OwnerCanNotBeSelf()\"\n                    mstore(_6, shl(224, 0x75b4d247))\n                    revert(_6, /** @src 12:1413:33642  \"contract SmartAccount is...\" */ 4)\n                }\n                /// @src 12:5325:5377  \"if (_newOwner == owner) revert OwnerProvidedIsSame()\"\n                if /** @src 12:5329:5347  \"_newOwner == owner\" */ eq(_4, /** @src 12:1413:33642  \"contract SmartAccount is...\" */ _2)\n                /// @src 12:5325:5377  \"if (_newOwner == owner) revert OwnerProvidedIsSame()\"\n                {\n                    /// @src 12:5356:5377  \"OwnerProvidedIsSame()\"\n                    let _7 := /** @src 12:1413:33642  \"contract SmartAccount is...\" */ mload(64)\n                    /// @src 12:5356:5377  \"OwnerProvidedIsSame()\"\n                    mstore(_7, shl(224, 0x8a95d3fb))\n                    revert(_7, /** @src 12:1413:33642  \"contract SmartAccount is...\" */ 4)\n                }\n                /// @src 12:5421:5483  \"assembly {...\"\n                sstore(/** @src 12:4360:4365  \"owner\" */ 0x32, /** @src 12:5421:5483  \"assembly {...\" */ value)\n                /// @src 12:5497:5543  \"EOAChanged(address(this), oldOwner, _newOwner)\"\n                log4(/** @src -1:-1:-1 */ 0, 0, /** @src 12:5497:5543  \"EOAChanged(address(this), oldOwner, _newOwner)\" */ 0xf2c2b1b5312b1e31ad49a7d85acd6322ae6facc51488810b882ecdb4df861cd4, /** @src 12:5282:5286  \"this\" */ address(), /** @src 12:1413:33642  \"contract SmartAccount is...\" */ _2, /** @src 12:5497:5543  \"EOAChanged(address(this), oldOwner, _newOwner)\" */ _4)\n                /// @src 12:1413:33642  \"contract SmartAccount is...\"\n                return(/** @src -1:-1:-1 */ 0, 0)\n            }\n            /// @src 12:1413:33642  \"contract SmartAccount is...\"\n            function mapping_index_access_mapping_uint256_uint256_of_uint256() -> dataSlot\n            {\n                mstore(0, /** @src 12:10253:10254  \"1\" */ 0x01)\n                /// @src 12:1413:33642  \"contract SmartAccount is...\"\n                mstore(0x20, /** @src 12:10246:10252  \"nonces\" */ 0x33)\n                /// @src 12:1413:33642  \"contract SmartAccount is...\"\n                dataSlot := keccak256(0, 0x40)\n            }\n            function abi_encode_uint256(headStart, value0) -> tail\n            {\n                tail := add(headStart, 32)\n                mstore(headStart, value0)\n            }\n            function external_fun_nonces()\n            {\n                if callvalue() { revert(0, 0) }\n                if slt(add(calldatasize(), not(3)), 32)\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 12:1413:33642  \"contract SmartAccount is...\"\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 12:1413:33642  \"contract SmartAccount is...\" */ calldataload(4))\n                mstore(32, /** @src 12:2483:2524  \"mapping(uint256 => uint256) public nonces\" */ 51)\n                /// @src 12:1413:33642  \"contract SmartAccount is...\"\n                let _1 := sload(keccak256(/** @src -1:-1:-1 */ 0, /** @src 12:1413:33642  \"contract SmartAccount is...\" */ 0x40))\n                let memPos := mload(0x40)\n                mstore(memPos, _1)\n                return(memPos, 32)\n            }\n            function panic_error_0x41()\n            {\n                mstore(0, shl(224, 0x4e487b71))\n                mstore(4, 0x41)\n                revert(0, 0x24)\n            }\n            function finalize_allocation_13215(memPtr)\n            {\n                if gt(memPtr, 0xffffffffffffffff) { panic_error_0x41() }\n                mstore(64, memPtr)\n            }\n            function finalize_allocation_13219(memPtr)\n            {\n                let newFreePtr := add(memPtr, 0xa0)\n                if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n                mstore(64, newFreePtr)\n            }\n            function finalize_allocation_13299(memPtr)\n            {\n                let newFreePtr := add(memPtr, 160)\n                if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n                mstore(64, newFreePtr)\n            }\n            function finalize_allocation_21860(memPtr)\n            {\n                let newFreePtr := add(memPtr, 64)\n                if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n                mstore(64, newFreePtr)\n            }\n            function finalize_allocation_21863(memPtr)\n            {\n                let newFreePtr := add(memPtr, /** @src 12:1927:1993  \"0x47e79534a245952e8b16893a336b85a3d9ea9fa8c573f3d803afb92a79469218\" */ 128)\n                /// @src 12:1413:33642  \"contract SmartAccount is...\"\n                if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n                mstore(64, newFreePtr)\n            }\n            function finalize_allocation_29952(memPtr)\n            {\n                let newFreePtr := add(memPtr, /** @src 12:2295:2361  \"0xda033865d68bf4a40a5a7cb4159a99e33dba8569e65ea3e38222eb12d9e66eee\" */ 416)\n                /// @src 12:1413:33642  \"contract SmartAccount is...\"\n                if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n                mstore(64, newFreePtr)\n            }\n            function finalize_allocation(memPtr, size)\n            {\n                let newFreePtr := add(memPtr, and(add(size, 31), not(31)))\n                if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n                mstore(64, newFreePtr)\n            }\n            function array_allocation_size_bytes(length) -> size\n            {\n                if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n                size := add(and(add(length, 31), not(31)), 0x20)\n            }\n            function abi_decode_available_length_bytes(src, length, end) -> array\n            {\n                let _1 := array_allocation_size_bytes(length)\n                let memPtr := mload(64)\n                finalize_allocation(memPtr, _1)\n                array := memPtr\n                mstore(memPtr, length)\n                if gt(add(src, length), end)\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 12:1413:33642  \"contract SmartAccount is...\"\n                calldatacopy(add(memPtr, 0x20), src, length)\n                mstore(add(add(memPtr, length), 0x20), /** @src -1:-1:-1 */ 0)\n            }\n            /// @src 12:1413:33642  \"contract SmartAccount is...\"\n            function abi_decode_bytes(offset, end) -> array\n            {\n                if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n                array := abi_decode_available_length_bytes(add(offset, 0x20), calldataload(offset), end)\n            }\n            function abi_decode_bytes32t_bytes(dataEnd) -> value0, value1\n            {\n                if slt(add(dataEnd, not(3)), 64) { revert(0, 0) }\n                value0 := calldataload(4)\n                let offset := calldataload(36)\n                if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n                value1 := abi_decode_bytes(add(4, offset), dataEnd)\n            }\n            function external_fun_isValidSignature()\n            {\n                if callvalue() { revert(0, 0) }\n                let param, param_1 := abi_decode_bytes32t_bytes(calldatasize())\n                let ret := fun_isValidSignature(param, param_1)\n                let memPos := mload(64)\n                mstore(memPos, and(ret, shl(224, 0xffffffff)))\n                return(memPos, 32)\n            }\n            function external_fun_isModuleEnabled()\n            {\n                if callvalue() { revert(0, 0) }\n                if slt(add(calldatasize(), not(3)), 32)\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 12:1413:33642  \"contract SmartAccount is...\"\n                let value := calldataload(4)\n                validator_revert_address(value)\n                let _1 := sub(shl(160, 1), 1)\n                let _2 := and(/** @src 16:6335:6361  \"SENTINEL_MODULES != module\" */ value, /** @src 12:1413:33642  \"contract SmartAccount is...\" */ _1)\n                /// @src 16:6335:6394  \"SENTINEL_MODULES != module && modules[module] != address(0)\"\n                let expr := /** @src 16:6335:6361  \"SENTINEL_MODULES != module\" */ iszero(eq(/** @src 16:522:525  \"0x1\" */ 0x01, /** @src 12:1413:33642  \"contract SmartAccount is...\" */ _2))\n                /// @src 16:6335:6394  \"SENTINEL_MODULES != module && modules[module] != address(0)\"\n                if expr\n                {\n                    /// @src 12:1413:33642  \"contract SmartAccount is...\"\n                    mstore(/** @src -1:-1:-1 */ 0, /** @src 12:1413:33642  \"contract SmartAccount is...\" */ _2)\n                    mstore(32, /** @src -1:-1:-1 */ 0)\n                    /// @src 16:6335:6394  \"SENTINEL_MODULES != module && modules[module] != address(0)\"\n                    expr := /** @src 16:6365:6394  \"modules[module] != address(0)\" */ iszero(iszero(/** @src 12:1413:33642  \"contract SmartAccount is...\" */ and(sload(keccak256(/** @src -1:-1:-1 */ 0, /** @src 12:1413:33642  \"contract SmartAccount is...\" */ 0x40)), _1)))\n                }\n                let memPos := mload(64)\n                mstore(memPos, iszero(iszero(expr)))\n                return(memPos, 32)\n            }\n            function external_fun_getChainId()\n            {\n                if callvalue() { revert(0, 0) }\n                if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                let memPos := mload(64)\n                mstore(memPos, /** @src 12:7481:7489  \"_chainId\" */ loadimmutable(\"2508\"))\n                /// @src 12:1413:33642  \"contract SmartAccount is...\"\n                return(memPos, 32)\n            }\n            function external_fun_validateUserOp()\n            {\n                if callvalue() { revert(0, 0) }\n                let _1 := not(3)\n                if slt(add(calldatasize(), _1), 96)\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 12:1413:33642  \"contract SmartAccount is...\"\n                let offset := calldataload(4)\n                if gt(offset, 0xffffffffffffffff)\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 12:1413:33642  \"contract SmartAccount is...\"\n                if slt(add(sub(calldatasize(), offset), _1), 352)\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 12:1413:33642  \"contract SmartAccount is...\"\n                let value2 := calldataload(68)\n                /// @src 10:2407:2502  \"if (msg.sender != address(entryPoint()))...\"\n                if /** @src 10:2411:2446  \"msg.sender != address(entryPoint())\" */ iszero(eq(/** @src 10:2411:2421  \"msg.sender\" */ caller(), /** @src 12:1413:33642  \"contract SmartAccount is...\" */ and(/** @src 12:8179:8190  \"_entryPoint\" */ loadimmutable(\"2506\"), /** @src 12:1413:33642  \"contract SmartAccount is...\" */ sub(shl(160, 1), 1))))\n                /// @src 10:2407:2502  \"if (msg.sender != address(entryPoint()))...\"\n                {\n                    /// @src 10:2467:2502  \"CallerIsNotAnEntryPoint(msg.sender)\"\n                    let _2 := /** @src 12:1413:33642  \"contract SmartAccount is...\" */ mload(64)\n                    /// @src 10:2467:2502  \"CallerIsNotAnEntryPoint(msg.sender)\"\n                    mstore(_2, shl(225, 0x5dac3db7))\n                    /// @src 12:1413:33642  \"contract SmartAccount is...\"\n                    mstore(/** @src 10:2467:2502  \"CallerIsNotAnEntryPoint(msg.sender)\" */ add(_2, /** @src 12:1413:33642  \"contract SmartAccount is...\" */ 4), /** @src 10:2411:2421  \"msg.sender\" */ caller())\n                    /// @src 10:2467:2502  \"CallerIsNotAnEntryPoint(msg.sender)\"\n                    revert(_2, /** @src 12:1413:33642  \"contract SmartAccount is...\" */ 36)\n                }\n                /// @src 10:2512:2567  \"validationData = _validateSignature(userOp, userOpHash)\"\n                let var_validationData := /** @src 10:2529:2567  \"_validateSignature(userOp, userOpHash)\" */ fun_validateSignature(/** @src 12:1413:33642  \"contract SmartAccount is...\" */ add(4, offset), calldataload(36))\n                /// @src 10:5019:5276  \"if (missingAccountFunds != 0) {...\"\n                if /** @src 10:5023:5047  \"missingAccountFunds != 0\" */ iszero(iszero(value2))\n                /// @src 10:5019:5276  \"if (missingAccountFunds != 0) {...\"\n                {\n                    /// @src 10:5063:5189  \"payable(msg.sender).call{...\"\n                    pop(call(/** @src 10:5154:5171  \"type(uint256).max\" */ not(0), /** @src 10:2411:2421  \"msg.sender\" */ caller(), /** @src 10:5063:5189  \"payable(msg.sender).call{...\" */ value2, /** @src -1:-1:-1 */ 0, 0, 0, 0))\n                    /// @src 12:1413:33642  \"contract SmartAccount is...\"\n                    switch returndatasize()\n                    case 0 { }\n                    default {\n                        let _3 := returndatasize()\n                        let _4 := array_allocation_size_bytes(_3)\n                        let memPtr := mload(64)\n                        finalize_allocation(memPtr, _4)\n                        mstore(memPtr, _3)\n                        returndatacopy(add(memPtr, 32), /** @src -1:-1:-1 */ 0, /** @src 12:1413:33642  \"contract SmartAccount is...\" */ returndatasize())\n                    }\n                }\n                let memPos := mload(64)\n                return(memPos, sub(abi_encode_uint256(memPos, var_validationData), memPos))\n            }\n            function external_fun_getNonce()\n            {\n                if callvalue() { revert(0, 0) }\n                if slt(add(calldatasize(), not(3)), 32)\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 12:1413:33642  \"contract SmartAccount is...\"\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 12:1413:33642  \"contract SmartAccount is...\" */ calldataload(4))\n                mstore(32, /** @src 12:7802:7808  \"nonces\" */ 0x33)\n                /// @src 12:1413:33642  \"contract SmartAccount is...\"\n                let _1 := sload(keccak256(/** @src -1:-1:-1 */ 0, /** @src 12:1413:33642  \"contract SmartAccount is...\" */ 0x40))\n                let memPos := mload(0x40)\n                mstore(memPos, _1)\n                return(memPos, 32)\n            }\n            function abi_decode_enum_Operation() -> value\n            {\n                value := calldataload(100)\n                if iszero(lt(value, 2)) { revert(0, 0) }\n            }\n            function abi_decode_addresst_uint256t_bytest_enum_Operation(dataEnd) -> value0, value1, value2, value3\n            {\n                if slt(add(dataEnd, not(3)), 128) { revert(0, 0) }\n                let value := calldataload(4)\n                validator_revert_address(value)\n                value0 := value\n                value1 := calldataload(36)\n                let offset := calldataload(68)\n                if gt(offset, 0xffffffffffffffff)\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 12:1413:33642  \"contract SmartAccount is...\"\n                value2 := abi_decode_bytes(add(4, offset), dataEnd)\n                let value_1 := calldataload(100)\n                if iszero(lt(value_1, 2))\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 12:1413:33642  \"contract SmartAccount is...\"\n                value3 := value_1\n            }\n            function external_fun_execTransactionFromModule()\n            {\n                if callvalue() { revert(0, 0) }\n                let param, param_1, param_2, param_3 := abi_decode_addresst_uint256t_bytest_enum_Operation(calldatasize())\n                let ret := fun_execTransactionFromModule(param, param_1, param_2, param_3)\n                let memPos := mload(64)\n                mstore(memPos, iszero(iszero(ret)))\n                return(memPos, 32)\n            }\n            function external_fun_addDeposit()\n            {\n                let _1 := 0\n                if slt(add(calldatasize(), not(3)), _1) { revert(_1, _1) }\n                let _2 := and(/** @src 12:8179:8190  \"_entryPoint\" */ loadimmutable(\"2506\"), /** @src 12:1413:33642  \"contract SmartAccount is...\" */ sub(shl(160, 1), 1))\n                /// @src 12:32289:32344  \"entryPoint().depositTo{value: msg.value}(address(this))\"\n                if iszero(extcodesize(_2))\n                {\n                    /// @src 12:1413:33642  \"contract SmartAccount is...\"\n                    revert(_1, _1)\n                }\n                /// @src 12:32289:32344  \"entryPoint().depositTo{value: msg.value}(address(this))\"\n                let _3 := /** @src 12:1413:33642  \"contract SmartAccount is...\" */ mload(64)\n                /// @src 12:32289:32344  \"entryPoint().depositTo{value: msg.value}(address(this))\"\n                mstore(_3, /** @src 12:1413:33642  \"contract SmartAccount is...\" */ shl(224, 0xb760faf9))\n                mstore(/** @src 12:32289:32344  \"entryPoint().depositTo{value: msg.value}(address(this))\" */ add(_3, /** @src 12:1413:33642  \"contract SmartAccount is...\" */ 4), /** @src 12:32338:32342  \"this\" */ address())\n                /// @src 12:32289:32344  \"entryPoint().depositTo{value: msg.value}(address(this))\"\n                let _4 := call(gas(), _2, /** @src 12:32319:32328  \"msg.value\" */ callvalue(), /** @src 12:32289:32344  \"entryPoint().depositTo{value: msg.value}(address(this))\" */ _3, /** @src 12:1413:33642  \"contract SmartAccount is...\" */ 36, /** @src 12:32289:32344  \"entryPoint().depositTo{value: msg.value}(address(this))\" */ _3, /** @src 12:1413:33642  \"contract SmartAccount is...\" */ _1)\n                /// @src 12:32289:32344  \"entryPoint().depositTo{value: msg.value}(address(this))\"\n                if iszero(_4) { revert_forward() }\n                if _4\n                {\n                    finalize_allocation_13215(_3)\n                    /// @src 12:1413:33642  \"contract SmartAccount is...\"\n                    _1 := _1\n                }\n                return(_1, _1)\n            }\n            function abi_decode_address_payable() -> value\n            {\n                value := calldataload(292)\n                validator_revert_address(value)\n            }\n            function external_fun_withdrawDepositTo()\n            {\n                let value0 := /** @src -1:-1:-1 */ 0\n                /// @src 12:1413:33642  \"contract SmartAccount is...\"\n                if slt(add(calldatasize(), not(3)), 64)\n                {\n                    revert(/** @src -1:-1:-1 */ value0, value0)\n                }\n                /// @src 12:1413:33642  \"contract SmartAccount is...\"\n                let value := calldataload(4)\n                validator_revert_address(value)\n                let _1 := sub(shl(160, 1), 1)\n                /// @src 12:4033:4093  \"if (msg.sender != owner) revert CallerIsNotOwner(msg.sender)\"\n                if /** @src 12:4037:4056  \"msg.sender != owner\" */ iszero(eq(/** @src 12:4037:4047  \"msg.sender\" */ caller(), /** @src 12:1413:33642  \"contract SmartAccount is...\" */ and(sload(/** @src 12:4051:4056  \"owner\" */ 0x32), /** @src 12:1413:33642  \"contract SmartAccount is...\" */ _1)))\n                /// @src 12:4033:4093  \"if (msg.sender != owner) revert CallerIsNotOwner(msg.sender)\"\n                {\n                    /// @src 12:4065:4093  \"CallerIsNotOwner(msg.sender)\"\n                    let _2 := /** @src 12:1413:33642  \"contract SmartAccount is...\" */ mload(64)\n                    /// @src 12:4065:4093  \"CallerIsNotOwner(msg.sender)\"\n                    mstore(_2, shl(224, 0xd4ed9a17))\n                    /// @src 12:1413:33642  \"contract SmartAccount is...\"\n                    mstore(/** @src 12:4065:4093  \"CallerIsNotOwner(msg.sender)\" */ add(_2, /** @src 12:1413:33642  \"contract SmartAccount is...\" */ 4), /** @src 12:4037:4047  \"msg.sender\" */ caller())\n                    /// @src 12:4065:4093  \"CallerIsNotOwner(msg.sender)\"\n                    revert(_2, /** @src 12:1413:33642  \"contract SmartAccount is...\" */ 36)\n                }\n                let _3 := and(/** @src 12:8179:8190  \"_entryPoint\" */ loadimmutable(\"2506\"), /** @src 12:1413:33642  \"contract SmartAccount is...\" */ _1)\n                /// @src 12:32641:32689  \"entryPoint().withdrawTo(withdrawAddress, amount)\"\n                if iszero(extcodesize(_3))\n                {\n                    /// @src 12:1413:33642  \"contract SmartAccount is...\"\n                    revert(/** @src -1:-1:-1 */ value0, value0)\n                }\n                /// @src 12:32641:32689  \"entryPoint().withdrawTo(withdrawAddress, amount)\"\n                let _4 := /** @src 12:1413:33642  \"contract SmartAccount is...\" */ mload(64)\n                /// @src 12:32641:32689  \"entryPoint().withdrawTo(withdrawAddress, amount)\"\n                mstore(_4, /** @src 12:1413:33642  \"contract SmartAccount is...\" */ shl(227, 0x040b850f))\n                mstore(/** @src 12:32641:32689  \"entryPoint().withdrawTo(withdrawAddress, amount)\" */ add(_4, /** @src 12:1413:33642  \"contract SmartAccount is...\" */ 4), and(value, _1))\n                mstore(add(/** @src 12:32641:32689  \"entryPoint().withdrawTo(withdrawAddress, amount)\" */ _4, /** @src 12:1413:33642  \"contract SmartAccount is...\" */ 36), calldataload(36))\n                /// @src 12:32641:32689  \"entryPoint().withdrawTo(withdrawAddress, amount)\"\n                let _5 := call(gas(), _3, /** @src -1:-1:-1 */ value0, /** @src 12:32641:32689  \"entryPoint().withdrawTo(withdrawAddress, amount)\" */ _4, /** @src 12:1413:33642  \"contract SmartAccount is...\" */ 68, /** @src 12:32641:32689  \"entryPoint().withdrawTo(withdrawAddress, amount)\" */ _4, /** @src -1:-1:-1 */ value0)\n                /// @src 12:32641:32689  \"entryPoint().withdrawTo(withdrawAddress, amount)\"\n                if iszero(_5) { revert_forward() }\n                if _5\n                {\n                    finalize_allocation_13215(_4)\n                    /// @src 12:1413:33642  \"contract SmartAccount is...\"\n                    value0 := /** @src -1:-1:-1 */ value0\n                }\n                /// @src 12:1413:33642  \"contract SmartAccount is...\"\n                return(value0, value0)\n            }\n            function copy_memory_to_memory_with_cleanup(src, dst, length)\n            {\n                let i := 0\n                for { } lt(i, length) { i := add(i, 32) }\n                {\n                    mstore(add(dst, i), mload(add(src, i)))\n                }\n                mstore(add(dst, length), 0)\n            }\n            function abi_encode_bytes_to_bytes(value, pos) -> end\n            {\n                let length := mload(value)\n                mstore(pos, length)\n                copy_memory_to_memory_with_cleanup(add(value, 0x20), add(pos, 0x20), length)\n                end := add(add(pos, and(add(length, 31), not(31))), 0x20)\n            }\n            function external_fun_execTransactionFromModuleReturnData()\n            {\n                if callvalue() { revert(0, 0) }\n                let param, param_1, param_2, param_3 := abi_decode_addresst_uint256t_bytest_enum_Operation(calldatasize())\n                /// @src 16:5401:5464  \"success = execTransactionFromModule(to, value, data, operation)\"\n                let var_success := /** @src 16:5411:5464  \"execTransactionFromModule(to, value, data, operation)\" */ fun_execTransactionFromModule(param, param_1, param_2, param_3)\n                /// @src 16:5530:6134  \"assembly {...\"\n                let usr$ptr := mload(0x40)\n                mstore(0x40, add(add(usr$ptr, returndatasize()), 0x20))\n                mstore(usr$ptr, returndatasize())\n                returndatacopy(add(usr$ptr, 0x20), /** @src -1:-1:-1 */ 0, /** @src 16:5530:6134  \"assembly {...\" */ returndatasize())\n                /// @src 12:1413:33642  \"contract SmartAccount is...\"\n                let memPos := mload(/** @src 16:5530:6134  \"assembly {...\" */ 0x40)\n                /// @src 12:1413:33642  \"contract SmartAccount is...\"\n                mstore(memPos, iszero(iszero(var_success)))\n                mstore(add(memPos, /** @src 16:5530:6134  \"assembly {...\" */ 0x20), 0x40)\n                /// @src 12:1413:33642  \"contract SmartAccount is...\"\n                return(memPos, sub(abi_encode_bytes_to_bytes(usr$ptr, add(memPos, /** @src 16:5530:6134  \"assembly {...\" */ 0x40)), /** @src 12:1413:33642  \"contract SmartAccount is...\" */ memPos))\n            }\n            function abi_decode_struct_Transaction(headStart, end) -> value\n            {\n                if slt(sub(end, headStart), 0xa0) { revert(0, 0) }\n                let memPtr := mload(64)\n                finalize_allocation_13219(memPtr)\n                value := memPtr\n                let value_1 := calldataload(headStart)\n                validator_revert_address(value_1)\n                mstore(memPtr, value_1)\n                let value_2 := calldataload(add(headStart, 32))\n                if iszero(lt(value_2, 2))\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 12:1413:33642  \"contract SmartAccount is...\"\n                mstore(add(memPtr, 32), value_2)\n                mstore(add(memPtr, 64), calldataload(add(headStart, 64)))\n                let offset := calldataload(add(headStart, 96))\n                if gt(offset, 0xffffffffffffffff)\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 12:1413:33642  \"contract SmartAccount is...\"\n                mstore(add(memPtr, 96), abi_decode_bytes(add(headStart, offset), end))\n                mstore(add(memPtr, 128), calldataload(add(headStart, 128)))\n            }\n            function abi_encode_bytes(headStart, value0) -> tail\n            {\n                mstore(headStart, 32)\n                tail := abi_encode_bytes_to_bytes(value0, add(headStart, 32))\n            }\n            function external_fun_encodeTransactionData()\n            {\n                if callvalue() { revert(0, 0) }\n                if slt(add(calldatasize(), not(3)), 224)\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 12:1413:33642  \"contract SmartAccount is...\"\n                let offset := calldataload(4)\n                if gt(offset, 0xffffffffffffffff)\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 12:1413:33642  \"contract SmartAccount is...\"\n                let value0 := abi_decode_struct_Transaction(add(4, offset), calldatasize())\n                if slt(add(calldatasize(), not(35)), 0xa0)\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 12:1413:33642  \"contract SmartAccount is...\"\n                let memPtr := mload(64)\n                finalize_allocation_13219(memPtr)\n                mstore(memPtr, calldataload(36))\n                mstore(add(memPtr, 32), calldataload(68))\n                mstore(add(memPtr, 64), calldataload(100))\n                let value := calldataload(132)\n                validator_revert_address(value)\n                mstore(add(memPtr, 96), value)\n                let value_1 := calldataload(164)\n                validator_revert_address(value_1)\n                mstore(add(memPtr, 128), value_1)\n                let ret := fun_encodeTransactionData(value0, memPtr, calldataload(196))\n                let memPos := mload(64)\n                return(memPos, sub(abi_encode_bytes(memPos, ret), memPos))\n            }\n            function external_fun_enableModule()\n            {\n                if callvalue() { revert(0, 0) }\n                if slt(add(calldatasize(), not(3)), 32)\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 12:1413:33642  \"contract SmartAccount is...\"\n                let value := calldataload(4)\n                validator_revert_address(value)\n                /// @src 21:386:522  \"modifier authorized() {...\"\n                fun_requireSelfCall()\n                /// @src 16:2431:2451  \"module == address(0)\"\n                let _1 := /** @src 12:1413:33642  \"contract SmartAccount is...\" */ and(/** @src 16:2431:2451  \"module == address(0)\" */ value, /** @src 12:1413:33642  \"contract SmartAccount is...\" */ sub(shl(160, 1), 1))\n                /// @src 16:2431:2481  \"module == address(0) || module == SENTINEL_MODULES\"\n                let expr := /** @src 16:2431:2451  \"module == address(0)\" */ iszero(_1)\n                /// @src 16:2431:2481  \"module == address(0) || module == SENTINEL_MODULES\"\n                if iszero(expr)\n                {\n                    expr := /** @src 16:2455:2481  \"module == SENTINEL_MODULES\" */ eq(_1, /** @src 16:522:525  \"0x1\" */ 0x01)\n                }\n                /// @src 16:2427:2538  \"if (module == address(0) || module == SENTINEL_MODULES)...\"\n                if expr\n                {\n                    /// @src 16:2502:2538  \"ModuleCannotBeZeroOrSentinel(module)\"\n                    let _2 := /** @src 12:1413:33642  \"contract SmartAccount is...\" */ mload(64)\n                    /// @src 16:2502:2538  \"ModuleCannotBeZeroOrSentinel(module)\"\n                    mstore(_2, shl(224, 0xcadb248f))\n                    revert(_2, sub(abi_encode_tuple_address(add(_2, /** @src 12:1413:33642  \"contract SmartAccount is...\" */ 4), /** @src 16:2502:2538  \"ModuleCannotBeZeroOrSentinel(module)\" */ value), _2))\n                }\n                /// @src 16:2589:2659  \"if (modules[module] != address(0)) revert ModuleAlreadyEnabled(module)\"\n                if /** @src 16:2593:2622  \"modules[module] != address(0)\" */ iszero(iszero(cleanup_address(/** @src 16:2593:2608  \"modules[module]\" */ read_from_storage_split_offset_address(mapping_index_access_mapping_address_address_of_address_13223(value)))))\n                /// @src 16:2589:2659  \"if (modules[module] != address(0)) revert ModuleAlreadyEnabled(module)\"\n                {\n                    /// @src 16:2631:2659  \"ModuleAlreadyEnabled(module)\"\n                    let _3 := /** @src 12:1413:33642  \"contract SmartAccount is...\" */ mload(64)\n                    /// @src 16:2631:2659  \"ModuleAlreadyEnabled(module)\"\n                    mstore(_3, shl(224, 0xb29d4595))\n                    revert(_3, sub(abi_encode_tuple_address(add(_3, /** @src 12:1413:33642  \"contract SmartAccount is...\" */ 4), /** @src 16:2631:2659  \"ModuleAlreadyEnabled(module)\" */ value), _3))\n                }\n                /// @src 16:2669:2712  \"modules[module] = modules[SENTINEL_MODULES]\"\n                update_storage_value_offsett_address_to_address(/** @src 16:2669:2684  \"modules[module]\" */ mapping_index_access_mapping_address_address_of_address_13223(value), /** @src 16:2687:2712  \"modules[SENTINEL_MODULES]\" */ read_from_storage_split_offset_address(mapping_index_access_mapping_address_address_of_address_13224()))\n                /// @src 16:2722:2756  \"modules[SENTINEL_MODULES] = module\"\n                update_storage_value_offsett_address_to_address(/** @src 16:2722:2747  \"modules[SENTINEL_MODULES]\" */ mapping_index_access_mapping_address_address_of_address_13224(), /** @src 16:2722:2756  \"modules[SENTINEL_MODULES] = module\" */ value)\n                /// @src 16:2771:2792  \"EnabledModule(module)\"\n                let _4 := /** @src 12:1413:33642  \"contract SmartAccount is...\" */ mload(64)\n                /// @src 16:2771:2792  \"EnabledModule(module)\"\n                log1(_4, sub(abi_encode_tuple_address(_4, value), _4), 0xecdf3a3effea5783a3c4c2140e677577666428d44ed9d474a0b3a4c9943f8440)\n                /// @src 12:1413:33642  \"contract SmartAccount is...\"\n                return(/** @src -1:-1:-1 */ 0, 0)\n            }\n            /// @src 12:1413:33642  \"contract SmartAccount is...\"\n            function external_fun_execTransaction_S6W()\n            {\n                if slt(add(calldatasize(), not(3)), 224)\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 12:1413:33642  \"contract SmartAccount is...\"\n                let offset := calldataload(4)\n                let _1 := 0xffffffffffffffff\n                if gt(offset, _1)\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 12:1413:33642  \"contract SmartAccount is...\"\n                let value0 := abi_decode_struct_Transaction(add(4, offset), calldatasize())\n                if slt(add(calldatasize(), not(35)), 0xa0)\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 12:1413:33642  \"contract SmartAccount is...\"\n                let memPtr := mload(64)\n                finalize_allocation_13219(memPtr)\n                mstore(memPtr, calldataload(36))\n                mstore(add(memPtr, 32), calldataload(68))\n                mstore(add(memPtr, 64), calldataload(100))\n                let value := calldataload(132)\n                validator_revert_address(value)\n                mstore(add(memPtr, 96), value)\n                let value_1 := calldataload(164)\n                validator_revert_address(value_1)\n                mstore(add(memPtr, 128), value_1)\n                let offset_1 := calldataload(196)\n                if gt(offset_1, _1)\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 12:1413:33642  \"contract SmartAccount is...\"\n                let ret := /** @src 12:9841:9853  \"bool success\" */ modifier_nonReentrant(/** @src 12:1413:33642  \"contract SmartAccount is...\" */ value0, memPtr, abi_decode_bytes(add(4, offset_1), calldatasize()))\n                let memPos := mload(64)\n                mstore(memPos, iszero(iszero(ret)))\n                return(memPos, 32)\n            }\n            function abi_encode_address(value, pos)\n            {\n                mstore(pos, and(value, sub(shl(160, 1), 1)))\n            }\n            function abi_encode_tuple_address(headStart, value0) -> tail\n            {\n                tail := add(headStart, 32)\n                mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n            }\n            function external_fun_getFallbackHandler()\n            {\n                if callvalue() { revert(0, 0) }\n                if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                let ret := /** @src 15:2150:2231  \"assembly {...\" */ sload(49122629484629529244014240937346711770925847994644146912111677022347558721748)\n                /// @src 12:1413:33642  \"contract SmartAccount is...\"\n                let memPos := mload(64)\n                mstore(memPos, and(ret, sub(shl(160, 1), 1)))\n                return(memPos, 32)\n            }\n            function external_fun_owner()\n            {\n                if callvalue() { revert(0, 0) }\n                if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                let value := and(sload(/** @src 12:2389:2409  \"address public owner\" */ 50), /** @src 12:1413:33642  \"contract SmartAccount is...\" */ sub(shl(160, 1), 1))\n                let memPos := mload(64)\n                mstore(memPos, value)\n                return(memPos, 32)\n            }\n            function external_fun_handlePaymentRevert()\n            {\n                if callvalue() { revert(0, 0) }\n                if slt(add(calldatasize(), not(3)), 192)\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 12:1413:33642  \"contract SmartAccount is...\"\n                let value0 := calldataload(4)\n                let value1 := calldataload(36)\n                let value2 := calldataload(68)\n                let value3 := calldataload(100)\n                let value := calldataload(132)\n                validator_revert_address(value)\n                let value_1 := calldataload(164)\n                validator_revert_address(value_1)\n                /// @src 12:16378:16442  \"require(tokenGasPriceFactor != 0, \\\"invalid tokenGasPriceFactor\\\")\"\n                require_helper_stringliteral(/** @src 12:16386:16410  \"tokenGasPriceFactor != 0\" */ iszero(iszero(value3)))\n                /// @src 12:16471:16480  \"gasleft()\"\n                let expr := gas()\n                /// @src 12:1413:33642  \"contract SmartAccount is...\"\n                let _1 := sub(shl(160, 1), 1)\n                /// @src 12:16570:16660  \"refundReceiver == address(0)...\"\n                let expr_1 := /** @src -1:-1:-1 */ 0\n                /// @src 12:16570:16660  \"refundReceiver == address(0)...\"\n                switch /** @src 12:16570:16598  \"refundReceiver == address(0)\" */ iszero(/** @src 12:1413:33642  \"contract SmartAccount is...\" */ and(/** @src 12:16570:16598  \"refundReceiver == address(0)\" */ value_1, /** @src 12:1413:33642  \"contract SmartAccount is...\" */ _1))\n                case /** @src 12:16570:16660  \"refundReceiver == address(0)...\" */ 0 { expr_1 := value_1 }\n                default {\n                    expr_1 := /** @src 12:16621:16630  \"tx.origin\" */ origin()\n                }\n                /// @src 12:16670:17424  \"if (gasToken == address(0)) {...\"\n                switch /** @src 12:16674:16696  \"gasToken == address(0)\" */ iszero(/** @src 12:1413:33642  \"contract SmartAccount is...\" */ and(/** @src 12:16674:16696  \"gasToken == address(0)\" */ value, /** @src 12:1413:33642  \"contract SmartAccount is...\" */ _1))\n                case /** @src 12:16670:17424  \"if (gasToken == address(0)) {...\" */ 0 {\n                    /// @src 12:17205:17279  \"((gasUsed + baseGas) * (gasPrice)) /...\"\n                    let expr_2 := checked_div_uint256(/** @src 12:17206:17238  \"(gasUsed + baseGas) * (gasPrice)\" */ checked_mul_uint256(/** @src 12:17207:17224  \"gasUsed + baseGas\" */ checked_add_uint256(value0, value1), /** @src 12:17206:17238  \"(gasUsed + baseGas) * (gasPrice)\" */ value2), /** @src 12:17205:17279  \"((gasUsed + baseGas) * (gasPrice)) /...\" */ value3)\n                    /// @src 12:17293:17413  \"if (!transferToken(gasToken, receiver, payment))...\"\n                    if /** @src 12:17297:17340  \"!transferToken(gasToken, receiver, payment)\" */ cleanup_bool(iszero(/** @src 12:17298:17340  \"transferToken(gasToken, receiver, payment)\" */ fun_transferToken(value, /** @src 12:1413:33642  \"contract SmartAccount is...\" */ and(/** @src 12:17298:17340  \"transferToken(gasToken, receiver, payment)\" */ expr_1, /** @src 12:1413:33642  \"contract SmartAccount is...\" */ _1), /** @src 12:17298:17340  \"transferToken(gasToken, receiver, payment)\" */ expr_2)))\n                    /// @src 12:17293:17413  \"if (!transferToken(gasToken, receiver, payment))...\"\n                    {\n                        /// @src 12:17365:17413  \"TokenTransferFailed(gasToken, receiver, payment)\"\n                        let _2 := /** @src 12:1413:33642  \"contract SmartAccount is...\" */ mload(64)\n                        /// @src 12:17365:17413  \"TokenTransferFailed(gasToken, receiver, payment)\"\n                        mstore(_2, shl(227, 0x190eecf3))\n                        revert(_2, sub(abi_encode_address_address_payable_uint256(add(_2, /** @src 12:1413:33642  \"contract SmartAccount is...\" */ 4), /** @src 12:17365:17413  \"TokenTransferFailed(gasToken, receiver, payment)\" */ value, expr_1, expr_2), _2))\n                    }\n                }\n                default /// @src 12:16670:17424  \"if (gasToken == address(0)) {...\"\n                {\n                    /// @src 12:16836:16853  \"gasUsed + baseGas\"\n                    let expr_3 := checked_add_uint256(value0, value1)\n                    /// @src 12:16874:16921  \"gasPrice < tx.gasprice ? gasPrice : tx.gasprice\"\n                    let expr_4 := /** @src -1:-1:-1 */ 0\n                    /// @src 12:16874:16921  \"gasPrice < tx.gasprice ? gasPrice : tx.gasprice\"\n                    switch /** @src 12:16874:16896  \"gasPrice < tx.gasprice\" */ lt(value2, /** @src 12:16885:16896  \"tx.gasprice\" */ gasprice())\n                    case /** @src 12:16874:16921  \"gasPrice < tx.gasprice ? gasPrice : tx.gasprice\" */ 0 {\n                        expr_4 := /** @src 12:16885:16896  \"tx.gasprice\" */ gasprice()\n                    }\n                    default /// @src 12:16874:16921  \"gasPrice < tx.gasprice ? gasPrice : tx.gasprice\"\n                    { expr_4 := value2 }\n                    /// @src 12:16835:16922  \"(gasUsed + baseGas) *...\"\n                    let expr_5 := checked_mul_uint256(expr_3, expr_4)\n                    /// @src 12:17069:17156  \"if (!success)...\"\n                    if /** @src 12:17073:17081  \"!success\" */ cleanup_bool(iszero(/** @src 12:16962:17056  \"assembly {...\" */ call(gas(), expr_1, expr_5, /** @src -1:-1:-1 */ 0, 0, 0, 0)))\n                    /// @src 12:17069:17156  \"if (!success)...\"\n                    {\n                        /// @src 12:17106:17156  \"TokenTransferFailed(address(0), receiver, payment)\"\n                        let _3 := /** @src 12:1413:33642  \"contract SmartAccount is...\" */ mload(64)\n                        /// @src 12:17106:17156  \"TokenTransferFailed(address(0), receiver, payment)\"\n                        mstore(_3, /** @src 12:17365:17413  \"TokenTransferFailed(gasToken, receiver, payment)\" */ shl(227, 0x190eecf3))\n                        /// @src 12:17106:17156  \"TokenTransferFailed(address(0), receiver, payment)\"\n                        revert(_3, sub(abi_encode_address_address_payable_uint256_13235(add(_3, /** @src 12:1413:33642  \"contract SmartAccount is...\" */ 4), /** @src 12:17106:17156  \"TokenTransferFailed(address(0), receiver, payment)\" */ expr_1, expr_5), _3))\n                    }\n                }\n                /// @src 12:1413:33642  \"contract SmartAccount is...\"\n                let diff := sub(expr, /** @src 12:17482:17491  \"gasleft()\" */ gas())\n                /// @src 12:17525:17554  \"abi.encodePacked(requiredGas)\"\n                let expr_mpos := /** @src 12:1413:33642  \"contract SmartAccount is...\" */ mload(64)\n                /// @src 12:17525:17554  \"abi.encodePacked(requiredGas)\"\n                let _4 := sub(abi_encode_packed_uint256(add(expr_mpos, /** @src 12:1413:33642  \"contract SmartAccount is...\" */ 32), /** @src 12:17525:17554  \"abi.encodePacked(requiredGas)\" */ diff), expr_mpos)\n                mstore(expr_mpos, add(_4, /** @src 12:1413:33642  \"contract SmartAccount is...\" */ not(31)))\n                /// @src 12:17525:17554  \"abi.encodePacked(requiredGas)\"\n                finalize_allocation(expr_mpos, _4)\n                /// @src 12:17511:17556  \"revert(string(abi.encodePacked(requiredGas)))\"\n                let _5 := /** @src 12:1413:33642  \"contract SmartAccount is...\" */ mload(64)\n                /// @src 12:17511:17556  \"revert(string(abi.encodePacked(requiredGas)))\"\n                mstore(_5, /** @src 12:1413:33642  \"contract SmartAccount is...\" */ shl(229, 4594637))\n                /// @src 12:17511:17556  \"revert(string(abi.encodePacked(requiredGas)))\"\n                revert(_5, sub(abi_encode_bytes(add(_5, /** @src 12:1413:33642  \"contract SmartAccount is...\" */ 4), /** @src 12:17511:17556  \"revert(string(abi.encodePacked(requiredGas)))\" */ expr_mpos), _5))\n            }\n            /// @src 12:1413:33642  \"contract SmartAccount is...\"\n            function external_fun_transfer()\n            {\n                if callvalue() { revert(0, 0) }\n                if slt(add(calldatasize(), not(3)), 64)\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 12:1413:33642  \"contract SmartAccount is...\"\n                let value := calldataload(4)\n                validator_revert_address(value)\n                let value1 := calldataload(36)\n                let _1 := sub(shl(160, 1), 1)\n                /// @src 12:4033:4093  \"if (msg.sender != owner) revert CallerIsNotOwner(msg.sender)\"\n                if /** @src 12:4037:4056  \"msg.sender != owner\" */ iszero(eq(/** @src 12:4037:4047  \"msg.sender\" */ caller(), /** @src 12:1413:33642  \"contract SmartAccount is...\" */ and(sload(/** @src 12:4051:4056  \"owner\" */ 0x32), /** @src 12:1413:33642  \"contract SmartAccount is...\" */ _1)))\n                /// @src 12:4033:4093  \"if (msg.sender != owner) revert CallerIsNotOwner(msg.sender)\"\n                {\n                    /// @src 12:4065:4093  \"CallerIsNotOwner(msg.sender)\"\n                    let _2 := /** @src 12:1413:33642  \"contract SmartAccount is...\" */ mload(64)\n                    /// @src 12:4065:4093  \"CallerIsNotOwner(msg.sender)\"\n                    mstore(_2, shl(224, 0xd4ed9a17))\n                    /// @src 12:1413:33642  \"contract SmartAccount is...\"\n                    mstore(/** @src 12:4065:4093  \"CallerIsNotOwner(msg.sender)\" */ add(_2, /** @src 12:1413:33642  \"contract SmartAccount is...\" */ 4), /** @src 12:4037:4047  \"msg.sender\" */ caller())\n                    /// @src 12:4065:4093  \"CallerIsNotOwner(msg.sender)\"\n                    revert(_2, /** @src 12:1413:33642  \"contract SmartAccount is...\" */ 36)\n                }\n                /// @src 12:25229:25290  \"if (dest == address(0)) revert TransferToZeroAddressAttempt()\"\n                if /** @src 12:25233:25251  \"dest == address(0)\" */ iszero(/** @src 12:1413:33642  \"contract SmartAccount is...\" */ and(/** @src 12:25233:25251  \"dest == address(0)\" */ value, /** @src 12:1413:33642  \"contract SmartAccount is...\" */ _1))\n                /// @src 12:25229:25290  \"if (dest == address(0)) revert TransferToZeroAddressAttempt()\"\n                {\n                    /// @src 12:25260:25290  \"TransferToZeroAddressAttempt()\"\n                    let _3 := /** @src 12:1413:33642  \"contract SmartAccount is...\" */ mload(64)\n                    /// @src 12:25260:25290  \"TransferToZeroAddressAttempt()\"\n                    mstore(_3, shl(228, 0x09293b19))\n                    revert(_3, /** @src 12:1413:33642  \"contract SmartAccount is...\" */ 4)\n                }\n                /// @src -1:-1:-1\n                let _4 := 0\n                /// @src 12:25412:25478  \"if (!success) revert TokenTransferFailed(address(0), dest, amount)\"\n                if /** @src 12:25416:25424  \"!success\" */ iszero(/** @src 12:25322:25403  \"assembly {...\" */ call(gas(), value, value1, /** @src -1:-1:-1 */ _4, _4, _4, _4))\n                /// @src 12:25412:25478  \"if (!success) revert TokenTransferFailed(address(0), dest, amount)\"\n                {\n                    /// @src 12:25433:25478  \"TokenTransferFailed(address(0), dest, amount)\"\n                    let _5 := /** @src 12:1413:33642  \"contract SmartAccount is...\" */ mload(64)\n                    /// @src 12:25433:25478  \"TokenTransferFailed(address(0), dest, amount)\"\n                    mstore(_5, /** @src 12:17365:17413  \"TokenTransferFailed(gasToken, receiver, payment)\" */ shl(227, 0x190eecf3))\n                    /// @src 12:25433:25478  \"TokenTransferFailed(address(0), dest, amount)\"\n                    revert(_5, sub(abi_encode_address_address_payable_uint256_13235(add(_5, /** @src 12:1413:33642  \"contract SmartAccount is...\" */ 4), /** @src 12:25433:25478  \"TokenTransferFailed(address(0), dest, amount)\" */ value, value1), _5))\n                }\n                /// @src 12:1413:33642  \"contract SmartAccount is...\"\n                return(/** @src -1:-1:-1 */ _4, _4)\n            }\n            /// @src 12:1413:33642  \"contract SmartAccount is...\"\n            function external_fun_getImplementation()\n            {\n                if callvalue() { revert(0, 0) }\n                if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                let ret := /** @src 12:6721:6789  \"assembly {...\" */ sload(address())\n                /// @src 12:1413:33642  \"contract SmartAccount is...\"\n                let memPos := mload(64)\n                mstore(memPos, and(ret, sub(shl(160, 1), 1)))\n                return(memPos, 32)\n            }\n            function external_fun_getTransactionHash()\n            {\n                if callvalue() { revert(0, 0) }\n                if slt(add(calldatasize(), not(3)), 352)\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 12:1413:33642  \"contract SmartAccount is...\"\n                let value := calldataload(4)\n                validator_revert_address(value)\n                let offset := calldataload(68)\n                if gt(offset, 0xffffffffffffffff)\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 12:1413:33642  \"contract SmartAccount is...\"\n                let value2, value3 := abi_decode_bytes_calldata(add(4, offset), calldatasize())\n                let value4 := abi_decode_enum_Operation()\n                let value_1 := calldataload(260)\n                validator_revert_address(value_1)\n                let value10 := abi_decode_address_payable()\n                let ret := fun_getTransactionHash(value, calldataload(36), value2, value3, value4, calldataload(132), calldataload(164), calldataload(196), calldataload(228), value_1, value10, calldataload(324))\n                let memPos := mload(64)\n                return(memPos, sub(abi_encode_uint256(memPos, ret), memPos))\n            }\n            function external_fun_pullTokens()\n            {\n                if callvalue() { revert(0, 0) }\n                if slt(add(calldatasize(), not(3)), 96)\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 12:1413:33642  \"contract SmartAccount is...\"\n                let value := calldataload(4)\n                validator_revert_address(value)\n                let value_1 := calldataload(36)\n                validator_revert_address(value_1)\n                let value2 := calldataload(68)\n                let _1 := sub(shl(160, 1), 1)\n                /// @src 12:4033:4093  \"if (msg.sender != owner) revert CallerIsNotOwner(msg.sender)\"\n                if /** @src 12:4037:4056  \"msg.sender != owner\" */ iszero(eq(/** @src 12:4037:4047  \"msg.sender\" */ caller(), /** @src 12:1413:33642  \"contract SmartAccount is...\" */ and(sload(/** @src 12:4051:4056  \"owner\" */ 0x32), /** @src 12:1413:33642  \"contract SmartAccount is...\" */ _1)))\n                /// @src 12:4033:4093  \"if (msg.sender != owner) revert CallerIsNotOwner(msg.sender)\"\n                {\n                    /// @src 12:4065:4093  \"CallerIsNotOwner(msg.sender)\"\n                    let _2 := /** @src 12:1413:33642  \"contract SmartAccount is...\" */ mload(64)\n                    /// @src 12:4065:4093  \"CallerIsNotOwner(msg.sender)\"\n                    mstore(_2, shl(224, 0xd4ed9a17))\n                    /// @src 12:1413:33642  \"contract SmartAccount is...\"\n                    mstore(/** @src 12:4065:4093  \"CallerIsNotOwner(msg.sender)\" */ add(_2, /** @src 12:1413:33642  \"contract SmartAccount is...\" */ 4), /** @src 12:4037:4047  \"msg.sender\" */ caller())\n                    /// @src 12:4065:4093  \"CallerIsNotOwner(msg.sender)\"\n                    revert(_2, /** @src 12:1413:33642  \"contract SmartAccount is...\" */ 36)\n                }\n                let _3 := and(/** @src 12:26030:26048  \"dest == address(0)\" */ value_1, /** @src 12:1413:33642  \"contract SmartAccount is...\" */ _1)\n                /// @src 12:26026:26087  \"if (dest == address(0)) revert TransferToZeroAddressAttempt()\"\n                if /** @src 12:26030:26048  \"dest == address(0)\" */ iszero(/** @src 12:1413:33642  \"contract SmartAccount is...\" */ _3)\n                /// @src 12:26026:26087  \"if (dest == address(0)) revert TransferToZeroAddressAttempt()\"\n                {\n                    /// @src 12:26057:26087  \"TransferToZeroAddressAttempt()\"\n                    let _4 := /** @src 12:1413:33642  \"contract SmartAccount is...\" */ mload(64)\n                    /// @src 12:26057:26087  \"TransferToZeroAddressAttempt()\"\n                    mstore(_4, /** @src 12:25260:25290  \"TransferToZeroAddressAttempt()\" */ shl(228, 0x09293b19))\n                    /// @src 12:26057:26087  \"TransferToZeroAddressAttempt()\"\n                    revert(_4, /** @src 12:1413:33642  \"contract SmartAccount is...\" */ 4)\n                }\n                /// @src 12:26097:26197  \"if (!transferToken(token, dest, amount))...\"\n                if /** @src 12:26101:26136  \"!transferToken(token, dest, amount)\" */ iszero(/** @src 12:26102:26136  \"transferToken(token, dest, amount)\" */ fun_transferToken(value, value_1, value2))\n                /// @src 12:26097:26197  \"if (!transferToken(token, dest, amount))...\"\n                {\n                    /// @src 12:26157:26197  \"TokenTransferFailed(token, dest, amount)\"\n                    let _5 := /** @src 12:1413:33642  \"contract SmartAccount is...\" */ mload(64)\n                    /// @src 12:26157:26197  \"TokenTransferFailed(token, dest, amount)\"\n                    mstore(_5, /** @src 12:17365:17413  \"TokenTransferFailed(gasToken, receiver, payment)\" */ shl(227, 0x190eecf3))\n                    /// @src 12:1413:33642  \"contract SmartAccount is...\"\n                    mstore(/** @src 12:26157:26197  \"TokenTransferFailed(token, dest, amount)\" */ add(_5, /** @src 12:1413:33642  \"contract SmartAccount is...\" */ 4), and(value, _1))\n                    mstore(add(/** @src 12:26157:26197  \"TokenTransferFailed(token, dest, amount)\" */ _5, /** @src 12:1413:33642  \"contract SmartAccount is...\" */ 36), _3)\n                    mstore(add(/** @src 12:26157:26197  \"TokenTransferFailed(token, dest, amount)\" */ _5, /** @src 12:1413:33642  \"contract SmartAccount is...\" */ 68), value2)\n                    /// @src 12:26157:26197  \"TokenTransferFailed(token, dest, amount)\"\n                    revert(_5, /** @src 12:1413:33642  \"contract SmartAccount is...\" */ 100)\n                }\n                return(/** @src -1:-1:-1 */ 0, 0)\n            }\n            /// @src 12:1413:33642  \"contract SmartAccount is...\"\n            function external_fun_nonce()\n            {\n                if callvalue() { revert(0, 0) }\n                if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                /// @src 10:1749:1788  \"entryPoint().getNonce(address(this), 0)\"\n                let _1 := /** @src 12:1413:33642  \"contract SmartAccount is...\" */ mload(64)\n                /// @src 10:1749:1788  \"entryPoint().getNonce(address(this), 0)\"\n                mstore(_1, /** @src 12:1413:33642  \"contract SmartAccount is...\" */ shl(225, 0x1aab3f0d))\n                mstore(/** @src 10:1749:1788  \"entryPoint().getNonce(address(this), 0)\" */ add(_1, /** @src 12:1413:33642  \"contract SmartAccount is...\" */ 4), /** @src 10:1779:1783  \"this\" */ address())\n                /// @src 12:1413:33642  \"contract SmartAccount is...\"\n                mstore(add(/** @src 10:1749:1788  \"entryPoint().getNonce(address(this), 0)\" */ _1, /** @src 12:1413:33642  \"contract SmartAccount is...\" */ 36), 0)\n                /// @src 10:1749:1788  \"entryPoint().getNonce(address(this), 0)\"\n                let _2 := staticcall(gas(), /** @src 12:1413:33642  \"contract SmartAccount is...\" */ and(/** @src 12:8179:8190  \"_entryPoint\" */ loadimmutable(\"2506\"), /** @src 12:1413:33642  \"contract SmartAccount is...\" */ sub(shl(160, 1), 1)), /** @src 10:1749:1788  \"entryPoint().getNonce(address(this), 0)\" */ _1, /** @src 12:1413:33642  \"contract SmartAccount is...\" */ 68, /** @src 10:1749:1788  \"entryPoint().getNonce(address(this), 0)\" */ _1, 32)\n                if iszero(_2) { revert_forward() }\n                let expr := /** @src 12:1413:33642  \"contract SmartAccount is...\" */ 0\n                /// @src 10:1749:1788  \"entryPoint().getNonce(address(this), 0)\"\n                if _2\n                {\n                    let _3 := 32\n                    if gt(_3, returndatasize()) { _3 := returndatasize() }\n                    finalize_allocation(_1, _3)\n                    expr := abi_decode_uint256_fromMemory(_1, add(_1, _3))\n                }\n                /// @src 12:1413:33642  \"contract SmartAccount is...\"\n                let memPos := mload(64)\n                return(memPos, sub(abi_encode_uint256(memPos, expr), memPos))\n            }\n            function external_fun_entryPoint()\n            {\n                if callvalue() { revert(0, 0) }\n                if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                let memPos := mload(64)\n                mstore(memPos, and(/** @src 12:8179:8190  \"_entryPoint\" */ loadimmutable(\"2506\"), /** @src 12:1413:33642  \"contract SmartAccount is...\" */ sub(shl(160, 1), 1)))\n                return(memPos, 32)\n            }\n            function external_fun_getDeposit()\n            {\n                if callvalue() { revert(0, 0) }\n                if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                /// @src 12:32110:32147  \"entryPoint().balanceOf(address(this))\"\n                let _1 := /** @src 12:1413:33642  \"contract SmartAccount is...\" */ mload(64)\n                /// @src 12:32110:32147  \"entryPoint().balanceOf(address(this))\"\n                mstore(_1, /** @src 12:1413:33642  \"contract SmartAccount is...\" */ shl(224, 0x70a08231))\n                mstore(/** @src 12:32110:32147  \"entryPoint().balanceOf(address(this))\" */ add(_1, /** @src 12:1413:33642  \"contract SmartAccount is...\" */ 4), /** @src 12:32141:32145  \"this\" */ address())\n                /// @src 12:32110:32147  \"entryPoint().balanceOf(address(this))\"\n                let _2 := staticcall(gas(), /** @src 12:1413:33642  \"contract SmartAccount is...\" */ and(/** @src 12:8179:8190  \"_entryPoint\" */ loadimmutable(\"2506\"), /** @src 12:1413:33642  \"contract SmartAccount is...\" */ sub(shl(160, 1), 1)), /** @src 12:32110:32147  \"entryPoint().balanceOf(address(this))\" */ _1, /** @src 12:1413:33642  \"contract SmartAccount is...\" */ 36, /** @src 12:32110:32147  \"entryPoint().balanceOf(address(this))\" */ _1, 32)\n                if iszero(_2) { revert_forward() }\n                let expr := /** @src 12:1413:33642  \"contract SmartAccount is...\" */ 0\n                /// @src 12:32110:32147  \"entryPoint().balanceOf(address(this))\"\n                if _2\n                {\n                    let _3 := 32\n                    if gt(_3, returndatasize()) { _3 := returndatasize() }\n                    finalize_allocation(_1, _3)\n                    expr := abi_decode_uint256_fromMemory(_1, add(_1, _3))\n                }\n                /// @src 12:1413:33642  \"contract SmartAccount is...\"\n                let memPos := mload(64)\n                mstore(memPos, expr)\n                return(memPos, /** @src 12:32110:32147  \"entryPoint().balanceOf(address(this))\" */ 32)\n            }\n            /// @src 12:1413:33642  \"contract SmartAccount is...\"\n            function external_fun_requiredTxGas()\n            {\n                if callvalue() { revert(0, 0) }\n                if slt(add(calldatasize(), not(3)), 128)\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 12:1413:33642  \"contract SmartAccount is...\"\n                let value := calldataload(4)\n                validator_revert_address(value)\n                let offset := calldataload(68)\n                if gt(offset, 0xffffffffffffffff)\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 12:1413:33642  \"contract SmartAccount is...\"\n                let value2, value3 := abi_decode_bytes_calldata(add(4, offset), calldatasize())\n                let value4 := abi_decode_enum_Operation()\n                /// @src 12:21466:21475  \"gasleft()\"\n                let expr := gas()\n                /// @src 12:21572:21661  \"if (!execute(to, value, data, operation, gasleft()))...\"\n                if /** @src 12:21576:21623  \"!execute(to, value, data, operation, gasleft())\" */ iszero(/** @src 12:21577:21623  \"execute(to, value, data, operation, gasleft())\" */ fun_execute(value, /** @src 12:1413:33642  \"contract SmartAccount is...\" */ calldataload(36), abi_decode_available_length_bytes(/** @src 12:21577:21623  \"execute(to, value, data, operation, gasleft())\" */ value2, value3, /** @src 12:1413:33642  \"contract SmartAccount is...\" */ calldatasize()), /** @src 12:21577:21623  \"execute(to, value, data, operation, gasleft())\" */ value4, /** @src 12:21613:21622  \"gasleft()\" */ gas()))\n                /// @src 12:21572:21661  \"if (!execute(to, value, data, operation, gasleft()))...\"\n                {\n                    /// @src 12:21644:21661  \"ExecutionFailed()\"\n                    let _1 := /** @src 12:1413:33642  \"contract SmartAccount is...\" */ mload(64)\n                    /// @src 12:21644:21661  \"ExecutionFailed()\"\n                    mstore(_1, shl(226, 0x2b3f6d11))\n                    revert(_1, /** @src 12:1413:33642  \"contract SmartAccount is...\" */ 4)\n                }\n                let diff := sub(expr, /** @src 12:21804:21813  \"gasleft()\" */ gas())\n                /// @src 12:21776:21814  \"abi.encodePacked(startGas - gasleft())\"\n                let expr_mpos := /** @src 12:1413:33642  \"contract SmartAccount is...\" */ mload(64)\n                mstore(/** @src 12:21776:21814  \"abi.encodePacked(startGas - gasleft())\" */ add(expr_mpos, /** @src 12:1413:33642  \"contract SmartAccount is...\" */ 32), diff)\n                /// @src 12:21776:21814  \"abi.encodePacked(startGas - gasleft())\"\n                mstore(expr_mpos, /** @src 12:1413:33642  \"contract SmartAccount is...\" */ 32)\n                /// @src 12:21776:21814  \"abi.encodePacked(startGas - gasleft())\"\n                finalize_allocation_21860(expr_mpos)\n                /// @src 12:21762:21816  \"revert(string(abi.encodePacked(startGas - gasleft())))\"\n                let _2 := /** @src 12:1413:33642  \"contract SmartAccount is...\" */ mload(64)\n                /// @src 12:21762:21816  \"revert(string(abi.encodePacked(startGas - gasleft())))\"\n                mstore(_2, /** @src 12:1413:33642  \"contract SmartAccount is...\" */ shl(229, 4594637))\n                /// @src 12:21762:21816  \"revert(string(abi.encodePacked(startGas - gasleft())))\"\n                revert(_2, sub(abi_encode_bytes(add(_2, /** @src 12:1413:33642  \"contract SmartAccount is...\" */ 4), /** @src 12:21762:21816  \"revert(string(abi.encodePacked(startGas - gasleft())))\" */ expr_mpos), _2))\n            }\n            /// @src 12:1413:33642  \"contract SmartAccount is...\"\n            function abi_encode_array_address_dyn_address(headStart, value0, value1) -> tail\n            {\n                let tail_1 := add(headStart, 64)\n                mstore(headStart, 64)\n                let pos := tail_1\n                let length := mload(value0)\n                mstore(tail_1, length)\n                pos := add(headStart, 96)\n                let _1 := 0x20\n                let srcPtr := add(value0, _1)\n                let i := 0\n                for { } lt(i, length) { i := add(i, 1) }\n                {\n                    mstore(pos, and(mload(srcPtr), sub(shl(160, 1), 1)))\n                    pos := add(pos, _1)\n                    srcPtr := add(srcPtr, _1)\n                }\n                tail := pos\n                mstore(add(headStart, _1), and(value1, sub(shl(160, 1), 1)))\n            }\n            function external_fun_getModulesPaginated()\n            {\n                if callvalue() { revert(0, 0) }\n                if slt(add(calldatasize(), not(3)), 64)\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 12:1413:33642  \"contract SmartAccount is...\"\n                let value := calldataload(4)\n                validator_revert_address(value)\n                let value1 := calldataload(36)\n                let _1 := array_allocation_size_array_address_dyn(value1)\n                let memPtr := mload(64)\n                finalize_allocation(memPtr, _1)\n                mstore(memPtr, value1)\n                calldatacopy(add(memPtr, 32), calldatasize(), add(array_allocation_size_array_address_dyn(value1), not(31)))\n                /// @src 16:1503:1522  \"uint256 moduleCount\"\n                let var_moduleCount := /** @src -1:-1:-1 */ 0\n                /// @src 16:1532:1570  \"address currentModule = modules[start]\"\n                let var_currentModule := /** @src 16:1556:1570  \"modules[start]\" */ read_from_storage_split_offset_address(mapping_index_access_mapping_address_address_of_address(value))\n                /// @src 16:1580:1865  \"while (...\"\n                for { } 1 { }\n                {\n                    /// @src 16:1600:1629  \"currentModule != address(0x0)\"\n                    let _2 := /** @src 12:1413:33642  \"contract SmartAccount is...\" */ and(/** @src 16:1600:1629  \"currentModule != address(0x0)\" */ var_currentModule, /** @src 12:1413:33642  \"contract SmartAccount is...\" */ sub(shl(160, 1), 1))\n                    /// @src 16:1600:1678  \"currentModule != address(0x0) &&...\"\n                    let expr := /** @src 16:1600:1629  \"currentModule != address(0x0)\" */ iszero(iszero(_2))\n                    /// @src 16:1600:1678  \"currentModule != address(0x0) &&...\"\n                    if expr\n                    {\n                        expr := /** @src 16:1645:1678  \"currentModule != SENTINEL_MODULES\" */ iszero(eq(_2, /** @src 16:522:525  \"0x1\" */ 0x01))\n                    }\n                    /// @src 16:1600:1716  \"currentModule != address(0x0) &&...\"\n                    let expr_1 := expr\n                    if expr\n                    {\n                        expr_1 := /** @src 16:1694:1716  \"moduleCount < pageSize\" */ lt(var_moduleCount, value1)\n                    }\n                    /// @src 16:1600:1716  \"currentModule != address(0x0) &&...\"\n                    if iszero(expr_1) { break }\n                    /// @src 16:1741:1775  \"array[moduleCount] = currentModule\"\n                    write_to_memory_address(memory_array_index_access_address_dyn(memPtr, var_moduleCount), var_currentModule)\n                    /// @src 16:1789:1827  \"currentModule = modules[currentModule]\"\n                    var_currentModule := /** @src 16:1805:1827  \"modules[currentModule]\" */ read_from_storage_split_offset_address(mapping_index_access_mapping_address_address_of_address(var_currentModule))\n                    /// @src 16:1841:1854  \"moduleCount++\"\n                    var_moduleCount := increment_uint256(var_moduleCount)\n                }\n                /// @src 16:2006:2065  \"assembly {...\"\n                mstore(memPtr, var_moduleCount)\n                /// @src 12:1413:33642  \"contract SmartAccount is...\"\n                let memPos := mload(64)\n                return(memPos, sub(abi_encode_array_address_dyn_address(memPos, memPtr, var_currentModule), memPos))\n            }\n            function abi_decode_addresst_address(dataEnd) -> value0, value1\n            {\n                if slt(add(dataEnd, not(3)), 64) { revert(0, 0) }\n                let value := calldataload(4)\n                validator_revert_address(value)\n                value0 := value\n                let value_1 := calldataload(36)\n                validator_revert_address(value_1)\n                value1 := value_1\n            }\n            function external_fun_disableModule()\n            {\n                if callvalue() { revert(0, 0) }\n                let param, param_1 := abi_decode_addresst_address(calldatasize())\n                /// @src 21:386:522  \"modifier authorized() {...\"\n                fun_requireSelfCall()\n                /// @src 16:3323:3343  \"module == address(0)\"\n                let _1 := /** @src 12:1413:33642  \"contract SmartAccount is...\" */ and(/** @src 16:3323:3343  \"module == address(0)\" */ param_1, /** @src 12:1413:33642  \"contract SmartAccount is...\" */ sub(shl(160, 1), 1))\n                /// @src 16:3323:3373  \"module == address(0) || module == SENTINEL_MODULES\"\n                let expr := /** @src 16:3323:3343  \"module == address(0)\" */ iszero(_1)\n                /// @src 16:3323:3373  \"module == address(0) || module == SENTINEL_MODULES\"\n                if iszero(expr)\n                {\n                    expr := /** @src 16:3347:3373  \"module == SENTINEL_MODULES\" */ eq(_1, /** @src 16:522:525  \"0x1\" */ 0x01)\n                }\n                /// @src 16:3319:3430  \"if (module == address(0) || module == SENTINEL_MODULES)...\"\n                if expr\n                {\n                    /// @src 16:3394:3430  \"ModuleCannotBeZeroOrSentinel(module)\"\n                    let _2 := /** @src 12:1413:33642  \"contract SmartAccount is...\" */ mload(64)\n                    /// @src 16:3394:3430  \"ModuleCannotBeZeroOrSentinel(module)\"\n                    mstore(_2, /** @src 16:2502:2538  \"ModuleCannotBeZeroOrSentinel(module)\" */ shl(224, 0xcadb248f))\n                    /// @src 16:3394:3430  \"ModuleCannotBeZeroOrSentinel(module)\"\n                    revert(_2, sub(abi_encode_tuple_address(add(_2, /** @src 12:1413:33642  \"contract SmartAccount is...\" */ 4), /** @src 16:3394:3430  \"ModuleCannotBeZeroOrSentinel(module)\" */ param_1), _2))\n                }\n                /// @src 16:3440:3624  \"if (modules[prevModule] != module)...\"\n                if /** @src 16:3444:3473  \"modules[prevModule] != module\" */ iszero(eq(cleanup_address(/** @src 16:3444:3463  \"modules[prevModule]\" */ read_from_storage_split_offset_address(mapping_index_access_mapping_address_address_of_address_13223(param))), /** @src 16:3444:3473  \"modules[prevModule] != module\" */ _1))\n                /// @src 16:3440:3624  \"if (modules[prevModule] != module)...\"\n                {\n                    /// @src 16:3563:3582  \"modules[prevModule]\"\n                    let _3 := read_from_storage_split_offset_address(mapping_index_access_mapping_address_address_of_address_13223(param))\n                    /// @src 16:3494:3624  \"ModuleAndPrevModuleMismatch(...\"\n                    let _4 := /** @src 12:1413:33642  \"contract SmartAccount is...\" */ mload(64)\n                    /// @src 16:3494:3624  \"ModuleAndPrevModuleMismatch(...\"\n                    mstore(_4, shl(226, 0x3103525b))\n                    revert(_4, sub(abi_encode_address_address_address(add(_4, /** @src 12:1413:33642  \"contract SmartAccount is...\" */ 4), /** @src 16:3494:3624  \"ModuleAndPrevModuleMismatch(...\" */ param_1, _3, param), _4))\n                }\n                /// @src 16:3634:3671  \"modules[prevModule] = modules[module]\"\n                update_storage_value_offsett_address_to_address(/** @src 16:3634:3653  \"modules[prevModule]\" */ mapping_index_access_mapping_address_address_of_address_13223(param), /** @src 16:3656:3671  \"modules[module]\" */ read_from_storage_split_offset_address(mapping_index_access_mapping_address_address_of_address_13223(param_1)))\n                /// @src 12:1413:33642  \"contract SmartAccount is...\"\n                update_storage_value_address_to_address(/** @src 16:3688:3703  \"modules[module]\" */ mapping_index_access_mapping_address_address_of_address_13223(param_1))\n                /// @src 16:3718:3740  \"DisabledModule(module)\"\n                let _5 := /** @src 12:1413:33642  \"contract SmartAccount is...\" */ mload(64)\n                /// @src 16:3718:3740  \"DisabledModule(module)\"\n                log1(_5, sub(abi_encode_tuple_address(_5, param_1), _5), 0xaab4fa2b463f581b2b32cb3b7e3b704b9ce37cc209b5fb4d77e593ace4054276)\n                /// @src 12:1413:33642  \"contract SmartAccount is...\"\n                return(/** @src 16:3341:3342  \"0\" */ 0x00, 0x00)\n            }\n            /// @src 12:1413:33642  \"contract SmartAccount is...\"\n            function external_fun_checkSignatures()\n            {\n                if callvalue() { revert(0, 0) }\n                let param, param_1 := abi_decode_bytes32t_bytes(calldatasize())\n                fun_checkSignatures(param, param_1)\n                return(0, 0)\n            }\n            function external_fun_setFallbackHandler()\n            {\n                if callvalue() { revert(0, 0) }\n                if slt(add(calldatasize(), not(3)), 32)\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 12:1413:33642  \"contract SmartAccount is...\"\n                let value := calldataload(4)\n                validator_revert_address(value)\n                /// @src 21:386:522  \"modifier authorized() {...\"\n                fun_requireSelfCall()\n                /// @src 15:2674:2762  \"assembly {...\"\n                let var_previousHandler := sload(49122629484629529244014240937346711770925847994644146912111677022347558721748)\n                /// @src 15:2791:2798  \"handler\"\n                fun_setFallbackHandler(value)\n                /// @src 12:1413:33642  \"contract SmartAccount is...\"\n                let _1 := sub(shl(160, 1), 1)\n                /// @src 15:2814:2862  \"ChangedFallbackHandler(previousHandler, handler)\"\n                log3(/** @src -1:-1:-1 */ 0, 0, /** @src 15:2814:2862  \"ChangedFallbackHandler(previousHandler, handler)\" */ 0x06be9a1bea257286cf2afa8205ed494ca9d6a4b41aa58d04238deebada20fb0c, /** @src 12:1413:33642  \"contract SmartAccount is...\" */ and(/** @src 15:2814:2862  \"ChangedFallbackHandler(previousHandler, handler)\" */ var_previousHandler, /** @src 12:1413:33642  \"contract SmartAccount is...\" */ _1), and(/** @src 15:2814:2862  \"ChangedFallbackHandler(previousHandler, handler)\" */ value, /** @src 12:1413:33642  \"contract SmartAccount is...\" */ _1))\n                return(/** @src -1:-1:-1 */ 0, 0)\n            }\n            /// @src 12:1413:33642  \"contract SmartAccount is...\"\n            function external_fun_init()\n            {\n                if callvalue() { revert(0, 0) }\n                let param, param_1 := abi_decode_addresst_address(calldatasize())\n                let _1 := sload(/** @src 12:8802:8807  \"owner\" */ 0x32)\n                /// @src 12:1413:33642  \"contract SmartAccount is...\"\n                let _2 := sub(shl(160, 1), 1)\n                /// @src 12:8798:8863  \"if (owner != address(0)) revert AlreadyInitialized(address(this))\"\n                if /** @src 12:8802:8821  \"owner != address(0)\" */ iszero(iszero(/** @src 12:1413:33642  \"contract SmartAccount is...\" */ and(_1, _2)))\n                /// @src 12:8798:8863  \"if (owner != address(0)) revert AlreadyInitialized(address(this))\"\n                {\n                    /// @src 12:8830:8863  \"AlreadyInitialized(address(this))\"\n                    let _3 := /** @src 12:1413:33642  \"contract SmartAccount is...\" */ mload(64)\n                    /// @src 12:8830:8863  \"AlreadyInitialized(address(this))\"\n                    mstore(_3, shl(224, 0x93360fbf))\n                    /// @src 12:1413:33642  \"contract SmartAccount is...\"\n                    mstore(/** @src 12:8830:8863  \"AlreadyInitialized(address(this))\" */ add(_3, /** @src 12:1413:33642  \"contract SmartAccount is...\" */ 4), /** @src 12:8857:8861  \"this\" */ address())\n                    /// @src 12:8830:8863  \"AlreadyInitialized(address(this))\"\n                    revert(_3, /** @src 12:1413:33642  \"contract SmartAccount is...\" */ 36)\n                }\n                let _4 := and(/** @src 12:8877:8897  \"_owner == address(0)\" */ param, /** @src 12:1413:33642  \"contract SmartAccount is...\" */ _2)\n                /// @src 12:8873:8925  \"if (_owner == address(0)) revert OwnerCannotBeZero()\"\n                if /** @src 12:8877:8897  \"_owner == address(0)\" */ iszero(/** @src 12:1413:33642  \"contract SmartAccount is...\" */ _4)\n                /// @src 12:8873:8925  \"if (_owner == address(0)) revert OwnerCannotBeZero()\"\n                {\n                    /// @src 12:8906:8925  \"OwnerCannotBeZero()\"\n                    let _5 := /** @src 12:1413:33642  \"contract SmartAccount is...\" */ mload(64)\n                    /// @src 12:8906:8925  \"OwnerCannotBeZero()\"\n                    mstore(_5, /** @src 12:5228:5247  \"OwnerCannotBeZero()\" */ shl(224, 0x9b15e16f))\n                    /// @src 12:8906:8925  \"OwnerCannotBeZero()\"\n                    revert(_5, /** @src 12:1413:33642  \"contract SmartAccount is...\" */ 4)\n                }\n                sstore(/** @src 12:8802:8807  \"owner\" */ 0x32, /** @src 12:1413:33642  \"contract SmartAccount is...\" */ or(and(_1, shl(160, 0xffffffffffffffffffffffff)), _4))\n                /// @src 12:8979:8987  \"_handler\"\n                fun_setFallbackHandler(param_1)\n                /// @src 12:1413:33642  \"contract SmartAccount is...\"\n                let memPtr := mload(64)\n                let newFreePtr := add(memPtr, 32)\n                if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n                mstore(64, newFreePtr)\n                mstore(memPtr, /** @src -1:-1:-1 */ 0)\n                /// @ast-id 4919 @src 16:6707:7171  \"function _setupModules(address to, bytes memory data) internal {...\"\n                /** @ast-id 4919 */ /** @ast-id 4919 */ fun_setupModules()\n                /// @src 12:1413:33642  \"contract SmartAccount is...\"\n                return(/** @src -1:-1:-1 */ 0, 0)\n            }\n            /// @src 12:1413:33642  \"contract SmartAccount is...\"\n            function external_fun_domainSeparator()\n            {\n                if callvalue() { revert(0, 0) }\n                if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                let ret := fun_domainSeparator()\n                let memPos := mload(64)\n                mstore(memPos, ret)\n                return(memPos, 32)\n            }\n            function external_fun_VERSION()\n            {\n                if callvalue() { revert(0, 0) }\n                if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                let memPtr := mload(64)\n                finalize_allocation_21860(memPtr)\n                mstore(memPtr, 5)\n                mstore(add(memPtr, 32), \"1.0.0\")\n                let memPos := mload(64)\n                mstore(memPos, 32)\n                return(memPos, sub(abi_encode_bytes_to_bytes(memPtr, add(memPos, 32)), memPos))\n            }\n            function abi_decode_uint256_fromMemory(headStart, dataEnd) -> value0\n            {\n                if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n                value0 := mload(headStart)\n            }\n            function revert_forward()\n            {\n                let pos := mload(64)\n                returndatacopy(pos, 0, returndatasize())\n                revert(pos, returndatasize())\n            }\n            function read_from_storage_split_offset_address(slot) -> value\n            {\n                value := and(sload(slot), sub(shl(160, 1), 1))\n            }\n            /// @ast-id 2757 @src 12:6963:7242  \"function domainSeparator() public view returns (bytes32) {...\"\n            function fun_domainSeparator() -> var_\n            {\n                /// @src 12:7076:7221  \"abi.encode(...\"\n                let expr_2753_mpos := /** @src 12:1413:33642  \"contract SmartAccount is...\" */ mload(64)\n                /// @src 12:7076:7221  \"abi.encode(...\"\n                let _1 := add(expr_2753_mpos, 0x20)\n                /// @src 12:1413:33642  \"contract SmartAccount is...\"\n                mstore(_1, /** @src 12:1927:1993  \"0x47e79534a245952e8b16893a336b85a3d9ea9fa8c573f3d803afb92a79469218\" */ 0x47e79534a245952e8b16893a336b85a3d9ea9fa8c573f3d803afb92a79469218)\n                /// @src 12:1413:33642  \"contract SmartAccount is...\"\n                mstore(/** @src 12:1927:1993  \"0x47e79534a245952e8b16893a336b85a3d9ea9fa8c573f3d803afb92a79469218\" */ add(/** @src 12:7076:7221  \"abi.encode(...\" */ expr_2753_mpos, /** @src 12:1413:33642  \"contract SmartAccount is...\" */ 64), /** @src 12:7155:7168  \"block.chainid\" */ chainid())\n                /// @src 12:1413:33642  \"contract SmartAccount is...\"\n                mstore(/** @src 12:1927:1993  \"0x47e79534a245952e8b16893a336b85a3d9ea9fa8c573f3d803afb92a79469218\" */ add(/** @src 12:7076:7221  \"abi.encode(...\" */ expr_2753_mpos, /** @src 12:1927:1993  \"0x47e79534a245952e8b16893a336b85a3d9ea9fa8c573f3d803afb92a79469218\" */ 96), /** @src 12:7198:7202  \"this\" */ address())\n                /// @src 12:7076:7221  \"abi.encode(...\"\n                mstore(expr_2753_mpos, /** @src 12:1927:1993  \"0x47e79534a245952e8b16893a336b85a3d9ea9fa8c573f3d803afb92a79469218\" */ 96)\n                /// @src 12:7076:7221  \"abi.encode(...\"\n                finalize_allocation_21863(expr_2753_mpos)\n                /// @src 12:7030:7235  \"return...\"\n                var_ := /** @src 12:7049:7235  \"keccak256(...\" */ keccak256(/** @src 12:1413:33642  \"contract SmartAccount is...\" */ _1, mload(/** @src 12:7049:7235  \"keccak256(...\" */ expr_2753_mpos))\n            }\n            /// @src 12:1413:33642  \"contract SmartAccount is...\"\n            function update_storage_value_offsett_address_to_address(slot, value)\n            {\n                sstore(slot, or(and(sload(slot), shl(160, 0xffffffffffffffffffffffff)), and(value, sub(shl(160, 1), 1))))\n            }\n            /// @src 19:284:285  \"2\"\n            function update_storage_value_offsett_uint256_to_uint256()\n            {\n                sstore(/** @src 19:436:452  \"reentrancyStatus\" */ 0x31, /** @src 12:10253:10254  \"1\" */ 0x01)\n            }\n            /// @ast-id 5168 @src 19:398:597  \"modifier nonReentrant() {...\"\n            function modifier_nonReentrant(var_tx_mpos, var_refundInfo_mpos, var_signatures_mpos) -> _1\n            {\n                /// @src 19:432:503  \"if (reentrancyStatus == ENTERED) revert ReentrancyProtectionActivated()\"\n                if /** @src 19:436:463  \"reentrancyStatus == ENTERED\" */ eq(/** @src 12:1413:33642  \"contract SmartAccount is...\" */ sload(/** @src 19:436:452  \"reentrancyStatus\" */ 0x31), /** @src 19:284:285  \"2\" */ 0x02)\n                /// @src 19:432:503  \"if (reentrancyStatus == ENTERED) revert ReentrancyProtectionActivated()\"\n                {\n                    /// @src 19:472:503  \"ReentrancyProtectionActivated()\"\n                    let _2 := /** @src 12:1413:33642  \"contract SmartAccount is...\" */ mload(64)\n                    /// @src 19:472:503  \"ReentrancyProtectionActivated()\"\n                    mstore(_2, shl(224, 0x7465d9d1))\n                    revert(_2, 4)\n                }\n                /// @src 19:284:285  \"2\"\n                sstore(/** @src 19:436:452  \"reentrancyStatus\" */ 0x31, /** @src 19:284:285  \"2\" */ 0x02)\n                /// @src 12:9884:9893  \"gasleft()\"\n                let expr := gas()\n                /// @src 12:10246:10255  \"nonces[1]\"\n                let _3 := mapping_index_access_mapping_uint256_uint256_of_uint256()\n                /// @src 12:1413:33642  \"contract SmartAccount is...\"\n                let _4 := sload(/** @src 12:10246:10257  \"nonces[1]++\" */ _3)\n                /// @src 19:284:285  \"2\"\n                sstore(_3, /** @src 12:10246:10257  \"nonces[1]++\" */ increment_uint256(_4))\n                /// @src 12:10056:10271  \"encodeTransactionData(...\"\n                let expr_mpos := fun_encodeTransactionData(var_tx_mpos, var_refundInfo_mpos, _4)\n                /// @src 12:10294:10315  \"keccak256(txHashData)\"\n                let expr_1 := keccak256(/** @src 12:1413:33642  \"contract SmartAccount is...\" */ add(/** @src 12:10294:10315  \"keccak256(txHashData)\" */ expr_mpos, /** @src 12:1413:33642  \"contract SmartAccount is...\" */ 0x20), mload(/** @src 12:10294:10315  \"keccak256(txHashData)\" */ expr_mpos))\n                /// @src 12:10353:10363  \"signatures\"\n                fun_checkSignatures(expr_1, var_signatures_mpos)\n                /// @src 12:10757:10766  \"gasleft()\"\n                let expr_2 := gas()\n                /// @src 12:10791:10806  \"_tx.targetTxGas\"\n                let _5 := add(var_tx_mpos, 128)\n                /// @src 12:1413:33642  \"contract SmartAccount is...\"\n                let _6 := mload(/** @src 12:10791:10806  \"_tx.targetTxGas\" */ _5)\n                /// @src 12:10740:11040  \"if (...\"\n                if /** @src 12:10757:10848  \"gasleft() <...\" */ lt(expr_2, /** @src 12:10781:10848  \"Math.max((_tx.targetTxGas << 6) / 63, _tx.targetTxGas + 2500) + 500\" */ checked_add_uint256_13276(/** @src 12:10781:10842  \"Math.max((_tx.targetTxGas << 6) / 63, _tx.targetTxGas + 2500)\" */ fun_max(/** @src 12:1413:33642  \"contract SmartAccount is...\" */ div(shl(6, /** @src 12:10791:10811  \"_tx.targetTxGas << 6\" */ _6), /** @src 12:10815:10817  \"63\" */ 0x3f), /** @src 12:10819:10841  \"_tx.targetTxGas + 2500\" */ checked_add_uint256_13275(_6))))\n                /// @src 12:10740:11040  \"if (...\"\n                {\n                    /// @src 12:10912:10921  \"gasleft()\"\n                    let expr_3 := gas()\n                    /// @src 12:1413:33642  \"contract SmartAccount is...\"\n                    let _7 := mload(/** @src 12:10949:10964  \"_tx.targetTxGas\" */ _5)\n                    /// @src 12:10939:11026  \"Math.max((_tx.targetTxGas << 6) / 63, _tx.targetTxGas + 2500) +...\"\n                    let expr_4 := checked_add_uint256_13276(/** @src 12:10939:11000  \"Math.max((_tx.targetTxGas << 6) / 63, _tx.targetTxGas + 2500)\" */ fun_max(/** @src 12:1413:33642  \"contract SmartAccount is...\" */ div(shl(6, _7), /** @src 12:10815:10817  \"63\" */ 0x3f), /** @src 12:10977:10999  \"_tx.targetTxGas + 2500\" */ checked_add_uint256_13275(/** @src 12:1413:33642  \"contract SmartAccount is...\" */ _7)))\n                    /// @src 12:10878:11040  \"NotEnoughGasLeft(...\"\n                    let _8 := /** @src 12:1413:33642  \"contract SmartAccount is...\" */ mload(64)\n                    /// @src 12:10878:11040  \"NotEnoughGasLeft(...\"\n                    mstore(_8, shl(224, 0x3b4daac9))\n                    revert(_8, sub(abi_encode_uint256_uint256(add(_8, 4), expr_3, expr_4), _8))\n                }\n                /// @src 12:11447:11453  \"_tx.to\"\n                let _9 := /** @src 12:1413:33642  \"contract SmartAccount is...\" */ cleanup_address(mload(/** @src 12:11447:11453  \"_tx.to\" */ var_tx_mpos))\n                /// @src 12:1413:33642  \"contract SmartAccount is...\"\n                let _10 := mload(/** @src 12:11471:11480  \"_tx.value\" */ add(var_tx_mpos, 64))\n                /// @src 12:11498:11506  \"_tx.data\"\n                let _mpos := mload(add(var_tx_mpos, 96))\n                /// @src 12:1413:33642  \"contract SmartAccount is...\"\n                let _11 := mload(/** @src 12:11524:11537  \"_tx.operation\" */ add(var_tx_mpos, /** @src 12:1413:33642  \"contract SmartAccount is...\" */ 0x20))\n                validator_assert_enum_Operation(_11)\n                /// @src 12:11555:11574  \"refundInfo.gasPrice\"\n                let _12 := add(var_refundInfo_mpos, /** @src 12:1413:33642  \"contract SmartAccount is...\" */ 0x20)\n                /// @src 12:11555:11579  \"refundInfo.gasPrice == 0\"\n                let expr_5 := iszero(/** @src 12:1413:33642  \"contract SmartAccount is...\" */ mload(/** @src 12:11555:11574  \"refundInfo.gasPrice\" */ _12))\n                /// @src 12:11555:11618  \"refundInfo.gasPrice == 0 ? (gasleft() - 2500) : _tx.targetTxGas\"\n                let expr_6 := /** @src 12:1413:33642  \"contract SmartAccount is...\" */ 0\n                /// @src 12:11555:11618  \"refundInfo.gasPrice == 0 ? (gasleft() - 2500) : _tx.targetTxGas\"\n                switch expr_5\n                case 0 {\n                    expr_6 := /** @src 12:1413:33642  \"contract SmartAccount is...\" */ mload(/** @src 12:11603:11618  \"_tx.targetTxGas\" */ _5)\n                }\n                default /// @src 12:11555:11618  \"refundInfo.gasPrice == 0 ? (gasleft() - 2500) : _tx.targetTxGas\"\n                {\n                    expr_6 := /** @src 12:11583:11599  \"gasleft() - 2500\" */ checked_sub_uint256_13281(/** @src 12:11583:11592  \"gasleft()\" */ gas())\n                }\n                /// @src 12:11412:11632  \"success = execute(...\"\n                let var_success := /** @src 12:11422:11632  \"execute(...\" */ fun_execute(_9, _10, _mpos, _11, expr_6)\n                /// @src 12:11914:11946  \"!success && _tx.targetTxGas == 0\"\n                let expr_7 := /** @src 12:11914:11922  \"!success\" */ iszero(var_success)\n                /// @src 12:11914:11946  \"!success && _tx.targetTxGas == 0\"\n                if expr_7\n                {\n                    expr_7 := /** @src 12:11926:11946  \"_tx.targetTxGas == 0\" */ iszero(/** @src 12:1413:33642  \"contract SmartAccount is...\" */ mload(/** @src 12:11926:11941  \"_tx.targetTxGas\" */ _5))\n                }\n                /// @src 12:11914:11974  \"!success && _tx.targetTxGas == 0 && refundInfo.gasPrice == 0\"\n                let expr_8 := expr_7\n                if expr_7\n                {\n                    expr_8 := /** @src 12:11950:11974  \"refundInfo.gasPrice == 0\" */ iszero(/** @src 12:1413:33642  \"contract SmartAccount is...\" */ mload(/** @src 12:11950:11969  \"refundInfo.gasPrice\" */ _12))\n                }\n                /// @src 12:11910:12141  \"if (!success && _tx.targetTxGas == 0 && refundInfo.gasPrice == 0)...\"\n                if expr_8\n                {\n                    /// @src 12:1413:33642  \"contract SmartAccount is...\"\n                    let _13 := mload(/** @src 12:12038:12053  \"_tx.targetTxGas\" */ _5)\n                    /// @src 12:1413:33642  \"contract SmartAccount is...\"\n                    let _14 := mload(/** @src 12:12075:12094  \"refundInfo.gasPrice\" */ _12)\n                    /// @src 12:11999:12141  \"CanNotEstimateGas(...\"\n                    let _15 := /** @src 12:1413:33642  \"contract SmartAccount is...\" */ mload(/** @src 12:11471:11480  \"_tx.value\" */ 64)\n                    /// @src 12:11999:12141  \"CanNotEstimateGas(...\"\n                    mstore(_15, shl(227, 0x1061f87f))\n                    revert(_15, sub(abi_encode_uint256_uint256_bool(add(_15, 4), _13, _14, var_success), _15))\n                }\n                /// @src 12:12319:12746  \"if (refundInfo.gasPrice != 0) {...\"\n                if /** @src 12:12323:12347  \"refundInfo.gasPrice != 0\" */ iszero(iszero(/** @src 12:1413:33642  \"contract SmartAccount is...\" */ mload(/** @src 12:12323:12342  \"refundInfo.gasPrice\" */ _12)))\n                /// @src 12:12319:12746  \"if (refundInfo.gasPrice != 0) {...\"\n                {\n                    /// @src 12:12412:12432  \"startGas - gasleft()\"\n                    let expr_9 := checked_sub_uint256(expr, /** @src 12:12423:12432  \"gasleft()\" */ gas())\n                    /// @src 12:1413:33642  \"contract SmartAccount is...\"\n                    let _16 := mload(/** @src 12:12454:12472  \"refundInfo.baseGas\" */ var_refundInfo_mpos)\n                    /// @src 12:1413:33642  \"contract SmartAccount is...\"\n                    let _17 := mload(/** @src 12:12494:12513  \"refundInfo.gasPrice\" */ _12)\n                    /// @src 12:1413:33642  \"contract SmartAccount is...\"\n                    let _18 := mload(/** @src 12:12535:12565  \"refundInfo.tokenGasPriceFactor\" */ add(var_refundInfo_mpos, /** @src 12:11471:11480  \"_tx.value\" */ 64))\n                    /// @src 12:12587:12606  \"refundInfo.gasToken\"\n                    let _19 := /** @src 12:1413:33642  \"contract SmartAccount is...\" */ cleanup_address(mload(/** @src 12:12587:12606  \"refundInfo.gasToken\" */ add(var_refundInfo_mpos, /** @src 12:11498:11506  \"_tx.data\" */ 96)))\n                    /// @src 12:12694:12731  \"AccountHandlePayment(txHash, payment)\"\n                    log3(/** @src 12:1413:33642  \"contract SmartAccount is...\" */ 0, 0, /** @src 12:12694:12731  \"AccountHandlePayment(txHash, payment)\" */ 0x3fd74c38c9f1b6f0499c6d0128fbf77a796dbacc7eda0369b13006dc977bb56b, expr_1, /** @src 12:12377:12671  \"handlePayment(...\" */ fun_handlePayment(expr_9, _16, _17, _18, _19, /** @src 12:1413:33642  \"contract SmartAccount is...\" */ cleanup_address(mload(/** @src 12:12628:12653  \"refundInfo.refundReceiver\" */ add(var_refundInfo_mpos, /** @src 12:10791:10806  \"_tx.targetTxGas\" */ 128)))))\n                }\n                /// @src 19:549:550  \"_\"\n                _1 := var_success\n                /// @src 19:560:590  \"reentrancyStatus = NOT_ENTERED\"\n                update_storage_value_offsett_uint256_to_uint256()\n            }\n            /// @src 12:1413:33642  \"contract SmartAccount is...\"\n            function panic_error_0x11()\n            {\n                mstore(0, shl(224, 0x4e487b71))\n                mstore(4, 0x11)\n                revert(0, 0x24)\n            }\n            function increment_uint256(value) -> ret\n            {\n                if eq(value, /** @src 10:5154:5171  \"type(uint256).max\" */ not(0))\n                /// @src 12:1413:33642  \"contract SmartAccount is...\"\n                { panic_error_0x11() }\n                ret := add(value, 1)\n            }\n            function checked_div_uint256(x, y) -> r\n            {\n                if iszero(y)\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0x12)\n                    revert(0, 0x24)\n                }\n                r := div(x, y)\n            }\n            function checked_add_uint256_13275(x) -> sum\n            {\n                sum := add(x, /** @src 12:10837:10841  \"2500\" */ 0x09c4)\n                /// @src 12:1413:33642  \"contract SmartAccount is...\"\n                if gt(x, sum) { panic_error_0x11() }\n            }\n            function checked_add_uint256_13276(x) -> sum\n            {\n                sum := add(x, /** @src 12:10845:10848  \"500\" */ 0x01f4)\n                /// @src 12:1413:33642  \"contract SmartAccount is...\"\n                if gt(x, sum) { panic_error_0x11() }\n            }\n            function checked_add_uint256_13298(x) -> sum\n            {\n                sum := add(x, /** @src 12:19029:19130  \"assembly {...\" */ 0x20)\n                /// @src 12:1413:33642  \"contract SmartAccount is...\"\n                if gt(x, sum) { panic_error_0x11() }\n            }\n            function checked_add_uint256(x, y) -> sum\n            {\n                sum := add(x, y)\n                if gt(x, sum) { panic_error_0x11() }\n            }\n            function abi_encode_uint256_uint256(headStart, value0, value1) -> tail\n            {\n                tail := add(headStart, 64)\n                mstore(headStart, value0)\n                mstore(add(headStart, 32), value1)\n            }\n            function panic_error_0x21()\n            {\n                mstore(0, shl(224, 0x4e487b71))\n                mstore(4, 0x21)\n                revert(0, 0x24)\n            }\n            function validator_assert_enum_Operation(value)\n            {\n                if iszero(lt(value, 2)) { panic_error_0x21() }\n            }\n            function checked_sub_uint256_13281(x) -> diff\n            {\n                diff := add(x, not(2499))\n                if gt(diff, x) { panic_error_0x11() }\n            }\n            function checked_sub_uint256(x, y) -> diff\n            {\n                diff := sub(x, y)\n                if gt(diff, x) { panic_error_0x11() }\n            }\n            function abi_encode_uint256_uint256_bool(headStart, value0, value1, value2) -> tail\n            {\n                tail := add(headStart, 96)\n                mstore(headStart, value0)\n                mstore(add(headStart, 32), value1)\n                mstore(add(headStart, 64), iszero(iszero(value2)))\n            }\n            function checked_mul_uint256(x, y) -> product\n            {\n                product := mul(x, y)\n                if iszero(or(iszero(x), eq(y, div(product, x)))) { panic_error_0x11() }\n            }\n            function abi_encode_address_address_payable_uint256_13235(headStart, value1, value2) -> tail\n            {\n                tail := add(headStart, 96)\n                mstore(headStart, 0)\n                mstore(add(headStart, 32), and(value1, sub(shl(160, 1), 1)))\n                mstore(add(headStart, 64), value2)\n            }\n            function abi_encode_address_address_payable_uint256(headStart, value0, value1, value2) -> tail\n            {\n                tail := add(headStart, 96)\n                let _1 := sub(shl(160, 1), 1)\n                mstore(headStart, and(value0, _1))\n                mstore(add(headStart, 32), and(value1, _1))\n                mstore(add(headStart, 64), value2)\n            }\n            /// @ast-id 3145 @src 12:13874:15162  \"function handlePayment(...\"\n            function fun_handlePayment(var_gasUsed, var_baseGas, var_gasPrice, var_tokenGasPriceFactor, var_gasToken, var_refundReceiver) -> var_payment\n            {\n                /// @src 12:14126:14196  \"if (tokenGasPriceFactor == 0) revert TokenGasPriceFactorCanNotBeZero()\"\n                if /** @src 12:14130:14154  \"tokenGasPriceFactor == 0\" */ iszero(var_tokenGasPriceFactor)\n                /// @src 12:14126:14196  \"if (tokenGasPriceFactor == 0) revert TokenGasPriceFactorCanNotBeZero()\"\n                {\n                    /// @src 12:14163:14196  \"TokenGasPriceFactorCanNotBeZero()\"\n                    let _1 := /** @src 12:1413:33642  \"contract SmartAccount is...\" */ mload(64)\n                    /// @src 12:14163:14196  \"TokenGasPriceFactorCanNotBeZero()\"\n                    mstore(_1, shl(224, 0x653f35a3))\n                    revert(_1, 4)\n                }\n                /// @src 12:1413:33642  \"contract SmartAccount is...\"\n                let _2 := sub(shl(160, 1), 1)\n                /// @src 12:14286:14376  \"refundReceiver == address(0)...\"\n                let expr := /** @src 12:14153:14154  \"0\" */ 0x00\n                /// @src 12:14286:14376  \"refundReceiver == address(0)...\"\n                switch /** @src 12:14286:14314  \"refundReceiver == address(0)\" */ iszero(/** @src 12:1413:33642  \"contract SmartAccount is...\" */ and(/** @src 12:14286:14314  \"refundReceiver == address(0)\" */ var_refundReceiver, /** @src 12:1413:33642  \"contract SmartAccount is...\" */ _2))\n                case /** @src 12:14286:14376  \"refundReceiver == address(0)...\" */ 0 { expr := var_refundReceiver }\n                default {\n                    expr := /** @src 12:14337:14346  \"tx.origin\" */ origin()\n                }\n                /// @src 12:14386:15156  \"if (gasToken == address(0)) {...\"\n                switch /** @src 12:14390:14412  \"gasToken == address(0)\" */ iszero(/** @src 12:1413:33642  \"contract SmartAccount is...\" */ and(/** @src 12:14390:14412  \"gasToken == address(0)\" */ var_gasToken, /** @src 12:1413:33642  \"contract SmartAccount is...\" */ _2))\n                case /** @src 12:14386:15156  \"if (gasToken == address(0)) {...\" */ 0 {\n                    /// @src 12:14911:15011  \"payment =...\"\n                    var_payment := /** @src 12:14937:15011  \"((gasUsed + baseGas) * (gasPrice)) /...\" */ checked_div_uint256(/** @src 12:14938:14970  \"(gasUsed + baseGas) * (gasPrice)\" */ checked_mul_uint256(/** @src 12:14939:14956  \"gasUsed + baseGas\" */ checked_add_uint256(var_gasUsed, var_baseGas), /** @src 12:14938:14970  \"(gasUsed + baseGas) * (gasPrice)\" */ var_gasPrice), /** @src 12:14937:15011  \"((gasUsed + baseGas) * (gasPrice)) /...\" */ var_tokenGasPriceFactor)\n                    /// @src 12:15025:15145  \"if (!transferToken(gasToken, receiver, payment))...\"\n                    if /** @src 12:15029:15072  \"!transferToken(gasToken, receiver, payment)\" */ cleanup_bool(iszero(/** @src 12:15030:15072  \"transferToken(gasToken, receiver, payment)\" */ fun_transferToken(var_gasToken, /** @src 12:1413:33642  \"contract SmartAccount is...\" */ and(/** @src 12:15030:15072  \"transferToken(gasToken, receiver, payment)\" */ expr, /** @src 12:1413:33642  \"contract SmartAccount is...\" */ _2), /** @src 12:15030:15072  \"transferToken(gasToken, receiver, payment)\" */ var_payment)))\n                    /// @src 12:15025:15145  \"if (!transferToken(gasToken, receiver, payment))...\"\n                    {\n                        /// @src 12:15097:15145  \"TokenTransferFailed(gasToken, receiver, payment)\"\n                        let _3 := /** @src 12:1413:33642  \"contract SmartAccount is...\" */ mload(64)\n                        /// @src 12:15097:15145  \"TokenTransferFailed(gasToken, receiver, payment)\"\n                        mstore(_3, /** @src 12:17365:17413  \"TokenTransferFailed(gasToken, receiver, payment)\" */ shl(227, 0x190eecf3))\n                        /// @src 12:15097:15145  \"TokenTransferFailed(gasToken, receiver, payment)\"\n                        revert(_3, sub(abi_encode_address_address_payable_uint256(add(_3, 4), var_gasToken, expr, var_payment), _3))\n                    }\n                }\n                default /// @src 12:14386:15156  \"if (gasToken == address(0)) {...\"\n                {\n                    /// @src 12:14560:14577  \"gasUsed + baseGas\"\n                    let expr_1 := checked_add_uint256(var_gasUsed, var_baseGas)\n                    /// @src 12:14598:14645  \"gasPrice < tx.gasprice ? gasPrice : tx.gasprice\"\n                    let expr_2 := /** @src 12:14153:14154  \"0\" */ 0x00\n                    /// @src 12:14598:14645  \"gasPrice < tx.gasprice ? gasPrice : tx.gasprice\"\n                    switch /** @src 12:14598:14620  \"gasPrice < tx.gasprice\" */ lt(var_gasPrice, /** @src 12:14609:14620  \"tx.gasprice\" */ gasprice())\n                    case /** @src 12:14598:14645  \"gasPrice < tx.gasprice ? gasPrice : tx.gasprice\" */ 0 {\n                        expr_2 := /** @src 12:14609:14620  \"tx.gasprice\" */ gasprice()\n                    }\n                    default /// @src 12:14598:14645  \"gasPrice < tx.gasprice ? gasPrice : tx.gasprice\"\n                    { expr_2 := var_gasPrice }\n                    /// @src 12:14533:14646  \"payment =...\"\n                    var_payment := /** @src 12:14559:14646  \"(gasUsed + baseGas) *...\" */ checked_mul_uint256(expr_1, expr_2)\n                    /// @src 12:14793:14880  \"if (!success)...\"\n                    if /** @src 12:14797:14805  \"!success\" */ cleanup_bool(iszero(/** @src 12:14686:14780  \"assembly {...\" */ call(gas(), expr, var_payment, /** @src 12:14153:14154  \"0\" */ 0x00, 0x00, 0x00, 0x00)))\n                    /// @src 12:14793:14880  \"if (!success)...\"\n                    {\n                        /// @src 12:14830:14880  \"TokenTransferFailed(address(0), receiver, payment)\"\n                        let _4 := /** @src 12:1413:33642  \"contract SmartAccount is...\" */ mload(64)\n                        /// @src 12:14830:14880  \"TokenTransferFailed(address(0), receiver, payment)\"\n                        mstore(_4, /** @src 12:17365:17413  \"TokenTransferFailed(gasToken, receiver, payment)\" */ shl(227, 0x190eecf3))\n                        /// @src 12:14830:14880  \"TokenTransferFailed(address(0), receiver, payment)\"\n                        revert(_4, sub(abi_encode_address_address_payable_uint256_13235(add(_4, 4), expr, var_payment), _4))\n                    }\n                }\n            }\n            /// @src 12:1413:33642  \"contract SmartAccount is...\"\n            function require_helper_stringliteral(condition)\n            {\n                if iszero(condition)\n                {\n                    let memPtr := mload(64)\n                    mstore(memPtr, shl(229, 4594637))\n                    mstore(add(memPtr, 4), 32)\n                    mstore(add(memPtr, 36), 27)\n                    mstore(add(memPtr, 68), \"invalid tokenGasPriceFactor\")\n                    revert(memPtr, 100)\n                }\n            }\n            function abi_encode_packed_uint256(pos, value0) -> end\n            {\n                mstore(pos, value0)\n                end := add(pos, 32)\n            }\n            function require_helper_stringliteral_d0b5(condition)\n            {\n                if iszero(condition)\n                {\n                    let memPtr := mload(64)\n                    mstore(memPtr, shl(229, 4594637))\n                    mstore(add(memPtr, 4), 32)\n                    mstore(add(memPtr, 36), 25)\n                    mstore(add(memPtr, 68), \"Invalid signatures length\")\n                    revert(memPtr, 100)\n                }\n            }\n            function checked_sub_uint8(x) -> diff\n            {\n                diff := add(and(x, 0xff), not(3))\n                if gt(diff, 0xff) { panic_error_0x11() }\n            }\n            function abi_encode_uint256_rational_by_rational_by(headStart, value0) -> tail\n            {\n                tail := add(headStart, 96)\n                mstore(headStart, value0)\n                mstore(add(headStart, 32), /** @src -1:-1:-1 */ 0)\n                /// @src 12:1413:33642  \"contract SmartAccount is...\"\n                mstore(add(headStart, 64), /** @src -1:-1:-1 */ 0)\n            }\n            /// @src 12:1413:33642  \"contract SmartAccount is...\"\n            function abi_encode_uint256_uint256_uint256(headStart, value0, value1, value2) -> tail\n            {\n                tail := add(headStart, 96)\n                mstore(headStart, value0)\n                mstore(add(headStart, 32), value1)\n                mstore(add(headStart, 64), value2)\n            }\n            function abi_decode_bytes4_fromMemory(headStart, dataEnd) -> value0\n            {\n                if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n                let value := mload(headStart)\n                validator_revert_bytes4(value)\n                value0 := value\n            }\n            function abi_encode_bytes32_bytes(headStart, value0, value1) -> tail\n            {\n                mstore(headStart, value0)\n                mstore(add(headStart, 32), 64)\n                tail := abi_encode_bytes_to_bytes(value1, add(headStart, 64))\n            }\n            /// @src 29:217:227  \"0x1626ba7e\"\n            function abi_encode_address_address(headStart, value0, value1) -> tail\n            {\n                tail := add(headStart, 64)\n                /// @src 12:1413:33642  \"contract SmartAccount is...\"\n                let _1 := sub(shl(160, 1), 1)\n                mstore(headStart, and(value0, _1))\n                mstore(/** @src 29:217:227  \"0x1626ba7e\" */ add(headStart, 32), /** @src 12:1413:33642  \"contract SmartAccount is...\" */ and(value1, _1))\n            }\n            /// @ast-id 3434 @src 12:17926:20582  \"function checkSignatures(...\"\n            function fun_checkSignatures(var_dataHash, var_signatures_mpos)\n            {\n                /// @src 12:18046:18107  \"require(signatures.length >= 65, \\\"Invalid signatures length\\\")\"\n                require_helper_stringliteral_d0b5(/** @src 12:18054:18077  \"signatures.length >= 65\" */ iszero(lt(/** @src 12:1413:33642  \"contract SmartAccount is...\" */ mload(/** @src 12:18054:18071  \"signatures.length\" */ var_signatures_mpos), /** @src 12:18075:18077  \"65\" */ 0x41)))\n                /// @src 12:18172:18187  \"address _signer\"\n                let var_signer := /** @src -1:-1:-1 */ 0\n                /// @src 12:18209:18235  \"signatureSplit(signatures)\"\n                let expr_3313_component, expr_3313_component_1, expr_component := fun_signatureSplit(var_signatures_mpos)\n                /// @src 12:18249:18255  \"v == 0\"\n                let _1 := /** @src 12:1413:33642  \"contract SmartAccount is...\" */ and(/** @src 12:18249:18255  \"v == 0\" */ expr_3313_component, /** @src 12:1413:33642  \"contract SmartAccount is...\" */ 0xff)\n                /// @src 12:18245:20505  \"if (v == 0) {...\"\n                switch /** @src 12:18249:18255  \"v == 0\" */ iszero(_1)\n                case /** @src 12:18245:20505  \"if (v == 0) {...\" */ 0 {\n                    /// @src 12:20034:20505  \"if (v > 30) {...\"\n                    switch /** @src 12:20038:20044  \"v > 30\" */ gt(_1, /** @src 12:20042:20044  \"30\" */ 0x1e)\n                    case /** @src 12:20034:20505  \"if (v > 30) {...\" */ 0 {\n                        /// @src 12:20466:20494  \"dataHash.tryRecover(v, r, s)\"\n                        let expr_3418_component, expr_3418_component_1 := fun_tryRecover(var_dataHash, expr_3313_component, expr_3313_component_1, expr_component)\n                        /// @src 12:20452:20494  \"(_signer, ) = dataHash.tryRecover(v, r, s)\"\n                        var_signer := expr_3418_component\n                    }\n                    default /// @src 12:20034:20505  \"if (v > 30) {...\"\n                    {\n                        /// @src 12:20302:20335  \"dataHash.toEthSignedMessageHash()\"\n                        let expr := fun_toEthSignedMessageHash(var_dataHash)\n                        /// @src 12:20302:20421  \"dataHash.toEthSignedMessageHash().tryRecover(...\"\n                        let expr_component_1, expr_component_2 := fun_tryRecover(expr, /** @src 12:20364:20369  \"v - 4\" */ checked_sub_uint8(expr_3313_component), /** @src 12:20302:20421  \"dataHash.toEthSignedMessageHash().tryRecover(...\" */ expr_3313_component_1, expr_component)\n                        /// @src 12:20288:20421  \"(_signer, ) = dataHash.toEthSignedMessageHash().tryRecover(...\"\n                        var_signer := expr_component_1\n                    }\n                }\n                default /// @src 12:18245:20505  \"if (v == 0) {...\"\n                {\n                    /// @src 12:18430:18468  \"_signer = address(uint160(uint256(r)))\"\n                    var_signer := /** @src 12:1413:33642  \"contract SmartAccount is...\" */ and(/** @src 12:18456:18466  \"uint256(r)\" */ expr_3313_component_1, /** @src 12:1413:33642  \"contract SmartAccount is...\" */ sub(shl(160, 1), 1))\n                    /// @src 12:18701:18791  \"if (uint256(s) < 65)...\"\n                    if /** @src 12:18705:18720  \"uint256(s) < 65\" */ lt(expr_component, /** @src 12:18075:18077  \"65\" */ 0x41)\n                    /// @src 12:18701:18791  \"if (uint256(s) < 65)...\"\n                    {\n                        /// @src 12:18745:18791  \"WrongContractSignatureFormat(uint256(s), 0, 0)\"\n                        let _2 := /** @src 12:1413:33642  \"contract SmartAccount is...\" */ mload(64)\n                        /// @src 12:18745:18791  \"WrongContractSignatureFormat(uint256(s), 0, 0)\"\n                        mstore(_2, shl(225, 0x38a245ff))\n                        revert(_2, sub(abi_encode_uint256_rational_by_rational_by(add(_2, 4), expr_component), _2))\n                    }\n                    /// @src 12:19029:19130  \"assembly {...\"\n                    let _3 := add(add(var_signatures_mpos, expr_component), 0x20)\n                    let var_contractSignatureLen := mload(_3)\n                    /// @src 12:19147:19185  \"uint256(s) + 32 + contractSignatureLen\"\n                    let expr_1 := checked_add_uint256(/** @src 12:19147:19162  \"uint256(s) + 32\" */ checked_add_uint256_13298(expr_component), /** @src 12:19147:19185  \"uint256(s) + 32 + contractSignatureLen\" */ var_contractSignatureLen)\n                    /// @src 12:1413:33642  \"contract SmartAccount is...\"\n                    let _4 := mload(/** @src 12:19188:19205  \"signatures.length\" */ var_signatures_mpos)\n                    /// @src 12:19143:19389  \"if (uint256(s) + 32 + contractSignatureLen > signatures.length)...\"\n                    if /** @src 12:19147:19205  \"uint256(s) + 32 + contractSignatureLen > signatures.length\" */ gt(expr_1, _4)\n                    /// @src 12:19143:19389  \"if (uint256(s) + 32 + contractSignatureLen > signatures.length)...\"\n                    {\n                        /// @src 12:19230:19389  \"WrongContractSignatureFormat(...\"\n                        let _5 := /** @src 12:1413:33642  \"contract SmartAccount is...\" */ mload(64)\n                        /// @src 12:19230:19389  \"WrongContractSignatureFormat(...\"\n                        mstore(_5, /** @src 12:18745:18791  \"WrongContractSignatureFormat(uint256(s), 0, 0)\" */ shl(225, 0x38a245ff))\n                        /// @src 12:19230:19389  \"WrongContractSignatureFormat(...\"\n                        revert(_5, sub(abi_encode_uint256_uint256_uint256(add(_5, 4), expr_component, var_contractSignatureLen, _4), _5))\n                    }\n                    /// @src 12:19799:19931  \"ISignatureValidator(_signer).isValidSignature(...\"\n                    let _6 := /** @src 12:1413:33642  \"contract SmartAccount is...\" */ mload(64)\n                    let _7 := shl(225, 0x0b135d3f)\n                    /// @src 12:19799:19931  \"ISignatureValidator(_signer).isValidSignature(...\"\n                    mstore(_6, /** @src 12:1413:33642  \"contract SmartAccount is...\" */ _7)\n                    /// @src 12:19799:19931  \"ISignatureValidator(_signer).isValidSignature(...\"\n                    let _8 := staticcall(gas(), var_signer, _6, sub(abi_encode_bytes32_bytes(add(_6, 4), var_dataHash, _3), _6), _6, /** @src 12:19029:19130  \"assembly {...\" */ 0x20)\n                    /// @src 12:19799:19931  \"ISignatureValidator(_signer).isValidSignature(...\"\n                    if iszero(_8) { revert_forward() }\n                    let expr_2 := /** @src -1:-1:-1 */ 0\n                    /// @src 12:19799:19931  \"ISignatureValidator(_signer).isValidSignature(...\"\n                    if _8\n                    {\n                        let _9 := /** @src 12:19029:19130  \"assembly {...\" */ 0x20\n                        /// @src 12:19799:19931  \"ISignatureValidator(_signer).isValidSignature(...\"\n                        if gt(/** @src 12:19029:19130  \"assembly {...\" */ _9, /** @src 12:19799:19931  \"ISignatureValidator(_signer).isValidSignature(...\" */ returndatasize()) { _9 := returndatasize() }\n                        finalize_allocation(_6, _9)\n                        expr_2 := abi_decode_bytes4_fromMemory(_6, add(_6, _9))\n                    }\n                    /// @src 12:19778:20017  \"if (...\"\n                    if /** @src 12:19799:19954  \"ISignatureValidator(_signer).isValidSignature(...\" */ iszero(eq(/** @src 12:1413:33642  \"contract SmartAccount is...\" */ and(/** @src 12:19799:19954  \"ISignatureValidator(_signer).isValidSignature(...\" */ expr_2, /** @src 12:1413:33642  \"contract SmartAccount is...\" */ shl(224, 0xffffffff)), _7))\n                    /// @src 12:19778:20017  \"if (...\"\n                    {\n                        /// @src 12:19976:20017  \"WrongContractSignature(contractSignature)\"\n                        let _10 := /** @src 12:1413:33642  \"contract SmartAccount is...\" */ mload(64)\n                        /// @src 12:19976:20017  \"WrongContractSignature(contractSignature)\"\n                        mstore(_10, shl(224, 0x605d3489))\n                        revert(_10, sub(abi_encode_bytes(add(_10, /** @src 12:19799:19931  \"ISignatureValidator(_signer).isValidSignature(...\" */ 4), /** @src 12:19976:20017  \"WrongContractSignature(contractSignature)\" */ _3), _10))\n                    }\n                }\n                /// @src 12:1413:33642  \"contract SmartAccount is...\"\n                let _11 := cleanup_address(sload(/** @src 12:20529:20534  \"owner\" */ 0x32))\n                /// @src 12:1413:33642  \"contract SmartAccount is...\"\n                let _12 := sub(shl(160, 1), 1)\n                /// @src 12:20514:20575  \"if (_signer != owner) revert InvalidSignature(_signer, owner)\"\n                if /** @src 12:20518:20534  \"_signer != owner\" */ iszero(eq(/** @src 12:1413:33642  \"contract SmartAccount is...\" */ and(/** @src 12:20518:20534  \"_signer != owner\" */ var_signer, /** @src 12:1413:33642  \"contract SmartAccount is...\" */ _12), and(_11, _12)))\n                /// @src 12:20514:20575  \"if (_signer != owner) revert InvalidSignature(_signer, owner)\"\n                {\n                    /// @src 12:20543:20575  \"InvalidSignature(_signer, owner)\"\n                    let _13 := /** @src 12:1413:33642  \"contract SmartAccount is...\" */ mload(64)\n                    /// @src 12:20543:20575  \"InvalidSignature(_signer, owner)\"\n                    mstore(_13, shl(226, 0x10b5d437))\n                    revert(_13, sub(abi_encode_address_address(add(_13, 4), var_signer, _11), _13))\n                }\n            }\n            /// @ast-id 1256 @src 8:5069:6563  \"function tryRecover(...\"\n            function fun_tryRecover(var_hash, var_v, var_r, var_s) -> var, var_1\n            {\n                /// @src 8:6102:6263  \"if (uint256(s) > 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0) {...\"\n                if /** @src 8:6106:6185  \"uint256(s) > 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0\" */ gt(var_s, /** @src 8:6119:6185  \"0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0\" */ 0x7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0)\n                /// @src 8:6102:6263  \"if (uint256(s) > 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0) {...\"\n                {\n                    /// @src 8:6201:6252  \"return (address(0), RecoverError.InvalidSignatureS)\"\n                    var := /** @src 8:6217:6218  \"0\" */ 0x00\n                    /// @src 8:6201:6252  \"return (address(0), RecoverError.InvalidSignatureS)\"\n                    var_1 := /** @src 8:6221:6251  \"RecoverError.InvalidSignatureS\" */ 3\n                    /// @src 8:6201:6252  \"return (address(0), RecoverError.InvalidSignatureS)\"\n                    leave\n                }\n                /// @src 8:6374:6398  \"ecrecover(hash, v, r, s)\"\n                let _1 := /** @src 12:1413:33642  \"contract SmartAccount is...\" */ mload(64)\n                mstore(_1, var_hash)\n                mstore(add(_1, 32), and(var_v, 0xff))\n                mstore(add(_1, 64), var_r)\n                mstore(add(_1, 96), var_s)\n                /// @src -1:-1:-1\n                let _2 := 0\n                /// @src 8:6374:6398  \"ecrecover(hash, v, r, s)\"\n                mstore(/** @src -1:-1:-1 */ _2, _2)\n                /// @src 8:6374:6398  \"ecrecover(hash, v, r, s)\"\n                if iszero(staticcall(gas(), 1, _1, /** @src 12:1413:33642  \"contract SmartAccount is...\" */ 128, /** @src -1:-1:-1 */ _2, /** @src 12:1413:33642  \"contract SmartAccount is...\" */ 32))\n                /// @src 8:6374:6398  \"ecrecover(hash, v, r, s)\"\n                { revert_forward() }\n                let _3 := mload(/** @src -1:-1:-1 */ _2)\n                /// @src 8:6408:6509  \"if (signer == address(0)) {...\"\n                if /** @src 8:6412:6432  \"signer == address(0)\" */ iszero(/** @src 12:1413:33642  \"contract SmartAccount is...\" */ and(/** @src 8:6412:6432  \"signer == address(0)\" */ _3, /** @src 12:1413:33642  \"contract SmartAccount is...\" */ sub(shl(160, 1), 1)))\n                /// @src 8:6408:6509  \"if (signer == address(0)) {...\"\n                {\n                    /// @src 8:6448:6498  \"return (address(0), RecoverError.InvalidSignature)\"\n                    var := /** @src -1:-1:-1 */ _2\n                    /// @src 8:6448:6498  \"return (address(0), RecoverError.InvalidSignature)\"\n                    var_1 := /** @src 8:6374:6398  \"ecrecover(hash, v, r, s)\" */ 1\n                    /// @src 8:6448:6498  \"return (address(0), RecoverError.InvalidSignature)\"\n                    leave\n                }\n                /// @src 8:6519:6556  \"return (signer, RecoverError.NoError)\"\n                var := _3\n                var_1 := /** @src -1:-1:-1 */ _2\n            }\n            /// @ast-id 1306 @src 8:7256:7521  \"function toEthSignedMessageHash(bytes32 hash) internal pure returns (bytes32) {...\"\n            function fun_toEthSignedMessageHash(var_hash) -> var\n            {\n                /// @src 8:7455:7513  \"abi.encodePacked(\\\"\\\\x19Ethereum Signed Message:\\\\n32\\\", hash)\"\n                let expr_1302_mpos := /** @src 12:1413:33642  \"contract SmartAccount is...\" */ mload(64)\n                /// @src 8:7455:7513  \"abi.encodePacked(\\\"\\\\x19Ethereum Signed Message:\\\\n32\\\", hash)\"\n                let _1 := add(expr_1302_mpos, 0x20)\n                /// @src 12:1413:33642  \"contract SmartAccount is...\"\n                mstore(_1, 0x19457468657265756d205369676e6564204d6573736167653a0a333200000000)\n                mstore(add(/** @src 8:7455:7513  \"abi.encodePacked(\\\"\\\\x19Ethereum Signed Message:\\\\n32\\\", hash)\" */ expr_1302_mpos, /** @src 12:1413:33642  \"contract SmartAccount is...\" */ 60), var_hash)\n                /// @src 8:7455:7513  \"abi.encodePacked(\\\"\\\\x19Ethereum Signed Message:\\\\n32\\\", hash)\"\n                mstore(expr_1302_mpos, /** @src 12:1413:33642  \"contract SmartAccount is...\" */ 60)\n                let newFreePtr := add(expr_1302_mpos, 96)\n                if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, expr_1302_mpos)) { panic_error_0x41() }\n                mstore(64, newFreePtr)\n                /// @src 8:7438:7514  \"return keccak256(abi.encodePacked(\\\"\\\\x19Ethereum Signed Message:\\\\n32\\\", hash))\"\n                var := /** @src 8:7445:7514  \"keccak256(abi.encodePacked(\\\"\\\\x19Ethereum Signed Message:\\\\n32\\\", hash))\" */ keccak256(/** @src 12:1413:33642  \"contract SmartAccount is...\" */ _1, mload(/** @src 8:7445:7514  \"keccak256(abi.encodePacked(\\\"\\\\x19Ethereum Signed Message:\\\\n32\\\", hash))\" */ expr_1302_mpos))\n            }\n            /// @src 12:1413:33642  \"contract SmartAccount is...\"\n            function write_to_memory_address(memPtr, value)\n            {\n                mstore(memPtr, and(value, sub(shl(160, 1), 1)))\n            }\n            /// @ast-id 3542 @src 12:22665:23576  \"function getTransactionHash(...\"\n            function fun_getTransactionHash(var_to, var_value, var_data_offset, var_data_length, var_operation, var_targetTxGas, var_baseGas, var_gasPrice, var_tokenGasPriceFactor, var_gasToken, var_refundReceiver, var__nonce) -> var\n            {\n                /// @src 12:1413:33642  \"contract SmartAccount is...\"\n                let memPtr := mload(64)\n                finalize_allocation_13299(memPtr)\n                let _1 := sub(shl(160, 1), 1)\n                mstore(memPtr, and(var_to, _1))\n                if iszero(lt(var_operation, 2)) { panic_error_0x21() }\n                mstore(/** @src 12:23077:23242  \"Transaction({...\" */ add(memPtr, 32), /** @src 12:1413:33642  \"contract SmartAccount is...\" */ var_operation)\n                mstore(/** @src 12:23077:23242  \"Transaction({...\" */ add(memPtr, /** @src 12:1413:33642  \"contract SmartAccount is...\" */ 64), var_value)\n                mstore(/** @src 12:23077:23242  \"Transaction({...\" */ add(memPtr, 96), /** @src 12:1413:33642  \"contract SmartAccount is...\" */ abi_decode_available_length_bytes(/** @src 12:23077:23242  \"Transaction({...\" */ var_data_offset, var_data_length, /** @src 12:1413:33642  \"contract SmartAccount is...\" */ calldatasize()))\n                mstore(/** @src 12:23077:23242  \"Transaction({...\" */ add(memPtr, 128), /** @src 12:1413:33642  \"contract SmartAccount is...\" */ var_targetTxGas)\n                let memPtr_1 := mload(64)\n                finalize_allocation_13299(memPtr_1)\n                mstore(memPtr_1, var_baseGas)\n                mstore(/** @src 12:23282:23495  \"FeeRefund({...\" */ add(memPtr_1, /** @src 12:23077:23242  \"Transaction({...\" */ 32), /** @src 12:1413:33642  \"contract SmartAccount is...\" */ var_gasPrice)\n                mstore(/** @src 12:23282:23495  \"FeeRefund({...\" */ add(memPtr_1, /** @src 12:1413:33642  \"contract SmartAccount is...\" */ 64), var_tokenGasPriceFactor)\n                mstore(/** @src 12:23282:23495  \"FeeRefund({...\" */ add(memPtr_1, /** @src 12:23077:23242  \"Transaction({...\" */ 96), /** @src 12:1413:33642  \"contract SmartAccount is...\" */ and(var_gasToken, _1))\n                mstore(/** @src 12:23282:23495  \"FeeRefund({...\" */ add(memPtr_1, /** @src 12:23077:23242  \"Transaction({...\" */ 128), /** @src 12:1413:33642  \"contract SmartAccount is...\" */ and(var_refundReceiver, _1))\n                /// @src 12:23522:23568  \"encodeTransactionData(_tx, refundInfo, _nonce)\"\n                let expr_3538_mpos := fun_encodeTransactionData(memPtr, memPtr_1, var__nonce)\n                /// @src 12:23505:23569  \"return keccak256(encodeTransactionData(_tx, refundInfo, _nonce))\"\n                var := /** @src 12:23512:23569  \"keccak256(encodeTransactionData(_tx, refundInfo, _nonce))\" */ keccak256(/** @src 12:1413:33642  \"contract SmartAccount is...\" */ add(/** @src 12:23512:23569  \"keccak256(encodeTransactionData(_tx, refundInfo, _nonce))\" */ expr_3538_mpos, /** @src 12:23077:23242  \"Transaction({...\" */ 32), /** @src 12:1413:33642  \"contract SmartAccount is...\" */ mload(/** @src 12:23512:23569  \"keccak256(encodeTransactionData(_tx, refundInfo, _nonce))\" */ expr_3538_mpos))\n            }\n            /// @src 12:2295:2361  \"0xda033865d68bf4a40a5a7cb4159a99e33dba8569e65ea3e38222eb12d9e66eee\"\n            function abi_encode_enum_Operation(value, pos)\n            {\n                /// @src 12:1413:33642  \"contract SmartAccount is...\"\n                if iszero(lt(value, 2)) { panic_error_0x21() }\n                /// @src 12:2295:2361  \"0xda033865d68bf4a40a5a7cb4159a99e33dba8569e65ea3e38222eb12d9e66eee\"\n                mstore(pos, value)\n            }\n            function bytes_concat_bytes1_bytes1_bytes32_bytes32(param, param_1) -> outPtr\n            {\n                outPtr := /** @src 12:1413:33642  \"contract SmartAccount is...\" */ mload(64)\n                /// @src 12:2295:2361  \"0xda033865d68bf4a40a5a7cb4159a99e33dba8569e65ea3e38222eb12d9e66eee\"\n                mstore(add(outPtr, 0x20), shl(248, 25))\n                mstore(add(outPtr, 33), shl(248, /** @src 12:1413:33642  \"contract SmartAccount is...\" */ 1))\n                mstore(/** @src 12:2295:2361  \"0xda033865d68bf4a40a5a7cb4159a99e33dba8569e65ea3e38222eb12d9e66eee\" */ add(outPtr, 34), /** @src 12:1413:33642  \"contract SmartAccount is...\" */ param)\n                mstore(/** @src 12:2295:2361  \"0xda033865d68bf4a40a5a7cb4159a99e33dba8569e65ea3e38222eb12d9e66eee\" */ add(outPtr, 66), /** @src 12:1413:33642  \"contract SmartAccount is...\" */ param_1)\n                /// @src 12:2295:2361  \"0xda033865d68bf4a40a5a7cb4159a99e33dba8569e65ea3e38222eb12d9e66eee\"\n                mstore(outPtr, 66)\n                finalize_allocation_21863(outPtr)\n            }\n            /// @ast-id 3605 @src 12:23905:24763  \"function encodeTransactionData(...\"\n            function fun_encodeTransactionData(var_tx_mpos, var_refundInfo_3549_mpos, var_nonce) -> var_mpos\n            {\n                /// @src 12:1413:33642  \"contract SmartAccount is...\"\n                let _1 := sub(shl(160, 1), 1)\n                let cleaned := and(mload(/** @src 12:24192:24198  \"_tx.to\" */ var_tx_mpos), /** @src 12:1413:33642  \"contract SmartAccount is...\" */ _1)\n                let _2 := mload(/** @src 12:24216:24225  \"_tx.value\" */ add(var_tx_mpos, 64))\n                /// @src 12:24253:24261  \"_tx.data\"\n                let _mpos := mload(add(var_tx_mpos, 96))\n                /// @src 12:24243:24262  \"keccak256(_tx.data)\"\n                let expr := keccak256(/** @src 12:1413:33642  \"contract SmartAccount is...\" */ add(/** @src 12:24243:24262  \"keccak256(_tx.data)\" */ _mpos, /** @src 12:1413:33642  \"contract SmartAccount is...\" */ 0x20), mload(/** @src 12:24243:24262  \"keccak256(_tx.data)\" */ _mpos))\n                /// @src 12:1413:33642  \"contract SmartAccount is...\"\n                let _3 := mload(/** @src 12:24280:24293  \"_tx.operation\" */ add(var_tx_mpos, /** @src 12:1413:33642  \"contract SmartAccount is...\" */ 0x20))\n                validator_assert_enum_Operation(_3)\n                let _4 := mload(/** @src 12:24311:24326  \"_tx.targetTxGas\" */ add(var_tx_mpos, 128))\n                /// @src 12:1413:33642  \"contract SmartAccount is...\"\n                let _5 := mload(/** @src 12:24344:24362  \"refundInfo.baseGas\" */ var_refundInfo_3549_mpos)\n                /// @src 12:1413:33642  \"contract SmartAccount is...\"\n                let _6 := mload(/** @src 12:24380:24399  \"refundInfo.gasPrice\" */ add(var_refundInfo_3549_mpos, /** @src 12:1413:33642  \"contract SmartAccount is...\" */ 0x20))\n                let _7 := mload(/** @src 12:24417:24447  \"refundInfo.tokenGasPriceFactor\" */ add(var_refundInfo_3549_mpos, /** @src 12:24216:24225  \"_tx.value\" */ 64))\n                /// @src 12:1413:33642  \"contract SmartAccount is...\"\n                let cleaned_1 := and(mload(/** @src 12:24465:24484  \"refundInfo.gasToken\" */ add(var_refundInfo_3549_mpos, /** @src 12:24253:24261  \"_tx.data\" */ 96)), /** @src 12:1413:33642  \"contract SmartAccount is...\" */ _1)\n                let cleaned_2 := and(mload(/** @src 12:24502:24527  \"refundInfo.refundReceiver\" */ add(var_refundInfo_3549_mpos, /** @src 12:24311:24326  \"_tx.targetTxGas\" */ 128)), /** @src 12:1413:33642  \"contract SmartAccount is...\" */ _1)\n                /// @src 12:24127:24565  \"abi.encode(...\"\n                let expr_mpos := /** @src 12:1413:33642  \"contract SmartAccount is...\" */ mload(/** @src 12:24216:24225  \"_tx.value\" */ 64)\n                /// @src 12:24127:24565  \"abi.encode(...\"\n                let _8 := add(expr_mpos, /** @src 12:1413:33642  \"contract SmartAccount is...\" */ 0x20)\n                mstore(_8, /** @src 12:2295:2361  \"0xda033865d68bf4a40a5a7cb4159a99e33dba8569e65ea3e38222eb12d9e66eee\" */ 0xda033865d68bf4a40a5a7cb4159a99e33dba8569e65ea3e38222eb12d9e66eee)\n                /// @src 12:1413:33642  \"contract SmartAccount is...\"\n                mstore(/** @src 12:2295:2361  \"0xda033865d68bf4a40a5a7cb4159a99e33dba8569e65ea3e38222eb12d9e66eee\" */ add(/** @src 12:24127:24565  \"abi.encode(...\" */ expr_mpos, /** @src 12:24216:24225  \"_tx.value\" */ 64), /** @src 12:1413:33642  \"contract SmartAccount is...\" */ cleaned)\n                mstore(/** @src 12:2295:2361  \"0xda033865d68bf4a40a5a7cb4159a99e33dba8569e65ea3e38222eb12d9e66eee\" */ add(/** @src 12:24127:24565  \"abi.encode(...\" */ expr_mpos, /** @src 12:24253:24261  \"_tx.data\" */ 96), /** @src 12:1413:33642  \"contract SmartAccount is...\" */ _2)\n                mstore(/** @src 12:2295:2361  \"0xda033865d68bf4a40a5a7cb4159a99e33dba8569e65ea3e38222eb12d9e66eee\" */ add(/** @src 12:24127:24565  \"abi.encode(...\" */ expr_mpos, /** @src 12:24311:24326  \"_tx.targetTxGas\" */ 128), /** @src 12:1413:33642  \"contract SmartAccount is...\" */ expr)\n                /// @src 12:2295:2361  \"0xda033865d68bf4a40a5a7cb4159a99e33dba8569e65ea3e38222eb12d9e66eee\"\n                abi_encode_enum_Operation(_3, add(/** @src 12:24127:24565  \"abi.encode(...\" */ expr_mpos, /** @src 12:2295:2361  \"0xda033865d68bf4a40a5a7cb4159a99e33dba8569e65ea3e38222eb12d9e66eee\" */ 160))\n                /// @src 12:1413:33642  \"contract SmartAccount is...\"\n                mstore(/** @src 12:2295:2361  \"0xda033865d68bf4a40a5a7cb4159a99e33dba8569e65ea3e38222eb12d9e66eee\" */ add(/** @src 12:24127:24565  \"abi.encode(...\" */ expr_mpos, /** @src 12:2295:2361  \"0xda033865d68bf4a40a5a7cb4159a99e33dba8569e65ea3e38222eb12d9e66eee\" */ 192), /** @src 12:1413:33642  \"contract SmartAccount is...\" */ _4)\n                mstore(/** @src 12:2295:2361  \"0xda033865d68bf4a40a5a7cb4159a99e33dba8569e65ea3e38222eb12d9e66eee\" */ add(/** @src 12:24127:24565  \"abi.encode(...\" */ expr_mpos, /** @src 12:2295:2361  \"0xda033865d68bf4a40a5a7cb4159a99e33dba8569e65ea3e38222eb12d9e66eee\" */ 224), /** @src 12:1413:33642  \"contract SmartAccount is...\" */ _5)\n                mstore(/** @src 12:2295:2361  \"0xda033865d68bf4a40a5a7cb4159a99e33dba8569e65ea3e38222eb12d9e66eee\" */ add(/** @src 12:24127:24565  \"abi.encode(...\" */ expr_mpos, /** @src 12:2295:2361  \"0xda033865d68bf4a40a5a7cb4159a99e33dba8569e65ea3e38222eb12d9e66eee\" */ 256), /** @src 12:1413:33642  \"contract SmartAccount is...\" */ _6)\n                mstore(/** @src 12:2295:2361  \"0xda033865d68bf4a40a5a7cb4159a99e33dba8569e65ea3e38222eb12d9e66eee\" */ add(/** @src 12:24127:24565  \"abi.encode(...\" */ expr_mpos, /** @src 12:2295:2361  \"0xda033865d68bf4a40a5a7cb4159a99e33dba8569e65ea3e38222eb12d9e66eee\" */ 288), /** @src 12:1413:33642  \"contract SmartAccount is...\" */ _7)\n                mstore(/** @src 12:2295:2361  \"0xda033865d68bf4a40a5a7cb4159a99e33dba8569e65ea3e38222eb12d9e66eee\" */ add(/** @src 12:24127:24565  \"abi.encode(...\" */ expr_mpos, /** @src 12:2295:2361  \"0xda033865d68bf4a40a5a7cb4159a99e33dba8569e65ea3e38222eb12d9e66eee\" */ 320), /** @src 12:1413:33642  \"contract SmartAccount is...\" */ cleaned_1)\n                mstore(/** @src 12:2295:2361  \"0xda033865d68bf4a40a5a7cb4159a99e33dba8569e65ea3e38222eb12d9e66eee\" */ add(/** @src 12:24127:24565  \"abi.encode(...\" */ expr_mpos, /** @src 12:2295:2361  \"0xda033865d68bf4a40a5a7cb4159a99e33dba8569e65ea3e38222eb12d9e66eee\" */ 352), /** @src 12:1413:33642  \"contract SmartAccount is...\" */ cleaned_2)\n                /// @src 12:2295:2361  \"0xda033865d68bf4a40a5a7cb4159a99e33dba8569e65ea3e38222eb12d9e66eee\"\n                let _9 := 384\n                /// @src 12:1413:33642  \"contract SmartAccount is...\"\n                mstore(/** @src 12:2295:2361  \"0xda033865d68bf4a40a5a7cb4159a99e33dba8569e65ea3e38222eb12d9e66eee\" */ add(/** @src 12:24127:24565  \"abi.encode(...\" */ expr_mpos, /** @src 12:2295:2361  \"0xda033865d68bf4a40a5a7cb4159a99e33dba8569e65ea3e38222eb12d9e66eee\" */ _9), /** @src 12:1413:33642  \"contract SmartAccount is...\" */ var_nonce)\n                /// @src 12:24127:24565  \"abi.encode(...\"\n                mstore(expr_mpos, /** @src 12:2295:2361  \"0xda033865d68bf4a40a5a7cb4159a99e33dba8569e65ea3e38222eb12d9e66eee\" */ _9)\n                /// @src 12:24127:24565  \"abi.encode(...\"\n                finalize_allocation_29952(expr_mpos)\n                /// @src 12:24585:24756  \"return...\"\n                var_mpos := /** @src 12:24604:24756  \"bytes.concat(...\" */ bytes_concat_bytes1_bytes1_bytes32_bytes32(/** @src 12:24694:24711  \"domainSeparator()\" */ fun_domainSeparator(), /** @src 12:24104:24575  \"keccak256(...\" */ keccak256(/** @src 12:1413:33642  \"contract SmartAccount is...\" */ _8, mload(/** @src 12:24104:24575  \"keccak256(...\" */ expr_mpos)))\n            }\n            /// @ast-id 2642 @src 12:4758:4953  \"function _requireFromEntryPointOrOwner() internal view {...\"\n            function fun_requireFromEntryPointOrOwner()\n            {\n                /// @src 12:1413:33642  \"contract SmartAccount is...\"\n                let _1 := sub(shl(160, 1), 1)\n                /// @src 12:4827:4885  \"msg.sender != address(entryPoint()) && msg.sender != owner\"\n                let expr := /** @src 12:4827:4862  \"msg.sender != address(entryPoint())\" */ iszero(eq(/** @src 12:4827:4837  \"msg.sender\" */ caller(), /** @src 12:1413:33642  \"contract SmartAccount is...\" */ and(/** @src 12:8179:8190  \"_entryPoint\" */ loadimmutable(\"2506\"), /** @src 12:1413:33642  \"contract SmartAccount is...\" */ _1)))\n                /// @src 12:4827:4885  \"msg.sender != address(entryPoint()) && msg.sender != owner\"\n                if expr\n                {\n                    expr := /** @src 12:4866:4885  \"msg.sender != owner\" */ iszero(eq(/** @src 12:4827:4837  \"msg.sender\" */ caller(), /** @src 12:1413:33642  \"contract SmartAccount is...\" */ and(sload(/** @src 12:4880:4885  \"owner\" */ 0x32), /** @src 12:1413:33642  \"contract SmartAccount is...\" */ _1)))\n                }\n                /// @src 12:4823:4946  \"if (msg.sender != address(entryPoint()) && msg.sender != owner)...\"\n                if expr\n                {\n                    /// @src 12:4906:4946  \"CallerIsNotEntryPointOrOwner(msg.sender)\"\n                    let _2 := /** @src 12:1413:33642  \"contract SmartAccount is...\" */ mload(64)\n                    /// @src 12:4906:4946  \"CallerIsNotEntryPointOrOwner(msg.sender)\"\n                    mstore(_2, shl(225, 0x32dbd3c7))\n                    /// @src 12:1413:33642  \"contract SmartAccount is...\"\n                    mstore(/** @src 12:4906:4946  \"CallerIsNotEntryPointOrOwner(msg.sender)\" */ add(_2, 4), /** @src 12:4827:4837  \"msg.sender\" */ caller())\n                    /// @src 12:4906:4946  \"CallerIsNotEntryPointOrOwner(msg.sender)\"\n                    revert(_2, /** @src 12:1413:33642  \"contract SmartAccount is...\" */ 36)\n                }\n            }\n            function panic_error_0x32()\n            {\n                mstore(0, shl(224, 0x4e487b71))\n                mstore(4, 0x32)\n                revert(0, 0x24)\n            }\n            function calldata_array_index_access_address_dyn_calldata(base_ref, length, index) -> addr\n            {\n                if iszero(lt(index, length)) { panic_error_0x32() }\n                addr := add(base_ref, shl(5, index))\n            }\n            function access_calldata_tail_bytes_calldata(base_ref, ptr_to_tail) -> addr, length\n            {\n                let rel_offset_of_tail := calldataload(ptr_to_tail)\n                if iszero(slt(rel_offset_of_tail, add(sub(calldatasize(), base_ref), not(30)))) { revert(0, 0) }\n                let addr_1 := add(base_ref, rel_offset_of_tail)\n                length := calldataload(addr_1)\n                if gt(length, 0xffffffffffffffff) { revert(0, 0) }\n                addr := add(addr_1, 0x20)\n                if sgt(addr, sub(calldatasize(), length)) { revert(0, 0) }\n            }\n            /// @ast-id 3815 @src 12:28847:29354  \"function _call(address target, uint256 value, bytes memory data) internal {...\"\n            function fun_call(var_target, var_value, var_data_mpos)\n            {\n                /// @src 12:28931:29348  \"assembly {...\"\n                let usr$success := call(gas(), var_target, var_value, add(var_data_mpos, 0x20), mload(var_data_mpos), 0, 0)\n                let usr$ptr := mload(0x40)\n                returndatacopy(usr$ptr, 0, returndatasize())\n                if iszero(usr$success)\n                {\n                    revert(usr$ptr, returndatasize())\n                }\n            }\n            /// @src 12:1413:33642  \"contract SmartAccount is...\"\n            function calldata_array_index_range_access_bytes_calldata(offset, length) -> offsetOut, lengthOut\n            {\n                if gt(/** @src 12:30171:30172  \"4\" */ 0x04, /** @src 12:1413:33642  \"contract SmartAccount is...\" */ length)\n                {\n                    revert(/** @src 12:30116:30117  \"0\" */ 0x00, 0x00)\n                }\n                /// @src 12:1413:33642  \"contract SmartAccount is...\"\n                offsetOut := offset\n                lengthOut := /** @src 12:30171:30172  \"4\" */ 0x04\n            }\n            /// @src 12:1413:33642  \"contract SmartAccount is...\"\n            function calldata_array_index_range_access_bytes_calldata_13307(offset, length, endIndex) -> offsetOut, lengthOut\n            {\n                if gt(/** @src 12:30171:30172  \"4\" */ 0x04, /** @src 12:1413:33642  \"contract SmartAccount is...\" */ endIndex) { revert(0, 0) }\n                if gt(endIndex, length) { revert(0, 0) }\n                offsetOut := add(offset, /** @src 12:30171:30172  \"4\" */ 0x04)\n                /// @src 12:1413:33642  \"contract SmartAccount is...\"\n                lengthOut := add(endIndex, not(3))\n            }\n            function convert_bytes_to_fixedbytes_from_bytes_calldata_to_bytes4(array, len) -> value\n            {\n                let _1 := calldataload(array)\n                let _2 := shl(224, 0xffffffff)\n                value := and(_1, _2)\n                if lt(len, 4)\n                {\n                    value := and(and(_1, shl(shl(3, sub(4, len)), _2)), _2)\n                }\n            }\n            function abi_decode_address_payablet_uint256t_bytes(headStart, dataEnd) -> value0, value1, value2\n            {\n                if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n                let value := calldataload(headStart)\n                validator_revert_address(value)\n                value0 := value\n                value1 := calldataload(add(headStart, 32))\n                let offset := calldataload(add(headStart, 64))\n                if gt(offset, 0xffffffffffffffff)\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 12:1413:33642  \"contract SmartAccount is...\"\n                value2 := abi_decode_bytes(add(headStart, offset), dataEnd)\n            }\n            function mapping_index_access_mapping_address_address_of_address_13223(key) -> dataSlot\n            {\n                mstore(/** @src 16:2449:2450  \"0\" */ 0x00, /** @src 12:1413:33642  \"contract SmartAccount is...\" */ and(key, sub(shl(160, 1), 1)))\n                mstore(0x20, /** @src 16:2449:2450  \"0\" */ 0x00)\n                /// @src 12:1413:33642  \"contract SmartAccount is...\"\n                dataSlot := keccak256(/** @src 16:2449:2450  \"0\" */ 0x00, /** @src 12:1413:33642  \"contract SmartAccount is...\" */ 0x40)\n            }\n            function mapping_index_access_mapping_address_address_of_address_13224() -> dataSlot\n            {\n                mstore(/** @src 16:2449:2450  \"0\" */ 0x00, /** @src 12:1413:33642  \"contract SmartAccount is...\" */ 1)\n                mstore(0x20, /** @src 16:2449:2450  \"0\" */ 0x00)\n                /// @src 12:1413:33642  \"contract SmartAccount is...\"\n                dataSlot := keccak256(/** @src 16:2449:2450  \"0\" */ 0x00, /** @src 12:1413:33642  \"contract SmartAccount is...\" */ 0x40)\n            }\n            function mapping_index_access_mapping_address_address_of_address(key) -> dataSlot\n            {\n                mstore(0, and(key, sub(shl(160, 1), 1)))\n                mstore(0x20, 0)\n                dataSlot := keccak256(0, 0x40)\n            }\n            function calldata_access_bytes_calldata(base_ref, ptr) -> value, length\n            {\n                let rel_offset_of_tail := calldataload(ptr)\n                if iszero(slt(rel_offset_of_tail, add(sub(calldatasize(), base_ref), not(30)))) { revert(0, 0) }\n                let value_1 := add(rel_offset_of_tail, base_ref)\n                length := calldataload(value_1)\n                value := add(value_1, 0x20)\n                if gt(length, 0xffffffffffffffff) { revert(0, 0) }\n                if sgt(value, sub(calldatasize(), length)) { revert(0, 0) }\n            }\n            function abi_encode_bytes_calldata(start, length, pos) -> end\n            {\n                mstore(pos, length)\n                calldatacopy(add(pos, 0x20), start, length)\n                mstore(add(add(pos, length), 0x20), /** @src -1:-1:-1 */ 0)\n                /// @src 12:1413:33642  \"contract SmartAccount is...\"\n                end := add(add(pos, and(add(length, 31), not(31))), 0x20)\n            }\n            function abi_encode_struct_UserOperation_calldata_bytes32(headStart, value0, value1) -> tail\n            {\n                mstore(headStart, 64)\n                abi_encode_address(abi_decode_address(value0), add(headStart, 64))\n                mstore(add(headStart, 96), calldataload(add(value0, 0x20)))\n                let memberValue0, memberValue1 := calldata_access_bytes_calldata(value0, add(value0, 64))\n                let _1 := 0x0160\n                mstore(add(headStart, 128), _1)\n                let tail_1 := abi_encode_bytes_calldata(memberValue0, memberValue1, add(headStart, 416))\n                let memberValue0_1, memberValue1_1 := calldata_access_bytes_calldata(value0, add(value0, 96))\n                let _2 := not(63)\n                mstore(add(headStart, 160), add(sub(tail_1, headStart), _2))\n                let tail_2 := abi_encode_bytes_calldata(memberValue0_1, memberValue1_1, tail_1)\n                mstore(add(headStart, 192), calldataload(add(value0, 128)))\n                mstore(add(headStart, 224), calldataload(add(value0, 160)))\n                let _3 := 256\n                mstore(add(headStart, _3), calldataload(add(value0, 192)))\n                let _4 := 288\n                mstore(add(headStart, _4), calldataload(add(value0, 224)))\n                let _5 := 320\n                mstore(add(headStart, _5), calldataload(add(value0, _3)))\n                let memberValue0_2, memberValue1_2 := calldata_access_bytes_calldata(value0, add(value0, _4))\n                mstore(add(headStart, _1), add(sub(tail_2, headStart), _2))\n                let tail_3 := abi_encode_bytes_calldata(memberValue0_2, memberValue1_2, tail_2)\n                let memberValue0_3, memberValue1_3 := calldata_access_bytes_calldata(value0, add(value0, _5))\n                mstore(add(headStart, 384), add(sub(tail_3, headStart), _2))\n                tail := abi_encode_bytes_calldata(memberValue0_3, memberValue1_3, tail_3)\n                mstore(add(headStart, 0x20), value1)\n            }\n            /// @ast-id 3913 @src 12:29818:30840  \"function _validateSignature(...\"\n            function fun_validateSignature(var_userOp_offset, var_userOpHash) -> var_validationData\n            {\n                /// @src 12:30067:30082  \"userOp.callData\"\n                let expr_3830_offset, expr_3830_length := access_calldata_tail_bytes_calldata(var_userOp_offset, add(var_userOp_offset, 96))\n                /// @src 12:30092:30661  \"if (userOpData.length > 0) {...\"\n                if /** @src 12:30096:30117  \"userOpData.length > 0\" */ iszero(iszero(expr_3830_length))\n                /// @src 12:30092:30661  \"if (userOpData.length > 0) {...\"\n                {\n                    /// @src 12:30159:30173  \"userOpData[:4]\"\n                    let expr_3842_offset, expr_3842_length := calldata_array_index_range_access_bytes_calldata(expr_3830_offset, expr_3830_length)\n                    /// @src 12:30280:30651  \"if (methodSig == this.executeCall.selector) {...\"\n                    if /** @src 12:30284:30322  \"methodSig == this.executeCall.selector\" */ eq(/** @src 12:1413:33642  \"contract SmartAccount is...\" */ and(/** @src 12:30152:30174  \"bytes4(userOpData[:4])\" */ convert_bytes_to_fixedbytes_from_bytes_calldata_to_bytes4(expr_3842_offset, expr_3842_length), /** @src 12:1413:33642  \"contract SmartAccount is...\" */ shl(224, 0xffffffff)), shl(224, 0x9e5d4c49))\n                    /// @src 12:30280:30651  \"if (methodSig == this.executeCall.selector) {...\"\n                    {\n                        /// @src 12:30424:30438  \"userOpData[4:]\"\n                        let expr_3860_offset, expr_3860_length := calldata_array_index_range_access_bytes_calldata_13307(expr_3830_offset, expr_3830_length, expr_3830_length)\n                        /// @src 12:30392:30500  \"abi.decode(...\"\n                        let expr_3868_component, expr_3868_component_1, expr_component_mpos := abi_decode_address_payablet_uint256t_bytes(expr_3860_offset, add(expr_3860_offset, expr_3860_length))\n                        /// @src 12:1413:33642  \"contract SmartAccount is...\"\n                        let _1 := sub(shl(160, 1), 1)\n                        let _2 := and(/** @src 12:30342:30500  \"(address _to, uint _amount, bytes memory _data) = abi.decode(...\" */ expr_3868_component, /** @src 12:1413:33642  \"contract SmartAccount is...\" */ _1)\n                        /// @src 12:30518:30636  \"if (address(modules[_to]) != address(0))...\"\n                        if /** @src 12:30522:30557  \"address(modules[_to]) != address(0)\" */ iszero(iszero(/** @src 12:1413:33642  \"contract SmartAccount is...\" */ and(/** @src 12:30530:30542  \"modules[_to]\" */ read_from_storage_split_offset_address(mapping_index_access_mapping_address_address_of_address_13223(_2)), /** @src 12:1413:33642  \"contract SmartAccount is...\" */ _1)))\n                        /// @src 12:30518:30636  \"if (address(modules[_to]) != address(0))...\"\n                        {\n                            /// @src 12:30586:30636  \"IModule(_to).validateSignature(userOp, userOpHash)\"\n                            let _3 := /** @src 12:1413:33642  \"contract SmartAccount is...\" */ mload(64)\n                            /// @src 12:30586:30636  \"IModule(_to).validateSignature(userOp, userOpHash)\"\n                            mstore(_3, /** @src 12:1413:33642  \"contract SmartAccount is...\" */ shl(225, 0x1179c1f5))\n                            /// @src 12:30586:30636  \"IModule(_to).validateSignature(userOp, userOpHash)\"\n                            let _4 := call(gas(), _2, /** @src 12:30116:30117  \"0\" */ 0x00, /** @src 12:30586:30636  \"IModule(_to).validateSignature(userOp, userOpHash)\" */ _3, sub(abi_encode_struct_UserOperation_calldata_bytes32(add(_3, /** @src 12:30171:30172  \"4\" */ 0x04), /** @src 12:30586:30636  \"IModule(_to).validateSignature(userOp, userOpHash)\" */ var_userOp_offset, var_userOpHash), _3), _3, 32)\n                            if iszero(_4) { revert_forward() }\n                            let expr := /** @src 12:30116:30117  \"0\" */ 0x00\n                            /// @src 12:30586:30636  \"IModule(_to).validateSignature(userOp, userOpHash)\"\n                            if _4\n                            {\n                                let _5 := 32\n                                if gt(_5, returndatasize()) { _5 := returndatasize() }\n                                finalize_allocation(_3, _5)\n                                expr := abi_decode_uint256_fromMemory(_3, add(_3, _5))\n                            }\n                            /// @src 12:30579:30636  \"return IModule(_to).validateSignature(userOp, userOpHash)\"\n                            var_validationData := expr\n                            leave\n                        }\n                    }\n                }\n                /// @src 12:30685:30720  \"userOpHash.toEthSignedMessageHash()\"\n                let expr_1 := fun_toEthSignedMessageHash(var_userOpHash)\n                /// @src 12:30734:30739  \"owner\"\n                let _6 := /** @src 12:1413:33642  \"contract SmartAccount is...\" */ cleanup_address(sload(/** @src 12:30734:30739  \"owner\" */ 0x32))\n                /// @src 12:30756:30772  \"userOp.signature\"\n                let expr_offset, expr_length := access_calldata_tail_bytes_calldata(var_userOp_offset, add(var_userOp_offset, 320))\n                /// @src 12:30730:30815  \"if (owner != hash.recover(userOp.signature))...\"\n                if /** @src 12:30734:30773  \"owner != hash.recover(userOp.signature)\" */ iszero(eq(/** @src 12:1413:33642  \"contract SmartAccount is...\" */ and(/** @src 12:30734:30773  \"owner != hash.recover(userOp.signature)\" */ _6, /** @src 12:1413:33642  \"contract SmartAccount is...\" */ sub(shl(160, 1), 1)), /** @src 12:30734:30773  \"owner != hash.recover(userOp.signature)\" */ cleanup_address(/** @src 12:30743:30773  \"hash.recover(userOp.signature)\" */ fun_recover(expr_1, /** @src 12:1413:33642  \"contract SmartAccount is...\" */ abi_decode_available_length_bytes(/** @src 12:30743:30773  \"hash.recover(userOp.signature)\" */ expr_offset, expr_length, /** @src 12:1413:33642  \"contract SmartAccount is...\" */ calldatasize())))))\n                /// @src 12:30730:30815  \"if (owner != hash.recover(userOp.signature))...\"\n                {\n                    /// @src 12:30787:30815  \"return SIG_VALIDATION_FAILED\"\n                    var_validationData := /** @src 19:242:243  \"1\" */ 0x01\n                    /// @src 12:30787:30815  \"return SIG_VALIDATION_FAILED\"\n                    leave\n                }\n                /// @src 12:30825:30833  \"return 0\"\n                var_validationData := /** @src 12:30116:30117  \"0\" */ 0x00\n            }\n            /// @ast-id 1115 @src 8:3661:3888  \"function recover(bytes32 hash, bytes memory signature) internal pure returns (address) {...\"\n            function fun_recover(var_hash, var_signature_1093_mpos) -> var\n            {\n                /// @src 8:3800:3827  \"tryRecover(hash, signature)\"\n                let expr_component, expr_1106_component := fun_tryRecover_1088(var_hash, var_signature_1093_mpos)\n                /// @src 8:3849:3854  \"error\"\n                fun_throwError(expr_1106_component)\n                /// @src 8:3865:3881  \"return recovered\"\n                var := expr_component\n            }\n            /// @src 12:1413:33642  \"contract SmartAccount is...\"\n            function validator_assert_enum_RecoverError(value)\n            {\n                if iszero(lt(value, 5)) { panic_error_0x21() }\n            }\n            function abi_encode_stringliteral_520d(headStart) -> tail\n            {\n                mstore(headStart, 32)\n                mstore(add(headStart, 32), 34)\n                mstore(add(headStart, 64), \"ECDSA: invalid signature 's' val\")\n                mstore(add(headStart, 96), \"ue\")\n                tail := add(headStart, 128)\n            }\n            function abi_encode_stringliteral(headStart) -> tail\n            {\n                mstore(headStart, 32)\n                mstore(add(headStart, 32), 31)\n                mstore(add(headStart, 64), \"ECDSA: invalid signature length\")\n                tail := add(headStart, 96)\n            }\n            function abi_encode_tuple_stringliteral(headStart) -> tail\n            {\n                mstore(headStart, 32)\n                mstore(add(headStart, 32), 24)\n                mstore(add(headStart, 64), \"ECDSA: invalid signature\")\n                tail := add(headStart, 96)\n            }\n            /// @ast-id 1042 @src 8:570:1081  \"function _throwError(RecoverError error) private pure {...\"\n            function fun_throwError(var_error)\n            {\n                /// @src 12:1413:33642  \"contract SmartAccount is...\"\n                validator_assert_enum_RecoverError(var_error)\n                /// @src 8:634:1075  \"if (error == RecoverError.NoError) {...\"\n                switch /** @src 8:638:667  \"error == RecoverError.NoError\" */ iszero(var_error)\n                case /** @src 8:634:1075  \"if (error == RecoverError.NoError) {...\" */ 0 {\n                    /// @src 12:1413:33642  \"contract SmartAccount is...\"\n                    validator_assert_enum_RecoverError(var_error)\n                    /// @src 8:730:1075  \"if (error == RecoverError.InvalidSignature) {...\"\n                    switch /** @src 8:734:772  \"error == RecoverError.InvalidSignature\" */ eq(var_error, /** @src 8:743:772  \"RecoverError.InvalidSignature\" */ 1)\n                    case /** @src 8:730:1075  \"if (error == RecoverError.InvalidSignature) {...\" */ 0 {\n                        /// @src 12:1413:33642  \"contract SmartAccount is...\"\n                        validator_assert_enum_RecoverError(var_error)\n                        /// @src 8:839:1075  \"if (error == RecoverError.InvalidSignatureLength) {...\"\n                        switch /** @src 8:843:887  \"error == RecoverError.InvalidSignatureLength\" */ eq(var_error, /** @src 8:852:887  \"RecoverError.InvalidSignatureLength\" */ 2)\n                        case /** @src 8:839:1075  \"if (error == RecoverError.InvalidSignatureLength) {...\" */ 0 {\n                            /// @src 12:1413:33642  \"contract SmartAccount is...\"\n                            validator_assert_enum_RecoverError(var_error)\n                            /// @src 8:961:1075  \"if (error == RecoverError.InvalidSignatureS) {...\"\n                            if /** @src 8:965:1004  \"error == RecoverError.InvalidSignatureS\" */ eq(var_error, /** @src 8:974:1004  \"RecoverError.InvalidSignatureS\" */ 3)\n                            /// @src 8:961:1075  \"if (error == RecoverError.InvalidSignatureS) {...\"\n                            {\n                                /// @src 8:1020:1064  \"revert(\\\"ECDSA: invalid signature 's' value\\\")\"\n                                let _1 := /** @src 12:1413:33642  \"contract SmartAccount is...\" */ mload(64)\n                                /// @src 8:1020:1064  \"revert(\\\"ECDSA: invalid signature 's' value\\\")\"\n                                mstore(_1, /** @src 12:1413:33642  \"contract SmartAccount is...\" */ shl(229, 4594637))\n                                /// @src 8:1020:1064  \"revert(\\\"ECDSA: invalid signature 's' value\\\")\"\n                                revert(_1, sub(abi_encode_stringliteral_520d(add(_1, 4)), _1))\n                            }\n                        }\n                        default /// @src 8:839:1075  \"if (error == RecoverError.InvalidSignatureLength) {...\"\n                        {\n                            /// @src 8:903:944  \"revert(\\\"ECDSA: invalid signature length\\\")\"\n                            let _2 := /** @src 12:1413:33642  \"contract SmartAccount is...\" */ mload(64)\n                            /// @src 8:903:944  \"revert(\\\"ECDSA: invalid signature length\\\")\"\n                            mstore(_2, /** @src 12:1413:33642  \"contract SmartAccount is...\" */ shl(229, 4594637))\n                            /// @src 8:903:944  \"revert(\\\"ECDSA: invalid signature length\\\")\"\n                            revert(_2, sub(abi_encode_stringliteral(add(_2, 4)), _2))\n                        }\n                    }\n                    default /// @src 8:730:1075  \"if (error == RecoverError.InvalidSignature) {...\"\n                    {\n                        /// @src 8:788:822  \"revert(\\\"ECDSA: invalid signature\\\")\"\n                        let _3 := /** @src 12:1413:33642  \"contract SmartAccount is...\" */ mload(64)\n                        /// @src 8:788:822  \"revert(\\\"ECDSA: invalid signature\\\")\"\n                        mstore(_3, /** @src 12:1413:33642  \"contract SmartAccount is...\" */ shl(229, 4594637))\n                        /// @src 8:788:822  \"revert(\\\"ECDSA: invalid signature\\\")\"\n                        revert(_3, sub(abi_encode_tuple_stringliteral(add(_3, 4)), _3))\n                    }\n                }\n                default /// @src 8:634:1075  \"if (error == RecoverError.NoError) {...\"\n                {\n                    /// @src 8:683:690  \"return;\"\n                    leave\n                }\n            }\n            /// @ast-id 1088 @src 8:2145:2875  \"function tryRecover(bytes32 hash, bytes memory signature) internal pure returns (address, RecoverError) {...\"\n            function fun_tryRecover_1088(var_hash, var_signature_1047_mpos) -> var, var_1\n            {\n                /// @src 8:2259:2869  \"if (signature.length == 65) {...\"\n                switch /** @src 8:2263:2285  \"signature.length == 65\" */ eq(/** @src 12:1413:33642  \"contract SmartAccount is...\" */ mload(/** @src 8:2263:2279  \"signature.length\" */ var_signature_1047_mpos), /** @src 8:2283:2285  \"65\" */ 0x41)\n                case /** @src 8:2259:2869  \"if (signature.length == 65) {...\" */ 0 {\n                    /// @src 8:2802:2858  \"return (address(0), RecoverError.InvalidSignatureLength)\"\n                    var := /** @src 8:2818:2819  \"0\" */ 0x00\n                    /// @src 8:2802:2858  \"return (address(0), RecoverError.InvalidSignatureLength)\"\n                    var_1 := /** @src 8:2822:2857  \"RecoverError.InvalidSignatureLength\" */ 2\n                    /// @src 8:2802:2858  \"return (address(0), RecoverError.InvalidSignatureLength)\"\n                    leave\n                }\n                default /// @src 8:2259:2869  \"if (signature.length == 65) {...\"\n                {\n                    /// @src 8:2546:2726  \"assembly {...\"\n                    let var_r := mload(add(var_signature_1047_mpos, 0x20))\n                    /// @src 8:2746:2771  \"tryRecover(hash, v, r, s)\"\n                    let expr_1074_component, expr_1074_component_1 := fun_tryRecover(var_hash, /** @src 8:2546:2726  \"assembly {...\" */ byte(/** @src -1:-1:-1 */ 0, /** @src 8:2546:2726  \"assembly {...\" */ mload(add(var_signature_1047_mpos, 0x60))), /** @src 8:2746:2771  \"tryRecover(hash, v, r, s)\" */ var_r, /** @src 8:2546:2726  \"assembly {...\" */ mload(add(var_signature_1047_mpos, 0x40)))\n                    /// @src 8:2739:2771  \"return tryRecover(hash, v, r, s)\"\n                    var := expr_1074_component\n                    var_1 := expr_1074_component_1\n                    leave\n                }\n            }\n            /// @ast-id 3955 @src 12:31475:31959  \"function isValidSignature(...\"\n            function fun_isValidSignature(var_dataHash, var_signature_mpos) -> var\n            {\n                /// @src 12:1413:33642  \"contract SmartAccount is...\"\n                let _1 := cleanup_address(sload(/** @src 12:31619:31624  \"owner\" */ 0x32))\n                /// @src 12:31615:31814  \"if (owner.code.length > 0) {...\"\n                if /** @src 12:31619:31640  \"owner.code.length > 0\" */ iszero(iszero(/** @src 12:31619:31636  \"owner.code.length\" */ extcodesize(/** @src 12:1413:33642  \"contract SmartAccount is...\" */ _1)))\n                /// @src 12:31615:31814  \"if (owner.code.length > 0) {...\"\n                {\n                    /// @src 12:31679:31803  \"ISignatureValidator(owner).isValidSignature(...\"\n                    let _2 := /** @src 12:1413:33642  \"contract SmartAccount is...\" */ mload(64)\n                    /// @src 12:31679:31803  \"ISignatureValidator(owner).isValidSignature(...\"\n                    mstore(_2, /** @src 12:1413:33642  \"contract SmartAccount is...\" */ shl(225, 0x0b135d3f))\n                    /// @src 12:31679:31803  \"ISignatureValidator(owner).isValidSignature(...\"\n                    let _3 := staticcall(gas(), /** @src 12:1413:33642  \"contract SmartAccount is...\" */ and(_1, sub(shl(160, 1), 1)), /** @src 12:31679:31803  \"ISignatureValidator(owner).isValidSignature(...\" */ _2, sub(abi_encode_bytes32_bytes(add(_2, 4), var_dataHash, var_signature_mpos), _2), _2, 32)\n                    if iszero(_3) { revert_forward() }\n                    let expr := /** @src 12:31639:31640  \"0\" */ 0x00\n                    /// @src 12:31679:31803  \"ISignatureValidator(owner).isValidSignature(...\"\n                    if _3\n                    {\n                        let _4 := 32\n                        if gt(_4, returndatasize()) { _4 := returndatasize() }\n                        finalize_allocation(_2, _4)\n                        expr := abi_decode_bytes4_fromMemory(_2, add(_2, _4))\n                    }\n                    /// @src 12:31656:31803  \"return...\"\n                    var := expr\n                    leave\n                }\n                /// @src 12:31823:31918  \"if (owner == _dataHash.recover(_signature)) {...\"\n                if /** @src 12:31827:31865  \"owner == _dataHash.recover(_signature)\" */ eq(/** @src 12:1413:33642  \"contract SmartAccount is...\" */ and(/** @src 12:31827:31865  \"owner == _dataHash.recover(_signature)\" */ _1, /** @src 12:1413:33642  \"contract SmartAccount is...\" */ sub(shl(160, 1), 1)), /** @src 12:31827:31865  \"owner == _dataHash.recover(_signature)\" */ cleanup_address(/** @src 12:31836:31865  \"_dataHash.recover(_signature)\" */ fun_recover(var_dataHash, var_signature_mpos)))\n                /// @src 12:31823:31918  \"if (owner == _dataHash.recover(_signature)) {...\"\n                {\n                    /// @src 12:31881:31907  \"return EIP1271_MAGIC_VALUE\"\n                    var := /** @src 12:1413:33642  \"contract SmartAccount is...\" */ shl(225, 0x0b135d3f)\n                    /// @src 12:31881:31907  \"return EIP1271_MAGIC_VALUE\"\n                    leave\n                }\n                /// @src 12:31927:31952  \"return bytes4(0xffffffff)\"\n                var := /** @src 12:1413:33642  \"contract SmartAccount is...\" */ shl(224, 0xffffffff)\n            }\n            /// @ast-id 4045 @src 12:33473:33640  \"receive() external payable {...\"\n            function fun()\n            {\n                /// @src 12:33510:33564  \"if (address(this) == _self) revert DelegateCallsOnly()\"\n                if /** @src 12:33514:33536  \"address(this) == _self\" */ eq(/** @src 12:33522:33526  \"this\" */ address(), /** @src 12:1413:33642  \"contract SmartAccount is...\" */ and(/** @src 12:33531:33536  \"_self\" */ loadimmutable(\"2510\"), /** @src 12:1413:33642  \"contract SmartAccount is...\" */ sub(shl(160, 1), 1)))\n                /// @src 12:33510:33564  \"if (address(this) == _self) revert DelegateCallsOnly()\"\n                {\n                    /// @src 12:33545:33564  \"DelegateCallsOnly()\"\n                    let _1 := /** @src 12:1413:33642  \"contract SmartAccount is...\" */ mload(64)\n                    /// @src 12:33545:33564  \"DelegateCallsOnly()\"\n                    mstore(_1, shl(226, 0x3c971665))\n                    revert(_1, 4)\n                }\n                /// @src 12:33579:33633  \"SmartAccountReceivedNativeToken(msg.sender, msg.value)\"\n                log3(0, 0, 0xd05ab44e279ac59e855cb75dc2ae23b200ad994797b6f1f028f96a46ecce02, /** @src 12:33611:33621  \"msg.sender\" */ caller(), /** @src 12:33623:33632  \"msg.value\" */ callvalue())\n            }\n            /// @src 12:1413:33642  \"contract SmartAccount is...\"\n            function packed_hashed_bytes_to_bytes(var) -> hash\n            {\n                let pos := mload(64)\n                let length := mload(var)\n                copy_memory_to_memory_with_cleanup(add(var, 0x20), pos, length)\n                hash := keccak256(pos, sub(add(pos, length), pos))\n            }\n            function abi_encode_enum_Operation_uint256(headStart, value0, value1) -> tail\n            {\n                tail := add(headStart, 64)\n                abi_encode_enum_Operation(value0, headStart)\n                mstore(add(headStart, 32), value1)\n            }\n            /// @ast-id 4432 @src 14:612:1697  \"function execute(...\"\n            function fun_execute(var_to, var_value, var_data_4393_mpos, var_operation, var_txGas) -> var_success\n            {\n                /// @src 12:1413:33642  \"contract SmartAccount is...\"\n                validator_assert_enum_Operation(var_operation)\n                /// @src 14:804:1541  \"if (operation == Enum.Operation.DelegateCall) {...\"\n                switch /** @src 14:808:848  \"operation == Enum.Operation.DelegateCall\" */ eq(var_operation, /** @src 14:821:848  \"Enum.Operation.DelegateCall\" */ 1)\n                case /** @src 14:804:1541  \"if (operation == Enum.Operation.DelegateCall) {...\" */ 0 {\n                    /// @src 14:1263:1531  \"assembly {...\"\n                    var_success := call(var_txGas, var_to, var_value, add(var_data_4393_mpos, 0x20), mload(var_data_4393_mpos), /** @src -1:-1:-1 */ 0, 0)\n                }\n                default /// @src 14:804:1541  \"if (operation == Enum.Operation.DelegateCall) {...\"\n                {\n                    /// @src 14:924:1173  \"assembly {...\"\n                    var_success := delegatecall(var_txGas, var_to, add(var_data_4393_mpos, 0x20), mload(var_data_4393_mpos), /** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 14:1550:1690  \"if (success) emit ExecutionSuccess(to, value, data, operation, txGas);...\"\n                switch var_success\n                case 0 {\n                    /// @src 14:1639:1690  \"ExecutionFailure(to, value, data, operation, txGas)\"\n                    let _1 := packed_hashed_bytes_to_bytes(var_data_4393_mpos)\n                    let _2 := /** @src 12:1413:33642  \"contract SmartAccount is...\" */ mload(64)\n                    /// @src 14:1639:1690  \"ExecutionFailure(to, value, data, operation, txGas)\"\n                    log4(_2, sub(abi_encode_enum_Operation_uint256(_2, var_operation, var_txGas), _2), 0x3ddd038f78c876172d5dbfd730b14c9f8692dfa197ef104eaac6df3f85a0874a, /** @src 12:1413:33642  \"contract SmartAccount is...\" */ and(/** @src 14:1639:1690  \"ExecutionFailure(to, value, data, operation, txGas)\" */ var_to, /** @src 12:1413:33642  \"contract SmartAccount is...\" */ sub(shl(160, 1), 1)), /** @src 14:1639:1690  \"ExecutionFailure(to, value, data, operation, txGas)\" */ var_value, _1)\n                }\n                default /// @src 14:1550:1690  \"if (success) emit ExecutionSuccess(to, value, data, operation, txGas);...\"\n                {\n                    /// @src 14:1568:1619  \"ExecutionSuccess(to, value, data, operation, txGas)\"\n                    let _3 := packed_hashed_bytes_to_bytes(var_data_4393_mpos)\n                    let _4 := /** @src 12:1413:33642  \"contract SmartAccount is...\" */ mload(64)\n                    /// @src 14:1568:1619  \"ExecutionSuccess(to, value, data, operation, txGas)\"\n                    log4(_4, sub(abi_encode_enum_Operation_uint256(_4, var_operation, var_txGas), _4), 0x81d12fffced46c214dfae8ab8fa0b9f7b69f70c9d500e33f612f2105deb261ee, /** @src 12:1413:33642  \"contract SmartAccount is...\" */ and(/** @src 14:1568:1619  \"ExecutionSuccess(to, value, data, operation, txGas)\" */ var_to, /** @src 12:1413:33642  \"contract SmartAccount is...\" */ sub(shl(160, 1), 1)), /** @src 14:1568:1619  \"ExecutionSuccess(to, value, data, operation, txGas)\" */ var_value, _3)\n                }\n            }\n            /// @ast-id 4462 @src 15:989:2007  \"fallback() external {...\"\n            function fun_()\n            {\n                /// @src 15:1129:2001  \"assembly {...\"\n                let usr$handler := sload(/** @src 15:731:797  \"0x6c9a6c4a39284e37ed1cf53d337577d14212a4870fb976a4366c693b939918d4\" */ 0x6c9a6c4a39284e37ed1cf53d337577d14212a4870fb976a4366c693b939918d4)\n                /// @src 15:1129:2001  \"assembly {...\"\n                if iszero(usr$handler) { return(0, 0) }\n                let _1 := 0\n                calldatacopy(_1, _1, calldatasize())\n                mstore(calldatasize(), shl(96, caller()))\n                let usr$success := call(gas(), usr$handler, _1, _1, add(calldatasize(), 20), _1, _1)\n                returndatacopy(_1, _1, returndatasize())\n                if iszero(usr$success) { revert(_1, returndatasize()) }\n                return(_1, returndatasize())\n            }\n            /// @ast-id 4512 @src 15:2875:3175  \"function _setFallbackHandler(address handler) internal {...\"\n            function fun_setFallbackHandler(var_handler)\n            {\n                /// @src 15:2940:2995  \"if (handler == address(0)) revert HandlerCannotBeZero()\"\n                if /** @src 15:2944:2965  \"handler == address(0)\" */ iszero(/** @src 12:1413:33642  \"contract SmartAccount is...\" */ and(/** @src 15:2944:2965  \"handler == address(0)\" */ var_handler, /** @src 12:1413:33642  \"contract SmartAccount is...\" */ sub(shl(160, 1), 1)))\n                /// @src 15:2940:2995  \"if (handler == address(0)) revert HandlerCannotBeZero()\"\n                {\n                    /// @src 15:2974:2995  \"HandlerCannotBeZero()\"\n                    let _1 := /** @src 12:1413:33642  \"contract SmartAccount is...\" */ mload(64)\n                    /// @src 15:2974:2995  \"HandlerCannotBeZero()\"\n                    mstore(_1, shl(224, 0xdd449f5f))\n                    revert(_1, 4)\n                }\n                /// @src 15:3115:3169  \"assembly {...\"\n                sstore(/** @src 15:731:797  \"0x6c9a6c4a39284e37ed1cf53d337577d14212a4870fb976a4366c693b939918d4\" */ 0x6c9a6c4a39284e37ed1cf53d337577d14212a4870fb976a4366c693b939918d4, /** @src 15:3115:3169  \"assembly {...\" */ var_handler)\n            }\n            /// @src 12:1413:33642  \"contract SmartAccount is...\"\n            function array_allocation_size_array_address_dyn(length) -> size\n            {\n                if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n                size := add(shl(5, length), 0x20)\n            }\n            /// @src 16:514:526  \"address(0x1)\"\n            function memory_array_index_access_address_dyn(baseRef, index) -> addr\n            {\n                if iszero(lt(index, /** @src 12:1413:33642  \"contract SmartAccount is...\" */ mload(/** @src 16:514:526  \"address(0x1)\" */ baseRef))) { panic_error_0x32() }\n                addr := add(add(baseRef, shl(5, index)), 32)\n            }\n            /// @src 12:1413:33642  \"contract SmartAccount is...\"\n            function abi_encode_address_address_address(headStart, value0, value1, value2) -> tail\n            {\n                tail := add(headStart, 96)\n                let _1 := sub(shl(160, 1), 1)\n                mstore(headStart, and(value0, _1))\n                mstore(add(headStart, 32), and(value1, _1))\n                mstore(add(headStart, 64), and(value2, _1))\n            }\n            function update_storage_value_address_to_address(slot)\n            {\n                sstore(slot, and(sload(slot), shl(160, 0xffffffffffffffffffffffff)))\n            }\n            /// @ast-id 4820 @src 16:4103:4816  \"function execTransactionFromModule(...\"\n            function fun_execTransactionFromModule(var_to, var_value, var_data_4758_mpos, var_operation) -> var_success\n            {\n                /// @src 16:4349:4416  \"msg.sender == SENTINEL_MODULES || modules[msg.sender] == address(0)\"\n                let expr := /** @src 16:4349:4379  \"msg.sender == SENTINEL_MODULES\" */ eq(/** @src 16:4349:4359  \"msg.sender\" */ caller(), /** @src 16:522:525  \"0x1\" */ 0x01)\n                /// @src 16:4349:4416  \"msg.sender == SENTINEL_MODULES || modules[msg.sender] == address(0)\"\n                if iszero(expr)\n                {\n                    expr := /** @src 16:4383:4416  \"modules[msg.sender] == address(0)\" */ iszero(/** @src 12:1413:33642  \"contract SmartAccount is...\" */ and(sload(/** @src 16:4383:4402  \"modules[msg.sender]\" */ mapping_index_access_mapping_address_address_of_address_13223(/** @src 16:4349:4359  \"msg.sender\" */ caller())), /** @src 12:1413:33642  \"contract SmartAccount is...\" */ sub(shl(160, 1), 1)))\n                }\n                /// @src 16:4345:4465  \"if (msg.sender == SENTINEL_MODULES || modules[msg.sender] == address(0))...\"\n                if expr\n                {\n                    /// @src 16:4437:4465  \"ModuleNotEnabled(msg.sender)\"\n                    let _1 := /** @src 12:1413:33642  \"contract SmartAccount is...\" */ mload(64)\n                    /// @src 16:4437:4465  \"ModuleNotEnabled(msg.sender)\"\n                    mstore(_1, shl(224, 0x21ac7c5f))\n                    /// @src 12:1413:33642  \"contract SmartAccount is...\"\n                    mstore(/** @src 16:4437:4465  \"ModuleNotEnabled(msg.sender)\" */ add(_1, 4), /** @src 16:4349:4359  \"msg.sender\" */ caller())\n                    /// @src 16:4437:4465  \"ModuleNotEnabled(msg.sender)\"\n                    revert(_1, /** @src 12:1413:33642  \"contract SmartAccount is...\" */ 36)\n                }\n                /// @src 16:4537:4593  \"success = execute(to, value, data, operation, gasleft())\"\n                var_success := /** @src 16:4547:4593  \"execute(to, value, data, operation, gasleft())\" */ fun_execute(var_to, var_value, var_data_4758_mpos, var_operation, /** @src 16:4583:4592  \"gasleft()\" */ gas())\n                /// @src 16:4603:4809  \"if (success) {...\"\n                switch var_success\n                case 0 {\n                    /// @src 16:4771:4809  \"ExecutionFromModuleFailure(msg.sender)\"\n                    log2(0, 0, 0xacd2c8702804128fdb0db2bb49f6d127dd0181c13fd45dbfe16de0930e2bd375, /** @src 16:4349:4359  \"msg.sender\" */ caller())\n                }\n                default /// @src 16:4603:4809  \"if (success) {...\"\n                {\n                    /// @src 16:4635:4692  \"ModuleTransaction(msg.sender, to, value, data, operation)\"\n                    let _2 := /** @src 12:1413:33642  \"contract SmartAccount is...\" */ mload(64)\n                    mstore(_2, /** @src 16:4349:4359  \"msg.sender\" */ caller())\n                    /// @src 12:1413:33642  \"contract SmartAccount is...\"\n                    mstore(add(_2, 32), and(var_to, sub(shl(160, 1), 1)))\n                    mstore(add(_2, 64), var_value)\n                    mstore(add(_2, 96), 160)\n                    let tail := abi_encode_bytes_to_bytes(var_data_4758_mpos, add(_2, 160))\n                    abi_encode_enum_Operation(var_operation, add(_2, 128))\n                    /// @src 16:4635:4692  \"ModuleTransaction(msg.sender, to, value, data, operation)\"\n                    log1(_2, sub(tail, _2), 0x8c014e41cffd68ba64f3e7830b8b2e4ee860509d8deab25ebbcbba2f0405e2da)\n                    /// @src 16:4711:4749  \"ExecutionFromModuleSuccess(msg.sender)\"\n                    log2(/** @src -1:-1:-1 */ 0, 0, /** @src 16:4711:4749  \"ExecutionFromModuleSuccess(msg.sender)\" */ 0x6895c13664aa4f67288b25d7a21d7aaa34916e355fb9b6fae0a139a9085becb8, /** @src 16:4349:4359  \"msg.sender\" */ caller())\n                }\n            }\n            /// @ast-id 4919 @src 16:6707:7171  \"function _setupModules(address to, bytes memory data) internal {...\"\n            function fun_setupModules()\n            {\n                /// @src 12:1413:33642  \"contract SmartAccount is...\"\n                mstore(0, /** @src 16:522:525  \"0x1\" */ 0x01)\n                /// @src 12:1413:33642  \"contract SmartAccount is...\"\n                mstore(0x20, 0)\n                /// @src 16:6780:6871  \"if (modules[SENTINEL_MODULES] != address(0))...\"\n                if /** @src 16:6784:6823  \"modules[SENTINEL_MODULES] != address(0)\" */ iszero(iszero(/** @src 12:1413:33642  \"contract SmartAccount is...\" */ and(sload(keccak256(0, 0x40)), sub(shl(160, 1), 1))))\n                /// @src 16:6780:6871  \"if (modules[SENTINEL_MODULES] != address(0))...\"\n                {\n                    /// @src 16:6844:6871  \"ModulesAlreadyInitialized()\"\n                    let _1 := /** @src 12:1413:33642  \"contract SmartAccount is...\" */ mload(0x40)\n                    /// @src 16:6844:6871  \"ModulesAlreadyInitialized()\"\n                    mstore(_1, shl(224, 0xdf8cc4e3))\n                    revert(_1, 4)\n                }\n                /// @src 16:6881:6906  \"modules[SENTINEL_MODULES]\"\n                let _2 := mapping_index_access_mapping_address_address_of_address_13224()\n                /// @src 12:1413:33642  \"contract SmartAccount is...\"\n                sstore(_2, or(and(sload(_2), shl(160, 0xffffffffffffffffffffffff)), /** @src 16:522:525  \"0x1\" */ 0x01))\n            }\n            /// @src 12:1413:33642  \"contract SmartAccount is...\"\n            function require_helper_stringliteral_670c(condition)\n            {\n                if iszero(condition)\n                {\n                    let memPtr := mload(64)\n                    mstore(memPtr, shl(229, 4594637))\n                    mstore(add(memPtr, 4), 32)\n                    mstore(add(memPtr, 36), 28)\n                    mstore(add(memPtr, 68), \"token contract doesn't exist\")\n                    revert(memPtr, 100)\n                }\n            }\n            function abi_encode_address_uint256(headStart, value0, value1) -> tail\n            {\n                tail := add(headStart, 64)\n                mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n                mstore(add(headStart, 32), value1)\n            }\n            /// @ast-id 5224 @src 20:428:1678  \"function transferToken(...\"\n            function fun_transferToken(var_token, var_receiver, var_amount) -> var_transferred\n            {\n                /// @src 12:1413:33642  \"contract SmartAccount is...\"\n                if /** @src 20:584:603  \"token != address(0)\" */ iszero(/** @src 12:1413:33642  \"contract SmartAccount is...\" */ and(/** @src 20:584:603  \"token != address(0)\" */ var_token, /** @src 12:1413:33642  \"contract SmartAccount is...\" */ sub(shl(160, 1), 1)))\n                {\n                    let memPtr := mload(64)\n                    mstore(memPtr, shl(229, 4594637))\n                    mstore(add(memPtr, 4), 32)\n                    mstore(add(memPtr, 36), 29)\n                    mstore(add(memPtr, 68), \"token can not be zero address\")\n                    revert(memPtr, 100)\n                }\n                /// @src 20:647:709  \"require(token.code.length > 0, \\\"token contract doesn't exist\\\")\"\n                require_helper_stringliteral_670c(/** @src 20:655:676  \"token.code.length > 0\" */ iszero(iszero(/** @src 20:655:672  \"token.code.length\" */ extcodesize(var_token))))\n                /// @src 20:800:898  \"abi.encodeWithSelector(...\"\n                let expr_5220_mpos := /** @src 12:1413:33642  \"contract SmartAccount is...\" */ mload(64)\n                /// @src 20:800:898  \"abi.encodeWithSelector(...\"\n                let _1 := add(expr_5220_mpos, 0x20)\n                mstore(_1, /** @src 12:1413:33642  \"contract SmartAccount is...\" */ shl(224, 0xa9059cbb))\n                /// @src 20:800:898  \"abi.encodeWithSelector(...\"\n                let _2 := sub(abi_encode_address_uint256(add(expr_5220_mpos, 36), var_receiver, var_amount), expr_5220_mpos)\n                mstore(expr_5220_mpos, add(_2, /** @src 12:1413:33642  \"contract SmartAccount is...\" */ not(31)))\n                /// @src 20:800:898  \"abi.encodeWithSelector(...\"\n                finalize_allocation(expr_5220_mpos, _2)\n                /// @src 20:964:1672  \"assembly {...\"\n                let usr$success := call(add(gas(), not(9999)), var_token, /** @src 20:601:602  \"0\" */ 0x00, /** @src 20:964:1672  \"assembly {...\" */ _1, mload(expr_5220_mpos), /** @src 20:601:602  \"0\" */ 0x00, /** @src 20:800:898  \"abi.encodeWithSelector(...\" */ 0x20)\n                /// @src 20:964:1672  \"assembly {...\"\n                switch returndatasize()\n                case 0 {\n                    var_transferred := usr$success\n                }\n                case 0x20 {\n                    var_transferred := iszero(or(iszero(usr$success), iszero(mload(/** @src 20:601:602  \"0\" */ 0x00))))\n                }\n                default /// @src 20:964:1672  \"assembly {...\"\n                {\n                    var_transferred := /** @src 20:601:602  \"0\" */ 0x00\n                }\n            }\n            /// @ast-id 5249 @src 21:256:380  \"function requireSelfCall() private view {...\"\n            function fun_requireSelfCall()\n            {\n                /// @src 21:306:373  \"if (msg.sender != address(this)) revert CallerIsNotSelf(msg.sender)\"\n                if /** @src 21:310:337  \"msg.sender != address(this)\" */ iszero(eq(/** @src 21:310:320  \"msg.sender\" */ caller(), /** @src 21:332:336  \"this\" */ address()))\n                /// @src 21:306:373  \"if (msg.sender != address(this)) revert CallerIsNotSelf(msg.sender)\"\n                {\n                    /// @src 21:346:373  \"CallerIsNotSelf(msg.sender)\"\n                    let _1 := /** @src 12:1413:33642  \"contract SmartAccount is...\" */ mload(64)\n                    /// @src 21:346:373  \"CallerIsNotSelf(msg.sender)\"\n                    mstore(_1, shl(226, 0x01478e33))\n                    /// @src 12:1413:33642  \"contract SmartAccount is...\"\n                    mstore(/** @src 21:346:373  \"CallerIsNotSelf(msg.sender)\" */ add(_1, 4), /** @src 21:310:320  \"msg.sender\" */ caller())\n                    /// @src 21:346:373  \"CallerIsNotSelf(msg.sender)\"\n                    revert(_1, /** @src 12:1413:33642  \"contract SmartAccount is...\" */ 36)\n                }\n            }\n            /// @ast-id 5274 @src 22:309:1088  \"function signatureSplit(...\"\n            function fun_signatureSplit(var_signature_5263_mpos) -> var_v, var_r, var_s\n            {\n                /// @src 22:649:1082  \"assembly {...\"\n                var_r := mload(add(var_signature_5263_mpos, 0x20))\n                var_s := mload(add(var_signature_5263_mpos, 0x40))\n                var_v := and(mload(add(var_signature_5263_mpos, 0x41)), 0xff)\n            }\n            /// @ast-id 5586 @src 31:413:517  \"function max(uint256 a, uint256 b) internal pure returns (uint256) {...\"\n            function fun_max(var_a, var_b) -> var\n            {\n                /// @src 31:497:510  \"a > b ? a : b\"\n                let expr := /** @src -1:-1:-1 */ 0\n                /// @src 31:497:510  \"a > b ? a : b\"\n                switch /** @src 31:497:502  \"a > b\" */ gt(var_a, var_b)\n                case /** @src 31:497:510  \"a > b ? a : b\" */ 0 { expr := var_b }\n                default { expr := var_a }\n                /// @src 31:490:510  \"return a > b ? a : b\"\n                var := expr\n            }\n        }\n        data \".metadata\" hex\"a2646970667358221220b13c895173c9eeeda332159499ddee8c583488da403b280575becda6e92b462c64736f6c63430008110033\"\n    }\n}\n","hash":"010009f3e3f9d25fe9f120e33b016bd0ab7282d3fad14286e9536fb1f2f963db","factoryDependencies":{}}},"contracts/smart-contract-wallet/SmartAccountFactory.sol":{"SmartAccountFactory":{"abi":[{"inputs":[{"internalType":"address","name":"_basicImplementation","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"uint256","name":"index","type":"uint256"}],"name":"AccountCreation","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"owner","type":"address"}],"name":"AccountCreationWithoutIndex","type":"event"},{"inputs":[],"name":"accountCreationCode","outputs":[{"internalType":"bytes","name":"","type":"bytes"}],"stateMutability":"pure","type":"function"},{"inputs":[],"name":"basicImplementation","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_owner","type":"address"}],"name":"deployAccount","outputs":[{"internalType":"address","name":"proxy","type":"address"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_owner","type":"address"},{"internalType":"uint256","name":"_index","type":"uint256"}],"name":"deployCounterFactualAccount","outputs":[{"internalType":"address","name":"proxy","type":"address"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_owner","type":"address"},{"internalType":"uint256","name":"_index","type":"uint256"}],"name":"getAddressForCounterFactualAccount","outputs":[{"internalType":"address","name":"_account","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"minimalHandler","outputs":[{"internalType":"contract DefaultCallbackHandler","name":"","type":"address"}],"stateMutability":"view","type":"function"}],"metadata":{"optimizer_settings":"M3B3","solc_metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_basicImplementation\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"AccountCreation\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"AccountCreationWithoutIndex\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"accountCreationCode\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"basicImplementation\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"deployAccount\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"proxy\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_index\",\"type\":\"uint256\"}],\"name\":\"deployCounterFactualAccount\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"proxy\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_index\",\"type\":\"uint256\"}],\"name\":\"getAddressForCounterFactualAccount\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"_account\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"minimalHandler\",\"outputs\":[{\"internalType\":\"contract DefaultCallbackHandler\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Chirag Titiya - <chirag@biconomy.io>\",\"details\":\"It deploys Smart Accounts as proxies pointing to `basicImplementation` that is immutable.      This allows keeping the same address for the same Smart Account owner on various chains via CREATE2\",\"kind\":\"dev\",\"methods\":{\"accountCreationCode()\":{\"details\":\"Allows to retrieve the creation code used for the Proxy deployment.\",\"returns\":{\"_0\":\"The creation code for the Proxy.\"}},\"deployAccount(address)\":{\"params\":{\"_owner\":\"EOA signatory for the account to be deployed\"},\"returns\":{\"proxy\":\"address of the deployed account\"}},\"deployCounterFactualAccount(address,uint256)\":{\"params\":{\"_index\":\"extra salt that allows to deploy more account if needed for same EOA (default 0)\",\"_owner\":\"EOA signatory for the account to be deployed\"}},\"getAddressForCounterFactualAccount(address,uint256)\":{\"params\":{\"_index\":\"extra salt that allows to deploy more accounts if needed for same EOA (default 0)\",\"_owner\":\"EOA signatory for the account to be deployed\"}}},\"title\":\"Smart Account Factory - factory responsible for deploying Smart Accounts using CREATE2 and CREATE\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"deployAccount(address)\":{\"notice\":\"Deploys account using create and points it to _implementation\"},\"deployCounterFactualAccount(address,uint256)\":{\"notice\":\"Deploys account using create2 and points it to basicImplementation\"},\"getAddressForCounterFactualAccount(address,uint256)\":{\"notice\":\"Allows to find out account address prior to deployment\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/smart-contract-wallet/SmartAccountFactory.sol\":\"SmartAccountFactory\"},\"evmVersion\":\"london\",\"libraries\":{\":__CACHE_BREAKER__\":\"0x00000000d41867734bbee4c6863d9255b2b06ac1\"},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@account-abstraction/contracts/core/Helpers.sol\":{\"keccak256\":\"0x591c87519f7155d1909210276b77925ab2722a99b7b5d5649aecc36ebbdb045a\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://69643e83f68e6a13d5075c7565bfce326673b0bd98c432033c4603ea84835746\",\"dweb:/ipfs/QmSwSzjYyV7qudi5vvsmzHMG2Z4YJZxX51RRXXVCLaNcEU\"]},\"@account-abstraction/contracts/interfaces/IAccount.sol\":{\"keccak256\":\"0x556a0e5980de18e90b115553ed502408155ba35f58642823010d9288047bc418\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://a0f420134b79596db8737173c7b933ae0a33059e107b6327c43aa40d4744a9e4\",\"dweb:/ipfs/QmRo8s1AhXmEMV7uPYnbpYwU19e9Bk6jmYBJTiPx3Fo85W\"]},\"@account-abstraction/contracts/interfaces/IAggregator.sol\":{\"keccak256\":\"0x060e9ddb0152250c269ba0640dc5753834ac44cf182a2837d508c0c529cae26a\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://20ed837bc5909c89ff1910246bf245a5dad6840aa939382e1694964eb7dbd37b\",\"dweb:/ipfs/QmTMybRq5yyghPDDs1ZCNAVB9sSJ4WHe6Q9mejuKPTAdNP\"]},\"@account-abstraction/contracts/interfaces/IEntryPoint.sol\":{\"keccak256\":\"0x3a90bf308819ed125fa4202f880999caff8a8686633b8ddb79a30ca240d5b8f8\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://d2d21cc92c2fdab2b58d21bc25d4cd0e8c284b922528a186b087b818d54bc6cf\",\"dweb:/ipfs/QmT1qrfuBjsv2rmRCDn8mgPXHp94hARJwzbcDuBLDTbFWd\"]},\"@account-abstraction/contracts/interfaces/INonceManager.sol\":{\"keccak256\":\"0x509871e6c63663cdcc3eba19920fe84e991f38b289b1377ac3c3a6d9f22d7e12\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://00fe21b4349b24c50df60e1a705179293982bd9e7a32b78d4bac9620f89e7fe2\",\"dweb:/ipfs/QmSFFYGfUwQbVa6hASjU7YxTvgi2HkfrPr4X5oPHscHg8b\"]},\"@account-abstraction/contracts/interfaces/IStakeManager.sol\":{\"keccak256\":\"0xd227b02888cd4ac68daebcdfd992ec00f9fff66fa3b3bb16f656cd582fa3480f\",\"license\":\"GPL-3.0-only\",\"urls\":[\"bzz-raw://b389da4714a138be63704a576a482505eab2855e263b38a93706395d8d42e7c3\",\"dweb:/ipfs/QmeeAZpdHwUXxqP8pxA7GNtoCGBmmH4FaqLLwScVKGxtxZ\"]},\"@account-abstraction/contracts/interfaces/UserOperation.sol\":{\"keccak256\":\"0x61374003361059087fdcf17967a7bba052badeaf5c7f0ae689166f8aafd3a45c\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://6ff83c59432e733bf6304dda27cd4b0f34401917dd535e2669cc842d2d26568c\",\"dweb:/ipfs/QmPJbHU5TAjHqUTZzAcicEeG2nknmwCN43L4EW9LHbknTN\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0xa4d1d62251f8574deb032a35fc948386a9b4de74b812d4f545a1ac120486b48a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8c969013129ba9e651a20735ef659fef6d8a1139ea3607bd4b26ddea2d645634\",\"dweb:/ipfs/QmVhVa6LGuzAcB8qgDtVHRkucn4ihj5UZr8xBLcJkP6ucb\"]},\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0xda898fa084aa1ddfdb346e6a40459e00a59d87071cce7c315a46d648dd71d0ba\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ce501a941f4aa1555c04dabb5e07992503bb6a9b32ff8f7cdcefdb4a742210cb\",\"dweb:/ipfs/QmeScPrUpdrGYs9BytV3Z5ZWJcBXtuAgCW4BLHua4xFUxx\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa1e8e83cd0087785df04ac79fb395d9f3684caeaf973d9e2c71caef723a3a5d6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://33bbf48cc069be677705037ba7520c22b1b622c23b33e1a71495f2d36549d40b\",\"dweb:/ipfs/Qmct36zWXv3j7LZB83uwbg7TXwnZSN1fqHNDZ93GG98bGz\"]},\"contracts/smart-contract-wallet/BaseSmartAccount.sol\":{\"keccak256\":\"0x59fbea0d532f8a11c3114613791e96e5412d109d78bdc39e46ad039aa8be6f5b\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://3b816aca2894404864952b8d180fa993d36abe08b0d587d6e7f236eb586444a4\",\"dweb:/ipfs/Qmb3fM6woAdtjDoTkAXC6bbcpfmp3Z3p7Kk3Cg919WQzH3\"]},\"contracts/smart-contract-wallet/Proxy.sol\":{\"keccak256\":\"0x90f1f586b929825cbda2d743080fafc42fb5ef478a3d44ae60bb2803a9a46705\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://433c8e9766083a74ac6768dbef3b32365363e346b5d3431563819bdf72f0b62d\",\"dweb:/ipfs/QmcqrZpoHUMCmEcznCvDNEir17Eb8WVvYuGUpYvNE2UTSR\"]},\"contracts/smart-contract-wallet/SmartAccount.sol\":{\"keccak256\":\"0x823cc4ebcb0ecabad0c933362293d938d218fc87051ff71250617aa55b978500\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a986065f9b39d736e00c6540bd227025671d00e31802032780f51026756da578\",\"dweb:/ipfs/QmZ3CYv1V2dozmwMs5isWvE1W1VxCAHQvnfoF984nzJn4q\"]},\"contracts/smart-contract-wallet/SmartAccountFactory.sol\":{\"keccak256\":\"0x9b65bec90d675602b23cbca129c9ba30e7653443a262a0922be1930b0cbffcc5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://03cec40112569ac1dbf555942ed09b097b3a23111007ae9c5323cb62a56fd03b\",\"dweb:/ipfs/QmbTnew1zW2bK5RyG2PRmYaBt2q2grFJABiAEGADFnVzng\"]},\"contracts/smart-contract-wallet/base/Executor.sol\":{\"keccak256\":\"0x578ee56ff18e80fbf5ae28644ddc47f6a480e906d676caca3b43df89ef425647\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://a038b142793c435c9b3a349c808a4d7c8c934a57d82c32384c36501c5069891f\",\"dweb:/ipfs/QmQUUJcbjTjeJQFjFVk6D6a3EtVbkwEsRHmRVcc1FJmuRr\"]},\"contracts/smart-contract-wallet/base/FallbackManager.sol\":{\"keccak256\":\"0xe3b6dbcfb3bfa65dba011674892778d1578d40421d0ed7700e1ac2582541954e\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://479d9add893ed5b96c9be32d2fceec345fbe60ca03b3a26ffd7fe91afaafb678\",\"dweb:/ipfs/QmWmVeiLU19Bk3s5R57oDMZibRNsB8tb279kRx1JrAHsCh\"]},\"contracts/smart-contract-wallet/base/ModuleManager.sol\":{\"keccak256\":\"0x98210b7ffe719d9873fb24ef89cbbbc58729412f4e9285bae09e9c205731a665\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://f58685b75663559e39d5980238b9b25c2bd299050e66e47b50266e2dce6738ae\",\"dweb:/ipfs/QmZV3vZ9X1Nt96ty12Vy54n818w2Fafs5gkhkgxQotZxF5\"]},\"contracts/smart-contract-wallet/common/Enum.sol\":{\"keccak256\":\"0x657464511d99c53126e008910b266875b299d6e328e105203cb53b6f467acdac\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://d31ced2b537c575f21e5d78989076ce76df8befb276d75c79cf64e44031ae527\",\"dweb:/ipfs/QmNh5E4sTYkphUs8P4rZ8WCQUkWZmjwAAyPzSr612rEs8C\"]},\"contracts/smart-contract-wallet/common/Errors.sol\":{\"keccak256\":\"0xef2989dcfc2aedddfd76865faa371b7cfb1e4e40592cc31d6d4151914f1a6aaa\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://8248d7e170d8ff5d67e62c2e0528e3700dfdc3f08eb6fa8a2a6d7c3c5fafee76\",\"dweb:/ipfs/QmbEpeNpBqHbu4Gx2nwGweynRJRoe5NdGCZZ64TPxRdn3X\"]},\"contracts/smart-contract-wallet/common/ReentrancyGuard.sol\":{\"keccak256\":\"0x399687cf8c0703996a34d63ccf3c5ef19471aa3b02fcbae6cd6ac5c839ae7b1b\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://406c6236f2c8e80ebd75306449ad99bc0e47b26200d0a9e68b8a72a69eeb12e8\",\"dweb:/ipfs/QmSuw7b1T5ttyQQ1qioV2vLpKGY9HGBnPJNmwZEgBUL8jp\"]},\"contracts/smart-contract-wallet/common/SecuredTokenTransfer.sol\":{\"keccak256\":\"0x53c6c0faaba3c0a3abe6aecd08b7bfbf530246930f52ef6642394040a09d8dae\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://e62c706474f89b74d95fde23921bbb7d9017f6a54ad1297731c58424eba3a23e\",\"dweb:/ipfs/QmXF8uAVt6x6E1P1LUG8e15WpLYznfxAJpGr1BREiUhbMG\"]},\"contracts/smart-contract-wallet/common/SelfAuthorized.sol\":{\"keccak256\":\"0xaff7f31a495e6455b386d215dc8413efb816ca340b7a4254ea1c799766451b2f\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://0cdda0e1a507a8faca7fcbab22324c5a26ddd0be417488de48a86b983b8ceacc\",\"dweb:/ipfs/QmTC2y5o6skp95sStYU86Djetk3HPvTXoZrDMaYFnKuBJG\"]},\"contracts/smart-contract-wallet/common/SignatureDecoder.sol\":{\"keccak256\":\"0x591c6470fc0854467a1ae2ab17977c38de055ba3c4e7f3c9a903dd10997e3d4f\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://a3f0bee474df330369650e186a43ce4437330017a4e0125c7bb614a905dbf783\",\"dweb:/ipfs/QmSYnyHoPBUP3wBfAPp3HDujH7tMZeDMpGJg75nZtgs6Em\"]},\"contracts/smart-contract-wallet/handler/DefaultCallbackHandler.sol\":{\"keccak256\":\"0x2a34a464050818d229545436ff3b647b44f4b71a968b58b653cc5fcc03b858b8\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://f8766721571bb2f724d9c7048096f9272e6c95556fce648fddbeb9a7636e51e1\",\"dweb:/ipfs/QmdXtspM5veCP9LYuicnWeXyyPzpYVihrhe8MqJUJGcmLH\"]},\"contracts/smart-contract-wallet/interfaces/IERC1155TokenReceiver.sol\":{\"keccak256\":\"0x2ab169ad3e2f27a76e05ceda7c7a378084be7669228e3da25fcbcc50ce3f66fb\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://f61fee624ac4c523cd02c825ee836a60cc1b8c08f4f95a7b0c79e45a25e408ec\",\"dweb:/ipfs/QmXxsL3hcS8bWzpCgm4RK6x3TaAiD3fLmNe43Nr7KSMGRY\"]},\"contracts/smart-contract-wallet/interfaces/IERC165.sol\":{\"keccak256\":\"0x03db523eaf7cef6e0513cc29d5014aa2802eb78ebe7280272c01258adecab521\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://ebf25bc7844ee820464be1bb804f2ef75e0d9ce53c9e45a133da82f00f1c9e88\",\"dweb:/ipfs/QmcZrTHuEcimUpmwgSx4sx7SpfY13wN5S2HNDRk4x7qHXt\"]},\"contracts/smart-contract-wallet/interfaces/IERC721TokenReceiver.sol\":{\"keccak256\":\"0x74d1001cd26599c9a8b96e24560f3ad25ca215c0e8d584187e14d7d97b0c1d22\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://4b07e27abcff56cf840677bc176e0eda0d94df7843cb8ba8f27075b6a3dff223\",\"dweb:/ipfs/QmaGQK6ZquqicxyFj8Uj6mHpuM3yB6kXf7Gd2QyKbVFcrK\"]},\"contracts/smart-contract-wallet/interfaces/IERC777TokensRecipient.sol\":{\"keccak256\":\"0x6318922ecf2801e4d68206f240d000f25612ed615c5001cde107708528ffdda9\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://8b78fd6bcfea3f562d3dedc45aff1b0b0b50029e039dafdaaefca254ba23ec6e\",\"dweb:/ipfs/QmRtxph2sD5qPenHoPBQ7DU97WFECo2b2b3thhcP1m6Pxv\"]},\"contracts/smart-contract-wallet/interfaces/IModule.sol\":{\"keccak256\":\"0x541a85fb77cc5294cbbf8239b1aa42e2b675fc126316b58206d1cde32426765b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ff846ad4331c8df2cb995e3e6b07e17b538c228e54df2ec5b5f7c9e7ba9612f\",\"dweb:/ipfs/QmZyuBY2E84RBjABFoGcGYYvG15uD9LMWE9ME3vnwQLmuB\"]},\"contracts/smart-contract-wallet/interfaces/ISignatureValidator.sol\":{\"keccak256\":\"0x99786ee319572532d07ac0da01cb78529b5e76f5f5d99dc607e90893b8326e39\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://f21e5a4e4c017e8efe545f6d1c6d9e2931a60b5f5d04cfea0e779cd55bac4990\",\"dweb:/ipfs/Qmchyq9Mg794PubDEV1JZX91Gz7fK5JKLLCToUhREnqDzG\"]},\"contracts/smart-contract-wallet/libs/LibAddress.sol\":{\"keccak256\":\"0xc002ad1e29166d55aa40f8d034506aa1922cf2e49be798dcbc51f9add2715d81\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a47ef7173ad22cdce729aeffad27b0e7dd2aa6e111c292989828ae04fb352164\",\"dweb:/ipfs/QmSeV8s3q9emK2XH7kYnZfzjpWgr4SbyST9rQTURGUxhYW\"]},\"contracts/smart-contract-wallet/libs/Math.sol\":{\"keccak256\":\"0x4e04d4c68c9940d8ef91fb4b44cefaa0429e7cad784ac1fc819de757da058f73\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://52a9975f411611a8976fbc427b6a7971644b75566cf749243b8a7edad4f892c7\",\"dweb:/ipfs/QmVkvPYeLwFxbPKWWmLjivxTYvaAdU2vd1GNHvV8D5BmZf\"]}},\"version\":1}","zk_version":"1.3.10"},"devdoc":{"author":"Chirag Titiya - <chirag@biconomy.io>","details":"It deploys Smart Accounts as proxies pointing to `basicImplementation` that is immutable.      This allows keeping the same address for the same Smart Account owner on various chains via CREATE2","kind":"dev","methods":{"accountCreationCode()":{"details":"Allows to retrieve the creation code used for the Proxy deployment.","returns":{"_0":"The creation code for the Proxy."}},"deployAccount(address)":{"params":{"_owner":"EOA signatory for the account to be deployed"},"returns":{"proxy":"address of the deployed account"}},"deployCounterFactualAccount(address,uint256)":{"params":{"_index":"extra salt that allows to deploy more account if needed for same EOA (default 0)","_owner":"EOA signatory for the account to be deployed"}},"getAddressForCounterFactualAccount(address,uint256)":{"params":{"_index":"extra salt that allows to deploy more accounts if needed for same EOA (default 0)","_owner":"EOA signatory for the account to be deployed"}}},"title":"Smart Account Factory - factory responsible for deploying Smart Accounts using CREATE2 and CREATE","version":1},"userdoc":{"kind":"user","methods":{"deployAccount(address)":{"notice":"Deploys account using create and points it to _implementation"},"deployCounterFactualAccount(address,uint256)":{"notice":"Deploys account using create2 and points it to basicImplementation"},"getAddressForCounterFactualAccount(address,uint256)":{"notice":"Allows to find out account address prior to deployment"}},"version":1},"storageLayout":{"storage":[],"types":null},"evm":{"legacyAssembly":null,"assembly":"\t.text\n\t.file\t\"SmartAccountFactory.sol:SmartAccountFactory\"\n\t.globl\t__entry\n__entry:\n.func_begin0:\n\tnop\tstack+=[9]\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, r4\n\tptr.add\tr1, r4, stack[@ptr_return_data]\n\tptr.add\tr1, r0, stack[@ptr_calldata]\n\tand\t@CPI0_0[0], r3, stack[@calldatasize]\n\tadd\t0, r0, stack[@returndatasize]\n\tand!\t1, r2, r1\n\tjump.ne\t@.BB0_1\n\tadd\t128, r0, r1\n\tst.1\t64, r1\n\tadd\tstack[@calldatasize], r0, r1\n\tsub.s!\t4, r1, r1\n\tjump.lt\t@.BB0_2\n\tptr.add\tstack[@ptr_calldata], r0, r1\n\tld\tr1, r1\n\tshr.s\t224, r1, r1\n\tsub.s!\t@CPI0_13[0], r1, r2\n\tjump.gt\t@.BB0_29\n\tsub.s!\t@CPI0_17[0], r1, r2\n\tjump.eq\t@.BB0_32\n\tsub.s!\t@CPI0_18[0], r1, r2\n\tjump.eq\t@.BB0_56\n\tsub.s!\t@CPI0_19[0], r1, r1\n\tjump.ne\t@.BB0_2\n\tcontext.get_context_u128\tr1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r0, r1\n\tadd\tstack[@calldatasize], r1, r1\n\tadd\t@CPI0_3[0], r0, r2\n\tsub.s!\t0, r1, r3\n\tadd\t0, r0, r3\n\tadd.lt\tr2, r0, r3\n\tand\t@CPI0_3[0], r1, r1\n\tsub.s!\t0, r1, r4\n\tadd.le\t0, r0, r2\n\tsub.s!\t@CPI0_3[0], r1, r1\n\tadd\tr3, r0, r1\n\tadd.eq\tr2, r0, r1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_2\n\tld.1\t64, r1\n\tadd\tr1, r0, stack-[9]\n\tadd\t@CPI0_20[0], r0, r1\n\tst.2\t0, r1\n\tcontext.code_source\tr1\n\tst.2\t4, r1\n\tadd\t32, r0, r1\n\tst.2\t36, r1\n\tnear_call\tr0, @__system_request, @DEFAULT_UNWIND\n\tand\t@CPI0_4[0], r1, r1\n\tadd\tstack-[9], r0, r3\n\tst.1\tr3, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tsub.s!\t@CPI0_0[0], r3, r2\n\tadd.lt\tr3, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI0_21[0], r1, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_1:\n\tcontext.get_context_u128\tr1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_2\n\tadd\tstack[@calldatasize], r0, r1\n\tadd\t223, r1, r2\n\tsub.s\t32, r0, r3\n\tand\tr2, r3, r2\n\tadd\t@CPI0_1[0], r2, r3\n\tsub.s!\t@CPI0_2[0], r3, r3\n\tjump.gt\t@.BB0_5\n.BB0_4:\n\tadd\t@CPI0_35[0], r0, r1\n\tst.1\t0, r1\n\tadd\t65, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI0_36[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_29:\n\tsub.s!\t@CPI0_14[0], r1, r2\n\tjump.eq\t@.BB0_62\n\tsub.s!\t@CPI0_15[0], r1, r2\n\tjump.eq\t@.BB0_64\n\tsub.s!\t@CPI0_16[0], r1, r1\n\tjump.ne\t@.BB0_2\n\tcontext.get_context_u128\tr1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r0, r1\n\tadd\tstack[@calldatasize], r1, r1\n\tadd\t@CPI0_3[0], r0, r2\n\tsub.s!\t0, r1, r3\n\tadd\t0, r0, r3\n\tadd.lt\tr2, r0, r3\n\tand\t@CPI0_3[0], r1, r1\n\tsub.s!\t0, r1, r4\n\tadd.le\t0, r0, r2\n\tsub.s!\t@CPI0_3[0], r1, r1\n\tadd\tr3, r0, r1\n\tadd.eq\tr2, r0, r1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_2\n\tld.1\t64, r1\n\tadd\tr1, r0, stack-[9]\n\tadd\t@CPI0_20[0], r0, r1\n\tst.2\t0, r1\n\tcontext.code_source\tr1\n\tst.2\t4, r1\n\tst.2\t36, r0\n\tnear_call\tr0, @__system_request, @DEFAULT_UNWIND\n\tand\t@CPI0_4[0], r1, r1\n\tadd\tstack-[9], r0, r3\n\tst.1\tr3, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tsub.s!\t@CPI0_0[0], r3, r2\n\tadd.lt\tr3, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI0_21[0], r1, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_5:\n\tst.1\t64, r2\n\tand\t31, r1, r2\n\tptr.add\tstack[@ptr_calldata], r0, r3\n\tshr.s!\t5, r1, r4\n\tjump.eq\t@.BB0_89\n\tadd\tr0, r0, r5\n.BB0_7:\n\tshl.s\t5, r5, r6\n\tptr.add\tr3, r6, r7\n\tld\tr7, r7\n\tadd\t192, r6, r6\n\tst.1\tr6, r7\n\tadd\t1, r5, r5\n\tsub!\tr5, r4, r6\n\tjump.lt\t@.BB0_7\n.BB0_89:\n\tsub.s!\t0, r2, r5\n\tjump.eq\t@.BB0_9\n\tshl.s\t5, r4, r4\n\tptr.add\tr3, r4, r3\n\tshl.s\t3, r2, r2\n\tadd\t192, r4, r4\n\tld.1\tr4, r5\n\tshl\tr5, r2, r5\n\tshr\tr5, r2, r5\n\tld\tr3, r3\n\tsub\t256, r2, r2\n\tshr\tr3, r2, r3\n\tshl\tr3, r2, r2\n\tor\tr2, r5, r2\n\tst.1\tr4, r2\n.BB0_9:\n\tadd\t@CPI0_3[0], r0, r2\n\tsub.s!\t32, r1, r3\n\tadd\t0, r0, r3\n\tadd.lt\tr2, r0, r3\n\tand\t@CPI0_3[0], r1, r1\n\tsub.s!\t0, r1, r4\n\tadd.le\t0, r0, r2\n\tsub.s!\t@CPI0_3[0], r1, r1\n\tadd\tr3, r0, r1\n\tadd.eq\tr2, r0, r1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_2\n\tld.1\t192, r1\n\tsub.s!\t@CPI0_4[0], r1, r2\n\tjump.gt\t@.BB0_2\n\tsub.s!\t0, r1, r2\n\tjump.ne\t@.BB0_13\n\tld.1\t64, r1\n\tadd\t68, r1, r2\n\tadd\t@CPI0_10[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t29, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI0_11[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI0_0[0], r0, r2\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI0_12[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_32:\n\tcontext.get_context_u128\tr1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r0, r1\n\tadd\tstack[@calldatasize], r1, r1\n\tadd\t@CPI0_3[0], r0, r2\n\tsub.s!\t64, r1, r3\n\tadd\t0, r0, r3\n\tadd.lt\tr2, r0, r3\n\tand\t@CPI0_3[0], r1, r1\n\tsub.s!\t0, r1, r4\n\tadd.le\t0, r0, r2\n\tsub.s!\t@CPI0_3[0], r1, r1\n\tadd\tr3, r0, r1\n\tadd.eq\tr2, r0, r1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_2\n\tptr.add\tstack[@ptr_calldata], r0, r1\n\tptr.add.s\t4, r1, r2\n\tld\tr2, r4\n\tsub.s!\t@CPI0_4[0], r4, r2\n\tjump.gt\t@.BB0_2\n\tptr.add.s\t36, r1, r1\n\tld\tr1, r1\n\tadd\tr1, r0, stack-[7]\n\tld.1\t64, r3\n\tadd\t32, r3, r2\n\tadd\t@CPI0_27[0], r0, r1\n\tadd\tr2, r0, stack-[8]\n\tst.1\tr2, r1\n\tadd\tr3, r0, stack-[9]\n\tadd\t36, r3, r1\n\tst.1\tr1, r4\n\tadd\t@CPI0_20[0], r0, r1\n\tst.2\t0, r1\n\tcontext.code_source\tr1\n\tadd\tr1, r0, stack-[6]\n\tst.2\t4, r1\n\tadd\t32, r0, r1\n\tadd\tr1, r0, stack-[5]\n\tst.2\t36, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_24[0], r1, r1\n\tadd\t32773, r0, r2\n\tadd\tr4, r0, stack-[4]\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tand\t@CPI0_4[0], r1, r1\n\tadd\tstack-[9], r0, r4\n\tadd\t68, r4, r2\n\tst.1\tr2, r1\n\tadd\t68, r0, r1\n\tst.1\tr4, r1\n\tsub.s!\t@CPI0_28[0], r4, r1\n\tjump.gt\t@.BB0_4\n\tadd\t128, r4, r1\n\tst.1\t64, r1\n\tld.1\tr4, r1\n\tadd\t@CPI0_0[0], r0, r2\n\tcontext.gas_left\tr3\n\tsub.s!\t@CPI0_0[0], r3, r4\n\tadd.ge\tr2, r0, r3\n\tsub.s!\t@CPI0_0[0], r1, r4\n\tadd.ge\tr2, r0, r1\n\tadd\tstack-[8], r0, r5\n\tsub.s!\t@CPI0_0[0], r5, r4\n\tadd.lt\tr5, r0, r2\n\tshl.s\t64, r2, r2\n\tshl.s\t96, r1, r1\n\tadd\tr2, r0, stack-[8]\n\tor\tr1, r2, r1\n\tshl.s\t192, r3, r2\n\tor\tr2, r1, r1\n\tor\t@CPI0_26[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r3\n\tld.1\t64, r1\n\tadd\t64, r1, r2\n\tadd\tstack-[7], r0, r4\n\tst.1\tr2, r4\n\tadd\t32, r1, r2\n\tst.1\tr2, r3\n\tadd\t64, r0, r3\n\tst.1\tr1, r3\n\tsub.s!\t@CPI0_31[0], r1, r3\n\tadd\tstack-[9], r0, r4\n\tjump.gt\t@.BB0_4\n\tadd\t96, r1, r3\n\tst.1\t64, r3\n\tadd\t@CPI0_0[0], r0, r3\n\tsub.s!\t@CPI0_0[0], r2, r4\n\tadd.ge\tr3, r0, r2\n\tshl.s\t64, r2, r2\n\tld.1\tr1, r1\n\tsub.s!\t@CPI0_0[0], r1, r4\n\tadd.ge\tr3, r0, r1\n\tshl.s\t96, r1, r1\n\tor\tr1, r2, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r4\n\tadd.ge\tr3, r0, r2\n\tshl.s\t192, r2, r2\n\tor\tr2, r1, r1\n\tor\t@CPI0_26[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tadd\tr1, r0, stack-[3]\n\tld.1\t64, r3\n\tsub.s!\t@CPI0_22[0], r3, r1\n\tadd\tstack-[9], r0, r4\n\tjump.gt\t@.BB0_4\n\tadd\t192, r3, r1\n\tst.1\t64, r1\n\tadd\t68, r3, r1\n\tadd\t@CPI0_23[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t132, r0, r1\n\tadd\tr3, r0, stack-[1]\n\tst.1\tr3, r1\n\tld.1\t64, r1\n\tadd\tr1, r0, stack-[2]\n\tadd\t@CPI0_20[0], r0, r1\n\tst.2\t0, r1\n\tadd\tstack-[6], r0, r1\n\tst.2\t4, r1\n\tst.2\t36, r0\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_24[0], r1, r1\n\tadd\t32773, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tadd\tstack-[9], r0, r2\n\tadd\tstack-[2], r0, r2\n\tadd\t32, r2, r2\n\tld\tr1, r1\n\tand\t@CPI0_4[0], r1, r3\n\tadd\tstack-[1], r0, r7\n\tld.1\tr7, r1\n\tsub.s!\t0, r1, r4\n\tjump.eq\t@.BB0_45\n\tadd\tr0, r0, r4\n.BB0_44:\n\tadd\tr4, r2, r5\n\tadd\t32, r4, r4\n\tadd\tr4, r7, r6\n\tld.1\tr6, r6\n\tst.1\tr5, r6\n\tsub!\tr4, r1, r5\n\tjump.lt\t@.BB0_44\n.BB0_45:\n\tadd\tr1, r2, r4\n\tst.1\tr4, r3\n\tadd\t32, r1, r3\n\tadd\tstack-[2], r0, r4\n\tst.1\tr4, r3\n\tadd\t95, r1, r1\n\tsub.s\t32, r0, r3\n\tand\tr1, r3, r3\n\tadd\tr3, r4, r1\n\tsub!\tr1, r3, r3\n\tadd\t0, r0, r3\n\tadd.lt\t1, r0, r3\n\tsub.s!\t@CPI0_25[0], r1, r4\n\tjump.gt\t@.BB0_4\n\tand!\t1, r3, r3\n\tjump.ne\t@.BB0_4\n\tst.1\t64, r1\n\tadd\tstack-[2], r0, r6\n\tld.1\tr6, r1\n\tcontext.gas_left\tr3\n\tadd\t@CPI0_32[0], r0, r4\n\tst.1\tr2, r4\n\tadd\t132, r6, r4\n\tsub.s\t132, r1, r5\n\tst.1\tr4, r5\n\tadd\t100, r6, r4\n\tadd\t96, r0, r5\n\tst.1\tr4, r5\n\tadd\t36, r6, r4\n\tadd\tstack-[3], r0, r5\n\tst.1\tr4, r5\n\tadd\t@CPI0_0[0], r0, r4\n\tsub.s!\t@CPI0_0[0], r2, r5\n\tadd.ge\tr4, r0, r2\n\tshl.s\t64, r2, r2\n\tsub.s!\t@CPI0_0[0], r1, r5\n\tadd.ge\tr4, r0, r1\n\tshl.s\t96, r1, r1\n\tor\tr1, r2, r1\n\tsub.s!\t@CPI0_0[0], r3, r2\n\tadd\tr4, r0, r2\n\tadd.lt\tr3, r0, r2\n\tshl.s\t192, r2, r2\n\tor\tr2, r1, r1\n\tor\t@CPI0_26[0], r1, r1\n\tadd\t32774, r0, r2\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_47\n\tld\tr1, r2\n\tand!\t@CPI0_4[0], r2, r1\n\tadd\tr1, r0, stack-[6]\n\tjump.eq\t@.BB0_50\n\tadd\tstack-[9], r0, r1\n\tld.1\tr1, r1\n\tsub.s!\t0, r1, r3\n\tadd\tstack-[4], r0, r6\n\tjump.eq\t@.BB0_53\n\tcontext.gas_left\tr3\n\tsub.s!\t4, r2, r4\n\tjump.eq\t@.BB0_53\n\tadd\t@CPI0_0[0], r0, r4\n\tsub.s!\t@CPI0_0[0], r1, r5\n\tadd.ge\tr4, r0, r1\n\tshl.s\t96, r1, r1\n\tadd\tstack-[8], r0, r5\n\tor\tr1, r5, r1\n\tsub.s!\t@CPI0_0[0], r3, r5\n\tadd.ge\tr4, r0, r3\n\tshl.s\t192, r3, r3\n\tor\tr3, r1, r1\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tadd\tstack-[4], r0, r6\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, stack[@returndatasize]\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB0_2\n.BB0_53:\n\tld.1\t64, r1\n\tadd\tr1, r0, stack-[9]\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_26[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t4, r0, r3\n\tadd\t@CPI0_33[0], r0, r4\n\tadd\tstack-[6], r0, r5\n\tadd\tstack-[7], r0, r7\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB0_2\n\tadd\tstack-[6], r0, r1\n\tadd\tstack-[9], r0, r3\n\tst.1\tr3, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tsub.s!\t@CPI0_0[0], r3, r2\n\tadd.lt\tr3, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI0_21[0], r1, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_62:\n\tcontext.get_context_u128\tr1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_2\n\tadd\tstack[@calldatasize], r0, r1\n\tnear_call\tr0, @abi_decode_addresst_uint256, @DEFAULT_UNWIND\n\tadd\tr2, r0, stack-[7]\n\tnear_call\tr0, @fun_getInitializer, @DEFAULT_UNWIND\n\tadd\tr1, r0, stack-[8]\n\tadd\t164, r0, r1\n\tnear_call\tr0, @allocate_memory, @DEFAULT_UNWIND\n\tadd\tr1, r0, stack-[5]\n\tadd\t@CPI0_23[0], r0, r3\n\tadd\t68, r1, r2\n\tst.1\tr2, r3\n\tadd\t132, r0, r2\n\tst.1\tr1, r2\n\tadd\t@CPI0_20[0], r0, r1\n\tld.1\t64, r2\n\tadd\tr2, r0, stack-[9]\n\tst.2\t0, r1\n\tcontext.code_source\tr1\n\tst.2\t4, r1\n\tst.2\t36, r0\n\tnear_call\tr0, @__system_request, @DEFAULT_UNWIND\n\tand\t@CPI0_4[0], r1, r3\n\tadd\tstack-[9], r0, r1\n\tadd\t32, r1, r1\n\tadd\tr1, r0, stack-[6]\n\tadd\tstack-[5], r0, r2\n\tnear_call\tr0, @abi_encode_packed_bytes_uint256, @DEFAULT_UNWIND\n\tadd\tstack-[9], r0, r3\n\tsub\tr1, r3, r2\n\tsub.s\t32, r2, r1\n\tst.1\tr3, r1\n\tadd\tr3, r0, r1\n\tnear_call\tr0, @finalize_allocation, @DEFAULT_UNWIND\n\tadd\tstack-[8], r0, r1\n\tld.1.inc\tr1, r2, r1\n\tnear_call\tr0, @__keccak256, @DEFAULT_UNWIND\n\tld.1\t64, r4\n\tadd\tr4, r0, stack-[5]\n\tadd\t64, r4, r2\n\tadd\tstack-[7], r0, r3\n\tst.1\tr2, r3\n\tadd\t64, r0, r2\n\tst.1.inc\tr4, r2, r2\n\tadd\tr2, r0, stack-[7]\n\tst.1\tr2, r1\n\tadd\t96, r0, r2\n\tadd\tr4, r0, r1\n\tnear_call\tr0, @finalize_allocation, @DEFAULT_UNWIND\n\tadd\tstack-[5], r0, r1\n\tld.1\tr1, r2\n\tadd\tstack-[7], r0, r1\n\tnear_call\tr0, @__keccak256, @DEFAULT_UNWIND\n\tadd\tstack-[9], r0, r2\n\tld.1\tr2, r2\n\tadd\tr1, r0, stack-[9]\n\tadd\tstack-[6], r0, r1\n\tnear_call\tr0, @__keccak256, @DEFAULT_UNWIND\n\tadd\tr1, r0, r3\n\tcontext.this\tr1\n\tadd\tstack-[9], r0, r2\n\tadd\tstack-[8], r0, r4\n\tnear_call\tr0, @bytes_concat_bytes32_bytes32_bytes32_bytes32_bytes, @DEFAULT_UNWIND\n\tld.1.inc\tr1, r2, r1\n\tnear_call\tr0, @__keccak256, @DEFAULT_UNWIND\n\tand\t@CPI0_4[0], r1, r1\n\tld.1\t64, r2\n\tst.1\tr2, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI0_21[0], r1, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_56:\n\tcontext.get_context_u128\tr1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r0, r1\n\tadd\tstack[@calldatasize], r1, r1\n\tadd\t@CPI0_3[0], r0, r2\n\tsub.s!\t0, r1, r3\n\tadd\t0, r0, r3\n\tadd.lt\tr2, r0, r3\n\tand\t@CPI0_3[0], r1, r1\n\tsub.s!\t0, r1, r4\n\tadd.le\t0, r0, r2\n\tsub.s!\t@CPI0_3[0], r1, r1\n\tadd\tr3, r0, r1\n\tadd.eq\tr2, r0, r1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_2\n\tld.1\t64, r1\n\tadd\tr1, r0, stack-[8]\n\tadd\t164, r0, r2\n\tnear_call\tr0, @finalize_allocation, @DEFAULT_UNWIND\n\tadd\tstack-[8], r0, r3\n\tadd\t68, r3, r1\n\tadd\t@CPI0_23[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t132, r0, r1\n\tst.1.inc\tr3, r1, r1\n\tadd\tr3, r0, r4\n\tadd\t32, r0, r2\n\tld.1\t64, r5\n\tadd\tr5, r0, stack-[9]\n\tst.1.inc\tr5, r2, r2\n\tld.1\tr4, r3\n\tadd\tr3, r0, stack-[8]\n\tst.1\tr2, r3\n\tadd\t64, r5, r2\n\tnear_call\tr0, @copy_memory_to_memory_with_cleanup, @DEFAULT_UNWIND\n\tadd\tstack-[8], r0, r1\n\tadd\t95, r1, r1\n\tsub.s\t32, r0, r2\n\tand\tr1, r2, r1\n\tadd\t@CPI0_0[0], r0, r2\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tadd\tstack-[9], r0, r4\n\tsub.s!\t@CPI0_0[0], r4, r3\n\tadd.lt\tr4, r0, r2\n\tshl.s\t64, r2, r2\n\tshl.s\t96, r1, r1\n\tor\tr1, r2, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_64:\n\tcontext.get_context_u128\tr1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r0, r1\n\tadd\tstack[@calldatasize], r1, r1\n\tadd\t@CPI0_3[0], r0, r2\n\tsub.s!\t32, r1, r3\n\tadd\t0, r0, r3\n\tadd.lt\tr2, r0, r3\n\tand\t@CPI0_3[0], r1, r1\n\tsub.s!\t0, r1, r4\n\tadd.le\t0, r0, r2\n\tsub.s!\t@CPI0_3[0], r1, r1\n\tadd\tr3, r0, r1\n\tadd.eq\tr2, r0, r1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_2\n\tadd\t4, r0, r1\n\tptr.add\tstack[@ptr_calldata], r1, r1\n\tld\tr1, r4\n\tsub.s!\t@CPI0_4[0], r4, r1\n\tjump.le\t@.BB0_67\n.BB0_2:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_13:\n\tst.1\t128, r1\n\tld.1\t64, r1\n\tsub.s!\t@CPI0_5[0], r1, r2\n\tjump.gt\t@.BB0_4\n\tadd\t36, r1, r2\n\tadd\t@CPI0_6[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tcontext.gas_left\tr3\n\tadd\t96, r0, r4\n\tst.1\tr2, r4\n\tadd\t@CPI0_7[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t100, r1, r2\n\tst.1\tr2, r0\n\tadd\t4, r1, r2\n\tst.1\tr2, r0\n\tadd\t@CPI0_0[0], r0, r2\n\tsub.s!\t@CPI0_0[0], r3, r4\n\tadd.ge\tr2, r0, r3\n\tsub.s!\t@CPI0_0[0], r1, r4\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r3, r2\n\tor\tr1, r2, r1\n\tor\t@CPI0_8[0], r1, r1\n\tadd\t32774, r0, r2\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_15\n\tld\tr1, r1\n\tsub.s!\t0, r1, r2\n\tjump.ne\t@.BB0_23\n\tptr.add\tstack[@ptr_return_data], r0, r1\n\tadd\tstack[@returndatasize], r0, r4\n\tjump\t@.BB0_18\n.BB0_67:\n\tld.1\t64, r5\n\tsub.s!\t@CPI0_22[0], r5, r1\n\tjump.gt\t@.BB0_4\n\tadd\t192, r5, r1\n\tst.1\t64, r1\n\tadd\t68, r5, r1\n\tadd\t@CPI0_23[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t132, r0, r1\n\tst.1\tr5, r1\n\tld.1\t64, r1\n\tadd\tr1, r0, stack-[9]\n\tadd\t@CPI0_20[0], r0, r1\n\tst.2\t0, r1\n\tcontext.code_source\tr1\n\tadd\tr1, r0, stack-[6]\n\tst.2\t4, r1\n\tst.2\t36, r0\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_24[0], r1, r1\n\tadd\t32773, r0, r2\n\tadd\tr4, r0, stack-[7]\n\tadd\tr5, r0, stack-[8]\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tadd\tstack-[9], r0, r7\n\tadd\t32, r7, r2\n\tld\tr1, r1\n\tand\t@CPI0_4[0], r1, r3\n\tadd\tstack-[8], r0, r8\n\tld.1\tr8, r1\n\tsub.s!\t0, r1, r4\n\tjump.eq\t@.BB0_72\n\tadd\tr0, r0, r4\n.BB0_71:\n\tadd\tr4, r2, r5\n\tadd\t32, r4, r4\n\tadd\tr4, r8, r6\n\tld.1\tr6, r6\n\tst.1\tr5, r6\n\tsub!\tr4, r1, r5\n\tjump.lt\t@.BB0_71\n.BB0_72:\n\tadd\tr1, r2, r4\n\tst.1\tr4, r3\n\tadd\t32, r1, r3\n\tst.1\tr7, r3\n\tadd\t95, r1, r1\n\tsub.s\t32, r0, r3\n\tand\tr1, r3, r3\n\tadd\tr3, r7, r1\n\tsub!\tr1, r3, r3\n\tadd\t0, r0, r3\n\tadd.lt\t1, r0, r3\n\tsub.s!\t@CPI0_25[0], r1, r4\n\tjump.gt\t@.BB0_4\n\tand!\t1, r3, r3\n\tjump.ne\t@.BB0_4\n\tst.1\t64, r1\n\tld.1\tr7, r1\n\tcontext.gas_left\tr3\n\tadd\t@CPI0_7[0], r0, r4\n\tst.1\tr2, r4\n\tadd\t132, r7, r4\n\tsub.s\t132, r1, r5\n\tst.1\tr4, r5\n\tadd\t100, r7, r4\n\tadd\t96, r0, r5\n\tst.1\tr4, r5\n\tadd\t36, r7, r4\n\tst.1\tr4, r0\n\tadd\t@CPI0_0[0], r0, r4\n\tsub.s!\t@CPI0_0[0], r2, r5\n\tadd.ge\tr4, r0, r2\n\tshl.s\t64, r2, r2\n\tsub.s!\t@CPI0_0[0], r1, r5\n\tadd.ge\tr4, r0, r1\n\tshl.s\t96, r1, r1\n\tor\tr1, r2, r1\n\tsub.s!\t@CPI0_0[0], r3, r2\n\tadd\tr4, r0, r2\n\tadd.lt\tr3, r0, r2\n\tshl.s\t192, r2, r2\n\tor\tr2, r1, r1\n\tor\t@CPI0_26[0], r1, r1\n\tadd\t32774, r0, r2\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_75\n\tld\tr1, r2\n\tand!\t@CPI0_4[0], r2, r1\n\tjump.eq\t@.BB0_77\n\tadd\tr2, r0, stack-[5]\n\tadd\tr1, r0, stack-[8]\n\tld.1\t64, r3\n\tadd\t32, r3, r2\n\tadd\t@CPI0_27[0], r0, r1\n\tadd\tr2, r0, stack-[4]\n\tst.1\tr2, r1\n\tadd\tstack-[7], r0, r1\n\tand\t@CPI0_4[0], r1, r2\n\tadd\tr3, r0, stack-[9]\n\tadd\t36, r3, r1\n\tadd\tr2, r0, stack-[7]\n\tst.1\tr1, r2\n\tadd\t@CPI0_20[0], r0, r1\n\tst.2\t0, r1\n\tadd\tstack-[6], r0, r1\n\tst.2\t4, r1\n\tadd\t32, r0, r1\n\tst.2\t36, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_24[0], r1, r1\n\tadd\t32773, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tand\t@CPI0_4[0], r1, r1\n\tadd\tstack-[9], r0, r3\n\tadd\t68, r3, r2\n\tst.1\tr2, r1\n\tadd\t68, r0, r1\n\tst.1\tr3, r1\n\tsub.s!\t@CPI0_28[0], r3, r1\n\tjump.gt\t@.BB0_4\n\tadd\tstack-[9], r0, r2\n\tadd\t128, r2, r1\n\tst.1\t64, r1\n\tld.1\tr2, r1\n\tsub.s!\t0, r1, r2\n\tjump.eq\t@.BB0_82\n\tcontext.gas_left\tr2\n\tadd\tstack-[5], r0, r3\n\tsub.s!\t4, r3, r3\n\tjump.eq\t@.BB0_82\n\tadd\t@CPI0_0[0], r0, r3\n\tadd\tstack-[4], r0, r5\n\tsub.s!\t@CPI0_0[0], r5, r4\n\tadd\tr3, r0, r4\n\tadd.lt\tr5, r0, r4\n\tshl.s\t64, r4, r4\n\tsub.s!\t@CPI0_0[0], r1, r5\n\tadd.ge\tr3, r0, r1\n\tshl.s\t96, r1, r1\n\tor\tr1, r4, r1\n\tsub.s!\t@CPI0_0[0], r2, r4\n\tadd.ge\tr3, r0, r2\n\tshl.s\t192, r2, r2\n\tor\tr2, r1, r1\n\tadd\tstack-[5], r0, r2\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, stack[@returndatasize]\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB0_2\n.BB0_82:\n\tld.1\t64, r1\n\tadd\tr1, r0, stack-[9]\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_26[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t3, r0, r3\n\tadd\t@CPI0_29[0], r0, r4\n\tadd\tstack-[8], r0, r5\n\tadd\tstack-[7], r0, r6\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB0_2\n\tadd\tstack-[8], r0, r1\n\tadd\tstack-[9], r0, r3\n\tst.1\tr3, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tsub.s!\t@CPI0_0[0], r3, r2\n\tadd.lt\tr3, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI0_21[0], r1, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_15:\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tadd\tr1, r0, r2\n\tshr.s\t96, r2, r2\n\tand\t@CPI0_0[0], r2, stack[@returndatasize]\n\tand\t@CPI0_0[0], r2, r4\n.BB0_18:\n\tld.1\t64, r2\n\tand\t31, r4, r3\n\tshr.s!\t5, r4, r4\n\tjump.eq\t@.BB0_88\n\tadd\tr0, r0, r5\n.BB0_20:\n\tshl.s\t5, r5, r6\n\tadd\tr2, r6, r7\n\tptr.add\tr1, r6, r6\n\tld\tr6, r6\n\tst.1\tr7, r6\n\tadd\t1, r5, r5\n\tsub!\tr5, r4, r6\n\tjump.lt\t@.BB0_20\n.BB0_88:\n\tsub.s!\t0, r3, r5\n\tjump.eq\t@.BB0_22\n\tshl.s\t5, r4, r4\n\tptr.add\tr1, r4, r1\n\tadd\tr2, r4, r4\n\tshl.s\t3, r3, r3\n\tld.1\tr4, r5\n\tshl\tr5, r3, r5\n\tshr\tr5, r3, r5\n\tld\tr1, r1\n\tsub\t256, r3, r3\n\tshr\tr1, r3, r1\n\tshl\tr1, r3, r1\n\tor\tr1, r5, r1\n\tst.1\tr4, r1\n.BB0_22:\n\tadd\t@CPI0_0[0], r0, r1\n\tadd\tstack[@returndatasize], r0, r3\n\tsub.s!\t@CPI0_0[0], r3, r4\n\tadd.ge\tr1, r0, r3\n\tsub.s!\t@CPI0_0[0], r2, r4\n\tadd.lt\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t96, r3, r2\n\tor\tr2, r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_23:\n\tst.1\t160, r1\n\tld.1\t128, r1\n\tst.2\t320, r0\n\tst.2\t352, r1\n\tld.1\t160, r1\n\tadd\t32, r0, r2\n\tst.2\t384, r2\n\tst.2\t416, r1\n\tst.2\t256, r2\n\tadd\t2, r0, r1\n\tst.2\t288, r1\n\tadd\t@CPI0_9[0], r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_75:\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tshr.s\t96, r1, r1\n\tand\t@CPI0_0[0], r1, stack[@returndatasize]\n.BB0_77:\n\tld.1\t64, r1\n\tadd\t68, r1, r2\n\tadd\t@CPI0_30[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t18, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI0_11[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI0_0[0], r0, r2\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI0_12[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_47:\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tshr.s\t96, r1, r1\n\tand\t@CPI0_0[0], r1, stack[@returndatasize]\n.BB0_50:\n\tld.1\t64, r1\n\tadd\t68, r1, r2\n\tadd\t@CPI0_34[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t19, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI0_11[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\tstack-[5], r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI0_0[0], r0, r2\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI0_12[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end0:\n\n__keccak256:\n.func_begin1:\n\tadd\t@CPI1_0[0], r0, r3\n\tsub.s!\t@CPI1_0[0], r1, r4\n\tadd.ge\tr3, r0, r1\n\tshl.s\t64, r1, r1\n\tsub.s!\t@CPI1_0[0], r2, r4\n\tadd.ge\tr3, r0, r2\n\tshl.s\t96, r2, r2\n\tor\tr2, r1, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI1_0[0], r2, r4\n\tadd.ge\tr3, r0, r2\n\tshl.s\t192, r2, r2\n\tor\tr2, r1, r1\n\tor\t@CPI1_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB1_2\n\tld\tr1, r1\n\tret\n.BB1_2:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end1:\n\n__system_request:\n.func_begin2:\n\tadd\t@CPI2_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI2_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI2_1[0], r1, r1\n\tadd\t32773, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB2_2\n\tld\tr1, r1\n\tret\n.BB2_2:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end2:\n\nabi_decode_addresst_uint256:\n.func_begin3:\n\tsub.s\t4, r1, r1\n\tadd\t@CPI3_0[0], r0, r2\n\tsub.s!\t63, r1, r3\n\tadd\t0, r0, r3\n\tadd.gt\tr2, r0, r3\n\tand\t@CPI3_0[0], r1, r1\n\tsub.s!\t0, r1, r4\n\tadd.ge\t0, r0, r2\n\tsub.s!\t@CPI3_0[0], r1, r1\n\tadd\tr3, r0, r1\n\tadd.eq\tr2, r0, r1\n\tsub.s!\t0, r1, r1\n\tjump.eq\t@.BB3_1\n\tptr.add\tstack[@ptr_calldata], r0, r2\n\tptr.add.s\t4, r2, r1\n\tld\tr1, r1\n\tsub.s!\t@CPI3_1[0], r1, r3\n\tjump.gt\t@.BB3_1\n\tptr.add.s\t36, r2, r2\n\tld\tr2, r2\n\tret\n.BB3_1:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end3:\n\ncopy_memory_to_memory_with_cleanup:\n.func_begin4:\n\tsub.s!\t0, r3, r4\n\tjump.eq\t@.BB4_3\n\tadd\tr0, r0, r4\n.BB4_2:\n\tadd\tr4, r2, r5\n\tadd\tr4, r1, r6\n\tld.1\tr6, r6\n\tst.1\tr5, r6\n\tadd\t32, r4, r4\n\tsub!\tr4, r3, r5\n\tjump.lt\t@.BB4_2\n.BB4_3:\n\tadd\tr3, r2, r1\n\tst.1\tr1, r0\n\tret\n.func_end4:\n\nfinalize_allocation:\n.func_begin5:\n\tadd\t31, r2, r2\n\tsub.s\t32, r0, r3\n\tand\tr2, r3, r2\n\tadd\tr2, r1, r1\n\tsub!\tr1, r2, r2\n\tadd\t0, r0, r2\n\tadd.lt\t1, r0, r2\n\tsub.s!\t@CPI5_0[0], r1, r3\n\tjump.gt\t@.BB5_2\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB5_2\n\tst.1\t64, r1\n\tret\n.BB5_2:\n\tadd\t@CPI5_1[0], r0, r1\n\tst.1\t0, r1\n\tadd\t65, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI5_2[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end5:\n\nallocate_memory:\n.func_begin6:\n\tadd\t31, r1, r1\n\tsub.s\t32, r0, r2\n\tand\tr1, r2, r2\n\tld.1\t64, r1\n\tadd\tr1, r2, r2\n\tsub!\tr2, r1, r3\n\tadd\t0, r0, r3\n\tadd.lt\t1, r0, r3\n\tsub.s!\t@CPI6_0[0], r2, r4\n\tjump.gt\t@.BB6_2\n\tand!\t1, r3, r3\n\tjump.ne\t@.BB6_2\n\tst.1\t64, r2\n\tret\n.BB6_2:\n\tadd\t@CPI6_1[0], r0, r1\n\tst.1\t0, r1\n\tadd\t65, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI6_2[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end6:\n\nabi_encode_packed_bytes_uint256:\n.func_begin7:\n\tld.1\tr2, r4\n\tsub.s!\t0, r4, r5\n\tjump.eq\t@.BB7_3\n\tadd\tr0, r0, r5\n.BB7_2:\n\tadd\tr5, r1, r6\n\tadd\t32, r5, r5\n\tadd\tr5, r2, r7\n\tld.1\tr7, r7\n\tst.1\tr6, r7\n\tsub!\tr5, r4, r6\n\tjump.lt\t@.BB7_2\n.BB7_3:\n\tadd\tr4, r1, r1\n\tst.1.inc\tr1, r3, r1\n\tret\n.func_end7:\n\nfun_getInitializer:\n.func_begin8:\n\tnop\tstack+=[1]\n\tld.1\t64, r4\n\tadd\t32, r4, r2\n\tadd\t@CPI8_0[0], r0, r3\n\tst.1\tr2, r3\n\tand\t@CPI8_1[0], r1, r1\n\tadd\tr4, r0, stack-[1]\n\tadd\t36, r4, r2\n\tst.1\tr2, r1\n\tadd\t@CPI8_2[0], r0, r1\n\tst.2\t0, r1\n\tcontext.code_source\tr1\n\tst.2\t4, r1\n\tadd\t32, r0, r1\n\tst.2\t36, r1\n\tadd\t@CPI8_3[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI8_3[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI8_4[0], r1, r1\n\tadd\t32773, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB8_1\n\tld\tr1, r1\n\tand\t@CPI8_1[0], r1, r3\n\tadd\tstack-[1], r0, r1\n\tadd\t68, r1, r2\n\tst.1\tr2, r3\n\tadd\t68, r0, r2\n\tst.1\tr1, r2\n\tsub.s!\t@CPI8_5[0], r1, r2\n\tjump.ge\t@.BB8_3\n\tadd\t128, r1, r2\n\tst.1\t64, r2\n\tret\n.BB8_1:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB8_3:\n\tadd\t@CPI8_6[0], r0, r1\n\tst.1\t0, r1\n\tadd\t65, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI8_7[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end8:\n\nbytes_concat_bytes32_bytes32_bytes32_bytes32_bytes:\n.func_begin9:\n\tadd\tr1, r0, r5\n\tld.1\t64, r1\n\tadd\t128, r1, r6\n\tst.1\tr6, r3\n\tadd\t96, r1, r3\n\tst.1\tr3, r2\n\tadd\t64, r1, r2\n\tst.1\tr2, r5\n\tadd\t32, r1, r2\n\tadd\t@CPI9_0[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t160, r1, r3\n\tld.1\tr4, r2\n\tsub.s!\t0, r2, r5\n\tjump.eq\t@.BB9_3\n\tadd\tr0, r0, r5\n.BB9_2:\n\tadd\tr5, r3, r6\n\tadd\t32, r5, r5\n\tadd\tr5, r4, r7\n\tld.1\tr7, r7\n\tst.1\tr6, r7\n\tsub!\tr5, r2, r6\n\tjump.lt\t@.BB9_2\n.BB9_3:\n\tadd\tr2, r3, r3\n\tst.1\tr3, r0\n\tadd\t128, r2, r3\n\tst.1\tr1, r3\n\tadd\t191, r2, r2\n\tsub.s\t32, r0, r3\n\tand\tr2, r3, r3\n\tadd\tr3, r1, r2\n\tsub!\tr2, r3, r3\n\tadd\t0, r0, r3\n\tadd.lt\t1, r0, r3\n\tsub.s!\t@CPI9_1[0], r2, r4\n\tjump.gt\t@.BB9_5\n\tand!\t1, r3, r3\n\tjump.ne\t@.BB9_5\n\tst.1\t64, r2\n\tret\n.BB9_5:\n\tadd\t@CPI9_2[0], r0, r1\n\tst.1\t0, r1\n\tadd\t65, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI9_3[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end9:\n\n__farcall:\n.func_begin10:\n.tmp0:\n\tfar_call\tr1, r2, @.BB10_2\n.tmp1:\n\tadd\t1, r0, r2\n\tret\n.BB10_2:\n.tmp2:\n\tadd\tr0, r0, r2\n\tret\n.func_end10:\n\n__staticcall:\n.func_begin11:\n.tmp3:\n\tfar_call.static\tr1, r2, @.BB11_2\n.tmp4:\n\tadd\t1, r0, r2\n\tret\n.BB11_2:\n.tmp5:\n\tadd\tr0, r0, r2\n\tret\n.func_end11:\n\n\t.data\n\t.p2align\t5\ncalldatasize:\n\t.cell 0\n\n\t.p2align\t5\nreturndatasize:\n\t.cell 0\n\n\t.p2align\t5\nptr_calldata:\n.cell\t0\n\n\t.p2align\t5\nptr_return_data:\n.cell\t0\n\n\t.note.GNU-stack\n\t.rodata\nCPI0_0:\nCPI1_0:\nCPI2_0:\nCPI8_3:\n\t.cell 4294967295\nCPI0_1:\n\t.cell -18446744073709551616\nCPI0_2:\n\t.cell -18446744073709551425\nCPI0_3:\nCPI3_0:\n\t.cell -57896044618658097711785492504343953926634992332820282019728792003956564819968\nCPI0_4:\nCPI3_1:\nCPI8_1:\n\t.cell 1461501637330902918203684832716283019655932542975\nCPI0_5:\n\t.cell 18446744073709551483\nCPI0_6:\n\t.cell 452316815161747330742954513387912979087634697218948724490916162308755673040\nCPI0_7:\n\t.cell -45094662312588414058508742492242807367897819822786606328124609013070528553987\nCPI0_8:\n\t.cell 904625697166532776746648320380374280103671765658434358441154937409622769664\nCPI0_9:\n\t.cell 53919893334301279589334030174039261362486096052542264263037304176640\nCPI0_10:\n\t.cell 47686211349250439718325492568846026864520966800159823849333032939726387019776\nCPI0_11:\n\t.cell 3963877391197344453575983046348115674221700746820753546331534351508065746944\nCPI0_12:\n\t.cell 7922816251426433759354395033600\nCPI0_13:\n\t.cell 3597189031\nCPI0_14:\n\t.cell 3597189032\nCPI0_15:\n\t.cell 3667902894\nCPI0_16:\n\t.cell 3673219016\nCPI0_17:\n\t.cell 143205615\nCPI0_18:\n\t.cell 835224799\nCPI0_19:\n\t.cell 993833283\nCPI0_20:\nCPI8_2:\n\t.cell 22182216476136578060272566318850604970565072242024486780356928325126096266030\nCPI0_21:\n\t.cell 2535301200456458802993406410752\nCPI0_22:\n\t.cell 18446744073709551423\nCPI0_23:\n\t.cell 452314614835985116048081565452561384773898180746459135082497098703856222830\nCPI0_24:\nCPI2_1:\nCPI8_4:\n\t.cell 904625751086426111047927909714404454142933107862120802609382293630030446592\nCPI0_25:\nCPI5_0:\nCPI6_0:\nCPI9_1:\n\t.cell 18446744073709551615\nCPI0_26:\nCPI1_1:\n\t.cell 904625697166532776746648320380374280103671755200316906558262375061821325312\nCPI0_27:\nCPI8_0:\n\t.cell -6964468824471369753820887440879067145331109830492293732283246659665758519296\nCPI0_28:\n\t.cell 18446744073709551487\nCPI0_29:\n\t.cell -45943772213550782617224594735540944211230040742546299348966819102014903093673\nCPI0_30:\n\t.cell 30507081124217263264604105720637416652390089060299141780472767122783390924800\nCPI0_31:\n\t.cell 18446744073709551519\nCPI0_32:\n\t.cell 27524297751018104354606870944915773909797785407991800839046391672766794276695\nCPI0_33:\n\t.cell -53641720766260035930500795604137079432871422249184857829132691592740448677646\nCPI0_34:\n\t.cell 30507081124217291768971072488852734264594328519162940998887594032285540679680\nCPI0_35:\nCPI5_1:\nCPI6_1:\nCPI8_6:\nCPI9_2:\n\t.cell 35408467139433450592217433187231851964531694900788300625387963629091585785856\nCPI0_36:\nCPI5_2:\nCPI6_2:\nCPI8_7:\nCPI9_3:\n\t.cell 2852213850513516153367582212096\nCPI8_5:\n\t.cell 18446744073709551488\nCPI9_0:\n\t.cell 14532066302281872353670009812739458257996995916004049562278051237580304589972\n","bytecode":{"object":""},"methodIdentifiers":{"accountCreationCode()":"31c884df","basicImplementation()":"daf0dfc8","deployAccount(address)":"da9fc1ae","deployCounterFactualAccount(address,uint256)":"088924ef","getAddressForCounterFactualAccount(address,uint256)":"d668bfa8","minimalHandler()":"3b3cb143"}},"irOptimized":"/// @use-src 13:\"contracts/smart-contract-wallet/SmartAccountFactory.sol\"\nobject \"SmartAccountFactory_4356\" {\n    code {\n        {\n            /// @src 13:623:6602  \"contract SmartAccountFactory {...\"\n            let _1 := memoryguard(0xc0)\n            if callvalue() { revert(0, 0) }\n            let programSize := datasize(\"SmartAccountFactory_4356\")\n            let argSize := sub(codesize(), programSize)\n            let newFreePtr := add(_1, and(add(argSize, 31), not(31)))\n            let _2 := sub(shl(64, 1), 1)\n            if or(gt(newFreePtr, _2), lt(newFreePtr, _1))\n            {\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 13:623:6602  \"contract SmartAccountFactory {...\" */ shl(224, 0x4e487b71))\n                mstore(4, 0x41)\n                revert(/** @src -1:-1:-1 */ 0, /** @src 13:623:6602  \"contract SmartAccountFactory {...\" */ 0x24)\n            }\n            mstore(64, newFreePtr)\n            codecopy(_1, programSize, argSize)\n            if slt(sub(add(_1, argSize), _1), 32)\n            {\n                revert(/** @src -1:-1:-1 */ 0, 0)\n            }\n            /// @src 13:623:6602  \"contract SmartAccountFactory {...\"\n            let value := mload(_1)\n            let _3 := and(value, sub(shl(160, 1), 1))\n            if iszero(eq(value, _3))\n            {\n                revert(/** @src -1:-1:-1 */ 0, 0)\n            }\n            /// @src 13:623:6602  \"contract SmartAccountFactory {...\"\n            if /** @src 13:1194:1228  \"_basicImplementation != address(0)\" */ iszero(/** @src 13:623:6602  \"contract SmartAccountFactory {...\" */ _3)\n            {\n                let memPtr := mload(64)\n                mstore(memPtr, shl(229, 4594637))\n                mstore(add(memPtr, 4), 32)\n                mstore(add(memPtr, 36), 29)\n                mstore(add(memPtr, 68), \"implementation cannot be zero\")\n                revert(memPtr, 100)\n            }\n            /// @src 13:1293:1335  \"basicImplementation = _basicImplementation\"\n            mstore(128, value)\n            /// @src 13:1362:1390  \"new DefaultCallbackHandler()\"\n            let _4 := /** @src 13:623:6602  \"contract SmartAccountFactory {...\" */ mload(64)\n            /// @src 13:1362:1390  \"new DefaultCallbackHandler()\"\n            let _5 := datasize(\"DefaultCallbackHandler_5420\")\n            let _6 := add(_4, _5)\n            if or(gt(_6, /** @src 13:623:6602  \"contract SmartAccountFactory {...\" */ _2), /** @src 13:1362:1390  \"new DefaultCallbackHandler()\" */ lt(_6, _4))\n            {\n                /// @src 13:623:6602  \"contract SmartAccountFactory {...\"\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 13:623:6602  \"contract SmartAccountFactory {...\" */ shl(224, 0x4e487b71))\n                mstore(4, 0x41)\n                revert(/** @src -1:-1:-1 */ 0, /** @src 13:623:6602  \"contract SmartAccountFactory {...\" */ 0x24)\n            }\n            /// @src 13:1362:1390  \"new DefaultCallbackHandler()\"\n            datacopy(_4, dataoffset(\"DefaultCallbackHandler_5420\"), _5)\n            let expr_address := create(/** @src -1:-1:-1 */ 0, /** @src 13:1362:1390  \"new DefaultCallbackHandler()\" */ _4, sub(_6, _4))\n            if iszero(expr_address)\n            {\n                /// @src 13:623:6602  \"contract SmartAccountFactory {...\"\n                let pos := mload(64)\n                returndatacopy(pos, /** @src -1:-1:-1 */ 0, /** @src 13:623:6602  \"contract SmartAccountFactory {...\" */ returndatasize())\n                revert(pos, returndatasize())\n            }\n            /// @src 13:1345:1390  \"minimalHandler = new DefaultCallbackHandler()\"\n            mstore(160, expr_address)\n            /// @src 13:623:6602  \"contract SmartAccountFactory {...\"\n            let _7 := mload(64)\n            let _8 := datasize(\"SmartAccountFactory_4356_deployed\")\n            codecopy(_7, dataoffset(\"SmartAccountFactory_4356_deployed\"), _8)\n            setimmutable(_7, \"4057\", mload(/** @src 13:1293:1335  \"basicImplementation = _basicImplementation\" */ 128))\n            /// @src 13:623:6602  \"contract SmartAccountFactory {...\"\n            setimmutable(_7, \"4060\", mload(/** @src 13:1345:1390  \"minimalHandler = new DefaultCallbackHandler()\" */ 160))\n            /// @src 13:623:6602  \"contract SmartAccountFactory {...\"\n            return(_7, _8)\n        }\n    }\n    /// @use-src 13:\"contracts/smart-contract-wallet/SmartAccountFactory.sol\"\n    object \"SmartAccountFactory_4356_deployed\" {\n        code {\n            {\n                /// @src 13:623:6602  \"contract SmartAccountFactory {...\"\n                mstore(64, 128)\n                if iszero(lt(calldatasize(), 4))\n                {\n                    let _1 := 0\n                    switch shr(224, calldataload(_1))\n                    case 0x088924ef {\n                        if callvalue() { revert(_1, _1) }\n                        let param, param_1 := abi_decode_addresst_uint256(calldatasize())\n                        /// @src 13:2175:2197  \"getInitializer(_owner)\"\n                        let expr_mpos := fun_getInitializer(param)\n                        /// @src 13:623:6602  \"contract SmartAccountFactory {...\"\n                        let _2 := mload(/** @src 13:2263:2285  \"keccak256(initializer)\" */ expr_mpos)\n                        /// @src 13:623:6602  \"contract SmartAccountFactory {...\"\n                        let _3 := 0x20\n                        let _4 := add(/** @src 13:2263:2285  \"keccak256(initializer)\" */ expr_mpos, /** @src 13:623:6602  \"contract SmartAccountFactory {...\" */ _3)\n                        /// @src 13:2263:2285  \"keccak256(initializer)\"\n                        let expr := keccak256(/** @src 13:623:6602  \"contract SmartAccountFactory {...\" */ _4, _2)\n                        /// @src 13:2246:2294  \"abi.encodePacked(keccak256(initializer), _index)\"\n                        let expr_mpos_1 := /** @src 13:623:6602  \"contract SmartAccountFactory {...\" */ mload(64)\n                        /// @src 13:2246:2294  \"abi.encodePacked(keccak256(initializer), _index)\"\n                        let _5 := add(expr_mpos_1, /** @src 13:623:6602  \"contract SmartAccountFactory {...\" */ _3)\n                        /// @src 13:2246:2294  \"abi.encodePacked(keccak256(initializer), _index)\"\n                        let _6 := sub(abi_encode_packed_bytes32_uint256(_5, expr, param_1), expr_mpos_1)\n                        let _7 := not(31)\n                        mstore(expr_mpos_1, add(_6, _7))\n                        finalize_allocation(expr_mpos_1, _6)\n                        /// @src 13:2223:2304  \"keccak256(...\"\n                        let expr_1 := keccak256(/** @src 13:623:6602  \"contract SmartAccountFactory {...\" */ _5, mload(/** @src 13:2223:2304  \"keccak256(...\" */ expr_mpos_1))\n                        /// @src 13:2375:2399  \"type(Proxy).creationCode\"\n                        let _8 := datasize(\"Proxy_2430\")\n                        let expr_mpos_2 := allocate_memory(add(_8, /** @src 13:623:6602  \"contract SmartAccountFactory {...\" */ _3))\n                        /// @src 13:2375:2399  \"type(Proxy).creationCode\"\n                        mstore(expr_mpos_2, _8)\n                        datacopy(add(expr_mpos_2, /** @src 13:623:6602  \"contract SmartAccountFactory {...\" */ _3), /** @src 13:2375:2399  \"type(Proxy).creationCode\" */ dataoffset(\"Proxy_2430\"), _8)\n                        /// @src 13:623:6602  \"contract SmartAccountFactory {...\"\n                        let _9 := sub(shl(160, 1), 1)\n                        /// @src 13:2345:2460  \"abi.encodePacked(...\"\n                        let expr_mpos_3 := /** @src 13:623:6602  \"contract SmartAccountFactory {...\" */ mload(64)\n                        /// @src 13:2345:2460  \"abi.encodePacked(...\"\n                        let _10 := sub(abi_encode_packed_bytes_uint256(add(expr_mpos_3, /** @src 13:623:6602  \"contract SmartAccountFactory {...\" */ _3), /** @src 13:2345:2460  \"abi.encodePacked(...\" */ expr_mpos_2, /** @src 13:623:6602  \"contract SmartAccountFactory {...\" */ and(/** @src 13:2429:2448  \"basicImplementation\" */ loadimmutable(\"4057\"), /** @src 13:623:6602  \"contract SmartAccountFactory {...\" */ _9)), /** @src 13:2345:2460  \"abi.encodePacked(...\" */ expr_mpos_3)\n                        mstore(expr_mpos_3, add(_10, /** @src 13:2246:2294  \"abi.encodePacked(keccak256(initializer), _index)\" */ _7))\n                        /// @src 13:2345:2460  \"abi.encodePacked(...\"\n                        finalize_allocation(expr_mpos_3, _10)\n                        /// @src 13:2527:2715  \"assembly {...\"\n                        let var_proxy := create2(/** @src 13:623:6602  \"contract SmartAccountFactory {...\" */ _1, /** @src 13:2527:2715  \"assembly {...\" */ add(/** @src 13:623:6602  \"contract SmartAccountFactory {...\" */ _3, /** @src 13:2527:2715  \"assembly {...\" */ expr_mpos_3), mload(expr_mpos_3), expr_1)\n                        /// @src 13:623:6602  \"contract SmartAccountFactory {...\"\n                        let _11 := and(/** @src 13:2732:2760  \"address(proxy) != address(0)\" */ var_proxy, /** @src 13:623:6602  \"contract SmartAccountFactory {...\" */ _9)\n                        /// @src 13:2724:2784  \"require(address(proxy) != address(0), \\\"Create2 call failed\\\")\"\n                        require_helper_stringliteral_d7c7(/** @src 13:2732:2760  \"address(proxy) != address(0)\" */ iszero(iszero(/** @src 13:623:6602  \"contract SmartAccountFactory {...\" */ _11)))\n                        /// @src 13:2835:2853  \"initializer.length\"\n                        let expr_2 := /** @src 13:623:6602  \"contract SmartAccountFactory {...\" */ mload(/** @src 13:2835:2853  \"initializer.length\" */ expr_mpos)\n                        /// @src 13:2831:3366  \"if (initializer.length > 0) {...\"\n                        if /** @src 13:2835:2857  \"initializer.length > 0\" */ iszero(iszero(expr_2))\n                        /// @src 13:2831:3366  \"if (initializer.length > 0) {...\"\n                        {\n                            /// @src 13:2933:3356  \"assembly {...\"\n                            if iszero(call(gas(), var_proxy, /** @src 13:623:6602  \"contract SmartAccountFactory {...\" */ _1, /** @src 13:2933:3356  \"assembly {...\" */ _4, expr_2, /** @src 13:623:6602  \"contract SmartAccountFactory {...\" */ _1, _1))\n                            /// @src 13:2933:3356  \"assembly {...\"\n                            {\n                                revert(/** @src 13:623:6602  \"contract SmartAccountFactory {...\" */ _1, _1)\n                            }\n                        }\n                        /// @src 13:3380:3418  \"AccountCreation(proxy, _owner, _index)\"\n                        let _12 := /** @src 13:623:6602  \"contract SmartAccountFactory {...\" */ mload(64)\n                        /// @src 13:3380:3418  \"AccountCreation(proxy, _owner, _index)\"\n                        log4(/** @src 13:623:6602  \"contract SmartAccountFactory {...\" */ _1, _1, /** @src 13:3380:3418  \"AccountCreation(proxy, _owner, _index)\" */ 0x8967dcaa00d8fcb9bb2b5beff4aaf8c020063512cf08fbe11fec37a1e3a150f2, _11, /** @src 13:623:6602  \"contract SmartAccountFactory {...\" */ and(/** @src 13:3380:3418  \"AccountCreation(proxy, _owner, _index)\" */ param, /** @src 13:623:6602  \"contract SmartAccountFactory {...\" */ _9), /** @src 13:3380:3418  \"AccountCreation(proxy, _owner, _index)\" */ param_1)\n                        /// @src 13:623:6602  \"contract SmartAccountFactory {...\"\n                        return(_12, sub(abi_encode_address(_12, var_proxy), _12))\n                    }\n                    case 0x31c884df {\n                        external_fun_accountCreationCode()\n                    }\n                    case 0x3b3cb143 { external_fun_minimalHandler() }\n                    case 0xd668bfa8 {\n                        external_fun_getAddressForCounterFactualAccount()\n                    }\n                    case 0xda9fc1ae { external_fun_deployAccount() }\n                    case 0xdaf0dfc8 {\n                        external_fun_basicImplementation()\n                    }\n                }\n                revert(0, 0)\n            }\n            function abi_decode_address() -> value\n            {\n                value := calldataload(4)\n                if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n            }\n            function abi_decode_addresst_uint256(dataEnd) -> value0, value1\n            {\n                if slt(add(dataEnd, not(3)), 64) { revert(0, 0) }\n                let value := calldataload(4)\n                if iszero(eq(value, and(value, sub(shl(160, 1), 1))))\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 13:623:6602  \"contract SmartAccountFactory {...\"\n                value0 := value\n                value1 := calldataload(36)\n            }\n            function abi_encode_address(headStart, value0) -> tail\n            {\n                tail := add(headStart, 32)\n                mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n            }\n            function copy_memory_to_memory_with_cleanup(src, dst, length)\n            {\n                let i := 0\n                for { } lt(i, length) { i := add(i, 32) }\n                {\n                    mstore(add(dst, i), mload(add(src, i)))\n                }\n                mstore(add(dst, length), 0)\n            }\n            function external_fun_accountCreationCode()\n            {\n                if callvalue() { revert(0, 0) }\n                if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                /// @src 13:1630:1654  \"type(Proxy).creationCode\"\n                let _1 := datasize(\"Proxy_2430\")\n                /// @src 13:623:6602  \"contract SmartAccountFactory {...\"\n                let memPtr := mload(64)\n                finalize_allocation(memPtr, /** @src 13:1630:1654  \"type(Proxy).creationCode\" */ add(_1, 32))\n                mstore(memPtr, _1)\n                let _2 := add(memPtr, 32)\n                datacopy(_2, dataoffset(\"Proxy_2430\"), _1)\n                /// @src 13:623:6602  \"contract SmartAccountFactory {...\"\n                let memPos := mload(64)\n                mstore(memPos, /** @src 13:1630:1654  \"type(Proxy).creationCode\" */ 32)\n                /// @src 13:623:6602  \"contract SmartAccountFactory {...\"\n                let length := mload(memPtr)\n                mstore(add(memPos, /** @src 13:1630:1654  \"type(Proxy).creationCode\" */ 32), /** @src 13:623:6602  \"contract SmartAccountFactory {...\" */ length)\n                copy_memory_to_memory_with_cleanup(_2, add(memPos, 64), length)\n                return(memPos, add(sub(add(memPos, and(add(length, 31), /** @src 13:2246:2294  \"abi.encodePacked(keccak256(initializer), _index)\" */ not(31))), /** @src 13:623:6602  \"contract SmartAccountFactory {...\" */ memPos), 64))\n            }\n            function convert_uint160_to_address(value) -> converted\n            {\n                converted := and(value, sub(shl(160, 1), 1))\n            }\n            function external_fun_minimalHandler()\n            {\n                if callvalue() { revert(0, 0) }\n                if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                let memPos := mload(64)\n                mstore(memPos, and(/** @src 13:708:762  \"DefaultCallbackHandler public immutable minimalHandler\" */ loadimmutable(\"4060\"), /** @src 13:623:6602  \"contract SmartAccountFactory {...\" */ sub(shl(160, 1), 1)))\n                return(memPos, 32)\n            }\n            function external_fun_getAddressForCounterFactualAccount()\n            {\n                if callvalue() { revert(0, 0) }\n                let param, param_1 := abi_decode_addresst_uint256(calldatasize())\n                /// @src 13:5844:5866  \"getInitializer(_owner)\"\n                let expr_mpos := fun_getInitializer(param)\n                /// @src 13:5926:5950  \"type(Proxy).creationCode\"\n                let _1 := datasize(\"Proxy_2430\")\n                let _2 := 32\n                let expr_mpos_1 := allocate_memory(add(_1, _2))\n                mstore(expr_mpos_1, _1)\n                datacopy(add(expr_mpos_1, _2), dataoffset(\"Proxy_2430\"), _1)\n                /// @src 13:5896:6011  \"abi.encodePacked(...\"\n                let expr_mpos_2 := /** @src 13:623:6602  \"contract SmartAccountFactory {...\" */ mload(64)\n                /// @src 13:5896:6011  \"abi.encodePacked(...\"\n                let _3 := add(expr_mpos_2, /** @src 13:5926:5950  \"type(Proxy).creationCode\" */ _2)\n                /// @src 13:5896:6011  \"abi.encodePacked(...\"\n                let _4 := sub(abi_encode_packed_bytes_uint256(_3, expr_mpos_1, /** @src 13:623:6602  \"contract SmartAccountFactory {...\" */ and(/** @src 13:5980:5999  \"basicImplementation\" */ loadimmutable(\"4057\"), /** @src 13:623:6602  \"contract SmartAccountFactory {...\" */ sub(shl(160, 1), 1))), /** @src 13:5896:6011  \"abi.encodePacked(...\" */ expr_mpos_2)\n                let _5 := /** @src 13:2246:2294  \"abi.encodePacked(keccak256(initializer), _index)\" */ not(31)\n                /// @src 13:5896:6011  \"abi.encodePacked(...\"\n                mstore(expr_mpos_2, add(_4, _5))\n                finalize_allocation(expr_mpos_2, _4)\n                /// @src 13:6076:6098  \"keccak256(initializer)\"\n                let expr := keccak256(/** @src 13:623:6602  \"contract SmartAccountFactory {...\" */ add(/** @src 13:6076:6098  \"keccak256(initializer)\" */ expr_mpos, /** @src 13:5926:5950  \"type(Proxy).creationCode\" */ _2), /** @src 13:623:6602  \"contract SmartAccountFactory {...\" */ mload(/** @src 13:6076:6098  \"keccak256(initializer)\" */ expr_mpos))\n                /// @src 13:6059:6107  \"abi.encodePacked(keccak256(initializer), _index)\"\n                let expr_mpos_3 := /** @src 13:623:6602  \"contract SmartAccountFactory {...\" */ mload(64)\n                /// @src 13:6059:6107  \"abi.encodePacked(keccak256(initializer), _index)\"\n                let _6 := add(expr_mpos_3, /** @src 13:5926:5950  \"type(Proxy).creationCode\" */ _2)\n                /// @src 13:6059:6107  \"abi.encodePacked(keccak256(initializer), _index)\"\n                let _7 := sub(abi_encode_packed_bytes32_uint256(_6, expr, param_1), expr_mpos_3)\n                mstore(expr_mpos_3, add(_7, /** @src 13:5896:6011  \"abi.encodePacked(...\" */ _5))\n                /// @src 13:6059:6107  \"abi.encodePacked(keccak256(initializer), _index)\"\n                finalize_allocation(expr_mpos_3, _7)\n                /// @src 13:6036:6117  \"keccak256(...\"\n                let expr_1 := keccak256(/** @src 13:623:6602  \"contract SmartAccountFactory {...\" */ _6, mload(/** @src 13:6036:6117  \"keccak256(...\" */ expr_mpos_3))\n                /// @src 13:6166:6366  \"bytes.concat(...\"\n                let expr_mpos_4 := bytes_concat_bytes32_bytes32_bytes32_bytes32_bytes(/** @src 13:6260:6264  \"this\" */ address(), /** @src 13:6166:6366  \"bytes.concat(...\" */ expr_1, /** @src 13:6308:6323  \"keccak256(code)\" */ keccak256(/** @src 13:623:6602  \"contract SmartAccountFactory {...\" */ _3, mload(/** @src 13:6308:6323  \"keccak256(code)\" */ expr_mpos_2)), /** @src 13:6166:6366  \"bytes.concat(...\" */ expr_mpos)\n                /// @src 13:6386:6428  \"_account = address(uint160(uint256(hash)))\"\n                let var_account := /** @src 13:6397:6428  \"address(uint160(uint256(hash)))\" */ convert_uint160_to_address(/** @src 13:6405:6427  \"uint160(uint256(hash))\" */ convert_uint160_to_address(/** @src 13:6143:6376  \"keccak256(...\" */ keccak256(/** @src 13:623:6602  \"contract SmartAccountFactory {...\" */ add(/** @src 13:6143:6376  \"keccak256(...\" */ expr_mpos_4, /** @src 13:5926:5950  \"type(Proxy).creationCode\" */ _2), /** @src 13:623:6602  \"contract SmartAccountFactory {...\" */ mload(/** @src 13:6143:6376  \"keccak256(...\" */ expr_mpos_4))))\n                /// @src 13:623:6602  \"contract SmartAccountFactory {...\"\n                let memPos := mload(64)\n                return(memPos, sub(abi_encode_address(memPos, var_account), memPos))\n            }\n            function external_fun_deployAccount()\n            {\n                if callvalue() { revert(0, 0) }\n                let _1 := 32\n                if slt(add(calldatasize(), not(3)), _1)\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 13:623:6602  \"contract SmartAccountFactory {...\"\n                let value0 := abi_decode_address()\n                /// @src 13:3783:3807  \"type(Proxy).creationCode\"\n                let _2 := datasize(\"Proxy_2430\")\n                let expr_mpos := allocate_memory(add(_2, /** @src 13:623:6602  \"contract SmartAccountFactory {...\" */ _1))\n                /// @src 13:3783:3807  \"type(Proxy).creationCode\"\n                mstore(expr_mpos, _2)\n                datacopy(add(expr_mpos, /** @src 13:623:6602  \"contract SmartAccountFactory {...\" */ _1), /** @src 13:3783:3807  \"type(Proxy).creationCode\" */ dataoffset(\"Proxy_2430\"), _2)\n                /// @src 13:623:6602  \"contract SmartAccountFactory {...\"\n                let _3 := sub(shl(160, 1), 1)\n                /// @src 13:3753:3868  \"abi.encodePacked(...\"\n                let expr_mpos_1 := /** @src 13:623:6602  \"contract SmartAccountFactory {...\" */ mload(64)\n                /// @src 13:3753:3868  \"abi.encodePacked(...\"\n                let _4 := sub(abi_encode_packed_bytes_uint256(add(expr_mpos_1, /** @src 13:623:6602  \"contract SmartAccountFactory {...\" */ _1), /** @src 13:3753:3868  \"abi.encodePacked(...\" */ expr_mpos, /** @src 13:623:6602  \"contract SmartAccountFactory {...\" */ and(/** @src 13:3837:3856  \"basicImplementation\" */ loadimmutable(\"4057\"), /** @src 13:623:6602  \"contract SmartAccountFactory {...\" */ _3)), /** @src 13:3753:3868  \"abi.encodePacked(...\" */ expr_mpos_1)\n                mstore(expr_mpos_1, add(_4, /** @src 13:2246:2294  \"abi.encodePacked(keccak256(initializer), _index)\" */ not(31)))\n                /// @src 13:3753:3868  \"abi.encodePacked(...\"\n                finalize_allocation(expr_mpos_1, _4)\n                /// @src 13:3935:4100  \"assembly {...\"\n                let _5 := mload(expr_mpos_1)\n                /// @src -1:-1:-1\n                let _6 := 0\n                /// @src 13:3935:4100  \"assembly {...\"\n                let var_proxy := create(/** @src -1:-1:-1 */ _6, /** @src 13:3935:4100  \"assembly {...\" */ add(/** @src 13:623:6602  \"contract SmartAccountFactory {...\" */ _1, /** @src 13:3935:4100  \"assembly {...\" */ expr_mpos_1), _5)\n                /// @src 13:623:6602  \"contract SmartAccountFactory {...\"\n                let _7 := and(/** @src 13:4117:4145  \"address(proxy) != address(0)\" */ var_proxy, /** @src 13:623:6602  \"contract SmartAccountFactory {...\" */ _3)\n                /// @src 13:4109:4168  \"require(address(proxy) != address(0), \\\"Create call failed\\\")\"\n                require_helper_stringliteral_e3e6(/** @src 13:4117:4145  \"address(proxy) != address(0)\" */ iszero(iszero(/** @src 13:623:6602  \"contract SmartAccountFactory {...\" */ _7)))\n                /// @src 13:4206:4228  \"getInitializer(_owner)\"\n                let expr_mpos_2 := fun_getInitializer(value0)\n                /// @src 13:4279:4297  \"initializer.length\"\n                let expr := /** @src 13:623:6602  \"contract SmartAccountFactory {...\" */ mload(/** @src 13:4279:4297  \"initializer.length\" */ expr_mpos_2)\n                /// @src 13:4275:4810  \"if (initializer.length > 0) {...\"\n                if /** @src 13:4279:4301  \"initializer.length > 0\" */ iszero(iszero(expr))\n                /// @src 13:4275:4810  \"if (initializer.length > 0) {...\"\n                {\n                    /// @src 13:4377:4800  \"assembly {...\"\n                    if iszero(call(gas(), var_proxy, /** @src -1:-1:-1 */ _6, /** @src 13:4377:4800  \"assembly {...\" */ add(expr_mpos_2, /** @src 13:623:6602  \"contract SmartAccountFactory {...\" */ _1), /** @src 13:4377:4800  \"assembly {...\" */ expr, /** @src -1:-1:-1 */ _6, _6))\n                    /// @src 13:4377:4800  \"assembly {...\"\n                    {\n                        revert(/** @src -1:-1:-1 */ _6, _6)\n                    }\n                }\n                /// @src 13:4824:4866  \"AccountCreationWithoutIndex(proxy, _owner)\"\n                let _8 := /** @src 13:623:6602  \"contract SmartAccountFactory {...\" */ mload(64)\n                /// @src 13:4824:4866  \"AccountCreationWithoutIndex(proxy, _owner)\"\n                log3(/** @src -1:-1:-1 */ _6, _6, /** @src 13:4824:4866  \"AccountCreationWithoutIndex(proxy, _owner)\" */ 0x9a6cbf173278cf7dfadb45414d824f7828c0c94479f1b15e45453653070cf657, _7, /** @src 13:623:6602  \"contract SmartAccountFactory {...\" */ and(/** @src 13:4824:4866  \"AccountCreationWithoutIndex(proxy, _owner)\" */ value0, /** @src 13:623:6602  \"contract SmartAccountFactory {...\" */ _3))\n                return(_8, sub(abi_encode_address(_8, var_proxy), _8))\n            }\n            function external_fun_basicImplementation()\n            {\n                if callvalue() { revert(0, 0) }\n                if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                let memPos := mload(64)\n                mstore(memPos, and(/** @src 13:658:702  \"address public immutable basicImplementation\" */ loadimmutable(\"4057\"), /** @src 13:623:6602  \"contract SmartAccountFactory {...\" */ sub(shl(160, 1), 1)))\n                return(memPos, 32)\n            }\n            function finalize_allocation(memPtr, size)\n            {\n                let newFreePtr := add(memPtr, and(add(size, 31), /** @src 13:2246:2294  \"abi.encodePacked(keccak256(initializer), _index)\" */ not(31)))\n                /// @src 13:623:6602  \"contract SmartAccountFactory {...\"\n                if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr))\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0x41)\n                    revert(0, 0x24)\n                }\n                mstore(64, newFreePtr)\n            }\n            function allocate_memory(size) -> memPtr\n            {\n                memPtr := mload(64)\n                finalize_allocation(memPtr, size)\n            }\n            function abi_encode_packed_bytes32_uint256(pos, value0, value1) -> end\n            {\n                mstore(pos, value0)\n                mstore(add(pos, 32), value1)\n                end := add(pos, 64)\n            }\n            function abi_encode_packed_bytes_uint256(pos, value0, value1) -> end\n            {\n                let length := mload(value0)\n                copy_memory_to_memory_with_cleanup(add(value0, 0x20), pos, length)\n                let end_1 := add(pos, length)\n                mstore(end_1, value1)\n                end := add(end_1, 0x20)\n            }\n            function require_helper_stringliteral_d7c7(condition)\n            {\n                if iszero(condition)\n                {\n                    let memPtr := mload(64)\n                    mstore(memPtr, shl(229, 4594637))\n                    mstore(add(memPtr, 4), 32)\n                    mstore(add(memPtr, 36), 19)\n                    mstore(add(memPtr, 68), \"Create2 call failed\")\n                    revert(memPtr, 100)\n                }\n            }\n            function require_helper_stringliteral_e3e6(condition)\n            {\n                if iszero(condition)\n                {\n                    let memPtr := mload(64)\n                    mstore(memPtr, shl(229, 4594637))\n                    mstore(add(memPtr, 4), 32)\n                    mstore(add(memPtr, 36), 18)\n                    mstore(add(memPtr, 68), \"Create call failed\")\n                    revert(memPtr, 100)\n                }\n            }\n            /// @ast-id 4268 @src 13:5079:5324  \"function getInitializer(...\"\n            function fun_getInitializer(var_owner) -> var_mpos\n            {\n                /// @src 13:623:6602  \"contract SmartAccountFactory {...\"\n                let _1 := sub(shl(160, 1), 1)\n                /// @src 13:5199:5317  \"abi.encodeCall(...\"\n                let expr_4265_mpos := /** @src 13:623:6602  \"contract SmartAccountFactory {...\" */ mload(64)\n                /// @src 13:5199:5317  \"abi.encodeCall(...\"\n                mstore(add(expr_4265_mpos, 0x20), shl(225, 0x784d200b))\n                /// @src 13:623:6602  \"contract SmartAccountFactory {...\"\n                mstore(/** @src 13:5199:5317  \"abi.encodeCall(...\" */ add(expr_4265_mpos, 36), /** @src 13:623:6602  \"contract SmartAccountFactory {...\" */ and(var_owner, _1))\n                mstore(add(/** @src 13:5199:5317  \"abi.encodeCall(...\" */ expr_4265_mpos, /** @src 13:623:6602  \"contract SmartAccountFactory {...\" */ 68), and(/** @src 13:5287:5301  \"minimalHandler\" */ loadimmutable(\"4060\"), /** @src 13:623:6602  \"contract SmartAccountFactory {...\" */ _1))\n                /// @src 13:5199:5317  \"abi.encodeCall(...\"\n                mstore(expr_4265_mpos, /** @src 13:623:6602  \"contract SmartAccountFactory {...\" */ 68)\n                let newFreePtr := add(expr_4265_mpos, 128)\n                if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, expr_4265_mpos))\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0x41)\n                    revert(0, /** @src 13:5199:5317  \"abi.encodeCall(...\" */ 36)\n                }\n                /// @src 13:623:6602  \"contract SmartAccountFactory {...\"\n                mstore(64, newFreePtr)\n                /// @src 13:5180:5317  \"return...\"\n                var_mpos := expr_4265_mpos\n            }\n            /// @src 13:810:876  \"0x2020dba91b30cc0006188af794c2fb30dd8520db7e2c088b7fc7c103c00ca494\"\n            function bytes_concat_bytes32_bytes32_bytes32_bytes32_bytes(param, param_1, param_2, param_3) -> outPtr\n            {\n                outPtr := /** @src 13:623:6602  \"contract SmartAccountFactory {...\" */ mload(64)\n                mstore(/** @src 13:810:876  \"0x2020dba91b30cc0006188af794c2fb30dd8520db7e2c088b7fc7c103c00ca494\" */ add(outPtr, 0x20), 0x2020dba91b30cc0006188af794c2fb30dd8520db7e2c088b7fc7c103c00ca494)\n                /// @src 13:623:6602  \"contract SmartAccountFactory {...\"\n                mstore(/** @src 13:810:876  \"0x2020dba91b30cc0006188af794c2fb30dd8520db7e2c088b7fc7c103c00ca494\" */ add(outPtr, /** @src 13:623:6602  \"contract SmartAccountFactory {...\" */ 64), param)\n                mstore(/** @src 13:810:876  \"0x2020dba91b30cc0006188af794c2fb30dd8520db7e2c088b7fc7c103c00ca494\" */ add(outPtr, 96), /** @src 13:623:6602  \"contract SmartAccountFactory {...\" */ param_1)\n                mstore(/** @src 13:810:876  \"0x2020dba91b30cc0006188af794c2fb30dd8520db7e2c088b7fc7c103c00ca494\" */ add(outPtr, 128), /** @src 13:623:6602  \"contract SmartAccountFactory {...\" */ param_2)\n                let length := mload(param_3)\n                copy_memory_to_memory_with_cleanup(add(param_3, /** @src 13:810:876  \"0x2020dba91b30cc0006188af794c2fb30dd8520db7e2c088b7fc7c103c00ca494\" */ 0x20), add(outPtr, 160), /** @src 13:623:6602  \"contract SmartAccountFactory {...\" */ length)\n                /// @src 13:810:876  \"0x2020dba91b30cc0006188af794c2fb30dd8520db7e2c088b7fc7c103c00ca494\"\n                let _1 := sub(/** @src 13:623:6602  \"contract SmartAccountFactory {...\" */ add(/** @src 13:810:876  \"0x2020dba91b30cc0006188af794c2fb30dd8520db7e2c088b7fc7c103c00ca494\" */ outPtr, /** @src 13:623:6602  \"contract SmartAccountFactory {...\" */ length), /** @src 13:810:876  \"0x2020dba91b30cc0006188af794c2fb30dd8520db7e2c088b7fc7c103c00ca494\" */ outPtr)\n                mstore(outPtr, add(_1, 128))\n                finalize_allocation(outPtr, add(_1, 160))\n            }\n        }\n        /// @use-src 11:\"contracts/smart-contract-wallet/Proxy.sol\"\n        object \"Proxy_2430\" {\n            code {\n                {\n                    /// @src 11:288:1154  \"contract Proxy {...\"\n                    let _1 := memoryguard(0x80)\n                    if callvalue() { revert(0, 0) }\n                    let programSize := datasize(\"Proxy_2430\")\n                    let argSize := sub(codesize(), programSize)\n                    let newFreePtr := add(_1, and(add(argSize, 31), not(31)))\n                    if or(gt(newFreePtr, sub(shl(64, 1), 1)), lt(newFreePtr, _1))\n                    {\n                        mstore(/** @src -1:-1:-1 */ 0, /** @src 11:288:1154  \"contract Proxy {...\" */ shl(224, 0x4e487b71))\n                        mstore(4, 0x41)\n                        revert(/** @src -1:-1:-1 */ 0, /** @src 11:288:1154  \"contract Proxy {...\" */ 0x24)\n                    }\n                    mstore(64, newFreePtr)\n                    codecopy(_1, programSize, argSize)\n                    if slt(sub(add(_1, argSize), _1), 32)\n                    {\n                        revert(/** @src -1:-1:-1 */ 0, 0)\n                    }\n                    /// @src 11:288:1154  \"contract Proxy {...\"\n                    let value := mload(_1)\n                    let _2 := and(value, sub(shl(160, 1), 1))\n                    if iszero(eq(value, _2))\n                    {\n                        revert(/** @src -1:-1:-1 */ 0, 0)\n                    }\n                    /// @src 11:288:1154  \"contract Proxy {...\"\n                    if /** @src 11:377:406  \"_implementation != address(0)\" */ iszero(/** @src 11:288:1154  \"contract Proxy {...\" */ _2)\n                    {\n                        let memPtr := mload(64)\n                        mstore(memPtr, shl(229, 4594637))\n                        mstore(add(memPtr, 4), 32)\n                        mstore(add(memPtr, 36), 30)\n                        mstore(add(memPtr, 68), \"Invalid implementation address\")\n                        revert(memPtr, 100)\n                    }\n                    /// @src 11:528:595  \"assembly {...\"\n                    sstore(address(), value)\n                    /// @src 11:288:1154  \"contract Proxy {...\"\n                    let _3 := mload(64)\n                    let _4 := datasize(\"Proxy_2430_deployed\")\n                    codecopy(_3, dataoffset(\"Proxy_2430_deployed\"), _4)\n                    return(_3, _4)\n                }\n            }\n            /// @use-src 11:\"contracts/smart-contract-wallet/Proxy.sol\"\n            object \"Proxy_2430_deployed\" {\n                code {\n                    {\n                        /// @src 11:288:1154  \"contract Proxy {...\"\n                        mstore(64, 128)\n                        /// @src 11:725:1146  \"assembly {...\"\n                        let var_target := sload(address())\n                        /// @src -1:-1:-1\n                        let _1 := 0\n                        /// @src 11:725:1146  \"assembly {...\"\n                        calldatacopy(/** @src -1:-1:-1 */ _1, _1, /** @src 11:725:1146  \"assembly {...\" */ calldatasize())\n                        let usr$result := delegatecall(gas(), var_target, /** @src -1:-1:-1 */ _1, /** @src 11:725:1146  \"assembly {...\" */ calldatasize(), /** @src -1:-1:-1 */ _1, _1)\n                        /// @src 11:725:1146  \"assembly {...\"\n                        returndatacopy(/** @src -1:-1:-1 */ _1, _1, /** @src 11:725:1146  \"assembly {...\" */ returndatasize())\n                        switch usr$result\n                        case 0 {\n                            revert(/** @src -1:-1:-1 */ _1, /** @src 11:725:1146  \"assembly {...\" */ returndatasize())\n                        }\n                        default {\n                            return(/** @src -1:-1:-1 */ _1, /** @src 11:725:1146  \"assembly {...\" */ returndatasize())\n                        }\n                    }\n                }\n                data \".metadata\" hex\"a26469706673582212209930b9524191608295fed5719e760e81a0ae63f6e3a529e53caa1208e58fe7f864736f6c63430008110033\"\n            }\n        }\n        data \".metadata\" hex\"a2646970667358221220911d09685c9a1e7084419990843ca1d87c3b0386a409a5ce5b7e64cf972bf9b964736f6c63430008110033\"\n    }\n    /// @use-src 23:\"contracts/smart-contract-wallet/handler/DefaultCallbackHandler.sol\", 24:\"contracts/smart-contract-wallet/interfaces/IERC1155TokenReceiver.sol\", 25:\"contracts/smart-contract-wallet/interfaces/IERC165.sol\", 26:\"contracts/smart-contract-wallet/interfaces/IERC721TokenReceiver.sol\", 27:\"contracts/smart-contract-wallet/interfaces/IERC777TokensRecipient.sol\"\n    object \"DefaultCallbackHandler_5420\" {\n        code {\n            {\n                /// @src 23:629:2267  \"contract DefaultCallbackHandler is...\"\n                let _1 := memoryguard(0x80)\n                mstore(64, _1)\n                if callvalue() { revert(0, 0) }\n                let _2 := datasize(\"DefaultCallbackHandler_5420_deployed\")\n                codecopy(_1, dataoffset(\"DefaultCallbackHandler_5420_deployed\"), _2)\n                return(_1, _2)\n            }\n        }\n        /// @use-src 23:\"contracts/smart-contract-wallet/handler/DefaultCallbackHandler.sol\"\n        object \"DefaultCallbackHandler_5420_deployed\" {\n            code {\n                {\n                    /// @src 23:629:2267  \"contract DefaultCallbackHandler is...\"\n                    let _1 := memoryguard(0x80)\n                    let _2 := 64\n                    mstore(_2, _1)\n                    let _3 := 4\n                    if iszero(lt(calldatasize(), _3))\n                    {\n                        let _4 := 0\n                        switch shr(224, calldataload(_4))\n                        case 0x0023de29 {\n                            if callvalue() { revert(_4, _4) }\n                            if slt(add(calldatasize(), not(3)), 192) { revert(_4, _4) }\n                            pop(abi_decode_address())\n                            pop(abi_decode_address_2060())\n                            let value := calldataload(68)\n                            if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(_4, _4) }\n                            let offset := calldataload(132)\n                            let _5 := 0xffffffffffffffff\n                            if gt(offset, _5) { revert(_4, _4) }\n                            let value4, value5 := abi_decode_bytes_calldata(add(_3, offset), calldatasize())\n                            let offset_1 := calldataload(164)\n                            if gt(offset_1, _5) { revert(_4, _4) }\n                            let value6, value7 := abi_decode_bytes_calldata(add(_3, offset_1), calldatasize())\n                            return(_4, _4)\n                        }\n                        case 0x01ffc9a7 {\n                            if callvalue() { revert(_4, _4) }\n                            if slt(add(calldatasize(), not(3)), 32) { revert(_4, _4) }\n                            let value_1 := calldataload(_3)\n                            let _6 := and(value_1, shl(224, 0xffffffff))\n                            if iszero(eq(value_1, _6)) { revert(_4, _4) }\n                            /// @src 23:2008:2131  \"interfaceId == type(IERC1155TokenReceiver).interfaceId ||...\"\n                            let expr := /** @src 23:2008:2062  \"interfaceId == type(IERC1155TokenReceiver).interfaceId\" */ eq(_6, /** @src 23:2023:2062  \"type(IERC1155TokenReceiver).interfaceId\" */ shl(229, 0x02711897))\n                            /// @src 23:2008:2131  \"interfaceId == type(IERC1155TokenReceiver).interfaceId ||...\"\n                            if iszero(expr)\n                            {\n                                expr := /** @src 23:2078:2131  \"interfaceId == type(IERC721TokenReceiver).interfaceId\" */ eq(_6, /** @src 23:2093:2131  \"type(IERC721TokenReceiver).interfaceId\" */ shl(225, 0x0a85bd01))\n                            }\n                            /// @src 23:2008:2202  \"interfaceId == type(IERC1155TokenReceiver).interfaceId ||...\"\n                            let expr_1 := expr\n                            if iszero(expr)\n                            {\n                                expr_1 := /** @src 23:2147:2202  \"interfaceId == type(IERC777TokensRecipient).interfaceId\" */ eq(_6, /** @src 23:2162:2202  \"type(IERC777TokensRecipient).interfaceId\" */ shl(224, 2350633))\n                            }\n                            /// @src 23:2008:2258  \"interfaceId == type(IERC1155TokenReceiver).interfaceId ||...\"\n                            let expr_2 := expr_1\n                            if iszero(expr_1)\n                            {\n                                expr_2 := /** @src 23:2218:2258  \"interfaceId == type(IERC165).interfaceId\" */ eq(_6, /** @src 23:2233:2258  \"type(IERC165).interfaceId\" */ shl(224, 0x01ffc9a7))\n                            }\n                            /// @src 23:629:2267  \"contract DefaultCallbackHandler is...\"\n                            mstore(_1, iszero(iszero(expr_2)))\n                            return(_1, 32)\n                        }\n                        case 0x150b7a02 {\n                            if callvalue() { revert(_4, _4) }\n                            if slt(add(calldatasize(), not(3)), 128) { revert(_4, _4) }\n                            pop(abi_decode_address())\n                            pop(abi_decode_address_2060())\n                            let offset_2 := calldataload(100)\n                            if gt(offset_2, 0xffffffffffffffff) { revert(_4, _4) }\n                            let value3, value4_1 := abi_decode_bytes_calldata(add(_3, offset_2), calldatasize())\n                            let memPos := mload(_2)\n                            mstore(memPos, /** @src 23:2093:2131  \"type(IERC721TokenReceiver).interfaceId\" */ shl(225, 0x0a85bd01))\n                            /// @src 23:629:2267  \"contract DefaultCallbackHandler is...\"\n                            return(memPos, 32)\n                        }\n                        case 0xa3f4df7e {\n                            if callvalue() { revert(_4, _4) }\n                            if slt(add(calldatasize(), not(3)), _4) { revert(_4, _4) }\n                            let memPtr := mload(_2)\n                            let newFreePtr := add(memPtr, _2)\n                            if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr))\n                            {\n                                mstore(_4, shl(224, 0x4e487b71))\n                                mstore(_3, 0x41)\n                                revert(_4, 0x24)\n                            }\n                            mstore(_2, newFreePtr)\n                            mstore(memPtr, 24)\n                            mstore(add(memPtr, 32), \"Default Callback Handler\")\n                            let memPos_1 := mload(_2)\n                            return(memPos_1, sub(abi_encode_string(memPos_1, memPtr), memPos_1))\n                        }\n                        case 0xbc197c81 {\n                            if callvalue() { revert(_4, _4) }\n                            if slt(add(calldatasize(), not(3)), 160) { revert(_4, _4) }\n                            pop(abi_decode_address())\n                            pop(abi_decode_address_2060())\n                            let offset_3 := calldataload(68)\n                            let _7 := 0xffffffffffffffff\n                            if gt(offset_3, _7) { revert(_4, _4) }\n                            let value2, value3_1 := abi_decode_array_uint256_dyn_calldata(add(_3, offset_3), calldatasize())\n                            let offset_4 := calldataload(100)\n                            if gt(offset_4, _7) { revert(_4, _4) }\n                            let value4_2, value5_1 := abi_decode_array_uint256_dyn_calldata(add(_3, offset_4), calldatasize())\n                            let offset_5 := calldataload(132)\n                            if gt(offset_5, _7) { revert(_4, _4) }\n                            let value6_1, value7_1 := abi_decode_bytes_calldata(add(_3, offset_5), calldatasize())\n                            let memPos_2 := mload(_2)\n                            mstore(memPos_2, /** @src 23:1324:1377  \"IERC1155TokenReceiver.onERC1155BatchReceived.selector\" */ shl(224, 0xbc197c81))\n                            /// @src 23:629:2267  \"contract DefaultCallbackHandler is...\"\n                            return(memPos_2, 32)\n                        }\n                        case 0xf23a6e61 {\n                            if callvalue() { revert(_4, _4) }\n                            if slt(add(calldatasize(), not(3)), 160) { revert(_4, _4) }\n                            pop(abi_decode_address())\n                            pop(abi_decode_address_2060())\n                            let offset_6 := calldataload(132)\n                            if gt(offset_6, 0xffffffffffffffff) { revert(_4, _4) }\n                            let value4_3, value5_2 := abi_decode_bytes_calldata(add(_3, offset_6), calldatasize())\n                            let memPos_3 := mload(_2)\n                            mstore(memPos_3, /** @src 23:1054:1102  \"IERC1155TokenReceiver.onERC1155Received.selector\" */ shl(224, 0xf23a6e61))\n                            /// @src 23:629:2267  \"contract DefaultCallbackHandler is...\"\n                            return(memPos_3, 32)\n                        }\n                        case 0xffa1ad74 {\n                            if callvalue() { revert(_4, _4) }\n                            if slt(add(calldatasize(), not(3)), _4) { revert(_4, _4) }\n                            let memPtr_1 := mload(_2)\n                            let newFreePtr_1 := add(memPtr_1, _2)\n                            if or(gt(newFreePtr_1, 0xffffffffffffffff), lt(newFreePtr_1, memPtr_1))\n                            {\n                                mstore(_4, shl(224, 0x4e487b71))\n                                mstore(_3, 0x41)\n                                revert(_4, 36)\n                            }\n                            mstore(_2, newFreePtr_1)\n                            mstore(memPtr_1, 5)\n                            mstore(add(memPtr_1, 32), \"1.0.0\")\n                            let memPos_4 := mload(_2)\n                            return(memPos_4, sub(abi_encode_string(memPos_4, memPtr_1), memPos_4))\n                        }\n                    }\n                    revert(0, 0)\n                }\n                function abi_decode_address() -> value\n                {\n                    value := calldataload(4)\n                    if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n                }\n                function abi_decode_address_2060() -> value\n                {\n                    value := calldataload(36)\n                    if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n                }\n                function abi_decode_bytes_calldata(offset, end) -> arrayPos, length\n                {\n                    if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n                    length := calldataload(offset)\n                    if gt(length, 0xffffffffffffffff) { revert(0, 0) }\n                    arrayPos := add(offset, 0x20)\n                    if gt(add(add(offset, length), 0x20), end) { revert(0, 0) }\n                }\n                function abi_encode_string(headStart, value0) -> tail\n                {\n                    let _1 := 32\n                    mstore(headStart, _1)\n                    let length := mload(value0)\n                    mstore(add(headStart, _1), length)\n                    let i := 0\n                    for { } lt(i, length) { i := add(i, _1) }\n                    {\n                        mstore(add(add(headStart, i), 64), mload(add(add(value0, i), _1)))\n                    }\n                    mstore(add(add(headStart, length), 64), 0)\n                    tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n                }\n                function abi_decode_array_uint256_dyn_calldata(offset, end) -> arrayPos, length\n                {\n                    if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n                    length := calldataload(offset)\n                    if gt(length, 0xffffffffffffffff) { revert(0, 0) }\n                    arrayPos := add(offset, 0x20)\n                    if gt(add(add(offset, shl(5, length)), 0x20), end) { revert(0, 0) }\n                }\n            }\n            data \".metadata\" hex\"a2646970667358221220adf2b38a732861660f04da398dcbf5f0a73b9385f39a351dcc054f232f32d63d64736f6c63430008110033\"\n        }\n    }\n}\n","hash":"01000149084e3596f9c6ece0147183edf71bd883c9d75c83790a0ddd625b5df6","factoryDependencies":{"0100004183928552137bb299e683df59b5c4644944861ff209e8262bed10426e":"contracts/smart-contract-wallet/Proxy.sol:Proxy","0100009320ea28c62247b5cd289f5da7a960e1b4ae9a558299e94b8e0fe3cfd0":"contracts/smart-contract-wallet/handler/DefaultCallbackHandler.sol:DefaultCallbackHandler"}}},"contracts/smart-contract-wallet/base/Executor.sol":{"Executor":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"value","type":"uint256"},{"indexed":true,"internalType":"bytes","name":"data","type":"bytes"},{"indexed":false,"internalType":"enum Enum.Operation","name":"operation","type":"uint8"},{"indexed":false,"internalType":"uint256","name":"txGas","type":"uint256"}],"name":"ExecutionFailure","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"value","type":"uint256"},{"indexed":true,"internalType":"bytes","name":"data","type":"bytes"},{"indexed":false,"internalType":"enum Enum.Operation","name":"operation","type":"uint8"},{"indexed":false,"internalType":"uint256","name":"txGas","type":"uint256"}],"name":"ExecutionSuccess","type":"event"}],"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"enum Enum.Operation\",\"name\":\"operation\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"txGas\",\"type\":\"uint256\"}],\"name\":\"ExecutionFailure\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"enum Enum.Operation\",\"name\":\"operation\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"txGas\",\"type\":\"uint256\"}],\"name\":\"ExecutionSuccess\",\"type\":\"event\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"title\":\"Executor - A contract that can execute transactions\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/smart-contract-wallet/base/Executor.sol\":\"Executor\"},\"evmVersion\":\"london\",\"libraries\":{\":__CACHE_BREAKER__\":\"0x00000000d41867734bbee4c6863d9255b2b06ac1\"},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"contracts/smart-contract-wallet/base/Executor.sol\":{\"keccak256\":\"0x578ee56ff18e80fbf5ae28644ddc47f6a480e906d676caca3b43df89ef425647\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://a038b142793c435c9b3a349c808a4d7c8c934a57d82c32384c36501c5069891f\",\"dweb:/ipfs/QmQUUJcbjTjeJQFjFVk6D6a3EtVbkwEsRHmRVcc1FJmuRr\"]},\"contracts/smart-contract-wallet/common/Enum.sol\":{\"keccak256\":\"0x657464511d99c53126e008910b266875b299d6e328e105203cb53b6f467acdac\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://d31ced2b537c575f21e5d78989076ce76df8befb276d75c79cf64e44031ae527\",\"dweb:/ipfs/QmNh5E4sTYkphUs8P4rZ8WCQUkWZmjwAAyPzSr612rEs8C\"]}},\"version\":1}","devdoc":{"kind":"dev","methods":{},"title":"Executor - A contract that can execute transactions","version":1},"userdoc":{"kind":"user","methods":{},"version":1},"storageLayout":{"storage":[],"types":null},"evm":{"legacyAssembly":null,"assembly":null,"bytecode":null,"methodIdentifiers":{}},"irOptimized":""}},"contracts/smart-contract-wallet/base/FallbackManager.sol":{"FallbackManager":{"abi":[{"inputs":[{"internalType":"address","name":"caller","type":"address"}],"name":"CallerIsNotSelf","type":"error"},{"inputs":[],"name":"HandlerCannotBeZero","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousHandler","type":"address"},{"indexed":true,"internalType":"address","name":"handler","type":"address"}],"name":"ChangedFallbackHandler","type":"event"},{"stateMutability":"nonpayable","type":"fallback"},{"inputs":[],"name":"getFallbackHandler","outputs":[{"internalType":"address","name":"_handler","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"handler","type":"address"}],"name":"setFallbackHandler","outputs":[],"stateMutability":"nonpayable","type":"function"}],"metadata":{"optimizer_settings":"M3B3","solc_metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"}],\"name\":\"CallerIsNotSelf\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"HandlerCannotBeZero\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousHandler\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"handler\",\"type\":\"address\"}],\"name\":\"ChangedFallbackHandler\",\"type\":\"event\"},{\"stateMutability\":\"nonpayable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"getFallbackHandler\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"_handler\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"handler\",\"type\":\"address\"}],\"name\":\"setFallbackHandler\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Fallback calls are handled by a `handler` contract that is stored at FALLBACK_HANDLER_STORAGE_SLOT        fallback calls are not delegated to the `handler` so they can not directly change Smart Account storage\",\"errors\":{\"CallerIsNotSelf(address)\":[{\"params\":{\"caller\":\"Caller address\"}}]},\"kind\":\"dev\",\"methods\":{\"setFallbackHandler(address)\":{\"details\":\"Allows to add a contract to handle fallback calls.      Only fallback calls without value and with data will be forwarded.      This can only be done via a smartAccount transaction.\",\"params\":{\"handler\":\"contract to handle fallback calls.\"}}},\"title\":\"Fallback Manager - A contract that manages fallback calls made to the Smart Account\",\"version\":1},\"userdoc\":{\"errors\":{\"CallerIsNotSelf(address)\":[{\"notice\":\"Throws when the caller is not address(this)\"}],\"HandlerCannotBeZero()\":[{\"notice\":\"Throws if zero address has been provided as Fallback Handler address\"}]},\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/smart-contract-wallet/base/FallbackManager.sol\":\"FallbackManager\"},\"evmVersion\":\"london\",\"libraries\":{\":__CACHE_BREAKER__\":\"0x00000000d41867734bbee4c6863d9255b2b06ac1\"},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"contracts/smart-contract-wallet/base/FallbackManager.sol\":{\"keccak256\":\"0xe3b6dbcfb3bfa65dba011674892778d1578d40421d0ed7700e1ac2582541954e\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://479d9add893ed5b96c9be32d2fceec345fbe60ca03b3a26ffd7fe91afaafb678\",\"dweb:/ipfs/QmWmVeiLU19Bk3s5R57oDMZibRNsB8tb279kRx1JrAHsCh\"]},\"contracts/smart-contract-wallet/common/Errors.sol\":{\"keccak256\":\"0xef2989dcfc2aedddfd76865faa371b7cfb1e4e40592cc31d6d4151914f1a6aaa\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://8248d7e170d8ff5d67e62c2e0528e3700dfdc3f08eb6fa8a2a6d7c3c5fafee76\",\"dweb:/ipfs/QmbEpeNpBqHbu4Gx2nwGweynRJRoe5NdGCZZ64TPxRdn3X\"]},\"contracts/smart-contract-wallet/common/SelfAuthorized.sol\":{\"keccak256\":\"0xaff7f31a495e6455b386d215dc8413efb816ca340b7a4254ea1c799766451b2f\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://0cdda0e1a507a8faca7fcbab22324c5a26ddd0be417488de48a86b983b8ceacc\",\"dweb:/ipfs/QmTC2y5o6skp95sStYU86Djetk3HPvTXoZrDMaYFnKuBJG\"]}},\"version\":1}","zk_version":"1.3.10"},"devdoc":{"details":"Fallback calls are handled by a `handler` contract that is stored at FALLBACK_HANDLER_STORAGE_SLOT        fallback calls are not delegated to the `handler` so they can not directly change Smart Account storage","errors":{"CallerIsNotSelf(address)":[{"params":{"caller":"Caller address"}}]},"kind":"dev","methods":{"setFallbackHandler(address)":{"details":"Allows to add a contract to handle fallback calls.      Only fallback calls without value and with data will be forwarded.      This can only be done via a smartAccount transaction.","params":{"handler":"contract to handle fallback calls."}}},"title":"Fallback Manager - A contract that manages fallback calls made to the Smart Account","version":1},"userdoc":{"errors":{"CallerIsNotSelf(address)":[{"notice":"Throws when the caller is not address(this)"}],"HandlerCannotBeZero()":[{"notice":"Throws if zero address has been provided as Fallback Handler address"}]},"kind":"user","methods":{},"version":1},"storageLayout":{"storage":[{"astId":4516,"contract":"contracts/smart-contract-wallet/base/FallbackManager.sol:FallbackManager","label":"__gap","offset":0,"slot":"0","type":"t_array(t_uint256)24_storage"}],"types":{"t_array(t_uint256)24_storage":{"base":"t_uint256","encoding":"inplace","label":"uint256[24]","numberOfBytes":"768"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}},"evm":{"legacyAssembly":null,"assembly":"\t.text\n\t.file\t\"FallbackManager.sol:FallbackManager\"\n\t.globl\t__entry\n__entry:\n.func_begin0:\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, r4\n\tptr.add\tr1, r4, stack[@ptr_return_data]\n\tptr.add\tr1, r0, stack[@ptr_calldata]\n\tand\t@CPI0_0[0], r3, stack[@calldatasize]\n\tadd\t0, r0, stack[@returndatasize]\n\tadd\t128, r0, r1\n\tst.1\t64, r1\n\tand!\t1, r2, r1\n\tjump.ne\t@.BB0_1\n\tadd\tstack[@calldatasize], r0, r1\n\tsub.s!\t4, r1, r1\n\tjump.lt\t@.BB0_7\n\tptr.add\tstack[@ptr_calldata], r0, r1\n\tld\tr1, r1\n\tshr.s\t224, r1, r1\n\tsub.s!\t@CPI0_2[0], r1, r2\n\tjump.eq\t@.BB0_8\n\tsub.s!\t@CPI0_3[0], r1, r1\n\tjump.ne\t@.BB0_7\n\tcontext.get_context_u128\tr1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r0, r1\n\tadd\tstack[@calldatasize], r1, r1\n\tadd\t@CPI0_4[0], r0, r2\n\tsub.s!\t32, r1, r3\n\tadd\t0, r0, r3\n\tadd.lt\tr2, r0, r3\n\tand\t@CPI0_4[0], r1, r1\n\tsub.s!\t0, r1, r4\n\tadd.le\t0, r0, r2\n\tsub.s!\t@CPI0_4[0], r1, r1\n\tadd\tr3, r0, r1\n\tadd.eq\tr2, r0, r1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_2\n\tadd\t4, r0, r1\n\tptr.add\tstack[@ptr_calldata], r1, r1\n\tld\tr1, r1\n\tand\t@CPI0_5[0], r1, r6\n\tsub.s!\t@CPI0_5[0], r1, r2\n\tjump.gt\t@.BB0_2\n\tcontext.caller\tr2\n\tcontext.this\tr3\n\tsub!\tr2, r3, r3\n\tjump.ne\t@.BB0_15\n\tsub.s!\t0, r6, r2\n\tjump.ne\t@.BB0_18\n\tld.1\t64, r1\n\tadd\t@CPI0_11[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t@CPI0_0[0], r0, r2\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI0_12[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_1:\n\tcontext.get_context_u128\tr1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_2\n\tadd\t32, r0, r1\n\tst.2\t256, r1\n\tst.2\t288, r0\n\tadd\t@CPI0_1[0], r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_7:\n\tcontext.get_context_u128\tr1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_2\n\tadd\t@CPI0_8[0], r0, r1\n\tsload\tr1, r2\n\tsub.s!\t0, r2, r1\n\tjump.ne\t@.BB0_21\n.BB0_19:\n\tadd\tr0, r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_8:\n\tcontext.get_context_u128\tr1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r0, r1\n\tadd\tstack[@calldatasize], r1, r1\n\tadd\t@CPI0_4[0], r0, r2\n\tsub.s!\t0, r1, r3\n\tadd\t0, r0, r3\n\tadd.lt\tr2, r0, r3\n\tand\t@CPI0_4[0], r1, r1\n\tsub.s!\t0, r1, r4\n\tadd.le\t0, r0, r2\n\tsub.s!\t@CPI0_4[0], r1, r1\n\tadd\tr3, r0, r1\n\tadd.eq\tr2, r0, r1\n\tsub.s!\t0, r1, r1\n\tjump.eq\t@.BB0_10\n.BB0_2:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_21:\n\tptr.add\tstack[@ptr_calldata], r0, r1\n\tadd\tstack[@calldatasize], r0, r3\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r3\n\tjump.eq\t@.BB0_39\n\tadd\tr0, r0, r5\n.BB0_23:\n\tshl.s\t5, r5, r6\n\tptr.add\tr1, r6, r7\n\tld\tr7, r7\n\tst.1\tr6, r7\n\tadd\t1, r5, r5\n\tsub!\tr5, r3, r6\n\tjump.lt\t@.BB0_23\n.BB0_39:\n\tsub.s!\t0, r4, r5\n\tjump.eq\t@.BB0_25\n\tshl.s\t3, r4, r4\n\tshl.s\t5, r3, r3\n\tld.1\tr3, r5\n\tshl\tr5, r4, r5\n\tshr\tr5, r4, r5\n\tptr.add\tr1, r3, r1\n\tld\tr1, r1\n\tsub\t256, r4, r4\n\tshr\tr1, r4, r1\n\tshl\tr1, r4, r1\n\tor\tr1, r5, r1\n\tst.1\tr3, r1\n.BB0_25:\n\tcontext.caller\tr1\n\tshl.s\t96, r1, r1\n\tadd\tstack[@calldatasize], r0, r3\n\tst.1\tr3, r1\n\tadd\tstack[@calldatasize], r0, r3\n\tcontext.gas_left\tr1\n\tsub.s!\t4, r2, r4\n\tjump.ne\t@.BB0_30\n\tptr.add\tstack[@ptr_return_data], r0, r1\n\tadd\tstack[@returndatasize], r0, r2\n\tand\t31, r2, r3\n\tshr.s!\t5, r2, r2\n\tjump.eq\t@.BB0_37\n\tadd\tr0, r0, r4\n.BB0_28:\n\tshl.s\t5, r4, r5\n\tptr.add\tr1, r5, r6\n\tld\tr6, r6\n\tst.1\tr5, r6\n\tadd\t1, r4, r4\n\tsub!\tr4, r2, r5\n\tjump.lt\t@.BB0_28\n.BB0_37:\n\tsub.s!\t0, r3, r4\n\tjump.eq\t@.BB0_36\n\tshl.s\t3, r3, r3\n\tshl.s\t5, r2, r2\n\tld.1\tr2, r4\n\tshl\tr4, r3, r4\n\tshr\tr4, r3, r4\n\tptr.add\tr1, r2, r1\n\tld\tr1, r1\n\tsub\t256, r3, r3\n\tshr\tr1, r3, r1\n\tshl\tr1, r3, r1\n\tor\tr1, r4, r1\n\tst.1\tr2, r1\n\tjump\t@.BB0_36\n.BB0_30:\n\tadd\t20, r3, r3\n\tadd\t@CPI0_0[0], r0, r4\n\tsub.s!\t@CPI0_0[0], r3, r5\n\tadd.ge\tr4, r0, r3\n\tsub.s!\t@CPI0_0[0], r1, r5\n\tadd.ge\tr4, r0, r1\n\tshl.s\t192, r1, r1\n\tshl.s\t96, r3, r3\n\tor\tr3, r1, r1\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r4\n\tand\t31, r4, r3\n\tand\t@CPI0_0[0], r4, stack[@returndatasize]\n\tand\t@CPI0_0[0], r4, r4\n\tshr.s!\t5, r4, r4\n\tjump.eq\t@.BB0_38\n\tadd\tr0, r0, r5\n.BB0_32:\n\tshl.s\t5, r5, r6\n\tptr.add\tr1, r6, r7\n\tld\tr7, r7\n\tst.1\tr6, r7\n\tadd\t1, r5, r5\n\tsub!\tr5, r4, r6\n\tjump.lt\t@.BB0_32\n.BB0_38:\n\tsub.s!\t0, r3, r5\n\tjump.eq\t@.BB0_34\n\tshl.s\t3, r3, r3\n\tshl.s\t5, r4, r4\n\tld.1\tr4, r5\n\tshl\tr5, r3, r5\n\tshr\tr5, r3, r5\n\tptr.add\tr1, r4, r1\n\tld\tr1, r1\n\tsub\t256, r3, r3\n\tshr\tr1, r3, r1\n\tshl\tr1, r3, r1\n\tor\tr1, r5, r1\n\tst.1\tr4, r1\n.BB0_34:\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB0_35\n.BB0_36:\n\tadd\t@CPI0_0[0], r0, r1\n\tadd\tstack[@returndatasize], r0, r2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t96, r1, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_10:\n\tadd\t@CPI0_8[0], r0, r1\n\tsload\tr1, r1\n\tand\t@CPI0_5[0], r1, r1\n\tst.1\t128, r1\n\tadd\t@CPI0_13[0], r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_35:\n\tadd\t@CPI0_0[0], r0, r1\n\tadd\tstack[@returndatasize], r0, r2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t96, r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_15:\n\tld.1\t64, r1\n\tadd\t@CPI0_6[0], r0, r3\n\tst.1\tr1, r3\n\tadd\t4, r1, r3\n\tst.1\tr3, r2\n\tadd\t@CPI0_0[0], r0, r2\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI0_7[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_18:\n\tadd\t@CPI0_8[0], r0, r2\n\tsload\tr2, r3\n\tsstore\tr2, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r4\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_9[0], r1, r1\n\tand\t@CPI0_5[0], r3, r5\n\tadd\t32781, r0, r2\n\tadd\t3, r0, r3\n\tadd\t@CPI0_10[0], r0, r4\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB0_2\n\tjump\t@.BB0_19\n.func_end0:\n\n__farcall:\n.func_begin1:\n.tmp0:\n\tfar_call\tr1, r2, @.BB1_2\n.tmp1:\n\tadd\t1, r0, r2\n\tret\n.BB1_2:\n.tmp2:\n\tadd\tr0, r0, r2\n\tret\n.func_end1:\n\n\t.data\n\t.p2align\t5\ncalldatasize:\n\t.cell 0\n\n\t.p2align\t5\nreturndatasize:\n\t.cell 0\n\n\t.p2align\t5\nptr_calldata:\n.cell\t0\n\n\t.p2align\t5\nptr_return_data:\n.cell\t0\n\n\t.note.GNU-stack\n\t.rodata\nCPI0_0:\n\t.cell 4294967295\nCPI0_1:\n\t.cell 53919893334301279589334030174039261352344891250716429051063678533632\nCPI0_2:\n\t.cell 2238578073\nCPI0_3:\n\t.cell 4035576611\nCPI0_4:\n\t.cell -57896044618658097711785492504343953926634992332820282019728792003956564819968\nCPI0_5:\n\t.cell 1461501637330902918203684832716283019655932542975\nCPI0_6:\n\t.cell 2314961652484223842056734184372588521163998588986964575063179370186355507200\nCPI0_7:\n\t.cell 2852213850513516153367582212096\nCPI0_8:\n\t.cell 49122629484629529244014240937346711770925847994644146912111677022347558721748\nCPI0_9:\n\t.cell 904625697166532776746648320380374280103671755200316906558262375061821325312\nCPI0_10:\n\t.cell 3050641655321938317497333562880296954050227422519783909568816504046463548172\nCPI0_11:\n\t.cell -15709704161145320379701698757057496128826133089162708542800665795699417284608\nCPI0_12:\n\t.cell 316912650057057350374175801344\nCPI0_13:\n\t.cell 2535301202817642044428229017600\n","bytecode":{"object":"000400000000000200000000030100190000006003300270000000400430019700030000004103550002000000010355000000400030019d000100000000001f0000008001000039000000400010043f00000001012001900000003c0000c13d0000000001000031000000040110008c000000440000413d0000000201000367000000000101043b000000e001100270000000420210009c0000004d0000613d000000430110009c000000440000c13d0000000001000416000000000110004c0000005e0000c13d000000040100008a00000000011000310000004402000041000000200310008c000000000300001900000000030240190000004401100197000000000410004c000000000200a019000000440110009c00000000010300190000000001026019000000000110004c0000005e0000c13d00000004010000390000000201100367000000000101043b0000004506100197000000450210009c0000005e0000213d00000000020004110000000003000410000000000332004b000000db0000c13d000000000260004c000000e60000c13d000000400100043d0000004b0200004100000000002104350000004002000041000000400310009c000000000102801900000040011002100000004c011001c7000000fe000104300000000001000416000000000110004c0000005e0000c13d0000002001000039000001000010044300000120000004430000004101000041000000fd0001042e0000000001000416000000000110004c0000005e0000c13d0000004801000041000000000201041a000000000120004c000000600000c13d0000000001000019000000fd0001042e0000000001000416000000000110004c0000005e0000c13d000000040100008a00000000011000310000004402000041000000000310004c000000000300001900000000030240190000004401100197000000000410004c000000000200a019000000440110009c00000000010300190000000001026019000000000110004c000000cf0000613d0000000001000019000000fe00010430000000020100036700000000030000310000001f0430018f00000005033002720000006d0000613d00000000050000190000000506500210000000000761034f000000000707043b00000000007604350000000105500039000000000635004b000000660000413d000000000540004c0000007b0000613d00000003044002100000000503300210000000000503043300000000054501cf000000000545022f000000000131034f000000000101043b0000010004400089000000000141022f00000000014101cf000000000151019f0000000000130435000000000100041100000060011002100000000003000031000000000013043500000000030000310000000001000414000000040420008c0000009f0000c13d000000030100036700000001020000310000001f0320018f0000000502200272000000900000613d00000000040000190000000505400210000000000651034f000000000606043b00000000006504350000000104400039000000000524004b000000890000413d000000000430004c000000c90000613d00000003033002100000000502200210000000000402043300000000043401cf000000000434022f000000000121034f000000000101043b0000010003300089000000000131022f00000000013101cf000000000141019f0000000000120435000000c90000013d00000014033000390000004004000041000000400530009c0000000003048019000000400510009c0000000001048019000000c0011002100000006003300210000000000113019f00fc00f70000040f0003000000010355000000000301001900000060043002700000001f0340018f000100400040019d00000040044001970000000504400272000000b90000613d00000000050000190000000506500210000000000761034f000000000707043b00000000007604350000000105500039000000000645004b000000b20000413d000000000530004c000000c70000613d00000003033002100000000504400210000000000504043300000000053501cf000000000535022f000000000141034f000000000101043b0000010003300089000000000131022f00000000013101cf000000000151019f00000000001404350000000101200190000000d50000613d00000040010000410000000102000031000000400320009c00000000010240190000006001100210000000fd0001042e0000004801000041000000000101041a0000004501100197000000800010043f0000004d01000041000000fd0001042e00000040010000410000000102000031000000400320009c00000000010240190000006001100210000000fe00010430000000400100043d00000046030000410000000000310435000000040310003900000000002304350000004002000041000000400310009c0000000001028019000000400110021000000047011001c7000000fe000104300000004802000041000000000302041a000000000012041b00000040010000410000000002000414000000400420009c0000000001024019000000c00110021000000049011001c700000045053001970000800d0200003900000003030000390000004a0400004100fc00f70000040f00000001012001900000005e0000613d0000004b0000013d000000fa002104210000000102000039000000000001042d0000000002000019000000000001042d000000fc00000432000000fd0001042e000000fe00010430000000000000000000000000000000000000000000000000000000000000000000000000ffffffff000000020000000000000000000000000000004000000100000000000000000000000000000000000000000000000000000000000000000000000000856dfd9900000000000000000000000000000000000000000000000000000000f08a03238000000000000000000000000000000000000000000000000000000000000000000000000000000000000000ffffffffffffffffffffffffffffffffffffffff051e38cc0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000240000000000000000000000006c9a6c4a39284e37ed1cf53d337577d14212a4870fb976a4366c693b939918d4020000000000000000000000000000000000000000000000000000000000000006be9a1bea257286cf2afa8205ed494ca9d6a4b41aa58d04238deebada20fb0cdd449f5f00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000400000000000000000000000000000000000000000000000000000000000000200000008000000000000000006cf96e9e414b54fdd3e08496c70743371f78b253bdd96ea0c0be7ba898ee473b"},"methodIdentifiers":{"getFallbackHandler()":"856dfd99","setFallbackHandler(address)":"f08a0323"}},"irOptimized":"/// @use-src 15:\"contracts/smart-contract-wallet/base/FallbackManager.sol\", 18:\"contracts/smart-contract-wallet/common/Errors.sol\", 21:\"contracts/smart-contract-wallet/common/SelfAuthorized.sol\"\nobject \"FallbackManager_4517\" {\n    code {\n        {\n            /// @src 15:516:3209  \"contract FallbackManager is SelfAuthorized, FallbackManagerErrors {...\"\n            let _1 := memoryguard(0x80)\n            mstore(64, _1)\n            if callvalue() { revert(0, 0) }\n            let _2 := datasize(\"FallbackManager_4517_deployed\")\n            codecopy(_1, dataoffset(\"FallbackManager_4517_deployed\"), _2)\n            return(_1, _2)\n        }\n    }\n    /// @use-src 15:\"contracts/smart-contract-wallet/base/FallbackManager.sol\", 21:\"contracts/smart-contract-wallet/common/SelfAuthorized.sol\"\n    object \"FallbackManager_4517_deployed\" {\n        code {\n            {\n                /// @src 15:516:3209  \"contract FallbackManager is SelfAuthorized, FallbackManagerErrors {...\"\n                mstore(64, 128)\n                if iszero(lt(calldatasize(), 4))\n                {\n                    let _1 := 0\n                    switch shr(224, calldataload(_1))\n                    case 0x856dfd99 {\n                        if callvalue() { revert(_1, _1) }\n                        if slt(add(calldatasize(), not(3)), _1) { revert(_1, _1) }\n                        mstore(128, and(/** @src 15:2150:2231  \"assembly {...\" */ sload(49122629484629529244014240937346711770925847994644146912111677022347558721748), /** @src 15:516:3209  \"contract FallbackManager is SelfAuthorized, FallbackManagerErrors {...\" */ sub(shl(160, 1), 1)))\n                        return(128, 32)\n                    }\n                    case 0xf08a0323 {\n                        if callvalue() { revert(_1, _1) }\n                        if slt(add(calldatasize(), not(3)), 32) { revert(_1, _1) }\n                        let value := calldataload(4)\n                        let _2 := sub(shl(160, 1), 1)\n                        let _3 := and(value, _2)\n                        if iszero(eq(value, _3)) { revert(_1, _1) }\n                        /// @src 21:306:373  \"if (msg.sender != address(this)) revert CallerIsNotSelf(msg.sender)\"\n                        if /** @src 21:310:337  \"msg.sender != address(this)\" */ iszero(eq(/** @src 21:310:320  \"msg.sender\" */ caller(), /** @src 21:332:336  \"this\" */ address()))\n                        /// @src 21:306:373  \"if (msg.sender != address(this)) revert CallerIsNotSelf(msg.sender)\"\n                        {\n                            /// @src 21:346:373  \"CallerIsNotSelf(msg.sender)\"\n                            let _4 := /** @src 15:516:3209  \"contract FallbackManager is SelfAuthorized, FallbackManagerErrors {...\" */ mload(64)\n                            /// @src 21:346:373  \"CallerIsNotSelf(msg.sender)\"\n                            mstore(_4, shl(226, 0x01478e33))\n                            /// @src 15:516:3209  \"contract FallbackManager is SelfAuthorized, FallbackManagerErrors {...\"\n                            mstore(/** @src 21:346:373  \"CallerIsNotSelf(msg.sender)\" */ add(_4, /** @src 15:516:3209  \"contract FallbackManager is SelfAuthorized, FallbackManagerErrors {...\" */ 4), /** @src 21:310:320  \"msg.sender\" */ caller())\n                            /// @src 21:346:373  \"CallerIsNotSelf(msg.sender)\"\n                            revert(_4, /** @src 15:516:3209  \"contract FallbackManager is SelfAuthorized, FallbackManagerErrors {...\" */ 36)\n                        }\n                        /// @src 15:2674:2762  \"assembly {...\"\n                        let _5 := 49122629484629529244014240937346711770925847994644146912111677022347558721748\n                        let var_previousHandler := sload(_5)\n                        /// @src 15:2940:2995  \"if (handler == address(0)) revert HandlerCannotBeZero()\"\n                        if /** @src 15:2944:2965  \"handler == address(0)\" */ iszero(/** @src 15:516:3209  \"contract FallbackManager is SelfAuthorized, FallbackManagerErrors {...\" */ _3)\n                        /// @src 15:2940:2995  \"if (handler == address(0)) revert HandlerCannotBeZero()\"\n                        {\n                            /// @src 15:2974:2995  \"HandlerCannotBeZero()\"\n                            let _6 := /** @src 15:516:3209  \"contract FallbackManager is SelfAuthorized, FallbackManagerErrors {...\" */ mload(64)\n                            /// @src 15:2974:2995  \"HandlerCannotBeZero()\"\n                            mstore(_6, shl(224, 0xdd449f5f))\n                            revert(_6, /** @src 15:516:3209  \"contract FallbackManager is SelfAuthorized, FallbackManagerErrors {...\" */ 4)\n                        }\n                        /// @src 15:3115:3169  \"assembly {...\"\n                        sstore(/** @src 15:2674:2762  \"assembly {...\" */ _5, /** @src 15:3115:3169  \"assembly {...\" */ value)\n                        /// @src 15:2814:2862  \"ChangedFallbackHandler(previousHandler, handler)\"\n                        log3(/** @src 15:516:3209  \"contract FallbackManager is SelfAuthorized, FallbackManagerErrors {...\" */ _1, _1, /** @src 15:2814:2862  \"ChangedFallbackHandler(previousHandler, handler)\" */ 0x06be9a1bea257286cf2afa8205ed494ca9d6a4b41aa58d04238deebada20fb0c, /** @src 15:516:3209  \"contract FallbackManager is SelfAuthorized, FallbackManagerErrors {...\" */ and(/** @src 15:2814:2862  \"ChangedFallbackHandler(previousHandler, handler)\" */ var_previousHandler, /** @src 15:516:3209  \"contract FallbackManager is SelfAuthorized, FallbackManagerErrors {...\" */ _2), /** @src 15:2814:2862  \"ChangedFallbackHandler(previousHandler, handler)\" */ _3)\n                        /// @src 15:516:3209  \"contract FallbackManager is SelfAuthorized, FallbackManagerErrors {...\"\n                        return(_1, _1)\n                    }\n                }\n                if callvalue() { revert(0, 0) }\n                fun()\n            }\n            /// @ast-id 4462 @src 15:989:2007  \"fallback() external {...\"\n            function fun()\n            {\n                /// @src 15:1129:2001  \"assembly {...\"\n                let usr$handler := sload(/** @src 15:731:797  \"0x6c9a6c4a39284e37ed1cf53d337577d14212a4870fb976a4366c693b939918d4\" */ 0x6c9a6c4a39284e37ed1cf53d337577d14212a4870fb976a4366c693b939918d4)\n                /// @src 15:1129:2001  \"assembly {...\"\n                if iszero(usr$handler) { return(0, 0) }\n                let _1 := 0\n                calldatacopy(_1, _1, calldatasize())\n                mstore(calldatasize(), shl(96, caller()))\n                let usr$success := call(gas(), usr$handler, _1, _1, add(calldatasize(), 20), _1, _1)\n                returndatacopy(_1, _1, returndatasize())\n                if iszero(usr$success) { revert(_1, returndatasize()) }\n                return(_1, returndatasize())\n            }\n        }\n        data \".metadata\" hex\"a2646970667358221220e470391ac08bfc30ed01717779e7039090b6140c6a93052442947ebeb0859d3e64736f6c63430008110033\"\n    }\n}\n","hash":"0100004f6cd4a737583ab316c92b981f46f46b2fea6d63615b7e90230c8a35db","factoryDependencies":{}}},"contracts/smart-contract-wallet/base/ModuleManager.sol":{"ModuleManager":{"abi":[{"inputs":[{"internalType":"address","name":"caller","type":"address"}],"name":"CallerIsNotSelf","type":"error"},{"inputs":[{"internalType":"address","name":"module","type":"address"}],"name":"ModuleAlreadyEnabled","type":"error"},{"inputs":[{"internalType":"address","name":"expectedModule","type":"address"},{"internalType":"address","name":"returnedModule","type":"address"},{"internalType":"address","name":"prevModule","type":"address"}],"name":"ModuleAndPrevModuleMismatch","type":"error"},{"inputs":[{"internalType":"address","name":"module","type":"address"}],"name":"ModuleCannotBeZeroOrSentinel","type":"error"},{"inputs":[{"internalType":"address","name":"module","type":"address"}],"name":"ModuleNotEnabled","type":"error"},{"inputs":[],"name":"ModulesAlreadyInitialized","type":"error"},{"inputs":[],"name":"ModulesSetupExecutionFailed","type":"error"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"module","type":"address"}],"name":"DisabledModule","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"module","type":"address"}],"name":"EnabledModule","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"value","type":"uint256"},{"indexed":true,"internalType":"bytes","name":"data","type":"bytes"},{"indexed":false,"internalType":"enum Enum.Operation","name":"operation","type":"uint8"},{"indexed":false,"internalType":"uint256","name":"txGas","type":"uint256"}],"name":"ExecutionFailure","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"module","type":"address"}],"name":"ExecutionFromModuleFailure","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"module","type":"address"}],"name":"ExecutionFromModuleSuccess","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"value","type":"uint256"},{"indexed":true,"internalType":"bytes","name":"data","type":"bytes"},{"indexed":false,"internalType":"enum Enum.Operation","name":"operation","type":"uint8"},{"indexed":false,"internalType":"uint256","name":"txGas","type":"uint256"}],"name":"ExecutionSuccess","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"module","type":"address"},{"indexed":false,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"},{"indexed":false,"internalType":"bytes","name":"data","type":"bytes"},{"indexed":false,"internalType":"enum Enum.Operation","name":"operation","type":"uint8"}],"name":"ModuleTransaction","type":"event"},{"inputs":[{"internalType":"address","name":"prevModule","type":"address"},{"internalType":"address","name":"module","type":"address"}],"name":"disableModule","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"module","type":"address"}],"name":"enableModule","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"},{"internalType":"enum Enum.Operation","name":"operation","type":"uint8"}],"name":"execTransactionFromModule","outputs":[{"internalType":"bool","name":"success","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"},{"internalType":"enum Enum.Operation","name":"operation","type":"uint8"}],"name":"execTransactionFromModuleReturnData","outputs":[{"internalType":"bool","name":"success","type":"bool"},{"internalType":"bytes","name":"returnData","type":"bytes"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"start","type":"address"},{"internalType":"uint256","name":"pageSize","type":"uint256"}],"name":"getModulesPaginated","outputs":[{"internalType":"address[]","name":"array","type":"address[]"},{"internalType":"address","name":"next","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"module","type":"address"}],"name":"isModuleEnabled","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"metadata":{"optimizer_settings":"M3B3","solc_metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"}],\"name\":\"CallerIsNotSelf\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"module\",\"type\":\"address\"}],\"name\":\"ModuleAlreadyEnabled\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"expectedModule\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"returnedModule\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"prevModule\",\"type\":\"address\"}],\"name\":\"ModuleAndPrevModuleMismatch\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"module\",\"type\":\"address\"}],\"name\":\"ModuleCannotBeZeroOrSentinel\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"module\",\"type\":\"address\"}],\"name\":\"ModuleNotEnabled\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ModulesAlreadyInitialized\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ModulesSetupExecutionFailed\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"module\",\"type\":\"address\"}],\"name\":\"DisabledModule\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"module\",\"type\":\"address\"}],\"name\":\"EnabledModule\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"enum Enum.Operation\",\"name\":\"operation\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"txGas\",\"type\":\"uint256\"}],\"name\":\"ExecutionFailure\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"module\",\"type\":\"address\"}],\"name\":\"ExecutionFromModuleFailure\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"module\",\"type\":\"address\"}],\"name\":\"ExecutionFromModuleSuccess\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"enum Enum.Operation\",\"name\":\"operation\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"txGas\",\"type\":\"uint256\"}],\"name\":\"ExecutionSuccess\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"module\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"enum Enum.Operation\",\"name\":\"operation\",\"type\":\"uint8\"}],\"name\":\"ModuleTransaction\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"prevModule\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"module\",\"type\":\"address\"}],\"name\":\"disableModule\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"module\",\"type\":\"address\"}],\"name\":\"enableModule\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"enum Enum.Operation\",\"name\":\"operation\",\"type\":\"uint8\"}],\"name\":\"execTransactionFromModule\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"enum Enum.Operation\",\"name\":\"operation\",\"type\":\"uint8\"}],\"name\":\"execTransactionFromModuleReturnData\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"returnData\",\"type\":\"bytes\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"start\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"pageSize\",\"type\":\"uint256\"}],\"name\":\"getModulesPaginated\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"array\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"next\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"module\",\"type\":\"address\"}],\"name\":\"isModuleEnabled\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"CallerIsNotSelf(address)\":[{\"params\":{\"caller\":\"Caller address\"}}],\"ModuleAlreadyEnabled(address)\":[{\"params\":{\"module\":\"Module address provided\"}}],\"ModuleAndPrevModuleMismatch(address,address,address)\":[{\"params\":{\"expectedModule\":\"expected module at modules[prevModule]\",\"prevModule\":\"previous module address provided at call\",\"returnedModule\":\"the module that has been found at modules[prevModule]\"}}],\"ModuleCannotBeZeroOrSentinel(address)\":[{\"params\":{\"module\":\"Module address provided\"}}],\"ModuleNotEnabled(address)\":[{\"params\":{\"module\":\"Module address provided\"}}]},\"kind\":\"dev\",\"methods\":{\"disableModule(address,address)\":{\"details\":\"Removes a module from the allowlist.\",\"params\":{\"module\":\"Module to be removed.\",\"prevModule\":\"Module that pointed to the module to be removed in the linked list\"}},\"enableModule(address)\":{\"details\":\"Adds a module to the allowlist.\",\"params\":{\"module\":\"Module to be allow-listed.\"}},\"execTransactionFromModule(address,uint256,bytes,uint8)\":{\"details\":\"Allows a Module to execute a Smart Account transaction without any further confirmations.\",\"params\":{\"data\":\"Data payload of module transaction.\",\"operation\":\"Operation type of module transaction.\",\"to\":\"Destination address of module transaction.\",\"value\":\"Ether value of module transaction.\"}},\"execTransactionFromModuleReturnData(address,uint256,bytes,uint8)\":{\"details\":\"Allows a Module to execute a wallet transaction without any further confirmations and returns data\",\"params\":{\"data\":\"Data payload of module transaction.\",\"operation\":\"Operation type of module transaction.\",\"to\":\"Destination address of module transaction.\",\"value\":\"Ether value of module transaction.\"}},\"getModulesPaginated(address,uint256)\":{\"details\":\"Returns array of modules. Useful for a widget\",\"params\":{\"pageSize\":\"Maximum number of modules that should be returned.\",\"start\":\"Start of the page.\"},\"returns\":{\"array\":\"Array of modules.\",\"next\":\"Start of the next page.\"}},\"isModuleEnabled(address)\":{\"details\":\"Returns if a module is enabled\",\"returns\":{\"_0\":\"True if the module is enabled\"}}},\"title\":\"Module Manager - A contract that manages modules that can execute transactions        on behalf of the Smart Account via this contract.\",\"version\":1},\"userdoc\":{\"errors\":{\"CallerIsNotSelf(address)\":[{\"notice\":\"Throws when the caller is not address(this)\"}],\"ModuleAlreadyEnabled(address)\":[{\"notice\":\"Throws when trying to enable module that has already been enabled\"}],\"ModuleAndPrevModuleMismatch(address,address,address)\":[{\"notice\":\"Throws when module and previous module mismatch\"}],\"ModuleCannotBeZeroOrSentinel(address)\":[{\"notice\":\"Throws when address(0) or SENTINEL_MODULES constant has been provided as a module address\"}],\"ModuleNotEnabled(address)\":[{\"notice\":\"Throws when trying to execute transaction from module that is not enabled\"}],\"ModulesAlreadyInitialized()\":[{\"notice\":\"Throws when trying to initialize module manager that already been initialized\"}],\"ModulesSetupExecutionFailed()\":[{\"notice\":\"Throws when a delegatecall in course of module manager initialization has failed\"}]},\"kind\":\"user\",\"methods\":{\"disableModule(address,address)\":{\"notice\":\"This can only be done via a wallet transaction.Disables the module `module` for the wallet.\"},\"enableModule(address)\":{\"notice\":\"This can only be done via a wallet transaction.Enables the module `module` for the wallet.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/smart-contract-wallet/base/ModuleManager.sol\":\"ModuleManager\"},\"evmVersion\":\"london\",\"libraries\":{\":__CACHE_BREAKER__\":\"0x00000000d41867734bbee4c6863d9255b2b06ac1\"},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"contracts/smart-contract-wallet/base/Executor.sol\":{\"keccak256\":\"0x578ee56ff18e80fbf5ae28644ddc47f6a480e906d676caca3b43df89ef425647\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://a038b142793c435c9b3a349c808a4d7c8c934a57d82c32384c36501c5069891f\",\"dweb:/ipfs/QmQUUJcbjTjeJQFjFVk6D6a3EtVbkwEsRHmRVcc1FJmuRr\"]},\"contracts/smart-contract-wallet/base/ModuleManager.sol\":{\"keccak256\":\"0x98210b7ffe719d9873fb24ef89cbbbc58729412f4e9285bae09e9c205731a665\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://f58685b75663559e39d5980238b9b25c2bd299050e66e47b50266e2dce6738ae\",\"dweb:/ipfs/QmZV3vZ9X1Nt96ty12Vy54n818w2Fafs5gkhkgxQotZxF5\"]},\"contracts/smart-contract-wallet/common/Enum.sol\":{\"keccak256\":\"0x657464511d99c53126e008910b266875b299d6e328e105203cb53b6f467acdac\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://d31ced2b537c575f21e5d78989076ce76df8befb276d75c79cf64e44031ae527\",\"dweb:/ipfs/QmNh5E4sTYkphUs8P4rZ8WCQUkWZmjwAAyPzSr612rEs8C\"]},\"contracts/smart-contract-wallet/common/Errors.sol\":{\"keccak256\":\"0xef2989dcfc2aedddfd76865faa371b7cfb1e4e40592cc31d6d4151914f1a6aaa\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://8248d7e170d8ff5d67e62c2e0528e3700dfdc3f08eb6fa8a2a6d7c3c5fafee76\",\"dweb:/ipfs/QmbEpeNpBqHbu4Gx2nwGweynRJRoe5NdGCZZ64TPxRdn3X\"]},\"contracts/smart-contract-wallet/common/SelfAuthorized.sol\":{\"keccak256\":\"0xaff7f31a495e6455b386d215dc8413efb816ca340b7a4254ea1c799766451b2f\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://0cdda0e1a507a8faca7fcbab22324c5a26ddd0be417488de48a86b983b8ceacc\",\"dweb:/ipfs/QmTC2y5o6skp95sStYU86Djetk3HPvTXoZrDMaYFnKuBJG\"]}},\"version\":1}","zk_version":"1.3.10"},"devdoc":{"errors":{"CallerIsNotSelf(address)":[{"params":{"caller":"Caller address"}}],"ModuleAlreadyEnabled(address)":[{"params":{"module":"Module address provided"}}],"ModuleAndPrevModuleMismatch(address,address,address)":[{"params":{"expectedModule":"expected module at modules[prevModule]","prevModule":"previous module address provided at call","returnedModule":"the module that has been found at modules[prevModule]"}}],"ModuleCannotBeZeroOrSentinel(address)":[{"params":{"module":"Module address provided"}}],"ModuleNotEnabled(address)":[{"params":{"module":"Module address provided"}}]},"kind":"dev","methods":{"disableModule(address,address)":{"details":"Removes a module from the allowlist.","params":{"module":"Module to be removed.","prevModule":"Module that pointed to the module to be removed in the linked list"}},"enableModule(address)":{"details":"Adds a module to the allowlist.","params":{"module":"Module to be allow-listed."}},"execTransactionFromModule(address,uint256,bytes,uint8)":{"details":"Allows a Module to execute a Smart Account transaction without any further confirmations.","params":{"data":"Data payload of module transaction.","operation":"Operation type of module transaction.","to":"Destination address of module transaction.","value":"Ether value of module transaction."}},"execTransactionFromModuleReturnData(address,uint256,bytes,uint8)":{"details":"Allows a Module to execute a wallet transaction without any further confirmations and returns data","params":{"data":"Data payload of module transaction.","operation":"Operation type of module transaction.","to":"Destination address of module transaction.","value":"Ether value of module transaction."}},"getModulesPaginated(address,uint256)":{"details":"Returns array of modules. Useful for a widget","params":{"pageSize":"Maximum number of modules that should be returned.","start":"Start of the page."},"returns":{"array":"Array of modules.","next":"Start of the next page."}},"isModuleEnabled(address)":{"details":"Returns if a module is enabled","returns":{"_0":"True if the module is enabled"}}},"title":"Module Manager - A contract that manages modules that can execute transactions        on behalf of the Smart Account via this contract.","version":1},"userdoc":{"errors":{"CallerIsNotSelf(address)":[{"notice":"Throws when the caller is not address(this)"}],"ModuleAlreadyEnabled(address)":[{"notice":"Throws when trying to enable module that has already been enabled"}],"ModuleAndPrevModuleMismatch(address,address,address)":[{"notice":"Throws when module and previous module mismatch"}],"ModuleCannotBeZeroOrSentinel(address)":[{"notice":"Throws when address(0) or SENTINEL_MODULES constant has been provided as a module address"}],"ModuleNotEnabled(address)":[{"notice":"Throws when trying to execute transaction from module that is not enabled"}],"ModulesAlreadyInitialized()":[{"notice":"Throws when trying to initialize module manager that already been initialized"}],"ModulesSetupExecutionFailed()":[{"notice":"Throws when a delegatecall in course of module manager initialization has failed"}]},"kind":"user","methods":{"disableModule(address,address)":{"notice":"This can only be done via a wallet transaction.Disables the module `module` for the wallet."},"enableModule(address)":{"notice":"This can only be done via a wallet transaction.Enables the module `module` for the wallet."}},"version":1},"storageLayout":{"storage":[{"astId":4543,"contract":"contracts/smart-contract-wallet/base/ModuleManager.sol:ModuleManager","label":"modules","offset":0,"slot":"0","type":"t_mapping(t_address,t_address)"},{"astId":4923,"contract":"contracts/smart-contract-wallet/base/ModuleManager.sol:ModuleManager","label":"__gap","offset":0,"slot":"1","type":"t_array(t_uint256)24_storage"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_array(t_uint256)24_storage":{"base":"t_uint256","encoding":"inplace","label":"uint256[24]","numberOfBytes":"768"},"t_mapping(t_address,t_address)":{"encoding":"mapping","key":"t_address","label":"mapping(address => address)","numberOfBytes":"32","value":"t_address"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}},"evm":{"legacyAssembly":null,"assembly":"\t.text\n\t.file\t\"ModuleManager.sol:ModuleManager\"\n\t.globl\t__entry\n__entry:\n.func_begin0:\n\tnop\tstack+=[5]\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, r4\n\tptr.add\tr1, r4, stack[@ptr_return_data]\n\tptr.add\tr1, r0, stack[@ptr_calldata]\n\tand\t@CPI0_0[0], r3, stack[@calldatasize]\n\tadd\t0, r0, stack[@returndatasize]\n\tadd\t128, r0, r1\n\tst.1\t64, r1\n\tand!\t1, r2, r1\n\tjump.ne\t@.BB0_1\n\tadd\tstack[@calldatasize], r0, r1\n\tsub.s!\t4, r1, r1\n\tjump.lt\t@.BB0_2\n\tptr.add\tstack[@ptr_calldata], r0, r1\n\tld\tr1, r1\n\tshr.s\t224, r1, r1\n\tsub.s!\t@CPI0_2[0], r1, r2\n\tjump.gt\t@.BB0_9\n\tsub.s!\t@CPI0_6[0], r1, r2\n\tjump.eq\t@.BB0_12\n\tsub.s!\t@CPI0_7[0], r1, r2\n\tjump.eq\t@.BB0_19\n\tsub.s!\t@CPI0_8[0], r1, r1\n\tjump.ne\t@.BB0_2\n\tcontext.get_context_u128\tr1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_2\n\tadd\tstack[@calldatasize], r0, r1\n\tnear_call\tr0, @abi_decode_addresst_uint256t_bytest_enum_Operation, @DEFAULT_UNWIND\n\tnear_call\tr0, @fun_execTransactionFromModule, @DEFAULT_UNWIND\n\tld.1\t64, r3\n\tadd\t32, r3, r2\n\tadd\tstack[@returndatasize], r2, r4\n\tst.1\t64, r4\n\tadd\tstack[@returndatasize], r0, r4\n\tst.1\tr3, r4\n\tptr.add\tstack[@ptr_return_data], r0, r4\n\tadd\tstack[@returndatasize], r0, r6\n\tand\t31, r6, r5\n\tshr.s!\t5, r6, r6\n\tjump.eq\t@.BB0_78\n\tadd\tr0, r0, r7\n.BB0_24:\n\tshl.s\t5, r7, r8\n\tadd\tr2, r8, r9\n\tptr.add\tr4, r8, r8\n\tld\tr8, r8\n\tst.1\tr9, r8\n\tadd\t1, r7, r7\n\tsub!\tr7, r6, r8\n\tjump.lt\t@.BB0_24\n.BB0_78:\n\tsub.s!\t0, r5, r7\n\tjump.eq\t@.BB0_26\n\tshl.s\t5, r6, r6\n\tptr.add\tr4, r6, r4\n\tadd\tr2, r6, r2\n\tshl.s\t3, r5, r5\n\tld.1\tr2, r6\n\tshl\tr6, r5, r6\n\tshr\tr6, r5, r6\n\tld\tr4, r4\n\tsub\t256, r5, r5\n\tshr\tr4, r5, r4\n\tshl\tr4, r5, r4\n\tor\tr4, r6, r4\n\tst.1\tr2, r4\n.BB0_26:\n\tld.1\t64, r5\n\tadd\tr5, r0, stack-[5]\n\tadd\t32, r5, r2\n\tadd\t64, r0, r4\n\tst.1\tr2, r4\n\tsub.s!\t0, r1, r1\n\tadd\t0, r0, r1\n\tadd.ne\t1, r0, r1\n\tst.1\tr5, r1\n\tadd\t64, r5, r2\n\tadd\tr3, r0, r1\n\tnear_call\tr0, @abi_encode_bytes, @DEFAULT_UNWIND\n\tadd\tstack-[5], r0, r4\n\tsub\tr1, r4, r1\n\tadd\t@CPI0_0[0], r0, r2\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tsub.s!\t@CPI0_0[0], r4, r3\n\tadd.lt\tr4, r0, r2\n\tshl.s\t64, r2, r2\n\tshl.s\t96, r1, r1\n\tor\tr1, r2, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_1:\n\tcontext.get_context_u128\tr1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_2\n\tadd\t32, r0, r1\n\tst.2\t256, r1\n\tst.2\t288, r0\n\tadd\t@CPI0_1[0], r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_9:\n\tsub.s!\t@CPI0_3[0], r1, r2\n\tjump.eq\t@.BB0_27\n\tsub.s!\t@CPI0_4[0], r1, r2\n\tjump.eq\t@.BB0_42\n\tsub.s!\t@CPI0_5[0], r1, r1\n\tjump.ne\t@.BB0_2\n\tcontext.get_context_u128\tr1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r0, r1\n\tadd\tstack[@calldatasize], r1, r1\n\tadd\t@CPI0_9[0], r0, r2\n\tsub.s!\t64, r1, r3\n\tadd\t0, r0, r3\n\tadd.lt\tr2, r0, r3\n\tand\t@CPI0_9[0], r1, r1\n\tsub.s!\t0, r1, r4\n\tadd.le\t0, r0, r2\n\tsub.s!\t@CPI0_9[0], r1, r1\n\tadd\tr3, r0, r1\n\tadd.eq\tr2, r0, r1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_2\n\tptr.add\tstack[@ptr_calldata], r0, r1\n\tptr.add.s\t4, r1, r2\n\tld\tr2, r5\n\tsub.s!\t@CPI0_10[0], r5, r2\n\tjump.gt\t@.BB0_2\n\tptr.add.s\t36, r1, r1\n\tld\tr1, r4\n\tsub.s!\t@CPI0_10[0], r4, r1\n\tjump.gt\t@.BB0_2\n\tcontext.caller\tr1\n\tcontext.this\tr2\n\tsub!\tr1, r2, r2\n\tjump.ne\t@.BB0_68\n\tsub.s!\t1, r4, r1\n\tjump.gt\t@.BB0_71\n\tld.1\t64, r1\n\tadd\t@CPI0_18[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tst.1\tr2, r4\n\tadd\t@CPI0_0[0], r0, r2\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI0_12[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_12:\n\tcontext.get_context_u128\tr1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r0, r1\n\tadd\tstack[@calldatasize], r1, r1\n\tadd\t@CPI0_9[0], r0, r2\n\tsub.s!\t32, r1, r3\n\tadd\t0, r0, r3\n\tadd.lt\tr2, r0, r3\n\tand\t@CPI0_9[0], r1, r1\n\tsub.s!\t0, r1, r4\n\tadd.le\t0, r0, r2\n\tsub.s!\t@CPI0_9[0], r1, r1\n\tadd\tr3, r0, r1\n\tadd.eq\tr2, r0, r1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_2\n\tadd\t4, r0, r1\n\tptr.add\tstack[@ptr_calldata], r1, r1\n\tld\tr1, r1\n\tsub.s!\t@CPI0_10[0], r1, r2\n\tjump.gt\t@.BB0_2\n\tsub.s!\t1, r1, r2\n\tadd\tr0, r0, r2\n\tjump.eq\t@.BB0_18\n\tst.1\t0, r1\n\tst.1\t32, r0\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_13[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tsload\tr1, r1\n\tand!\t@CPI0_10[0], r1, r1\n\tadd\t0, r0, r2\n\tadd.ne\t1, r0, r2\n.BB0_18:\n\tand\t1, r2, r1\n\tst.1\t128, r1\n\tadd\t@CPI0_25[0], r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_27:\n\tcontext.get_context_u128\tr1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r0, r1\n\tadd\tstack[@calldatasize], r1, r1\n\tadd\t@CPI0_9[0], r0, r2\n\tsub.s!\t32, r1, r3\n\tadd\t0, r0, r3\n\tadd.lt\tr2, r0, r3\n\tand\t@CPI0_9[0], r1, r1\n\tsub.s!\t0, r1, r4\n\tadd.le\t0, r0, r2\n\tsub.s!\t@CPI0_9[0], r1, r1\n\tadd\tr3, r0, r1\n\tadd.eq\tr2, r0, r1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_2\n\tadd\t4, r0, r1\n\tptr.add\tstack[@ptr_calldata], r1, r1\n\tld\tr1, r3\n\tsub.s!\t@CPI0_10[0], r3, r1\n\tjump.gt\t@.BB0_2\n\tcontext.caller\tr1\n\tcontext.this\tr2\n\tsub!\tr1, r2, r2\n\tjump.ne\t@.BB0_31\n\tsub.s!\t1, r3, r1\n\tjump.gt\t@.BB0_34\n\tld.1\t64, r1\n\tadd\t@CPI0_18[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tst.1\tr2, r3\n\tadd\t@CPI0_0[0], r0, r2\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI0_12[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_19:\n\tcontext.get_context_u128\tr1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_2\n\tadd\tstack[@calldatasize], r0, r1\n\tnear_call\tr0, @abi_decode_addresst_uint256t_bytest_enum_Operation, @DEFAULT_UNWIND\n\tnear_call\tr0, @fun_execTransactionFromModule, @DEFAULT_UNWIND\n\tsub.s!\t0, r1, r1\n\tadd\t0, r0, r1\n\tadd.ne\t1, r0, r1\n\tld.1\t64, r2\n\tst.1\tr2, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI0_24[0], r1, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_42:\n\tcontext.get_context_u128\tr1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r0, r1\n\tadd\tstack[@calldatasize], r1, r1\n\tadd\t@CPI0_9[0], r0, r2\n\tsub.s!\t64, r1, r3\n\tadd\t0, r0, r3\n\tadd.lt\tr2, r0, r3\n\tand\t@CPI0_9[0], r1, r1\n\tsub.s!\t0, r1, r4\n\tadd.le\t0, r0, r2\n\tsub.s!\t@CPI0_9[0], r1, r1\n\tadd\tr3, r0, r1\n\tadd.eq\tr2, r0, r1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_2\n\tptr.add\tstack[@ptr_calldata], r0, r2\n\tptr.add.s\t4, r2, r1\n\tld\tr1, r1\n\tsub.s!\t@CPI0_10[0], r1, r3\n\tjump.le\t@.BB0_45\n.BB0_2:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_45:\n\tptr.add.s\t36, r2, r2\n\tld\tr2, r6\n\tsub.s!\t@CPI0_19[0], r6, r2\n\tjump.lt\t@.BB0_47\n.BB0_46:\n\tadd\t@CPI0_21[0], r0, r1\n\tst.1\t0, r1\n\tadd\t65, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI0_12[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_31:\n\tld.1\t64, r2\n\tadd\t@CPI0_11[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t4, r2, r3\n\tst.1\tr3, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI0_12[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_47:\n\tshl.s\t5, r6, r4\n\tadd\t63, r4, r2\n\tsub.s\t32, r0, r3\n\tand\tr2, r3, r2\n\tld.1\t64, r3\n\tadd\tr3, r2, r2\n\tadd\tr3, r0, stack-[4]\n\tsub!\tr2, r3, r3\n\tadd\t0, r0, r3\n\tadd.lt\t1, r0, r3\n\tsub.s!\t@CPI0_20[0], r2, r5\n\tjump.gt\t@.BB0_46\n\tand!\t1, r3, r3\n\tjump.ne\t@.BB0_46\n\tst.1\t64, r2\n\tadd\tr6, r0, stack-[3]\n\tadd\tstack-[4], r0, r2\n\tst.1.inc\tr2, r6, r8\n\tand\t31, r4, r2\n\tadd\tstack[@calldatasize], r0, r3\n\tptr.add\tstack[@ptr_calldata], r3, r3\n\tshr.s!\t5, r4, r4\n\tjump.eq\t@.BB0_79\n\tadd\tr0, r0, r5\n.BB0_51:\n\tshl.s\t5, r5, r6\n\tadd\tr8, r6, r7\n\tptr.add\tr3, r6, r6\n\tld\tr6, r6\n\tst.1\tr7, r6\n\tadd\t1, r5, r5\n\tsub!\tr5, r4, r6\n\tjump.lt\t@.BB0_51\n.BB0_79:\n\tsub.s!\t0, r2, r5\n\tjump.eq\t@.BB0_53\n\tshl.s\t5, r4, r4\n\tptr.add\tr3, r4, r3\n\tadd\tr8, r4, r4\n\tshl.s\t3, r2, r2\n\tld.1\tr4, r5\n\tshl\tr5, r2, r5\n\tshr\tr5, r2, r5\n\tld\tr3, r3\n\tsub\t256, r2, r2\n\tshr\tr3, r2, r3\n\tshl\tr3, r2, r2\n\tor\tr2, r5, r2\n\tst.1\tr4, r2\n.BB0_53:\n\tadd\tr8, r0, stack-[2]\n\tst.1\t0, r1\n\tst.1\t32, r0\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_13[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tsload\tr1, r1\n\tand\t@CPI0_10[0], r1, r3\n\tsub.s!\t2, r3, r1\n\tadd\tr0, r0, r4\n\tadd\tstack-[3], r0, r1\n\tjump.lt\t@.BB0_57\n\tsub.s!\t0, r1, r1\n\tadd\tr0, r0, r4\n\tjump.eq\t@.BB0_57\n\tadd\t32784, r0, r1\n\tadd\tr1, r0, stack-[1]\n\tadd\tr0, r0, r4\n.BB0_58:\n\tadd\tstack-[4], r0, r1\n\tld.1\tr1, r1\n\tsub!\tr1, r4, r1\n\tjump.le\t@.BB0_59\n\tadd\tr4, r0, stack-[5]\n\tshl.s\t5, r4, r1\n\tadd\tstack-[2], r0, r2\n\tadd\tr1, r2, r1\n\tst.1\tr1, r3\n\tst.1\t0, r3\n\tst.1\t32, r0\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_13[0], r1, r1\n\tadd\tstack-[1], r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tadd\tstack-[5], r0, r4\n\tadd\t1, r4, r4\n\tld\tr1, r1\n\tsload\tr1, r1\n\tand\t@CPI0_10[0], r1, r3\n\tsub.s!\t2, r3, r1\n\tadd\tstack-[3], r0, r1\n\tjump.lt\t@.BB0_57\n\tsub!\tr4, r1, r1\n\tjump.lt\t@.BB0_58\n.BB0_57:\n\tadd\tstack-[4], r0, r2\n\tst.1\tr2, r4\n\tld.1\t64, r1\n\tadd\tr1, r0, stack-[5]\n\tnear_call\tr0, @abi_encode_array_address_dyn_address, @DEFAULT_UNWIND\n\tadd\tstack-[5], r0, r4\n\tsub\tr1, r4, r1\n\tadd\t@CPI0_0[0], r0, r2\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tsub.s!\t@CPI0_0[0], r4, r3\n\tadd.lt\tr4, r0, r2\n\tshl.s\t64, r2, r2\n\tshl.s\t96, r1, r1\n\tor\tr1, r2, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_34:\n\tst.1\t0, r3\n\tst.1\t32, r0\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tadd\tr3, r0, stack-[5]\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_13[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tstack-[5], r0, r3\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tsload\tr1, r1\n\tand!\t@CPI0_10[0], r1, r1\n\tjump.ne\t@.BB0_36\n\tadd\t1, r0, r1\n\tadd\tr1, r0, stack-[4]\n\tst.1\t0, r1\n\tst.1\t32, r0\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_13[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tstack-[5], r0, r3\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tsload\tr1, r1\n\tadd\tr1, r0, stack-[3]\n\tst.1\t0, r3\n\tst.1\t32, r0\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_13[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tadd\tstack-[3], r0, r2\n\tand\t@CPI0_10[0], r2, r2\n\tld\tr1, r1\n\tsload\tr1, r3\n\tand\t@CPI0_15[0], r3, r3\n\tor\tr3, r2, r2\n\tsstore\tr1, r2\n\tadd\tstack-[4], r0, r1\n\tst.1\t0, r1\n\tst.1\t32, r0\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_13[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tstack-[5], r0, r3\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tsload\tr1, r2\n\tand\t@CPI0_15[0], r2, r2\n\tor\tr2, r3, r2\n\tsstore\tr1, r2\n\tld.1\t64, r1\n\tst.1\tr1, r3\n\tadd\t@CPI0_0[0], r0, r2\n\tcontext.gas_left\tr3\n\tsub.s!\t@CPI0_0[0], r3, r4\n\tadd.ge\tr2, r0, r3\n\tsub.s!\t@CPI0_0[0], r1, r4\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r3, r2\n\tor\tr2, r1, r1\n\tor\t@CPI0_16[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t1, r0, r3\n\tadd\t@CPI0_23[0], r0, r4\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB0_2\n\tjump\t@.BB0_41\n.BB0_68:\n\tld.1\t64, r2\n\tadd\t@CPI0_11[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t4, r2, r3\n\tst.1\tr3, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI0_12[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_71:\n\tst.1\t0, r5\n\tst.1\t32, r0\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_13[0], r1, r1\n\tadd\t32784, r0, r2\n\tadd\tr4, r0, stack-[4]\n\tadd\tr5, r0, stack-[5]\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tstack-[5], r0, r4\n\tadd\tstack-[4], r0, r3\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tsload\tr1, r1\n\tand\t@CPI0_10[0], r1, r1\n\tsub!\tr1, r3, r1\n\tjump.ne\t@.BB0_73\n\tst.1\t0, r3\n\tst.1\t32, r0\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_13[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tstack-[5], r0, r3\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tsload\tr1, r1\n\tadd\tr1, r0, stack-[3]\n\tst.1\t0, r3\n\tst.1\t32, r0\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_13[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tstack-[4], r0, r4\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tadd\tstack-[3], r0, r2\n\tand\t@CPI0_10[0], r2, r2\n\tld\tr1, r1\n\tsload\tr1, r3\n\tand\t@CPI0_15[0], r3, r3\n\tor\tr3, r2, r2\n\tsstore\tr1, r2\n\tst.1\t0, r4\n\tst.1\t32, r0\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_13[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tstack-[4], r0, r3\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tsload\tr1, r2\n\tand\t@CPI0_15[0], r2, r2\n\tsstore\tr1, r2\n\tld.1\t64, r1\n\tst.1\tr1, r3\n\tadd\t@CPI0_0[0], r0, r2\n\tcontext.gas_left\tr3\n\tsub.s!\t@CPI0_0[0], r3, r4\n\tadd.ge\tr2, r0, r3\n\tsub.s!\t@CPI0_0[0], r1, r4\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r3, r2\n\tor\tr2, r1, r1\n\tor\t@CPI0_16[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t1, r0, r3\n\tadd\t@CPI0_17[0], r0, r4\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB0_2\n.BB0_41:\n\tadd\tr0, r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_36:\n\tld.1\t64, r1\n\tadd\t@CPI0_22[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tst.1\tr2, r3\n\tadd\t@CPI0_0[0], r0, r2\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI0_12[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_73:\n\tadd\tr4, r0, r1\n\tnear_call\tr0, @mapping_index_access_mapping_address_address_of_address_2779, @DEFAULT_UNWIND\n\tsload\tr1, r1\n\tld.1\t64, r4\n\tadd\tr4, r0, stack-[3]\n\tadd\t@CPI0_14[0], r0, r2\n\tst.1\tr4, r2\n\tand\t@CPI0_10[0], r1, r3\n\tadd\t4, r4, r1\n\tadd\tstack-[4], r0, r2\n\tadd\tstack-[5], r0, r4\n\tnear_call\tr0, @abi_encode_address_address_address, @DEFAULT_UNWIND\n\tadd\tstack-[3], r0, r4\n\tsub\tr1, r4, r1\n\tadd\t@CPI0_0[0], r0, r2\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tsub.s!\t@CPI0_0[0], r4, r3\n\tadd.lt\tr4, r0, r2\n\tshl.s\t64, r2, r2\n\tshl.s\t96, r1, r1\n\tor\tr1, r2, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_59:\n\tadd\t@CPI0_21[0], r0, r1\n\tst.1\t0, r1\n\tadd\t50, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI0_12[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end0:\n\nabi_decode_addresst_uint256t_bytest_enum_Operation:\n.func_begin1:\n\tadd\tr1, r0, r4\n\tsub.s\t4, r4, r1\n\tadd\t@CPI1_0[0], r0, r2\n\tsub.s!\t127, r1, r3\n\tadd\t0, r0, r3\n\tadd.gt\tr2, r0, r3\n\tand\t@CPI1_0[0], r1, r1\n\tsub.s!\t0, r1, r5\n\tadd.ge\t0, r0, r2\n\tsub.s!\t@CPI1_0[0], r1, r1\n\tadd\tr3, r0, r1\n\tadd.eq\tr2, r0, r1\n\tsub.s!\t0, r1, r1\n\tjump.eq\t@.BB1_1\n\tptr.add\tstack[@ptr_calldata], r0, r3\n\tptr.add.s\t4, r3, r1\n\tld\tr1, r1\n\tsub.s!\t@CPI1_1[0], r1, r2\n\tjump.gt\t@.BB1_1\n\tptr.add.s\t36, r3, r2\n\tld\tr2, r2\n\tptr.add.s\t68, r3, r5\n\tld\tr5, r7\n\tsub.s!\t@CPI1_2[0], r7, r5\n\tjump.gt\t@.BB1_1\n\tadd\t35, r7, r5\n\tadd\t@CPI1_0[0], r0, r6\n\tsub!\tr5, r4, r8\n\tadd\t0, r0, r8\n\tadd.ge\tr6, r0, r8\n\tand\t@CPI1_0[0], r4, r9\n\tand\t@CPI1_0[0], r5, r5\n\tsub!\tr5, r9, r10\n\tadd.ge\t0, r0, r6\n\txor\tr5, r9, r5\n\tsub.s!\t@CPI1_0[0], r5, r5\n\tadd\tr8, r0, r5\n\tadd.eq\tr6, r0, r5\n\tsub.s!\t0, r5, r5\n\tjump.ne\t@.BB1_1\n\tadd\t4, r7, r5\n\tptr.add\tr3, r5, r3\n\tld\tr3, r5\n\tsub.s!\t@CPI1_3[0], r5, r3\n\tjump.ge\t@.BB1_6\n\tadd\t63, r5, r3\n\tsub.s\t32, r0, r6\n\tand\tr3, r6, r6\n\tld.1\t64, r3\n\tadd\tr3, r6, r6\n\tsub!\tr6, r3, r8\n\tadd\t0, r0, r8\n\tadd.lt\t1, r0, r8\n\tsub.s!\t@CPI1_2[0], r6, r9\n\tjump.gt\t@.BB1_6\n\tand!\t1, r8, r8\n\tjump.ne\t@.BB1_6\n\tst.1\t64, r6\n\tst.1.inc\tr3, r5, r6\n\tadd\t36, r7, r7\n\tadd\tr7, r5, r8\n\tsub!\tr8, r4, r4\n\tjump.gt\t@.BB1_1\n\tand\t31, r5, r4\n\tptr.add\tstack[@ptr_calldata], r7, r7\n\tshr.s!\t5, r5, r8\n\tjump.eq\t@.BB1_16\n\tadd\tr0, r0, r9\n.BB1_12:\n\tshl.s\t5, r9, r10\n\tadd\tr6, r10, r11\n\tptr.add\tr7, r10, r10\n\tld\tr10, r10\n\tst.1\tr11, r10\n\tadd\t1, r9, r9\n\tsub!\tr9, r8, r10\n\tjump.lt\t@.BB1_12\n.BB1_16:\n\tsub.s!\t0, r4, r9\n\tjump.eq\t@.BB1_14\n\tshl.s\t5, r8, r8\n\tptr.add\tr7, r8, r7\n\tadd\tr6, r8, r8\n\tshl.s\t3, r4, r4\n\tld.1\tr8, r9\n\tshl\tr9, r4, r9\n\tshr\tr9, r4, r9\n\tld\tr7, r7\n\tsub\t256, r4, r4\n\tshr\tr7, r4, r7\n\tshl\tr7, r4, r4\n\tor\tr4, r9, r4\n\tst.1\tr8, r4\n.BB1_14:\n\tadd\tr6, r5, r4\n\tst.1\tr4, r0\n\tadd\t100, r0, r4\n\tptr.add\tstack[@ptr_calldata], r4, r4\n\tld\tr4, r4\n\tsub.s!\t1, r4, r5\n\tjump.gt\t@.BB1_1\n\tret\n.BB1_1:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB1_6:\n\tadd\t@CPI1_4[0], r0, r1\n\tst.1\t0, r1\n\tadd\t65, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI1_5[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end1:\n\nabi_encode_bytes:\n.func_begin2:\n\tld.1\tr1, r3\n\tst.1.inc\tr2, r3, r2\n\tsub.s!\t0, r3, r4\n\tjump.eq\t@.BB2_3\n\tadd\tr0, r0, r4\n.BB2_2:\n\tadd\tr4, r2, r5\n\tadd\t32, r4, r4\n\tadd\tr4, r1, r6\n\tld.1\tr6, r6\n\tst.1\tr5, r6\n\tsub!\tr4, r3, r5\n\tjump.lt\t@.BB2_2\n.BB2_3:\n\tadd\tr3, r2, r1\n\tst.1\tr1, r0\n\tadd\t31, r3, r1\n\tsub.s\t32, r0, r3\n\tand\tr1, r3, r1\n\tadd\tr2, r1, r1\n\tret\n.func_end2:\n\nabi_encode_array_address_dyn_address:\n.func_begin3:\n\tadd\t64, r0, r4\n\tst.1.inc\tr1, r4, r4\n\tld.1\tr2, r5\n\tadd\t64, r1, r6\n\tst.1\tr6, r5\n\tadd\t96, r1, r1\n\tsub.s!\t0, r5, r6\n\tjump.eq\t@.BB3_3\n\tadd\tr0, r0, r6\n.BB3_2:\n\tadd\t32, r2, r2\n\tld.1\tr2, r7\n\tand\t@CPI3_0[0], r7, r7\n\tst.1.inc\tr1, r7, r1\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB3_2\n.BB3_3:\n\tand\t@CPI3_0[0], r3, r2\n\tst.1\tr4, r2\n\tret\n.func_end3:\n\nmapping_index_access_mapping_address_address_of_address_2779:\n.func_begin4:\n\tand\t@CPI4_0[0], r1, r1\n\tst.1\t0, r1\n\tst.1\t32, r0\n\tadd\t@CPI4_1[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI4_1[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI4_2[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB4_1\n\tld\tr1, r1\n\tret\n.BB4_1:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end4:\n\nabi_encode_address_address_address:\n.func_begin5:\n\tand\t@CPI5_0[0], r4, r4\n\tadd\t64, r1, r5\n\tst.1\tr5, r4\n\tand\t@CPI5_0[0], r3, r3\n\tadd\t32, r1, r4\n\tst.1\tr4, r3\n\tand\t@CPI5_0[0], r2, r2\n\tst.1\tr1, r2\n\tadd\t96, r1, r1\n\tret\n.func_end5:\n\nfun_execTransactionFromModule:\n.func_begin6:\n\tnop\tstack+=[9]\n\tadd\tr4, r0, stack-[8]\n\tadd\tr3, r0, stack-[7]\n\tadd\tr2, r0, stack-[6]\n\tadd\tr1, r0, stack-[9]\n\tcontext.caller\tr1\n\tadd\tr1, r0, stack-[5]\n\tsub.s!\t1, r1, r1\n\tjump.eq\t@.BB6_4\n\tadd\tstack-[5], r0, r1\n\tand\t@CPI6_0[0], r1, r1\n\tadd\tr1, r0, stack-[2]\n\tst.1\t0, r1\n\tst.1\t32, r0\n\tadd\t@CPI6_1[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI6_1[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI6_2[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB6_2\n\tld\tr1, r1\n\tsload\tr1, r1\n\tand!\t@CPI6_0[0], r1, r1\n\tjump.eq\t@.BB6_4\n\tcontext.gas_left\tr1\n\tadd\tr1, r0, stack-[4]\n\tadd\tstack-[8], r0, r2\n\tsub.s!\t2, r2, r1\n\tadd\tstack-[7], r0, r6\n\tjump.ge\t@.BB6_6\n\tsub.s!\t1, r2, r1\n\tjump.ne\t@.BB6_9\n\tadd\tstack-[9], r0, r1\n\tsub.s!\t4, r1, r1\n\tjump.eq\t@.BB6_21\n\tadd\t32, r6, r1\n\tadd\t@CPI6_1[0], r0, r2\n\tsub.s!\t@CPI6_1[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tld.1\tr6, r3\n\tsub.s!\t@CPI6_1[0], r3, r4\n\tadd.ge\tr2, r0, r3\n\tshl.s\t96, r3, r3\n\tor\tr3, r1, r1\n\tadd\tstack-[4], r0, r4\n\tsub.s!\t@CPI6_1[0], r4, r3\n\tadd.lt\tr4, r0, r2\n\tshl.s\t192, r2, r2\n\tor\tr1, r2, r1\n\tadd\tstack-[9], r0, r2\n\tnear_call\tr0, @__delegatecall, @DEFAULT_UNWIND\n\tjump\t@.BB6_8\n.BB6_9:\n\tadd\tstack-[9], r0, r1\n\tsub.s!\t4, r1, r1\n\tjump.eq\t@.BB6_21\n\tadd\t32, r6, r1\n\tadd\t@CPI6_1[0], r0, r2\n\tsub.s!\t@CPI6_1[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tld.1\tr6, r3\n\tsub.s!\t@CPI6_1[0], r3, r4\n\tadd.ge\tr2, r0, r3\n\tshl.s\t96, r3, r3\n\tor\tr3, r1, r1\n\tadd\tstack-[4], r0, r4\n\tsub.s!\t@CPI6_1[0], r4, r3\n\tadd.lt\tr4, r0, r2\n\tshl.s\t192, r2, r2\n\tor\tr1, r2, r1\n\tadd\tstack-[6], r0, r3\n\tsub.s!\t0, r3, r2\n\tjump.eq\t@.BB6_11\n\tor\t@CPI6_3[0], r1, r1\n\tadd\t32777, r0, r2\n\tadd\tstack-[9], r0, r4\n\tadd\tr0, r0, r5\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tjump\t@.BB6_8\n.BB6_11:\n\tadd\tstack-[9], r0, r2\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n.BB6_8:\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tshr.s\t96, r1, r1\n\tand\t@CPI6_1[0], r1, stack[@returndatasize]\n\tand!\t1, r2, r1\n\tadd\tstack-[7], r0, r6\n\tjump.eq\t@.BB6_16\n.BB6_21:\n\tld.1\t64, r2\n\tld.1\tr6, r1\n\tsub.s!\t0, r1, r3\n\tjump.eq\t@.BB6_24\n\tadd\tr0, r0, r3\n.BB6_23:\n\tadd\tr3, r2, r4\n\tadd\t32, r3, r3\n\tadd\tr3, r6, r5\n\tld.1\tr5, r5\n\tst.1\tr4, r5\n\tsub!\tr3, r1, r4\n\tjump.lt\t@.BB6_23\n.BB6_24:\n\tadd\tr1, r2, r3\n\tst.1\tr3, r0\n\tadd\t@CPI6_1[0], r0, r3\n\tsub.s!\t@CPI6_1[0], r2, r4\n\tadd.ge\tr3, r0, r2\n\tshl.s\t64, r2, r2\n\tsub.s!\t@CPI6_1[0], r1, r4\n\tadd.ge\tr3, r0, r1\n\tshl.s\t96, r1, r1\n\tor\tr1, r2, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI6_1[0], r2, r4\n\tadd.ge\tr3, r0, r2\n\tshl.s\t192, r2, r2\n\tor\tr2, r1, r1\n\tor\t@CPI6_3[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB6_2\n\tld\tr1, r7\n\tld.1\t64, r1\n\tadd\t32, r1, r2\n\tadd\tstack-[4], r0, r3\n\tst.1\tr2, r3\n\tadd\tstack-[8], r0, r2\n\tst.1\tr1, r2\n\tadd\t@CPI6_1[0], r0, r2\n\tcontext.gas_left\tr3\n\tsub.s!\t@CPI6_1[0], r3, r4\n\tadd.ge\tr2, r0, r3\n\tsub.s!\t@CPI6_1[0], r1, r4\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r3, r2\n\tor\tr2, r1, r1\n\tor\t@CPI6_2[0], r1, r1\n\tadd\tstack-[9], r0, r2\n\tand\t@CPI6_0[0], r2, r5\n\tadd\t32781, r0, r2\n\tadd\t4, r0, r3\n\tadd\t@CPI6_6[0], r0, r4\n\tadd\tstack-[6], r0, r6\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tadd\t1, r0, r1\n\tadd\tr1, r0, stack-[3]\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB6_2\n.BB6_28:\n\tld.1\t64, r1\n\tadd\t96, r1, r2\n\tadd\t160, r0, r3\n\tst.1\tr2, r3\n\tadd\t64, r1, r2\n\tadd\tstack-[6], r0, r3\n\tst.1\tr2, r3\n\tadd\tstack-[9], r0, r2\n\tand\t@CPI6_0[0], r2, r2\n\tadd\t32, r1, r3\n\tst.1\tr3, r2\n\tadd\tstack-[2], r0, r2\n\tst.1\tr1, r2\n\tadd\tstack-[7], r0, r7\n\tld.1\tr7, r2\n\tadd\t160, r1, r3\n\tst.1\tr3, r2\n\tadd\t192, r1, r3\n\tsub.s!\t0, r2, r4\n\tjump.eq\t@.BB6_31\n\tadd\tr0, r0, r4\n.BB6_30:\n\tadd\tr4, r3, r5\n\tadd\t32, r4, r4\n\tadd\tr4, r7, r6\n\tld.1\tr6, r6\n\tst.1\tr5, r6\n\tsub!\tr4, r2, r5\n\tjump.lt\t@.BB6_30\n.BB6_31:\n\tadd\tr2, r3, r3\n\tst.1\tr3, r0\n\tadd\t128, r1, r3\n\tadd\tstack-[8], r0, r4\n\tst.1\tr3, r4\n\tadd\t223, r2, r2\n\tsub.s\t32, r0, r3\n\tand\tr2, r3, r2\n\tadd\t@CPI6_1[0], r0, r3\n\tsub.s!\t@CPI6_1[0], r1, r4\n\tadd.ge\tr3, r0, r1\n\tshl.s\t64, r1, r1\n\tsub.s!\t@CPI6_1[0], r2, r4\n\tadd.ge\tr3, r0, r2\n\tshl.s\t96, r2, r2\n\tor\tr2, r1, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI6_1[0], r2, r4\n\tadd.ge\tr3, r0, r2\n\tshl.s\t192, r2, r2\n\tor\tr2, r1, r1\n\tor\t@CPI6_3[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t1, r0, r3\n\tadd\t@CPI6_7[0], r0, r4\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB6_2\n\tadd\t@CPI6_1[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI6_1[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI6_3[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t2, r0, r3\n\tadd\t@CPI6_8[0], r0, r4\n\tadd\tstack-[5], r0, r5\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB6_2\n.BB6_26:\n\tadd\tstack-[3], r0, r1\n\tret\n.BB6_16:\n\tadd\tr2, r0, stack-[1]\n\tadd\tr1, r0, stack-[3]\n\tld.1\t64, r2\n\tld.1\tr6, r1\n\tsub.s!\t0, r1, r3\n\tjump.eq\t@.BB6_19\n\tadd\tr0, r0, r3\n.BB6_18:\n\tadd\tr3, r2, r4\n\tadd\t32, r3, r3\n\tadd\tr3, r6, r5\n\tld.1\tr5, r5\n\tst.1\tr4, r5\n\tsub!\tr3, r1, r4\n\tjump.lt\t@.BB6_18\n.BB6_19:\n\tadd\tr1, r2, r3\n\tst.1\tr3, r0\n\tadd\t@CPI6_1[0], r0, r3\n\tsub.s!\t@CPI6_1[0], r2, r4\n\tadd.ge\tr3, r0, r2\n\tshl.s\t64, r2, r2\n\tsub.s!\t@CPI6_1[0], r1, r4\n\tadd.ge\tr3, r0, r1\n\tshl.s\t96, r1, r1\n\tor\tr1, r2, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI6_1[0], r2, r4\n\tadd.ge\tr3, r0, r2\n\tshl.s\t192, r2, r2\n\tor\tr2, r1, r1\n\tor\t@CPI6_3[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB6_2\n\tld\tr1, r7\n\tld.1\t64, r1\n\tadd\t32, r1, r2\n\tadd\tstack-[4], r0, r3\n\tst.1\tr2, r3\n\tadd\tstack-[8], r0, r2\n\tst.1\tr1, r2\n\tadd\t@CPI6_1[0], r0, r2\n\tcontext.gas_left\tr3\n\tsub.s!\t@CPI6_1[0], r3, r4\n\tadd.ge\tr2, r0, r3\n\tsub.s!\t@CPI6_1[0], r1, r4\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r3, r2\n\tor\tr2, r1, r1\n\tor\t@CPI6_2[0], r1, r1\n\tadd\tstack-[9], r0, r2\n\tand\t@CPI6_0[0], r2, r5\n\tadd\t32781, r0, r2\n\tadd\t4, r0, r3\n\tadd\t@CPI6_4[0], r0, r4\n\tadd\tstack-[6], r0, r6\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB6_2\n\tadd\tstack-[1], r0, r1\n\tand!\t1, r1, r1\n\tjump.ne\t@.BB6_28\n\tadd\t@CPI6_1[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI6_1[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI6_3[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t2, r0, r3\n\tadd\t@CPI6_5[0], r0, r4\n\tadd\tstack-[5], r0, r5\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.ne\t@.BB6_26\n.BB6_2:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB6_4:\n\tld.1\t64, r1\n\tadd\t@CPI6_11[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\tstack-[5], r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI6_1[0], r0, r2\n\tsub.s!\t@CPI6_1[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI6_10[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB6_6:\n\tadd\t@CPI6_9[0], r0, r1\n\tst.1\t0, r1\n\tadd\t33, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI6_10[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end6:\n\n__farcall:\n.func_begin7:\n.tmp0:\n\tfar_call\tr1, r2, @.BB7_2\n.tmp1:\n\tadd\t1, r0, r2\n\tret\n.BB7_2:\n.tmp2:\n\tadd\tr0, r0, r2\n\tret\n.func_end7:\n\n__staticcall:\n.func_begin8:\n.tmp3:\n\tfar_call.static\tr1, r2, @.BB8_2\n.tmp4:\n\tadd\t1, r0, r2\n\tret\n.BB8_2:\n.tmp5:\n\tadd\tr0, r0, r2\n\tret\n.func_end8:\n\n__delegatecall:\n.func_begin9:\n.tmp6:\n\tfar_call.delegate\tr1, r2, @.BB9_2\n.tmp7:\n\tadd\t1, r0, r2\n\tret\n.BB9_2:\n.tmp8:\n\tadd\tr0, r0, r2\n\tret\n.func_end9:\n\n\t.data\n\t.p2align\t5\ncalldatasize:\n\t.cell 0\n\n\t.p2align\t5\nreturndatasize:\n\t.cell 0\n\n\t.p2align\t5\nptr_calldata:\n.cell\t0\n\n\t.p2align\t5\nptr_return_data:\n.cell\t0\n\n\t.note.GNU-stack\n\t.rodata\nCPI0_0:\nCPI4_1:\nCPI6_1:\n\t.cell 4294967295\nCPI0_1:\n\t.cell 53919893334301279589334030174039261352344891250716429051063678533632\nCPI0_2:\n\t.cell 1628133668\nCPI0_3:\n\t.cell 1628133669\nCPI0_4:\n\t.cell 3425666130\nCPI0_5:\n\t.cell 3758739422\nCPI0_6:\n\t.cell 765121853\nCPI0_7:\n\t.cell 1183261095\nCPI0_8:\n\t.cell 1378420543\nCPI0_9:\nCPI1_0:\n\t.cell -57896044618658097711785492504343953926634992332820282019728792003956564819968\nCPI0_10:\nCPI1_1:\nCPI3_0:\nCPI4_0:\nCPI5_0:\nCPI6_0:\n\t.cell 1461501637330902918203684832716283019655932542975\nCPI0_11:\n\t.cell 2314961652484223842056734184372588521163998588986964575063179370186355507200\nCPI0_12:\nCPI1_5:\nCPI6_10:\n\t.cell 2852213850513516153367582212096\nCPI0_13:\nCPI4_2:\nCPI6_2:\n\t.cell 904625697166532776746648320380374280103671760270919307471179981048634146816\nCPI0_14:\n\t.cell -27115295163996308542689286182685994841426253681583558077691935547779591438336\nCPI0_15:\n\t.cell -1461501637330902918203684832716283019655932542976\nCPI0_16:\n\t.cell 904625697166532776746648320380374280103671757735618107014721178055227736064\nCPI0_17:\n\t.cell -38579145903238477197690838637025038479173759962435433734891280069874589285770\nCPI0_18:\n\t.cell -24037701998169060941142924209013206991109443846958145368026601719897769639936\nCPI0_19:\nCPI1_3:\n\t.cell 18446744073709551616\nCPI0_20:\nCPI1_2:\n\t.cell 18446744073709551615\nCPI0_21:\nCPI1_4:\nCPI6_9:\n\t.cell 35408467139433450592217433187231851964531694900788300625387963629091585785856\nCPI0_22:\n\t.cell -35002526962794589999028044383678213636377093982549288464129534555198721097728\nCPI0_23:\n\t.cell -8651848076463903823918924292415382029599645115761830655193662184890266844096\nCPI0_24:\n\t.cell 2535301200456458802993406410752\nCPI0_25:\n\t.cell 2535301202817642044428229017600\nCPI6_3:\n\t.cell 904625697166532776746648320380374280103671755200316906558262375061821325312\nCPI6_4:\n\t.cell 27981581538126626394111396837360047489659402739770898519645427668349645522762\nCPI6_5:\n\t.cell -37621858024393364081336463131611671964906787500860187320155741432839870360715\nCPI6_6:\n\t.cell -57074129454889732134992093672753772871569639904641530318939980404317901135378\nCPI6_7:\n\t.cell -52465983478078648807994228814405349807294238958331094407573419044041028934950\nCPI6_8:\n\t.cell 47305129968795024967062117798590983053302821274770012008259295614936177962168\nCPI6_11:\n\t.cell 15231080076131608330228446859497313224453929124109104688295471312989107257344\n","bytecode":{"object":""},"methodIdentifiers":{"disableModule(address,address)":"e009cfde","enableModule(address)":"610b5925","execTransactionFromModule(address,uint256,bytes,uint8)":"468721a7","execTransactionFromModuleReturnData(address,uint256,bytes,uint8)":"5229073f","getModulesPaginated(address,uint256)":"cc2f8452","isModuleEnabled(address)":"2d9ad53d"}},"irOptimized":"/// @use-src 14:\"contracts/smart-contract-wallet/base/Executor.sol\", 16:\"contracts/smart-contract-wallet/base/ModuleManager.sol\", 18:\"contracts/smart-contract-wallet/common/Errors.sol\", 21:\"contracts/smart-contract-wallet/common/SelfAuthorized.sol\"\nobject \"ModuleManager_4924\" {\n    code {\n        {\n            /// @src 16:391:7205  \"contract ModuleManager is SelfAuthorized, Executor, ModuleManagerErrors {...\"\n            let _1 := memoryguard(0x80)\n            mstore(64, _1)\n            if callvalue() { revert(0, 0) }\n            let _2 := datasize(\"ModuleManager_4924_deployed\")\n            codecopy(_1, dataoffset(\"ModuleManager_4924_deployed\"), _2)\n            return(_1, _2)\n        }\n    }\n    /// @use-src 14:\"contracts/smart-contract-wallet/base/Executor.sol\", 16:\"contracts/smart-contract-wallet/base/ModuleManager.sol\", 21:\"contracts/smart-contract-wallet/common/SelfAuthorized.sol\"\n    object \"ModuleManager_4924_deployed\" {\n        code {\n            {\n                /// @src 16:391:7205  \"contract ModuleManager is SelfAuthorized, Executor, ModuleManagerErrors {...\"\n                mstore(64, 128)\n                if iszero(lt(calldatasize(), 4))\n                {\n                    let _1 := 0\n                    switch shr(224, calldataload(_1))\n                    case 0x2d9ad53d {\n                        if callvalue() { revert(_1, _1) }\n                        if slt(add(calldatasize(), not(3)), 32) { revert(_1, _1) }\n                        let _2 := sub(shl(160, 1), 1)\n                        let _3 := and(abi_decode_address_2774(), _2)\n                        /// @src 16:6335:6394  \"SENTINEL_MODULES != module && modules[module] != address(0)\"\n                        let expr := /** @src 16:6335:6361  \"SENTINEL_MODULES != module\" */ iszero(eq(/** @src 16:522:525  \"0x1\" */ 0x01, /** @src 16:391:7205  \"contract ModuleManager is SelfAuthorized, Executor, ModuleManagerErrors {...\" */ _3))\n                        /// @src 16:6335:6394  \"SENTINEL_MODULES != module && modules[module] != address(0)\"\n                        if expr\n                        {\n                            /// @src 16:391:7205  \"contract ModuleManager is SelfAuthorized, Executor, ModuleManagerErrors {...\"\n                            mstore(_1, _3)\n                            mstore(32, _1)\n                            /// @src 16:6335:6394  \"SENTINEL_MODULES != module && modules[module] != address(0)\"\n                            expr := /** @src 16:6365:6394  \"modules[module] != address(0)\" */ iszero(iszero(/** @src 16:391:7205  \"contract ModuleManager is SelfAuthorized, Executor, ModuleManagerErrors {...\" */ and(sload(keccak256(_1, 64)), _2)))\n                        }\n                        mstore(128, iszero(iszero(expr)))\n                        return(128, 32)\n                    }\n                    case 0x468721a7 {\n                        external_fun_execTransactionFromModule()\n                    }\n                    case 0x5229073f {\n                        external_fun_execTransactionFromModuleReturnData()\n                    }\n                    case 0x610b5925 { external_fun_enableModule() }\n                    case 0xcc2f8452 {\n                        external_fun_getModulesPaginated()\n                    }\n                    case 0xe009cfde { external_fun_disableModule() }\n                }\n                revert(0, 0)\n            }\n            function cleanup_address(value) -> cleaned\n            {\n                cleaned := and(value, sub(shl(160, 1), 1))\n            }\n            function abi_decode_address_2774() -> value\n            {\n                value := calldataload(4)\n                if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n            }\n            function abi_decode_address() -> value\n            {\n                value := calldataload(36)\n                if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n            }\n            function panic_error_0x41()\n            {\n                mstore(0, shl(224, 0x4e487b71))\n                mstore(4, 0x41)\n                revert(0, 0x24)\n            }\n            function allocate_memory(size) -> memPtr\n            {\n                memPtr := mload(64)\n                let newFreePtr := add(memPtr, and(add(size, 31), not(31)))\n                if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n                mstore(64, newFreePtr)\n            }\n            function abi_decode_enum_Operation() -> value\n            {\n                value := calldataload(100)\n                if iszero(lt(value, 2)) { revert(0, 0) }\n            }\n            function abi_decode_addresst_uint256t_bytest_enum_Operation(dataEnd) -> value0, value1, value2, value3\n            {\n                if slt(add(dataEnd, not(3)), 128) { revert(0, 0) }\n                value0 := abi_decode_address_2774()\n                value1 := calldataload(36)\n                let offset := calldataload(68)\n                let _1 := 0xffffffffffffffff\n                if gt(offset, _1) { revert(0, 0) }\n                if iszero(slt(add(offset, 35), dataEnd))\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 16:391:7205  \"contract ModuleManager is SelfAuthorized, Executor, ModuleManagerErrors {...\"\n                let _2 := calldataload(add(4, offset))\n                if gt(_2, _1) { panic_error_0x41() }\n                let array := allocate_memory(add(and(add(_2, 0x1f), not(31)), 32))\n                mstore(array, _2)\n                if gt(add(add(offset, _2), 36), dataEnd)\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 16:391:7205  \"contract ModuleManager is SelfAuthorized, Executor, ModuleManagerErrors {...\"\n                calldatacopy(add(array, 32), add(offset, 36), _2)\n                mstore(add(add(array, _2), 32), /** @src -1:-1:-1 */ 0)\n                /// @src 16:391:7205  \"contract ModuleManager is SelfAuthorized, Executor, ModuleManagerErrors {...\"\n                value2 := array\n                value3 := abi_decode_enum_Operation()\n            }\n            function external_fun_execTransactionFromModule()\n            {\n                if callvalue() { revert(0, 0) }\n                let param, param_1, param_2, param_3 := abi_decode_addresst_uint256t_bytest_enum_Operation(calldatasize())\n                let ret := fun_execTransactionFromModule(param, param_1, param_2, param_3)\n                let memPos := mload(64)\n                mstore(memPos, iszero(iszero(ret)))\n                return(memPos, 32)\n            }\n            function copy_memory_to_memory_with_cleanup(src, dst, length)\n            {\n                let i := 0\n                for { } lt(i, length) { i := add(i, 32) }\n                {\n                    mstore(add(dst, i), mload(add(src, i)))\n                }\n                mstore(add(dst, length), 0)\n            }\n            function abi_encode_bytes(value, pos) -> end\n            {\n                let length := mload(value)\n                mstore(pos, length)\n                copy_memory_to_memory_with_cleanup(add(value, 0x20), add(pos, 0x20), length)\n                end := add(add(pos, and(add(length, 31), not(31))), 0x20)\n            }\n            function external_fun_execTransactionFromModuleReturnData()\n            {\n                if callvalue() { revert(0, 0) }\n                let param, param_1, param_2, param_3 := abi_decode_addresst_uint256t_bytest_enum_Operation(calldatasize())\n                /// @src 16:5401:5464  \"success = execTransactionFromModule(to, value, data, operation)\"\n                let var_success := /** @src 16:5411:5464  \"execTransactionFromModule(to, value, data, operation)\" */ fun_execTransactionFromModule(param, param_1, param_2, param_3)\n                /// @src 16:5530:6134  \"assembly {...\"\n                let usr$ptr := mload(0x40)\n                mstore(0x40, add(add(usr$ptr, returndatasize()), 0x20))\n                mstore(usr$ptr, returndatasize())\n                returndatacopy(add(usr$ptr, 0x20), /** @src -1:-1:-1 */ 0, /** @src 16:5530:6134  \"assembly {...\" */ returndatasize())\n                /// @src 16:391:7205  \"contract ModuleManager is SelfAuthorized, Executor, ModuleManagerErrors {...\"\n                let memPos := mload(/** @src 16:5530:6134  \"assembly {...\" */ 0x40)\n                /// @src 16:391:7205  \"contract ModuleManager is SelfAuthorized, Executor, ModuleManagerErrors {...\"\n                mstore(memPos, iszero(iszero(var_success)))\n                mstore(add(memPos, /** @src 16:5530:6134  \"assembly {...\" */ 0x20), 0x40)\n                /// @src 16:391:7205  \"contract ModuleManager is SelfAuthorized, Executor, ModuleManagerErrors {...\"\n                return(memPos, sub(abi_encode_bytes(usr$ptr, add(memPos, /** @src 16:5530:6134  \"assembly {...\" */ 0x40)), /** @src 16:391:7205  \"contract ModuleManager is SelfAuthorized, Executor, ModuleManagerErrors {...\" */ memPos))\n            }\n            function external_fun_enableModule()\n            {\n                if callvalue() { revert(0, 0) }\n                if slt(add(calldatasize(), not(3)), 32)\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 16:391:7205  \"contract ModuleManager is SelfAuthorized, Executor, ModuleManagerErrors {...\"\n                let value0 := abi_decode_address_2774()\n                /// @src 21:386:522  \"modifier authorized() {...\"\n                fun_requireSelfCall()\n                /// @src 16:2431:2451  \"module == address(0)\"\n                let _1 := /** @src 16:391:7205  \"contract ModuleManager is SelfAuthorized, Executor, ModuleManagerErrors {...\" */ and(/** @src 16:2431:2451  \"module == address(0)\" */ value0, /** @src 16:391:7205  \"contract ModuleManager is SelfAuthorized, Executor, ModuleManagerErrors {...\" */ sub(shl(160, 1), 1))\n                /// @src 16:2431:2481  \"module == address(0) || module == SENTINEL_MODULES\"\n                let expr := /** @src 16:2431:2451  \"module == address(0)\" */ iszero(_1)\n                /// @src 16:2431:2481  \"module == address(0) || module == SENTINEL_MODULES\"\n                if iszero(expr)\n                {\n                    expr := /** @src 16:2455:2481  \"module == SENTINEL_MODULES\" */ eq(_1, /** @src 16:522:525  \"0x1\" */ 0x01)\n                }\n                /// @src 16:2427:2538  \"if (module == address(0) || module == SENTINEL_MODULES)...\"\n                if expr\n                {\n                    /// @src 16:2502:2538  \"ModuleCannotBeZeroOrSentinel(module)\"\n                    let _2 := /** @src 16:391:7205  \"contract ModuleManager is SelfAuthorized, Executor, ModuleManagerErrors {...\" */ mload(64)\n                    /// @src 16:2502:2538  \"ModuleCannotBeZeroOrSentinel(module)\"\n                    mstore(_2, shl(224, 0xcadb248f))\n                    revert(_2, sub(abi_encode_address(add(_2, /** @src 16:391:7205  \"contract ModuleManager is SelfAuthorized, Executor, ModuleManagerErrors {...\" */ 4), /** @src 16:2502:2538  \"ModuleCannotBeZeroOrSentinel(module)\" */ value0), _2))\n                }\n                /// @src 16:2589:2659  \"if (modules[module] != address(0)) revert ModuleAlreadyEnabled(module)\"\n                if /** @src 16:2593:2622  \"modules[module] != address(0)\" */ iszero(iszero(cleanup_address(/** @src 16:2593:2608  \"modules[module]\" */ read_from_storage_split_offset_address(mapping_index_access_mapping_address_address_of_address_2779(value0)))))\n                /// @src 16:2589:2659  \"if (modules[module] != address(0)) revert ModuleAlreadyEnabled(module)\"\n                {\n                    /// @src 16:2631:2659  \"ModuleAlreadyEnabled(module)\"\n                    let _3 := /** @src 16:391:7205  \"contract ModuleManager is SelfAuthorized, Executor, ModuleManagerErrors {...\" */ mload(64)\n                    /// @src 16:2631:2659  \"ModuleAlreadyEnabled(module)\"\n                    mstore(_3, shl(224, 0xb29d4595))\n                    revert(_3, sub(abi_encode_address(add(_3, /** @src 16:391:7205  \"contract ModuleManager is SelfAuthorized, Executor, ModuleManagerErrors {...\" */ 4), /** @src 16:2631:2659  \"ModuleAlreadyEnabled(module)\" */ value0), _3))\n                }\n                /// @src 16:2669:2712  \"modules[module] = modules[SENTINEL_MODULES]\"\n                update_storage_value_offsett_address_to_address(/** @src 16:2669:2684  \"modules[module]\" */ mapping_index_access_mapping_address_address_of_address_2779(value0), /** @src 16:2687:2712  \"modules[SENTINEL_MODULES]\" */ read_from_storage_split_offset_address(mapping_index_access_mapping_address_address_of_address_2780()))\n                /// @src 16:2722:2756  \"modules[SENTINEL_MODULES] = module\"\n                update_storage_value_offsett_address_to_address(/** @src 16:2722:2747  \"modules[SENTINEL_MODULES]\" */ mapping_index_access_mapping_address_address_of_address_2780(), /** @src 16:2722:2756  \"modules[SENTINEL_MODULES] = module\" */ value0)\n                /// @src 16:2771:2792  \"EnabledModule(module)\"\n                let _4 := /** @src 16:391:7205  \"contract ModuleManager is SelfAuthorized, Executor, ModuleManagerErrors {...\" */ mload(64)\n                /// @src 16:2771:2792  \"EnabledModule(module)\"\n                log1(_4, sub(abi_encode_address(_4, value0), _4), 0xecdf3a3effea5783a3c4c2140e677577666428d44ed9d474a0b3a4c9943f8440)\n                /// @src 16:391:7205  \"contract ModuleManager is SelfAuthorized, Executor, ModuleManagerErrors {...\"\n                return(/** @src -1:-1:-1 */ 0, 0)\n            }\n            /// @src 16:391:7205  \"contract ModuleManager is SelfAuthorized, Executor, ModuleManagerErrors {...\"\n            function abi_encode_array_address_dyn_address(headStart, value0, value1) -> tail\n            {\n                let tail_1 := add(headStart, 64)\n                mstore(headStart, 64)\n                let pos := tail_1\n                let length := mload(value0)\n                mstore(tail_1, length)\n                pos := add(headStart, 96)\n                let _1 := 0x20\n                let srcPtr := add(value0, _1)\n                let i := 0\n                for { } lt(i, length) { i := add(i, 1) }\n                {\n                    mstore(pos, and(mload(srcPtr), sub(shl(160, 1), 1)))\n                    pos := add(pos, _1)\n                    srcPtr := add(srcPtr, _1)\n                }\n                tail := pos\n                mstore(add(headStart, _1), and(value1, sub(shl(160, 1), 1)))\n            }\n            function external_fun_getModulesPaginated()\n            {\n                if callvalue() { revert(0, 0) }\n                if slt(add(calldatasize(), not(3)), 64)\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 16:391:7205  \"contract ModuleManager is SelfAuthorized, Executor, ModuleManagerErrors {...\"\n                let value0 := abi_decode_address_2774()\n                let value1 := calldataload(36)\n                let memPtr := allocate_memory(array_allocation_size_array_address_dyn(value1))\n                mstore(memPtr, value1)\n                calldatacopy(add(memPtr, 32), calldatasize(), add(array_allocation_size_array_address_dyn(value1), not(31)))\n                /// @src 16:1503:1522  \"uint256 moduleCount\"\n                let var_moduleCount := /** @src -1:-1:-1 */ 0\n                /// @src 16:391:7205  \"contract ModuleManager is SelfAuthorized, Executor, ModuleManagerErrors {...\"\n                let _1 := sub(shl(160, 1), 1)\n                mstore(/** @src -1:-1:-1 */ var_moduleCount, /** @src 16:391:7205  \"contract ModuleManager is SelfAuthorized, Executor, ModuleManagerErrors {...\" */ and(value0, _1))\n                mstore(32, /** @src -1:-1:-1 */ var_moduleCount)\n                /// @src 16:1532:1570  \"address currentModule = modules[start]\"\n                let var_currentModule := /** @src 16:1556:1570  \"modules[start]\" */ read_from_storage_split_offset_address(/** @src 16:391:7205  \"contract ModuleManager is SelfAuthorized, Executor, ModuleManagerErrors {...\" */ keccak256(/** @src -1:-1:-1 */ var_moduleCount, /** @src 16:391:7205  \"contract ModuleManager is SelfAuthorized, Executor, ModuleManagerErrors {...\" */ 64))\n                /// @src 16:1580:1865  \"while (...\"\n                for { } 1 { }\n                {\n                    /// @src 16:1600:1629  \"currentModule != address(0x0)\"\n                    let _2 := /** @src 16:391:7205  \"contract ModuleManager is SelfAuthorized, Executor, ModuleManagerErrors {...\" */ and(/** @src 16:1600:1629  \"currentModule != address(0x0)\" */ var_currentModule, /** @src 16:391:7205  \"contract ModuleManager is SelfAuthorized, Executor, ModuleManagerErrors {...\" */ _1)\n                    /// @src 16:1600:1678  \"currentModule != address(0x0) &&...\"\n                    let expr := /** @src 16:1600:1629  \"currentModule != address(0x0)\" */ iszero(iszero(_2))\n                    /// @src 16:1600:1678  \"currentModule != address(0x0) &&...\"\n                    if expr\n                    {\n                        expr := /** @src 16:1645:1678  \"currentModule != SENTINEL_MODULES\" */ iszero(eq(_2, /** @src 16:522:525  \"0x1\" */ 0x01))\n                    }\n                    /// @src 16:1600:1716  \"currentModule != address(0x0) &&...\"\n                    let expr_1 := expr\n                    if expr\n                    {\n                        expr_1 := /** @src 16:1694:1716  \"moduleCount < pageSize\" */ lt(var_moduleCount, value1)\n                    }\n                    /// @src 16:1600:1716  \"currentModule != address(0x0) &&...\"\n                    if iszero(expr_1) { break }\n                    /// @src 16:1741:1775  \"array[moduleCount] = currentModule\"\n                    write_to_memory_address(memory_array_index_access_address_dyn(memPtr, var_moduleCount), var_currentModule)\n                    /// @src 16:1789:1827  \"currentModule = modules[currentModule]\"\n                    var_currentModule := /** @src 16:1805:1827  \"modules[currentModule]\" */ read_from_storage_split_offset_address(mapping_index_access_mapping_address_address_of_address(var_currentModule))\n                    /// @src 16:1841:1854  \"moduleCount++\"\n                    var_moduleCount := increment_uint256(var_moduleCount)\n                }\n                /// @src 16:2006:2065  \"assembly {...\"\n                mstore(memPtr, var_moduleCount)\n                /// @src 16:391:7205  \"contract ModuleManager is SelfAuthorized, Executor, ModuleManagerErrors {...\"\n                let memPos := mload(64)\n                return(memPos, sub(abi_encode_array_address_dyn_address(memPos, memPtr, var_currentModule), memPos))\n            }\n            function external_fun_disableModule()\n            {\n                if callvalue() { revert(0, 0) }\n                if slt(add(calldatasize(), not(3)), 64)\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 16:391:7205  \"contract ModuleManager is SelfAuthorized, Executor, ModuleManagerErrors {...\"\n                let value0 := abi_decode_address_2774()\n                let value1 := abi_decode_address()\n                /// @src 21:386:522  \"modifier authorized() {...\"\n                fun_requireSelfCall()\n                /// @src 16:3323:3343  \"module == address(0)\"\n                let _1 := /** @src 16:391:7205  \"contract ModuleManager is SelfAuthorized, Executor, ModuleManagerErrors {...\" */ and(/** @src 16:3323:3343  \"module == address(0)\" */ value1, /** @src 16:391:7205  \"contract ModuleManager is SelfAuthorized, Executor, ModuleManagerErrors {...\" */ sub(shl(160, 1), 1))\n                /// @src 16:3323:3373  \"module == address(0) || module == SENTINEL_MODULES\"\n                let expr := /** @src 16:3323:3343  \"module == address(0)\" */ iszero(_1)\n                /// @src 16:3323:3373  \"module == address(0) || module == SENTINEL_MODULES\"\n                if iszero(expr)\n                {\n                    expr := /** @src 16:3347:3373  \"module == SENTINEL_MODULES\" */ eq(_1, /** @src 16:522:525  \"0x1\" */ 0x01)\n                }\n                /// @src 16:3319:3430  \"if (module == address(0) || module == SENTINEL_MODULES)...\"\n                if expr\n                {\n                    /// @src 16:3394:3430  \"ModuleCannotBeZeroOrSentinel(module)\"\n                    let _2 := /** @src 16:391:7205  \"contract ModuleManager is SelfAuthorized, Executor, ModuleManagerErrors {...\" */ mload(64)\n                    /// @src 16:3394:3430  \"ModuleCannotBeZeroOrSentinel(module)\"\n                    mstore(_2, /** @src 16:2502:2538  \"ModuleCannotBeZeroOrSentinel(module)\" */ shl(224, 0xcadb248f))\n                    /// @src 16:3394:3430  \"ModuleCannotBeZeroOrSentinel(module)\"\n                    revert(_2, sub(abi_encode_address(add(_2, /** @src 16:391:7205  \"contract ModuleManager is SelfAuthorized, Executor, ModuleManagerErrors {...\" */ 4), /** @src 16:3394:3430  \"ModuleCannotBeZeroOrSentinel(module)\" */ value1), _2))\n                }\n                /// @src 16:3440:3624  \"if (modules[prevModule] != module)...\"\n                if /** @src 16:3444:3473  \"modules[prevModule] != module\" */ iszero(eq(cleanup_address(/** @src 16:3444:3463  \"modules[prevModule]\" */ read_from_storage_split_offset_address(mapping_index_access_mapping_address_address_of_address_2779(value0))), /** @src 16:3444:3473  \"modules[prevModule] != module\" */ _1))\n                /// @src 16:3440:3624  \"if (modules[prevModule] != module)...\"\n                {\n                    /// @src 16:3563:3582  \"modules[prevModule]\"\n                    let _3 := read_from_storage_split_offset_address(mapping_index_access_mapping_address_address_of_address_2779(value0))\n                    /// @src 16:3494:3624  \"ModuleAndPrevModuleMismatch(...\"\n                    let _4 := /** @src 16:391:7205  \"contract ModuleManager is SelfAuthorized, Executor, ModuleManagerErrors {...\" */ mload(64)\n                    /// @src 16:3494:3624  \"ModuleAndPrevModuleMismatch(...\"\n                    mstore(_4, shl(226, 0x3103525b))\n                    revert(_4, sub(abi_encode_address_address_address(add(_4, /** @src 16:391:7205  \"contract ModuleManager is SelfAuthorized, Executor, ModuleManagerErrors {...\" */ 4), /** @src 16:3494:3624  \"ModuleAndPrevModuleMismatch(...\" */ value1, _3, value0), _4))\n                }\n                /// @src 16:3634:3671  \"modules[prevModule] = modules[module]\"\n                update_storage_value_offsett_address_to_address(/** @src 16:3634:3653  \"modules[prevModule]\" */ mapping_index_access_mapping_address_address_of_address_2779(value0), /** @src 16:3656:3671  \"modules[module]\" */ read_from_storage_split_offset_address(mapping_index_access_mapping_address_address_of_address_2779(value1)))\n                /// @src 16:391:7205  \"contract ModuleManager is SelfAuthorized, Executor, ModuleManagerErrors {...\"\n                update_storage_value_address_to_address(/** @src 16:3688:3703  \"modules[module]\" */ mapping_index_access_mapping_address_address_of_address_2779(value1))\n                /// @src 16:3718:3740  \"DisabledModule(module)\"\n                let _5 := /** @src 16:391:7205  \"contract ModuleManager is SelfAuthorized, Executor, ModuleManagerErrors {...\" */ mload(64)\n                /// @src 16:3718:3740  \"DisabledModule(module)\"\n                log1(_5, sub(abi_encode_address(_5, value1), _5), 0xaab4fa2b463f581b2b32cb3b7e3b704b9ce37cc209b5fb4d77e593ace4054276)\n                /// @src 16:391:7205  \"contract ModuleManager is SelfAuthorized, Executor, ModuleManagerErrors {...\"\n                return(/** @src -1:-1:-1 */ 0, 0)\n            }\n            /// @src 16:391:7205  \"contract ModuleManager is SelfAuthorized, Executor, ModuleManagerErrors {...\"\n            function array_allocation_size_array_address_dyn(length) -> size\n            {\n                if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n                size := add(shl(5, length), 0x20)\n            }\n            function mapping_index_access_mapping_address_address_of_address_2779(key) -> dataSlot\n            {\n                mstore(/** @src 16:2449:2450  \"0\" */ 0x00, /** @src 16:391:7205  \"contract ModuleManager is SelfAuthorized, Executor, ModuleManagerErrors {...\" */ and(key, sub(shl(160, 1), 1)))\n                mstore(0x20, /** @src 16:2449:2450  \"0\" */ 0x00)\n                /// @src 16:391:7205  \"contract ModuleManager is SelfAuthorized, Executor, ModuleManagerErrors {...\"\n                dataSlot := keccak256(/** @src 16:2449:2450  \"0\" */ 0x00, /** @src 16:391:7205  \"contract ModuleManager is SelfAuthorized, Executor, ModuleManagerErrors {...\" */ 0x40)\n            }\n            function mapping_index_access_mapping_address_address_of_address_2780() -> dataSlot\n            {\n                mstore(/** @src 16:2449:2450  \"0\" */ 0x00, /** @src 16:391:7205  \"contract ModuleManager is SelfAuthorized, Executor, ModuleManagerErrors {...\" */ 1)\n                mstore(0x20, /** @src 16:2449:2450  \"0\" */ 0x00)\n                /// @src 16:391:7205  \"contract ModuleManager is SelfAuthorized, Executor, ModuleManagerErrors {...\"\n                dataSlot := keccak256(/** @src 16:2449:2450  \"0\" */ 0x00, /** @src 16:391:7205  \"contract ModuleManager is SelfAuthorized, Executor, ModuleManagerErrors {...\" */ 0x40)\n            }\n            function mapping_index_access_mapping_address_address_of_address(key) -> dataSlot\n            {\n                mstore(0, and(key, sub(shl(160, 1), 1)))\n                mstore(0x20, 0)\n                dataSlot := keccak256(0, 0x40)\n            }\n            function read_from_storage_split_offset_address(slot) -> value\n            {\n                value := and(sload(slot), sub(shl(160, 1), 1))\n            }\n            /// @src 16:514:526  \"address(0x1)\"\n            function memory_array_index_access_address_dyn(baseRef, index) -> addr\n            {\n                if iszero(lt(index, /** @src 16:391:7205  \"contract ModuleManager is SelfAuthorized, Executor, ModuleManagerErrors {...\" */ mload(/** @src 16:514:526  \"address(0x1)\" */ baseRef)))\n                {\n                    mstore(0, /** @src 16:391:7205  \"contract ModuleManager is SelfAuthorized, Executor, ModuleManagerErrors {...\" */ shl(224, 0x4e487b71))\n                    /// @src 16:514:526  \"address(0x1)\"\n                    mstore(4, 0x32)\n                    revert(0, 0x24)\n                }\n                addr := add(add(baseRef, shl(5, index)), 32)\n            }\n            function write_to_memory_address(memPtr, value)\n            {\n                mstore(memPtr, /** @src 16:391:7205  \"contract ModuleManager is SelfAuthorized, Executor, ModuleManagerErrors {...\" */ and(/** @src 16:514:526  \"address(0x1)\" */ value, /** @src 16:391:7205  \"contract ModuleManager is SelfAuthorized, Executor, ModuleManagerErrors {...\" */ sub(shl(160, 1), 1)))\n            }\n            /// @src 16:514:526  \"address(0x1)\"\n            function increment_uint256(value) -> ret\n            {\n                if eq(value, not(0))\n                {\n                    mstore(0, /** @src 16:391:7205  \"contract ModuleManager is SelfAuthorized, Executor, ModuleManagerErrors {...\" */ shl(224, 0x4e487b71))\n                    /// @src 16:514:526  \"address(0x1)\"\n                    mstore(4, 0x11)\n                    revert(0, 0x24)\n                }\n                ret := add(value, 1)\n            }\n            /// @src 16:391:7205  \"contract ModuleManager is SelfAuthorized, Executor, ModuleManagerErrors {...\"\n            function abi_encode_address(headStart, value0) -> tail\n            {\n                tail := add(headStart, 32)\n                mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n            }\n            function update_storage_value_offsett_address_to_address(slot, value)\n            {\n                sstore(slot, or(and(sload(slot), shl(160, 0xffffffffffffffffffffffff)), and(value, sub(shl(160, 1), 1))))\n            }\n            function abi_encode_address_address_address(headStart, value0, value1, value2) -> tail\n            {\n                tail := add(headStart, 96)\n                let _1 := sub(shl(160, 1), 1)\n                mstore(headStart, and(value0, _1))\n                mstore(add(headStart, 32), and(value1, _1))\n                mstore(add(headStart, 64), and(value2, _1))\n            }\n            function update_storage_value_address_to_address(slot)\n            {\n                sstore(slot, and(sload(slot), shl(160, 0xffffffffffffffffffffffff)))\n            }\n            function abi_encode_enum_Operation(value, pos)\n            {\n                if iszero(lt(value, 2))\n                {\n                    mstore(/** @src -1:-1:-1 */ 0, /** @src 16:391:7205  \"contract ModuleManager is SelfAuthorized, Executor, ModuleManagerErrors {...\" */ shl(224, 0x4e487b71))\n                    mstore(4, 0x21)\n                    revert(/** @src -1:-1:-1 */ 0, /** @src 16:391:7205  \"contract ModuleManager is SelfAuthorized, Executor, ModuleManagerErrors {...\" */ 0x24)\n                }\n                mstore(pos, value)\n            }\n            function abi_encode_address_address_uint256_bytes_enum_Operation(headStart, value0, value1, value2, value3, value4) -> tail\n            {\n                let _1 := sub(shl(160, 1), 1)\n                mstore(headStart, and(value0, _1))\n                mstore(add(headStart, 32), and(value1, _1))\n                mstore(add(headStart, 64), value2)\n                mstore(add(headStart, 96), 160)\n                tail := abi_encode_bytes(value3, add(headStart, 160))\n                abi_encode_enum_Operation(value4, add(headStart, 128))\n            }\n            /// @ast-id 4820 @src 16:4103:4816  \"function execTransactionFromModule(...\"\n            function fun_execTransactionFromModule(var_to, var_value, var_data_mpos, var_operation) -> var_success\n            {\n                /// @src 16:4349:4416  \"msg.sender == SENTINEL_MODULES || modules[msg.sender] == address(0)\"\n                let expr := /** @src 16:4349:4379  \"msg.sender == SENTINEL_MODULES\" */ eq(/** @src 16:4349:4359  \"msg.sender\" */ caller(), /** @src 16:522:525  \"0x1\" */ 0x01)\n                /// @src 16:4349:4416  \"msg.sender == SENTINEL_MODULES || modules[msg.sender] == address(0)\"\n                if iszero(expr)\n                {\n                    expr := /** @src 16:4383:4416  \"modules[msg.sender] == address(0)\" */ iszero(/** @src 16:391:7205  \"contract ModuleManager is SelfAuthorized, Executor, ModuleManagerErrors {...\" */ and(sload(/** @src 16:4383:4402  \"modules[msg.sender]\" */ mapping_index_access_mapping_address_address_of_address_2779(/** @src 16:4349:4359  \"msg.sender\" */ caller())), /** @src 16:391:7205  \"contract ModuleManager is SelfAuthorized, Executor, ModuleManagerErrors {...\" */ sub(shl(160, 1), 1)))\n                }\n                /// @src 16:4345:4465  \"if (msg.sender == SENTINEL_MODULES || modules[msg.sender] == address(0))...\"\n                if expr\n                {\n                    /// @src 16:4437:4465  \"ModuleNotEnabled(msg.sender)\"\n                    let _1 := /** @src 16:391:7205  \"contract ModuleManager is SelfAuthorized, Executor, ModuleManagerErrors {...\" */ mload(64)\n                    /// @src 16:4437:4465  \"ModuleNotEnabled(msg.sender)\"\n                    mstore(_1, shl(224, 0x21ac7c5f))\n                    /// @src 16:391:7205  \"contract ModuleManager is SelfAuthorized, Executor, ModuleManagerErrors {...\"\n                    mstore(/** @src 16:4437:4465  \"ModuleNotEnabled(msg.sender)\" */ add(_1, 4), /** @src 16:4349:4359  \"msg.sender\" */ caller())\n                    /// @src 16:4437:4465  \"ModuleNotEnabled(msg.sender)\"\n                    revert(_1, /** @src 16:391:7205  \"contract ModuleManager is SelfAuthorized, Executor, ModuleManagerErrors {...\" */ 36)\n                }\n                /// @src 16:4583:4592  \"gasleft()\"\n                let _2 := gas()\n                /// @src 16:4547:4593  \"execute(to, value, data, operation, gasleft())\"\n                let var_success_1 := /** @src -1:-1:-1 */ 0\n                /// @src 16:391:7205  \"contract ModuleManager is SelfAuthorized, Executor, ModuleManagerErrors {...\"\n                if iszero(lt(var_operation, 2))\n                {\n                    mstore(/** @src -1:-1:-1 */ var_success_1, /** @src 16:391:7205  \"contract ModuleManager is SelfAuthorized, Executor, ModuleManagerErrors {...\" */ shl(224, 0x4e487b71))\n                    mstore(4, 0x21)\n                    revert(/** @src -1:-1:-1 */ var_success_1, /** @src 16:391:7205  \"contract ModuleManager is SelfAuthorized, Executor, ModuleManagerErrors {...\" */ 0x24)\n                }\n                /// @src 14:804:1541  \"if (operation == Enum.Operation.DelegateCall) {...\"\n                switch /** @src 14:808:848  \"operation == Enum.Operation.DelegateCall\" */ eq(var_operation, /** @src 16:522:525  \"0x1\" */ 0x01)\n                case /** @src 14:804:1541  \"if (operation == Enum.Operation.DelegateCall) {...\" */ 0 {\n                    /// @src 14:1263:1531  \"assembly {...\"\n                    var_success_1 := call(_2, var_to, var_value, add(var_data_mpos, 0x20), mload(var_data_mpos), /** @src -1:-1:-1 */ var_success_1, var_success_1)\n                }\n                default /// @src 14:804:1541  \"if (operation == Enum.Operation.DelegateCall) {...\"\n                {\n                    /// @src 14:924:1173  \"assembly {...\"\n                    var_success_1 := delegatecall(_2, var_to, add(var_data_mpos, 0x20), mload(var_data_mpos), /** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 14:1550:1690  \"if (success) emit ExecutionSuccess(to, value, data, operation, txGas);...\"\n                switch var_success_1\n                case 0 {\n                    /// @src 14:1639:1690  \"ExecutionFailure(to, value, data, operation, txGas)\"\n                    let _3 := packed_hashed_bytes_to_bytes(var_data_mpos)\n                    let _4 := /** @src 16:391:7205  \"contract ModuleManager is SelfAuthorized, Executor, ModuleManagerErrors {...\" */ mload(64)\n                    /// @src 14:1639:1690  \"ExecutionFailure(to, value, data, operation, txGas)\"\n                    log4(_4, sub(abi_encode_enum_Operation_uint256(_4, var_operation, _2), _4), 0x3ddd038f78c876172d5dbfd730b14c9f8692dfa197ef104eaac6df3f85a0874a, /** @src 16:391:7205  \"contract ModuleManager is SelfAuthorized, Executor, ModuleManagerErrors {...\" */ and(/** @src 14:1639:1690  \"ExecutionFailure(to, value, data, operation, txGas)\" */ var_to, /** @src 16:391:7205  \"contract ModuleManager is SelfAuthorized, Executor, ModuleManagerErrors {...\" */ sub(shl(160, 1), 1)), /** @src 14:1639:1690  \"ExecutionFailure(to, value, data, operation, txGas)\" */ var_value, _3)\n                }\n                default /// @src 14:1550:1690  \"if (success) emit ExecutionSuccess(to, value, data, operation, txGas);...\"\n                {\n                    /// @src 14:1568:1619  \"ExecutionSuccess(to, value, data, operation, txGas)\"\n                    let _5 := packed_hashed_bytes_to_bytes(var_data_mpos)\n                    let _6 := /** @src 16:391:7205  \"contract ModuleManager is SelfAuthorized, Executor, ModuleManagerErrors {...\" */ mload(64)\n                    /// @src 14:1568:1619  \"ExecutionSuccess(to, value, data, operation, txGas)\"\n                    log4(_6, sub(abi_encode_enum_Operation_uint256(_6, var_operation, _2), _6), 0x81d12fffced46c214dfae8ab8fa0b9f7b69f70c9d500e33f612f2105deb261ee, /** @src 16:391:7205  \"contract ModuleManager is SelfAuthorized, Executor, ModuleManagerErrors {...\" */ and(/** @src 14:1568:1619  \"ExecutionSuccess(to, value, data, operation, txGas)\" */ var_to, /** @src 16:391:7205  \"contract ModuleManager is SelfAuthorized, Executor, ModuleManagerErrors {...\" */ sub(shl(160, 1), 1)), /** @src 14:1568:1619  \"ExecutionSuccess(to, value, data, operation, txGas)\" */ var_value, _5)\n                }\n                /// @src 16:4537:4593  \"success = execute(to, value, data, operation, gasleft())\"\n                var_success := var_success_1\n                /// @src 16:4603:4809  \"if (success) {...\"\n                switch var_success_1\n                case 0 {\n                    /// @src 16:4771:4809  \"ExecutionFromModuleFailure(msg.sender)\"\n                    log2(/** @src -1:-1:-1 */ 0, 0, /** @src 16:4771:4809  \"ExecutionFromModuleFailure(msg.sender)\" */ 0xacd2c8702804128fdb0db2bb49f6d127dd0181c13fd45dbfe16de0930e2bd375, /** @src 16:4349:4359  \"msg.sender\" */ caller())\n                }\n                default /// @src 16:4603:4809  \"if (success) {...\"\n                {\n                    /// @src 16:4635:4692  \"ModuleTransaction(msg.sender, to, value, data, operation)\"\n                    let _7 := /** @src 16:391:7205  \"contract ModuleManager is SelfAuthorized, Executor, ModuleManagerErrors {...\" */ mload(64)\n                    /// @src 16:4635:4692  \"ModuleTransaction(msg.sender, to, value, data, operation)\"\n                    log1(_7, sub(abi_encode_address_address_uint256_bytes_enum_Operation(_7, /** @src 16:4349:4359  \"msg.sender\" */ caller(), /** @src 16:4635:4692  \"ModuleTransaction(msg.sender, to, value, data, operation)\" */ var_to, var_value, var_data_mpos, var_operation), _7), 0x8c014e41cffd68ba64f3e7830b8b2e4ee860509d8deab25ebbcbba2f0405e2da)\n                    /// @src 16:4711:4749  \"ExecutionFromModuleSuccess(msg.sender)\"\n                    log2(/** @src -1:-1:-1 */ 0, 0, /** @src 16:4711:4749  \"ExecutionFromModuleSuccess(msg.sender)\" */ 0x6895c13664aa4f67288b25d7a21d7aaa34916e355fb9b6fae0a139a9085becb8, /** @src 16:4349:4359  \"msg.sender\" */ caller())\n                }\n            }\n            /// @src 16:391:7205  \"contract ModuleManager is SelfAuthorized, Executor, ModuleManagerErrors {...\"\n            function packed_hashed_bytes_to_bytes(var) -> hash\n            {\n                let pos := mload(64)\n                let length := mload(var)\n                copy_memory_to_memory_with_cleanup(add(var, 0x20), pos, length)\n                hash := keccak256(pos, sub(add(pos, length), pos))\n            }\n            function abi_encode_enum_Operation_uint256(headStart, value0, value1) -> tail\n            {\n                tail := add(headStart, 64)\n                abi_encode_enum_Operation(value0, headStart)\n                mstore(add(headStart, 32), value1)\n            }\n            /// @ast-id 5249 @src 21:256:380  \"function requireSelfCall() private view {...\"\n            function fun_requireSelfCall()\n            {\n                /// @src 21:306:373  \"if (msg.sender != address(this)) revert CallerIsNotSelf(msg.sender)\"\n                if /** @src 21:310:337  \"msg.sender != address(this)\" */ iszero(eq(/** @src 21:310:320  \"msg.sender\" */ caller(), /** @src 21:332:336  \"this\" */ address()))\n                /// @src 21:306:373  \"if (msg.sender != address(this)) revert CallerIsNotSelf(msg.sender)\"\n                {\n                    /// @src 21:346:373  \"CallerIsNotSelf(msg.sender)\"\n                    let _1 := /** @src 16:391:7205  \"contract ModuleManager is SelfAuthorized, Executor, ModuleManagerErrors {...\" */ mload(64)\n                    /// @src 21:346:373  \"CallerIsNotSelf(msg.sender)\"\n                    mstore(_1, shl(226, 0x01478e33))\n                    /// @src 16:391:7205  \"contract ModuleManager is SelfAuthorized, Executor, ModuleManagerErrors {...\"\n                    mstore(/** @src 21:346:373  \"CallerIsNotSelf(msg.sender)\" */ add(_1, 4), /** @src 21:310:320  \"msg.sender\" */ caller())\n                    /// @src 21:346:373  \"CallerIsNotSelf(msg.sender)\"\n                    revert(_1, /** @src 16:391:7205  \"contract ModuleManager is SelfAuthorized, Executor, ModuleManagerErrors {...\" */ 36)\n                }\n            }\n        }\n        data \".metadata\" hex\"a26469706673582212208d57e27c387fdc5f4e6043982322f8c5e3916fa8f4d3914e491bcf1da45b346564736f6c63430008110033\"\n    }\n}\n","hash":"010001457f06e69951628aba5226816ee7776a16cc5a99193e3b9fe11c8dc1d4","factoryDependencies":{}}},"contracts/smart-contract-wallet/common/Enum.sol":{"Enum":{"abi":[],"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"title\":\"Enum - Collection of enums\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/smart-contract-wallet/common/Enum.sol\":\"Enum\"},\"evmVersion\":\"london\",\"libraries\":{\":__CACHE_BREAKER__\":\"0x00000000d41867734bbee4c6863d9255b2b06ac1\"},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"contracts/smart-contract-wallet/common/Enum.sol\":{\"keccak256\":\"0x657464511d99c53126e008910b266875b299d6e328e105203cb53b6f467acdac\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://d31ced2b537c575f21e5d78989076ce76df8befb276d75c79cf64e44031ae527\",\"dweb:/ipfs/QmNh5E4sTYkphUs8P4rZ8WCQUkWZmjwAAyPzSr612rEs8C\"]}},\"version\":1}","devdoc":{"kind":"dev","methods":{},"title":"Enum - Collection of enums","version":1},"userdoc":{"kind":"user","methods":{},"version":1},"storageLayout":{"storage":[],"types":null},"evm":{"legacyAssembly":null,"assembly":null,"bytecode":null,"methodIdentifiers":{}},"irOptimized":""}},"contracts/smart-contract-wallet/common/Errors.sol":{"BaseSmartAccountErrors":{"abi":[{"inputs":[{"internalType":"address","name":"caller","type":"address"}],"name":"CallerIsNotAnEntryPoint","type":"error"}],"metadata":{"optimizer_settings":"M3B3","solc_metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"}],\"name\":\"CallerIsNotAnEntryPoint\",\"type\":\"error\"}],\"devdoc\":{\"errors\":{\"CallerIsNotAnEntryPoint(address)\":[{\"params\":{\"caller\":\"address that tried to call onlyEntryPoint-protected method\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"errors\":{\"CallerIsNotAnEntryPoint(address)\":[{\"notice\":\"Throws at onlyEntryPoint when msg.sender is not an EntryPoint set for this Smart Account\"}]},\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/smart-contract-wallet/common/Errors.sol\":\"BaseSmartAccountErrors\"},\"evmVersion\":\"london\",\"libraries\":{\":__CACHE_BREAKER__\":\"0x00000000d41867734bbee4c6863d9255b2b06ac1\"},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"contracts/smart-contract-wallet/common/Errors.sol\":{\"keccak256\":\"0xef2989dcfc2aedddfd76865faa371b7cfb1e4e40592cc31d6d4151914f1a6aaa\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://8248d7e170d8ff5d67e62c2e0528e3700dfdc3f08eb6fa8a2a6d7c3c5fafee76\",\"dweb:/ipfs/QmbEpeNpBqHbu4Gx2nwGweynRJRoe5NdGCZZ64TPxRdn3X\"]}},\"version\":1}","zk_version":"1.3.10"},"devdoc":{"errors":{"CallerIsNotAnEntryPoint(address)":[{"params":{"caller":"address that tried to call onlyEntryPoint-protected method"}}]},"kind":"dev","methods":{},"version":1},"userdoc":{"errors":{"CallerIsNotAnEntryPoint(address)":[{"notice":"Throws at onlyEntryPoint when msg.sender is not an EntryPoint set for this Smart Account"}]},"kind":"user","methods":{},"version":1},"storageLayout":{"storage":[],"types":null},"evm":{"legacyAssembly":null,"assembly":"\t.text\n\t.file\t\"Errors.sol:BaseSmartAccountErrors\"\n\t.globl\t__entry\n__entry:\n.func_begin0:\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB0_2\n\tadd\t128, r0, r1\n\tst.1\t64, r1\n\tcontext.get_context_u128\tr1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_2\n\tadd\t32, r0, r1\n\tst.2\t256, r1\n\tst.2\t288, r0\n\tadd\t@CPI0_0[0], r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_2:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end0:\n\n\t.note.GNU-stack\n\t.rodata\nCPI0_0:\n\t.cell 53919893334301279589334030174039261352344891250716429051063678533632\n","bytecode":{"object":"00000001012001900000000c0000613d0000008001000039000000400010043f0000000001000416000000000110004c0000000c0000c13d00000020010000390000010000100443000001200000044300000005010000410000000f0001042e000000000100001900000010000104300000000e000004320000000f0001042e00000010000104300000000000000000000000000000000000000000000000000000000200000000000000000000000000000040000001000000000000000000667e5978a41ebc4673410d59a57929b7f7876b4779e3d27073d9d32a805a7ce5"},"methodIdentifiers":{}},"irOptimized":"/// @use-src 18:\"contracts/smart-contract-wallet/common/Errors.sol\"\nobject \"BaseSmartAccountErrors_4939\" {\n    code {\n        {\n            /// @src 18:67:353  \"contract BaseSmartAccountErrors {...\"\n            let _1 := memoryguard(0x80)\n            mstore(64, _1)\n            if callvalue() { revert(0, 0) }\n            let _2 := datasize(\"BaseSmartAccountErrors_4939_deployed\")\n            codecopy(_1, dataoffset(\"BaseSmartAccountErrors_4939_deployed\"), _2)\n            return(_1, _2)\n        }\n    }\n    /// @use-src 18:\"contracts/smart-contract-wallet/common/Errors.sol\"\n    object \"BaseSmartAccountErrors_4939_deployed\" {\n        code {\n            {\n                /// @src 18:67:353  \"contract BaseSmartAccountErrors {...\"\n                revert(0, 0)\n            }\n        }\n        data \".metadata\" hex\"a2646970667358221220a2fc56cca5cc570cd9bc71d0f6b942b6c55ce345fb77a665f0e98fea164df4c664736f6c63430008110033\"\n    }\n}\n","hash":"010000072bc84e0435f6994dfa3b14269d41d106ad95608de5113393ab3eb4d8","factoryDependencies":{}},"FallbackManagerErrors":{"abi":[{"inputs":[],"name":"HandlerCannotBeZero","type":"error"}],"metadata":{"optimizer_settings":"M3B3","solc_metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"HandlerCannotBeZero\",\"type\":\"error\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"errors\":{\"HandlerCannotBeZero()\":[{\"notice\":\"Throws if zero address has been provided as Fallback Handler address\"}]},\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/smart-contract-wallet/common/Errors.sol\":\"FallbackManagerErrors\"},\"evmVersion\":\"london\",\"libraries\":{\":__CACHE_BREAKER__\":\"0x00000000d41867734bbee4c6863d9255b2b06ac1\"},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"contracts/smart-contract-wallet/common/Errors.sol\":{\"keccak256\":\"0xef2989dcfc2aedddfd76865faa371b7cfb1e4e40592cc31d6d4151914f1a6aaa\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://8248d7e170d8ff5d67e62c2e0528e3700dfdc3f08eb6fa8a2a6d7c3c5fafee76\",\"dweb:/ipfs/QmbEpeNpBqHbu4Gx2nwGweynRJRoe5NdGCZZ64TPxRdn3X\"]}},\"version\":1}","zk_version":"1.3.10"},"devdoc":{"kind":"dev","methods":{},"version":1},"userdoc":{"errors":{"HandlerCannotBeZero()":[{"notice":"Throws if zero address has been provided as Fallback Handler address"}]},"kind":"user","methods":{},"version":1},"storageLayout":{"storage":[],"types":null},"evm":{"legacyAssembly":null,"assembly":"\t.text\n\t.file\t\"Errors.sol:FallbackManagerErrors\"\n\t.globl\t__entry\n__entry:\n.func_begin0:\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB0_2\n\tadd\t128, r0, r1\n\tst.1\t64, r1\n\tcontext.get_context_u128\tr1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_2\n\tadd\t32, r0, r1\n\tst.2\t256, r1\n\tst.2\t288, r0\n\tadd\t@CPI0_0[0], r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_2:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end0:\n\n\t.note.GNU-stack\n\t.rodata\nCPI0_0:\n\t.cell 53919893334301279589334030174039261352344891250716429051063678533632\n","bytecode":{"object":"00000001012001900000000c0000613d0000008001000039000000400010043f0000000001000416000000000110004c0000000c0000c13d00000020010000390000010000100443000001200000044300000005010000410000000f0001042e000000000100001900000010000104300000000e000004320000000f0001042e0000001000010430000000000000000000000000000000000000000000000000000000020000000000000000000000000000004000000100000000000000000043ec5916acbe2576119f71581515c2904e51ebda6644eebf6960537f54d94acf"},"methodIdentifiers":{}},"irOptimized":"/// @use-src 18:\"contracts/smart-contract-wallet/common/Errors.sol\"\nobject \"FallbackManagerErrors_4943\" {\n    code {\n        {\n            /// @src 18:355:522  \"contract FallbackManagerErrors {...\"\n            let _1 := memoryguard(0x80)\n            mstore(64, _1)\n            if callvalue() { revert(0, 0) }\n            let _2 := datasize(\"FallbackManagerErrors_4943_deployed\")\n            codecopy(_1, dataoffset(\"FallbackManagerErrors_4943_deployed\"), _2)\n            return(_1, _2)\n        }\n    }\n    /// @use-src 18:\"contracts/smart-contract-wallet/common/Errors.sol\"\n    object \"FallbackManagerErrors_4943_deployed\" {\n        code {\n            {\n                /// @src 18:355:522  \"contract FallbackManagerErrors {...\"\n                revert(0, 0)\n            }\n        }\n        data \".metadata\" hex\"a26469706673582212203a9e284c3789d57061431b902018d9b227bc053c8f73dcee393807febfaf96e864736f6c63430008110033\"\n    }\n}\n","hash":"01000007649665394b40bec411187391c667755f1682e3646eac1588f57e5618","factoryDependencies":{}},"ModuleManagerErrors":{"abi":[{"inputs":[{"internalType":"address","name":"module","type":"address"}],"name":"ModuleAlreadyEnabled","type":"error"},{"inputs":[{"internalType":"address","name":"expectedModule","type":"address"},{"internalType":"address","name":"returnedModule","type":"address"},{"internalType":"address","name":"prevModule","type":"address"}],"name":"ModuleAndPrevModuleMismatch","type":"error"},{"inputs":[{"internalType":"address","name":"module","type":"address"}],"name":"ModuleCannotBeZeroOrSentinel","type":"error"},{"inputs":[{"internalType":"address","name":"module","type":"address"}],"name":"ModuleNotEnabled","type":"error"},{"inputs":[],"name":"ModulesAlreadyInitialized","type":"error"},{"inputs":[],"name":"ModulesSetupExecutionFailed","type":"error"}],"metadata":{"optimizer_settings":"M3B3","solc_metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"module\",\"type\":\"address\"}],\"name\":\"ModuleAlreadyEnabled\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"expectedModule\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"returnedModule\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"prevModule\",\"type\":\"address\"}],\"name\":\"ModuleAndPrevModuleMismatch\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"module\",\"type\":\"address\"}],\"name\":\"ModuleCannotBeZeroOrSentinel\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"module\",\"type\":\"address\"}],\"name\":\"ModuleNotEnabled\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ModulesAlreadyInitialized\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ModulesSetupExecutionFailed\",\"type\":\"error\"}],\"devdoc\":{\"errors\":{\"ModuleAlreadyEnabled(address)\":[{\"params\":{\"module\":\"Module address provided\"}}],\"ModuleAndPrevModuleMismatch(address,address,address)\":[{\"params\":{\"expectedModule\":\"expected module at modules[prevModule]\",\"prevModule\":\"previous module address provided at call\",\"returnedModule\":\"the module that has been found at modules[prevModule]\"}}],\"ModuleCannotBeZeroOrSentinel(address)\":[{\"params\":{\"module\":\"Module address provided\"}}],\"ModuleNotEnabled(address)\":[{\"params\":{\"module\":\"Module address provided\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"errors\":{\"ModuleAlreadyEnabled(address)\":[{\"notice\":\"Throws when trying to enable module that has already been enabled\"}],\"ModuleAndPrevModuleMismatch(address,address,address)\":[{\"notice\":\"Throws when module and previous module mismatch\"}],\"ModuleCannotBeZeroOrSentinel(address)\":[{\"notice\":\"Throws when address(0) or SENTINEL_MODULES constant has been provided as a module address\"}],\"ModuleNotEnabled(address)\":[{\"notice\":\"Throws when trying to execute transaction from module that is not enabled\"}],\"ModulesAlreadyInitialized()\":[{\"notice\":\"Throws when trying to initialize module manager that already been initialized\"}],\"ModulesSetupExecutionFailed()\":[{\"notice\":\"Throws when a delegatecall in course of module manager initialization has failed\"}]},\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/smart-contract-wallet/common/Errors.sol\":\"ModuleManagerErrors\"},\"evmVersion\":\"london\",\"libraries\":{\":__CACHE_BREAKER__\":\"0x00000000d41867734bbee4c6863d9255b2b06ac1\"},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"contracts/smart-contract-wallet/common/Errors.sol\":{\"keccak256\":\"0xef2989dcfc2aedddfd76865faa371b7cfb1e4e40592cc31d6d4151914f1a6aaa\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://8248d7e170d8ff5d67e62c2e0528e3700dfdc3f08eb6fa8a2a6d7c3c5fafee76\",\"dweb:/ipfs/QmbEpeNpBqHbu4Gx2nwGweynRJRoe5NdGCZZ64TPxRdn3X\"]}},\"version\":1}","zk_version":"1.3.10"},"devdoc":{"errors":{"ModuleAlreadyEnabled(address)":[{"params":{"module":"Module address provided"}}],"ModuleAndPrevModuleMismatch(address,address,address)":[{"params":{"expectedModule":"expected module at modules[prevModule]","prevModule":"previous module address provided at call","returnedModule":"the module that has been found at modules[prevModule]"}}],"ModuleCannotBeZeroOrSentinel(address)":[{"params":{"module":"Module address provided"}}],"ModuleNotEnabled(address)":[{"params":{"module":"Module address provided"}}]},"kind":"dev","methods":{},"version":1},"userdoc":{"errors":{"ModuleAlreadyEnabled(address)":[{"notice":"Throws when trying to enable module that has already been enabled"}],"ModuleAndPrevModuleMismatch(address,address,address)":[{"notice":"Throws when module and previous module mismatch"}],"ModuleCannotBeZeroOrSentinel(address)":[{"notice":"Throws when address(0) or SENTINEL_MODULES constant has been provided as a module address"}],"ModuleNotEnabled(address)":[{"notice":"Throws when trying to execute transaction from module that is not enabled"}],"ModulesAlreadyInitialized()":[{"notice":"Throws when trying to initialize module manager that already been initialized"}],"ModulesSetupExecutionFailed()":[{"notice":"Throws when a delegatecall in course of module manager initialization has failed"}]},"kind":"user","methods":{},"version":1},"storageLayout":{"storage":[],"types":null},"evm":{"legacyAssembly":null,"assembly":"\t.text\n\t.file\t\"Errors.sol:ModuleManagerErrors\"\n\t.globl\t__entry\n__entry:\n.func_begin0:\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB0_2\n\tadd\t128, r0, r1\n\tst.1\t64, r1\n\tcontext.get_context_u128\tr1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_2\n\tadd\t32, r0, r1\n\tst.2\t256, r1\n\tst.2\t288, r0\n\tadd\t@CPI0_0[0], r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_2:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end0:\n\n\t.note.GNU-stack\n\t.rodata\nCPI0_0:\n\t.cell 53919893334301279589334030174039261352344891250716429051063678533632\n","bytecode":{"object":"00000001012001900000000c0000613d0000008001000039000000400010043f0000000001000416000000000110004c0000000c0000c13d00000020010000390000010000100443000001200000044300000005010000410000000f0001042e000000000100001900000010000104300000000e000004320000000f0001042e0000001000010430000000000000000000000000000000000000000000000000000000020000000000000000000000000000004000000100000000000000000089f055de8357b5c9c3cdd689032d50b8fe6a847708bbfa2798465641b230bd17"},"methodIdentifiers":{}},"irOptimized":"/// @use-src 18:\"contracts/smart-contract-wallet/common/Errors.sol\"\nobject \"ModuleManagerErrors_5094\" {\n    code {\n        {\n            /// @src 18:5788:7165  \"contract ModuleManagerErrors {...\"\n            let _1 := memoryguard(0x80)\n            mstore(64, _1)\n            if callvalue() { revert(0, 0) }\n            let _2 := datasize(\"ModuleManagerErrors_5094_deployed\")\n            codecopy(_1, dataoffset(\"ModuleManagerErrors_5094_deployed\"), _2)\n            return(_1, _2)\n        }\n    }\n    /// @use-src 18:\"contracts/smart-contract-wallet/common/Errors.sol\"\n    object \"ModuleManagerErrors_5094_deployed\" {\n        code {\n            {\n                /// @src 18:5788:7165  \"contract ModuleManagerErrors {...\"\n                revert(0, 0)\n            }\n        }\n        data \".metadata\" hex\"a2646970667358221220104e4588d7324335db5bea0854c887aa77da3fa30225c380f15d1adc39aad90a64736f6c63430008110033\"\n    }\n}\n","hash":"010000071caa90e4786369084b0ddf4334f90b06e0e66334b5436ed4ce417033","factoryDependencies":{}},"SelfAuthorizedErrors":{"abi":[{"inputs":[{"internalType":"address","name":"caller","type":"address"}],"name":"CallerIsNotSelf","type":"error"}],"metadata":{"optimizer_settings":"M3B3","solc_metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"}],\"name\":\"CallerIsNotSelf\",\"type\":\"error\"}],\"devdoc\":{\"errors\":{\"CallerIsNotSelf(address)\":[{\"params\":{\"caller\":\"Caller address\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"errors\":{\"CallerIsNotSelf(address)\":[{\"notice\":\"Throws when the caller is not address(this)\"}]},\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/smart-contract-wallet/common/Errors.sol\":\"SelfAuthorizedErrors\"},\"evmVersion\":\"london\",\"libraries\":{\":__CACHE_BREAKER__\":\"0x00000000d41867734bbee4c6863d9255b2b06ac1\"},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"contracts/smart-contract-wallet/common/Errors.sol\":{\"keccak256\":\"0xef2989dcfc2aedddfd76865faa371b7cfb1e4e40592cc31d6d4151914f1a6aaa\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://8248d7e170d8ff5d67e62c2e0528e3700dfdc3f08eb6fa8a2a6d7c3c5fafee76\",\"dweb:/ipfs/QmbEpeNpBqHbu4Gx2nwGweynRJRoe5NdGCZZ64TPxRdn3X\"]}},\"version\":1}","zk_version":"1.3.10"},"devdoc":{"errors":{"CallerIsNotSelf(address)":[{"params":{"caller":"Caller address"}}]},"kind":"dev","methods":{},"version":1},"userdoc":{"errors":{"CallerIsNotSelf(address)":[{"notice":"Throws when the caller is not address(this)"}]},"kind":"user","methods":{},"version":1},"storageLayout":{"storage":[],"types":null},"evm":{"legacyAssembly":null,"assembly":"\t.text\n\t.file\t\"Errors.sol:SelfAuthorizedErrors\"\n\t.globl\t__entry\n__entry:\n.func_begin0:\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB0_2\n\tadd\t128, r0, r1\n\tst.1\t64, r1\n\tcontext.get_context_u128\tr1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_2\n\tadd\t32, r0, r1\n\tst.2\t256, r1\n\tst.2\t288, r0\n\tadd\t@CPI0_0[0], r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_2:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end0:\n\n\t.note.GNU-stack\n\t.rodata\nCPI0_0:\n\t.cell 53919893334301279589334030174039261352344891250716429051063678533632\n","bytecode":{"object":"00000001012001900000000c0000613d0000008001000039000000400010043f0000000001000416000000000110004c0000000c0000c13d00000020010000390000010000100443000001200000044300000005010000410000000f0001042e000000000100001900000010000104300000000e000004320000000f0001042e00000010000104300000000000000000000000000000000000000000000000000000000200000000000000000000000000000040000001000000000000000000e5eac7a5344c08b633ee7cca9e40c9a7451e18d8c3a68ccd24cc59420743ad4c"},"methodIdentifiers":{}},"irOptimized":"/// @use-src 18:\"contracts/smart-contract-wallet/common/Errors.sol\"\nobject \"SelfAuthorizedErrors_5100\" {\n    code {\n        {\n            /// @src 18:7167:7354  \"contract SelfAuthorizedErrors {...\"\n            let _1 := memoryguard(0x80)\n            mstore(64, _1)\n            if callvalue() { revert(0, 0) }\n            let _2 := datasize(\"SelfAuthorizedErrors_5100_deployed\")\n            codecopy(_1, dataoffset(\"SelfAuthorizedErrors_5100_deployed\"), _2)\n            return(_1, _2)\n        }\n    }\n    /// @use-src 18:\"contracts/smart-contract-wallet/common/Errors.sol\"\n    object \"SelfAuthorizedErrors_5100_deployed\" {\n        code {\n            {\n                /// @src 18:7167:7354  \"contract SelfAuthorizedErrors {...\"\n                revert(0, 0)\n            }\n        }\n        data \".metadata\" hex\"a2646970667358221220a7c36985f9071081bbe434564bbf070e018a7f724ef14d2d5c00aed67be7a79f64736f6c63430008110033\"\n    }\n}\n","hash":"01000007128c627a5d58697b3c3304898d635807a78161d0b7da57f029e00390","factoryDependencies":{}},"SingletonPaymasterErrors":{"abi":[{"inputs":[],"name":"CanNotWithdrawToZeroAddress","type":"error"},{"inputs":[],"name":"DepositCanNotBeZero","type":"error"},{"inputs":[],"name":"EntryPointCannotBeZero","type":"error"},{"inputs":[{"internalType":"uint256","name":"amountRequired","type":"uint256"},{"internalType":"uint256","name":"currentBalance","type":"uint256"}],"name":"InsufficientBalance","type":"error"},{"inputs":[{"internalType":"uint256","name":"sigLength","type":"uint256"}],"name":"InvalidPaymasterSignatureLength","type":"error"},{"inputs":[],"name":"PaymasterIdCannotBeZero","type":"error"},{"inputs":[],"name":"VerifyingSignerCannotBeZero","type":"error"}],"metadata":{"optimizer_settings":"M3B3","solc_metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"CanNotWithdrawToZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"DepositCanNotBeZero\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"EntryPointCannotBeZero\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountRequired\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"currentBalance\",\"type\":\"uint256\"}],\"name\":\"InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"sigLength\",\"type\":\"uint256\"}],\"name\":\"InvalidPaymasterSignatureLength\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"PaymasterIdCannotBeZero\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"VerifyingSignerCannotBeZero\",\"type\":\"error\"}],\"devdoc\":{\"errors\":{\"InsufficientBalance(uint256,uint256)\":[{\"params\":{\"amountRequired\":\"required balance\",\"currentBalance\":\"available balance\"}}],\"InvalidPaymasterSignatureLength(uint256)\":[{\"params\":{\"sigLength\":\"length oif the signature provided\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"errors\":{\"CanNotWithdrawToZeroAddress()\":[{\"notice\":\"Throws when trying to withdraw to address(0)\"}],\"DepositCanNotBeZero()\":[{\"notice\":\"Throws when the 0 has been provided as deposit\"}],\"EntryPointCannotBeZero()\":[{\"notice\":\"Throws when the Entrypoint address provided is address(0)\"}],\"InsufficientBalance(uint256,uint256)\":[{\"notice\":\"Throws when trying to withdraw more than balance available\"}],\"InvalidPaymasterSignatureLength(uint256)\":[{\"notice\":\"Throws when signature provided has invalid length\"}],\"PaymasterIdCannotBeZero()\":[{\"notice\":\"Throws when the paymaster address provided is address(0)\"}],\"VerifyingSignerCannotBeZero()\":[{\"notice\":\"Throws when the verifiying signer address provided is address(0)\"}]},\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/smart-contract-wallet/common/Errors.sol\":\"SingletonPaymasterErrors\"},\"evmVersion\":\"london\",\"libraries\":{\":__CACHE_BREAKER__\":\"0x00000000d41867734bbee4c6863d9255b2b06ac1\"},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"contracts/smart-contract-wallet/common/Errors.sol\":{\"keccak256\":\"0xef2989dcfc2aedddfd76865faa371b7cfb1e4e40592cc31d6d4151914f1a6aaa\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://8248d7e170d8ff5d67e62c2e0528e3700dfdc3f08eb6fa8a2a6d7c3c5fafee76\",\"dweb:/ipfs/QmbEpeNpBqHbu4Gx2nwGweynRJRoe5NdGCZZ64TPxRdn3X\"]}},\"version\":1}","zk_version":"1.3.10"},"devdoc":{"errors":{"InsufficientBalance(uint256,uint256)":[{"params":{"amountRequired":"required balance","currentBalance":"available balance"}}],"InvalidPaymasterSignatureLength(uint256)":[{"params":{"sigLength":"length oif the signature provided"}}]},"kind":"dev","methods":{},"version":1},"userdoc":{"errors":{"CanNotWithdrawToZeroAddress()":[{"notice":"Throws when trying to withdraw to address(0)"}],"DepositCanNotBeZero()":[{"notice":"Throws when the 0 has been provided as deposit"}],"EntryPointCannotBeZero()":[{"notice":"Throws when the Entrypoint address provided is address(0)"}],"InsufficientBalance(uint256,uint256)":[{"notice":"Throws when trying to withdraw more than balance available"}],"InvalidPaymasterSignatureLength(uint256)":[{"notice":"Throws when signature provided has invalid length"}],"PaymasterIdCannotBeZero()":[{"notice":"Throws when the paymaster address provided is address(0)"}],"VerifyingSignerCannotBeZero()":[{"notice":"Throws when the verifiying signer address provided is address(0)"}]},"kind":"user","methods":{},"version":1},"storageLayout":{"storage":[],"types":null},"evm":{"legacyAssembly":null,"assembly":"\t.text\n\t.file\t\"Errors.sol:SingletonPaymasterErrors\"\n\t.globl\t__entry\n__entry:\n.func_begin0:\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB0_2\n\tadd\t128, r0, r1\n\tst.1\t64, r1\n\tcontext.get_context_u128\tr1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_2\n\tadd\t32, r0, r1\n\tst.2\t256, r1\n\tst.2\t288, r0\n\tadd\t@CPI0_0[0], r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_2:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end0:\n\n\t.note.GNU-stack\n\t.rodata\nCPI0_0:\n\t.cell 53919893334301279589334030174039261352344891250716429051063678533632\n","bytecode":{"object":"00000001012001900000000c0000613d0000008001000039000000400010043f0000000001000416000000000110004c0000000c0000c13d00000020010000390000010000100443000001200000044300000005010000410000000f0001042e000000000100001900000010000104300000000e000004320000000f0001042e00000010000104300000000000000000000000000000000000000000000000000000000200000000000000000000000000000040000001000000000000000000c71285f5b9eb60a30455e2eb415723f24af4d5400f2db48293763c4f3d1f9f83"},"methodIdentifiers":{}},"irOptimized":"/// @use-src 18:\"contracts/smart-contract-wallet/common/Errors.sol\"\nobject \"SingletonPaymasterErrors_5128\" {\n    code {\n        {\n            /// @src 18:7356:8477  \"contract SingletonPaymasterErrors {...\"\n            let _1 := memoryguard(0x80)\n            mstore(64, _1)\n            if callvalue() { revert(0, 0) }\n            let _2 := datasize(\"SingletonPaymasterErrors_5128_deployed\")\n            codecopy(_1, dataoffset(\"SingletonPaymasterErrors_5128_deployed\"), _2)\n            return(_1, _2)\n        }\n    }\n    /// @use-src 18:\"contracts/smart-contract-wallet/common/Errors.sol\"\n    object \"SingletonPaymasterErrors_5128_deployed\" {\n        code {\n            {\n                /// @src 18:7356:8477  \"contract SingletonPaymasterErrors {...\"\n                revert(0, 0)\n            }\n        }\n        data \".metadata\" hex\"a26469706673582212205ebc5ca82a0b0768626c5978ca52fda70bbad0d763ca7a9bdf4036ed25fbafcb64736f6c63430008110033\"\n    }\n}\n","hash":"010000076cd51f51778bb780971fb5e2dd72e0474f8cf6e3acd6a52ea49cccc1","factoryDependencies":{}},"SmartAccountErrors":{"abi":[{"inputs":[{"internalType":"address","name":"smartAccount","type":"address"}],"name":"AlreadyInitialized","type":"error"},{"inputs":[],"name":"BaseImplementationCannotBeZero","type":"error"},{"inputs":[{"internalType":"address","name":"caller","type":"address"}],"name":"CallerIsNotAnEntryPoint","type":"error"},{"inputs":[{"internalType":"address","name":"caller","type":"address"}],"name":"CallerIsNotEntryPointOrOwner","type":"error"},{"inputs":[{"internalType":"address","name":"caller","type":"address"}],"name":"CallerIsNotOwner","type":"error"},{"inputs":[{"internalType":"uint256","name":"targetTxGas","type":"uint256"},{"internalType":"uint256","name":"gasPrice","type":"uint256"},{"internalType":"bool","name":"success","type":"bool"}],"name":"CanNotEstimateGas","type":"error"},{"inputs":[],"name":"DelegateCallsOnly","type":"error"},{"inputs":[],"name":"EntryPointCannotBeZero","type":"error"},{"inputs":[],"name":"ExecutionFailed","type":"error"},{"inputs":[{"internalType":"address","name":"implementationAddress","type":"address"}],"name":"InvalidImplementation","type":"error"},{"inputs":[{"internalType":"address","name":"restoredSigner","type":"address"},{"internalType":"address","name":"expectedSigner","type":"address"}],"name":"InvalidSignature","type":"error"},{"inputs":[{"internalType":"address","name":"caller","type":"address"}],"name":"MixedAuthFail","type":"error"},{"inputs":[{"internalType":"uint256","name":"gasLeft","type":"uint256"},{"internalType":"uint256","name":"gasRequired","type":"uint256"}],"name":"NotEnoughGasLeft","type":"error"},{"inputs":[],"name":"OwnerCanNotBeSelf","type":"error"},{"inputs":[],"name":"OwnerCannotBeZero","type":"error"},{"inputs":[],"name":"OwnerProvidedIsSame","type":"error"},{"inputs":[],"name":"TokenGasPriceFactorCanNotBeZero","type":"error"},{"inputs":[{"internalType":"address","name":"token","type":"address"},{"internalType":"address","name":"dest","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"TokenTransferFailed","type":"error"},{"inputs":[],"name":"TransferToZeroAddressAttempt","type":"error"},{"inputs":[{"internalType":"uint256","name":"destLength","type":"uint256"},{"internalType":"uint256","name":"valueLength","type":"uint256"},{"internalType":"uint256","name":"funcLength","type":"uint256"}],"name":"WrongBatchProvided","type":"error"},{"inputs":[{"internalType":"bytes","name":"contractSignature","type":"bytes"}],"name":"WrongContractSignature","type":"error"},{"inputs":[{"internalType":"uint256","name":"uintS","type":"uint256"},{"internalType":"uint256","name":"contractSignatureLength","type":"uint256"},{"internalType":"uint256","name":"signatureLength","type":"uint256"}],"name":"WrongContractSignatureFormat","type":"error"}],"metadata":{"optimizer_settings":"M3B3","solc_metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"smartAccount\",\"type\":\"address\"}],\"name\":\"AlreadyInitialized\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"BaseImplementationCannotBeZero\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"}],\"name\":\"CallerIsNotAnEntryPoint\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"}],\"name\":\"CallerIsNotEntryPointOrOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"}],\"name\":\"CallerIsNotOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"targetTxGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"gasPrice\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"name\":\"CanNotEstimateGas\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"DelegateCallsOnly\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"EntryPointCannotBeZero\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ExecutionFailed\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"implementationAddress\",\"type\":\"address\"}],\"name\":\"InvalidImplementation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"restoredSigner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"expectedSigner\",\"type\":\"address\"}],\"name\":\"InvalidSignature\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"}],\"name\":\"MixedAuthFail\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"gasLeft\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"gasRequired\",\"type\":\"uint256\"}],\"name\":\"NotEnoughGasLeft\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OwnerCanNotBeSelf\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OwnerCannotBeZero\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OwnerProvidedIsSame\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TokenGasPriceFactorCanNotBeZero\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"dest\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"TokenTransferFailed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferToZeroAddressAttempt\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"destLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valueLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"funcLength\",\"type\":\"uint256\"}],\"name\":\"WrongBatchProvided\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"contractSignature\",\"type\":\"bytes\"}],\"name\":\"WrongContractSignature\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"uintS\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"contractSignatureLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"signatureLength\",\"type\":\"uint256\"}],\"name\":\"WrongContractSignatureFormat\",\"type\":\"error\"}],\"devdoc\":{\"errors\":{\"AlreadyInitialized(address)\":[{\"params\":{\"smartAccount\":\"Smart Account Address\"}}],\"CallerIsNotAnEntryPoint(address)\":[{\"params\":{\"caller\":\"address that tried to call onlyEntryPoint-protected method\"}}],\"CallerIsNotEntryPointOrOwner(address)\":[{\"params\":{\"caller\":\"address that tried to call _requireFromEntryPointOrOwner-protected method\"}}],\"CallerIsNotOwner(address)\":[{\"params\":{\"caller\":\"address that tried to call onlyOwner method\"}}],\"CanNotEstimateGas(uint256,uint256,bool)\":[{\"params\":{\"gasPrice\":\"gas price passed in Refund Info\",\"success\":\"whether transaction has been executed successfully or not\",\"targetTxGas\":\"gas required for target transaction\"}}],\"InvalidImplementation(address)\":[{\"params\":{\"implementationAddress\":\"implementation address provided\"}}],\"InvalidSignature(address,address)\":[{\"params\":{\"expectedSigner\":\"the address that was expected to be a signer\",\"restoredSigner\":\"the signer address restored from signature\"}}],\"MixedAuthFail(address)\":[{\"params\":{\"caller\":\"address that tried to call mixedAuth-protected method\"}}],\"NotEnoughGasLeft(uint256,uint256)\":[{\"params\":{\"gasLeft\":\"how much gas left at the moment of a check\",\"gasRequired\":\"how much gas required to proceed\"}}],\"TokenTransferFailed(address,address,uint256)\":[{\"params\":{\"amount\":\"the amount of tokens in a failed transfer\",\"dest\":\"token transfer receiver\",\"token\":\"token contract address\"}}],\"WrongBatchProvided(uint256,uint256,uint256)\":[{\"params\":{\"destLength\":\"length of destination contracts array\",\"funcLength\":\"length of function signatures array\",\"valueLength\":\"length of txn values array\"}}],\"WrongContractSignature(bytes)\":[{\"params\":{\"contractSignature\":\"the contract signature that has been verified\"}}],\"WrongContractSignatureFormat(uint256,uint256,uint256)\":[{\"params\":{\"contractSignatureLength\":\"length of a contract signature\",\"signatureLength\":\"the whole signature length\",\"uintS\":\"s converted to uint256\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"errors\":{\"AlreadyInitialized(address)\":[{\"notice\":\"Throws if trying to initialize a Smart Account that has already been initialized\"}],\"BaseImplementationCannotBeZero()\":[{\"notice\":\"Throws if zero address has been provided as Base Implementation address\"}],\"CallerIsNotAnEntryPoint(address)\":[{\"notice\":\"Throws at onlyEntryPoint when msg.sender is not an EntryPoint set for this Smart Account\"}],\"CallerIsNotEntryPointOrOwner(address)\":[{\"notice\":\"Throws at _requireFromEntryPointOrOwner when msg.sender is not an EntryPoint neither an owner\"}],\"CallerIsNotOwner(address)\":[{\"notice\":\"Throws at onlyOwner when msg.sender is not an owner\"}],\"CanNotEstimateGas(uint256,uint256,bool)\":[{\"notice\":\"Throws if not able to estimate gas It can be when amount of gas and its price are both zero and at the same time transaction has failed to be executed\"}],\"DelegateCallsOnly()\":[{\"notice\":\"Thrown when the function that must be called only via delegatecall is called directly\"}],\"EntryPointCannotBeZero()\":[{\"notice\":\"Throws if zero address has been provided as Entry Point address\"}],\"ExecutionFailed()\":[{\"notice\":\"Throws when the transaction execution fails\"}],\"InvalidImplementation(address)\":[{\"notice\":\"Throws if there is no code at implementationAddress\"}],\"InvalidSignature(address,address)\":[{\"notice\":\"Throws when the address that signed the data (restored from signature) differs from the address we expected to sign the data (i.e. some authorized address)\"}],\"MixedAuthFail(address)\":[{\"notice\":\"Throws at mixedAuth when msg.sender is not an owner neither _self\"}],\"NotEnoughGasLeft(uint256,uint256)\":[{\"notice\":\"Throws if not enough gas is left at some point\"}],\"OwnerCanNotBeSelf()\":[{\"notice\":\"Thrown when trying to use address of the Smart Account as an owner for itself\"}],\"OwnerCannotBeZero()\":[{\"notice\":\"Throws if trying to change an owner of a SmartAccount to the zero address\"}],\"OwnerProvidedIsSame()\":[{\"notice\":\"Thrown when trying to use current owner as a new owner in a _setOwner() call\"}],\"TokenGasPriceFactorCanNotBeZero()\":[{\"notice\":\"Thrown when trying to use 0 as tokenGasPriceFactor\"}],\"TokenTransferFailed(address,address,uint256)\":[{\"notice\":\"Throws if transfer of tokens failed\"}],\"TransferToZeroAddressAttempt()\":[{\"notice\":\"Throws when if trying to transfer to zero address\"}],\"WrongBatchProvided(uint256,uint256,uint256)\":[{\"notice\":\"Throws when data for executeBatchCall provided in wrong format (i.e. empty array or lengths mismatch)\"}],\"WrongContractSignature(bytes)\":[{\"notice\":\"Throws when isValidSignature for the conrtact signature and data hash return differs from EIP1271 Magic Value\"}],\"WrongContractSignatureFormat(uint256,uint256,uint256)\":[{\"notice\":\"Throws if contract signature is provided in frong format\"}]},\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/smart-contract-wallet/common/Errors.sol\":\"SmartAccountErrors\"},\"evmVersion\":\"london\",\"libraries\":{\":__CACHE_BREAKER__\":\"0x00000000d41867734bbee4c6863d9255b2b06ac1\"},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"contracts/smart-contract-wallet/common/Errors.sol\":{\"keccak256\":\"0xef2989dcfc2aedddfd76865faa371b7cfb1e4e40592cc31d6d4151914f1a6aaa\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://8248d7e170d8ff5d67e62c2e0528e3700dfdc3f08eb6fa8a2a6d7c3c5fafee76\",\"dweb:/ipfs/QmbEpeNpBqHbu4Gx2nwGweynRJRoe5NdGCZZ64TPxRdn3X\"]}},\"version\":1}","zk_version":"1.3.10"},"devdoc":{"errors":{"AlreadyInitialized(address)":[{"params":{"smartAccount":"Smart Account Address"}}],"CallerIsNotAnEntryPoint(address)":[{"params":{"caller":"address that tried to call onlyEntryPoint-protected method"}}],"CallerIsNotEntryPointOrOwner(address)":[{"params":{"caller":"address that tried to call _requireFromEntryPointOrOwner-protected method"}}],"CallerIsNotOwner(address)":[{"params":{"caller":"address that tried to call onlyOwner method"}}],"CanNotEstimateGas(uint256,uint256,bool)":[{"params":{"gasPrice":"gas price passed in Refund Info","success":"whether transaction has been executed successfully or not","targetTxGas":"gas required for target transaction"}}],"InvalidImplementation(address)":[{"params":{"implementationAddress":"implementation address provided"}}],"InvalidSignature(address,address)":[{"params":{"expectedSigner":"the address that was expected to be a signer","restoredSigner":"the signer address restored from signature"}}],"MixedAuthFail(address)":[{"params":{"caller":"address that tried to call mixedAuth-protected method"}}],"NotEnoughGasLeft(uint256,uint256)":[{"params":{"gasLeft":"how much gas left at the moment of a check","gasRequired":"how much gas required to proceed"}}],"TokenTransferFailed(address,address,uint256)":[{"params":{"amount":"the amount of tokens in a failed transfer","dest":"token transfer receiver","token":"token contract address"}}],"WrongBatchProvided(uint256,uint256,uint256)":[{"params":{"destLength":"length of destination contracts array","funcLength":"length of function signatures array","valueLength":"length of txn values array"}}],"WrongContractSignature(bytes)":[{"params":{"contractSignature":"the contract signature that has been verified"}}],"WrongContractSignatureFormat(uint256,uint256,uint256)":[{"params":{"contractSignatureLength":"length of a contract signature","signatureLength":"the whole signature length","uintS":"s converted to uint256"}}]},"kind":"dev","methods":{},"version":1},"userdoc":{"errors":{"AlreadyInitialized(address)":[{"notice":"Throws if trying to initialize a Smart Account that has already been initialized"}],"BaseImplementationCannotBeZero()":[{"notice":"Throws if zero address has been provided as Base Implementation address"}],"CallerIsNotAnEntryPoint(address)":[{"notice":"Throws at onlyEntryPoint when msg.sender is not an EntryPoint set for this Smart Account"}],"CallerIsNotEntryPointOrOwner(address)":[{"notice":"Throws at _requireFromEntryPointOrOwner when msg.sender is not an EntryPoint neither an owner"}],"CallerIsNotOwner(address)":[{"notice":"Throws at onlyOwner when msg.sender is not an owner"}],"CanNotEstimateGas(uint256,uint256,bool)":[{"notice":"Throws if not able to estimate gas It can be when amount of gas and its price are both zero and at the same time transaction has failed to be executed"}],"DelegateCallsOnly()":[{"notice":"Thrown when the function that must be called only via delegatecall is called directly"}],"EntryPointCannotBeZero()":[{"notice":"Throws if zero address has been provided as Entry Point address"}],"ExecutionFailed()":[{"notice":"Throws when the transaction execution fails"}],"InvalidImplementation(address)":[{"notice":"Throws if there is no code at implementationAddress"}],"InvalidSignature(address,address)":[{"notice":"Throws when the address that signed the data (restored from signature) differs from the address we expected to sign the data (i.e. some authorized address)"}],"MixedAuthFail(address)":[{"notice":"Throws at mixedAuth when msg.sender is not an owner neither _self"}],"NotEnoughGasLeft(uint256,uint256)":[{"notice":"Throws if not enough gas is left at some point"}],"OwnerCanNotBeSelf()":[{"notice":"Thrown when trying to use address of the Smart Account as an owner for itself"}],"OwnerCannotBeZero()":[{"notice":"Throws if trying to change an owner of a SmartAccount to the zero address"}],"OwnerProvidedIsSame()":[{"notice":"Thrown when trying to use current owner as a new owner in a _setOwner() call"}],"TokenGasPriceFactorCanNotBeZero()":[{"notice":"Thrown when trying to use 0 as tokenGasPriceFactor"}],"TokenTransferFailed(address,address,uint256)":[{"notice":"Throws if transfer of tokens failed"}],"TransferToZeroAddressAttempt()":[{"notice":"Throws when if trying to transfer to zero address"}],"WrongBatchProvided(uint256,uint256,uint256)":[{"notice":"Throws when data for executeBatchCall provided in wrong format (i.e. empty array or lengths mismatch)"}],"WrongContractSignature(bytes)":[{"notice":"Throws when isValidSignature for the conrtact signature and data hash return differs from EIP1271 Magic Value"}],"WrongContractSignatureFormat(uint256,uint256,uint256)":[{"notice":"Throws if contract signature is provided in frong format"}]},"kind":"user","methods":{},"version":1},"storageLayout":{"storage":[],"types":null},"evm":{"legacyAssembly":null,"assembly":"\t.text\n\t.file\t\"Errors.sol:SmartAccountErrors\"\n\t.globl\t__entry\n__entry:\n.func_begin0:\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB0_2\n\tadd\t128, r0, r1\n\tst.1\t64, r1\n\tcontext.get_context_u128\tr1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_2\n\tadd\t32, r0, r1\n\tst.2\t256, r1\n\tst.2\t288, r0\n\tadd\t@CPI0_0[0], r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_2:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end0:\n\n\t.note.GNU-stack\n\t.rodata\nCPI0_0:\n\t.cell 53919893334301279589334030174039261352344891250716429051063678533632\n","bytecode":{"object":"00000001012001900000000c0000613d0000008001000039000000400010043f0000000001000416000000000110004c0000000c0000c13d00000020010000390000010000100443000001200000044300000005010000410000000f0001042e000000000100001900000010000104300000000e000004320000000f0001042e00000010000104300000000000000000000000000000000000000000000000000000000200000000000000000000000000000040000001000000000000000000267824e06c210c8da510e6a527d17a231558f9ce076c573ae512af1b19cf0c4c"},"methodIdentifiers":{}},"irOptimized":"/// @use-src 18:\"contracts/smart-contract-wallet/common/Errors.sol\"\nobject \"SmartAccountErrors_5053\" {\n    code {\n        {\n            /// @src 18:524:5497  \"contract SmartAccountErrors is BaseSmartAccountErrors {...\"\n            let _1 := memoryguard(0x80)\n            mstore(64, _1)\n            if callvalue() { revert(0, 0) }\n            let _2 := datasize(\"SmartAccountErrors_5053_deployed\")\n            codecopy(_1, dataoffset(\"SmartAccountErrors_5053_deployed\"), _2)\n            return(_1, _2)\n        }\n    }\n    /// @use-src 18:\"contracts/smart-contract-wallet/common/Errors.sol\"\n    object \"SmartAccountErrors_5053_deployed\" {\n        code {\n            {\n                /// @src 18:524:5497  \"contract SmartAccountErrors is BaseSmartAccountErrors {...\"\n                revert(0, 0)\n            }\n        }\n        data \".metadata\" hex\"a2646970667358221220b72037cf130b4698773e0131042aa458120309ed37c81091f8b740cf7d3994d164736f6c63430008110033\"\n    }\n}\n","hash":"01000007ce33c107a4fd6e4c5d1593ba3e6dc13843c37379972fc60d7f371401","factoryDependencies":{}},"SmartAccountFactoryErrors":{"abi":[{"inputs":[{"internalType":"address","name":"smartAccount","type":"address"}],"name":"AlreadyInitialized","type":"error"},{"inputs":[],"name":"BaseImplementationCannotBeZero","type":"error"},{"inputs":[{"internalType":"address","name":"caller","type":"address"}],"name":"CallerIsNotAnEntryPoint","type":"error"},{"inputs":[{"internalType":"address","name":"caller","type":"address"}],"name":"CallerIsNotEntryPointOrOwner","type":"error"},{"inputs":[{"internalType":"address","name":"caller","type":"address"}],"name":"CallerIsNotOwner","type":"error"},{"inputs":[{"internalType":"uint256","name":"targetTxGas","type":"uint256"},{"internalType":"uint256","name":"gasPrice","type":"uint256"},{"internalType":"bool","name":"success","type":"bool"}],"name":"CanNotEstimateGas","type":"error"},{"inputs":[],"name":"DelegateCallsOnly","type":"error"},{"inputs":[],"name":"EntryPointCannotBeZero","type":"error"},{"inputs":[],"name":"ExecutionFailed","type":"error"},{"inputs":[{"internalType":"address","name":"implementationAddress","type":"address"}],"name":"InvalidImplementation","type":"error"},{"inputs":[{"internalType":"address","name":"restoredSigner","type":"address"},{"internalType":"address","name":"expectedSigner","type":"address"}],"name":"InvalidSignature","type":"error"},{"inputs":[{"internalType":"address","name":"caller","type":"address"}],"name":"MixedAuthFail","type":"error"},{"inputs":[{"internalType":"uint256","name":"gasLeft","type":"uint256"},{"internalType":"uint256","name":"gasRequired","type":"uint256"}],"name":"NotEnoughGasLeft","type":"error"},{"inputs":[],"name":"OwnerCanNotBeSelf","type":"error"},{"inputs":[],"name":"OwnerCannotBeZero","type":"error"},{"inputs":[],"name":"OwnerProvidedIsSame","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"uint256","name":"index","type":"uint256"}],"name":"ProxyDeploymentFailed","type":"error"},{"inputs":[],"name":"TokenGasPriceFactorCanNotBeZero","type":"error"},{"inputs":[{"internalType":"address","name":"token","type":"address"},{"internalType":"address","name":"dest","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"TokenTransferFailed","type":"error"},{"inputs":[],"name":"TransferToZeroAddressAttempt","type":"error"},{"inputs":[{"internalType":"uint256","name":"destLength","type":"uint256"},{"internalType":"uint256","name":"valueLength","type":"uint256"},{"internalType":"uint256","name":"funcLength","type":"uint256"}],"name":"WrongBatchProvided","type":"error"},{"inputs":[{"internalType":"bytes","name":"contractSignature","type":"bytes"}],"name":"WrongContractSignature","type":"error"},{"inputs":[{"internalType":"uint256","name":"uintS","type":"uint256"},{"internalType":"uint256","name":"contractSignatureLength","type":"uint256"},{"internalType":"uint256","name":"signatureLength","type":"uint256"}],"name":"WrongContractSignatureFormat","type":"error"}],"metadata":{"optimizer_settings":"M3B3","solc_metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"smartAccount\",\"type\":\"address\"}],\"name\":\"AlreadyInitialized\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"BaseImplementationCannotBeZero\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"}],\"name\":\"CallerIsNotAnEntryPoint\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"}],\"name\":\"CallerIsNotEntryPointOrOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"}],\"name\":\"CallerIsNotOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"targetTxGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"gasPrice\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"name\":\"CanNotEstimateGas\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"DelegateCallsOnly\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"EntryPointCannotBeZero\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ExecutionFailed\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"implementationAddress\",\"type\":\"address\"}],\"name\":\"InvalidImplementation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"restoredSigner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"expectedSigner\",\"type\":\"address\"}],\"name\":\"InvalidSignature\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"}],\"name\":\"MixedAuthFail\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"gasLeft\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"gasRequired\",\"type\":\"uint256\"}],\"name\":\"NotEnoughGasLeft\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OwnerCanNotBeSelf\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OwnerCannotBeZero\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OwnerProvidedIsSame\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"ProxyDeploymentFailed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TokenGasPriceFactorCanNotBeZero\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"dest\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"TokenTransferFailed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferToZeroAddressAttempt\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"destLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valueLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"funcLength\",\"type\":\"uint256\"}],\"name\":\"WrongBatchProvided\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"contractSignature\",\"type\":\"bytes\"}],\"name\":\"WrongContractSignature\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"uintS\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"contractSignatureLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"signatureLength\",\"type\":\"uint256\"}],\"name\":\"WrongContractSignatureFormat\",\"type\":\"error\"}],\"devdoc\":{\"errors\":{\"AlreadyInitialized(address)\":[{\"params\":{\"smartAccount\":\"Smart Account Address\"}}],\"CallerIsNotAnEntryPoint(address)\":[{\"params\":{\"caller\":\"address that tried to call onlyEntryPoint-protected method\"}}],\"CallerIsNotEntryPointOrOwner(address)\":[{\"params\":{\"caller\":\"address that tried to call _requireFromEntryPointOrOwner-protected method\"}}],\"CallerIsNotOwner(address)\":[{\"params\":{\"caller\":\"address that tried to call onlyOwner method\"}}],\"CanNotEstimateGas(uint256,uint256,bool)\":[{\"params\":{\"gasPrice\":\"gas price passed in Refund Info\",\"success\":\"whether transaction has been executed successfully or not\",\"targetTxGas\":\"gas required for target transaction\"}}],\"InvalidImplementation(address)\":[{\"params\":{\"implementationAddress\":\"implementation address provided\"}}],\"InvalidSignature(address,address)\":[{\"params\":{\"expectedSigner\":\"the address that was expected to be a signer\",\"restoredSigner\":\"the signer address restored from signature\"}}],\"MixedAuthFail(address)\":[{\"params\":{\"caller\":\"address that tried to call mixedAuth-protected method\"}}],\"NotEnoughGasLeft(uint256,uint256)\":[{\"params\":{\"gasLeft\":\"how much gas left at the moment of a check\",\"gasRequired\":\"how much gas required to proceed\"}}],\"ProxyDeploymentFailed(address,uint256)\":[{\"params\":{\"index\":\"Deployment index\",\"owner\":\"Owner of a Proxy (Smart Account)\"}}],\"TokenTransferFailed(address,address,uint256)\":[{\"params\":{\"amount\":\"the amount of tokens in a failed transfer\",\"dest\":\"token transfer receiver\",\"token\":\"token contract address\"}}],\"WrongBatchProvided(uint256,uint256,uint256)\":[{\"params\":{\"destLength\":\"length of destination contracts array\",\"funcLength\":\"length of function signatures array\",\"valueLength\":\"length of txn values array\"}}],\"WrongContractSignature(bytes)\":[{\"params\":{\"contractSignature\":\"the contract signature that has been verified\"}}],\"WrongContractSignatureFormat(uint256,uint256,uint256)\":[{\"params\":{\"contractSignatureLength\":\"length of a contract signature\",\"signatureLength\":\"the whole signature length\",\"uintS\":\"s converted to uint256\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"errors\":{\"AlreadyInitialized(address)\":[{\"notice\":\"Throws if trying to initialize a Smart Account that has already been initialized\"}],\"BaseImplementationCannotBeZero()\":[{\"notice\":\"Throws if zero address has been provided as Base Implementation address\"}],\"CallerIsNotAnEntryPoint(address)\":[{\"notice\":\"Throws at onlyEntryPoint when msg.sender is not an EntryPoint set for this Smart Account\"}],\"CallerIsNotEntryPointOrOwner(address)\":[{\"notice\":\"Throws at _requireFromEntryPointOrOwner when msg.sender is not an EntryPoint neither an owner\"}],\"CallerIsNotOwner(address)\":[{\"notice\":\"Throws at onlyOwner when msg.sender is not an owner\"}],\"CanNotEstimateGas(uint256,uint256,bool)\":[{\"notice\":\"Throws if not able to estimate gas It can be when amount of gas and its price are both zero and at the same time transaction has failed to be executed\"}],\"DelegateCallsOnly()\":[{\"notice\":\"Thrown when the function that must be called only via delegatecall is called directly\"}],\"EntryPointCannotBeZero()\":[{\"notice\":\"Throws if zero address has been provided as Entry Point address\"}],\"ExecutionFailed()\":[{\"notice\":\"Throws when the transaction execution fails\"}],\"InvalidImplementation(address)\":[{\"notice\":\"Throws if there is no code at implementationAddress\"}],\"InvalidSignature(address,address)\":[{\"notice\":\"Throws when the address that signed the data (restored from signature) differs from the address we expected to sign the data (i.e. some authorized address)\"}],\"MixedAuthFail(address)\":[{\"notice\":\"Throws at mixedAuth when msg.sender is not an owner neither _self\"}],\"NotEnoughGasLeft(uint256,uint256)\":[{\"notice\":\"Throws if not enough gas is left at some point\"}],\"OwnerCanNotBeSelf()\":[{\"notice\":\"Thrown when trying to use address of the Smart Account as an owner for itself\"}],\"OwnerCannotBeZero()\":[{\"notice\":\"Throws if trying to change an owner of a SmartAccount to the zero address\"}],\"OwnerProvidedIsSame()\":[{\"notice\":\"Thrown when trying to use current owner as a new owner in a _setOwner() call\"}],\"ProxyDeploymentFailed(address,uint256)\":[{\"notice\":\"Throws when the new Proxy deployment fails\"}],\"TokenGasPriceFactorCanNotBeZero()\":[{\"notice\":\"Thrown when trying to use 0 as tokenGasPriceFactor\"}],\"TokenTransferFailed(address,address,uint256)\":[{\"notice\":\"Throws if transfer of tokens failed\"}],\"TransferToZeroAddressAttempt()\":[{\"notice\":\"Throws when if trying to transfer to zero address\"}],\"WrongBatchProvided(uint256,uint256,uint256)\":[{\"notice\":\"Throws when data for executeBatchCall provided in wrong format (i.e. empty array or lengths mismatch)\"}],\"WrongContractSignature(bytes)\":[{\"notice\":\"Throws when isValidSignature for the conrtact signature and data hash return differs from EIP1271 Magic Value\"}],\"WrongContractSignatureFormat(uint256,uint256,uint256)\":[{\"notice\":\"Throws if contract signature is provided in frong format\"}]},\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/smart-contract-wallet/common/Errors.sol\":\"SmartAccountFactoryErrors\"},\"evmVersion\":\"london\",\"libraries\":{\":__CACHE_BREAKER__\":\"0x00000000d41867734bbee4c6863d9255b2b06ac1\"},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"contracts/smart-contract-wallet/common/Errors.sol\":{\"keccak256\":\"0xef2989dcfc2aedddfd76865faa371b7cfb1e4e40592cc31d6d4151914f1a6aaa\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://8248d7e170d8ff5d67e62c2e0528e3700dfdc3f08eb6fa8a2a6d7c3c5fafee76\",\"dweb:/ipfs/QmbEpeNpBqHbu4Gx2nwGweynRJRoe5NdGCZZ64TPxRdn3X\"]}},\"version\":1}","zk_version":"1.3.10"},"devdoc":{"errors":{"AlreadyInitialized(address)":[{"params":{"smartAccount":"Smart Account Address"}}],"CallerIsNotAnEntryPoint(address)":[{"params":{"caller":"address that tried to call onlyEntryPoint-protected method"}}],"CallerIsNotEntryPointOrOwner(address)":[{"params":{"caller":"address that tried to call _requireFromEntryPointOrOwner-protected method"}}],"CallerIsNotOwner(address)":[{"params":{"caller":"address that tried to call onlyOwner method"}}],"CanNotEstimateGas(uint256,uint256,bool)":[{"params":{"gasPrice":"gas price passed in Refund Info","success":"whether transaction has been executed successfully or not","targetTxGas":"gas required for target transaction"}}],"InvalidImplementation(address)":[{"params":{"implementationAddress":"implementation address provided"}}],"InvalidSignature(address,address)":[{"params":{"expectedSigner":"the address that was expected to be a signer","restoredSigner":"the signer address restored from signature"}}],"MixedAuthFail(address)":[{"params":{"caller":"address that tried to call mixedAuth-protected method"}}],"NotEnoughGasLeft(uint256,uint256)":[{"params":{"gasLeft":"how much gas left at the moment of a check","gasRequired":"how much gas required to proceed"}}],"ProxyDeploymentFailed(address,uint256)":[{"params":{"index":"Deployment index","owner":"Owner of a Proxy (Smart Account)"}}],"TokenTransferFailed(address,address,uint256)":[{"params":{"amount":"the amount of tokens in a failed transfer","dest":"token transfer receiver","token":"token contract address"}}],"WrongBatchProvided(uint256,uint256,uint256)":[{"params":{"destLength":"length of destination contracts array","funcLength":"length of function signatures array","valueLength":"length of txn values array"}}],"WrongContractSignature(bytes)":[{"params":{"contractSignature":"the contract signature that has been verified"}}],"WrongContractSignatureFormat(uint256,uint256,uint256)":[{"params":{"contractSignatureLength":"length of a contract signature","signatureLength":"the whole signature length","uintS":"s converted to uint256"}}]},"kind":"dev","methods":{},"version":1},"userdoc":{"errors":{"AlreadyInitialized(address)":[{"notice":"Throws if trying to initialize a Smart Account that has already been initialized"}],"BaseImplementationCannotBeZero()":[{"notice":"Throws if zero address has been provided as Base Implementation address"}],"CallerIsNotAnEntryPoint(address)":[{"notice":"Throws at onlyEntryPoint when msg.sender is not an EntryPoint set for this Smart Account"}],"CallerIsNotEntryPointOrOwner(address)":[{"notice":"Throws at _requireFromEntryPointOrOwner when msg.sender is not an EntryPoint neither an owner"}],"CallerIsNotOwner(address)":[{"notice":"Throws at onlyOwner when msg.sender is not an owner"}],"CanNotEstimateGas(uint256,uint256,bool)":[{"notice":"Throws if not able to estimate gas It can be when amount of gas and its price are both zero and at the same time transaction has failed to be executed"}],"DelegateCallsOnly()":[{"notice":"Thrown when the function that must be called only via delegatecall is called directly"}],"EntryPointCannotBeZero()":[{"notice":"Throws if zero address has been provided as Entry Point address"}],"ExecutionFailed()":[{"notice":"Throws when the transaction execution fails"}],"InvalidImplementation(address)":[{"notice":"Throws if there is no code at implementationAddress"}],"InvalidSignature(address,address)":[{"notice":"Throws when the address that signed the data (restored from signature) differs from the address we expected to sign the data (i.e. some authorized address)"}],"MixedAuthFail(address)":[{"notice":"Throws at mixedAuth when msg.sender is not an owner neither _self"}],"NotEnoughGasLeft(uint256,uint256)":[{"notice":"Throws if not enough gas is left at some point"}],"OwnerCanNotBeSelf()":[{"notice":"Thrown when trying to use address of the Smart Account as an owner for itself"}],"OwnerCannotBeZero()":[{"notice":"Throws if trying to change an owner of a SmartAccount to the zero address"}],"OwnerProvidedIsSame()":[{"notice":"Thrown when trying to use current owner as a new owner in a _setOwner() call"}],"ProxyDeploymentFailed(address,uint256)":[{"notice":"Throws when the new Proxy deployment fails"}],"TokenGasPriceFactorCanNotBeZero()":[{"notice":"Thrown when trying to use 0 as tokenGasPriceFactor"}],"TokenTransferFailed(address,address,uint256)":[{"notice":"Throws if transfer of tokens failed"}],"TransferToZeroAddressAttempt()":[{"notice":"Throws when if trying to transfer to zero address"}],"WrongBatchProvided(uint256,uint256,uint256)":[{"notice":"Throws when data for executeBatchCall provided in wrong format (i.e. empty array or lengths mismatch)"}],"WrongContractSignature(bytes)":[{"notice":"Throws when isValidSignature for the conrtact signature and data hash return differs from EIP1271 Magic Value"}],"WrongContractSignatureFormat(uint256,uint256,uint256)":[{"notice":"Throws if contract signature is provided in frong format"}]},"kind":"user","methods":{},"version":1},"storageLayout":{"storage":[],"types":null},"evm":{"legacyAssembly":null,"assembly":"\t.text\n\t.file\t\"Errors.sol:SmartAccountFactoryErrors\"\n\t.globl\t__entry\n__entry:\n.func_begin0:\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB0_2\n\tadd\t128, r0, r1\n\tst.1\t64, r1\n\tcontext.get_context_u128\tr1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_2\n\tadd\t32, r0, r1\n\tst.2\t256, r1\n\tst.2\t288, r0\n\tadd\t@CPI0_0[0], r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_2:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end0:\n\n\t.note.GNU-stack\n\t.rodata\nCPI0_0:\n\t.cell 53919893334301279589334030174039261352344891250716429051063678533632\n","bytecode":{"object":"00000001012001900000000c0000613d0000008001000039000000400010043f0000000001000416000000000110004c0000000c0000c13d00000020010000390000010000100443000001200000044300000005010000410000000f0001042e000000000100001900000010000104300000000e000004320000000f0001042e00000010000104300000000000000000000000000000000000000000000000000000000200000000000000000000000000000040000001000000000000000000d473fec4d5f062e95eb708afcc10fe77d98aa35b1d1573c704aa8cf86f2d71f0"},"methodIdentifiers":{}},"irOptimized":"/// @use-src 18:\"contracts/smart-contract-wallet/common/Errors.sol\"\nobject \"SmartAccountFactoryErrors_5063\" {\n    code {\n        {\n            /// @src 18:5499:5786  \"contract SmartAccountFactoryErrors is SmartAccountErrors {...\"\n            let _1 := memoryguard(0x80)\n            mstore(64, _1)\n            if callvalue() { revert(0, 0) }\n            let _2 := datasize(\"SmartAccountFactoryErrors_5063_deployed\")\n            codecopy(_1, dataoffset(\"SmartAccountFactoryErrors_5063_deployed\"), _2)\n            return(_1, _2)\n        }\n    }\n    /// @use-src 18:\"contracts/smart-contract-wallet/common/Errors.sol\"\n    object \"SmartAccountFactoryErrors_5063_deployed\" {\n        code {\n            {\n                /// @src 18:5499:5786  \"contract SmartAccountFactoryErrors is SmartAccountErrors {...\"\n                revert(0, 0)\n            }\n        }\n        data \".metadata\" hex\"a26469706673582212201731819c609010268aef411ae83c74c09c051ce07fe318f409392d1b7294711d64736f6c63430008110033\"\n    }\n}\n","hash":"01000007d7fa05b3af6e40c91f347c3fc009ccf270a749f4316cc58cc2540152","factoryDependencies":{}}},"contracts/smart-contract-wallet/common/ReentrancyGuard.sol":{"ReentrancyGuard":{"abi":[{"inputs":[],"name":"ReentrancyProtectionActivated","type":"error"}],"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ReentrancyProtectionActivated\",\"type\":\"error\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"title\":\"Reentrancy Guard - reentrancy protection\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/smart-contract-wallet/common/ReentrancyGuard.sol\":\"ReentrancyGuard\"},\"evmVersion\":\"london\",\"libraries\":{\":__CACHE_BREAKER__\":\"0x00000000d41867734bbee4c6863d9255b2b06ac1\"},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"contracts/smart-contract-wallet/common/ReentrancyGuard.sol\":{\"keccak256\":\"0x399687cf8c0703996a34d63ccf3c5ef19471aa3b02fcbae6cd6ac5c839ae7b1b\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://406c6236f2c8e80ebd75306449ad99bc0e47b26200d0a9e68b8a72a69eeb12e8\",\"dweb:/ipfs/QmSuw7b1T5ttyQQ1qioV2vLpKGY9HGBnPJNmwZEgBUL8jp\"]}},\"version\":1}","devdoc":{"kind":"dev","methods":{},"title":"Reentrancy Guard - reentrancy protection","version":1},"userdoc":{"kind":"user","methods":{},"version":1},"storageLayout":{"storage":[{"astId":5141,"contract":"contracts/smart-contract-wallet/common/ReentrancyGuard.sol:ReentrancyGuard","label":"reentrancyStatus","offset":0,"slot":"0","type":"t_uint256"}],"types":{"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}},"evm":{"legacyAssembly":null,"assembly":null,"bytecode":null,"methodIdentifiers":{}},"irOptimized":""}},"contracts/smart-contract-wallet/common/SecuredTokenTransfer.sol":{"SecuredTokenTransfer":{"abi":[],"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"title\":\"SecuredTokenTransfer - Secure token transfer\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/smart-contract-wallet/common/SecuredTokenTransfer.sol\":\"SecuredTokenTransfer\"},\"evmVersion\":\"london\",\"libraries\":{\":__CACHE_BREAKER__\":\"0x00000000d41867734bbee4c6863d9255b2b06ac1\"},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"contracts/smart-contract-wallet/common/SecuredTokenTransfer.sol\":{\"keccak256\":\"0x53c6c0faaba3c0a3abe6aecd08b7bfbf530246930f52ef6642394040a09d8dae\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://e62c706474f89b74d95fde23921bbb7d9017f6a54ad1297731c58424eba3a23e\",\"dweb:/ipfs/QmXF8uAVt6x6E1P1LUG8e15WpLYznfxAJpGr1BREiUhbMG\"]}},\"version\":1}","devdoc":{"kind":"dev","methods":{},"title":"SecuredTokenTransfer - Secure token transfer","version":1},"userdoc":{"kind":"user","methods":{},"version":1},"storageLayout":{"storage":[],"types":null},"evm":{"legacyAssembly":null,"assembly":null,"bytecode":null,"methodIdentifiers":{}},"irOptimized":""}},"contracts/smart-contract-wallet/common/SelfAuthorized.sol":{"SelfAuthorized":{"abi":[{"inputs":[{"internalType":"address","name":"caller","type":"address"}],"name":"CallerIsNotSelf","type":"error"}],"metadata":{"optimizer_settings":"M3B3","solc_metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"}],\"name\":\"CallerIsNotSelf\",\"type\":\"error\"}],\"devdoc\":{\"errors\":{\"CallerIsNotSelf(address)\":[{\"params\":{\"caller\":\"Caller address\"}}]},\"kind\":\"dev\",\"methods\":{},\"title\":\"SelfAuthorized - authorizes current contract to perform actions\",\"version\":1},\"userdoc\":{\"errors\":{\"CallerIsNotSelf(address)\":[{\"notice\":\"Throws when the caller is not address(this)\"}]},\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/smart-contract-wallet/common/SelfAuthorized.sol\":\"SelfAuthorized\"},\"evmVersion\":\"london\",\"libraries\":{\":__CACHE_BREAKER__\":\"0x00000000d41867734bbee4c6863d9255b2b06ac1\"},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"contracts/smart-contract-wallet/common/Errors.sol\":{\"keccak256\":\"0xef2989dcfc2aedddfd76865faa371b7cfb1e4e40592cc31d6d4151914f1a6aaa\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://8248d7e170d8ff5d67e62c2e0528e3700dfdc3f08eb6fa8a2a6d7c3c5fafee76\",\"dweb:/ipfs/QmbEpeNpBqHbu4Gx2nwGweynRJRoe5NdGCZZ64TPxRdn3X\"]},\"contracts/smart-contract-wallet/common/SelfAuthorized.sol\":{\"keccak256\":\"0xaff7f31a495e6455b386d215dc8413efb816ca340b7a4254ea1c799766451b2f\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://0cdda0e1a507a8faca7fcbab22324c5a26ddd0be417488de48a86b983b8ceacc\",\"dweb:/ipfs/QmTC2y5o6skp95sStYU86Djetk3HPvTXoZrDMaYFnKuBJG\"]}},\"version\":1}","zk_version":"1.3.10"},"devdoc":{"errors":{"CallerIsNotSelf(address)":[{"params":{"caller":"Caller address"}}]},"kind":"dev","methods":{},"title":"SelfAuthorized - authorizes current contract to perform actions","version":1},"userdoc":{"errors":{"CallerIsNotSelf(address)":[{"notice":"Throws when the caller is not address(this)"}]},"kind":"user","methods":{},"version":1},"storageLayout":{"storage":[],"types":null},"evm":{"legacyAssembly":null,"assembly":"\t.text\n\t.file\t\"SelfAuthorized.sol:SelfAuthorized\"\n\t.globl\t__entry\n__entry:\n.func_begin0:\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB0_2\n\tadd\t128, r0, r1\n\tst.1\t64, r1\n\tcontext.get_context_u128\tr1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_2\n\tadd\t32, r0, r1\n\tst.2\t256, r1\n\tst.2\t288, r0\n\tadd\t@CPI0_0[0], r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_2:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end0:\n\n\t.note.GNU-stack\n\t.rodata\nCPI0_0:\n\t.cell 53919893334301279589334030174039261352344891250716429051063678533632\n","bytecode":{"object":"00000001012001900000000c0000613d0000008001000039000000400010043f0000000001000416000000000110004c0000000c0000c13d00000020010000390000010000100443000001200000044300000005010000410000000f0001042e000000000100001900000010000104300000000e000004320000000f0001042e00000010000104300000000000000000000000000000000000000000000000000000000200000000000000000000000000000040000001000000000000000000417094646d43141406b507eac936565fef338ab83e767604ff063fa51a822892"},"methodIdentifiers":{}},"irOptimized":"/// @use-src 18:\"contracts/smart-contract-wallet/common/Errors.sol\", 21:\"contracts/smart-contract-wallet/common/SelfAuthorized.sol\"\nobject \"SelfAuthorized_5257\" {\n    code {\n        {\n            /// @src 21:202:524  \"contract SelfAuthorized is SelfAuthorizedErrors {...\"\n            let _1 := memoryguard(0x80)\n            mstore(64, _1)\n            if callvalue() { revert(0, 0) }\n            let _2 := datasize(\"SelfAuthorized_5257_deployed\")\n            codecopy(_1, dataoffset(\"SelfAuthorized_5257_deployed\"), _2)\n            return(_1, _2)\n        }\n    }\n    /// @use-src 21:\"contracts/smart-contract-wallet/common/SelfAuthorized.sol\"\n    object \"SelfAuthorized_5257_deployed\" {\n        code {\n            {\n                /// @src 21:202:524  \"contract SelfAuthorized is SelfAuthorizedErrors {...\"\n                revert(0, 0)\n            }\n        }\n        data \".metadata\" hex\"a2646970667358221220980c8759c882a6d231492facbff883f7408dba84231e8d31d8a4a3514460453064736f6c63430008110033\"\n    }\n}\n","hash":"0100000761beaec7cf8333a88d4bb95c23788dafb5869b56aa7175b22e890970","factoryDependencies":{}}},"contracts/smart-contract-wallet/common/SignatureDecoder.sol":{"SignatureDecoder":{"abi":[],"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"title\":\"SignatureDecoder - Decodes signatures that a encoded as bytes\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/smart-contract-wallet/common/SignatureDecoder.sol\":\"SignatureDecoder\"},\"evmVersion\":\"london\",\"libraries\":{\":__CACHE_BREAKER__\":\"0x00000000d41867734bbee4c6863d9255b2b06ac1\"},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"contracts/smart-contract-wallet/common/SignatureDecoder.sol\":{\"keccak256\":\"0x591c6470fc0854467a1ae2ab17977c38de055ba3c4e7f3c9a903dd10997e3d4f\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://a3f0bee474df330369650e186a43ce4437330017a4e0125c7bb614a905dbf783\",\"dweb:/ipfs/QmSYnyHoPBUP3wBfAPp3HDujH7tMZeDMpGJg75nZtgs6Em\"]}},\"version\":1}","devdoc":{"kind":"dev","methods":{},"title":"SignatureDecoder - Decodes signatures that a encoded as bytes","version":1},"userdoc":{"kind":"user","methods":{},"version":1},"storageLayout":{"storage":[],"types":null},"evm":{"legacyAssembly":null,"assembly":null,"bytecode":null,"methodIdentifiers":{}},"irOptimized":""}},"contracts/smart-contract-wallet/handler/DefaultCallbackHandler.sol":{"DefaultCallbackHandler":{"abi":[{"inputs":[],"name":"NAME","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"VERSION","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"},{"internalType":"address","name":"","type":"address"},{"internalType":"uint256[]","name":"","type":"uint256[]"},{"internalType":"uint256[]","name":"","type":"uint256[]"},{"internalType":"bytes","name":"","type":"bytes"}],"name":"onERC1155BatchReceived","outputs":[{"internalType":"bytes4","name":"","type":"bytes4"}],"stateMutability":"pure","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"},{"internalType":"address","name":"","type":"address"},{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"bytes","name":"","type":"bytes"}],"name":"onERC1155Received","outputs":[{"internalType":"bytes4","name":"","type":"bytes4"}],"stateMutability":"pure","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"},{"internalType":"address","name":"","type":"address"},{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"bytes","name":"","type":"bytes"}],"name":"onERC721Received","outputs":[{"internalType":"bytes4","name":"","type":"bytes4"}],"stateMutability":"pure","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"},{"internalType":"address","name":"","type":"address"},{"internalType":"address","name":"","type":"address"},{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"bytes","name":"","type":"bytes"},{"internalType":"bytes","name":"","type":"bytes"}],"name":"tokensReceived","outputs":[],"stateMutability":"pure","type":"function"}],"metadata":{"optimizer_settings":"M3B3","solc_metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"NAME\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"VERSION\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"onERC1155BatchReceived\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"onERC1155Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"onERC721Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"tokensReceived\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Handles EIP-1271 compliant isValidSignature requests.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"title\":\"Default Callback Handler - returns true for known token callbacks\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"inspired by Richard Meissner's <richard@gnosis.pm> implementation\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/smart-contract-wallet/handler/DefaultCallbackHandler.sol\":\"DefaultCallbackHandler\"},\"evmVersion\":\"london\",\"libraries\":{\":__CACHE_BREAKER__\":\"0x00000000d41867734bbee4c6863d9255b2b06ac1\"},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@account-abstraction/contracts/core/Helpers.sol\":{\"keccak256\":\"0x591c87519f7155d1909210276b77925ab2722a99b7b5d5649aecc36ebbdb045a\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://69643e83f68e6a13d5075c7565bfce326673b0bd98c432033c4603ea84835746\",\"dweb:/ipfs/QmSwSzjYyV7qudi5vvsmzHMG2Z4YJZxX51RRXXVCLaNcEU\"]},\"@account-abstraction/contracts/interfaces/IAccount.sol\":{\"keccak256\":\"0x556a0e5980de18e90b115553ed502408155ba35f58642823010d9288047bc418\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://a0f420134b79596db8737173c7b933ae0a33059e107b6327c43aa40d4744a9e4\",\"dweb:/ipfs/QmRo8s1AhXmEMV7uPYnbpYwU19e9Bk6jmYBJTiPx3Fo85W\"]},\"@account-abstraction/contracts/interfaces/IAggregator.sol\":{\"keccak256\":\"0x060e9ddb0152250c269ba0640dc5753834ac44cf182a2837d508c0c529cae26a\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://20ed837bc5909c89ff1910246bf245a5dad6840aa939382e1694964eb7dbd37b\",\"dweb:/ipfs/QmTMybRq5yyghPDDs1ZCNAVB9sSJ4WHe6Q9mejuKPTAdNP\"]},\"@account-abstraction/contracts/interfaces/IEntryPoint.sol\":{\"keccak256\":\"0x3a90bf308819ed125fa4202f880999caff8a8686633b8ddb79a30ca240d5b8f8\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://d2d21cc92c2fdab2b58d21bc25d4cd0e8c284b922528a186b087b818d54bc6cf\",\"dweb:/ipfs/QmT1qrfuBjsv2rmRCDn8mgPXHp94hARJwzbcDuBLDTbFWd\"]},\"@account-abstraction/contracts/interfaces/INonceManager.sol\":{\"keccak256\":\"0x509871e6c63663cdcc3eba19920fe84e991f38b289b1377ac3c3a6d9f22d7e12\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://00fe21b4349b24c50df60e1a705179293982bd9e7a32b78d4bac9620f89e7fe2\",\"dweb:/ipfs/QmSFFYGfUwQbVa6hASjU7YxTvgi2HkfrPr4X5oPHscHg8b\"]},\"@account-abstraction/contracts/interfaces/IStakeManager.sol\":{\"keccak256\":\"0xd227b02888cd4ac68daebcdfd992ec00f9fff66fa3b3bb16f656cd582fa3480f\",\"license\":\"GPL-3.0-only\",\"urls\":[\"bzz-raw://b389da4714a138be63704a576a482505eab2855e263b38a93706395d8d42e7c3\",\"dweb:/ipfs/QmeeAZpdHwUXxqP8pxA7GNtoCGBmmH4FaqLLwScVKGxtxZ\"]},\"@account-abstraction/contracts/interfaces/UserOperation.sol\":{\"keccak256\":\"0x61374003361059087fdcf17967a7bba052badeaf5c7f0ae689166f8aafd3a45c\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://6ff83c59432e733bf6304dda27cd4b0f34401917dd535e2669cc842d2d26568c\",\"dweb:/ipfs/QmPJbHU5TAjHqUTZzAcicEeG2nknmwCN43L4EW9LHbknTN\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0xa4d1d62251f8574deb032a35fc948386a9b4de74b812d4f545a1ac120486b48a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8c969013129ba9e651a20735ef659fef6d8a1139ea3607bd4b26ddea2d645634\",\"dweb:/ipfs/QmVhVa6LGuzAcB8qgDtVHRkucn4ihj5UZr8xBLcJkP6ucb\"]},\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0xda898fa084aa1ddfdb346e6a40459e00a59d87071cce7c315a46d648dd71d0ba\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ce501a941f4aa1555c04dabb5e07992503bb6a9b32ff8f7cdcefdb4a742210cb\",\"dweb:/ipfs/QmeScPrUpdrGYs9BytV3Z5ZWJcBXtuAgCW4BLHua4xFUxx\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa1e8e83cd0087785df04ac79fb395d9f3684caeaf973d9e2c71caef723a3a5d6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://33bbf48cc069be677705037ba7520c22b1b622c23b33e1a71495f2d36549d40b\",\"dweb:/ipfs/Qmct36zWXv3j7LZB83uwbg7TXwnZSN1fqHNDZ93GG98bGz\"]},\"contracts/smart-contract-wallet/BaseSmartAccount.sol\":{\"keccak256\":\"0x59fbea0d532f8a11c3114613791e96e5412d109d78bdc39e46ad039aa8be6f5b\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://3b816aca2894404864952b8d180fa993d36abe08b0d587d6e7f236eb586444a4\",\"dweb:/ipfs/Qmb3fM6woAdtjDoTkAXC6bbcpfmp3Z3p7Kk3Cg919WQzH3\"]},\"contracts/smart-contract-wallet/SmartAccount.sol\":{\"keccak256\":\"0x823cc4ebcb0ecabad0c933362293d938d218fc87051ff71250617aa55b978500\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a986065f9b39d736e00c6540bd227025671d00e31802032780f51026756da578\",\"dweb:/ipfs/QmZ3CYv1V2dozmwMs5isWvE1W1VxCAHQvnfoF984nzJn4q\"]},\"contracts/smart-contract-wallet/base/Executor.sol\":{\"keccak256\":\"0x578ee56ff18e80fbf5ae28644ddc47f6a480e906d676caca3b43df89ef425647\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://a038b142793c435c9b3a349c808a4d7c8c934a57d82c32384c36501c5069891f\",\"dweb:/ipfs/QmQUUJcbjTjeJQFjFVk6D6a3EtVbkwEsRHmRVcc1FJmuRr\"]},\"contracts/smart-contract-wallet/base/FallbackManager.sol\":{\"keccak256\":\"0xe3b6dbcfb3bfa65dba011674892778d1578d40421d0ed7700e1ac2582541954e\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://479d9add893ed5b96c9be32d2fceec345fbe60ca03b3a26ffd7fe91afaafb678\",\"dweb:/ipfs/QmWmVeiLU19Bk3s5R57oDMZibRNsB8tb279kRx1JrAHsCh\"]},\"contracts/smart-contract-wallet/base/ModuleManager.sol\":{\"keccak256\":\"0x98210b7ffe719d9873fb24ef89cbbbc58729412f4e9285bae09e9c205731a665\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://f58685b75663559e39d5980238b9b25c2bd299050e66e47b50266e2dce6738ae\",\"dweb:/ipfs/QmZV3vZ9X1Nt96ty12Vy54n818w2Fafs5gkhkgxQotZxF5\"]},\"contracts/smart-contract-wallet/common/Enum.sol\":{\"keccak256\":\"0x657464511d99c53126e008910b266875b299d6e328e105203cb53b6f467acdac\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://d31ced2b537c575f21e5d78989076ce76df8befb276d75c79cf64e44031ae527\",\"dweb:/ipfs/QmNh5E4sTYkphUs8P4rZ8WCQUkWZmjwAAyPzSr612rEs8C\"]},\"contracts/smart-contract-wallet/common/Errors.sol\":{\"keccak256\":\"0xef2989dcfc2aedddfd76865faa371b7cfb1e4e40592cc31d6d4151914f1a6aaa\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://8248d7e170d8ff5d67e62c2e0528e3700dfdc3f08eb6fa8a2a6d7c3c5fafee76\",\"dweb:/ipfs/QmbEpeNpBqHbu4Gx2nwGweynRJRoe5NdGCZZ64TPxRdn3X\"]},\"contracts/smart-contract-wallet/common/ReentrancyGuard.sol\":{\"keccak256\":\"0x399687cf8c0703996a34d63ccf3c5ef19471aa3b02fcbae6cd6ac5c839ae7b1b\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://406c6236f2c8e80ebd75306449ad99bc0e47b26200d0a9e68b8a72a69eeb12e8\",\"dweb:/ipfs/QmSuw7b1T5ttyQQ1qioV2vLpKGY9HGBnPJNmwZEgBUL8jp\"]},\"contracts/smart-contract-wallet/common/SecuredTokenTransfer.sol\":{\"keccak256\":\"0x53c6c0faaba3c0a3abe6aecd08b7bfbf530246930f52ef6642394040a09d8dae\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://e62c706474f89b74d95fde23921bbb7d9017f6a54ad1297731c58424eba3a23e\",\"dweb:/ipfs/QmXF8uAVt6x6E1P1LUG8e15WpLYznfxAJpGr1BREiUhbMG\"]},\"contracts/smart-contract-wallet/common/SelfAuthorized.sol\":{\"keccak256\":\"0xaff7f31a495e6455b386d215dc8413efb816ca340b7a4254ea1c799766451b2f\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://0cdda0e1a507a8faca7fcbab22324c5a26ddd0be417488de48a86b983b8ceacc\",\"dweb:/ipfs/QmTC2y5o6skp95sStYU86Djetk3HPvTXoZrDMaYFnKuBJG\"]},\"contracts/smart-contract-wallet/common/SignatureDecoder.sol\":{\"keccak256\":\"0x591c6470fc0854467a1ae2ab17977c38de055ba3c4e7f3c9a903dd10997e3d4f\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://a3f0bee474df330369650e186a43ce4437330017a4e0125c7bb614a905dbf783\",\"dweb:/ipfs/QmSYnyHoPBUP3wBfAPp3HDujH7tMZeDMpGJg75nZtgs6Em\"]},\"contracts/smart-contract-wallet/handler/DefaultCallbackHandler.sol\":{\"keccak256\":\"0x2a34a464050818d229545436ff3b647b44f4b71a968b58b653cc5fcc03b858b8\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://f8766721571bb2f724d9c7048096f9272e6c95556fce648fddbeb9a7636e51e1\",\"dweb:/ipfs/QmdXtspM5veCP9LYuicnWeXyyPzpYVihrhe8MqJUJGcmLH\"]},\"contracts/smart-contract-wallet/interfaces/IERC1155TokenReceiver.sol\":{\"keccak256\":\"0x2ab169ad3e2f27a76e05ceda7c7a378084be7669228e3da25fcbcc50ce3f66fb\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://f61fee624ac4c523cd02c825ee836a60cc1b8c08f4f95a7b0c79e45a25e408ec\",\"dweb:/ipfs/QmXxsL3hcS8bWzpCgm4RK6x3TaAiD3fLmNe43Nr7KSMGRY\"]},\"contracts/smart-contract-wallet/interfaces/IERC165.sol\":{\"keccak256\":\"0x03db523eaf7cef6e0513cc29d5014aa2802eb78ebe7280272c01258adecab521\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://ebf25bc7844ee820464be1bb804f2ef75e0d9ce53c9e45a133da82f00f1c9e88\",\"dweb:/ipfs/QmcZrTHuEcimUpmwgSx4sx7SpfY13wN5S2HNDRk4x7qHXt\"]},\"contracts/smart-contract-wallet/interfaces/IERC721TokenReceiver.sol\":{\"keccak256\":\"0x74d1001cd26599c9a8b96e24560f3ad25ca215c0e8d584187e14d7d97b0c1d22\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://4b07e27abcff56cf840677bc176e0eda0d94df7843cb8ba8f27075b6a3dff223\",\"dweb:/ipfs/QmaGQK6ZquqicxyFj8Uj6mHpuM3yB6kXf7Gd2QyKbVFcrK\"]},\"contracts/smart-contract-wallet/interfaces/IERC777TokensRecipient.sol\":{\"keccak256\":\"0x6318922ecf2801e4d68206f240d000f25612ed615c5001cde107708528ffdda9\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://8b78fd6bcfea3f562d3dedc45aff1b0b0b50029e039dafdaaefca254ba23ec6e\",\"dweb:/ipfs/QmRtxph2sD5qPenHoPBQ7DU97WFECo2b2b3thhcP1m6Pxv\"]},\"contracts/smart-contract-wallet/interfaces/IModule.sol\":{\"keccak256\":\"0x541a85fb77cc5294cbbf8239b1aa42e2b675fc126316b58206d1cde32426765b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ff846ad4331c8df2cb995e3e6b07e17b538c228e54df2ec5b5f7c9e7ba9612f\",\"dweb:/ipfs/QmZyuBY2E84RBjABFoGcGYYvG15uD9LMWE9ME3vnwQLmuB\"]},\"contracts/smart-contract-wallet/interfaces/ISignatureValidator.sol\":{\"keccak256\":\"0x99786ee319572532d07ac0da01cb78529b5e76f5f5d99dc607e90893b8326e39\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://f21e5a4e4c017e8efe545f6d1c6d9e2931a60b5f5d04cfea0e779cd55bac4990\",\"dweb:/ipfs/Qmchyq9Mg794PubDEV1JZX91Gz7fK5JKLLCToUhREnqDzG\"]},\"contracts/smart-contract-wallet/libs/LibAddress.sol\":{\"keccak256\":\"0xc002ad1e29166d55aa40f8d034506aa1922cf2e49be798dcbc51f9add2715d81\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a47ef7173ad22cdce729aeffad27b0e7dd2aa6e111c292989828ae04fb352164\",\"dweb:/ipfs/QmSeV8s3q9emK2XH7kYnZfzjpWgr4SbyST9rQTURGUxhYW\"]},\"contracts/smart-contract-wallet/libs/Math.sol\":{\"keccak256\":\"0x4e04d4c68c9940d8ef91fb4b44cefaa0429e7cad784ac1fc819de757da058f73\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://52a9975f411611a8976fbc427b6a7971644b75566cf749243b8a7edad4f892c7\",\"dweb:/ipfs/QmVkvPYeLwFxbPKWWmLjivxTYvaAdU2vd1GNHvV8D5BmZf\"]}},\"version\":1}","zk_version":"1.3.10"},"devdoc":{"details":"Handles EIP-1271 compliant isValidSignature requests.","kind":"dev","methods":{"supportsInterface(bytes4)":{"details":"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."}},"title":"Default Callback Handler - returns true for known token callbacks","version":1},"userdoc":{"kind":"user","methods":{},"notice":"inspired by Richard Meissner's <richard@gnosis.pm> implementation","version":1},"storageLayout":{"storage":[],"types":null},"evm":{"legacyAssembly":null,"assembly":"\t.text\n\t.file\t\"DefaultCallbackHandler.sol:DefaultCallbackHandler\"\n\t.globl\t__entry\n__entry:\n.func_begin0:\n\tnop\tstack+=[1]\n\tptr.add\tr1, r0, stack[@ptr_calldata]\n\tshr.s\t96, r1, r1\n\tand\t@CPI0_0[0], r1, stack[@calldatasize]\n\tadd\t128, r0, r1\n\tst.1\t64, r1\n\tand!\t1, r2, r1\n\tjump.ne\t@.BB0_1\n\tadd\tstack[@calldatasize], r0, r1\n\tsub.s!\t4, r1, r1\n\tjump.lt\t@.BB0_2\n\tptr.add\tstack[@ptr_calldata], r0, r1\n\tld\tr1, r1\n\tshr.s\t224, r1, r1\n\tsub.s!\t@CPI0_2[0], r1, r2\n\tjump.le\t@.BB0_6\n\tsub.s!\t@CPI0_3[0], r1, r2\n\tjump.gt\t@.BB0_12\n\tsub.s!\t@CPI0_6[0], r1, r2\n\tjump.eq\t@.BB0_39\n\tsub.s!\t@CPI0_7[0], r1, r1\n\tjump.ne\t@.BB0_2\n\tcontext.get_context_u128\tr1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_2\n\tadd\tstack[@calldatasize], r0, r2\n\tsub.s\t4, r2, r1\n\tadd\t@CPI0_11[0], r0, r3\n\tsub.s!\t160, r1, r4\n\tadd\t0, r0, r4\n\tadd.lt\tr3, r0, r4\n\tand\t@CPI0_11[0], r1, r1\n\tsub.s!\t0, r1, r5\n\tadd.le\t0, r0, r3\n\tsub.s!\t@CPI0_11[0], r1, r1\n\tadd\tr4, r0, r1\n\tadd.eq\tr3, r0, r1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_2\n\tptr.add\tstack[@ptr_calldata], r0, r1\n\tptr.add.s\t4, r1, r3\n\tld\tr3, r3\n\tsub.s!\t@CPI0_14[0], r3, r3\n\tjump.gt\t@.BB0_2\n\tptr.add.s\t36, r1, r3\n\tld\tr3, r3\n\tsub.s!\t@CPI0_14[0], r3, r3\n\tjump.gt\t@.BB0_2\n\tptr.add.s\t68, r1, r3\n\tld\tr3, r3\n\tsub.s!\t@CPI0_15[0], r3, r4\n\tjump.gt\t@.BB0_2\n\tadd\t35, r3, r4\n\tadd\t@CPI0_11[0], r0, r5\n\tsub!\tr4, r2, r6\n\tadd\t0, r0, r6\n\tadd.ge\tr5, r0, r6\n\tand\t@CPI0_11[0], r2, r7\n\tand\t@CPI0_11[0], r4, r4\n\tsub!\tr4, r7, r8\n\tadd.ge\t0, r0, r5\n\txor\tr4, r7, r4\n\tsub.s!\t@CPI0_11[0], r4, r4\n\tadd\tr6, r0, r4\n\tadd.eq\tr5, r0, r4\n\tsub.s!\t0, r4, r4\n\tjump.ne\t@.BB0_2\n\tadd\t4, r3, r4\n\tptr.add\tr1, r4, r4\n\tld\tr4, r4\n\tsub.s!\t@CPI0_15[0], r4, r5\n\tjump.gt\t@.BB0_2\n\tshl.s\t5, r4, r4\n\tadd\tr3, r4, r3\n\tadd\t36, r3, r3\n\tsub!\tr3, r2, r3\n\tjump.gt\t@.BB0_2\n\tptr.add.s\t100, r1, r3\n\tld\tr3, r3\n\tsub.s!\t@CPI0_15[0], r3, r4\n\tjump.gt\t@.BB0_2\n\tadd\t35, r3, r4\n\tadd\t@CPI0_11[0], r0, r5\n\tsub!\tr4, r2, r6\n\tadd\t0, r0, r6\n\tadd.ge\tr5, r0, r6\n\tand\t@CPI0_11[0], r2, r7\n\tand\t@CPI0_11[0], r4, r4\n\tsub!\tr4, r7, r8\n\tadd.ge\t0, r0, r5\n\txor\tr4, r7, r4\n\tsub.s!\t@CPI0_11[0], r4, r4\n\tadd\tr6, r0, r4\n\tadd.eq\tr5, r0, r4\n\tsub.s!\t0, r4, r4\n\tjump.ne\t@.BB0_2\n\tadd\t4, r3, r4\n\tptr.add\tr1, r4, r4\n\tld\tr4, r4\n\tsub.s!\t@CPI0_15[0], r4, r5\n\tjump.gt\t@.BB0_2\n\tshl.s\t5, r4, r4\n\tadd\tr3, r4, r3\n\tadd\t36, r3, r3\n\tsub!\tr3, r2, r3\n\tjump.gt\t@.BB0_2\n\tptr.add.s\t132, r1, r1\n\tld\tr1, r1\n\tsub.s!\t@CPI0_15[0], r1, r3\n\tjump.gt\t@.BB0_2\n\tadd\t4, r1, r1\n\tnear_call\tr0, @abi_decode_bytes_calldata, @DEFAULT_UNWIND\n\tadd\t@CPI0_18[0], r0, r1\n\tld.1\t64, r2\n\tst.1\tr2, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI0_17[0], r1, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_1:\n\tcontext.get_context_u128\tr1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_2\n\tadd\t32, r0, r1\n\tst.2\t256, r1\n\tst.2\t288, r0\n\tadd\t@CPI0_1[0], r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_6:\n\tsub.s!\t@CPI0_8[0], r1, r2\n\tjump.eq\t@.BB0_14\n\tsub.s!\t@CPI0_9[0], r1, r2\n\tjump.eq\t@.BB0_25\n\tsub.s!\t@CPI0_10[0], r1, r1\n\tjump.ne\t@.BB0_2\n\tcontext.get_context_u128\tr1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_2\n\tadd\tstack[@calldatasize], r0, r2\n\tsub.s\t4, r2, r1\n\tadd\t@CPI0_11[0], r0, r3\n\tsub.s!\t128, r1, r4\n\tadd\t0, r0, r4\n\tadd.lt\tr3, r0, r4\n\tand\t@CPI0_11[0], r1, r1\n\tsub.s!\t0, r1, r5\n\tadd.le\t0, r0, r3\n\tsub.s!\t@CPI0_11[0], r1, r1\n\tadd\tr4, r0, r1\n\tadd.eq\tr3, r0, r1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_2\n\tptr.add\tstack[@ptr_calldata], r0, r1\n\tptr.add.s\t4, r1, r3\n\tld\tr3, r3\n\tsub.s!\t@CPI0_14[0], r3, r3\n\tjump.gt\t@.BB0_2\n\tptr.add.s\t36, r1, r3\n\tld\tr3, r3\n\tsub.s!\t@CPI0_14[0], r3, r3\n\tjump.gt\t@.BB0_2\n\tptr.add.s\t100, r1, r1\n\tld\tr1, r1\n\tsub.s!\t@CPI0_15[0], r1, r3\n\tjump.gt\t@.BB0_2\n\tadd\t4, r1, r1\n\tnear_call\tr0, @abi_decode_bytes_calldata, @DEFAULT_UNWIND\n\tadd\t@CPI0_23[0], r0, r1\n\tld.1\t64, r2\n\tst.1\tr2, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI0_17[0], r1, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_12:\n\tsub.s!\t@CPI0_4[0], r1, r2\n\tjump.eq\t@.BB0_58\n\tsub.s!\t@CPI0_5[0], r1, r1\n\tjump.ne\t@.BB0_2\n\tcontext.get_context_u128\tr1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r0, r1\n\tadd\tstack[@calldatasize], r1, r1\n\tadd\t@CPI0_11[0], r0, r2\n\tsub.s!\t0, r1, r3\n\tadd\t0, r0, r3\n\tadd.lt\tr2, r0, r3\n\tand\t@CPI0_11[0], r1, r1\n\tsub.s!\t0, r1, r4\n\tadd.le\t0, r0, r2\n\tsub.s!\t@CPI0_11[0], r1, r1\n\tadd\tr3, r0, r1\n\tadd.eq\tr2, r0, r1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_2\n\tld.1\t64, r2\n\tsub.s!\t@CPI0_12[0], r2, r1\n\tjump.gt\t@.BB0_42\n\tadd\t64, r2, r1\n\tst.1\t64, r1\n\tadd\t32, r2, r1\n\tadd\t@CPI0_13[0], r0, r3\n\tst.1\tr1, r3\n\tadd\t5, r0, r1\n\tst.1\tr2, r1\n\tld.1\t64, r1\n\tadd\tr1, r0, stack-[1]\n\tnear_call\tr0, @abi_encode_string, @DEFAULT_UNWIND\n\tadd\tstack-[1], r0, r4\n\tsub\tr1, r4, r1\n\tadd\t@CPI0_0[0], r0, r2\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tsub.s!\t@CPI0_0[0], r4, r3\n\tadd.lt\tr4, r0, r2\n\tshl.s\t64, r2, r2\n\tshl.s\t96, r1, r1\n\tor\tr1, r2, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_39:\n\tcontext.get_context_u128\tr1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r0, r1\n\tadd\tstack[@calldatasize], r1, r1\n\tadd\t@CPI0_11[0], r0, r2\n\tsub.s!\t0, r1, r3\n\tadd\t0, r0, r3\n\tadd.lt\tr2, r0, r3\n\tand\t@CPI0_11[0], r1, r1\n\tsub.s!\t0, r1, r4\n\tadd.le\t0, r0, r2\n\tsub.s!\t@CPI0_11[0], r1, r1\n\tadd\tr3, r0, r1\n\tadd.eq\tr2, r0, r1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_2\n\tld.1\t64, r2\n\tsub.s!\t@CPI0_19[0], r2, r1\n\tjump.lt\t@.BB0_43\n.BB0_42:\n\tadd\t@CPI0_21[0], r0, r1\n\tst.1\t0, r1\n\tadd\t65, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI0_22[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_14:\n\tcontext.get_context_u128\tr1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_2\n\tadd\tstack[@calldatasize], r0, r2\n\tsub.s\t4, r2, r1\n\tadd\t@CPI0_11[0], r0, r3\n\tsub.s!\t192, r1, r4\n\tadd\t0, r0, r4\n\tadd.lt\tr3, r0, r4\n\tand\t@CPI0_11[0], r1, r1\n\tsub.s!\t0, r1, r5\n\tadd.le\t0, r0, r3\n\tsub.s!\t@CPI0_11[0], r1, r1\n\tadd\tr4, r0, r1\n\tadd.eq\tr3, r0, r1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_2\n\tptr.add\tstack[@ptr_calldata], r0, r1\n\tptr.add.s\t4, r1, r3\n\tld\tr3, r3\n\tsub.s!\t@CPI0_14[0], r3, r3\n\tjump.gt\t@.BB0_2\n\tptr.add.s\t36, r1, r3\n\tld\tr3, r3\n\tsub.s!\t@CPI0_14[0], r3, r3\n\tjump.gt\t@.BB0_2\n\tptr.add.s\t68, r1, r3\n\tld\tr3, r3\n\tsub.s!\t@CPI0_14[0], r3, r3\n\tjump.gt\t@.BB0_2\n\tptr.add.s\t132, r1, r3\n\tld\tr3, r3\n\tsub.s!\t@CPI0_15[0], r3, r4\n\tjump.gt\t@.BB0_2\n\tadd\t35, r3, r4\n\tadd\t@CPI0_11[0], r0, r5\n\tsub!\tr4, r2, r6\n\tadd\t0, r0, r6\n\tadd.ge\tr5, r0, r6\n\tand\t@CPI0_11[0], r2, r7\n\tand\t@CPI0_11[0], r4, r4\n\tsub!\tr4, r7, r8\n\tadd.ge\t0, r0, r5\n\txor\tr4, r7, r4\n\tsub.s!\t@CPI0_11[0], r4, r4\n\tadd\tr6, r0, r4\n\tadd.eq\tr5, r0, r4\n\tsub.s!\t0, r4, r4\n\tjump.ne\t@.BB0_2\n\tadd\t4, r3, r4\n\tptr.add\tr1, r4, r4\n\tld\tr4, r4\n\tsub.s!\t@CPI0_15[0], r4, r5\n\tjump.gt\t@.BB0_2\n\tadd\tr3, r4, r3\n\tadd\t36, r3, r3\n\tsub!\tr3, r2, r3\n\tjump.gt\t@.BB0_2\n\tptr.add.s\t164, r1, r1\n\tld\tr1, r1\n\tsub.s!\t@CPI0_15[0], r1, r3\n\tjump.gt\t@.BB0_2\n\tadd\t4, r1, r1\n\tnear_call\tr0, @abi_decode_bytes_calldata, @DEFAULT_UNWIND\n\tadd\tr0, r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_25:\n\tcontext.get_context_u128\tr1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r0, r1\n\tadd\tstack[@calldatasize], r1, r1\n\tadd\t@CPI0_11[0], r0, r2\n\tsub.s!\t32, r1, r3\n\tadd\t0, r0, r3\n\tadd.lt\tr2, r0, r3\n\tand\t@CPI0_11[0], r1, r1\n\tsub.s!\t0, r1, r4\n\tadd.le\t0, r0, r2\n\tsub.s!\t@CPI0_11[0], r1, r1\n\tadd\tr3, r0, r1\n\tadd.eq\tr2, r0, r1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_2\n\tadd\t4, r0, r1\n\tptr.add\tstack[@ptr_calldata], r1, r1\n\tld\tr1, r1\n\tand\t@CPI0_24[0], r1, r2\n\tsub!\tr1, r2, r2\n\tjump.ne\t@.BB0_2\n\tadd\t1, r0, r2\n\tsub.s!\t@CPI0_25[0], r1, r3\n\tjump.eq\t@.BB0_32\n\tsub.s!\t@CPI0_26[0], r1, r3\n\tjump.eq\t@.BB0_32\n\tsub.s!\t@CPI0_23[0], r1, r3\n\tjump.eq\t@.BB0_32\n\tsub.s!\t@CPI0_27[0], r1, r1\n\tadd\t0, r0, r2\n\tadd.eq\t1, r0, r2\n.BB0_32:\n\tand\t1, r2, r1\n\tst.1\t128, r1\n\tadd\t@CPI0_28[0], r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_58:\n\tcontext.get_context_u128\tr1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_2\n\tadd\tstack[@calldatasize], r0, r2\n\tsub.s\t4, r2, r1\n\tadd\t@CPI0_11[0], r0, r3\n\tsub.s!\t160, r1, r4\n\tadd\t0, r0, r4\n\tadd.lt\tr3, r0, r4\n\tand\t@CPI0_11[0], r1, r1\n\tsub.s!\t0, r1, r5\n\tadd.le\t0, r0, r3\n\tsub.s!\t@CPI0_11[0], r1, r1\n\tadd\tr4, r0, r1\n\tadd.eq\tr3, r0, r1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_2\n\tptr.add\tstack[@ptr_calldata], r0, r1\n\tptr.add.s\t4, r1, r3\n\tld\tr3, r3\n\tsub.s!\t@CPI0_14[0], r3, r3\n\tjump.gt\t@.BB0_2\n\tptr.add.s\t36, r1, r3\n\tld\tr3, r3\n\tsub.s!\t@CPI0_14[0], r3, r3\n\tjump.gt\t@.BB0_2\n\tptr.add.s\t132, r1, r1\n\tld\tr1, r1\n\tsub.s!\t@CPI0_15[0], r1, r3\n\tjump.le\t@.BB0_63\n.BB0_2:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_43:\n\tadd\t64, r2, r1\n\tst.1\t64, r1\n\tadd\t32, r2, r1\n\tadd\t@CPI0_20[0], r0, r3\n\tst.1\tr1, r3\n\tadd\t24, r0, r1\n\tst.1\tr2, r1\n\tld.1\t64, r1\n\tadd\tr1, r0, stack-[1]\n\tnear_call\tr0, @abi_encode_string, @DEFAULT_UNWIND\n\tadd\tstack-[1], r0, r4\n\tsub\tr1, r4, r1\n\tadd\t@CPI0_0[0], r0, r2\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tsub.s!\t@CPI0_0[0], r4, r3\n\tadd.lt\tr4, r0, r2\n\tshl.s\t64, r2, r2\n\tshl.s\t96, r1, r1\n\tor\tr1, r2, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_63:\n\tadd\t4, r1, r1\n\tnear_call\tr0, @abi_decode_bytes_calldata, @DEFAULT_UNWIND\n\tadd\t@CPI0_16[0], r0, r1\n\tld.1\t64, r2\n\tst.1\tr2, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI0_17[0], r1, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.func_end0:\n\nabi_decode_bytes_calldata:\n.func_begin1:\n\tadd\t31, r1, r3\n\tadd\t@CPI1_0[0], r0, r4\n\tsub!\tr3, r2, r5\n\tadd\t0, r0, r5\n\tadd.lt\tr4, r0, r5\n\tand\t@CPI1_0[0], r2, r6\n\tand\t@CPI1_0[0], r3, r3\n\tsub!\tr3, r6, r7\n\tadd.le\t0, r0, r4\n\txor\tr3, r6, r3\n\tsub.s!\t@CPI1_0[0], r3, r3\n\tadd\tr5, r0, r3\n\tadd.eq\tr4, r0, r3\n\tsub.s!\t0, r3, r3\n\tjump.eq\t@.BB1_1\n\tptr.add\tstack[@ptr_calldata], r1, r3\n\tld\tr3, r3\n\tsub.s!\t@CPI1_1[0], r3, r4\n\tjump.gt\t@.BB1_1\n\tadd\t32, r1, r1\n\tadd\tr1, r3, r4\n\tsub!\tr4, r2, r2\n\tjump.gt\t@.BB1_1\n\tadd\tr3, r0, r2\n\tret\n.BB1_1:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end1:\n\nabi_encode_string:\n.func_begin2:\n\tadd\t32, r0, r3\n\tst.1.inc\tr1, r3, r4\n\tld.1\tr2, r3\n\tst.1\tr4, r3\n\tadd\t64, r1, r1\n\tsub.s!\t0, r3, r4\n\tjump.eq\t@.BB2_3\n\tadd\tr0, r0, r4\n.BB2_2:\n\tadd\tr1, r4, r5\n\tadd\t32, r4, r4\n\tadd\tr4, r2, r6\n\tld.1\tr6, r6\n\tst.1\tr5, r6\n\tsub!\tr4, r3, r5\n\tjump.lt\t@.BB2_2\n.BB2_3:\n\tadd\tr1, r3, r2\n\tst.1\tr2, r0\n\tadd\t31, r3, r2\n\tsub.s\t32, r0, r3\n\tand\tr2, r3, r2\n\tadd\tr1, r2, r1\n\tret\n.func_end2:\n\n\t.data\n\t.p2align\t5\ncalldatasize:\n\t.cell 0\n\n\t.p2align\t5\nptr_calldata:\n.cell\t0\n\n\t.note.GNU-stack\n\t.rodata\nCPI0_0:\n\t.cell 4294967295\nCPI0_1:\n\t.cell 53919893334301279589334030174039261352344891250716429051063678533632\nCPI0_2:\n\t.cell 2750734205\nCPI0_3:\n\t.cell 4063915616\nCPI0_4:\n\t.cell 4063915617\nCPI0_5:\n\t.cell 4288785780\nCPI0_6:\n\t.cell 2750734206\nCPI0_7:\n\t.cell 3155786881\nCPI0_8:\n\t.cell 2350633\nCPI0_9:\n\t.cell 33540519\nCPI0_10:\n\t.cell 353073666\nCPI0_11:\nCPI1_0:\n\t.cell -57896044618658097711785492504343953926634992332820282019728792003956564819968\nCPI0_12:\n\t.cell 18446744073709551551\nCPI0_13:\n\t.cell 22244937074597041345535687918817492743208931653510314877398361346409823731712\nCPI0_14:\n\t.cell 1461501637330902918203684832716283019655932542975\nCPI0_15:\nCPI1_1:\n\t.cell 18446744073709551615\nCPI0_16:\n\t.cell -6229140943195609470482029081774216773103763255593484717380184921042965233664\nCPI0_17:\n\t.cell 2535301200456458802993406410752\nCPI0_18:\n\t.cell -30712243232662532708804285033642283983940691742684704713361190381700136304640\nCPI0_19:\n\t.cell 18446744073709551552\nCPI0_20:\n\t.cell 30936431862813083933393753890372347700689971588202559153470499929168172548096\nCPI0_21:\n\t.cell 35408467139433450592217433187231851964531694900788300625387963629091585785856\nCPI0_22:\n\t.cell 2852213850513516153367582212096\nCPI0_23:\n\t.cell 9518847204935358166548570266051330015907116135037852959641967396525866745856\nCPI0_24:\n\t.cell -26959946667150639794667015087019630673637144422540572481103610249216\nCPI0_25:\n\t.cell 63372940314044309872457509675046215509263701705389813512974022670945353728\nCPI0_26:\n\t.cell 35342372107224317416546187738377499550952575403884855735352717537100997591040\nCPI0_27:\n\t.cell 904250603428552709895185118199468575982109441609966099573332780532423983104\nCPI0_28:\n\t.cell 2535301202817642044428229017600\n","bytecode":{"object":""},"methodIdentifiers":{"NAME()":"a3f4df7e","VERSION()":"ffa1ad74","onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)":"bc197c81","onERC1155Received(address,address,uint256,uint256,bytes)":"f23a6e61","onERC721Received(address,address,uint256,bytes)":"150b7a02","supportsInterface(bytes4)":"01ffc9a7","tokensReceived(address,address,address,uint256,bytes,bytes)":"0023de29"}},"irOptimized":"/// @use-src 23:\"contracts/smart-contract-wallet/handler/DefaultCallbackHandler.sol\", 24:\"contracts/smart-contract-wallet/interfaces/IERC1155TokenReceiver.sol\", 25:\"contracts/smart-contract-wallet/interfaces/IERC165.sol\", 26:\"contracts/smart-contract-wallet/interfaces/IERC721TokenReceiver.sol\", 27:\"contracts/smart-contract-wallet/interfaces/IERC777TokensRecipient.sol\"\nobject \"DefaultCallbackHandler_5420\" {\n    code {\n        {\n            /// @src 23:629:2267  \"contract DefaultCallbackHandler is...\"\n            let _1 := memoryguard(0x80)\n            mstore(64, _1)\n            if callvalue() { revert(0, 0) }\n            let _2 := datasize(\"DefaultCallbackHandler_5420_deployed\")\n            codecopy(_1, dataoffset(\"DefaultCallbackHandler_5420_deployed\"), _2)\n            return(_1, _2)\n        }\n    }\n    /// @use-src 23:\"contracts/smart-contract-wallet/handler/DefaultCallbackHandler.sol\"\n    object \"DefaultCallbackHandler_5420_deployed\" {\n        code {\n            {\n                /// @src 23:629:2267  \"contract DefaultCallbackHandler is...\"\n                let _1 := memoryguard(0x80)\n                let _2 := 64\n                mstore(_2, _1)\n                let _3 := 4\n                if iszero(lt(calldatasize(), _3))\n                {\n                    let _4 := 0\n                    switch shr(224, calldataload(_4))\n                    case 0x0023de29 {\n                        if callvalue() { revert(_4, _4) }\n                        if slt(add(calldatasize(), not(3)), 192) { revert(_4, _4) }\n                        pop(abi_decode_address())\n                        pop(abi_decode_address_2060())\n                        let value := calldataload(68)\n                        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(_4, _4) }\n                        let offset := calldataload(132)\n                        let _5 := 0xffffffffffffffff\n                        if gt(offset, _5) { revert(_4, _4) }\n                        let value4, value5 := abi_decode_bytes_calldata(add(_3, offset), calldatasize())\n                        let offset_1 := calldataload(164)\n                        if gt(offset_1, _5) { revert(_4, _4) }\n                        let value6, value7 := abi_decode_bytes_calldata(add(_3, offset_1), calldatasize())\n                        return(_4, _4)\n                    }\n                    case 0x01ffc9a7 {\n                        if callvalue() { revert(_4, _4) }\n                        if slt(add(calldatasize(), not(3)), 32) { revert(_4, _4) }\n                        let value_1 := calldataload(_3)\n                        let _6 := and(value_1, shl(224, 0xffffffff))\n                        if iszero(eq(value_1, _6)) { revert(_4, _4) }\n                        /// @src 23:2008:2131  \"interfaceId == type(IERC1155TokenReceiver).interfaceId ||...\"\n                        let expr := /** @src 23:2008:2062  \"interfaceId == type(IERC1155TokenReceiver).interfaceId\" */ eq(_6, /** @src 23:2023:2062  \"type(IERC1155TokenReceiver).interfaceId\" */ shl(229, 0x02711897))\n                        /// @src 23:2008:2131  \"interfaceId == type(IERC1155TokenReceiver).interfaceId ||...\"\n                        if iszero(expr)\n                        {\n                            expr := /** @src 23:2078:2131  \"interfaceId == type(IERC721TokenReceiver).interfaceId\" */ eq(_6, /** @src 23:2093:2131  \"type(IERC721TokenReceiver).interfaceId\" */ shl(225, 0x0a85bd01))\n                        }\n                        /// @src 23:2008:2202  \"interfaceId == type(IERC1155TokenReceiver).interfaceId ||...\"\n                        let expr_1 := expr\n                        if iszero(expr)\n                        {\n                            expr_1 := /** @src 23:2147:2202  \"interfaceId == type(IERC777TokensRecipient).interfaceId\" */ eq(_6, /** @src 23:2162:2202  \"type(IERC777TokensRecipient).interfaceId\" */ shl(224, 2350633))\n                        }\n                        /// @src 23:2008:2258  \"interfaceId == type(IERC1155TokenReceiver).interfaceId ||...\"\n                        let expr_2 := expr_1\n                        if iszero(expr_1)\n                        {\n                            expr_2 := /** @src 23:2218:2258  \"interfaceId == type(IERC165).interfaceId\" */ eq(_6, /** @src 23:2233:2258  \"type(IERC165).interfaceId\" */ shl(224, 0x01ffc9a7))\n                        }\n                        /// @src 23:629:2267  \"contract DefaultCallbackHandler is...\"\n                        mstore(_1, iszero(iszero(expr_2)))\n                        return(_1, 32)\n                    }\n                    case 0x150b7a02 {\n                        if callvalue() { revert(_4, _4) }\n                        if slt(add(calldatasize(), not(3)), 128) { revert(_4, _4) }\n                        pop(abi_decode_address())\n                        pop(abi_decode_address_2060())\n                        let offset_2 := calldataload(100)\n                        if gt(offset_2, 0xffffffffffffffff) { revert(_4, _4) }\n                        let value3, value4_1 := abi_decode_bytes_calldata(add(_3, offset_2), calldatasize())\n                        let memPos := mload(_2)\n                        mstore(memPos, /** @src 23:2093:2131  \"type(IERC721TokenReceiver).interfaceId\" */ shl(225, 0x0a85bd01))\n                        /// @src 23:629:2267  \"contract DefaultCallbackHandler is...\"\n                        return(memPos, 32)\n                    }\n                    case 0xa3f4df7e {\n                        if callvalue() { revert(_4, _4) }\n                        if slt(add(calldatasize(), not(3)), _4) { revert(_4, _4) }\n                        let memPtr := mload(_2)\n                        let newFreePtr := add(memPtr, _2)\n                        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr))\n                        {\n                            mstore(_4, shl(224, 0x4e487b71))\n                            mstore(_3, 0x41)\n                            revert(_4, 0x24)\n                        }\n                        mstore(_2, newFreePtr)\n                        mstore(memPtr, 24)\n                        mstore(add(memPtr, 32), \"Default Callback Handler\")\n                        let memPos_1 := mload(_2)\n                        return(memPos_1, sub(abi_encode_string(memPos_1, memPtr), memPos_1))\n                    }\n                    case 0xbc197c81 {\n                        if callvalue() { revert(_4, _4) }\n                        if slt(add(calldatasize(), not(3)), 160) { revert(_4, _4) }\n                        pop(abi_decode_address())\n                        pop(abi_decode_address_2060())\n                        let offset_3 := calldataload(68)\n                        let _7 := 0xffffffffffffffff\n                        if gt(offset_3, _7) { revert(_4, _4) }\n                        let value2, value3_1 := abi_decode_array_uint256_dyn_calldata(add(_3, offset_3), calldatasize())\n                        let offset_4 := calldataload(100)\n                        if gt(offset_4, _7) { revert(_4, _4) }\n                        let value4_2, value5_1 := abi_decode_array_uint256_dyn_calldata(add(_3, offset_4), calldatasize())\n                        let offset_5 := calldataload(132)\n                        if gt(offset_5, _7) { revert(_4, _4) }\n                        let value6_1, value7_1 := abi_decode_bytes_calldata(add(_3, offset_5), calldatasize())\n                        let memPos_2 := mload(_2)\n                        mstore(memPos_2, /** @src 23:1324:1377  \"IERC1155TokenReceiver.onERC1155BatchReceived.selector\" */ shl(224, 0xbc197c81))\n                        /// @src 23:629:2267  \"contract DefaultCallbackHandler is...\"\n                        return(memPos_2, 32)\n                    }\n                    case 0xf23a6e61 {\n                        if callvalue() { revert(_4, _4) }\n                        if slt(add(calldatasize(), not(3)), 160) { revert(_4, _4) }\n                        pop(abi_decode_address())\n                        pop(abi_decode_address_2060())\n                        let offset_6 := calldataload(132)\n                        if gt(offset_6, 0xffffffffffffffff) { revert(_4, _4) }\n                        let value4_3, value5_2 := abi_decode_bytes_calldata(add(_3, offset_6), calldatasize())\n                        let memPos_3 := mload(_2)\n                        mstore(memPos_3, /** @src 23:1054:1102  \"IERC1155TokenReceiver.onERC1155Received.selector\" */ shl(224, 0xf23a6e61))\n                        /// @src 23:629:2267  \"contract DefaultCallbackHandler is...\"\n                        return(memPos_3, 32)\n                    }\n                    case 0xffa1ad74 {\n                        if callvalue() { revert(_4, _4) }\n                        if slt(add(calldatasize(), not(3)), _4) { revert(_4, _4) }\n                        let memPtr_1 := mload(_2)\n                        let newFreePtr_1 := add(memPtr_1, _2)\n                        if or(gt(newFreePtr_1, 0xffffffffffffffff), lt(newFreePtr_1, memPtr_1))\n                        {\n                            mstore(_4, shl(224, 0x4e487b71))\n                            mstore(_3, 0x41)\n                            revert(_4, 36)\n                        }\n                        mstore(_2, newFreePtr_1)\n                        mstore(memPtr_1, 5)\n                        mstore(add(memPtr_1, 32), \"1.0.0\")\n                        let memPos_4 := mload(_2)\n                        return(memPos_4, sub(abi_encode_string(memPos_4, memPtr_1), memPos_4))\n                    }\n                }\n                revert(0, 0)\n            }\n            function abi_decode_address() -> value\n            {\n                value := calldataload(4)\n                if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n            }\n            function abi_decode_address_2060() -> value\n            {\n                value := calldataload(36)\n                if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n            }\n            function abi_decode_bytes_calldata(offset, end) -> arrayPos, length\n            {\n                if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n                length := calldataload(offset)\n                if gt(length, 0xffffffffffffffff) { revert(0, 0) }\n                arrayPos := add(offset, 0x20)\n                if gt(add(add(offset, length), 0x20), end) { revert(0, 0) }\n            }\n            function abi_encode_string(headStart, value0) -> tail\n            {\n                let _1 := 32\n                mstore(headStart, _1)\n                let length := mload(value0)\n                mstore(add(headStart, _1), length)\n                let i := 0\n                for { } lt(i, length) { i := add(i, _1) }\n                {\n                    mstore(add(add(headStart, i), 64), mload(add(add(value0, i), _1)))\n                }\n                mstore(add(add(headStart, length), 64), 0)\n                tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n            }\n            function abi_decode_array_uint256_dyn_calldata(offset, end) -> arrayPos, length\n            {\n                if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n                length := calldataload(offset)\n                if gt(length, 0xffffffffffffffff) { revert(0, 0) }\n                arrayPos := add(offset, 0x20)\n                if gt(add(add(offset, shl(5, length)), 0x20), end) { revert(0, 0) }\n            }\n        }\n        data \".metadata\" hex\"a2646970667358221220adf2b38a732861660f04da398dcbf5f0a73b9385f39a351dcc054f232f32d63d64736f6c63430008110033\"\n    }\n}\n","hash":"0100009320ea28c62247b5cd289f5da7a960e1b4ae9a558299e94b8e0fe3cfd0","factoryDependencies":{}}},"contracts/smart-contract-wallet/interfaces/IERC1155TokenReceiver.sol":{"IERC1155TokenReceiver":{"abi":[{"inputs":[{"internalType":"address","name":"_operator","type":"address"},{"internalType":"address","name":"_from","type":"address"},{"internalType":"uint256[]","name":"_ids","type":"uint256[]"},{"internalType":"uint256[]","name":"_values","type":"uint256[]"},{"internalType":"bytes","name":"_data","type":"bytes"}],"name":"onERC1155BatchReceived","outputs":[{"internalType":"bytes4","name":"","type":"bytes4"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_operator","type":"address"},{"internalType":"address","name":"_from","type":"address"},{"internalType":"uint256","name":"_id","type":"uint256"},{"internalType":"uint256","name":"_value","type":"uint256"},{"internalType":"bytes","name":"_data","type":"bytes"}],"name":"onERC1155Received","outputs":[{"internalType":"bytes4","name":"","type":"bytes4"}],"stateMutability":"nonpayable","type":"function"}],"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"_ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"_values\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"onERC1155BatchReceived\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"onERC1155Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\":{\"details\":\"An ERC1155-compliant smart contract MUST call this function on the token recipient contract, at the end of a `safeBatchTransferFrom` after the balances have been updated.         This function MUST return `bytes4(keccak256(\\\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\\\"))` (i.e. 0xbc197c81) if it accepts the transfer(s). This function MUST revert if it rejects the transfer(s). Return of any other value than the prescribed keccak256 generated value MUST result in the transaction being reverted by the caller.\",\"params\":{\"_data\":\"Additional data with no specified format\",\"_from\":\"The address which previously owned the token\",\"_ids\":\"An array containing ids of each token being transferred (order and length must match _values array)\",\"_operator\":\"The address which initiated the batch transfer (i.e. msg.sender)\",\"_values\":\"An array containing amounts of each token being transferred (order and length must match _ids array)\"},\"returns\":{\"_0\":\"`bytes4(keccak256(\\\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\\\"))`\"}},\"onERC1155Received(address,address,uint256,uint256,bytes)\":{\"details\":\"An ERC1155-compliant smart contract MUST call this function on the token recipient contract, at the end of a `safeTransferFrom` after the balance has been updated.         This function MUST return `bytes4(keccak256(\\\"onERC1155Received(address,address,uint256,uint256,bytes)\\\"))` (i.e. 0xf23a6e61) if it accepts the transfer. This function MUST revert if it rejects the transfer. Return of any other value than the prescribed keccak256 generated value MUST result in the transaction being reverted by the caller.\",\"params\":{\"_data\":\"Additional data with no specified format\",\"_from\":\"The address which previously owned the token\",\"_id\":\"The ID of the token being transferred\",\"_operator\":\"The address which initiated the transfer (i.e. msg.sender)\",\"_value\":\"The amount of tokens being transferred\"},\"returns\":{\"_0\":\"`bytes4(keccak256(\\\"onERC1155Received(address,address,uint256,uint256,bytes)\\\"))`\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\":{\"notice\":\"Handle the receipt of multiple ERC1155 token types.\"},\"onERC1155Received(address,address,uint256,uint256,bytes)\":{\"notice\":\"Handle the receipt of a single ERC1155 token type.\"}},\"notice\":\"Note: The ERC-165 identifier for this interface is 0x4e2312e0.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/smart-contract-wallet/interfaces/IERC1155TokenReceiver.sol\":\"IERC1155TokenReceiver\"},\"evmVersion\":\"london\",\"libraries\":{\":__CACHE_BREAKER__\":\"0x00000000d41867734bbee4c6863d9255b2b06ac1\"},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"contracts/smart-contract-wallet/interfaces/IERC1155TokenReceiver.sol\":{\"keccak256\":\"0x2ab169ad3e2f27a76e05ceda7c7a378084be7669228e3da25fcbcc50ce3f66fb\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://f61fee624ac4c523cd02c825ee836a60cc1b8c08f4f95a7b0c79e45a25e408ec\",\"dweb:/ipfs/QmXxsL3hcS8bWzpCgm4RK6x3TaAiD3fLmNe43Nr7KSMGRY\"]}},\"version\":1}","devdoc":{"kind":"dev","methods":{"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)":{"details":"An ERC1155-compliant smart contract MUST call this function on the token recipient contract, at the end of a `safeBatchTransferFrom` after the balances have been updated.         This function MUST return `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))` (i.e. 0xbc197c81) if it accepts the transfer(s). This function MUST revert if it rejects the transfer(s). Return of any other value than the prescribed keccak256 generated value MUST result in the transaction being reverted by the caller.","params":{"_data":"Additional data with no specified format","_from":"The address which previously owned the token","_ids":"An array containing ids of each token being transferred (order and length must match _values array)","_operator":"The address which initiated the batch transfer (i.e. msg.sender)","_values":"An array containing amounts of each token being transferred (order and length must match _ids array)"},"returns":{"_0":"`bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))`"}},"onERC1155Received(address,address,uint256,uint256,bytes)":{"details":"An ERC1155-compliant smart contract MUST call this function on the token recipient contract, at the end of a `safeTransferFrom` after the balance has been updated.         This function MUST return `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))` (i.e. 0xf23a6e61) if it accepts the transfer. This function MUST revert if it rejects the transfer. Return of any other value than the prescribed keccak256 generated value MUST result in the transaction being reverted by the caller.","params":{"_data":"Additional data with no specified format","_from":"The address which previously owned the token","_id":"The ID of the token being transferred","_operator":"The address which initiated the transfer (i.e. msg.sender)","_value":"The amount of tokens being transferred"},"returns":{"_0":"`bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))`"}}},"version":1},"userdoc":{"kind":"user","methods":{"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)":{"notice":"Handle the receipt of multiple ERC1155 token types."},"onERC1155Received(address,address,uint256,uint256,bytes)":{"notice":"Handle the receipt of a single ERC1155 token type."}},"notice":"Note: The ERC-165 identifier for this interface is 0x4e2312e0.","version":1},"storageLayout":{"storage":[],"types":null},"evm":{"legacyAssembly":null,"assembly":null,"bytecode":null,"methodIdentifiers":{"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)":"bc197c81","onERC1155Received(address,address,uint256,uint256,bytes)":"f23a6e61"}},"irOptimized":""}},"contracts/smart-contract-wallet/interfaces/IERC165.sol":{"IERC165":{"abi":[{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"More details at https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/introspection/IERC165.sol\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/smart-contract-wallet/interfaces/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"london\",\"libraries\":{\":__CACHE_BREAKER__\":\"0x00000000d41867734bbee4c6863d9255b2b06ac1\"},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"contracts/smart-contract-wallet/interfaces/IERC165.sol\":{\"keccak256\":\"0x03db523eaf7cef6e0513cc29d5014aa2802eb78ebe7280272c01258adecab521\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://ebf25bc7844ee820464be1bb804f2ef75e0d9ce53c9e45a133da82f00f1c9e88\",\"dweb:/ipfs/QmcZrTHuEcimUpmwgSx4sx7SpfY13wN5S2HNDRk4x7qHXt\"]}},\"version\":1}","devdoc":{"kind":"dev","methods":{"supportsInterface(bytes4)":{"details":"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."}},"version":1},"userdoc":{"kind":"user","methods":{},"notice":"More details at https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/introspection/IERC165.sol","version":1},"storageLayout":{"storage":[],"types":null},"evm":{"legacyAssembly":null,"assembly":null,"bytecode":null,"methodIdentifiers":{"supportsInterface(bytes4)":"01ffc9a7"}},"irOptimized":""}},"contracts/smart-contract-wallet/interfaces/IERC721TokenReceiver.sol":{"IERC721TokenReceiver":{"abi":[{"inputs":[{"internalType":"address","name":"_operator","type":"address"},{"internalType":"address","name":"_from","type":"address"},{"internalType":"uint256","name":"_tokenId","type":"uint256"},{"internalType":"bytes","name":"_data","type":"bytes"}],"name":"onERC721Received","outputs":[{"internalType":"bytes4","name":"","type":"bytes4"}],"stateMutability":"nonpayable","type":"function"}],"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"onERC721Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Note: the ERC-165 identifier for this interface is 0x150b7a02.\",\"kind\":\"dev\",\"methods\":{\"onERC721Received(address,address,uint256,bytes)\":{\"details\":\"The ERC721 smart contract calls this function on the recipient  after a `transfer`. This function MAY throw to revert and reject the  transfer. Return of other than the magic value MUST result in the  transaction being reverted.  Note: the contract address is always the message sender.\",\"params\":{\"_data\":\"Additional data with no specified format\",\"_from\":\"The address which previously owned the token\",\"_operator\":\"The address which called `safeTransferFrom` function\",\"_tokenId\":\"The NFT identifier which is being transferred\"},\"returns\":{\"_0\":\"`bytes4(keccak256(\\\"onERC721Received(address,address,uint256,bytes)\\\"))`  unless throwing\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"onERC721Received(address,address,uint256,bytes)\":{\"notice\":\"Handle the receipt of an NFT\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/smart-contract-wallet/interfaces/IERC721TokenReceiver.sol\":\"IERC721TokenReceiver\"},\"evmVersion\":\"london\",\"libraries\":{\":__CACHE_BREAKER__\":\"0x00000000d41867734bbee4c6863d9255b2b06ac1\"},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"contracts/smart-contract-wallet/interfaces/IERC721TokenReceiver.sol\":{\"keccak256\":\"0x74d1001cd26599c9a8b96e24560f3ad25ca215c0e8d584187e14d7d97b0c1d22\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://4b07e27abcff56cf840677bc176e0eda0d94df7843cb8ba8f27075b6a3dff223\",\"dweb:/ipfs/QmaGQK6ZquqicxyFj8Uj6mHpuM3yB6kXf7Gd2QyKbVFcrK\"]}},\"version\":1}","devdoc":{"details":"Note: the ERC-165 identifier for this interface is 0x150b7a02.","kind":"dev","methods":{"onERC721Received(address,address,uint256,bytes)":{"details":"The ERC721 smart contract calls this function on the recipient  after a `transfer`. This function MAY throw to revert and reject the  transfer. Return of other than the magic value MUST result in the  transaction being reverted.  Note: the contract address is always the message sender.","params":{"_data":"Additional data with no specified format","_from":"The address which previously owned the token","_operator":"The address which called `safeTransferFrom` function","_tokenId":"The NFT identifier which is being transferred"},"returns":{"_0":"`bytes4(keccak256(\"onERC721Received(address,address,uint256,bytes)\"))`  unless throwing"}}},"version":1},"userdoc":{"kind":"user","methods":{"onERC721Received(address,address,uint256,bytes)":{"notice":"Handle the receipt of an NFT"}},"version":1},"storageLayout":{"storage":[],"types":null},"evm":{"legacyAssembly":null,"assembly":null,"bytecode":null,"methodIdentifiers":{"onERC721Received(address,address,uint256,bytes)":"150b7a02"}},"irOptimized":""}},"contracts/smart-contract-wallet/interfaces/IERC777TokensRecipient.sol":{"IERC777TokensRecipient":{"abi":[{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"},{"internalType":"bytes","name":"operatorData","type":"bytes"}],"name":"tokensReceived","outputs":[],"stateMutability":"nonpayable","type":"function"}],"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"operatorData\",\"type\":\"bytes\"}],\"name\":\"tokensReceived\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/smart-contract-wallet/interfaces/IERC777TokensRecipient.sol\":\"IERC777TokensRecipient\"},\"evmVersion\":\"london\",\"libraries\":{\":__CACHE_BREAKER__\":\"0x00000000d41867734bbee4c6863d9255b2b06ac1\"},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"contracts/smart-contract-wallet/interfaces/IERC777TokensRecipient.sol\":{\"keccak256\":\"0x6318922ecf2801e4d68206f240d000f25612ed615c5001cde107708528ffdda9\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://8b78fd6bcfea3f562d3dedc45aff1b0b0b50029e039dafdaaefca254ba23ec6e\",\"dweb:/ipfs/QmRtxph2sD5qPenHoPBQ7DU97WFECo2b2b3thhcP1m6Pxv\"]}},\"version\":1}","devdoc":{"kind":"dev","methods":{},"version":1},"userdoc":{"kind":"user","methods":{},"version":1},"storageLayout":{"storage":[],"types":null},"evm":{"legacyAssembly":null,"assembly":null,"bytecode":null,"methodIdentifiers":{"tokensReceived(address,address,address,uint256,bytes,bytes)":"0023de29"}},"irOptimized":""}},"contracts/smart-contract-wallet/interfaces/IModule.sol":{"IModule":{"abi":[{"inputs":[{"components":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"nonce","type":"uint256"},{"internalType":"bytes","name":"initCode","type":"bytes"},{"internalType":"bytes","name":"callData","type":"bytes"},{"internalType":"uint256","name":"callGasLimit","type":"uint256"},{"internalType":"uint256","name":"verificationGasLimit","type":"uint256"},{"internalType":"uint256","name":"preVerificationGas","type":"uint256"},{"internalType":"uint256","name":"maxFeePerGas","type":"uint256"},{"internalType":"uint256","name":"maxPriorityFeePerGas","type":"uint256"},{"internalType":"bytes","name":"paymasterAndData","type":"bytes"},{"internalType":"bytes","name":"signature","type":"bytes"}],"internalType":"struct UserOperation","name":"userOp","type":"tuple"},{"internalType":"bytes32","name":"userOpHash","type":"bytes32"}],"name":"validateSignature","outputs":[{"internalType":"uint256","name":"sigValidationResult","type":"uint256"}],"stateMutability":"nonpayable","type":"function"}],"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"initCode\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"callData\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"callGasLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"verificationGasLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"preVerificationGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxFeePerGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxPriorityFeePerGas\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"paymasterAndData\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"internalType\":\"struct UserOperation\",\"name\":\"userOp\",\"type\":\"tuple\"},{\"internalType\":\"bytes32\",\"name\":\"userOpHash\",\"type\":\"bytes32\"}],\"name\":\"validateSignature\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"sigValidationResult\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"validateSignature((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes),bytes32)\":{\"details\":\"standard validateSignature for modules to validate and mark userOpHash as seen\",\"params\":{\"userOp\":\"the operation that is about to be executed.\",\"userOpHash\":\"hash of the user's request data. can be used as the basis for signature.\"},\"returns\":{\"sigValidationResult\":\"sigAuthorizer to be passed back to trusting Account, aligns with validationData\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/smart-contract-wallet/interfaces/IModule.sol\":\"IModule\"},\"evmVersion\":\"london\",\"libraries\":{\":__CACHE_BREAKER__\":\"0x00000000d41867734bbee4c6863d9255b2b06ac1\"},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@account-abstraction/contracts/core/Helpers.sol\":{\"keccak256\":\"0x591c87519f7155d1909210276b77925ab2722a99b7b5d5649aecc36ebbdb045a\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://69643e83f68e6a13d5075c7565bfce326673b0bd98c432033c4603ea84835746\",\"dweb:/ipfs/QmSwSzjYyV7qudi5vvsmzHMG2Z4YJZxX51RRXXVCLaNcEU\"]},\"@account-abstraction/contracts/interfaces/UserOperation.sol\":{\"keccak256\":\"0x61374003361059087fdcf17967a7bba052badeaf5c7f0ae689166f8aafd3a45c\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://6ff83c59432e733bf6304dda27cd4b0f34401917dd535e2669cc842d2d26568c\",\"dweb:/ipfs/QmPJbHU5TAjHqUTZzAcicEeG2nknmwCN43L4EW9LHbknTN\"]},\"contracts/smart-contract-wallet/interfaces/IModule.sol\":{\"keccak256\":\"0x541a85fb77cc5294cbbf8239b1aa42e2b675fc126316b58206d1cde32426765b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ff846ad4331c8df2cb995e3e6b07e17b538c228e54df2ec5b5f7c9e7ba9612f\",\"dweb:/ipfs/QmZyuBY2E84RBjABFoGcGYYvG15uD9LMWE9ME3vnwQLmuB\"]}},\"version\":1}","devdoc":{"kind":"dev","methods":{"validateSignature((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes),bytes32)":{"details":"standard validateSignature for modules to validate and mark userOpHash as seen","params":{"userOp":"the operation that is about to be executed.","userOpHash":"hash of the user's request data. can be used as the basis for signature."},"returns":{"sigValidationResult":"sigAuthorizer to be passed back to trusting Account, aligns with validationData"}}},"version":1},"userdoc":{"kind":"user","methods":{},"version":1},"storageLayout":{"storage":[],"types":null},"evm":{"legacyAssembly":null,"assembly":null,"bytecode":null,"methodIdentifiers":{"validateSignature((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes),bytes32)":"22f383ea"}},"irOptimized":""}},"contracts/smart-contract-wallet/interfaces/ISignatureValidator.sol":{"ISignatureValidator":{"abi":[{"inputs":[{"internalType":"bytes32","name":"_dataHash","type":"bytes32"},{"internalType":"bytes","name":"_signature","type":"bytes"}],"name":"isValidSignature","outputs":[{"internalType":"bytes4","name":"","type":"bytes4"}],"stateMutability":"view","type":"function"}],"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_dataHash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"_signature\",\"type\":\"bytes\"}],\"name\":\"isValidSignature\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"isValidSignature(bytes32,bytes)\":{\"details\":\"Should return whether the signature provided is valid for the provided data\",\"params\":{\"_dataHash\":\"Arbitrary length data signed on behalf of address(this)\",\"_signature\":\"Signature byte array associated with _data MUST return the bytes4 magic value 0x20c13b0b when function passes. MUST NOT modify state (using STATICCALL for solc < 0.5, view modifier for solc > 0.5) MUST allow external calls\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/smart-contract-wallet/interfaces/ISignatureValidator.sol\":\"ISignatureValidator\"},\"evmVersion\":\"london\",\"libraries\":{\":__CACHE_BREAKER__\":\"0x00000000d41867734bbee4c6863d9255b2b06ac1\"},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"contracts/smart-contract-wallet/interfaces/ISignatureValidator.sol\":{\"keccak256\":\"0x99786ee319572532d07ac0da01cb78529b5e76f5f5d99dc607e90893b8326e39\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://f21e5a4e4c017e8efe545f6d1c6d9e2931a60b5f5d04cfea0e779cd55bac4990\",\"dweb:/ipfs/Qmchyq9Mg794PubDEV1JZX91Gz7fK5JKLLCToUhREnqDzG\"]}},\"version\":1}","devdoc":{"kind":"dev","methods":{"isValidSignature(bytes32,bytes)":{"details":"Should return whether the signature provided is valid for the provided data","params":{"_dataHash":"Arbitrary length data signed on behalf of address(this)","_signature":"Signature byte array associated with _data MUST return the bytes4 magic value 0x20c13b0b when function passes. MUST NOT modify state (using STATICCALL for solc < 0.5, view modifier for solc > 0.5) MUST allow external calls"}}},"version":1},"userdoc":{"kind":"user","methods":{},"version":1},"storageLayout":{"storage":[],"types":null},"evm":{"legacyAssembly":null,"assembly":null,"bytecode":null,"methodIdentifiers":{"isValidSignature(bytes32,bytes)":"1626ba7e"}},"irOptimized":""},"ISignatureValidatorConstants":{"abi":[],"metadata":{"optimizer_settings":"M3B3","solc_metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/smart-contract-wallet/interfaces/ISignatureValidator.sol\":\"ISignatureValidatorConstants\"},\"evmVersion\":\"london\",\"libraries\":{\":__CACHE_BREAKER__\":\"0x00000000d41867734bbee4c6863d9255b2b06ac1\"},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"contracts/smart-contract-wallet/interfaces/ISignatureValidator.sol\":{\"keccak256\":\"0x99786ee319572532d07ac0da01cb78529b5e76f5f5d99dc607e90893b8326e39\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://f21e5a4e4c017e8efe545f6d1c6d9e2931a60b5f5d04cfea0e779cd55bac4990\",\"dweb:/ipfs/Qmchyq9Mg794PubDEV1JZX91Gz7fK5JKLLCToUhREnqDzG\"]}},\"version\":1}","zk_version":"1.3.10"},"devdoc":{"kind":"dev","methods":{},"version":1},"userdoc":{"kind":"user","methods":{},"version":1},"storageLayout":{"storage":[],"types":null},"evm":{"legacyAssembly":null,"assembly":"\t.text\n\t.file\t\"ISignatureValidator.sol:ISignatureValidatorConstants\"\n\t.globl\t__entry\n__entry:\n.func_begin0:\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB0_2\n\tadd\t128, r0, r1\n\tst.1\t64, r1\n\tcontext.get_context_u128\tr1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_2\n\tadd\t32, r0, r1\n\tst.2\t256, r1\n\tst.2\t288, r0\n\tadd\t@CPI0_0[0], r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_2:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end0:\n\n\t.note.GNU-stack\n\t.rodata\nCPI0_0:\n\t.cell 53919893334301279589334030174039261352344891250716429051063678533632\n","bytecode":{"object":"00000001012001900000000c0000613d0000008001000039000000400010043f0000000001000416000000000110004c0000000c0000c13d00000020010000390000010000100443000001200000044300000005010000410000000f0001042e000000000100001900000010000104300000000e000004320000000f0001042e0000001000010430000000000000000000000000000000000000000000000000000000020000000000000000000000000000004000000100000000000000000063e6d9f4cc3cc0932af3d411c950140c3e4f8601e92eb34acb5f93b2a5a40cac"},"methodIdentifiers":{}},"irOptimized":"/// @use-src 29:\"contracts/smart-contract-wallet/interfaces/ISignatureValidator.sol\"\nobject \"ISignatureValidatorConstants_5528\" {\n    code {\n        {\n            /// @src 29:67:230  \"contract ISignatureValidatorConstants {...\"\n            let _1 := memoryguard(0x80)\n            mstore(64, _1)\n            if callvalue() { revert(0, 0) }\n            let _2 := datasize(\"ISignatureValidatorConstants_5528_deployed\")\n            codecopy(_1, dataoffset(\"ISignatureValidatorConstants_5528_deployed\"), _2)\n            return(_1, _2)\n        }\n    }\n    /// @use-src 29:\"contracts/smart-contract-wallet/interfaces/ISignatureValidator.sol\"\n    object \"ISignatureValidatorConstants_5528_deployed\" {\n        code {\n            {\n                /// @src 29:67:230  \"contract ISignatureValidatorConstants {...\"\n                revert(0, 0)\n            }\n        }\n        data \".metadata\" hex\"a2646970667358221220e56677a3f7fcf947c286ac91997ee2c055eee4832c46b5e47b5244df84e9791d64736f6c63430008110033\"\n    }\n}\n","hash":"01000007d7487575a56c5cec803fec1e5fb306095e07b8b2cd9fcb76facaa561","factoryDependencies":{}}},"contracts/smart-contract-wallet/libs/LibAddress.sol":{"LibAddress":{"abi":[],"metadata":{"optimizer_settings":"M3B3","solc_metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/smart-contract-wallet/libs/LibAddress.sol\":\"LibAddress\"},\"evmVersion\":\"london\",\"libraries\":{\":__CACHE_BREAKER__\":\"0x00000000d41867734bbee4c6863d9255b2b06ac1\"},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"contracts/smart-contract-wallet/libs/LibAddress.sol\":{\"keccak256\":\"0xc002ad1e29166d55aa40f8d034506aa1922cf2e49be798dcbc51f9add2715d81\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a47ef7173ad22cdce729aeffad27b0e7dd2aa6e111c292989828ae04fb352164\",\"dweb:/ipfs/QmSeV8s3q9emK2XH7kYnZfzjpWgr4SbyST9rQTURGUxhYW\"]}},\"version\":1}","zk_version":"1.3.10"},"devdoc":{"kind":"dev","methods":{},"version":1},"userdoc":{"kind":"user","methods":{},"version":1},"storageLayout":{"storage":[],"types":null},"evm":{"legacyAssembly":null,"assembly":"\t.text\n\t.file\t\"LibAddress.sol:LibAddress\"\n\t.globl\t__entry\n__entry:\n.func_begin0:\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB0_2\n\tadd\t128, r0, r1\n\tst.1\t64, r1\n\tcontext.get_context_u128\tr1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_2\n\tadd\t32, r0, r1\n\tst.2\t256, r1\n\tst.2\t288, r0\n\tadd\t@CPI0_0[0], r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_2:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end0:\n\n\t.note.GNU-stack\n\t.rodata\nCPI0_0:\n\t.cell 53919893334301279589334030174039261352344891250716429051063678533632\n","bytecode":{"object":"00000001012001900000000c0000613d0000008001000039000000400010043f0000000001000416000000000110004c0000000c0000c13d00000020010000390000010000100443000001200000044300000005010000410000000f0001042e000000000100001900000010000104300000000e000004320000000f0001042e00000010000104300000000000000000000000000000000000000000000000000000000200000000000000000000000000000040000001000000000000000000b77db4a00d1805b5fff413a6d435651d3cf80fc648f0cf097f00e4e9db6759c9"},"methodIdentifiers":{}},"irOptimized":"/// @use-src 30:\"contracts/smart-contract-wallet/libs/LibAddress.sol\"\nobject \"LibAddress_5561\" {\n    code {\n        {\n            /// @src 30:57:632  \"library LibAddress {...\"\n            let _1 := memoryguard(0x80)\n            mstore(64, _1)\n            if callvalue() { revert(0, 0) }\n            let _2 := datasize(\"LibAddress_5561_deployed\")\n            codecopy(_1, dataoffset(\"LibAddress_5561_deployed\"), _2)\n            setimmutable(_1, \"library_deploy_address\", address())\n            return(_1, _2)\n        }\n    }\n    /// @use-src 30:\"contracts/smart-contract-wallet/libs/LibAddress.sol\"\n    object \"LibAddress_5561_deployed\" {\n        code {\n            {\n                /// @src 30:57:632  \"library LibAddress {...\"\n                revert(0, 0)\n            }\n        }\n        data \".metadata\" hex\"a2646970667358221220daacb29a2b29922cc4c4d1bd48164f99502868c0cb697bf51c9ab4e06afab46c64736f6c63430008110033\"\n    }\n}\n","hash":"01000007ae490b220db6eedf7121a35386aeaa363bf1253fa3a645ed37b1d655","factoryDependencies":{}}},"contracts/smart-contract-wallet/libs/Math.sol":{"Math":{"abi":[],"metadata":{"optimizer_settings":"M3B3","solc_metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/smart-contract-wallet/libs/Math.sol\":\"Math\"},\"evmVersion\":\"london\",\"libraries\":{\":__CACHE_BREAKER__\":\"0x00000000d41867734bbee4c6863d9255b2b06ac1\"},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"contracts/smart-contract-wallet/libs/Math.sol\":{\"keccak256\":\"0x4e04d4c68c9940d8ef91fb4b44cefaa0429e7cad784ac1fc819de757da058f73\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://52a9975f411611a8976fbc427b6a7971644b75566cf749243b8a7edad4f892c7\",\"dweb:/ipfs/QmVkvPYeLwFxbPKWWmLjivxTYvaAdU2vd1GNHvV8D5BmZf\"]}},\"version\":1}","zk_version":"1.3.10"},"devdoc":{"details":"Standard math utilities missing in the Solidity language.","kind":"dev","methods":{},"version":1},"userdoc":{"kind":"user","methods":{},"version":1},"storageLayout":{"storage":[],"types":null},"evm":{"legacyAssembly":null,"assembly":"\t.text\n\t.file\t\"Math.sol:Math\"\n\t.globl\t__entry\n__entry:\n.func_begin0:\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB0_2\n\tadd\t128, r0, r1\n\tst.1\t64, r1\n\tcontext.get_context_u128\tr1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_2\n\tadd\t32, r0, r1\n\tst.2\t256, r1\n\tst.2\t288, r0\n\tadd\t@CPI0_0[0], r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_2:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end0:\n\n\t.note.GNU-stack\n\t.rodata\nCPI0_0:\n\t.cell 53919893334301279589334030174039261352344891250716429051063678533632\n","bytecode":{"object":"00000001012001900000000c0000613d0000008001000039000000400010043f0000000001000416000000000110004c0000000c0000c13d00000020010000390000010000100443000001200000044300000005010000410000000f0001042e000000000100001900000010000104300000000e000004320000000f0001042e00000010000104300000000000000000000000000000000000000000000000000000000200000000000000000000000000000040000001000000000000000000eac5821b64ba4c58c73c0d89c4abafd532764fcf189968105b7b9bc228684b43"},"methodIdentifiers":{}},"irOptimized":"/// @use-src 31:\"contracts/smart-contract-wallet/libs/Math.sol\"\nobject \"Math_6427\" {\n    code {\n        {\n            /// @src 31:202:13068  \"library Math {...\"\n            let _1 := memoryguard(0x80)\n            mstore(64, _1)\n            if callvalue() { revert(0, 0) }\n            let _2 := datasize(\"Math_6427_deployed\")\n            codecopy(_1, dataoffset(\"Math_6427_deployed\"), _2)\n            setimmutable(_1, \"library_deploy_address\", address())\n            return(_1, _2)\n        }\n    }\n    /// @use-src 31:\"contracts/smart-contract-wallet/libs/Math.sol\"\n    object \"Math_6427_deployed\" {\n        code {\n            {\n                /// @src 31:202:13068  \"library Math {...\"\n                revert(0, 0)\n            }\n        }\n        data \".metadata\" hex\"a26469706673582212202453c4f675fc0b84b08da0ab7365c8c1dc2e542ff0be0505d53d4596b341646f64736f6c63430008110033\"\n    }\n}\n","hash":"01000007c02cf97b4ff1b01265d568c8993d9583861a9a2387cd0979312491c1","factoryDependencies":{}}},"contracts/smart-contract-wallet/utils/GasEstimatorSmartAccount.sol":{"GasEstimatorSmartAccount":{"abi":[{"inputs":[{"internalType":"address","name":"_actualWallet","type":"address"},{"internalType":"address","name":"_factory","type":"address"},{"internalType":"address","name":"_owner","type":"address"},{"internalType":"uint256","name":"_index","type":"uint256"},{"internalType":"bytes","name":"_data","type":"bytes"}],"name":"estimate","outputs":[{"internalType":"bool","name":"success","type":"bool"},{"internalType":"bytes","name":"result","type":"bytes"},{"internalType":"uint256","name":"gas","type":"uint256"}],"stateMutability":"nonpayable","type":"function"}],"metadata":{"optimizer_settings":"M3B3","solc_metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_actualWallet\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_factory\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_index\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"estimate\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"result\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"gas\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/smart-contract-wallet/utils/GasEstimatorSmartAccount.sol\":\"GasEstimatorSmartAccount\"},\"evmVersion\":\"london\",\"libraries\":{\":__CACHE_BREAKER__\":\"0x00000000d41867734bbee4c6863d9255b2b06ac1\"},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@account-abstraction/contracts/core/Helpers.sol\":{\"keccak256\":\"0x591c87519f7155d1909210276b77925ab2722a99b7b5d5649aecc36ebbdb045a\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://69643e83f68e6a13d5075c7565bfce326673b0bd98c432033c4603ea84835746\",\"dweb:/ipfs/QmSwSzjYyV7qudi5vvsmzHMG2Z4YJZxX51RRXXVCLaNcEU\"]},\"@account-abstraction/contracts/interfaces/IAccount.sol\":{\"keccak256\":\"0x556a0e5980de18e90b115553ed502408155ba35f58642823010d9288047bc418\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://a0f420134b79596db8737173c7b933ae0a33059e107b6327c43aa40d4744a9e4\",\"dweb:/ipfs/QmRo8s1AhXmEMV7uPYnbpYwU19e9Bk6jmYBJTiPx3Fo85W\"]},\"@account-abstraction/contracts/interfaces/IAggregator.sol\":{\"keccak256\":\"0x060e9ddb0152250c269ba0640dc5753834ac44cf182a2837d508c0c529cae26a\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://20ed837bc5909c89ff1910246bf245a5dad6840aa939382e1694964eb7dbd37b\",\"dweb:/ipfs/QmTMybRq5yyghPDDs1ZCNAVB9sSJ4WHe6Q9mejuKPTAdNP\"]},\"@account-abstraction/contracts/interfaces/IEntryPoint.sol\":{\"keccak256\":\"0x3a90bf308819ed125fa4202f880999caff8a8686633b8ddb79a30ca240d5b8f8\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://d2d21cc92c2fdab2b58d21bc25d4cd0e8c284b922528a186b087b818d54bc6cf\",\"dweb:/ipfs/QmT1qrfuBjsv2rmRCDn8mgPXHp94hARJwzbcDuBLDTbFWd\"]},\"@account-abstraction/contracts/interfaces/INonceManager.sol\":{\"keccak256\":\"0x509871e6c63663cdcc3eba19920fe84e991f38b289b1377ac3c3a6d9f22d7e12\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://00fe21b4349b24c50df60e1a705179293982bd9e7a32b78d4bac9620f89e7fe2\",\"dweb:/ipfs/QmSFFYGfUwQbVa6hASjU7YxTvgi2HkfrPr4X5oPHscHg8b\"]},\"@account-abstraction/contracts/interfaces/IStakeManager.sol\":{\"keccak256\":\"0xd227b02888cd4ac68daebcdfd992ec00f9fff66fa3b3bb16f656cd582fa3480f\",\"license\":\"GPL-3.0-only\",\"urls\":[\"bzz-raw://b389da4714a138be63704a576a482505eab2855e263b38a93706395d8d42e7c3\",\"dweb:/ipfs/QmeeAZpdHwUXxqP8pxA7GNtoCGBmmH4FaqLLwScVKGxtxZ\"]},\"@account-abstraction/contracts/interfaces/UserOperation.sol\":{\"keccak256\":\"0x61374003361059087fdcf17967a7bba052badeaf5c7f0ae689166f8aafd3a45c\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://6ff83c59432e733bf6304dda27cd4b0f34401917dd535e2669cc842d2d26568c\",\"dweb:/ipfs/QmPJbHU5TAjHqUTZzAcicEeG2nknmwCN43L4EW9LHbknTN\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0xa4d1d62251f8574deb032a35fc948386a9b4de74b812d4f545a1ac120486b48a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8c969013129ba9e651a20735ef659fef6d8a1139ea3607bd4b26ddea2d645634\",\"dweb:/ipfs/QmVhVa6LGuzAcB8qgDtVHRkucn4ihj5UZr8xBLcJkP6ucb\"]},\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0xda898fa084aa1ddfdb346e6a40459e00a59d87071cce7c315a46d648dd71d0ba\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ce501a941f4aa1555c04dabb5e07992503bb6a9b32ff8f7cdcefdb4a742210cb\",\"dweb:/ipfs/QmeScPrUpdrGYs9BytV3Z5ZWJcBXtuAgCW4BLHua4xFUxx\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa1e8e83cd0087785df04ac79fb395d9f3684caeaf973d9e2c71caef723a3a5d6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://33bbf48cc069be677705037ba7520c22b1b622c23b33e1a71495f2d36549d40b\",\"dweb:/ipfs/Qmct36zWXv3j7LZB83uwbg7TXwnZSN1fqHNDZ93GG98bGz\"]},\"contracts/smart-contract-wallet/BaseSmartAccount.sol\":{\"keccak256\":\"0x59fbea0d532f8a11c3114613791e96e5412d109d78bdc39e46ad039aa8be6f5b\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://3b816aca2894404864952b8d180fa993d36abe08b0d587d6e7f236eb586444a4\",\"dweb:/ipfs/Qmb3fM6woAdtjDoTkAXC6bbcpfmp3Z3p7Kk3Cg919WQzH3\"]},\"contracts/smart-contract-wallet/Proxy.sol\":{\"keccak256\":\"0x90f1f586b929825cbda2d743080fafc42fb5ef478a3d44ae60bb2803a9a46705\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://433c8e9766083a74ac6768dbef3b32365363e346b5d3431563819bdf72f0b62d\",\"dweb:/ipfs/QmcqrZpoHUMCmEcznCvDNEir17Eb8WVvYuGUpYvNE2UTSR\"]},\"contracts/smart-contract-wallet/SmartAccount.sol\":{\"keccak256\":\"0x823cc4ebcb0ecabad0c933362293d938d218fc87051ff71250617aa55b978500\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a986065f9b39d736e00c6540bd227025671d00e31802032780f51026756da578\",\"dweb:/ipfs/QmZ3CYv1V2dozmwMs5isWvE1W1VxCAHQvnfoF984nzJn4q\"]},\"contracts/smart-contract-wallet/SmartAccountFactory.sol\":{\"keccak256\":\"0x9b65bec90d675602b23cbca129c9ba30e7653443a262a0922be1930b0cbffcc5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://03cec40112569ac1dbf555942ed09b097b3a23111007ae9c5323cb62a56fd03b\",\"dweb:/ipfs/QmbTnew1zW2bK5RyG2PRmYaBt2q2grFJABiAEGADFnVzng\"]},\"contracts/smart-contract-wallet/base/Executor.sol\":{\"keccak256\":\"0x578ee56ff18e80fbf5ae28644ddc47f6a480e906d676caca3b43df89ef425647\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://a038b142793c435c9b3a349c808a4d7c8c934a57d82c32384c36501c5069891f\",\"dweb:/ipfs/QmQUUJcbjTjeJQFjFVk6D6a3EtVbkwEsRHmRVcc1FJmuRr\"]},\"contracts/smart-contract-wallet/base/FallbackManager.sol\":{\"keccak256\":\"0xe3b6dbcfb3bfa65dba011674892778d1578d40421d0ed7700e1ac2582541954e\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://479d9add893ed5b96c9be32d2fceec345fbe60ca03b3a26ffd7fe91afaafb678\",\"dweb:/ipfs/QmWmVeiLU19Bk3s5R57oDMZibRNsB8tb279kRx1JrAHsCh\"]},\"contracts/smart-contract-wallet/base/ModuleManager.sol\":{\"keccak256\":\"0x98210b7ffe719d9873fb24ef89cbbbc58729412f4e9285bae09e9c205731a665\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://f58685b75663559e39d5980238b9b25c2bd299050e66e47b50266e2dce6738ae\",\"dweb:/ipfs/QmZV3vZ9X1Nt96ty12Vy54n818w2Fafs5gkhkgxQotZxF5\"]},\"contracts/smart-contract-wallet/common/Enum.sol\":{\"keccak256\":\"0x657464511d99c53126e008910b266875b299d6e328e105203cb53b6f467acdac\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://d31ced2b537c575f21e5d78989076ce76df8befb276d75c79cf64e44031ae527\",\"dweb:/ipfs/QmNh5E4sTYkphUs8P4rZ8WCQUkWZmjwAAyPzSr612rEs8C\"]},\"contracts/smart-contract-wallet/common/Errors.sol\":{\"keccak256\":\"0xef2989dcfc2aedddfd76865faa371b7cfb1e4e40592cc31d6d4151914f1a6aaa\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://8248d7e170d8ff5d67e62c2e0528e3700dfdc3f08eb6fa8a2a6d7c3c5fafee76\",\"dweb:/ipfs/QmbEpeNpBqHbu4Gx2nwGweynRJRoe5NdGCZZ64TPxRdn3X\"]},\"contracts/smart-contract-wallet/common/ReentrancyGuard.sol\":{\"keccak256\":\"0x399687cf8c0703996a34d63ccf3c5ef19471aa3b02fcbae6cd6ac5c839ae7b1b\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://406c6236f2c8e80ebd75306449ad99bc0e47b26200d0a9e68b8a72a69eeb12e8\",\"dweb:/ipfs/QmSuw7b1T5ttyQQ1qioV2vLpKGY9HGBnPJNmwZEgBUL8jp\"]},\"contracts/smart-contract-wallet/common/SecuredTokenTransfer.sol\":{\"keccak256\":\"0x53c6c0faaba3c0a3abe6aecd08b7bfbf530246930f52ef6642394040a09d8dae\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://e62c706474f89b74d95fde23921bbb7d9017f6a54ad1297731c58424eba3a23e\",\"dweb:/ipfs/QmXF8uAVt6x6E1P1LUG8e15WpLYznfxAJpGr1BREiUhbMG\"]},\"contracts/smart-contract-wallet/common/SelfAuthorized.sol\":{\"keccak256\":\"0xaff7f31a495e6455b386d215dc8413efb816ca340b7a4254ea1c799766451b2f\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://0cdda0e1a507a8faca7fcbab22324c5a26ddd0be417488de48a86b983b8ceacc\",\"dweb:/ipfs/QmTC2y5o6skp95sStYU86Djetk3HPvTXoZrDMaYFnKuBJG\"]},\"contracts/smart-contract-wallet/common/SignatureDecoder.sol\":{\"keccak256\":\"0x591c6470fc0854467a1ae2ab17977c38de055ba3c4e7f3c9a903dd10997e3d4f\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://a3f0bee474df330369650e186a43ce4437330017a4e0125c7bb614a905dbf783\",\"dweb:/ipfs/QmSYnyHoPBUP3wBfAPp3HDujH7tMZeDMpGJg75nZtgs6Em\"]},\"contracts/smart-contract-wallet/handler/DefaultCallbackHandler.sol\":{\"keccak256\":\"0x2a34a464050818d229545436ff3b647b44f4b71a968b58b653cc5fcc03b858b8\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://f8766721571bb2f724d9c7048096f9272e6c95556fce648fddbeb9a7636e51e1\",\"dweb:/ipfs/QmdXtspM5veCP9LYuicnWeXyyPzpYVihrhe8MqJUJGcmLH\"]},\"contracts/smart-contract-wallet/interfaces/IERC1155TokenReceiver.sol\":{\"keccak256\":\"0x2ab169ad3e2f27a76e05ceda7c7a378084be7669228e3da25fcbcc50ce3f66fb\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://f61fee624ac4c523cd02c825ee836a60cc1b8c08f4f95a7b0c79e45a25e408ec\",\"dweb:/ipfs/QmXxsL3hcS8bWzpCgm4RK6x3TaAiD3fLmNe43Nr7KSMGRY\"]},\"contracts/smart-contract-wallet/interfaces/IERC165.sol\":{\"keccak256\":\"0x03db523eaf7cef6e0513cc29d5014aa2802eb78ebe7280272c01258adecab521\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://ebf25bc7844ee820464be1bb804f2ef75e0d9ce53c9e45a133da82f00f1c9e88\",\"dweb:/ipfs/QmcZrTHuEcimUpmwgSx4sx7SpfY13wN5S2HNDRk4x7qHXt\"]},\"contracts/smart-contract-wallet/interfaces/IERC721TokenReceiver.sol\":{\"keccak256\":\"0x74d1001cd26599c9a8b96e24560f3ad25ca215c0e8d584187e14d7d97b0c1d22\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://4b07e27abcff56cf840677bc176e0eda0d94df7843cb8ba8f27075b6a3dff223\",\"dweb:/ipfs/QmaGQK6ZquqicxyFj8Uj6mHpuM3yB6kXf7Gd2QyKbVFcrK\"]},\"contracts/smart-contract-wallet/interfaces/IERC777TokensRecipient.sol\":{\"keccak256\":\"0x6318922ecf2801e4d68206f240d000f25612ed615c5001cde107708528ffdda9\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://8b78fd6bcfea3f562d3dedc45aff1b0b0b50029e039dafdaaefca254ba23ec6e\",\"dweb:/ipfs/QmRtxph2sD5qPenHoPBQ7DU97WFECo2b2b3thhcP1m6Pxv\"]},\"contracts/smart-contract-wallet/interfaces/IModule.sol\":{\"keccak256\":\"0x541a85fb77cc5294cbbf8239b1aa42e2b675fc126316b58206d1cde32426765b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ff846ad4331c8df2cb995e3e6b07e17b538c228e54df2ec5b5f7c9e7ba9612f\",\"dweb:/ipfs/QmZyuBY2E84RBjABFoGcGYYvG15uD9LMWE9ME3vnwQLmuB\"]},\"contracts/smart-contract-wallet/interfaces/ISignatureValidator.sol\":{\"keccak256\":\"0x99786ee319572532d07ac0da01cb78529b5e76f5f5d99dc607e90893b8326e39\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://f21e5a4e4c017e8efe545f6d1c6d9e2931a60b5f5d04cfea0e779cd55bac4990\",\"dweb:/ipfs/Qmchyq9Mg794PubDEV1JZX91Gz7fK5JKLLCToUhREnqDzG\"]},\"contracts/smart-contract-wallet/libs/LibAddress.sol\":{\"keccak256\":\"0xc002ad1e29166d55aa40f8d034506aa1922cf2e49be798dcbc51f9add2715d81\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a47ef7173ad22cdce729aeffad27b0e7dd2aa6e111c292989828ae04fb352164\",\"dweb:/ipfs/QmSeV8s3q9emK2XH7kYnZfzjpWgr4SbyST9rQTURGUxhYW\"]},\"contracts/smart-contract-wallet/libs/Math.sol\":{\"keccak256\":\"0x4e04d4c68c9940d8ef91fb4b44cefaa0429e7cad784ac1fc819de757da058f73\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://52a9975f411611a8976fbc427b6a7971644b75566cf749243b8a7edad4f892c7\",\"dweb:/ipfs/QmVkvPYeLwFxbPKWWmLjivxTYvaAdU2vd1GNHvV8D5BmZf\"]},\"contracts/smart-contract-wallet/utils/GasEstimatorSmartAccount.sol\":{\"keccak256\":\"0x1bcfc301696bf466c739a67e419384f32df948d44405f385b22772275c55d53f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cc7c18f9ee9148ea52755f87aa140008fda0b127e95d4bd56b2f6c7ec328acf3\",\"dweb:/ipfs/QmVkCeUVSFvtSNMNtrYociyMsG5uPd5tu8VjCqHL8qRRTp\"]}},\"version\":1}","zk_version":"1.3.10"},"devdoc":{"kind":"dev","methods":{},"version":1},"userdoc":{"kind":"user","methods":{},"version":1},"storageLayout":{"storage":[],"types":null},"evm":{"legacyAssembly":null,"assembly":"\t.text\n\t.file\t\"GasEstimatorSmartAccount.sol:GasEstimatorSmartAccount\"\n\t.globl\t__entry\n__entry:\n.func_begin0:\n\tnop\tstack+=[4]\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, r4\n\tptr.add\tr1, r4, stack[@ptr_return_data]\n\tptr.add\tr1, r0, stack[@ptr_calldata]\n\tand\t@CPI0_0[0], r3, stack[@calldatasize]\n\tadd\t0, r0, stack[@returndatasize]\n\tadd\t128, r0, r1\n\tst.1\t64, r1\n\tand!\t1, r2, r1\n\tjump.ne\t@.BB0_1\n\tadd\tstack[@calldatasize], r0, r1\n\tsub.s!\t4, r1, r1\n\tjump.lt\t@.BB0_2\n\tptr.add\tstack[@ptr_calldata], r0, r1\n\tld\tr1, r1\n\tand\t@CPI0_2[0], r1, r1\n\tsub.s!\t@CPI0_3[0], r1, r1\n\tjump.ne\t@.BB0_2\n\tcontext.get_context_u128\tr1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_2\n\tadd\tstack[@calldatasize], r0, r1\n\tsub.s\t4, r1, r2\n\tadd\t@CPI0_4[0], r0, r3\n\tsub.s!\t160, r2, r4\n\tadd\t0, r0, r4\n\tadd.lt\tr3, r0, r4\n\tand\t@CPI0_4[0], r2, r2\n\tsub.s!\t0, r2, r5\n\tadd.le\t0, r0, r3\n\tsub.s!\t@CPI0_4[0], r2, r2\n\tadd\tr4, r0, r2\n\tadd.eq\tr3, r0, r2\n\tsub.s!\t0, r2, r2\n\tjump.ne\t@.BB0_2\n\tptr.add\tstack[@ptr_calldata], r0, r3\n\tptr.add.s\t4, r3, r2\n\tld\tr2, r11\n\tsub.s!\t@CPI0_5[0], r11, r2\n\tjump.gt\t@.BB0_2\n\tptr.add.s\t36, r3, r2\n\tld\tr2, r4\n\tand\t@CPI0_5[0], r4, r2\n\tsub.s!\t@CPI0_5[0], r4, r4\n\tjump.gt\t@.BB0_2\n\tptr.add.s\t68, r3, r4\n\tld\tr4, r5\n\tand\t@CPI0_5[0], r5, r4\n\tsub.s!\t@CPI0_5[0], r5, r5\n\tjump.gt\t@.BB0_2\n\tptr.add.s\t132, r3, r5\n\tld\tr5, r5\n\tsub.s!\t@CPI0_6[0], r5, r6\n\tjump.gt\t@.BB0_2\n\tadd\t35, r5, r6\n\tadd\t@CPI0_4[0], r0, r7\n\tsub!\tr6, r1, r8\n\tadd\t0, r0, r8\n\tadd.ge\tr7, r0, r8\n\tand\t@CPI0_4[0], r1, r9\n\tand\t@CPI0_4[0], r6, r6\n\tsub!\tr6, r9, r10\n\tadd.ge\t0, r0, r7\n\txor\tr6, r9, r6\n\tsub.s!\t@CPI0_4[0], r6, r6\n\tadd\tr8, r0, r6\n\tadd.eq\tr7, r0, r6\n\tsub.s!\t0, r6, r6\n\tjump.ne\t@.BB0_2\n\tadd\t4, r5, r6\n\tptr.add\tr3, r6, r3\n\tld\tr3, r6\n\tsub.s!\t@CPI0_6[0], r6, r3\n\tjump.gt\t@.BB0_2\n\tadd\t36, r5, r5\n\tadd\tr6, r5, r3\n\tsub!\tr3, r1, r1\n\tjump.gt\t@.BB0_2\n\tcontext.gas_left\tr1\n\tadd\tr1, r0, stack-[4]\n\tadd\t@CPI0_7[0], r0, r1\n\tst.1\t128, r1\n\tst.1\t132, r4\n\tadd\t100, r0, r1\n\tptr.add\tstack[@ptr_calldata], r1, r1\n\tld\tr1, r1\n\tst.1\t164, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t4, r2, r3\n\tjump.ne\t@.BB0_17\n\tadd\tstack[@returndatasize], r0, r3\n\tsub.s!\t32, r3, r1\n\tadd\t32, r0, r4\n\tadd.lt\tr3, r0, r4\n\tjump\t@.BB0_27\n.BB0_1:\n\tcontext.get_context_u128\tr1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_2\n\tadd\t32, r0, r1\n\tst.2\t256, r1\n\tst.2\t288, r0\n\tadd\t@CPI0_1[0], r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_17:\n\tadd\tr5, r0, stack-[1]\n\tadd\tr6, r0, stack-[2]\n\tadd\tr11, r0, stack-[3]\n\tadd\t@CPI0_0[0], r0, r3\n\tsub.s!\t@CPI0_0[0], r1, r4\n\tadd.ge\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_8[0], r1, r1\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, r3\n\tsub.s!\t32, r3, r4\n\tadd\t32, r0, r4\n\tadd.lt\tr3, r0, r4\n\tand\t31, r4, r5\n\tshr.s!\t5, r4, r6\n\tjump.eq\t@.BB0_54\n\tadd\tr0, r0, r7\n.BB0_19:\n\tshl.s\t5, r7, r8\n\tptr.add\tr1, r8, r9\n\tld\tr9, r9\n\tadd\t128, r8, r8\n\tst.1\tr8, r9\n\tadd\t1, r7, r7\n\tsub!\tr7, r6, r8\n\tjump.lt\t@.BB0_19\n.BB0_54:\n\tsub.s!\t0, r5, r7\n\tjump.eq\t@.BB0_21\n\tshl.s\t5, r6, r6\n\tptr.add\tr1, r6, r7\n\tshl.s\t3, r5, r5\n\tadd\t128, r6, r6\n\tld.1\tr6, r8\n\tshl\tr8, r5, r8\n\tshr\tr8, r5, r8\n\tld\tr7, r7\n\tsub\t256, r5, r5\n\tshr\tr7, r5, r7\n\tshl\tr7, r5, r5\n\tor\tr5, r8, r5\n\tst.1\tr6, r5\n.BB0_21:\n\tadd\tr3, r0, stack[@returndatasize]\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tadd\tstack-[3], r0, r11\n\tadd\tstack-[2], r0, r6\n\tadd\tstack-[1], r0, r5\n\tjump.eq\t@.BB0_22\n.BB0_27:\n\tadd\t31, r4, r1\n\tand\t96, r1, r1\n\tor\t128, r1, r1\n\tst.1\t64, r1\n\tsub.s!\t32, r3, r2\n\tjump.lt\t@.BB0_2\n\tld.1\t128, r2\n\tsub.s!\t@CPI0_9[0], r2, r2\n\tjump.ge\t@.BB0_2\n\tand\t31, r6, r2\n\tptr.add\tstack[@ptr_calldata], r5, r3\n\tadd\tr6, r0, r8\n\tshr.s!\t5, r6, r4\n\tjump.eq\t@.BB0_52\n\tadd\tr0, r0, r5\n.BB0_30:\n\tshl.s\t5, r5, r6\n\tadd\tr1, r6, r7\n\tptr.add\tr3, r6, r6\n\tld\tr6, r6\n\tst.1\tr7, r6\n\tadd\t1, r5, r5\n\tsub!\tr5, r4, r6\n\tjump.lt\t@.BB0_30\n.BB0_52:\n\tsub.s!\t0, r2, r5\n\tjump.eq\t@.BB0_32\n\tshl.s\t5, r4, r4\n\tptr.add\tr3, r4, r3\n\tadd\tr1, r4, r4\n\tshl.s\t3, r2, r2\n\tld.1\tr4, r5\n\tshl\tr5, r2, r5\n\tshr\tr5, r2, r5\n\tld\tr3, r3\n\tsub\t256, r2, r2\n\tshr\tr3, r2, r3\n\tshl\tr3, r2, r2\n\tor\tr2, r5, r2\n\tst.1\tr4, r2\n.BB0_32:\n\tadd\tr1, r8, r2\n\tst.1\tr2, r0\n\tcontext.gas_left\tr5\n\tadd\tr11, r0, r2\n\tsub.s!\t4, r2, r3\n\tjump.ne\t@.BB0_36\n\tadd\t1, r0, r2\n\tadd\tstack[@returndatasize], r0, r3\n\tjump\t@.BB0_35\n.BB0_2:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_22:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r3\n\tjump.eq\t@.BB0_53\n\tadd\tr0, r0, r5\n.BB0_24:\n\tshl.s\t5, r5, r6\n\tadd\tr2, r6, r7\n\tptr.add\tr1, r6, r6\n\tld\tr6, r6\n\tst.1\tr7, r6\n\tadd\t1, r5, r5\n\tsub!\tr5, r3, r6\n\tjump.lt\t@.BB0_24\n.BB0_53:\n\tsub.s!\t0, r4, r5\n\tjump.eq\t@.BB0_26\n\tshl.s\t5, r3, r3\n\tptr.add\tr1, r3, r1\n\tadd\tr2, r3, r3\n\tshl.s\t3, r4, r4\n\tld.1\tr3, r5\n\tshl\tr5, r4, r5\n\tshr\tr5, r4, r5\n\tld\tr1, r1\n\tsub\t256, r4, r4\n\tshr\tr1, r4, r1\n\tshl\tr1, r4, r1\n\tor\tr1, r5, r1\n\tst.1\tr3, r1\n.BB0_26:\n\tadd\t@CPI0_0[0], r0, r1\n\tadd\tstack[@returndatasize], r0, r3\n\tsub.s!\t@CPI0_0[0], r3, r4\n\tadd.ge\tr1, r0, r3\n\tsub.s!\t@CPI0_0[0], r2, r4\n\tadd.lt\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t96, r3, r2\n\tor\tr2, r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_36:\n\tadd\t@CPI0_0[0], r0, r3\n\tsub.s!\t@CPI0_0[0], r8, r4\n\tadd\tr3, r0, r4\n\tadd.lt\tr8, r0, r4\n\tshl.s\t96, r4, r4\n\tshl.s\t64, r1, r1\n\tor\tr1, r4, r1\n\tsub.s!\t@CPI0_0[0], r5, r4\n\tadd.lt\tr5, r0, r3\n\tshl.s\t192, r3, r3\n\tor\tr3, r1, r1\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand\t1, r2, r2\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tshr.s\t96, r1, r1\n\tand\t@CPI0_0[0], r1, stack[@returndatasize]\n\tand\t@CPI0_0[0], r1, r3\n.BB0_35:\n\tadd\t96, r0, r1\n\tsub.s!\t0, r3, r4\n\tjump.ne\t@.BB0_38\n.BB0_37:\n\tcontext.gas_left\tr4\n\tadd\tstack-[4], r0, r3\n\tsub!\tr3, r4, r3\n\tjump.ge\t@.BB0_47\n\tadd\t@CPI0_11[0], r0, r1\n\tst.1\t0, r1\n\tadd\t17, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI0_12[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_38:\n\tsub.s!\t@CPI0_10[0], r3, r1\n\tjump.ge\t@.BB0_39\n\tadd\t63, r3, r1\n\tsub.s\t32, r0, r4\n\tand\tr1, r4, r4\n\tld.1\t64, r1\n\tadd\tr1, r4, r4\n\tsub!\tr4, r1, r5\n\tadd\t0, r0, r5\n\tadd.lt\t1, r0, r5\n\tsub.s!\t@CPI0_6[0], r4, r6\n\tjump.gt\t@.BB0_39\n\tand!\t1, r5, r5\n\tjump.ne\t@.BB0_39\n\tst.1\t64, r4\n\tst.1.inc\tr1, r3, r3\n\tptr.add\tstack[@ptr_return_data], r0, r4\n\tadd\tstack[@returndatasize], r0, r6\n\tand\t31, r6, r5\n\tshr.s!\t5, r6, r6\n\tjump.eq\t@.BB0_51\n\tadd\tr0, r0, r7\n.BB0_44:\n\tshl.s\t5, r7, r8\n\tadd\tr3, r8, r9\n\tptr.add\tr4, r8, r8\n\tld\tr8, r8\n\tst.1\tr9, r8\n\tadd\t1, r7, r7\n\tsub!\tr7, r6, r8\n\tjump.lt\t@.BB0_44\n.BB0_51:\n\tsub.s!\t0, r5, r7\n\tjump.eq\t@.BB0_37\n\tshl.s\t5, r6, r6\n\tptr.add\tr4, r6, r4\n\tadd\tr3, r6, r3\n\tshl.s\t3, r5, r5\n\tld.1\tr3, r6\n\tshl\tr6, r5, r6\n\tshr\tr6, r5, r6\n\tld\tr4, r4\n\tsub\t256, r5, r5\n\tshr\tr4, r5, r4\n\tshl\tr4, r5, r4\n\tor\tr4, r6, r4\n\tst.1\tr3, r4\n\tjump\t@.BB0_37\n.BB0_39:\n\tadd\t@CPI0_11[0], r0, r1\n\tst.1\t0, r1\n\tadd\t65, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI0_12[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_47:\n\tld.1\t64, r3\n\tadd\t32, r3, r5\n\tadd\t96, r0, r6\n\tst.1\tr5, r6\n\tst.1\tr3, r2\n\tld.1\tr1, r2\n\tadd\t96, r3, r5\n\tst.1\tr5, r2\n\tadd\t128, r3, r5\n\tsub.s!\t0, r2, r6\n\tjump.eq\t@.BB0_50\n\tadd\tr0, r0, r6\n.BB0_49:\n\tadd\tr6, r5, r7\n\tadd\t32, r6, r6\n\tadd\tr6, r1, r8\n\tld.1\tr8, r8\n\tst.1\tr7, r8\n\tsub!\tr6, r2, r7\n\tjump.lt\t@.BB0_49\n.BB0_50:\n\tadd\tr2, r5, r1\n\tst.1\tr1, r0\n\tadd\tstack-[4], r0, r1\n\tsub\tr1, r4, r1\n\tadd\t64, r3, r4\n\tst.1\tr4, r1\n\tadd\t159, r2, r1\n\tsub.s\t32, r0, r2\n\tand\tr1, r2, r1\n\tadd\t@CPI0_0[0], r0, r2\n\tsub.s!\t@CPI0_0[0], r1, r4\n\tadd.ge\tr2, r0, r1\n\tsub.s!\t@CPI0_0[0], r3, r4\n\tadd.lt\tr3, r0, r2\n\tshl.s\t64, r2, r2\n\tshl.s\t96, r1, r1\n\tor\tr1, r2, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.func_end0:\n\n__farcall:\n.func_begin1:\n.tmp0:\n\tfar_call\tr1, r2, @.BB1_2\n.tmp1:\n\tadd\t1, r0, r2\n\tret\n.BB1_2:\n.tmp2:\n\tadd\tr0, r0, r2\n\tret\n.func_end1:\n\n\t.data\n\t.p2align\t5\ncalldatasize:\n\t.cell 0\n\n\t.p2align\t5\nreturndatasize:\n\t.cell 0\n\n\t.p2align\t5\nptr_calldata:\n.cell\t0\n\n\t.p2align\t5\nptr_return_data:\n.cell\t0\n\n\t.note.GNU-stack\n\t.rodata\nCPI0_0:\n\t.cell 4294967295\nCPI0_1:\n\t.cell 53919893334301279589334030174039261352344891250716429051063678533632\nCPI0_2:\n\t.cell -26959946667150639794667015087019630673637144422540572481103610249216\nCPI0_3:\n\t.cell -31190301455355647933498886665222805433284686737714023863790578980734925537280\nCPI0_4:\n\t.cell -57896044618658097711785492504343953926634992332820282019728792003956564819968\nCPI0_5:\n\t.cell 1461501637330902918203684832716283019655932542975\nCPI0_6:\n\t.cell 18446744073709551615\nCPI0_7:\n\t.cell 3860815742836507669438763615750924727691071553873742544608518384459280547840\nCPI0_8:\n\t.cell 5387515053331158197795811229696\nCPI0_9:\n\t.cell 1461501637330902918203684832716283019655932542976\nCPI0_10:\n\t.cell 18446744073709551616\nCPI0_11:\n\t.cell 35408467139433450592217433187231851964531694900788300625387963629091585785856\nCPI0_12:\n\t.cell 2852213850513516153367582212096\n","bytecode":{"object":"00040000000000020004000000000002000000000301001900000060033002700000005d04300197000300000041035500020000000103550000005d0030019d000100000000001f0000008001000039000000400010043f0000000101200190000000620000c13d0000000001000031000000040110008c000000ca0000413d0000000201000367000000000101043b0000005f01100197000000600110009c000000ca0000c13d0000000001000416000000000110004c000000ca0000c13d0000000001000031000000040210008a0000006103000041000000a00420008c000000000400001900000000040340190000006102200197000000000520004c000000000300a019000000610220009c00000000020400190000000002036019000000000220004c000000ca0000c13d00000002030003670000000402300370000000000b02043b0000006202b0009c000000ca0000213d0000002402300370000000000402043b0000006202400197000000620440009c000000ca0000213d0000004404300370000000000504043b0000006204500197000000620550009c000000ca0000213d0000008405300370000000000505043b000000630650009c000000ca0000213d00000023065000390000006107000041000000000816004b0000000008000019000000000807801900000061091001970000006106600197000000000a96004b0000000007008019000000000696013f000000610660009c00000000060800190000000006076019000000000660004c000000ca0000c13d0000000406500039000000000363034f000000000603043b000000630360009c000000ca0000213d00000024055000390000000003560019000000000113004b000000ca0000213d0000000001000414000400000001001d0000006401000041000000800010043f000000840040043f00000064010000390000000201100367000000000101043b000000a40010043f0000000001000414000000040320008c0000006a0000c13d0000000103000031000000200130008c000000200400003900000000040340190000009b0000013d0000000001000416000000000110004c000000ca0000c13d0000002001000039000001000010044300000120000004430000005e010000410000016f0001042e000100000005001d000200000006001d00030000000b001d0000005d030000410000005d0410009c0000000001038019000000c00110021000000065011001c7016e01690000040f000000000301001900000060033002700000005d03300197000000200430008c000000200400003900000000040340190000001f0540018f0000000506400272000000850000613d00000000070000190000000508700210000000000981034f000000000909043b000000800880003900000000009804350000000107700039000000000867004b0000007d0000413d000000000750004c000000940000613d0000000506600210000000000761034f00000003055002100000008006600039000000000806043300000000085801cf000000000858022f000000000707043b0000010005500089000000000757022f00000000055701cf000000000585019f0000000000560435000100000003001f00030000000103550000000102200190000000030b00002900000002060000290000000105000029000000cc0000613d0000001f01400039000000600110018f00000080011001bf000000400010043f000000200230008c000000ca0000413d000000800200043d000000660220009c000000ca0000813d0000001f0260018f000000020350036700000000080600190000000504600272000000b20000613d000000000500001900000005065002100000000007610019000000000663034f000000000606043b00000000006704350000000105500039000000000645004b000000aa0000413d000000000520004c000000c10000613d0000000504400210000000000343034f00000000044100190000000302200210000000000504043300000000052501cf000000000525022f000000000303043b0000010002200089000000000323022f00000000022301cf000000000252019f000000000024043500000000028100190000000000020435000000000500041400000000020b0019000000040320008c000000f20000c13d00000001020000390000000103000031000001030000013d00000000010000190000017000010430000000400200043d0000001f0430018f0000000503300272000000d90000613d000000000500001900000005065002100000000007620019000000000661034f000000000606043b00000000006704350000000105500039000000000635004b000000d10000413d000000000540004c000000e80000613d0000000503300210000000000131034f00000000033200190000000304400210000000000503043300000000054501cf000000000545022f000000000101043b0000010004400089000000000141022f00000000014101cf000000000151019f00000000001304350000005d0100004100000001030000310000005d0430009c00000000030180190000005d0420009c000000000102401900000040011002100000006002300210000000000112019f00000170000104300000005d030000410000005d0480009c0000000004030019000000000408401900000060044002100000004001100210000000000141019f0000005d0450009c0000000003054019000000c003300210000000000113019f016e01690000040f000000010220018f000300000001035500000060011002700001005d0010019d0000005d031001970000006001000039000000000430004c000001100000c13d00000000040004140000000403000029000000000343004b000001440000813d000000680100004100000000001004350000001101000039000000040010043f00000069010000410000017000010430000000670130009c0000013e0000813d0000003f01300039000000200400008a000000000441016f000000400100043d0000000004410019000000000514004b00000000050000190000000105004039000000630640009c0000013e0000213d00000001055001900000013e0000c13d000000400040043f0000000003310436000000030400036700000001060000310000001f0560018f00000005066002720000012e0000613d000000000700001900000005087002100000000009830019000000000884034f000000000808043b00000000008904350000000107700039000000000867004b000001260000413d000000000750004c000001060000613d0000000506600210000000000464034f00000000036300190000000305500210000000000603043300000000065601cf000000000656022f000000000404043b0000010005500089000000000454022f00000000045401cf000000000464019f0000000000430435000001060000013d000000680100004100000000001004350000004101000039000000040010043f00000069010000410000017000010430000000400300043d00000020053000390000006006000039000000000065043500000000002304350000000002010433000000600530003900000000002504350000008005300039000000000620004c000001570000613d000000000600001900000000075600190000002006600039000000000816001900000000080804330000000000870435000000000726004b000001500000413d0000000001520019000000000001043500000004010000290000000001410049000000400430003900000000001404350000009f01200039000000200200008a000000000121016f0000005d020000410000005d0410009c00000000010280190000005d0430009c000000000203401900000040022002100000006001100210000000000121019f0000016f0001042e0000016c002104210000000102000039000000000001042d0000000002000019000000000001042d0000016e000004320000016f0001042e000001700001043000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000ffffffff0000000200000000000000000000000000000040000001000000000000000000ffffffff00000000000000000000000000000000000000000000000000000000bb0aea3c000000000000000000000000000000000000000000000000000000008000000000000000000000000000000000000000000000000000000000000000000000000000000000000000ffffffffffffffffffffffffffffffffffffffff000000000000000000000000000000000000000000000000ffffffffffffffff088924ef000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000044000000800000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000004e487b710000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000240000000000000000000000009380318c937d43346fd1efb149dd40290cb13a914cf7b277c04c70fe5c4a1fe9"},"methodIdentifiers":{"estimate(address,address,address,uint256,bytes)":"bb0aea3c"}},"irOptimized":"/// @use-src 32:\"contracts/smart-contract-wallet/utils/GasEstimatorSmartAccount.sol\"\nobject \"GasEstimatorSmartAccount_6482\" {\n    code {\n        {\n            /// @src 32:219:873  \"contract GasEstimatorSmartAccount {...\"\n            let _1 := memoryguard(0x80)\n            mstore(64, _1)\n            if callvalue() { revert(0, 0) }\n            let _2 := datasize(\"GasEstimatorSmartAccount_6482_deployed\")\n            codecopy(_1, dataoffset(\"GasEstimatorSmartAccount_6482_deployed\"), _2)\n            return(_1, _2)\n        }\n    }\n    /// @use-src 32:\"contracts/smart-contract-wallet/utils/GasEstimatorSmartAccount.sol\"\n    object \"GasEstimatorSmartAccount_6482_deployed\" {\n        code {\n            {\n                /// @src 32:219:873  \"contract GasEstimatorSmartAccount {...\"\n                let _1 := memoryguard(0x80)\n                let _2 := 64\n                mstore(_2, _1)\n                let _3 := 4\n                if iszero(lt(calldatasize(), _3))\n                {\n                    let _4 := 0\n                    if eq(0xbb0aea3c, shr(224, calldataload(_4)))\n                    {\n                        if callvalue() { revert(_4, _4) }\n                        if slt(add(calldatasize(), not(3)), 160) { revert(_4, _4) }\n                        let value := calldataload(_3)\n                        let _5 := sub(shl(160, 1), 1)\n                        if iszero(eq(value, and(value, _5))) { revert(_4, _4) }\n                        let _6 := 36\n                        let value_1 := calldataload(_6)\n                        let _7 := and(value_1, _5)\n                        if iszero(eq(value_1, _7)) { revert(_4, _4) }\n                        let value_2 := calldataload(68)\n                        let _8 := and(value_2, _5)\n                        if iszero(eq(value_2, _8)) { revert(_4, _4) }\n                        let offset := calldataload(132)\n                        let _9 := 0xffffffffffffffff\n                        if gt(offset, _9) { revert(_4, _4) }\n                        if iszero(slt(add(offset, 35), calldatasize())) { revert(_4, _4) }\n                        let length := calldataload(add(_3, offset))\n                        if gt(length, _9) { revert(_4, _4) }\n                        if gt(add(add(offset, length), _6), calldatasize()) { revert(_4, _4) }\n                        /// @src 32:622:631  \"gasleft()\"\n                        let expr := gas()\n                        /// @src 32:659:745  \"SmartAccountFactory(_factory)...\"\n                        mstore(_1, /** @src 32:219:873  \"contract GasEstimatorSmartAccount {...\" */ shl(224, 0x088924ef))\n                        mstore(/** @src 32:659:745  \"SmartAccountFactory(_factory)...\" */ add(_1, /** @src 32:219:873  \"contract GasEstimatorSmartAccount {...\" */ _3), _8)\n                        mstore(add(/** @src 32:659:745  \"SmartAccountFactory(_factory)...\" */ _1, /** @src 32:219:873  \"contract GasEstimatorSmartAccount {...\" */ _6), calldataload(100))\n                        let _10 := 32\n                        /// @src 32:659:745  \"SmartAccountFactory(_factory)...\"\n                        let _11 := call(gas(), _7, /** @src 32:219:873  \"contract GasEstimatorSmartAccount {...\" */ _4, /** @src 32:659:745  \"SmartAccountFactory(_factory)...\" */ _1, /** @src 32:219:873  \"contract GasEstimatorSmartAccount {...\" */ 68, /** @src 32:659:745  \"SmartAccountFactory(_factory)...\" */ _1, /** @src 32:219:873  \"contract GasEstimatorSmartAccount {...\" */ _10)\n                        /// @src 32:659:745  \"SmartAccountFactory(_factory)...\"\n                        if iszero(_11)\n                        {\n                            /// @src 32:219:873  \"contract GasEstimatorSmartAccount {...\"\n                            let pos := mload(_2)\n                            returndatacopy(pos, _4, returndatasize())\n                            revert(pos, returndatasize())\n                        }\n                        /// @src 32:659:745  \"SmartAccountFactory(_factory)...\"\n                        if _11\n                        {\n                            let _12 := /** @src 32:219:873  \"contract GasEstimatorSmartAccount {...\" */ _10\n                            /// @src 32:659:745  \"SmartAccountFactory(_factory)...\"\n                            if gt(/** @src 32:219:873  \"contract GasEstimatorSmartAccount {...\" */ _10, /** @src 32:659:745  \"SmartAccountFactory(_factory)...\" */ returndatasize()) { _12 := returndatasize() }\n                            finalize_allocation(_1, _12)\n                            /// @src 32:219:873  \"contract GasEstimatorSmartAccount {...\"\n                            if slt(sub(/** @src 32:659:745  \"SmartAccountFactory(_factory)...\" */ add(_1, _12), /** @src 32:219:873  \"contract GasEstimatorSmartAccount {...\" */ _1), _10) { revert(_4, _4) }\n                            let value_3 := mload(_1)\n                            if iszero(eq(value_3, and(value_3, _5))) { revert(_4, _4) }\n                        }\n                        /// @src 32:775:800  \"_actualWallet.call(_data)\"\n                        let _13 := /** @src 32:219:873  \"contract GasEstimatorSmartAccount {...\" */ mload(_2)\n                        calldatacopy(_13, add(offset, _6), length)\n                        let _14 := add(_13, length)\n                        mstore(_14, _4)\n                        /// @src 32:775:800  \"_actualWallet.call(_data)\"\n                        let expr_component := call(gas(), value, /** @src 32:219:873  \"contract GasEstimatorSmartAccount {...\" */ _4, /** @src 32:775:800  \"_actualWallet.call(_data)\" */ _13, sub(/** @src 32:219:873  \"contract GasEstimatorSmartAccount {...\" */ _14, /** @src 32:775:800  \"_actualWallet.call(_data)\" */ _13), /** @src 32:219:873  \"contract GasEstimatorSmartAccount {...\" */ _4, _4)\n                        /// @src 32:775:800  \"_actualWallet.call(_data)\"\n                        let data := /** @src 32:219:873  \"contract GasEstimatorSmartAccount {...\" */ _4\n                        switch returndatasize()\n                        case 0 { data := 96 }\n                        default {\n                            let _15 := returndatasize()\n                            if gt(_15, _9)\n                            {\n                                mstore(_4, shl(224, 0x4e487b71))\n                                mstore(_3, 0x41)\n                                revert(_4, _6)\n                            }\n                            let memPtr := mload(_2)\n                            finalize_allocation(memPtr, add(and(add(_15, 0x1f), not(31)), _10))\n                            mstore(memPtr, _15)\n                            data := memPtr\n                            returndatacopy(add(memPtr, _10), _4, returndatasize())\n                        }\n                        let diff := sub(expr, /** @src 32:829:838  \"gasleft()\" */ gas())\n                        /// @src 32:219:873  \"contract GasEstimatorSmartAccount {...\"\n                        if gt(diff, expr)\n                        {\n                            mstore(_4, shl(224, 0x4e487b71))\n                            mstore(_3, 0x11)\n                            revert(_4, _6)\n                        }\n                        let memPos := mload(_2)\n                        mstore(memPos, iszero(iszero(expr_component)))\n                        mstore(add(memPos, _10), 96)\n                        let length_1 := mload(data)\n                        mstore(add(memPos, 96), length_1)\n                        let i := _4\n                        for { } lt(i, length_1) { i := add(i, _10) }\n                        {\n                            mstore(add(add(memPos, i), 128), mload(add(add(data, i), _10)))\n                        }\n                        mstore(add(add(memPos, length_1), 128), _4)\n                        mstore(add(memPos, _2), diff)\n                        return(memPos, add(sub(add(memPos, and(add(length_1, 0x1f), not(31))), memPos), 128))\n                    }\n                }\n                revert(0, 0)\n            }\n            function finalize_allocation(memPtr, size)\n            {\n                let newFreePtr := add(memPtr, and(add(size, 31), not(31)))\n                if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr))\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0x41)\n                    revert(0, 0x24)\n                }\n                mstore(64, newFreePtr)\n            }\n        }\n        data \".metadata\" hex\"a2646970667358221220abb443ec09515581e83aa2f14730cedb6af1f03ab165f23f160c708cdfb8341c64736f6c63430008110033\"\n    }\n}\n","hash":"0100006b0c09d799b10b997f00900ed2549a65e733e5f42f82cf91e04d89b67b","factoryDependencies":{}}}}}}