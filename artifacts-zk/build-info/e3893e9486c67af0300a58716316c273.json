{"id":"e3893e9486c67af0300a58716316c273","_format":"hh-sol-build-info-1","solcVersion":"0.8.17","solcLongVersion":"0.8.17+commit.8df45f5f","input":{"language":"Solidity","sources":{"@openzeppelin/contracts/security/ReentrancyGuard.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (security/ReentrancyGuard.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Contract module that helps prevent reentrant calls to a function.\n *\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n * available, which can be applied to functions to make sure there are no nested\n * (reentrant) calls to them.\n *\n * Note that because there is a single `nonReentrant` guard, functions marked as\n * `nonReentrant` may not call one another. This can be worked around by making\n * those functions `private`, and then adding `external` `nonReentrant` entry\n * points to them.\n *\n * TIP: If you would like to learn more about reentrancy and alternative ways\n * to protect against it, check out our blog post\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\n */\nabstract contract ReentrancyGuard {\n    // Booleans are more expensive than uint256 or any type that takes up a full\n    // word because each write operation emits an extra SLOAD to first read the\n    // slot's contents, replace the bits taken up by the boolean, and then write\n    // back. This is the compiler's defense against contract upgrades and\n    // pointer aliasing, and it cannot be disabled.\n\n    // The values being non-zero value makes deployment a bit more expensive,\n    // but in exchange the refund on every call to nonReentrant will be lower in\n    // amount. Since refunds are capped to a percentage of the total\n    // transaction's gas, it is best to keep them low in cases like this one, to\n    // increase the likelihood of the full refund coming into effect.\n    uint256 private constant _NOT_ENTERED = 1;\n    uint256 private constant _ENTERED = 2;\n\n    uint256 private _status;\n\n    constructor() {\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Prevents a contract from calling itself, directly or indirectly.\n     * Calling a `nonReentrant` function from another `nonReentrant`\n     * function is not supported. It is possible to prevent this from happening\n     * by making the `nonReentrant` function external, and making it call a\n     * `private` function that does the actual work.\n     */\n    modifier nonReentrant() {\n        _nonReentrantBefore();\n        _;\n        _nonReentrantAfter();\n    }\n\n    function _nonReentrantBefore() private {\n        // On the first call to nonReentrant, _status will be _NOT_ENTERED\n        require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\");\n\n        // Any calls to nonReentrant after this point will fail\n        _status = _ENTERED;\n    }\n\n    function _nonReentrantAfter() private {\n        // By storing the original value once again, a refund is triggered (see\n        // https://eips.ethereum.org/EIPS/eip-2200)\n        _status = _NOT_ENTERED;\n    }\n}\n"},"contracts/smart-contract-wallet/aa-4337/core/EntryPoint.sol":{"content":"// SPDX-License-Identifier: GPL-3.0\n/**\n ** Account-Abstraction (EIP-4337) singleton EntryPoint implementation.\n ** Only one instance required on each chain.\n **/\npragma solidity 0.8.17;\n\n/* solhint-disable avoid-low-level-calls */\n/* solhint-disable no-inline-assembly */\n\nimport \"../interfaces/IAccount.sol\";\nimport \"../interfaces/IPaymaster.sol\";\nimport \"../interfaces/IEntryPoint.sol\";\n\nimport \"../utils/Exec.sol\";\nimport \"./StakeManager.sol\";\nimport \"./SenderCreator.sol\";\nimport \"./Helpers.sol\";\nimport \"./NonceManager.sol\";\nimport \"@openzeppelin/contracts/security/ReentrancyGuard.sol\";\n\ncontract EntryPoint is\n    IEntryPoint,\n    StakeManager,\n    NonceManager,\n    ReentrancyGuard\n{\n    using UserOperationLib for UserOperation;\n\n    SenderCreator private immutable senderCreator = new SenderCreator();\n\n    // internal value used during simulation: need to query aggregator.\n    address private constant SIMULATE_FIND_AGGREGATOR = address(1);\n\n    // marker for inner call revert on out of gas\n    bytes32 private constant INNER_OUT_OF_GAS = hex\"deaddead\";\n\n    uint256 private constant REVERT_REASON_MAX_LEN = 2048;\n\n    /**\n     * for simulation purposes, validateUserOp (and validatePaymasterUserOp) must return this value\n     * in case of signature failure, instead of revert.\n     */\n    uint256 public constant SIG_VALIDATION_FAILED = 1;\n\n    /**\n     * compensate the caller's beneficiary address with the collected fees of all UserOperations.\n     * @param beneficiary the address to receive the fees\n     * @param amount amount to transfer.\n     */\n    function _compensate(address payable beneficiary, uint256 amount) internal {\n        require(beneficiary != address(0), \"AA90 invalid beneficiary\");\n        (bool success, ) = beneficiary.call{value: amount}(\"\");\n        require(success, \"AA91 failed send to beneficiary\");\n    }\n\n    /**\n     * execute a user op\n     * @param opIndex index into the opInfo array\n     * @param userOp the userOp to execute\n     * @param opInfo the opInfo filled by validatePrepayment for this userOp.\n     * @return collected the total amount this userOp paid.\n     */\n    function _executeUserOp(\n        uint256 opIndex,\n        UserOperation calldata userOp,\n        UserOpInfo memory opInfo\n    ) private returns (uint256 collected) {\n        uint256 preGas = gasleft();\n        require(msg.value > 25, \"value nhu cut 25\");\n        bytes memory context = getMemoryBytesFromOffset(opInfo.contextOffset);\n        require(msg.value > 26, \"value nhu cut 26\");\n\n        try this.innerHandleOp(userOp.callData, opInfo, context) returns (\n            uint256 _actualGasCost\n        ) {\n            require(msg.value > 27, \"value nhu cut 27\");\n\n            collected = _actualGasCost;\n        } catch {\n            require(msg.value > 28, \"value nhu cut 28\");\n            bytes32 innerRevertCode;\n            assembly {\n                returndatacopy(0, 0, 32)\n                innerRevertCode := mload(0)\n            }\n            // handleOps was called with gas limit too low. abort entire bundle.\n            if (innerRevertCode == INNER_OUT_OF_GAS) {\n                //report paymaster, since if it is not deliberately caused by the bundler,\n                // it must be a revert caused by paymaster.\n                revert FailedOp(opIndex, \"AA95 out of gas\");\n            }\n            require(msg.value > 29, \"value nhu cut 29\");\n\n            uint256 actualGas = preGas - gasleft() + opInfo.preOpGas;\n            collected = _handlePostOp(\n                opIndex,\n                IPaymaster.PostOpMode.postOpReverted,\n                opInfo,\n                context,\n                actualGas\n            );\n            require(msg.value > 30, \"value nhu cut 30\");\n        }\n    }\n\n    /**\n     * Execute a batch of UserOperations.\n     * no signature aggregator is used.\n     * if any account requires an aggregator (that is, it returned an aggregator when\n     * performing simulateValidation), then handleAggregatedOps() must be used instead.\n     * @param ops the operations to execute\n     * @param beneficiary the address to receive the fees\n     */\n    function handleOps(\n        UserOperation[] calldata ops,\n        address payable beneficiary\n    ) public payable nonReentrant {\n        uint256 opslen = ops.length;\n        UserOpInfo[] memory opInfos = new UserOpInfo[](opslen);\n        require(msg.value > 1, \"value nhu cut 1\");\n        unchecked {\n            for (uint256 i = 0; i < opslen; i++) {\n                require(msg.value > 2, \"value nhu cut 2\");\n                UserOpInfo memory opInfo = opInfos[i];\n                (\n                    uint256 validationData,\n                    uint256 pmValidationData\n                ) = _validatePrepayment(i, ops[i], opInfo);\n                require(msg.value > 16, \"value nhu cut 16\");\n                _validateAccountAndPaymasterValidationData(\n                    i,\n                    validationData,\n                    pmValidationData,\n                    address(0)\n                );\n                require(msg.value > 23, \"value nhu cut 23\");\n            }\n\n            uint256 collected = 0;\n            emit BeforeExecution();\n\n            for (uint256 i = 0; i < opslen; i++) {\n                require(msg.value > 24, \"value nhu cut 24\");\n                collected += _executeUserOp(i, ops[i], opInfos[i]);\n                require(msg.value > 25, \"value nhu cut 19\");\n            }\n\n            _compensate(beneficiary, collected);\n        } //unchecked\n    }\n\n    /**\n     * Execute a batch of UserOperation with Aggregators\n     * @param opsPerAggregator the operations to execute, grouped by aggregator (or address(0) for no-aggregator accounts)\n     * @param beneficiary the address to receive the fees\n     */\n    function handleAggregatedOps(\n        UserOpsPerAggregator[] calldata opsPerAggregator,\n        address payable beneficiary\n    ) public nonReentrant {\n        uint256 opasLen = opsPerAggregator.length;\n        uint256 totalOps = 0;\n        for (uint256 i = 0; i < opasLen; i++) {\n            UserOpsPerAggregator calldata opa = opsPerAggregator[i];\n            UserOperation[] calldata ops = opa.userOps;\n            IAggregator aggregator = opa.aggregator;\n\n            //address(1) is special marker of \"signature error\"\n            require(\n                address(aggregator) != address(1),\n                \"AA96 invalid aggregator\"\n            );\n\n            if (address(aggregator) != address(0)) {\n                // solhint-disable-next-line no-empty-blocks\n                try aggregator.validateSignatures(ops, opa.signature) {} catch {\n                    revert SignatureValidationFailed(address(aggregator));\n                }\n            }\n\n            totalOps += ops.length;\n        }\n\n        UserOpInfo[] memory opInfos = new UserOpInfo[](totalOps);\n\n        emit BeforeExecution();\n\n        uint256 opIndex = 0;\n        for (uint256 a = 0; a < opasLen; a++) {\n            UserOpsPerAggregator calldata opa = opsPerAggregator[a];\n            UserOperation[] calldata ops = opa.userOps;\n            IAggregator aggregator = opa.aggregator;\n\n            uint256 opslen = ops.length;\n            for (uint256 i = 0; i < opslen; i++) {\n                UserOpInfo memory opInfo = opInfos[opIndex];\n                (\n                    uint256 validationData,\n                    uint256 paymasterValidationData\n                ) = _validatePrepayment(opIndex, ops[i], opInfo);\n                _validateAccountAndPaymasterValidationData(\n                    i,\n                    validationData,\n                    paymasterValidationData,\n                    address(aggregator)\n                );\n                opIndex++;\n            }\n        }\n\n        uint256 collected = 0;\n        opIndex = 0;\n        for (uint256 a = 0; a < opasLen; a++) {\n            UserOpsPerAggregator calldata opa = opsPerAggregator[a];\n            emit SignatureAggregatorChanged(address(opa.aggregator));\n            UserOperation[] calldata ops = opa.userOps;\n            uint256 opslen = ops.length;\n\n            for (uint256 i = 0; i < opslen; i++) {\n                collected += _executeUserOp(opIndex, ops[i], opInfos[opIndex]);\n                opIndex++;\n            }\n        }\n        emit SignatureAggregatorChanged(address(0));\n\n        _compensate(beneficiary, collected);\n    }\n\n    /// @inheritdoc IEntryPoint\n    function simulateHandleOp(\n        UserOperation calldata op,\n        address target,\n        bytes calldata targetCallData\n    ) external override {\n        UserOpInfo memory opInfo;\n        _simulationOnlyValidations(op);\n        (\n            uint256 validationData,\n            uint256 paymasterValidationData\n        ) = _validatePrepayment(0, op, opInfo);\n        ValidationData memory data = _intersectTimeRange(\n            validationData,\n            paymasterValidationData\n        );\n\n        numberMarker();\n        uint256 paid = _executeUserOp(0, op, opInfo);\n        numberMarker();\n        bool targetSuccess;\n        bytes memory targetResult;\n        if (target != address(0)) {\n            (targetSuccess, targetResult) = target.call(targetCallData);\n        }\n        revert ExecutionResult(\n            opInfo.preOpGas,\n            paid,\n            data.validAfter,\n            data.validUntil,\n            targetSuccess,\n            targetResult\n        );\n    }\n\n    // A memory copy of UserOp static fields only.\n    // Excluding: callData, initCode and signature. Replacing paymasterAndData with paymaster.\n    struct MemoryUserOp {\n        address sender;\n        uint256 nonce;\n        uint256 callGasLimit;\n        uint256 verificationGasLimit;\n        uint256 preVerificationGas;\n        address paymaster;\n        uint256 maxFeePerGas;\n        uint256 maxPriorityFeePerGas;\n    }\n\n    struct UserOpInfo {\n        MemoryUserOp mUserOp;\n        bytes32 userOpHash;\n        uint256 prefund;\n        uint256 contextOffset;\n        uint256 preOpGas;\n    }\n\n    /**\n     * inner function to handle a UserOperation.\n     * Must be declared \"external\" to open a call context, but it can only be called by handleOps.\n     */\n    function innerHandleOp(\n        bytes memory callData,\n        UserOpInfo memory opInfo,\n        bytes calldata context\n    ) external payable returns (uint256 actualGasCost) {\n        uint256 preGas = gasleft();\n        require(msg.sender == address(this), \"AA92 internal call only\");\n        MemoryUserOp memory mUserOp = opInfo.mUserOp;\n\n        uint callGasLimit = mUserOp.callGasLimit;\n        unchecked {\n            // handleOps was called with gas limit too low. abort entire bundle.\n            if (\n                gasleft() < callGasLimit + mUserOp.verificationGasLimit + 5000\n            ) {\n                assembly {\n                    mstore(0, INNER_OUT_OF_GAS)\n                    revert(0, 32)\n                }\n            }\n        }\n\n        IPaymaster.PostOpMode mode = IPaymaster.PostOpMode.opSucceeded;\n        if (callData.length > 0) {\n            bool success = Exec.call(mUserOp.sender, 0, callData, callGasLimit);\n            if (!success) {\n                require(msg.value > 27, \"value nhu cut 2777\");\n                bytes memory result = Exec.getReturnData(REVERT_REASON_MAX_LEN);\n                require(msg.value > 28, \"value nhu cut 2888\");\n                if (result.length > 0) {\n                    require(msg.value > 29, \"value nhu cut 2999\");\n                    emit UserOperationRevertReason(\n                        opInfo.userOpHash,\n                        mUserOp.sender,\n                        mUserOp.nonce,\n                        result\n                    );\n                }\n                mode = IPaymaster.PostOpMode.opReverted;\n            }\n        }\n\n        unchecked {\n            uint256 actualGas = preGas - gasleft() + opInfo.preOpGas;\n            //note: opIndex is ignored (relevant only if mode==postOpReverted, which is only possible outside of innerHandleOp)\n            return _handlePostOp(0, mode, opInfo, context, actualGas);\n        }\n    }\n\n    /**\n     * generate a request Id - unique identifier for this request.\n     * the request ID is a hash over the content of the userOp (except the signature), the entrypoint and the chainid.\n     */\n    function getUserOpHash(\n        UserOperation calldata userOp\n    ) public view returns (bytes32) {\n        return\n            keccak256(abi.encode(userOp.hash(), address(this), block.chainid));\n    }\n\n    /**\n     * copy general fields from userOp into the memory opInfo structure.\n     */\n    function _copyUserOpToMemory(\n        UserOperation calldata userOp,\n        MemoryUserOp memory mUserOp\n    ) internal pure {\n        mUserOp.sender = userOp.sender;\n        mUserOp.nonce = userOp.nonce;\n        mUserOp.callGasLimit = userOp.callGasLimit;\n        mUserOp.verificationGasLimit = userOp.verificationGasLimit;\n        mUserOp.preVerificationGas = userOp.preVerificationGas;\n        mUserOp.maxFeePerGas = userOp.maxFeePerGas;\n        mUserOp.maxPriorityFeePerGas = userOp.maxPriorityFeePerGas;\n        bytes calldata paymasterAndData = userOp.paymasterAndData;\n        if (paymasterAndData.length > 0) {\n            require(\n                paymasterAndData.length >= 20,\n                \"AA93 invalid paymasterAndData\"\n            );\n            mUserOp.paymaster = address(bytes20(paymasterAndData[:20]));\n        } else {\n            mUserOp.paymaster = address(0);\n        }\n    }\n\n    /**\n     * Simulate a call to account.validateUserOp and paymaster.validatePaymasterUserOp.\n     * @dev this method always revert. Successful result is ValidationResult error. other errors are failures.\n     * @dev The node must also verify it doesn't use banned opcodes, and that it doesn't reference storage outside the account's data.\n     * @param userOp the user operation to validate.\n     */\n    function simulateValidation(UserOperation calldata userOp) external {\n        UserOpInfo memory outOpInfo;\n\n        _simulationOnlyValidations(userOp);\n        (\n            uint256 validationData,\n            uint256 paymasterValidationData\n        ) = _validatePrepayment(0, userOp, outOpInfo);\n        StakeInfo memory paymasterInfo = _getStakeInfo(\n            outOpInfo.mUserOp.paymaster\n        );\n        StakeInfo memory senderInfo = _getStakeInfo(outOpInfo.mUserOp.sender);\n        StakeInfo memory factoryInfo;\n        {\n            bytes calldata initCode = userOp.initCode;\n            address factory = initCode.length >= 20\n                ? address(bytes20(initCode[0:20]))\n                : address(0);\n            factoryInfo = _getStakeInfo(factory);\n        }\n\n        ValidationData memory data = _intersectTimeRange(\n            validationData,\n            paymasterValidationData\n        );\n        address aggregator = data.aggregator;\n        bool sigFailed = aggregator == address(1);\n        ReturnInfo memory returnInfo = ReturnInfo(\n            outOpInfo.preOpGas,\n            outOpInfo.prefund,\n            sigFailed,\n            data.validAfter,\n            data.validUntil,\n            getMemoryBytesFromOffset(outOpInfo.contextOffset)\n        );\n\n        if (aggregator != address(0) && aggregator != address(1)) {\n            AggregatorStakeInfo memory aggregatorInfo = AggregatorStakeInfo(\n                aggregator,\n                _getStakeInfo(aggregator)\n            );\n            revert ValidationResultWithAggregation(\n                returnInfo,\n                senderInfo,\n                factoryInfo,\n                paymasterInfo,\n                aggregatorInfo\n            );\n        }\n        revert ValidationResult(\n            returnInfo,\n            senderInfo,\n            factoryInfo,\n            paymasterInfo\n        );\n    }\n\n    function _getRequiredPrefund(\n        MemoryUserOp memory mUserOp\n    ) internal pure returns (uint256 requiredPrefund) {\n        unchecked {\n            //when using a Paymaster, the verificationGasLimit is used also to as a limit for the postOp call.\n            // our security model might call postOp eventually twice\n            uint256 mul = mUserOp.paymaster != address(0) ? 3 : 1;\n            uint256 requiredGas = mUserOp.callGasLimit +\n                mUserOp.verificationGasLimit *\n                mul +\n                mUserOp.preVerificationGas;\n\n            requiredPrefund = requiredGas * mUserOp.maxFeePerGas;\n        }\n    }\n\n    // create the sender's contract if needed.\n    function _createSenderIfNeeded(\n        uint256 opIndex,\n        UserOpInfo memory opInfo,\n        bytes calldata initCode\n    ) internal {\n        if (initCode.length != 0) {\n            address sender = opInfo.mUserOp.sender;\n            if (sender.code.length != 0)\n                revert FailedOp(opIndex, \"AA10 sender already constructed\");\n            address sender1 = senderCreator.createSender{\n                gas: opInfo.mUserOp.verificationGasLimit\n            }(initCode);\n            if (sender1 == address(0))\n                revert FailedOp(opIndex, \"AA13 initCode failed or OOG\");\n            if (sender1 != sender)\n                revert FailedOp(opIndex, \"AA14 initCode must return sender\");\n            if (sender1.code.length == 0)\n                revert FailedOp(opIndex, \"AA15 initCode must create sender\");\n            address factory = address(bytes20(initCode[0:20]));\n            emit AccountDeployed(\n                opInfo.userOpHash,\n                sender,\n                factory,\n                opInfo.mUserOp.paymaster\n            );\n        }\n    }\n\n    /**\n     * Get counterfactual sender address.\n     *  Calculate the sender contract address that will be generated by the initCode and salt in the UserOperation.\n     * this method always revert, and returns the address in SenderAddressResult error\n     * @param initCode the constructor code to be passed into the UserOperation.\n     */\n    function getSenderAddress(bytes calldata initCode) public {\n        address sender = senderCreator.createSender(initCode);\n        revert SenderAddressResult(sender);\n    }\n\n    function _simulationOnlyValidations(\n        UserOperation calldata userOp\n    ) internal view {\n        // solhint-disable-next-line no-empty-blocks\n        try\n            this._validateSenderAndPaymaster(\n                userOp.initCode,\n                userOp.sender,\n                userOp.paymasterAndData\n            )\n        {} catch Error(string memory revertReason) {\n            if (bytes(revertReason).length != 0) {\n                revert FailedOp(0, revertReason);\n            }\n        }\n    }\n\n    /**\n     * Called only during simulation.\n     * This function always reverts to prevent warm/cold storage differentiation in simulation vs execution.\n     */\n    function _validateSenderAndPaymaster(\n        bytes calldata initCode,\n        address sender,\n        bytes calldata paymasterAndData\n    ) external view {\n        if (initCode.length == 0 && sender.code.length == 0) {\n            // it would revert anyway. but give a meaningful message\n            revert(\"AA20 account not deployed\");\n        }\n        if (paymasterAndData.length >= 20) {\n            address paymaster = address(bytes20(paymasterAndData[0:20]));\n            if (paymaster.code.length == 0) {\n                // it would revert anyway. but give a meaningful message\n                revert(\"AA30 paymaster not deployed\");\n            }\n        }\n        // always revert\n        revert(\"\");\n    }\n\n    /**\n     * call account.validateUserOp.\n     * revert (with FailedOp) in case validateUserOp reverts, or account didn't send required prefund.\n     * decrement account's deposit if needed\n     */\n    function _validateAccountPrepayment(\n        uint256 opIndex,\n        UserOperation calldata op,\n        UserOpInfo memory opInfo,\n        uint256 requiredPrefund\n    )\n        internal\n        returns (\n            uint256 gasUsedByValidateAccountPrepayment,\n            uint256 validationData\n        )\n    {\n        unchecked {\n            uint256 preGas = gasleft();\n            MemoryUserOp memory mUserOp = opInfo.mUserOp;\n            address sender = mUserOp.sender;\n            _createSenderIfNeeded(opIndex, opInfo, op.initCode);\n            address paymaster = mUserOp.paymaster;\n            numberMarker();\n            uint256 missingAccountFunds = 0;\n            if (paymaster == address(0)) {\n                uint256 bal = balanceOf(sender);\n                missingAccountFunds = bal > requiredPrefund\n                    ? 0\n                    : requiredPrefund - bal;\n            }\n            try\n                IAccount(sender).validateUserOp{\n                    gas: mUserOp.verificationGasLimit\n                }(op, opInfo.userOpHash, missingAccountFunds)\n            returns (uint256 _validationData) {\n                validationData = _validationData;\n            } catch Error(string memory revertReason) {\n                revert FailedOp(\n                    opIndex,\n                    string.concat(\"AA23 reverted: \", revertReason)\n                );\n            } catch {\n                revert FailedOp(opIndex, \"AA23 reverted (or OOG)\");\n            }\n            if (paymaster == address(0)) {\n                DepositInfo storage senderInfo = deposits[sender];\n                uint256 deposit = senderInfo.deposit;\n                if (requiredPrefund > deposit) {\n                    revert FailedOp(opIndex, \"AA21 didn't pay prefund\");\n                }\n                senderInfo.deposit = uint112(deposit - requiredPrefund);\n            }\n            gasUsedByValidateAccountPrepayment = preGas - gasleft();\n        }\n    }\n\n    /**\n     * In case the request has a paymaster:\n     * Validate paymaster has enough deposit.\n     * Call paymaster.validatePaymasterUserOp.\n     * Revert with proper FailedOp in case paymaster reverts.\n     * Decrement paymaster's deposit\n     */\n    function _validatePaymasterPrepayment(\n        uint256 opIndex,\n        UserOperation calldata op,\n        UserOpInfo memory opInfo,\n        uint256 requiredPreFund,\n        uint256 gasUsedByValidateAccountPrepayment\n    ) internal returns (bytes memory context, uint256 validationData) {\n        unchecked {\n            MemoryUserOp memory mUserOp = opInfo.mUserOp;\n            uint256 verificationGasLimit = mUserOp.verificationGasLimit;\n            require(\n                verificationGasLimit > gasUsedByValidateAccountPrepayment,\n                \"AA41 too little verificationGas\"\n            );\n            uint256 gas = verificationGasLimit -\n                gasUsedByValidateAccountPrepayment;\n\n            address paymaster = mUserOp.paymaster;\n            DepositInfo storage paymasterInfo = deposits[paymaster];\n            uint256 deposit = paymasterInfo.deposit;\n            if (deposit < requiredPreFund) {\n                revert FailedOp(opIndex, \"AA31 paymaster deposit too low\");\n            }\n            paymasterInfo.deposit = uint112(deposit - requiredPreFund);\n            try\n                IPaymaster(paymaster).validatePaymasterUserOp{gas: gas}(\n                    op,\n                    opInfo.userOpHash,\n                    requiredPreFund\n                )\n            returns (bytes memory _context, uint256 _validationData) {\n                context = _context;\n                validationData = _validationData;\n            } catch Error(string memory revertReason) {\n                revert FailedOp(\n                    opIndex,\n                    string.concat(\"AA33 reverted: \", revertReason)\n                );\n            } catch {\n                revert FailedOp(opIndex, \"AA33 reverted (or OOG)\");\n            }\n        }\n    }\n\n    /**\n     * revert if either account validationData or paymaster validationData is expired\n     */\n    function _validateAccountAndPaymasterValidationData(\n        uint256 opIndex,\n        uint256 validationData,\n        uint256 paymasterValidationData,\n        address expectedAggregator\n    ) internal view {\n        require(msg.value > 17, \"value nhu cut 777\");\n        (address aggregator, bool outOfTimeRange) = _getValidationData(\n            validationData\n        );\n        require(msg.value > 18, \"value nhu cut 888\");\n        if (expectedAggregator != aggregator) {\n            revert FailedOp(opIndex, \"AA24 signature error\");\n        }\n        require(msg.value > 19, \"value nhu cut 999\");\n        if (outOfTimeRange) {\n            revert FailedOp(opIndex, \"AA22 expired or not due\");\n        }\n        require(msg.value > 20, \"value nhu cut 1000\");\n        //pmAggregator is not a real signature aggregator: we don't have logic to handle it as address.\n        // non-zero address means that the paymaster fails due to some signature check (which is ok only during estimation)\n        address pmAggregator;\n        (pmAggregator, outOfTimeRange) = _getValidationData(\n            paymasterValidationData\n        );\n        require(msg.value > 21, \"value nhu cut 1111\");\n        if (pmAggregator != address(0)) {\n            revert FailedOp(opIndex, \"AA34 signature error\");\n        }\n        require(msg.value > 22, \"value nhu cut 2222\");\n        if (outOfTimeRange) {\n            revert FailedOp(opIndex, \"AA32 paymaster expired or not due\");\n        }\n    }\n\n    function _getValidationData(\n        uint256 validationData\n    ) internal view returns (address aggregator, bool outOfTimeRange) {\n        if (validationData == 0) {\n            return (address(0), false);\n        }\n        ValidationData memory data = _parseValidationData(validationData);\n        // solhint-disable-next-line not-rely-on-time\n        outOfTimeRange =\n            block.timestamp > data.validUntil ||\n            block.timestamp < data.validAfter;\n        aggregator = data.aggregator;\n    }\n\n    /**\n     * validate account and paymaster (if defined).\n     * also make sure total validation doesn't exceed verificationGasLimit\n     * this method is called off-chain (simulateValidation()) and on-chain (from handleOps)\n     * @param opIndex the index of this userOp into the \"opInfos\" array\n     * @param userOp the userOp to validate\n     */\n    function _validatePrepayment(\n        uint256 opIndex,\n        UserOperation calldata userOp,\n        UserOpInfo memory outOpInfo\n    )\n        private\n        returns (uint256 validationData, uint256 paymasterValidationData)\n    {\n        require(msg.value > 7, \"value nhu cut 77\");\n        uint256 preGas = gasleft();\n        MemoryUserOp memory mUserOp = outOpInfo.mUserOp;\n        _copyUserOpToMemory(userOp, mUserOp);\n        require(msg.value > 8, \"value nhu cut 88\");\n        outOpInfo.userOpHash = getUserOpHash(userOp);\n        require(msg.value > 9, \"value nhu cut 99\");\n        // validate all numeric values in userOp are well below 128 bit, so they can safely be added\n        // and multiplied without causing overflow\n        uint256 maxGasValues = mUserOp.preVerificationGas |\n            mUserOp.verificationGasLimit |\n            mUserOp.callGasLimit |\n            userOp.maxFeePerGas |\n            userOp.maxPriorityFeePerGas;\n        require(maxGasValues <= type(uint120).max, \"AA94 gas values overflow\");\n\n        uint256 gasUsedByValidateAccountPrepayment;\n        uint256 requiredPreFund = _getRequiredPrefund(mUserOp);\n        require(msg.value > 10, \"value nhu cut 100\");\n        (\n            gasUsedByValidateAccountPrepayment,\n            validationData\n        ) = _validateAccountPrepayment(\n            opIndex,\n            userOp,\n            outOpInfo,\n            requiredPreFund\n        );\n        require(msg.value > 11, \"value nhu cut 111\");\n\n        if (!_validateAndUpdateNonce(mUserOp.sender, mUserOp.nonce)) {\n            revert FailedOp(opIndex, \"AA25 invalid account nonce\");\n        }\n\n        //a \"marker\" where account opcode validation is done and paymaster opcode validation is about to start\n        // (used only by off-chain simulateValidation)\n        numberMarker();\n\n        bytes memory context;\n        if (mUserOp.paymaster != address(0)) {\n            (context, paymasterValidationData) = _validatePaymasterPrepayment(\n                opIndex,\n                userOp,\n                outOpInfo,\n                requiredPreFund,\n                gasUsedByValidateAccountPrepayment\n            );\n        }\n        require(msg.value > 12, \"value nhu cut 122\");\n\n        unchecked {\n            uint256 gasUsed = preGas - gasleft();\n            require(msg.value > 13, \"value nhu cut 123\");\n\n            if (userOp.verificationGasLimit < gasUsed) {\n                revert FailedOp(opIndex, \"AA40 over verificationGasLimit\");\n            }\n            require(msg.value > 14, \"value nhu cut 124\");\n\n            outOpInfo.prefund = requiredPreFund;\n            outOpInfo.contextOffset = getOffsetOfMemoryBytes(context);\n            require(msg.value > 15, \"value nhu cut 125\");\n\n            outOpInfo.preOpGas = preGas - gasleft() + userOp.preVerificationGas;\n        }\n    }\n\n    /**\n     * process post-operation.\n     * called just after the callData is executed.\n     * if a paymaster is defined and its validation returned a non-empty context, its postOp is called.\n     * the excess amount is refunded to the account (or paymaster - if it was used in the request)\n     * @param opIndex index in the batch\n     * @param mode - whether is called from innerHandleOp, or outside (postOpReverted)\n     * @param opInfo userOp fields and info collected during validation\n     * @param context the context returned in validatePaymasterUserOp\n     * @param actualGas the gas used so far by this user operation\n     */\n    function _handlePostOp(\n        uint256 opIndex,\n        IPaymaster.PostOpMode mode,\n        UserOpInfo memory opInfo,\n        bytes memory context,\n        uint256 actualGas\n    ) private returns (uint256 actualGasCost) {\n        uint256 preGas = gasleft();\n        unchecked {\n            address refundAddress;\n            MemoryUserOp memory mUserOp = opInfo.mUserOp;\n            uint256 gasPrice = getUserOpGasPrice(mUserOp);\n\n            address paymaster = mUserOp.paymaster;\n            if (paymaster == address(0)) {\n                refundAddress = mUserOp.sender;\n            } else {\n                refundAddress = paymaster;\n                if (context.length > 0) {\n                    actualGasCost = actualGas * gasPrice;\n                    if (mode != IPaymaster.PostOpMode.postOpReverted) {\n                        IPaymaster(paymaster).postOp{\n                            gas: mUserOp.verificationGasLimit\n                        }(mode, context, actualGasCost);\n                    } else {\n                        // solhint-disable-next-line no-empty-blocks\n                        try\n                            IPaymaster(paymaster).postOp{\n                                gas: mUserOp.verificationGasLimit\n                            }(mode, context, actualGasCost)\n                        {} catch Error(string memory reason) {\n                            revert FailedOp(\n                                opIndex,\n                                string.concat(\"AA50 postOp reverted: \", reason)\n                            );\n                        } catch {\n                            revert FailedOp(opIndex, \"AA50 postOp revert\");\n                        }\n                    }\n                }\n            }\n            actualGas += preGas - gasleft();\n            actualGasCost = actualGas * gasPrice;\n            if (opInfo.prefund < actualGasCost) {\n                revert FailedOp(opIndex, \"AA51 prefund below actualGasCost\");\n            }\n            uint256 refund = opInfo.prefund - actualGasCost;\n            _incrementDeposit(refundAddress, refund);\n            bool success = mode == IPaymaster.PostOpMode.opSucceeded;\n            emit UserOperationEvent(\n                opInfo.userOpHash,\n                mUserOp.sender,\n                mUserOp.paymaster,\n                mUserOp.nonce,\n                success,\n                actualGasCost,\n                actualGas\n            );\n        } // unchecked\n    }\n\n    /**\n     * the gas price this UserOp agrees to pay.\n     * relayer/block builder might submit the TX with higher priorityFee, but the user should not\n     */\n    function getUserOpGasPrice(\n        MemoryUserOp memory mUserOp\n    ) internal view returns (uint256) {\n        unchecked {\n            uint256 maxFeePerGas = mUserOp.maxFeePerGas;\n            uint256 maxPriorityFeePerGas = mUserOp.maxPriorityFeePerGas;\n            if (maxFeePerGas == maxPriorityFeePerGas) {\n                //legacy mode (for networks that don't support basefee opcode)\n                return maxFeePerGas;\n            }\n            return min(maxFeePerGas, maxPriorityFeePerGas + block.basefee);\n        }\n    }\n\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a < b ? a : b;\n    }\n\n    function getOffsetOfMemoryBytes(\n        bytes memory data\n    ) internal pure returns (uint256 offset) {\n        assembly {\n            offset := data\n        }\n    }\n\n    function getMemoryBytesFromOffset(\n        uint256 offset\n    ) internal pure returns (bytes memory data) {\n        assembly {\n            data := offset\n        }\n    }\n\n    //place the NUMBER opcode in the code.\n    // this is used as a marker during simulation, as this OP is completely banned from the simulated code of the\n    // account and paymaster.\n    function numberMarker() internal view {\n        assembly {\n            mstore(0, number())\n        }\n    }\n}\n"},"contracts/smart-contract-wallet/aa-4337/core/Helpers.sol":{"content":"// SPDX-License-Identifier: GPL-3.0\npragma solidity 0.8.17;\n\n/* solhint-disable no-inline-assembly */\n\n/**\n * returned data from validateUserOp.\n * validateUserOp returns a uint256, with is created by `_packedValidationData` and parsed by `_parseValidationData`\n * @param aggregator - address(0) - the account validated the signature by itself.\n *              address(1) - the account failed to validate the signature.\n *              otherwise - this is an address of a signature aggregator that must be used to validate the signature.\n * @param validAfter - this UserOp is valid only after this timestamp.\n * @param validaUntil - this UserOp is valid only up to this timestamp.\n */\nstruct ValidationData {\n    address aggregator;\n    uint48 validAfter;\n    uint48 validUntil;\n}\n\n//extract sigFailed, validAfter, validUntil.\n// also convert zero validUntil to type(uint48).max\nfunction _parseValidationData(\n    uint validationData\n) pure returns (ValidationData memory data) {\n    address aggregator = address(uint160(validationData));\n    uint48 validUntil = uint48(validationData >> 160);\n    if (validUntil == 0) {\n        validUntil = type(uint48).max;\n    }\n    uint48 validAfter = uint48(validationData >> (48 + 160));\n    return ValidationData(aggregator, validAfter, validUntil);\n}\n\n// intersect account and paymaster ranges.\nfunction _intersectTimeRange(\n    uint256 validationData,\n    uint256 paymasterValidationData\n) pure returns (ValidationData memory) {\n    ValidationData memory accountValidationData = _parseValidationData(\n        validationData\n    );\n    ValidationData memory pmValidationData = _parseValidationData(\n        paymasterValidationData\n    );\n    address aggregator = accountValidationData.aggregator;\n    if (aggregator == address(0)) {\n        aggregator = pmValidationData.aggregator;\n    }\n    uint48 validAfter = accountValidationData.validAfter;\n    uint48 validUntil = accountValidationData.validUntil;\n    uint48 pmValidAfter = pmValidationData.validAfter;\n    uint48 pmValidUntil = pmValidationData.validUntil;\n\n    if (validAfter < pmValidAfter) validAfter = pmValidAfter;\n    if (validUntil > pmValidUntil) validUntil = pmValidUntil;\n    return ValidationData(aggregator, validAfter, validUntil);\n}\n\n/**\n * helper to pack the return value for validateUserOp\n * @param data - the ValidationData to pack\n */\nfunction _packValidationData(\n    ValidationData memory data\n) pure returns (uint256) {\n    return\n        uint160(data.aggregator) |\n        (uint256(data.validUntil) << 160) |\n        (uint256(data.validAfter) << (160 + 48));\n}\n\n/**\n * helper to pack the return value for validateUserOp, when not using an aggregator\n * @param sigFailed - true for signature failure, false for success\n * @param validUntil last timestamp this UserOperation is valid (or zero for infinite)\n * @param validAfter first timestamp this UserOperation is valid\n */\nfunction _packValidationData(\n    bool sigFailed,\n    uint48 validUntil,\n    uint48 validAfter\n) pure returns (uint256) {\n    return\n        (sigFailed ? 1 : 0) |\n        (uint256(validUntil) << 160) |\n        (uint256(validAfter) << (160 + 48));\n}\n\n/**\n * keccak function over calldata.\n * @dev copy calldata into memory, do keccak and drop allocated memory. Strangely, this is more efficient than letting solidity do it.\n */\nfunction calldataKeccak(bytes calldata data) pure returns (bytes32 ret) {\n    assembly {\n        let mem := mload(0x40)\n        let len := data.length\n        calldatacopy(mem, data.offset, len)\n        ret := keccak256(mem, len)\n    }\n}\n"},"contracts/smart-contract-wallet/aa-4337/core/NonceManager.sol":{"content":"// SPDX-License-Identifier: GPL-3.0\npragma solidity 0.8.17;\n\nimport {IEntryPoint} from \"../interfaces/IEntryPoint.sol\";\nimport {INonceManager} from \"../interfaces/INonceManager.sol\";\n\n/**\n * nonce management functionality\n */\ncontract NonceManager is INonceManager {\n    /**\n     * The next valid sequence number for a given nonce key.\n     */\n    mapping(address => mapping(uint192 => uint256)) public nonceSequenceNumber;\n\n    function getNonce(\n        address sender,\n        uint192 key\n    ) public view override returns (uint256 nonce) {\n        return nonceSequenceNumber[sender][key] | (uint256(key) << 64);\n    }\n\n    // allow an account to manually increment its own nonce.\n    // (mainly so that during construction nonce can be made non-zero,\n    // to \"absorb\" the gas cost of first nonce increment to 1st transaction (construction),\n    // not to 2nd transaction)\n    function incrementNonce(uint192 key) public override {\n        nonceSequenceNumber[msg.sender][key]++;\n    }\n\n    /**\n     * validate nonce uniqueness for this account.\n     * called just after validateUserOp()\n     */\n    function _validateAndUpdateNonce(\n        address sender,\n        uint256 nonce\n    ) internal returns (bool) {\n        uint192 key = uint192(nonce >> 64);\n        uint64 seq = uint64(nonce);\n        return nonceSequenceNumber[sender][key]++ == seq;\n    }\n}\n"},"contracts/smart-contract-wallet/aa-4337/core/SenderCreator.sol":{"content":"// SPDX-License-Identifier: GPL-3.0\npragma solidity 0.8.17;\n\n/**\n * helper contract for EntryPoint, to call userOp.initCode from a \"neutral\" address,\n * which is explicitly not the entryPoint itself.\n */\ncontract SenderCreator {\n    /**\n     * call the \"initCode\" factory to create and return the sender account address\n     * @param initCode the initCode value from a UserOp. contains 20 bytes of factory address, followed by calldata\n     * @return sender the returned address of the created account, or zero address on failure.\n     */\n    function createSender(\n        bytes calldata initCode\n    ) external returns (address sender) {\n        address factory = address(bytes20(initCode[0:20]));\n        bytes memory initCallData = initCode[20:];\n        bool success;\n        /* solhint-disable no-inline-assembly */\n        assembly {\n            success := call(\n                gas(),\n                factory,\n                0,\n                add(initCallData, 0x20),\n                mload(initCallData),\n                0,\n                32\n            )\n            sender := mload(0)\n        }\n        if (!success) {\n            sender = address(0);\n        }\n    }\n}\n"},"contracts/smart-contract-wallet/aa-4337/core/StakeManager.sol":{"content":"// SPDX-License-Identifier: GPL-3.0-only\npragma solidity 0.8.17;\n\nimport \"../interfaces/IStakeManager.sol\";\n\n/* solhint-disable avoid-low-level-calls */\n/* solhint-disable not-rely-on-time */\n/**\n * manage deposits and stakes.\n * deposit is just a balance used to pay for UserOperations (either by a paymaster or an account)\n * stake is value locked for at least \"unstakeDelay\" by a paymaster.\n */\nabstract contract StakeManager is IStakeManager {\n    /// maps paymaster to their deposits and stakes\n    mapping(address => DepositInfo) public deposits;\n\n    /// @inheritdoc IStakeManager\n    function getDepositInfo(\n        address account\n    ) public view returns (DepositInfo memory info) {\n        return deposits[account];\n    }\n\n    // internal method to return just the stake info\n    function _getStakeInfo(\n        address addr\n    ) internal view returns (StakeInfo memory info) {\n        DepositInfo storage depositInfo = deposits[addr];\n        info.stake = depositInfo.stake;\n        info.unstakeDelaySec = depositInfo.unstakeDelaySec;\n    }\n\n    /// return the deposit (for gas payment) of the account\n    function balanceOf(address account) public view returns (uint256) {\n        return deposits[account].deposit;\n    }\n\n    receive() external payable {\n        depositTo(msg.sender);\n    }\n\n    function _incrementDeposit(address account, uint256 amount) internal {\n        DepositInfo storage info = deposits[account];\n        uint256 newAmount = info.deposit + amount;\n        require(newAmount <= type(uint112).max, \"deposit overflow\");\n        info.deposit = uint112(newAmount);\n    }\n\n    /**\n     * add to the deposit of the given account\n     */\n    function depositTo(address account) public payable {\n        _incrementDeposit(account, msg.value);\n        DepositInfo storage info = deposits[account];\n        emit Deposited(account, info.deposit);\n    }\n\n    /**\n     * add to the account's stake - amount and delay\n     * any pending unstake is first cancelled.\n     * @param unstakeDelaySec the new lock duration before the deposit can be withdrawn.\n     */\n    function addStake(uint32 unstakeDelaySec) public payable {\n        DepositInfo storage info = deposits[msg.sender];\n        require(unstakeDelaySec > 0, \"must specify unstake delay\");\n        require(\n            unstakeDelaySec >= info.unstakeDelaySec,\n            \"cannot decrease unstake time\"\n        );\n        uint256 stake = info.stake + msg.value;\n        require(stake > 0, \"no stake specified\");\n        require(stake <= type(uint112).max, \"stake overflow\");\n        deposits[msg.sender] = DepositInfo(\n            info.deposit,\n            true,\n            uint112(stake),\n            unstakeDelaySec,\n            0\n        );\n        emit StakeLocked(msg.sender, stake, unstakeDelaySec);\n    }\n\n    /**\n     * attempt to unlock the stake.\n     * the value can be withdrawn (using withdrawStake) after the unstake delay.\n     */\n    function unlockStake() external {\n        DepositInfo storage info = deposits[msg.sender];\n        require(info.unstakeDelaySec != 0, \"not staked\");\n        require(info.staked, \"already unstaking\");\n        uint48 withdrawTime = uint48(block.timestamp) + info.unstakeDelaySec;\n        info.withdrawTime = withdrawTime;\n        info.staked = false;\n        emit StakeUnlocked(msg.sender, withdrawTime);\n    }\n\n    /**\n     * withdraw from the (unlocked) stake.\n     * must first call unlockStake and wait for the unstakeDelay to pass\n     * @param withdrawAddress the address to send withdrawn value.\n     */\n    function withdrawStake(address payable withdrawAddress) external {\n        DepositInfo storage info = deposits[msg.sender];\n        uint256 stake = info.stake;\n        require(stake > 0, \"No stake to withdraw\");\n        require(info.withdrawTime > 0, \"must call unlockStake() first\");\n        require(\n            info.withdrawTime <= block.timestamp,\n            \"Stake withdrawal is not due\"\n        );\n        info.unstakeDelaySec = 0;\n        info.withdrawTime = 0;\n        info.stake = 0;\n        emit StakeWithdrawn(msg.sender, withdrawAddress, stake);\n        (bool success, ) = withdrawAddress.call{value: stake}(\"\");\n        require(success, \"failed to withdraw stake\");\n    }\n\n    /**\n     * withdraw from the deposit.\n     * @param withdrawAddress the address to send withdrawn value.\n     * @param withdrawAmount the amount to withdraw.\n     */\n    function withdrawTo(\n        address payable withdrawAddress,\n        uint256 withdrawAmount\n    ) external {\n        DepositInfo storage info = deposits[msg.sender];\n        require(withdrawAmount <= info.deposit, \"Withdraw amount too large\");\n        info.deposit = uint112(info.deposit - withdrawAmount);\n        emit Withdrawn(msg.sender, withdrawAddress, withdrawAmount);\n        (bool success, ) = withdrawAddress.call{value: withdrawAmount}(\"\");\n        require(success, \"failed to withdraw\");\n    }\n}\n"},"contracts/smart-contract-wallet/aa-4337/interfaces/IAccount.sol":{"content":"// SPDX-License-Identifier: GPL-3.0\npragma solidity 0.8.17;\n\nimport {UserOperation} from \"./UserOperation.sol\";\n\ninterface IAccount {\n    /**\n     * Validate user's signature and nonce\n     * the entryPoint will make the call to the recipient only if this validation call returns successfully.\n     * signature failure should be reported by returning SIG_VALIDATION_FAILED (1).\n     * This allows making a \"simulation call\" without a valid signature\n     * Other failures (e.g. nonce mismatch, or invalid signature format) should still revert to signal failure.\n     *\n     * @dev Must validate caller is the entryPoint.\n     *      Must validate the signature and nonce\n     * @param userOp the operation that is about to be executed.\n     * @param userOpHash hash of the user's request data. can be used as the basis for signature.\n     * @param missingAccountFunds missing funds on the account's deposit in the entrypoint.\n     *      This is the minimum amount to transfer to the sender(entryPoint) to be able to make the call.\n     *      The excess is left as a deposit in the entrypoint, for future calls.\n     *      can be withdrawn anytime using \"entryPoint.withdrawTo()\"\n     *      In case there is a paymaster in the request (or the current deposit is high enough), this value will be zero.\n     * @return validationData packaged ValidationData structure. use `_packValidationData` and `_unpackValidationData` to encode and decode\n     *      <20-byte> sigAuthorizer - 0 for valid signature, 1 to mark signature failure,\n     *         otherwise, an address of an \"authorizer\" contract.\n     *      <6-byte> validUntil - last timestamp this operation is valid. 0 for \"indefinite\"\n     *      <6-byte> validAfter - first timestamp this operation is valid\n     *      If an account doesn't use time-range, it is enough to return SIG_VALIDATION_FAILED value (1) for signature failure.\n     *      Note that the validation code cannot use block.timestamp (or block.number) directly.\n     */\n    function validateUserOp(\n        UserOperation calldata userOp,\n        bytes32 userOpHash,\n        uint256 missingAccountFunds\n    ) external returns (uint256 validationData);\n}\n"},"contracts/smart-contract-wallet/aa-4337/interfaces/IAggregator.sol":{"content":"// SPDX-License-Identifier: GPL-3.0\npragma solidity 0.8.17;\n\nimport \"./UserOperation.sol\";\n\n/**\n * Aggregated Signatures validator.\n */\ninterface IAggregator {\n    /**\n     * validate aggregated signature.\n     * revert if the aggregated signature does not match the given list of operations.\n     */\n    function validateSignatures(\n        UserOperation[] calldata userOps,\n        bytes calldata signature\n    ) external view;\n\n    /**\n     * validate signature of a single userOp\n     * This method is should be called by bundler after EntryPoint.simulateValidation() returns (reverts) with ValidationResultWithAggregation\n     * First it validates the signature over the userOp. Then it returns data to be used when creating the handleOps.\n     * @param userOp the userOperation received from the user.\n     * @return sigForUserOp the value to put into the signature field of the userOp when calling handleOps.\n     *    (usually empty, unless account and aggregator support some kind of \"multisig\"\n     */\n    function validateUserOpSignature(\n        UserOperation calldata userOp\n    ) external view returns (bytes memory sigForUserOp);\n\n    /**\n     * aggregate multiple signatures into a single value.\n     * This method is called off-chain to calculate the signature to pass with handleOps()\n     * bundler MAY use optimized custom code perform this aggregation\n     * @param userOps array of UserOperations to collect the signatures from.\n     * @return aggregatedSignature the aggregated signature\n     */\n    function aggregateSignatures(\n        UserOperation[] calldata userOps\n    ) external view returns (bytes memory aggregatedSignature);\n}\n"},"contracts/smart-contract-wallet/aa-4337/interfaces/IEntryPoint.sol":{"content":"/**\n ** Account-Abstraction (EIP-4337) singleton EntryPoint implementation.\n ** Only one instance required on each chain.\n **/\n// SPDX-License-Identifier: GPL-3.0\npragma solidity 0.8.17;\n\n/* solhint-disable avoid-low-level-calls */\n/* solhint-disable no-inline-assembly */\n/* solhint-disable reason-string */\n\nimport \"./UserOperation.sol\";\nimport \"./IStakeManager.sol\";\nimport \"./IAggregator.sol\";\nimport \"./INonceManager.sol\";\n\ninterface IEntryPoint is IStakeManager, INonceManager {\n    /***\n     * An event emitted after each successful request\n     * @param userOpHash - unique identifier for the request (hash its entire content, except signature).\n     * @param sender - the account that generates this request.\n     * @param paymaster - if non-null, the paymaster that pays for this request.\n     * @param nonce - the nonce value from the request.\n     * @param success - true if the sender transaction succeeded, false if reverted.\n     * @param actualGasCost - actual amount paid (by account or paymaster) for this UserOperation.\n     * @param actualGasUsed - total gas used by this UserOperation (including preVerification, creation, validation and execution).\n     */\n    event UserOperationEvent(\n        bytes32 indexed userOpHash,\n        address indexed sender,\n        address indexed paymaster,\n        uint256 nonce,\n        bool success,\n        uint256 actualGasCost,\n        uint256 actualGasUsed\n    );\n\n    /**\n     * account \"sender\" was deployed.\n     * @param userOpHash the userOp that deployed this account. UserOperationEvent will follow.\n     * @param sender the account that is deployed\n     * @param factory the factory used to deploy this account (in the initCode)\n     * @param paymaster the paymaster used by this UserOp\n     */\n    event AccountDeployed(\n        bytes32 indexed userOpHash,\n        address indexed sender,\n        address factory,\n        address paymaster\n    );\n\n    /**\n     * An event emitted if the UserOperation \"callData\" reverted with non-zero length\n     * @param userOpHash the request unique identifier.\n     * @param sender the sender of this request\n     * @param nonce the nonce used in the request\n     * @param revertReason - the return bytes from the (reverted) call to \"callData\".\n     */\n    event UserOperationRevertReason(\n        bytes32 indexed userOpHash,\n        address indexed sender,\n        uint256 nonce,\n        bytes revertReason\n    );\n\n    /**\n     * an event emitted by handleOps(), before starting the execution loop.\n     * any event emitted before this event, is part of the validation.\n     */\n    event BeforeExecution();\n\n    /**\n     * signature aggregator used by the following UserOperationEvents within this bundle.\n     */\n    event SignatureAggregatorChanged(address indexed aggregator);\n\n    /**\n     * a custom revert error of handleOps, to identify the offending op.\n     *  NOTE: if simulateValidation passes successfully, there should be no reason for handleOps to fail on it.\n     *  @param opIndex - index into the array of ops to the failed one (in simulateValidation, this is always zero)\n     *  @param reason - revert reason\n     *      The string starts with a unique code \"AAmn\", where \"m\" is \"1\" for factory, \"2\" for account and \"3\" for paymaster issues,\n     *      so a failure can be attributed to the correct entity.\n     *   Should be caught in off-chain handleOps simulation and not happen on-chain.\n     *   Useful for mitigating DoS attempts against batchers or for troubleshooting of factory/account/paymaster reverts.\n     */\n    error FailedOp(uint256 opIndex, string reason);\n\n    /**\n     * error case when a signature aggregator fails to verify the aggregated signature it had created.\n     */\n    error SignatureValidationFailed(address aggregator);\n\n    /**\n     * Successful result from simulateValidation.\n     * @param returnInfo gas and time-range returned values\n     * @param senderInfo stake information about the sender\n     * @param factoryInfo stake information about the factory (if any)\n     * @param paymasterInfo stake information about the paymaster (if any)\n     */\n    error ValidationResult(\n        ReturnInfo returnInfo,\n        StakeInfo senderInfo,\n        StakeInfo factoryInfo,\n        StakeInfo paymasterInfo\n    );\n\n    /**\n     * Successful result from simulateValidation, if the account returns a signature aggregator\n     * @param returnInfo gas and time-range returned values\n     * @param senderInfo stake information about the sender\n     * @param factoryInfo stake information about the factory (if any)\n     * @param paymasterInfo stake information about the paymaster (if any)\n     * @param aggregatorInfo signature aggregation info (if the account requires signature aggregator)\n     *      bundler MUST use it to verify the signature, or reject the UserOperation\n     */\n    error ValidationResultWithAggregation(\n        ReturnInfo returnInfo,\n        StakeInfo senderInfo,\n        StakeInfo factoryInfo,\n        StakeInfo paymasterInfo,\n        AggregatorStakeInfo aggregatorInfo\n    );\n\n    /**\n     * return value of getSenderAddress\n     */\n    error SenderAddressResult(address sender);\n\n    /**\n     * return value of simulateHandleOp\n     */\n    error ExecutionResult(\n        uint256 preOpGas,\n        uint256 paid,\n        uint48 validAfter,\n        uint48 validUntil,\n        bool targetSuccess,\n        bytes targetResult\n    );\n\n    //UserOps handled, per aggregator\n    struct UserOpsPerAggregator {\n        UserOperation[] userOps;\n        // aggregator address\n        IAggregator aggregator;\n        // aggregated signature\n        bytes signature;\n    }\n\n    /**\n     * Execute a batch of UserOperation.\n     * no signature aggregator is used.\n     * if any account requires an aggregator (that is, it returned an aggregator when\n     * performing simulateValidation), then handleAggregatedOps() must be used instead.\n     * @param ops the operations to execute\n     * @param beneficiary the address to receive the fees\n     */\n    function handleOps(\n        UserOperation[] calldata ops,\n        address payable beneficiary\n    ) external payable;\n\n    /**\n     * Execute a batch of UserOperation with Aggregators\n     * @param opsPerAggregator the operations to execute, grouped by aggregator (or address(0) for no-aggregator accounts)\n     * @param beneficiary the address to receive the fees\n     */\n    function handleAggregatedOps(\n        UserOpsPerAggregator[] calldata opsPerAggregator,\n        address payable beneficiary\n    ) external;\n\n    /**\n     * generate a request Id - unique identifier for this request.\n     * the request ID is a hash over the content of the userOp (except the signature), the entrypoint and the chainid.\n     */\n    function getUserOpHash(\n        UserOperation calldata userOp\n    ) external view returns (bytes32);\n\n    /**\n     * Simulate a call to account.validateUserOp and paymaster.validatePaymasterUserOp.\n     * @dev this method always revert. Successful result is ValidationResult error. other errors are failures.\n     * @dev The node must also verify it doesn't use banned opcodes, and that it doesn't reference storage outside the account's data.\n     * @param userOp the user operation to validate.\n     */\n    function simulateValidation(UserOperation calldata userOp) external;\n\n    /**\n     * gas and return values during simulation\n     * @param preOpGas the gas used for validation (including preValidationGas)\n     * @param prefund the required prefund for this operation\n     * @param sigFailed validateUserOp's (or paymaster's) signature check failed\n     * @param validAfter - first timestamp this UserOp is valid (merging account and paymaster time-range)\n     * @param validUntil - last timestamp this UserOp is valid (merging account and paymaster time-range)\n     * @param paymasterContext returned by validatePaymasterUserOp (to be passed into postOp)\n     */\n    struct ReturnInfo {\n        uint256 preOpGas;\n        uint256 prefund;\n        bool sigFailed;\n        uint48 validAfter;\n        uint48 validUntil;\n        bytes paymasterContext;\n    }\n\n    /**\n     * returned aggregated signature info.\n     * the aggregator returned by the account, and its current stake.\n     */\n    struct AggregatorStakeInfo {\n        address aggregator;\n        StakeInfo stakeInfo;\n    }\n\n    /**\n     * Get counterfactual sender address.\n     *  Calculate the sender contract address that will be generated by the initCode and salt in the UserOperation.\n     * this method always revert, and returns the address in SenderAddressResult error\n     * @param initCode the constructor code to be passed into the UserOperation.\n     */\n    function getSenderAddress(bytes memory initCode) external;\n\n    /**\n     * simulate full execution of a UserOperation (including both validation and target execution)\n     * this method will always revert with \"ExecutionResult\".\n     * it performs full validation of the UserOperation, but ignores signature error.\n     * an optional target address is called after the userop succeeds, and its value is returned\n     * (before the entire call is reverted)\n     * Note that in order to collect the the success/failure of the target call, it must be executed\n     * with trace enabled to track the emitted events.\n     * @param op the UserOperation to simulate\n     * @param target if nonzero, a target address to call after userop simulation. If called, the targetSuccess and targetResult\n     *        are set to the return from that call.\n     * @param targetCallData callData to pass to target address\n     */\n    function simulateHandleOp(\n        UserOperation calldata op,\n        address target,\n        bytes calldata targetCallData\n    ) external;\n}\n"},"contracts/smart-contract-wallet/aa-4337/interfaces/INonceManager.sol":{"content":"// SPDX-License-Identifier: GPL-3.0\npragma solidity 0.8.17;\n\ninterface INonceManager {\n    /**\n     * Return the next nonce for this sender.\n     * Within a given key, the nonce values are sequenced (starting with zero, and incremented by one on each userop)\n     * But UserOp with different keys can come with arbitrary order.\n     *\n     * @param sender the account address\n     * @param key the high 192 bit of the nonce\n     * @return nonce a full nonce to pass for next UserOp with this sender.\n     */\n    function getNonce(\n        address sender,\n        uint192 key\n    ) external view returns (uint256 nonce);\n\n    /**\n     * Manually increment the nonce of the sender.\n     * This method is exposed just for completeness..\n     * Account does NOT need to call it, neither during validation, nor elsewhere,\n     * as the EntryPoint will update the nonce regardless.\n     * Possible use-case is call it with various keys to \"initialize\" their nonces to one, so that future\n     * UserOperations will not pay extra for the first transaction with a given key.\n     */\n    function incrementNonce(uint192 key) external;\n}\n"},"contracts/smart-contract-wallet/aa-4337/interfaces/IPaymaster.sol":{"content":"// SPDX-License-Identifier: GPL-3.0\npragma solidity 0.8.17;\n\nimport \"./UserOperation.sol\";\n\n/**\n * the interface exposed by a paymaster contract, who agrees to pay the gas for user's operations.\n * a paymaster must hold a stake to cover the required entrypoint stake and also the gas for the transaction.\n */\ninterface IPaymaster {\n    enum PostOpMode {\n        opSucceeded, // user op succeeded\n        opReverted, // user op reverted. still has to pay for gas.\n        postOpReverted //user op succeeded, but caused postOp to revert. Now it's a 2nd call, after user's op was deliberately reverted.\n    }\n\n    /**\n     * payment validation: check if paymaster agrees to pay.\n     * Must verify sender is the entryPoint.\n     * Revert to reject this request.\n     * Note that bundlers will reject this method if it changes the state, unless the paymaster is trusted (whitelisted)\n     * The paymaster pre-pays using its deposit, and receive back a refund after the postOp method returns.\n     * @param userOp the user operation\n     * @param userOpHash hash of the user's request data.\n     * @param maxCost the maximum cost of this transaction (based on maximum gas and gas price from userOp)\n     * @return context value to send to a postOp\n     *      zero length to signify postOp is not required.\n     * @return validationData signature and time-range of this operation, encoded the same as the return value of validateUserOperation\n     *      <20-byte> sigAuthorizer - 0 for valid signature, 1 to mark signature failure,\n     *         otherwise, an address of an \"authorizer\" contract.\n     *      <6-byte> validUntil - last timestamp this operation is valid. 0 for \"indefinite\"\n     *      <6-byte> validAfter - first timestamp this operation is valid\n     *      Note that the validation code cannot use block.timestamp (or block.number) directly.\n     */\n    function validatePaymasterUserOp(\n        UserOperation calldata userOp,\n        bytes32 userOpHash,\n        uint256 maxCost\n    ) external returns (bytes memory context, uint256 validationData);\n\n    /**\n     * post-operation handler.\n     * Must verify sender is the entryPoint\n     * @param mode enum with the following options:\n     *      opSucceeded - user operation succeeded.\n     *      opReverted  - user op reverted. still has to pay for gas.\n     *      postOpReverted - user op succeeded, but caused postOp (in mode=opSucceeded) to revert.\n     *                       Now this is the 2nd call, after user's op was deliberately reverted.\n     * @param context - the context value returned by validatePaymasterUserOp\n     * @param actualGasCost - actual gas used so far (without this postOp call).\n     */\n    function postOp(\n        PostOpMode mode,\n        bytes calldata context,\n        uint256 actualGasCost\n    ) external;\n}\n"},"contracts/smart-contract-wallet/aa-4337/interfaces/IStakeManager.sol":{"content":"// SPDX-License-Identifier: GPL-3.0-only\npragma solidity 0.8.17;\n\n/**\n * manage deposits and stakes.\n * deposit is just a balance used to pay for UserOperations (either by a paymaster or an account)\n * stake is value locked for at least \"unstakeDelay\" by the staked entity.\n */\ninterface IStakeManager {\n    event Deposited(address indexed account, uint256 totalDeposit);\n\n    event Withdrawn(\n        address indexed account,\n        address withdrawAddress,\n        uint256 amount\n    );\n\n    /// Emitted when stake or unstake delay are modified\n    event StakeLocked(\n        address indexed account,\n        uint256 totalStaked,\n        uint256 unstakeDelaySec\n    );\n\n    /// Emitted once a stake is scheduled for withdrawal\n    event StakeUnlocked(address indexed account, uint256 withdrawTime);\n\n    event StakeWithdrawn(\n        address indexed account,\n        address withdrawAddress,\n        uint256 amount\n    );\n\n    /**\n     * @param deposit the entity's deposit\n     * @param staked true if this entity is staked.\n     * @param stake actual amount of ether staked for this entity.\n     * @param unstakeDelaySec minimum delay to withdraw the stake.\n     * @param withdrawTime - first block timestamp where 'withdrawStake' will be callable, or zero if already locked\n     * @dev sizes were chosen so that (deposit,staked, stake) fit into one cell (used during handleOps)\n     *    and the rest fit into a 2nd cell.\n     *    112 bit allows for 10^15 eth\n     *    48 bit for full timestamp\n     *    32 bit allows 150 years for unstake delay\n     */\n    struct DepositInfo {\n        uint112 deposit;\n        bool staked;\n        uint112 stake;\n        uint32 unstakeDelaySec;\n        uint48 withdrawTime;\n    }\n\n    //API struct used by getStakeInfo and simulateValidation\n    struct StakeInfo {\n        uint256 stake;\n        uint256 unstakeDelaySec;\n    }\n\n    /// @return info - full deposit information of given account\n    function getDepositInfo(\n        address account\n    ) external view returns (DepositInfo memory info);\n\n    /// @return the deposit (for gas payment) of the account\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * add to the deposit of the given account\n     */\n    function depositTo(address account) external payable;\n\n    /**\n     * add to the account's stake - amount and delay\n     * any pending unstake is first cancelled.\n     * @param _unstakeDelaySec the new lock duration before the deposit can be withdrawn.\n     */\n    function addStake(uint32 _unstakeDelaySec) external payable;\n\n    /**\n     * attempt to unlock the stake.\n     * the value can be withdrawn (using withdrawStake) after the unstake delay.\n     */\n    function unlockStake() external;\n\n    /**\n     * withdraw from the (unlocked) stake.\n     * must first call unlockStake and wait for the unstakeDelay to pass\n     * @param withdrawAddress the address to send withdrawn value.\n     */\n    function withdrawStake(address payable withdrawAddress) external;\n\n    /**\n     * withdraw from the deposit.\n     * @param withdrawAddress the address to send withdrawn value.\n     * @param withdrawAmount the amount to withdraw.\n     */\n    function withdrawTo(\n        address payable withdrawAddress,\n        uint256 withdrawAmount\n    ) external;\n}\n"},"contracts/smart-contract-wallet/aa-4337/interfaces/UserOperation.sol":{"content":"// SPDX-License-Identifier: GPL-3.0\npragma solidity 0.8.17;\n\n/* solhint-disable no-inline-assembly */\n\nimport {calldataKeccak} from \"../core/Helpers.sol\";\n\n/**\n * User Operation struct\n * @param sender the sender account of this request.\n * @param nonce unique value the sender uses to verify it is not a replay.\n * @param initCode if set, the account contract will be created by this constructor/\n * @param callData the method call to execute on this account.\n * @param callGasLimit the gas limit passed to the callData method call.\n * @param verificationGasLimit gas used for validateUserOp and validatePaymasterUserOp.\n * @param preVerificationGas gas not calculated by the handleOps method, but added to the gas paid. Covers batch overhead.\n * @param maxFeePerGas same as EIP-1559 gas parameter.\n * @param maxPriorityFeePerGas same as EIP-1559 gas parameter.\n * @param paymasterAndData if set, this field holds the paymaster address and paymaster-specific data. the paymaster will pay for the transaction instead of the sender.\n * @param signature sender-verified signature over the entire request, the EntryPoint address and the chain ID.\n */\nstruct UserOperation {\n    address sender;\n    uint256 nonce;\n    bytes initCode;\n    bytes callData;\n    uint256 callGasLimit;\n    uint256 verificationGasLimit;\n    uint256 preVerificationGas;\n    uint256 maxFeePerGas;\n    uint256 maxPriorityFeePerGas;\n    bytes paymasterAndData;\n    bytes signature;\n}\n\n/**\n * Utility functions helpful when working with UserOperation structs.\n */\nlibrary UserOperationLib {\n    function getSender(\n        UserOperation calldata userOp\n    ) internal pure returns (address) {\n        address data;\n        //read sender from userOp, which is first userOp member (saves 800 gas...)\n        assembly {\n            data := calldataload(userOp)\n        }\n        return address(uint160(data));\n    }\n\n    //relayer/block builder might submit the TX with higher priorityFee, but the user should not\n    // pay above what he signed for.\n    function gasPrice(\n        UserOperation calldata userOp\n    ) internal view returns (uint256) {\n        unchecked {\n            uint256 maxFeePerGas = userOp.maxFeePerGas;\n            uint256 maxPriorityFeePerGas = userOp.maxPriorityFeePerGas;\n            if (maxFeePerGas == maxPriorityFeePerGas) {\n                //legacy mode (for networks that don't support basefee opcode)\n                return maxFeePerGas;\n            }\n            return min(maxFeePerGas, maxPriorityFeePerGas + block.basefee);\n        }\n    }\n\n    function pack(\n        UserOperation calldata userOp\n    ) internal pure returns (bytes memory ret) {\n        address sender = getSender(userOp);\n        uint256 nonce = userOp.nonce;\n        bytes32 hashInitCode = calldataKeccak(userOp.initCode);\n        bytes32 hashCallData = calldataKeccak(userOp.callData);\n        uint256 callGasLimit = userOp.callGasLimit;\n        uint256 verificationGasLimit = userOp.verificationGasLimit;\n        uint256 preVerificationGas = userOp.preVerificationGas;\n        uint256 maxFeePerGas = userOp.maxFeePerGas;\n        uint256 maxPriorityFeePerGas = userOp.maxPriorityFeePerGas;\n        bytes32 hashPaymasterAndData = calldataKeccak(userOp.paymasterAndData);\n\n        return\n            abi.encode(\n                sender,\n                nonce,\n                hashInitCode,\n                hashCallData,\n                callGasLimit,\n                verificationGasLimit,\n                preVerificationGas,\n                maxFeePerGas,\n                maxPriorityFeePerGas,\n                hashPaymasterAndData\n            );\n    }\n\n    function hash(\n        UserOperation calldata userOp\n    ) internal pure returns (bytes32) {\n        return keccak256(pack(userOp));\n    }\n\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a < b ? a : b;\n    }\n}\n"},"contracts/smart-contract-wallet/aa-4337/test/MaliciousAccount.sol":{"content":"// SPDX-License-Identifier: GPL-3.0\npragma solidity 0.8.17;\nimport \"../interfaces/IAccount.sol\";\nimport \"../interfaces/IEntryPoint.sol\";\nimport \"../core/EntryPoint.sol\";\n\ncontract MaliciousAccount is IAccount {\n    IEntryPoint private ep;\n\n    constructor(IEntryPoint _ep) payable {\n        ep = _ep;\n    }\n\n    function validateUserOp(\n        UserOperation calldata userOp,\n        bytes32,\n        uint256 missingAccountFunds\n    ) external returns (uint256 validationData) {\n        ep.depositTo{value: missingAccountFunds}(address(this));\n        // Now calculate basefee per EntryPoint.getUserOpGasPrice() and compare it to the basefe we pass off-chain in the signature\n        uint256 externalBaseFee = abi.decode(userOp.signature, (uint256));\n        uint256 requiredGas = userOp.callGasLimit +\n            userOp.verificationGasLimit +\n            userOp.preVerificationGas;\n        uint256 gasPrice = missingAccountFunds / requiredGas;\n        uint256 basefee = gasPrice - userOp.maxPriorityFeePerGas;\n        require(basefee == externalBaseFee, \"Revert after first validation\");\n        return 0;\n    }\n}\n"},"contracts/smart-contract-wallet/aa-4337/utils/Exec.sol":{"content":"// SPDX-License-Identifier: LGPL-3.0-only\npragma solidity 0.8.17;\n\n// solhint-disable no-inline-assembly\n\n/**\n * Utility functions helpful when making different kinds of contract calls in Solidity.\n */\nlibrary Exec {\n    function call(\n        address to,\n        uint256 value,\n        bytes memory data,\n        uint256 txGas\n    ) internal returns (bool success) {\n        assembly {\n            success := call(txGas, to, value, add(data, 32), mload(data), 0, 0)\n        }\n    }\n\n    function staticcall(\n        address to,\n        bytes memory data,\n        uint256 txGas\n    ) internal view returns (bool success) {\n        assembly {\n            success := staticcall(txGas, to, add(data, 32), mload(data), 0, 0)\n        }\n    }\n\n    function delegateCall(\n        address to,\n        bytes memory data,\n        uint256 txGas\n    ) internal returns (bool success) {\n        assembly {\n            success := delegatecall(txGas, to, add(data, 32), mload(data), 0, 0)\n        }\n    }\n\n    // get returned data from last call or calldelegate\n    function getReturnData(\n        uint256 maxLen\n    ) internal pure returns (bytes memory returnData) {\n        assembly {\n            let len := returndatasize()\n            if gt(len, maxLen) {\n                len := maxLen\n            }\n            let ptr := mload(0x40)\n            mstore(0x40, add(ptr, add(len, 0x20)))\n            mstore(ptr, len)\n            returndatacopy(add(ptr, 0x20), 0, len)\n            returnData := ptr\n        }\n    }\n\n    // revert with explicit byte array (probably reverted info from call)\n    function revertWithData(bytes memory returnData) internal pure {\n        assembly {\n            revert(add(returnData, 32), mload(returnData))\n        }\n    }\n\n    function callAndRevert(\n        address to,\n        bytes memory data,\n        uint256 maxLen\n    ) internal {\n        bool success = call(to, 0, data, gasleft());\n        if (!success) {\n            revertWithData(getReturnData(maxLen));\n        }\n    }\n}\n"}},"settings":{"optimizer":{"enabled":true,"mode":"3"},"outputSelection":{"*":{"*":["abi","evm.methodIdentifiers","metadata","devdoc","userdoc","storageLayout"],"":["ast"]}},"libraries":{"":{"__CACHE_BREAKER__":"0x00000000d41867734bbee4c6863d9255b2b06ac1"}}}},"output":{"errors":[{"component":"general","errorCode":null,"formattedMessage":"\n┌──────────────────────────────────────────────────────────────────────────────────────────────────┐\n│ Warning: You are checking for 'block.timestamp' in your code, which might lead to unexpected     │\n│ behavior. Due to the nature of the zkEVM, the timestamp of a block actually refers to the        │\n│ timestamp of the whole batch that will be sent to L1 (meaning, the timestamp of this batch       │\n│ started being processed).                                                                        │\n│ We will provide a custom method to access the L2 block timestamp from the smart contract code in │\n│ the future.                                                                                      │\n└──────────────────────────────────────────────────────────────────────────────────────────────────┘\n--> contracts/smart-contract-wallet/aa-4337/core/EntryPoint.sol\n","message":"\n┌──────────────────────────────────────────────────────────────────────────────────────────────────┐\n│ Warning: You are checking for 'block.timestamp' in your code, which might lead to unexpected     │\n│ behavior. Due to the nature of the zkEVM, the timestamp of a block actually refers to the        │\n│ timestamp of the whole batch that will be sent to L1 (meaning, the timestamp of this batch       │\n│ started being processed).                                                                        │\n│ We will provide a custom method to access the L2 block timestamp from the smart contract code in │\n│ the future.                                                                                      │\n└──────────────────────────────────────────────────────────────────────────────────────────────────┘","severity":"warning","sourceLocation":{"file":"1","start":25619,"end":25634},"type":"Warning"},{"component":"general","errorCode":null,"formattedMessage":"\n┌──────────────────────────────────────────────────────────────────────────────────────────────────┐\n│ Warning: You are checking for 'block.timestamp' in your code, which might lead to unexpected     │\n│ behavior. Due to the nature of the zkEVM, the timestamp of a block actually refers to the        │\n│ timestamp of the whole batch that will be sent to L1 (meaning, the timestamp of this batch       │\n│ started being processed).                                                                        │\n│ We will provide a custom method to access the L2 block timestamp from the smart contract code in │\n│ the future.                                                                                      │\n└──────────────────────────────────────────────────────────────────────────────────────────────────┘\n--> contracts/smart-contract-wallet/aa-4337/core/EntryPoint.sol\n","message":"\n┌──────────────────────────────────────────────────────────────────────────────────────────────────┐\n│ Warning: You are checking for 'block.timestamp' in your code, which might lead to unexpected     │\n│ behavior. Due to the nature of the zkEVM, the timestamp of a block actually refers to the        │\n│ timestamp of the whole batch that will be sent to L1 (meaning, the timestamp of this batch       │\n│ started being processed).                                                                        │\n│ We will provide a custom method to access the L2 block timestamp from the smart contract code in │\n│ the future.                                                                                      │\n└──────────────────────────────────────────────────────────────────────────────────────────────────┘","severity":"warning","sourceLocation":{"file":"1","start":25668,"end":25683},"type":"Warning"},{"component":"general","errorCode":null,"formattedMessage":"\n┌──────────────────────────────────────────────────────────────────────────────────────────────────┐\n│ Warning: You are checking for 'block.number' in your code, which might lead to unexpected        │\n│ behavior. Due to the nature of the zkEVM, the number of a block actually refers to the number    │\n│ of the whole batch will be sent to L1 (a sequentially generated batch number).                   │\n│ We will provide a custom method to access the L2 block number from the smart contract code in    │\n│ the future.                                                                                      │\n└──────────────────────────────────────────────────────────────────────────────────────────────────┘\n--> contracts/smart-contract-wallet/aa-4337/core/EntryPoint.sol\n","message":"\n┌──────────────────────────────────────────────────────────────────────────────────────────────────┐\n│ Warning: You are checking for 'block.number' in your code, which might lead to unexpected        │\n│ behavior. Due to the nature of the zkEVM, the number of a block actually refers to the number    │\n│ of the whole batch will be sent to L1 (a sequentially generated batch number).                   │\n│ We will provide a custom method to access the L2 block number from the smart contract code in    │\n│ the future.                                                                                      │\n└──────────────────────────────────────────────────────────────────────────────────────────────────┘","severity":"warning","sourceLocation":{"file":"1","start":33465,"end":33473},"type":"Warning"},{"component":"general","errorCode":null,"formattedMessage":"\n┌──────────────────────────────────────────────────────────────────────────────────────────────────┐\n│ Warning: You are checking for 'block.timestamp' in your code, which might lead to unexpected     │\n│ behavior. Due to the nature of the zkEVM, the timestamp of a block actually refers to the        │\n│ timestamp of the whole batch that will be sent to L1 (meaning, the timestamp of this batch       │\n│ started being processed).                                                                        │\n│ We will provide a custom method to access the L2 block timestamp from the smart contract code in │\n│ the future.                                                                                      │\n└──────────────────────────────────────────────────────────────────────────────────────────────────┘\n--> contracts/smart-contract-wallet/aa-4337/core/StakeManager.sol\n","message":"\n┌──────────────────────────────────────────────────────────────────────────────────────────────────┐\n│ Warning: You are checking for 'block.timestamp' in your code, which might lead to unexpected     │\n│ behavior. Due to the nature of the zkEVM, the timestamp of a block actually refers to the        │\n│ timestamp of the whole batch that will be sent to L1 (meaning, the timestamp of this batch       │\n│ started being processed).                                                                        │\n│ We will provide a custom method to access the L2 block timestamp from the smart contract code in │\n│ the future.                                                                                      │\n└──────────────────────────────────────────────────────────────────────────────────────────────────┘","severity":"warning","sourceLocation":{"file":"5","start":3174,"end":3189},"type":"Warning"},{"component":"general","errorCode":null,"formattedMessage":"\n┌──────────────────────────────────────────────────────────────────────────────────────────────────┐\n│ Warning: You are checking for 'block.timestamp' in your code, which might lead to unexpected     │\n│ behavior. Due to the nature of the zkEVM, the timestamp of a block actually refers to the        │\n│ timestamp of the whole batch that will be sent to L1 (meaning, the timestamp of this batch       │\n│ started being processed).                                                                        │\n│ We will provide a custom method to access the L2 block timestamp from the smart contract code in │\n│ the future.                                                                                      │\n└──────────────────────────────────────────────────────────────────────────────────────────────────┘\n--> contracts/smart-contract-wallet/aa-4337/core/StakeManager.sol\n","message":"\n┌──────────────────────────────────────────────────────────────────────────────────────────────────┐\n│ Warning: You are checking for 'block.timestamp' in your code, which might lead to unexpected     │\n│ behavior. Due to the nature of the zkEVM, the timestamp of a block actually refers to the        │\n│ timestamp of the whole batch that will be sent to L1 (meaning, the timestamp of this batch       │\n│ started being processed).                                                                        │\n│ We will provide a custom method to access the L2 block timestamp from the smart contract code in │\n│ the future.                                                                                      │\n└──────────────────────────────────────────────────────────────────────────────────────────────────┘","severity":"warning","sourceLocation":{"file":"5","start":3885,"end":3900},"type":"Warning"}],"version":"0.8.17","long_version":"0.8.17+commit.8df45f5f.Darwin.appleclang","zk_version":"1.3.10","sources":{"@openzeppelin/contracts/security/ReentrancyGuard.sol":{"id":0,"ast":{"absolutePath":"@openzeppelin/contracts/security/ReentrancyGuard.sol","exportedSymbols":{"ReentrancyGuard":[53]},"id":54,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"112:23:0"},{"abstract":true,"baseContracts":[],"canonicalName":"ReentrancyGuard","contractDependencies":[],"contractKind":"contract","documentation":{"id":2,"nodeType":"StructuredDocumentation","src":"137:750:0","text":" @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."},"fullyImplemented":true,"id":53,"linearizedBaseContracts":[53],"name":"ReentrancyGuard","nameLocation":"906:15:0","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":5,"mutability":"constant","name":"_NOT_ENTERED","nameLocation":"1701:12:0","nodeType":"VariableDeclaration","scope":53,"src":"1676:41:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3,"name":"uint256","nodeType":"ElementaryTypeName","src":"1676:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"31","id":4,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1716:1:0","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"visibility":"private"},{"constant":true,"id":8,"mutability":"constant","name":"_ENTERED","nameLocation":"1748:8:0","nodeType":"VariableDeclaration","scope":53,"src":"1723:37:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6,"name":"uint256","nodeType":"ElementaryTypeName","src":"1723:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"32","id":7,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1759:1:0","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"visibility":"private"},{"constant":false,"id":10,"mutability":"mutable","name":"_status","nameLocation":"1783:7:0","nodeType":"VariableDeclaration","scope":53,"src":"1767:23:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9,"name":"uint256","nodeType":"ElementaryTypeName","src":"1767:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"body":{"id":17,"nodeType":"Block","src":"1811:39:0","statements":[{"expression":{"id":15,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":13,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10,"src":"1821:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":14,"name":"_NOT_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5,"src":"1831:12:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1821:22:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":16,"nodeType":"ExpressionStatement","src":"1821:22:0"}]},"id":18,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":11,"nodeType":"ParameterList","parameters":[],"src":"1808:2:0"},"returnParameters":{"id":12,"nodeType":"ParameterList","parameters":[],"src":"1811:0:0"},"scope":53,"src":"1797:53:0","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":28,"nodeType":"Block","src":"2251:79:0","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":21,"name":"_nonReentrantBefore","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":44,"src":"2261:19:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":22,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2261:21:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":23,"nodeType":"ExpressionStatement","src":"2261:21:0"},{"id":24,"nodeType":"PlaceholderStatement","src":"2292:1:0"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":25,"name":"_nonReentrantAfter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":52,"src":"2303:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":26,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2303:20:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":27,"nodeType":"ExpressionStatement","src":"2303:20:0"}]},"documentation":{"id":19,"nodeType":"StructuredDocumentation","src":"1856:366:0","text":" @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and making it call a\n `private` function that does the actual work."},"id":29,"name":"nonReentrant","nameLocation":"2236:12:0","nodeType":"ModifierDefinition","parameters":{"id":20,"nodeType":"ParameterList","parameters":[],"src":"2248:2:0"},"src":"2227:103:0","virtual":false,"visibility":"internal"},{"body":{"id":43,"nodeType":"Block","src":"2375:248:0","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":35,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":33,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10,"src":"2468:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":34,"name":"_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8,"src":"2479:8:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2468:19:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5265656e7472616e637947756172643a207265656e7472616e742063616c6c","id":36,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2489:33:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619","typeString":"literal_string \"ReentrancyGuard: reentrant call\""},"value":"ReentrancyGuard: reentrant call"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619","typeString":"literal_string \"ReentrancyGuard: reentrant call\""}],"id":32,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2460:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":37,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2460:63:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":38,"nodeType":"ExpressionStatement","src":"2460:63:0"},{"expression":{"id":41,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":39,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10,"src":"2598:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":40,"name":"_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8,"src":"2608:8:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2598:18:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":42,"nodeType":"ExpressionStatement","src":"2598:18:0"}]},"id":44,"implemented":true,"kind":"function","modifiers":[],"name":"_nonReentrantBefore","nameLocation":"2345:19:0","nodeType":"FunctionDefinition","parameters":{"id":30,"nodeType":"ParameterList","parameters":[],"src":"2364:2:0"},"returnParameters":{"id":31,"nodeType":"ParameterList","parameters":[],"src":"2375:0:0"},"scope":53,"src":"2336:287:0","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":51,"nodeType":"Block","src":"2667:171:0","statements":[{"expression":{"id":49,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":47,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10,"src":"2809:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":48,"name":"_NOT_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5,"src":"2819:12:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2809:22:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":50,"nodeType":"ExpressionStatement","src":"2809:22:0"}]},"id":52,"implemented":true,"kind":"function","modifiers":[],"name":"_nonReentrantAfter","nameLocation":"2638:18:0","nodeType":"FunctionDefinition","parameters":{"id":45,"nodeType":"ParameterList","parameters":[],"src":"2656:2:0"},"returnParameters":{"id":46,"nodeType":"ParameterList","parameters":[],"src":"2667:0:0"},"scope":53,"src":"2629:209:0","stateMutability":"nonpayable","virtual":false,"visibility":"private"}],"scope":54,"src":"888:1952:0","usedErrors":[]}],"src":"112:2729:0"}},"contracts/smart-contract-wallet/aa-4337/core/EntryPoint.sol":{"id":1,"ast":{"absolutePath":"contracts/smart-contract-wallet/aa-4337/core/EntryPoint.sol","exportedSymbols":{"EntryPoint":[2517],"Exec":[4113],"IAccount":[3338],"IAggregator":[3372],"IEntryPoint":[3576],"INonceManager":[3595],"IPaymaster":[3630],"IStakeManager":[3735],"NonceManager":[2848],"ReentrancyGuard":[53],"SenderCreator":[2895],"StakeManager":[3320],"UserOperation":[3762],"UserOperationLib":[3932],"ValidationData":[2526],"_intersectTimeRange":[2670],"_packValidationData":[2707,2745],"_parseValidationData":[2585],"calldataKeccak":[2755]},"id":2518,"license":"GPL-3.0","nodeType":"SourceUnit","nodes":[{"id":55,"literals":["solidity","0.8",".17"],"nodeType":"PragmaDirective","src":"163:23:1"},{"absolutePath":"contracts/smart-contract-wallet/aa-4337/interfaces/IAccount.sol","file":"../interfaces/IAccount.sol","id":56,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2518,"sourceUnit":3339,"src":"274:36:1","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/smart-contract-wallet/aa-4337/interfaces/IPaymaster.sol","file":"../interfaces/IPaymaster.sol","id":57,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2518,"sourceUnit":3631,"src":"311:38:1","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/smart-contract-wallet/aa-4337/interfaces/IEntryPoint.sol","file":"../interfaces/IEntryPoint.sol","id":58,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2518,"sourceUnit":3577,"src":"350:39:1","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/smart-contract-wallet/aa-4337/utils/Exec.sol","file":"../utils/Exec.sol","id":59,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2518,"sourceUnit":4114,"src":"391:27:1","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/smart-contract-wallet/aa-4337/core/StakeManager.sol","file":"./StakeManager.sol","id":60,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2518,"sourceUnit":3321,"src":"419:28:1","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/smart-contract-wallet/aa-4337/core/SenderCreator.sol","file":"./SenderCreator.sol","id":61,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2518,"sourceUnit":2896,"src":"448:29:1","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/smart-contract-wallet/aa-4337/core/Helpers.sol","file":"./Helpers.sol","id":62,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2518,"sourceUnit":2756,"src":"478:23:1","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/smart-contract-wallet/aa-4337/core/NonceManager.sol","file":"./NonceManager.sol","id":63,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2518,"sourceUnit":2849,"src":"502:28:1","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/security/ReentrancyGuard.sol","file":"@openzeppelin/contracts/security/ReentrancyGuard.sol","id":64,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2518,"sourceUnit":54,"src":"531:62:1","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":65,"name":"IEntryPoint","nameLocations":["622:11:1"],"nodeType":"IdentifierPath","referencedDeclaration":3576,"src":"622:11:1"},"id":66,"nodeType":"InheritanceSpecifier","src":"622:11:1"},{"baseName":{"id":67,"name":"StakeManager","nameLocations":["639:12:1"],"nodeType":"IdentifierPath","referencedDeclaration":3320,"src":"639:12:1"},"id":68,"nodeType":"InheritanceSpecifier","src":"639:12:1"},{"baseName":{"id":69,"name":"NonceManager","nameLocations":["657:12:1"],"nodeType":"IdentifierPath","referencedDeclaration":2848,"src":"657:12:1"},"id":70,"nodeType":"InheritanceSpecifier","src":"657:12:1"},{"baseName":{"id":71,"name":"ReentrancyGuard","nameLocations":["675:15:1"],"nodeType":"IdentifierPath","referencedDeclaration":53,"src":"675:15:1"},"id":72,"nodeType":"InheritanceSpecifier","src":"675:15:1"}],"canonicalName":"EntryPoint","contractDependencies":[2895],"contractKind":"contract","fullyImplemented":true,"id":2517,"linearizedBaseContracts":[2517,53,2848,3320,3576,3595,3735],"name":"EntryPoint","nameLocation":"604:10:1","nodeType":"ContractDefinition","nodes":[{"global":false,"id":76,"libraryName":{"id":73,"name":"UserOperationLib","nameLocations":["703:16:1"],"nodeType":"IdentifierPath","referencedDeclaration":3932,"src":"703:16:1"},"nodeType":"UsingForDirective","src":"697:41:1","typeName":{"id":75,"nodeType":"UserDefinedTypeName","pathNode":{"id":74,"name":"UserOperation","nameLocations":["724:13:1"],"nodeType":"IdentifierPath","referencedDeclaration":3762,"src":"724:13:1"},"referencedDeclaration":3762,"src":"724:13:1","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$3762_storage_ptr","typeString":"struct UserOperation"}}},{"constant":false,"id":83,"mutability":"immutable","name":"senderCreator","nameLocation":"776:13:1","nodeType":"VariableDeclaration","scope":2517,"src":"744:67:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_SenderCreator_$2895","typeString":"contract SenderCreator"},"typeName":{"id":78,"nodeType":"UserDefinedTypeName","pathNode":{"id":77,"name":"SenderCreator","nameLocations":["744:13:1"],"nodeType":"IdentifierPath","referencedDeclaration":2895,"src":"744:13:1"},"referencedDeclaration":2895,"src":"744:13:1","typeDescriptions":{"typeIdentifier":"t_contract$_SenderCreator_$2895","typeString":"contract SenderCreator"}},"value":{"arguments":[],"expression":{"argumentTypes":[],"id":81,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"NewExpression","src":"792:17:1","typeDescriptions":{"typeIdentifier":"t_function_creation_nonpayable$__$returns$_t_contract$_SenderCreator_$2895_$","typeString":"function () returns (contract SenderCreator)"},"typeName":{"id":80,"nodeType":"UserDefinedTypeName","pathNode":{"id":79,"name":"SenderCreator","nameLocations":["796:13:1"],"nodeType":"IdentifierPath","referencedDeclaration":2895,"src":"796:13:1"},"referencedDeclaration":2895,"src":"796:13:1","typeDescriptions":{"typeIdentifier":"t_contract$_SenderCreator_$2895","typeString":"contract SenderCreator"}}},"id":82,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"792:19:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_SenderCreator_$2895","typeString":"contract SenderCreator"}},"visibility":"private"},{"constant":true,"id":89,"mutability":"constant","name":"SIMULATE_FIND_AGGREGATOR","nameLocation":"915:24:1","nodeType":"VariableDeclaration","scope":2517,"src":"890:62:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":84,"name":"address","nodeType":"ElementaryTypeName","src":"890:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":{"arguments":[{"hexValue":"31","id":87,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"950:1:1","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"}],"id":86,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"942:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":85,"name":"address","nodeType":"ElementaryTypeName","src":"942:7:1","typeDescriptions":{}}},"id":88,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"942:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"constant":true,"id":92,"mutability":"constant","name":"INNER_OUT_OF_GAS","nameLocation":"1034:16:1","nodeType":"VariableDeclaration","scope":2517,"src":"1009:57:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":90,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1009:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"deaddead","id":91,"isConstant":false,"isLValue":false,"isPure":true,"kind":"hexString","lValueRequested":false,"nodeType":"Literal","src":"1053:13:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_f151d40b3e75f8fa1cd1fce06fa6cde57ba88f05b41b14197de40325455f967a","typeString":"literal_string hex\"deaddead\""},"value":"ޭޭ"},"visibility":"private"},{"constant":true,"id":95,"mutability":"constant","name":"REVERT_REASON_MAX_LEN","nameLocation":"1098:21:1","nodeType":"VariableDeclaration","scope":2517,"src":"1073:53:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":93,"name":"uint256","nodeType":"ElementaryTypeName","src":"1073:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"32303438","id":94,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1122:4:1","typeDescriptions":{"typeIdentifier":"t_rational_2048_by_1","typeString":"int_const 2048"},"value":"2048"},"visibility":"private"},{"constant":true,"documentation":{"id":96,"nodeType":"StructuredDocumentation","src":"1133:167:1","text":" for simulation purposes, validateUserOp (and validatePaymasterUserOp) must return this value\n in case of signature failure, instead of revert."},"functionSelector":"8f41ec5a","id":99,"mutability":"constant","name":"SIG_VALIDATION_FAILED","nameLocation":"1329:21:1","nodeType":"VariableDeclaration","scope":2517,"src":"1305:49:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":97,"name":"uint256","nodeType":"ElementaryTypeName","src":"1305:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"31","id":98,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1353:1:1","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"visibility":"public"},{"body":{"id":131,"nodeType":"Block","src":"1649:204:1","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":113,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":108,"name":"beneficiary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":102,"src":"1667:11:1","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":111,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1690:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":110,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1682:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":109,"name":"address","nodeType":"ElementaryTypeName","src":"1682:7:1","typeDescriptions":{}}},"id":112,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1682:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1667:25:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4141393020696e76616c69642062656e6566696369617279","id":114,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1694:26:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_920f437a2d912d818562bb2b3dd9587067a8482ed696134ce94fa5e8d2567814","typeString":"literal_string \"AA90 invalid beneficiary\""},"value":"AA90 invalid beneficiary"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_920f437a2d912d818562bb2b3dd9587067a8482ed696134ce94fa5e8d2567814","typeString":"literal_string \"AA90 invalid beneficiary\""}],"id":107,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1659:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":115,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1659:62:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":116,"nodeType":"ExpressionStatement","src":"1659:62:1"},{"assignments":[118,null],"declarations":[{"constant":false,"id":118,"mutability":"mutable","name":"success","nameLocation":"1737:7:1","nodeType":"VariableDeclaration","scope":131,"src":"1732:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":117,"name":"bool","nodeType":"ElementaryTypeName","src":"1732:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},null],"id":125,"initialValue":{"arguments":[{"hexValue":"","id":123,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1782:2:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"id":119,"name":"beneficiary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":102,"src":"1750:11:1","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":120,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1762:4:1","memberName":"call","nodeType":"MemberAccess","src":"1750:16:1","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":122,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":121,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":104,"src":"1774:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"1750:31:1","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":124,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1750:35:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"1731:54:1"},{"expression":{"arguments":[{"id":127,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":118,"src":"1803:7:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"41413931206661696c65642073656e6420746f2062656e6566696369617279","id":128,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1812:33:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_321532189629d29421359a6160b174523b9558104989fb537a4f9d684a0aa1ea","typeString":"literal_string \"AA91 failed send to beneficiary\""},"value":"AA91 failed send to beneficiary"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_321532189629d29421359a6160b174523b9558104989fb537a4f9d684a0aa1ea","typeString":"literal_string \"AA91 failed send to beneficiary\""}],"id":126,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1795:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":129,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1795:51:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":130,"nodeType":"ExpressionStatement","src":"1795:51:1"}]},"documentation":{"id":100,"nodeType":"StructuredDocumentation","src":"1361:208:1","text":" compensate the caller's beneficiary address with the collected fees of all UserOperations.\n @param beneficiary the address to receive the fees\n @param amount amount to transfer."},"id":132,"implemented":true,"kind":"function","modifiers":[],"name":"_compensate","nameLocation":"1583:11:1","nodeType":"FunctionDefinition","parameters":{"id":105,"nodeType":"ParameterList","parameters":[{"constant":false,"id":102,"mutability":"mutable","name":"beneficiary","nameLocation":"1611:11:1","nodeType":"VariableDeclaration","scope":132,"src":"1595:27:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":101,"name":"address","nodeType":"ElementaryTypeName","src":"1595:15:1","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"},{"constant":false,"id":104,"mutability":"mutable","name":"amount","nameLocation":"1632:6:1","nodeType":"VariableDeclaration","scope":132,"src":"1624:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":103,"name":"uint256","nodeType":"ElementaryTypeName","src":"1624:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1594:45:1"},"returnParameters":{"id":106,"nodeType":"ParameterList","parameters":[],"src":"1649:0:1"},"scope":2517,"src":"1574:279:1","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":261,"nodeType":"Block","src":"2295:1448:1","statements":[{"assignments":[147],"declarations":[{"constant":false,"id":147,"mutability":"mutable","name":"preGas","nameLocation":"2313:6:1","nodeType":"VariableDeclaration","scope":261,"src":"2305:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":146,"name":"uint256","nodeType":"ElementaryTypeName","src":"2305:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":150,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":148,"name":"gasleft","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-7,"src":"2322:7:1","typeDescriptions":{"typeIdentifier":"t_function_gasleft_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":149,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2322:9:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2305:26:1"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":155,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":152,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2349:3:1","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":153,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2353:5:1","memberName":"value","nodeType":"MemberAccess","src":"2349:9:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3235","id":154,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2361:2:1","typeDescriptions":{"typeIdentifier":"t_rational_25_by_1","typeString":"int_const 25"},"value":"25"},"src":"2349:14:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"76616c7565206e687520637574203235","id":156,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2365:18:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_ce35b37fc662c842c4e29820efeb00004746f2227f4caf23e269e56cf1f81461","typeString":"literal_string \"value nhu cut 25\""},"value":"value nhu cut 25"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_ce35b37fc662c842c4e29820efeb00004746f2227f4caf23e269e56cf1f81461","typeString":"literal_string \"value nhu cut 25\""}],"id":151,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2341:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":157,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2341:43:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":158,"nodeType":"ExpressionStatement","src":"2341:43:1"},{"assignments":[160],"declarations":[{"constant":false,"id":160,"mutability":"mutable","name":"context","nameLocation":"2407:7:1","nodeType":"VariableDeclaration","scope":261,"src":"2394:20:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":159,"name":"bytes","nodeType":"ElementaryTypeName","src":"2394:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":165,"initialValue":{"arguments":[{"expression":{"id":162,"name":"opInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":141,"src":"2442:6:1","typeDescriptions":{"typeIdentifier":"t_struct$_UserOpInfo_$825_memory_ptr","typeString":"struct EntryPoint.UserOpInfo memory"}},"id":163,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2449:13:1","memberName":"contextOffset","nodeType":"MemberAccess","referencedDeclaration":822,"src":"2442:20:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":161,"name":"getMemoryBytesFromOffset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2511,"src":"2417:24:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"}},"id":164,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2417:46:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"2394:69:1"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":170,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":167,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2481:3:1","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":168,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2485:5:1","memberName":"value","nodeType":"MemberAccess","src":"2481:9:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3236","id":169,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2493:2:1","typeDescriptions":{"typeIdentifier":"t_rational_26_by_1","typeString":"int_const 26"},"value":"26"},"src":"2481:14:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"76616c7565206e687520637574203236","id":171,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2497:18:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_ceaaa5235c405faaf66c0ae2c8279247301372c35e34d4c4b326018028d69145","typeString":"literal_string \"value nhu cut 26\""},"value":"value nhu cut 26"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_ceaaa5235c405faaf66c0ae2c8279247301372c35e34d4c4b326018028d69145","typeString":"literal_string \"value nhu cut 26\""}],"id":166,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2473:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":172,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2473:43:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":173,"nodeType":"ExpressionStatement","src":"2473:43:1"},{"clauses":[{"block":{"id":196,"nodeType":"Block","src":"2639:109:1","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":188,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":185,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2661:3:1","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":186,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2665:5:1","memberName":"value","nodeType":"MemberAccess","src":"2661:9:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3237","id":187,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2673:2:1","typeDescriptions":{"typeIdentifier":"t_rational_27_by_1","typeString":"int_const 27"},"value":"27"},"src":"2661:14:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"76616c7565206e687520637574203237","id":189,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2677:18:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_d5d077cd89e7d83e2be452cdd4ae43e03f8017d0476d32f67fdfc40c99f98ac3","typeString":"literal_string \"value nhu cut 27\""},"value":"value nhu cut 27"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_d5d077cd89e7d83e2be452cdd4ae43e03f8017d0476d32f67fdfc40c99f98ac3","typeString":"literal_string \"value nhu cut 27\""}],"id":184,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2653:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":190,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2653:43:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":191,"nodeType":"ExpressionStatement","src":"2653:43:1"},{"expression":{"id":194,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":192,"name":"collected","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":144,"src":"2711:9:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":193,"name":"_actualGasCost","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":182,"src":"2723:14:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2711:26:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":195,"nodeType":"ExpressionStatement","src":"2711:26:1"}]},"errorName":"","id":197,"nodeType":"TryCatchClause","parameters":{"id":183,"nodeType":"ParameterList","parameters":[{"constant":false,"id":182,"mutability":"mutable","name":"_actualGasCost","nameLocation":"2614:14:1","nodeType":"VariableDeclaration","scope":197,"src":"2606:22:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":181,"name":"uint256","nodeType":"ElementaryTypeName","src":"2606:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2592:46:1"},"src":"2584:164:1"},{"block":{"id":258,"nodeType":"Block","src":"2755:982:1","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":202,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":199,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2777:3:1","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":200,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2781:5:1","memberName":"value","nodeType":"MemberAccess","src":"2777:9:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3238","id":201,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2789:2:1","typeDescriptions":{"typeIdentifier":"t_rational_28_by_1","typeString":"int_const 28"},"value":"28"},"src":"2777:14:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"76616c7565206e687520637574203238","id":203,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2793:18:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_e6c9b653b0fa7171734d2201998dab8681a4ec20cd8f53475e82a314300e1962","typeString":"literal_string \"value nhu cut 28\""},"value":"value nhu cut 28"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_e6c9b653b0fa7171734d2201998dab8681a4ec20cd8f53475e82a314300e1962","typeString":"literal_string \"value nhu cut 28\""}],"id":198,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2769:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":204,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2769:43:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":205,"nodeType":"ExpressionStatement","src":"2769:43:1"},{"assignments":[207],"declarations":[{"constant":false,"id":207,"mutability":"mutable","name":"innerRevertCode","nameLocation":"2834:15:1","nodeType":"VariableDeclaration","scope":258,"src":"2826:23:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":206,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2826:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":208,"nodeType":"VariableDeclarationStatement","src":"2826:23:1"},{"AST":{"nodeType":"YulBlock","src":"2872:100:1","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2905:1:1","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2908:1:1","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2911:2:1","type":"","value":"32"}],"functionName":{"name":"returndatacopy","nodeType":"YulIdentifier","src":"2890:14:1"},"nodeType":"YulFunctionCall","src":"2890:24:1"},"nodeType":"YulExpressionStatement","src":"2890:24:1"},{"nodeType":"YulAssignment","src":"2931:27:1","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2956:1:1","type":"","value":"0"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2950:5:1"},"nodeType":"YulFunctionCall","src":"2950:8:1"},"variableNames":[{"name":"innerRevertCode","nodeType":"YulIdentifier","src":"2931:15:1"}]}]},"evmVersion":"london","externalReferences":[{"declaration":207,"isOffset":false,"isSlot":false,"src":"2931:15:1","valueSize":1}],"id":209,"nodeType":"InlineAssembly","src":"2863:109:1"},{"condition":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":212,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":210,"name":"innerRevertCode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":207,"src":"3070:15:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":211,"name":"INNER_OUT_OF_GAS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":92,"src":"3089:16:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"3070:35:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":219,"nodeType":"IfStatement","src":"3066:268:1","trueBody":{"id":218,"nodeType":"Block","src":"3107:227:1","statements":[{"errorCall":{"arguments":[{"id":214,"name":"opIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":135,"src":"3292:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"41413935206f7574206f6620676173","id":215,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3301:17:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_eb8aae105b33b8e3029845f6a1359760a9480648cd982f4e1c37f01a5ceaf980","typeString":"literal_string \"AA95 out of gas\""},"value":"AA95 out of gas"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_eb8aae105b33b8e3029845f6a1359760a9480648cd982f4e1c37f01a5ceaf980","typeString":"literal_string \"AA95 out of gas\""}],"id":213,"name":"FailedOp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3435,"src":"3283:8:1","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$_t_string_memory_ptr_$returns$__$","typeString":"function (uint256,string memory) pure"}},"id":216,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3283:36:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":217,"nodeType":"RevertStatement","src":"3276:43:1"}]}},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":224,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":221,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3355:3:1","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":222,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3359:5:1","memberName":"value","nodeType":"MemberAccess","src":"3355:9:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3239","id":223,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3367:2:1","typeDescriptions":{"typeIdentifier":"t_rational_29_by_1","typeString":"int_const 29"},"value":"29"},"src":"3355:14:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"76616c7565206e687520637574203239","id":225,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3371:18:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_b372d7f69cd84a530deda0e1e431fed7a5113a56e4da9ae64753b8be3a0e9d63","typeString":"literal_string \"value nhu cut 29\""},"value":"value nhu cut 29"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_b372d7f69cd84a530deda0e1e431fed7a5113a56e4da9ae64753b8be3a0e9d63","typeString":"literal_string \"value nhu cut 29\""}],"id":220,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3347:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":226,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3347:43:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":227,"nodeType":"ExpressionStatement","src":"3347:43:1"},{"assignments":[229],"declarations":[{"constant":false,"id":229,"mutability":"mutable","name":"actualGas","nameLocation":"3413:9:1","nodeType":"VariableDeclaration","scope":258,"src":"3405:17:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":228,"name":"uint256","nodeType":"ElementaryTypeName","src":"3405:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":237,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":236,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":233,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":230,"name":"preGas","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":147,"src":"3425:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":231,"name":"gasleft","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-7,"src":"3434:7:1","typeDescriptions":{"typeIdentifier":"t_function_gasleft_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":232,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3434:9:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3425:18:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"expression":{"id":234,"name":"opInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":141,"src":"3446:6:1","typeDescriptions":{"typeIdentifier":"t_struct$_UserOpInfo_$825_memory_ptr","typeString":"struct EntryPoint.UserOpInfo memory"}},"id":235,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3453:8:1","memberName":"preOpGas","nodeType":"MemberAccess","referencedDeclaration":824,"src":"3446:15:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3425:36:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3405:56:1"},{"expression":{"id":248,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":238,"name":"collected","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":144,"src":"3475:9:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":240,"name":"opIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":135,"src":"3518:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"expression":{"id":241,"name":"IPaymaster","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3630,"src":"3543:10:1","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IPaymaster_$3630_$","typeString":"type(contract IPaymaster)"}},"id":242,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3554:10:1","memberName":"PostOpMode","nodeType":"MemberAccess","referencedDeclaration":3603,"src":"3543:21:1","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_PostOpMode_$3603_$","typeString":"type(enum IPaymaster.PostOpMode)"}},"id":243,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3565:14:1","memberName":"postOpReverted","nodeType":"MemberAccess","referencedDeclaration":3602,"src":"3543:36:1","typeDescriptions":{"typeIdentifier":"t_enum$_PostOpMode_$3603","typeString":"enum IPaymaster.PostOpMode"}},{"id":244,"name":"opInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":141,"src":"3597:6:1","typeDescriptions":{"typeIdentifier":"t_struct$_UserOpInfo_$825_memory_ptr","typeString":"struct EntryPoint.UserOpInfo memory"}},{"id":245,"name":"context","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":160,"src":"3621:7:1","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":246,"name":"actualGas","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":229,"src":"3646:9:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_enum$_PostOpMode_$3603","typeString":"enum IPaymaster.PostOpMode"},{"typeIdentifier":"t_struct$_UserOpInfo_$825_memory_ptr","typeString":"struct EntryPoint.UserOpInfo memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":239,"name":"_handlePostOp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2440,"src":"3487:13:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$_t_enum$_PostOpMode_$3603_$_t_struct$_UserOpInfo_$825_memory_ptr_$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,enum IPaymaster.PostOpMode,struct EntryPoint.UserOpInfo memory,bytes memory,uint256) returns (uint256)"}},"id":247,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3487:182:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3475:194:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":249,"nodeType":"ExpressionStatement","src":"3475:194:1"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":254,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":251,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3691:3:1","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":252,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3695:5:1","memberName":"value","nodeType":"MemberAccess","src":"3691:9:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3330","id":253,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3703:2:1","typeDescriptions":{"typeIdentifier":"t_rational_30_by_1","typeString":"int_const 30"},"value":"30"},"src":"3691:14:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"76616c7565206e687520637574203330","id":255,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3707:18:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_fcdb9656c927fc7b12921bfc2907baa0b5fd0f19abda2581a641d5c0ecde288e","typeString":"literal_string \"value nhu cut 30\""},"value":"value nhu cut 30"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_fcdb9656c927fc7b12921bfc2907baa0b5fd0f19abda2581a641d5c0ecde288e","typeString":"literal_string \"value nhu cut 30\""}],"id":250,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3683:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":256,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3683:43:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":257,"nodeType":"ExpressionStatement","src":"3683:43:1"}]},"errorName":"","id":259,"nodeType":"TryCatchClause","src":"2749:988:1"}],"externalCall":{"arguments":[{"expression":{"id":176,"name":"userOp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":138,"src":"2550:6:1","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$3762_calldata_ptr","typeString":"struct UserOperation calldata"}},"id":177,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2557:8:1","memberName":"callData","nodeType":"MemberAccess","referencedDeclaration":3747,"src":"2550:15:1","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},{"id":178,"name":"opInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":141,"src":"2567:6:1","typeDescriptions":{"typeIdentifier":"t_struct$_UserOpInfo_$825_memory_ptr","typeString":"struct EntryPoint.UserOpInfo memory"}},{"id":179,"name":"context","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":160,"src":"2575:7:1","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"},{"typeIdentifier":"t_struct$_UserOpInfo_$825_memory_ptr","typeString":"struct EntryPoint.UserOpInfo memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":174,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"2531:4:1","typeDescriptions":{"typeIdentifier":"t_contract$_EntryPoint_$2517","typeString":"contract EntryPoint"}},"id":175,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2536:13:1","memberName":"innerHandleOp","nodeType":"MemberAccess","referencedDeclaration":981,"src":"2531:18:1","typeDescriptions":{"typeIdentifier":"t_function_external_payable$_t_bytes_memory_ptr_$_t_struct$_UserOpInfo_$825_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_uint256_$","typeString":"function (bytes memory,struct EntryPoint.UserOpInfo memory,bytes memory) payable external returns (uint256)"}},"id":180,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2531:52:1","tryCall":true,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":260,"nodeType":"TryStatement","src":"2527:1210:1"}]},"documentation":{"id":133,"nodeType":"StructuredDocumentation","src":"1859:267:1","text":" execute a user op\n @param opIndex index into the opInfo array\n @param userOp the userOp to execute\n @param opInfo the opInfo filled by validatePrepayment for this userOp.\n @return collected the total amount this userOp paid."},"id":262,"implemented":true,"kind":"function","modifiers":[],"name":"_executeUserOp","nameLocation":"2140:14:1","nodeType":"FunctionDefinition","parameters":{"id":142,"nodeType":"ParameterList","parameters":[{"constant":false,"id":135,"mutability":"mutable","name":"opIndex","nameLocation":"2172:7:1","nodeType":"VariableDeclaration","scope":262,"src":"2164:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":134,"name":"uint256","nodeType":"ElementaryTypeName","src":"2164:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":138,"mutability":"mutable","name":"userOp","nameLocation":"2212:6:1","nodeType":"VariableDeclaration","scope":262,"src":"2189:29:1","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$3762_calldata_ptr","typeString":"struct UserOperation"},"typeName":{"id":137,"nodeType":"UserDefinedTypeName","pathNode":{"id":136,"name":"UserOperation","nameLocations":["2189:13:1"],"nodeType":"IdentifierPath","referencedDeclaration":3762,"src":"2189:13:1"},"referencedDeclaration":3762,"src":"2189:13:1","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$3762_storage_ptr","typeString":"struct UserOperation"}},"visibility":"internal"},{"constant":false,"id":141,"mutability":"mutable","name":"opInfo","nameLocation":"2246:6:1","nodeType":"VariableDeclaration","scope":262,"src":"2228:24:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_UserOpInfo_$825_memory_ptr","typeString":"struct EntryPoint.UserOpInfo"},"typeName":{"id":140,"nodeType":"UserDefinedTypeName","pathNode":{"id":139,"name":"UserOpInfo","nameLocations":["2228:10:1"],"nodeType":"IdentifierPath","referencedDeclaration":825,"src":"2228:10:1"},"referencedDeclaration":825,"src":"2228:10:1","typeDescriptions":{"typeIdentifier":"t_struct$_UserOpInfo_$825_storage_ptr","typeString":"struct EntryPoint.UserOpInfo"}},"visibility":"internal"}],"src":"2154:104:1"},"returnParameters":{"id":145,"nodeType":"ParameterList","parameters":[{"constant":false,"id":144,"mutability":"mutable","name":"collected","nameLocation":"2284:9:1","nodeType":"VariableDeclaration","scope":262,"src":"2276:17:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":143,"name":"uint256","nodeType":"ElementaryTypeName","src":"2276:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2275:19:1"},"scope":2517,"src":"2131:1612:1","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"baseFunctions":[3513],"body":{"id":417,"nodeType":"Block","src":"4251:1254:1","statements":[{"assignments":[275],"declarations":[{"constant":false,"id":275,"mutability":"mutable","name":"opslen","nameLocation":"4269:6:1","nodeType":"VariableDeclaration","scope":417,"src":"4261:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":274,"name":"uint256","nodeType":"ElementaryTypeName","src":"4261:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":278,"initialValue":{"expression":{"id":276,"name":"ops","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":267,"src":"4278:3:1","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_UserOperation_$3762_calldata_ptr_$dyn_calldata_ptr","typeString":"struct UserOperation calldata[] calldata"}},"id":277,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4282:6:1","memberName":"length","nodeType":"MemberAccess","src":"4278:10:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4261:27:1"},{"assignments":[283],"declarations":[{"constant":false,"id":283,"mutability":"mutable","name":"opInfos","nameLocation":"4318:7:1","nodeType":"VariableDeclaration","scope":417,"src":"4298:27:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_UserOpInfo_$825_memory_ptr_$dyn_memory_ptr","typeString":"struct EntryPoint.UserOpInfo[]"},"typeName":{"baseType":{"id":281,"nodeType":"UserDefinedTypeName","pathNode":{"id":280,"name":"UserOpInfo","nameLocations":["4298:10:1"],"nodeType":"IdentifierPath","referencedDeclaration":825,"src":"4298:10:1"},"referencedDeclaration":825,"src":"4298:10:1","typeDescriptions":{"typeIdentifier":"t_struct$_UserOpInfo_$825_storage_ptr","typeString":"struct EntryPoint.UserOpInfo"}},"id":282,"nodeType":"ArrayTypeName","src":"4298:12:1","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_UserOpInfo_$825_storage_$dyn_storage_ptr","typeString":"struct EntryPoint.UserOpInfo[]"}},"visibility":"internal"}],"id":290,"initialValue":{"arguments":[{"id":288,"name":"opslen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":275,"src":"4345:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":287,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"4328:16:1","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_struct$_UserOpInfo_$825_memory_ptr_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (struct EntryPoint.UserOpInfo memory[] memory)"},"typeName":{"baseType":{"id":285,"nodeType":"UserDefinedTypeName","pathNode":{"id":284,"name":"UserOpInfo","nameLocations":["4332:10:1"],"nodeType":"IdentifierPath","referencedDeclaration":825,"src":"4332:10:1"},"referencedDeclaration":825,"src":"4332:10:1","typeDescriptions":{"typeIdentifier":"t_struct$_UserOpInfo_$825_storage_ptr","typeString":"struct EntryPoint.UserOpInfo"}},"id":286,"nodeType":"ArrayTypeName","src":"4332:12:1","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_UserOpInfo_$825_storage_$dyn_storage_ptr","typeString":"struct EntryPoint.UserOpInfo[]"}}},"id":289,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4328:24:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_UserOpInfo_$825_memory_ptr_$dyn_memory_ptr","typeString":"struct EntryPoint.UserOpInfo memory[] memory"}},"nodeType":"VariableDeclarationStatement","src":"4298:54:1"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":295,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":292,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4370:3:1","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":293,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4374:5:1","memberName":"value","nodeType":"MemberAccess","src":"4370:9:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"31","id":294,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4382:1:1","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"4370:13:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"76616c7565206e6875206375742031","id":296,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4385:17:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_21d7d52f8d25c08d601b9b38561a0f66d70bd6f90958a0acf0d134d5f34a06d9","typeString":"literal_string \"value nhu cut 1\""},"value":"value nhu cut 1"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_21d7d52f8d25c08d601b9b38561a0f66d70bd6f90958a0acf0d134d5f34a06d9","typeString":"literal_string \"value nhu cut 1\""}],"id":291,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4362:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":297,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4362:41:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":298,"nodeType":"ExpressionStatement","src":"4362:41:1"},{"id":416,"nodeType":"UncheckedBlock","src":"4413:1074:1","statements":[{"body":{"id":362,"nodeType":"Block","src":"4474:625:1","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":313,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":310,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4500:3:1","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":311,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4504:5:1","memberName":"value","nodeType":"MemberAccess","src":"4500:9:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"32","id":312,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4512:1:1","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"4500:13:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"76616c7565206e6875206375742032","id":314,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4515:17:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_4d9e9b055f0409f809e9fec273740285c9e3cf0fc7f0a88399d768585018036e","typeString":"literal_string \"value nhu cut 2\""},"value":"value nhu cut 2"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_4d9e9b055f0409f809e9fec273740285c9e3cf0fc7f0a88399d768585018036e","typeString":"literal_string \"value nhu cut 2\""}],"id":309,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4492:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":315,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4492:41:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":316,"nodeType":"ExpressionStatement","src":"4492:41:1"},{"assignments":[319],"declarations":[{"constant":false,"id":319,"mutability":"mutable","name":"opInfo","nameLocation":"4569:6:1","nodeType":"VariableDeclaration","scope":362,"src":"4551:24:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_UserOpInfo_$825_memory_ptr","typeString":"struct EntryPoint.UserOpInfo"},"typeName":{"id":318,"nodeType":"UserDefinedTypeName","pathNode":{"id":317,"name":"UserOpInfo","nameLocations":["4551:10:1"],"nodeType":"IdentifierPath","referencedDeclaration":825,"src":"4551:10:1"},"referencedDeclaration":825,"src":"4551:10:1","typeDescriptions":{"typeIdentifier":"t_struct$_UserOpInfo_$825_storage_ptr","typeString":"struct EntryPoint.UserOpInfo"}},"visibility":"internal"}],"id":323,"initialValue":{"baseExpression":{"id":320,"name":"opInfos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":283,"src":"4578:7:1","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_UserOpInfo_$825_memory_ptr_$dyn_memory_ptr","typeString":"struct EntryPoint.UserOpInfo memory[] memory"}},"id":322,"indexExpression":{"id":321,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":300,"src":"4586:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4578:10:1","typeDescriptions":{"typeIdentifier":"t_struct$_UserOpInfo_$825_memory_ptr","typeString":"struct EntryPoint.UserOpInfo memory"}},"nodeType":"VariableDeclarationStatement","src":"4551:37:1"},{"assignments":[325,327],"declarations":[{"constant":false,"id":325,"mutability":"mutable","name":"validationData","nameLocation":"4636:14:1","nodeType":"VariableDeclaration","scope":362,"src":"4628:22:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":324,"name":"uint256","nodeType":"ElementaryTypeName","src":"4628:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":327,"mutability":"mutable","name":"pmValidationData","nameLocation":"4680:16:1","nodeType":"VariableDeclaration","scope":362,"src":"4672:24:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":326,"name":"uint256","nodeType":"ElementaryTypeName","src":"4672:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":335,"initialValue":{"arguments":[{"id":329,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":300,"src":"4737:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"baseExpression":{"id":330,"name":"ops","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":267,"src":"4740:3:1","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_UserOperation_$3762_calldata_ptr_$dyn_calldata_ptr","typeString":"struct UserOperation calldata[] calldata"}},"id":332,"indexExpression":{"id":331,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":300,"src":"4744:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4740:6:1","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$3762_calldata_ptr","typeString":"struct UserOperation calldata"}},{"id":333,"name":"opInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":319,"src":"4748:6:1","typeDescriptions":{"typeIdentifier":"t_struct$_UserOpInfo_$825_memory_ptr","typeString":"struct EntryPoint.UserOpInfo memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_struct$_UserOperation_$3762_calldata_ptr","typeString":"struct UserOperation calldata"},{"typeIdentifier":"t_struct$_UserOpInfo_$825_memory_ptr","typeString":"struct EntryPoint.UserOpInfo memory"}],"id":328,"name":"_validatePrepayment","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2251,"src":"4717:19:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$_t_struct$_UserOperation_$3762_calldata_ptr_$_t_struct$_UserOpInfo_$825_memory_ptr_$returns$_t_uint256_$_t_uint256_$","typeString":"function (uint256,struct UserOperation calldata,struct EntryPoint.UserOpInfo memory) returns (uint256,uint256)"}},"id":334,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4717:38:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"4606:149:1"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":340,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":337,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4781:3:1","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":338,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4785:5:1","memberName":"value","nodeType":"MemberAccess","src":"4781:9:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3136","id":339,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4793:2:1","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"4781:14:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"76616c7565206e687520637574203136","id":341,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4797:18:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_13c67aa814c1abc9fc5316480fa67d6f89eb2566a2e535229478c74386976d99","typeString":"literal_string \"value nhu cut 16\""},"value":"value nhu cut 16"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_13c67aa814c1abc9fc5316480fa67d6f89eb2566a2e535229478c74386976d99","typeString":"literal_string \"value nhu cut 16\""}],"id":336,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4773:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":342,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4773:43:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":343,"nodeType":"ExpressionStatement","src":"4773:43:1"},{"expression":{"arguments":[{"id":345,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":300,"src":"4898:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":346,"name":"validationData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":325,"src":"4921:14:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":347,"name":"pmValidationData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":327,"src":"4957:16:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"hexValue":"30","id":350,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5003:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":349,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4995:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":348,"name":"address","nodeType":"ElementaryTypeName","src":"4995:7:1","typeDescriptions":{}}},"id":351,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4995:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":344,"name":"_validateAccountAndPaymasterValidationData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1956,"src":"4834:42:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$_t_uint256_$_t_uint256_$_t_address_$returns$__$","typeString":"function (uint256,uint256,uint256,address) view"}},"id":352,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4834:189:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":353,"nodeType":"ExpressionStatement","src":"4834:189:1"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":358,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":355,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"5049:3:1","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":356,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5053:5:1","memberName":"value","nodeType":"MemberAccess","src":"5049:9:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3233","id":357,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5061:2:1","typeDescriptions":{"typeIdentifier":"t_rational_23_by_1","typeString":"int_const 23"},"value":"23"},"src":"5049:14:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"76616c7565206e687520637574203233","id":359,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5065:18:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_7ebb3996789ecd9e50af8304b26e2a3643e7f93f34c08a04bd6d0ae2a61a6a0a","typeString":"literal_string \"value nhu cut 23\""},"value":"value nhu cut 23"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_7ebb3996789ecd9e50af8304b26e2a3643e7f93f34c08a04bd6d0ae2a61a6a0a","typeString":"literal_string \"value nhu cut 23\""}],"id":354,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5041:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":360,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5041:43:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":361,"nodeType":"ExpressionStatement","src":"5041:43:1"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":305,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":303,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":300,"src":"4457:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":304,"name":"opslen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":275,"src":"4461:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4457:10:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":363,"initializationExpression":{"assignments":[300],"declarations":[{"constant":false,"id":300,"mutability":"mutable","name":"i","nameLocation":"4450:1:1","nodeType":"VariableDeclaration","scope":363,"src":"4442:9:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":299,"name":"uint256","nodeType":"ElementaryTypeName","src":"4442:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":302,"initialValue":{"hexValue":"30","id":301,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4454:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"4442:13:1"},"loopExpression":{"expression":{"id":307,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"4469:3:1","subExpression":{"id":306,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":300,"src":"4469:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":308,"nodeType":"ExpressionStatement","src":"4469:3:1"},"nodeType":"ForStatement","src":"4437:662:1"},{"assignments":[365],"declarations":[{"constant":false,"id":365,"mutability":"mutable","name":"collected","nameLocation":"5121:9:1","nodeType":"VariableDeclaration","scope":416,"src":"5113:17:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":364,"name":"uint256","nodeType":"ElementaryTypeName","src":"5113:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":367,"initialValue":{"hexValue":"30","id":366,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5133:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"5113:21:1"},{"eventCall":{"arguments":[],"expression":{"argumentTypes":[],"id":368,"name":"BeforeExecution","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3423,"src":"5153:15:1","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$__$returns$__$","typeString":"function ()"}},"id":369,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5153:17:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":370,"nodeType":"EmitStatement","src":"5148:22:1"},{"body":{"id":409,"nodeType":"Block","src":"5222:205:1","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":385,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":382,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"5248:3:1","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":383,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5252:5:1","memberName":"value","nodeType":"MemberAccess","src":"5248:9:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3234","id":384,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5260:2:1","typeDescriptions":{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},"value":"24"},"src":"5248:14:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"76616c7565206e687520637574203234","id":386,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5264:18:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_243ebad4c1e47ab01d748f5e540b7430c2fbc1dbe448698a78647a3a43c40760","typeString":"literal_string \"value nhu cut 24\""},"value":"value nhu cut 24"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_243ebad4c1e47ab01d748f5e540b7430c2fbc1dbe448698a78647a3a43c40760","typeString":"literal_string \"value nhu cut 24\""}],"id":381,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5240:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":387,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5240:43:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":388,"nodeType":"ExpressionStatement","src":"5240:43:1"},{"expression":{"id":399,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":389,"name":"collected","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":365,"src":"5301:9:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"arguments":[{"id":391,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":372,"src":"5329:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"baseExpression":{"id":392,"name":"ops","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":267,"src":"5332:3:1","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_UserOperation_$3762_calldata_ptr_$dyn_calldata_ptr","typeString":"struct UserOperation calldata[] calldata"}},"id":394,"indexExpression":{"id":393,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":372,"src":"5336:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5332:6:1","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$3762_calldata_ptr","typeString":"struct UserOperation calldata"}},{"baseExpression":{"id":395,"name":"opInfos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":283,"src":"5340:7:1","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_UserOpInfo_$825_memory_ptr_$dyn_memory_ptr","typeString":"struct EntryPoint.UserOpInfo memory[] memory"}},"id":397,"indexExpression":{"id":396,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":372,"src":"5348:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5340:10:1","typeDescriptions":{"typeIdentifier":"t_struct$_UserOpInfo_$825_memory_ptr","typeString":"struct EntryPoint.UserOpInfo memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_struct$_UserOperation_$3762_calldata_ptr","typeString":"struct UserOperation calldata"},{"typeIdentifier":"t_struct$_UserOpInfo_$825_memory_ptr","typeString":"struct EntryPoint.UserOpInfo memory"}],"id":390,"name":"_executeUserOp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":262,"src":"5314:14:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$_t_struct$_UserOperation_$3762_calldata_ptr_$_t_struct$_UserOpInfo_$825_memory_ptr_$returns$_t_uint256_$","typeString":"function (uint256,struct UserOperation calldata,struct EntryPoint.UserOpInfo memory) returns (uint256)"}},"id":398,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5314:37:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5301:50:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":400,"nodeType":"ExpressionStatement","src":"5301:50:1"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":405,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":402,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"5377:3:1","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":403,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5381:5:1","memberName":"value","nodeType":"MemberAccess","src":"5377:9:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3235","id":404,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5389:2:1","typeDescriptions":{"typeIdentifier":"t_rational_25_by_1","typeString":"int_const 25"},"value":"25"},"src":"5377:14:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"76616c7565206e687520637574203139","id":406,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5393:18:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_dccb4f5976e428c1dda7e4f71aab2a3deeb9a9fe8416aef558a54e04e17a2b61","typeString":"literal_string \"value nhu cut 19\""},"value":"value nhu cut 19"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_dccb4f5976e428c1dda7e4f71aab2a3deeb9a9fe8416aef558a54e04e17a2b61","typeString":"literal_string \"value nhu cut 19\""}],"id":401,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5369:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":407,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5369:43:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":408,"nodeType":"ExpressionStatement","src":"5369:43:1"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":377,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":375,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":372,"src":"5205:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":376,"name":"opslen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":275,"src":"5209:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5205:10:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":410,"initializationExpression":{"assignments":[372],"declarations":[{"constant":false,"id":372,"mutability":"mutable","name":"i","nameLocation":"5198:1:1","nodeType":"VariableDeclaration","scope":410,"src":"5190:9:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":371,"name":"uint256","nodeType":"ElementaryTypeName","src":"5190:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":374,"initialValue":{"hexValue":"30","id":373,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5202:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"5190:13:1"},"loopExpression":{"expression":{"id":379,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"5217:3:1","subExpression":{"id":378,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":372,"src":"5217:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":380,"nodeType":"ExpressionStatement","src":"5217:3:1"},"nodeType":"ForStatement","src":"5185:242:1"},{"expression":{"arguments":[{"id":412,"name":"beneficiary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":269,"src":"5453:11:1","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},{"id":413,"name":"collected","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":365,"src":"5466:9:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address_payable","typeString":"address payable"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":411,"name":"_compensate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":132,"src":"5441:11:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_payable_$_t_uint256_$returns$__$","typeString":"function (address payable,uint256)"}},"id":414,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5441:35:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":415,"nodeType":"ExpressionStatement","src":"5441:35:1"}]}]},"documentation":{"id":263,"nodeType":"StructuredDocumentation","src":"3749:369:1","text":" Execute a batch of UserOperations.\n no signature aggregator is used.\n if any account requires an aggregator (that is, it returned an aggregator when\n performing simulateValidation), then handleAggregatedOps() must be used instead.\n @param ops the operations to execute\n @param beneficiary the address to receive the fees"},"functionSelector":"1fad948c","id":418,"implemented":true,"kind":"function","modifiers":[{"id":272,"kind":"modifierInvocation","modifierName":{"id":271,"name":"nonReentrant","nameLocations":["4238:12:1"],"nodeType":"IdentifierPath","referencedDeclaration":29,"src":"4238:12:1"},"nodeType":"ModifierInvocation","src":"4238:12:1"}],"name":"handleOps","nameLocation":"4132:9:1","nodeType":"FunctionDefinition","parameters":{"id":270,"nodeType":"ParameterList","parameters":[{"constant":false,"id":267,"mutability":"mutable","name":"ops","nameLocation":"4176:3:1","nodeType":"VariableDeclaration","scope":418,"src":"4151:28:1","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_UserOperation_$3762_calldata_ptr_$dyn_calldata_ptr","typeString":"struct UserOperation[]"},"typeName":{"baseType":{"id":265,"nodeType":"UserDefinedTypeName","pathNode":{"id":264,"name":"UserOperation","nameLocations":["4151:13:1"],"nodeType":"IdentifierPath","referencedDeclaration":3762,"src":"4151:13:1"},"referencedDeclaration":3762,"src":"4151:13:1","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$3762_storage_ptr","typeString":"struct UserOperation"}},"id":266,"nodeType":"ArrayTypeName","src":"4151:15:1","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_UserOperation_$3762_storage_$dyn_storage_ptr","typeString":"struct UserOperation[]"}},"visibility":"internal"},{"constant":false,"id":269,"mutability":"mutable","name":"beneficiary","nameLocation":"4205:11:1","nodeType":"VariableDeclaration","scope":418,"src":"4189:27:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":268,"name":"address","nodeType":"ElementaryTypeName","src":"4189:15:1","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"}],"src":"4141:81:1"},"returnParameters":{"id":273,"nodeType":"ParameterList","parameters":[],"src":"4251:0:1"},"scope":2517,"src":"4123:1382:1","stateMutability":"payable","virtual":false,"visibility":"public"},{"baseFunctions":[3523],"body":{"id":707,"nodeType":"Block","src":"5915:2441:1","statements":[{"assignments":[431],"declarations":[{"constant":false,"id":431,"mutability":"mutable","name":"opasLen","nameLocation":"5933:7:1","nodeType":"VariableDeclaration","scope":707,"src":"5925:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":430,"name":"uint256","nodeType":"ElementaryTypeName","src":"5925:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":434,"initialValue":{"expression":{"id":432,"name":"opsPerAggregator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":423,"src":"5943:16:1","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_UserOpsPerAggregator_$3503_calldata_ptr_$dyn_calldata_ptr","typeString":"struct IEntryPoint.UserOpsPerAggregator calldata[] calldata"}},"id":433,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5960:6:1","memberName":"length","nodeType":"MemberAccess","src":"5943:23:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5925:41:1"},{"assignments":[436],"declarations":[{"constant":false,"id":436,"mutability":"mutable","name":"totalOps","nameLocation":"5984:8:1","nodeType":"VariableDeclaration","scope":707,"src":"5976:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":435,"name":"uint256","nodeType":"ElementaryTypeName","src":"5976:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":438,"initialValue":{"hexValue":"30","id":437,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5995:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"5976:20:1"},{"body":{"id":517,"nodeType":"Block","src":"6044:723:1","statements":[{"assignments":[451],"declarations":[{"constant":false,"id":451,"mutability":"mutable","name":"opa","nameLocation":"6088:3:1","nodeType":"VariableDeclaration","scope":517,"src":"6058:33:1","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_UserOpsPerAggregator_$3503_calldata_ptr","typeString":"struct IEntryPoint.UserOpsPerAggregator"},"typeName":{"id":450,"nodeType":"UserDefinedTypeName","pathNode":{"id":449,"name":"UserOpsPerAggregator","nameLocations":["6058:20:1"],"nodeType":"IdentifierPath","referencedDeclaration":3503,"src":"6058:20:1"},"referencedDeclaration":3503,"src":"6058:20:1","typeDescriptions":{"typeIdentifier":"t_struct$_UserOpsPerAggregator_$3503_storage_ptr","typeString":"struct IEntryPoint.UserOpsPerAggregator"}},"visibility":"internal"}],"id":455,"initialValue":{"baseExpression":{"id":452,"name":"opsPerAggregator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":423,"src":"6094:16:1","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_UserOpsPerAggregator_$3503_calldata_ptr_$dyn_calldata_ptr","typeString":"struct IEntryPoint.UserOpsPerAggregator calldata[] calldata"}},"id":454,"indexExpression":{"id":453,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":440,"src":"6111:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6094:19:1","typeDescriptions":{"typeIdentifier":"t_struct$_UserOpsPerAggregator_$3503_calldata_ptr","typeString":"struct IEntryPoint.UserOpsPerAggregator calldata"}},"nodeType":"VariableDeclarationStatement","src":"6058:55:1"},{"assignments":[460],"declarations":[{"constant":false,"id":460,"mutability":"mutable","name":"ops","nameLocation":"6152:3:1","nodeType":"VariableDeclaration","scope":517,"src":"6127:28:1","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_UserOperation_$3762_calldata_ptr_$dyn_calldata_ptr","typeString":"struct UserOperation[]"},"typeName":{"baseType":{"id":458,"nodeType":"UserDefinedTypeName","pathNode":{"id":457,"name":"UserOperation","nameLocations":["6127:13:1"],"nodeType":"IdentifierPath","referencedDeclaration":3762,"src":"6127:13:1"},"referencedDeclaration":3762,"src":"6127:13:1","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$3762_storage_ptr","typeString":"struct UserOperation"}},"id":459,"nodeType":"ArrayTypeName","src":"6127:15:1","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_UserOperation_$3762_storage_$dyn_storage_ptr","typeString":"struct UserOperation[]"}},"visibility":"internal"}],"id":463,"initialValue":{"expression":{"id":461,"name":"opa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":451,"src":"6158:3:1","typeDescriptions":{"typeIdentifier":"t_struct$_UserOpsPerAggregator_$3503_calldata_ptr","typeString":"struct IEntryPoint.UserOpsPerAggregator calldata"}},"id":462,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6162:7:1","memberName":"userOps","nodeType":"MemberAccess","referencedDeclaration":3497,"src":"6158:11:1","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_UserOperation_$3762_calldata_ptr_$dyn_calldata_ptr","typeString":"struct UserOperation calldata[] calldata"}},"nodeType":"VariableDeclarationStatement","src":"6127:42:1"},{"assignments":[466],"declarations":[{"constant":false,"id":466,"mutability":"mutable","name":"aggregator","nameLocation":"6195:10:1","nodeType":"VariableDeclaration","scope":517,"src":"6183:22:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IAggregator_$3372","typeString":"contract IAggregator"},"typeName":{"id":465,"nodeType":"UserDefinedTypeName","pathNode":{"id":464,"name":"IAggregator","nameLocations":["6183:11:1"],"nodeType":"IdentifierPath","referencedDeclaration":3372,"src":"6183:11:1"},"referencedDeclaration":3372,"src":"6183:11:1","typeDescriptions":{"typeIdentifier":"t_contract$_IAggregator_$3372","typeString":"contract IAggregator"}},"visibility":"internal"}],"id":469,"initialValue":{"expression":{"id":467,"name":"opa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":451,"src":"6208:3:1","typeDescriptions":{"typeIdentifier":"t_struct$_UserOpsPerAggregator_$3503_calldata_ptr","typeString":"struct IEntryPoint.UserOpsPerAggregator calldata"}},"id":468,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6212:10:1","memberName":"aggregator","nodeType":"MemberAccess","referencedDeclaration":3500,"src":"6208:14:1","typeDescriptions":{"typeIdentifier":"t_contract$_IAggregator_$3372","typeString":"contract IAggregator"}},"nodeType":"VariableDeclarationStatement","src":"6183:39:1"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":479,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":473,"name":"aggregator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":466,"src":"6334:10:1","typeDescriptions":{"typeIdentifier":"t_contract$_IAggregator_$3372","typeString":"contract IAggregator"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IAggregator_$3372","typeString":"contract IAggregator"}],"id":472,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6326:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":471,"name":"address","nodeType":"ElementaryTypeName","src":"6326:7:1","typeDescriptions":{}}},"id":474,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6326:19:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"31","id":477,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6357:1:1","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"}],"id":476,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6349:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":475,"name":"address","nodeType":"ElementaryTypeName","src":"6349:7:1","typeDescriptions":{}}},"id":478,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6349:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6326:33:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4141393620696e76616c69642061676772656761746f72","id":480,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6377:25:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_c7b85d163e4e98261caeed8e321f4ec192af622f53fd084234a04b236b40e883","typeString":"literal_string \"AA96 invalid aggregator\""},"value":"AA96 invalid aggregator"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_c7b85d163e4e98261caeed8e321f4ec192af622f53fd084234a04b236b40e883","typeString":"literal_string \"AA96 invalid aggregator\""}],"id":470,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6301:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":481,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6301:115:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":482,"nodeType":"ExpressionStatement","src":"6301:115:1"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":491,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":485,"name":"aggregator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":466,"src":"6443:10:1","typeDescriptions":{"typeIdentifier":"t_contract$_IAggregator_$3372","typeString":"contract IAggregator"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IAggregator_$3372","typeString":"contract IAggregator"}],"id":484,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6435:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":483,"name":"address","nodeType":"ElementaryTypeName","src":"6435:7:1","typeDescriptions":{}}},"id":486,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6435:19:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":489,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6466:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":488,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6458:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":487,"name":"address","nodeType":"ElementaryTypeName","src":"6458:7:1","typeDescriptions":{}}},"id":490,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6458:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6435:33:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":511,"nodeType":"IfStatement","src":"6431:289:1","trueBody":{"id":510,"nodeType":"Block","src":"6470:250:1","statements":[{"clauses":[{"block":{"id":498,"nodeType":"Block","src":"6603:2:1","statements":[]},"errorName":"","id":499,"nodeType":"TryCatchClause","src":"6603:2:1"},{"block":{"id":507,"nodeType":"Block","src":"6612:94:1","statements":[{"errorCall":{"arguments":[{"arguments":[{"id":503,"name":"aggregator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":466,"src":"6675:10:1","typeDescriptions":{"typeIdentifier":"t_contract$_IAggregator_$3372","typeString":"contract IAggregator"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IAggregator_$3372","typeString":"contract IAggregator"}],"id":502,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6667:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":501,"name":"address","nodeType":"ElementaryTypeName","src":"6667:7:1","typeDescriptions":{}}},"id":504,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6667:19:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":500,"name":"SignatureValidationFailed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3440,"src":"6641:25:1","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":505,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6641:46:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":506,"nodeType":"RevertStatement","src":"6634:53:1"}]},"errorName":"","id":508,"nodeType":"TryCatchClause","src":"6606:100:1"}],"externalCall":{"arguments":[{"id":494,"name":"ops","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":460,"src":"6583:3:1","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_UserOperation_$3762_calldata_ptr_$dyn_calldata_ptr","typeString":"struct UserOperation calldata[] calldata"}},{"expression":{"id":495,"name":"opa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":451,"src":"6588:3:1","typeDescriptions":{"typeIdentifier":"t_struct$_UserOpsPerAggregator_$3503_calldata_ptr","typeString":"struct IEntryPoint.UserOpsPerAggregator calldata"}},"id":496,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6592:9:1","memberName":"signature","nodeType":"MemberAccess","referencedDeclaration":3502,"src":"6588:13:1","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_UserOperation_$3762_calldata_ptr_$dyn_calldata_ptr","typeString":"struct UserOperation calldata[] calldata"},{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}],"expression":{"id":492,"name":"aggregator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":466,"src":"6553:10:1","typeDescriptions":{"typeIdentifier":"t_contract$_IAggregator_$3372","typeString":"contract IAggregator"}},"id":493,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6564:18:1","memberName":"validateSignatures","nodeType":"MemberAccess","referencedDeclaration":3352,"src":"6553:29:1","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_array$_t_struct$_UserOperation_$3762_memory_ptr_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (struct UserOperation memory[] memory,bytes memory) view external"}},"id":497,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6553:49:1","tryCall":true,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":509,"nodeType":"TryStatement","src":"6549:157:1"}]}},{"expression":{"id":515,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":512,"name":"totalOps","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":436,"src":"6734:8:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"expression":{"id":513,"name":"ops","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":460,"src":"6746:3:1","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_UserOperation_$3762_calldata_ptr_$dyn_calldata_ptr","typeString":"struct UserOperation calldata[] calldata"}},"id":514,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6750:6:1","memberName":"length","nodeType":"MemberAccess","src":"6746:10:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6734:22:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":516,"nodeType":"ExpressionStatement","src":"6734:22:1"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":445,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":443,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":440,"src":"6026:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":444,"name":"opasLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":431,"src":"6030:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6026:11:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":518,"initializationExpression":{"assignments":[440],"declarations":[{"constant":false,"id":440,"mutability":"mutable","name":"i","nameLocation":"6019:1:1","nodeType":"VariableDeclaration","scope":518,"src":"6011:9:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":439,"name":"uint256","nodeType":"ElementaryTypeName","src":"6011:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":442,"initialValue":{"hexValue":"30","id":441,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6023:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"6011:13:1"},"loopExpression":{"expression":{"id":447,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"6039:3:1","subExpression":{"id":446,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":440,"src":"6039:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":448,"nodeType":"ExpressionStatement","src":"6039:3:1"},"nodeType":"ForStatement","src":"6006:761:1"},{"assignments":[523],"declarations":[{"constant":false,"id":523,"mutability":"mutable","name":"opInfos","nameLocation":"6797:7:1","nodeType":"VariableDeclaration","scope":707,"src":"6777:27:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_UserOpInfo_$825_memory_ptr_$dyn_memory_ptr","typeString":"struct EntryPoint.UserOpInfo[]"},"typeName":{"baseType":{"id":521,"nodeType":"UserDefinedTypeName","pathNode":{"id":520,"name":"UserOpInfo","nameLocations":["6777:10:1"],"nodeType":"IdentifierPath","referencedDeclaration":825,"src":"6777:10:1"},"referencedDeclaration":825,"src":"6777:10:1","typeDescriptions":{"typeIdentifier":"t_struct$_UserOpInfo_$825_storage_ptr","typeString":"struct EntryPoint.UserOpInfo"}},"id":522,"nodeType":"ArrayTypeName","src":"6777:12:1","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_UserOpInfo_$825_storage_$dyn_storage_ptr","typeString":"struct EntryPoint.UserOpInfo[]"}},"visibility":"internal"}],"id":530,"initialValue":{"arguments":[{"id":528,"name":"totalOps","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":436,"src":"6824:8:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":527,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"6807:16:1","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_struct$_UserOpInfo_$825_memory_ptr_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (struct EntryPoint.UserOpInfo memory[] memory)"},"typeName":{"baseType":{"id":525,"nodeType":"UserDefinedTypeName","pathNode":{"id":524,"name":"UserOpInfo","nameLocations":["6811:10:1"],"nodeType":"IdentifierPath","referencedDeclaration":825,"src":"6811:10:1"},"referencedDeclaration":825,"src":"6811:10:1","typeDescriptions":{"typeIdentifier":"t_struct$_UserOpInfo_$825_storage_ptr","typeString":"struct EntryPoint.UserOpInfo"}},"id":526,"nodeType":"ArrayTypeName","src":"6811:12:1","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_UserOpInfo_$825_storage_$dyn_storage_ptr","typeString":"struct EntryPoint.UserOpInfo[]"}}},"id":529,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6807:26:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_UserOpInfo_$825_memory_ptr_$dyn_memory_ptr","typeString":"struct EntryPoint.UserOpInfo memory[] memory"}},"nodeType":"VariableDeclarationStatement","src":"6777:56:1"},{"eventCall":{"arguments":[],"expression":{"argumentTypes":[],"id":531,"name":"BeforeExecution","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3423,"src":"6849:15:1","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$__$returns$__$","typeString":"function ()"}},"id":532,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6849:17:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":533,"nodeType":"EmitStatement","src":"6844:22:1"},{"assignments":[535],"declarations":[{"constant":false,"id":535,"mutability":"mutable","name":"opIndex","nameLocation":"6885:7:1","nodeType":"VariableDeclaration","scope":707,"src":"6877:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":534,"name":"uint256","nodeType":"ElementaryTypeName","src":"6877:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":537,"initialValue":{"hexValue":"30","id":536,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6895:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"6877:19:1"},{"body":{"id":618,"nodeType":"Block","src":"6944:787:1","statements":[{"assignments":[550],"declarations":[{"constant":false,"id":550,"mutability":"mutable","name":"opa","nameLocation":"6988:3:1","nodeType":"VariableDeclaration","scope":618,"src":"6958:33:1","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_UserOpsPerAggregator_$3503_calldata_ptr","typeString":"struct IEntryPoint.UserOpsPerAggregator"},"typeName":{"id":549,"nodeType":"UserDefinedTypeName","pathNode":{"id":548,"name":"UserOpsPerAggregator","nameLocations":["6958:20:1"],"nodeType":"IdentifierPath","referencedDeclaration":3503,"src":"6958:20:1"},"referencedDeclaration":3503,"src":"6958:20:1","typeDescriptions":{"typeIdentifier":"t_struct$_UserOpsPerAggregator_$3503_storage_ptr","typeString":"struct IEntryPoint.UserOpsPerAggregator"}},"visibility":"internal"}],"id":554,"initialValue":{"baseExpression":{"id":551,"name":"opsPerAggregator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":423,"src":"6994:16:1","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_UserOpsPerAggregator_$3503_calldata_ptr_$dyn_calldata_ptr","typeString":"struct IEntryPoint.UserOpsPerAggregator calldata[] calldata"}},"id":553,"indexExpression":{"id":552,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":539,"src":"7011:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6994:19:1","typeDescriptions":{"typeIdentifier":"t_struct$_UserOpsPerAggregator_$3503_calldata_ptr","typeString":"struct IEntryPoint.UserOpsPerAggregator calldata"}},"nodeType":"VariableDeclarationStatement","src":"6958:55:1"},{"assignments":[559],"declarations":[{"constant":false,"id":559,"mutability":"mutable","name":"ops","nameLocation":"7052:3:1","nodeType":"VariableDeclaration","scope":618,"src":"7027:28:1","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_UserOperation_$3762_calldata_ptr_$dyn_calldata_ptr","typeString":"struct UserOperation[]"},"typeName":{"baseType":{"id":557,"nodeType":"UserDefinedTypeName","pathNode":{"id":556,"name":"UserOperation","nameLocations":["7027:13:1"],"nodeType":"IdentifierPath","referencedDeclaration":3762,"src":"7027:13:1"},"referencedDeclaration":3762,"src":"7027:13:1","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$3762_storage_ptr","typeString":"struct UserOperation"}},"id":558,"nodeType":"ArrayTypeName","src":"7027:15:1","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_UserOperation_$3762_storage_$dyn_storage_ptr","typeString":"struct UserOperation[]"}},"visibility":"internal"}],"id":562,"initialValue":{"expression":{"id":560,"name":"opa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":550,"src":"7058:3:1","typeDescriptions":{"typeIdentifier":"t_struct$_UserOpsPerAggregator_$3503_calldata_ptr","typeString":"struct IEntryPoint.UserOpsPerAggregator calldata"}},"id":561,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7062:7:1","memberName":"userOps","nodeType":"MemberAccess","referencedDeclaration":3497,"src":"7058:11:1","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_UserOperation_$3762_calldata_ptr_$dyn_calldata_ptr","typeString":"struct UserOperation calldata[] calldata"}},"nodeType":"VariableDeclarationStatement","src":"7027:42:1"},{"assignments":[565],"declarations":[{"constant":false,"id":565,"mutability":"mutable","name":"aggregator","nameLocation":"7095:10:1","nodeType":"VariableDeclaration","scope":618,"src":"7083:22:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IAggregator_$3372","typeString":"contract IAggregator"},"typeName":{"id":564,"nodeType":"UserDefinedTypeName","pathNode":{"id":563,"name":"IAggregator","nameLocations":["7083:11:1"],"nodeType":"IdentifierPath","referencedDeclaration":3372,"src":"7083:11:1"},"referencedDeclaration":3372,"src":"7083:11:1","typeDescriptions":{"typeIdentifier":"t_contract$_IAggregator_$3372","typeString":"contract IAggregator"}},"visibility":"internal"}],"id":568,"initialValue":{"expression":{"id":566,"name":"opa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":550,"src":"7108:3:1","typeDescriptions":{"typeIdentifier":"t_struct$_UserOpsPerAggregator_$3503_calldata_ptr","typeString":"struct IEntryPoint.UserOpsPerAggregator calldata"}},"id":567,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7112:10:1","memberName":"aggregator","nodeType":"MemberAccess","referencedDeclaration":3500,"src":"7108:14:1","typeDescriptions":{"typeIdentifier":"t_contract$_IAggregator_$3372","typeString":"contract IAggregator"}},"nodeType":"VariableDeclarationStatement","src":"7083:39:1"},{"assignments":[570],"declarations":[{"constant":false,"id":570,"mutability":"mutable","name":"opslen","nameLocation":"7145:6:1","nodeType":"VariableDeclaration","scope":618,"src":"7137:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":569,"name":"uint256","nodeType":"ElementaryTypeName","src":"7137:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":573,"initialValue":{"expression":{"id":571,"name":"ops","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":559,"src":"7154:3:1","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_UserOperation_$3762_calldata_ptr_$dyn_calldata_ptr","typeString":"struct UserOperation calldata[] calldata"}},"id":572,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7158:6:1","memberName":"length","nodeType":"MemberAccess","src":"7154:10:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7137:27:1"},{"body":{"id":616,"nodeType":"Block","src":"7215:506:1","statements":[{"assignments":[586],"declarations":[{"constant":false,"id":586,"mutability":"mutable","name":"opInfo","nameLocation":"7251:6:1","nodeType":"VariableDeclaration","scope":616,"src":"7233:24:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_UserOpInfo_$825_memory_ptr","typeString":"struct EntryPoint.UserOpInfo"},"typeName":{"id":585,"nodeType":"UserDefinedTypeName","pathNode":{"id":584,"name":"UserOpInfo","nameLocations":["7233:10:1"],"nodeType":"IdentifierPath","referencedDeclaration":825,"src":"7233:10:1"},"referencedDeclaration":825,"src":"7233:10:1","typeDescriptions":{"typeIdentifier":"t_struct$_UserOpInfo_$825_storage_ptr","typeString":"struct EntryPoint.UserOpInfo"}},"visibility":"internal"}],"id":590,"initialValue":{"baseExpression":{"id":587,"name":"opInfos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":523,"src":"7260:7:1","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_UserOpInfo_$825_memory_ptr_$dyn_memory_ptr","typeString":"struct EntryPoint.UserOpInfo memory[] memory"}},"id":589,"indexExpression":{"id":588,"name":"opIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":535,"src":"7268:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7260:16:1","typeDescriptions":{"typeIdentifier":"t_struct$_UserOpInfo_$825_memory_ptr","typeString":"struct EntryPoint.UserOpInfo memory"}},"nodeType":"VariableDeclarationStatement","src":"7233:43:1"},{"assignments":[592,594],"declarations":[{"constant":false,"id":592,"mutability":"mutable","name":"validationData","nameLocation":"7324:14:1","nodeType":"VariableDeclaration","scope":616,"src":"7316:22:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":591,"name":"uint256","nodeType":"ElementaryTypeName","src":"7316:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":594,"mutability":"mutable","name":"paymasterValidationData","nameLocation":"7368:23:1","nodeType":"VariableDeclaration","scope":616,"src":"7360:31:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":593,"name":"uint256","nodeType":"ElementaryTypeName","src":"7360:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":602,"initialValue":{"arguments":[{"id":596,"name":"opIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":535,"src":"7432:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"baseExpression":{"id":597,"name":"ops","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":559,"src":"7441:3:1","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_UserOperation_$3762_calldata_ptr_$dyn_calldata_ptr","typeString":"struct UserOperation calldata[] calldata"}},"id":599,"indexExpression":{"id":598,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":575,"src":"7445:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7441:6:1","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$3762_calldata_ptr","typeString":"struct UserOperation calldata"}},{"id":600,"name":"opInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":586,"src":"7449:6:1","typeDescriptions":{"typeIdentifier":"t_struct$_UserOpInfo_$825_memory_ptr","typeString":"struct EntryPoint.UserOpInfo memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_struct$_UserOperation_$3762_calldata_ptr","typeString":"struct UserOperation calldata"},{"typeIdentifier":"t_struct$_UserOpInfo_$825_memory_ptr","typeString":"struct EntryPoint.UserOpInfo memory"}],"id":595,"name":"_validatePrepayment","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2251,"src":"7412:19:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$_t_struct$_UserOperation_$3762_calldata_ptr_$_t_struct$_UserOpInfo_$825_memory_ptr_$returns$_t_uint256_$_t_uint256_$","typeString":"function (uint256,struct UserOperation calldata,struct EntryPoint.UserOpInfo memory) returns (uint256,uint256)"}},"id":601,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7412:44:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"7294:162:1"},{"expression":{"arguments":[{"id":604,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":575,"src":"7538:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":605,"name":"validationData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":592,"src":"7561:14:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":606,"name":"paymasterValidationData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":594,"src":"7597:23:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":609,"name":"aggregator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":565,"src":"7650:10:1","typeDescriptions":{"typeIdentifier":"t_contract$_IAggregator_$3372","typeString":"contract IAggregator"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IAggregator_$3372","typeString":"contract IAggregator"}],"id":608,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7642:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":607,"name":"address","nodeType":"ElementaryTypeName","src":"7642:7:1","typeDescriptions":{}}},"id":610,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7642:19:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":603,"name":"_validateAccountAndPaymasterValidationData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1956,"src":"7474:42:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$_t_uint256_$_t_uint256_$_t_address_$returns$__$","typeString":"function (uint256,uint256,uint256,address) view"}},"id":611,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7474:205:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":612,"nodeType":"ExpressionStatement","src":"7474:205:1"},{"expression":{"id":614,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"7697:9:1","subExpression":{"id":613,"name":"opIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":535,"src":"7697:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":615,"nodeType":"ExpressionStatement","src":"7697:9:1"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":580,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":578,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":575,"src":"7198:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":579,"name":"opslen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":570,"src":"7202:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7198:10:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":617,"initializationExpression":{"assignments":[575],"declarations":[{"constant":false,"id":575,"mutability":"mutable","name":"i","nameLocation":"7191:1:1","nodeType":"VariableDeclaration","scope":617,"src":"7183:9:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":574,"name":"uint256","nodeType":"ElementaryTypeName","src":"7183:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":577,"initialValue":{"hexValue":"30","id":576,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7195:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"7183:13:1"},"loopExpression":{"expression":{"id":582,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"7210:3:1","subExpression":{"id":581,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":575,"src":"7210:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":583,"nodeType":"ExpressionStatement","src":"7210:3:1"},"nodeType":"ForStatement","src":"7178:543:1"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":544,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":542,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":539,"src":"6926:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":543,"name":"opasLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":431,"src":"6930:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6926:11:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":619,"initializationExpression":{"assignments":[539],"declarations":[{"constant":false,"id":539,"mutability":"mutable","name":"a","nameLocation":"6919:1:1","nodeType":"VariableDeclaration","scope":619,"src":"6911:9:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":538,"name":"uint256","nodeType":"ElementaryTypeName","src":"6911:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":541,"initialValue":{"hexValue":"30","id":540,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6923:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"6911:13:1"},"loopExpression":{"expression":{"id":546,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"6939:3:1","subExpression":{"id":545,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":539,"src":"6939:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":547,"nodeType":"ExpressionStatement","src":"6939:3:1"},"nodeType":"ForStatement","src":"6906:825:1"},{"assignments":[621],"declarations":[{"constant":false,"id":621,"mutability":"mutable","name":"collected","nameLocation":"7749:9:1","nodeType":"VariableDeclaration","scope":707,"src":"7741:17:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":620,"name":"uint256","nodeType":"ElementaryTypeName","src":"7741:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":623,"initialValue":{"hexValue":"30","id":622,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7761:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"7741:21:1"},{"expression":{"id":626,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":624,"name":"opIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":535,"src":"7772:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":625,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7782:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7772:11:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":627,"nodeType":"ExpressionStatement","src":"7772:11:1"},{"body":{"id":693,"nodeType":"Block","src":"7831:420:1","statements":[{"assignments":[640],"declarations":[{"constant":false,"id":640,"mutability":"mutable","name":"opa","nameLocation":"7875:3:1","nodeType":"VariableDeclaration","scope":693,"src":"7845:33:1","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_UserOpsPerAggregator_$3503_calldata_ptr","typeString":"struct IEntryPoint.UserOpsPerAggregator"},"typeName":{"id":639,"nodeType":"UserDefinedTypeName","pathNode":{"id":638,"name":"UserOpsPerAggregator","nameLocations":["7845:20:1"],"nodeType":"IdentifierPath","referencedDeclaration":3503,"src":"7845:20:1"},"referencedDeclaration":3503,"src":"7845:20:1","typeDescriptions":{"typeIdentifier":"t_struct$_UserOpsPerAggregator_$3503_storage_ptr","typeString":"struct IEntryPoint.UserOpsPerAggregator"}},"visibility":"internal"}],"id":644,"initialValue":{"baseExpression":{"id":641,"name":"opsPerAggregator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":423,"src":"7881:16:1","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_UserOpsPerAggregator_$3503_calldata_ptr_$dyn_calldata_ptr","typeString":"struct IEntryPoint.UserOpsPerAggregator calldata[] calldata"}},"id":643,"indexExpression":{"id":642,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":629,"src":"7898:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7881:19:1","typeDescriptions":{"typeIdentifier":"t_struct$_UserOpsPerAggregator_$3503_calldata_ptr","typeString":"struct IEntryPoint.UserOpsPerAggregator calldata"}},"nodeType":"VariableDeclarationStatement","src":"7845:55:1"},{"eventCall":{"arguments":[{"arguments":[{"expression":{"id":648,"name":"opa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":640,"src":"7954:3:1","typeDescriptions":{"typeIdentifier":"t_struct$_UserOpsPerAggregator_$3503_calldata_ptr","typeString":"struct IEntryPoint.UserOpsPerAggregator calldata"}},"id":649,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7958:10:1","memberName":"aggregator","nodeType":"MemberAccess","referencedDeclaration":3500,"src":"7954:14:1","typeDescriptions":{"typeIdentifier":"t_contract$_IAggregator_$3372","typeString":"contract IAggregator"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IAggregator_$3372","typeString":"contract IAggregator"}],"id":647,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7946:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":646,"name":"address","nodeType":"ElementaryTypeName","src":"7946:7:1","typeDescriptions":{}}},"id":650,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7946:23:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":645,"name":"SignatureAggregatorChanged","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3428,"src":"7919:26:1","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":651,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7919:51:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":652,"nodeType":"EmitStatement","src":"7914:56:1"},{"assignments":[657],"declarations":[{"constant":false,"id":657,"mutability":"mutable","name":"ops","nameLocation":"8009:3:1","nodeType":"VariableDeclaration","scope":693,"src":"7984:28:1","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_UserOperation_$3762_calldata_ptr_$dyn_calldata_ptr","typeString":"struct UserOperation[]"},"typeName":{"baseType":{"id":655,"nodeType":"UserDefinedTypeName","pathNode":{"id":654,"name":"UserOperation","nameLocations":["7984:13:1"],"nodeType":"IdentifierPath","referencedDeclaration":3762,"src":"7984:13:1"},"referencedDeclaration":3762,"src":"7984:13:1","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$3762_storage_ptr","typeString":"struct UserOperation"}},"id":656,"nodeType":"ArrayTypeName","src":"7984:15:1","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_UserOperation_$3762_storage_$dyn_storage_ptr","typeString":"struct UserOperation[]"}},"visibility":"internal"}],"id":660,"initialValue":{"expression":{"id":658,"name":"opa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":640,"src":"8015:3:1","typeDescriptions":{"typeIdentifier":"t_struct$_UserOpsPerAggregator_$3503_calldata_ptr","typeString":"struct IEntryPoint.UserOpsPerAggregator calldata"}},"id":659,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8019:7:1","memberName":"userOps","nodeType":"MemberAccess","referencedDeclaration":3497,"src":"8015:11:1","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_UserOperation_$3762_calldata_ptr_$dyn_calldata_ptr","typeString":"struct UserOperation calldata[] calldata"}},"nodeType":"VariableDeclarationStatement","src":"7984:42:1"},{"assignments":[662],"declarations":[{"constant":false,"id":662,"mutability":"mutable","name":"opslen","nameLocation":"8048:6:1","nodeType":"VariableDeclaration","scope":693,"src":"8040:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":661,"name":"uint256","nodeType":"ElementaryTypeName","src":"8040:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":665,"initialValue":{"expression":{"id":663,"name":"ops","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":657,"src":"8057:3:1","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_UserOperation_$3762_calldata_ptr_$dyn_calldata_ptr","typeString":"struct UserOperation calldata[] calldata"}},"id":664,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8061:6:1","memberName":"length","nodeType":"MemberAccess","src":"8057:10:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8040:27:1"},{"body":{"id":691,"nodeType":"Block","src":"8119:122:1","statements":[{"expression":{"id":686,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":676,"name":"collected","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":621,"src":"8137:9:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"arguments":[{"id":678,"name":"opIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":535,"src":"8165:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"baseExpression":{"id":679,"name":"ops","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":657,"src":"8174:3:1","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_UserOperation_$3762_calldata_ptr_$dyn_calldata_ptr","typeString":"struct UserOperation calldata[] calldata"}},"id":681,"indexExpression":{"id":680,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":667,"src":"8178:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8174:6:1","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$3762_calldata_ptr","typeString":"struct UserOperation calldata"}},{"baseExpression":{"id":682,"name":"opInfos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":523,"src":"8182:7:1","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_UserOpInfo_$825_memory_ptr_$dyn_memory_ptr","typeString":"struct EntryPoint.UserOpInfo memory[] memory"}},"id":684,"indexExpression":{"id":683,"name":"opIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":535,"src":"8190:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8182:16:1","typeDescriptions":{"typeIdentifier":"t_struct$_UserOpInfo_$825_memory_ptr","typeString":"struct EntryPoint.UserOpInfo memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_struct$_UserOperation_$3762_calldata_ptr","typeString":"struct UserOperation calldata"},{"typeIdentifier":"t_struct$_UserOpInfo_$825_memory_ptr","typeString":"struct EntryPoint.UserOpInfo memory"}],"id":677,"name":"_executeUserOp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":262,"src":"8150:14:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$_t_struct$_UserOperation_$3762_calldata_ptr_$_t_struct$_UserOpInfo_$825_memory_ptr_$returns$_t_uint256_$","typeString":"function (uint256,struct UserOperation calldata,struct EntryPoint.UserOpInfo memory) returns (uint256)"}},"id":685,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8150:49:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8137:62:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":687,"nodeType":"ExpressionStatement","src":"8137:62:1"},{"expression":{"id":689,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"8217:9:1","subExpression":{"id":688,"name":"opIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":535,"src":"8217:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":690,"nodeType":"ExpressionStatement","src":"8217:9:1"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":672,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":670,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":667,"src":"8102:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":671,"name":"opslen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":662,"src":"8106:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8102:10:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":692,"initializationExpression":{"assignments":[667],"declarations":[{"constant":false,"id":667,"mutability":"mutable","name":"i","nameLocation":"8095:1:1","nodeType":"VariableDeclaration","scope":692,"src":"8087:9:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":666,"name":"uint256","nodeType":"ElementaryTypeName","src":"8087:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":669,"initialValue":{"hexValue":"30","id":668,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8099:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"8087:13:1"},"loopExpression":{"expression":{"id":674,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"8114:3:1","subExpression":{"id":673,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":667,"src":"8114:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":675,"nodeType":"ExpressionStatement","src":"8114:3:1"},"nodeType":"ForStatement","src":"8082:159:1"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":634,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":632,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":629,"src":"7813:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":633,"name":"opasLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":431,"src":"7817:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7813:11:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":694,"initializationExpression":{"assignments":[629],"declarations":[{"constant":false,"id":629,"mutability":"mutable","name":"a","nameLocation":"7806:1:1","nodeType":"VariableDeclaration","scope":694,"src":"7798:9:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":628,"name":"uint256","nodeType":"ElementaryTypeName","src":"7798:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":631,"initialValue":{"hexValue":"30","id":630,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7810:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"7798:13:1"},"loopExpression":{"expression":{"id":636,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"7826:3:1","subExpression":{"id":635,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":629,"src":"7826:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":637,"nodeType":"ExpressionStatement","src":"7826:3:1"},"nodeType":"ForStatement","src":"7793:458:1"},{"eventCall":{"arguments":[{"arguments":[{"hexValue":"30","id":698,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8300:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":697,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8292:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":696,"name":"address","nodeType":"ElementaryTypeName","src":"8292:7:1","typeDescriptions":{}}},"id":699,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8292:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":695,"name":"SignatureAggregatorChanged","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3428,"src":"8265:26:1","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":700,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8265:38:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":701,"nodeType":"EmitStatement","src":"8260:43:1"},{"expression":{"arguments":[{"id":703,"name":"beneficiary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":425,"src":"8326:11:1","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},{"id":704,"name":"collected","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":621,"src":"8339:9:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address_payable","typeString":"address payable"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":702,"name":"_compensate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":132,"src":"8314:11:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_payable_$_t_uint256_$returns$__$","typeString":"function (address payable,uint256)"}},"id":705,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8314:35:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":706,"nodeType":"ExpressionStatement","src":"8314:35:1"}]},"documentation":{"id":419,"nodeType":"StructuredDocumentation","src":"5511:249:1","text":" Execute a batch of UserOperation with Aggregators\n @param opsPerAggregator the operations to execute, grouped by aggregator (or address(0) for no-aggregator accounts)\n @param beneficiary the address to receive the fees"},"functionSelector":"4b1d7cf5","id":708,"implemented":true,"kind":"function","modifiers":[{"id":428,"kind":"modifierInvocation","modifierName":{"id":427,"name":"nonReentrant","nameLocations":["5902:12:1"],"nodeType":"IdentifierPath","referencedDeclaration":29,"src":"5902:12:1"},"nodeType":"ModifierInvocation","src":"5902:12:1"}],"name":"handleAggregatedOps","nameLocation":"5774:19:1","nodeType":"FunctionDefinition","parameters":{"id":426,"nodeType":"ParameterList","parameters":[{"constant":false,"id":423,"mutability":"mutable","name":"opsPerAggregator","nameLocation":"5835:16:1","nodeType":"VariableDeclaration","scope":708,"src":"5803:48:1","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_UserOpsPerAggregator_$3503_calldata_ptr_$dyn_calldata_ptr","typeString":"struct IEntryPoint.UserOpsPerAggregator[]"},"typeName":{"baseType":{"id":421,"nodeType":"UserDefinedTypeName","pathNode":{"id":420,"name":"UserOpsPerAggregator","nameLocations":["5803:20:1"],"nodeType":"IdentifierPath","referencedDeclaration":3503,"src":"5803:20:1"},"referencedDeclaration":3503,"src":"5803:20:1","typeDescriptions":{"typeIdentifier":"t_struct$_UserOpsPerAggregator_$3503_storage_ptr","typeString":"struct IEntryPoint.UserOpsPerAggregator"}},"id":422,"nodeType":"ArrayTypeName","src":"5803:22:1","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_UserOpsPerAggregator_$3503_storage_$dyn_storage_ptr","typeString":"struct IEntryPoint.UserOpsPerAggregator[]"}},"visibility":"internal"},{"constant":false,"id":425,"mutability":"mutable","name":"beneficiary","nameLocation":"5877:11:1","nodeType":"VariableDeclaration","scope":708,"src":"5861:27:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":424,"name":"address","nodeType":"ElementaryTypeName","src":"5861:15:1","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"}],"src":"5793:101:1"},"returnParameters":{"id":429,"nodeType":"ParameterList","parameters":[],"src":"5915:0:1"},"scope":2517,"src":"5765:2591:1","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"baseFunctions":[3575],"body":{"id":795,"nodeType":"Block","src":"8542:837:1","statements":[{"assignments":[722],"declarations":[{"constant":false,"id":722,"mutability":"mutable","name":"opInfo","nameLocation":"8570:6:1","nodeType":"VariableDeclaration","scope":795,"src":"8552:24:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_UserOpInfo_$825_memory_ptr","typeString":"struct EntryPoint.UserOpInfo"},"typeName":{"id":721,"nodeType":"UserDefinedTypeName","pathNode":{"id":720,"name":"UserOpInfo","nameLocations":["8552:10:1"],"nodeType":"IdentifierPath","referencedDeclaration":825,"src":"8552:10:1"},"referencedDeclaration":825,"src":"8552:10:1","typeDescriptions":{"typeIdentifier":"t_struct$_UserOpInfo_$825_storage_ptr","typeString":"struct EntryPoint.UserOpInfo"}},"visibility":"internal"}],"id":723,"nodeType":"VariableDeclarationStatement","src":"8552:24:1"},{"expression":{"arguments":[{"id":725,"name":"op","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":712,"src":"8613:2:1","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$3762_calldata_ptr","typeString":"struct UserOperation calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_UserOperation_$3762_calldata_ptr","typeString":"struct UserOperation calldata"}],"id":724,"name":"_simulationOnlyValidations","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1471,"src":"8586:26:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_UserOperation_$3762_calldata_ptr_$returns$__$","typeString":"function (struct UserOperation calldata) view"}},"id":726,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8586:30:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":727,"nodeType":"ExpressionStatement","src":"8586:30:1"},{"assignments":[729,731],"declarations":[{"constant":false,"id":729,"mutability":"mutable","name":"validationData","nameLocation":"8648:14:1","nodeType":"VariableDeclaration","scope":795,"src":"8640:22:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":728,"name":"uint256","nodeType":"ElementaryTypeName","src":"8640:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":731,"mutability":"mutable","name":"paymasterValidationData","nameLocation":"8684:23:1","nodeType":"VariableDeclaration","scope":795,"src":"8676:31:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":730,"name":"uint256","nodeType":"ElementaryTypeName","src":"8676:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":737,"initialValue":{"arguments":[{"hexValue":"30","id":733,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8740:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"id":734,"name":"op","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":712,"src":"8743:2:1","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$3762_calldata_ptr","typeString":"struct UserOperation calldata"}},{"id":735,"name":"opInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":722,"src":"8747:6:1","typeDescriptions":{"typeIdentifier":"t_struct$_UserOpInfo_$825_memory_ptr","typeString":"struct EntryPoint.UserOpInfo memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_struct$_UserOperation_$3762_calldata_ptr","typeString":"struct UserOperation calldata"},{"typeIdentifier":"t_struct$_UserOpInfo_$825_memory_ptr","typeString":"struct EntryPoint.UserOpInfo memory"}],"id":732,"name":"_validatePrepayment","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2251,"src":"8720:19:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$_t_struct$_UserOperation_$3762_calldata_ptr_$_t_struct$_UserOpInfo_$825_memory_ptr_$returns$_t_uint256_$_t_uint256_$","typeString":"function (uint256,struct UserOperation calldata,struct EntryPoint.UserOpInfo memory) returns (uint256,uint256)"}},"id":736,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8720:34:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"8626:128:1"},{"assignments":[740],"declarations":[{"constant":false,"id":740,"mutability":"mutable","name":"data","nameLocation":"8786:4:1","nodeType":"VariableDeclaration","scope":795,"src":"8764:26:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_ValidationData_$2526_memory_ptr","typeString":"struct ValidationData"},"typeName":{"id":739,"nodeType":"UserDefinedTypeName","pathNode":{"id":738,"name":"ValidationData","nameLocations":["8764:14:1"],"nodeType":"IdentifierPath","referencedDeclaration":2526,"src":"8764:14:1"},"referencedDeclaration":2526,"src":"8764:14:1","typeDescriptions":{"typeIdentifier":"t_struct$_ValidationData_$2526_storage_ptr","typeString":"struct ValidationData"}},"visibility":"internal"}],"id":745,"initialValue":{"arguments":[{"id":742,"name":"validationData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":729,"src":"8826:14:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":743,"name":"paymasterValidationData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":731,"src":"8854:23:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":741,"name":"_intersectTimeRange","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2670,"src":"8793:19:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_struct$_ValidationData_$2526_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (struct ValidationData memory)"}},"id":744,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8793:94:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_ValidationData_$2526_memory_ptr","typeString":"struct ValidationData memory"}},"nodeType":"VariableDeclarationStatement","src":"8764:123:1"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":746,"name":"numberMarker","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2516,"src":"8898:12:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":747,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8898:14:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":748,"nodeType":"ExpressionStatement","src":"8898:14:1"},{"assignments":[750],"declarations":[{"constant":false,"id":750,"mutability":"mutable","name":"paid","nameLocation":"8930:4:1","nodeType":"VariableDeclaration","scope":795,"src":"8922:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":749,"name":"uint256","nodeType":"ElementaryTypeName","src":"8922:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":756,"initialValue":{"arguments":[{"hexValue":"30","id":752,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8952:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"id":753,"name":"op","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":712,"src":"8955:2:1","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$3762_calldata_ptr","typeString":"struct UserOperation calldata"}},{"id":754,"name":"opInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":722,"src":"8959:6:1","typeDescriptions":{"typeIdentifier":"t_struct$_UserOpInfo_$825_memory_ptr","typeString":"struct EntryPoint.UserOpInfo memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_struct$_UserOperation_$3762_calldata_ptr","typeString":"struct UserOperation calldata"},{"typeIdentifier":"t_struct$_UserOpInfo_$825_memory_ptr","typeString":"struct EntryPoint.UserOpInfo memory"}],"id":751,"name":"_executeUserOp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":262,"src":"8937:14:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$_t_struct$_UserOperation_$3762_calldata_ptr_$_t_struct$_UserOpInfo_$825_memory_ptr_$returns$_t_uint256_$","typeString":"function (uint256,struct UserOperation calldata,struct EntryPoint.UserOpInfo memory) returns (uint256)"}},"id":755,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8937:29:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8922:44:1"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":757,"name":"numberMarker","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2516,"src":"8976:12:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":758,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8976:14:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":759,"nodeType":"ExpressionStatement","src":"8976:14:1"},{"assignments":[761],"declarations":[{"constant":false,"id":761,"mutability":"mutable","name":"targetSuccess","nameLocation":"9005:13:1","nodeType":"VariableDeclaration","scope":795,"src":"9000:18:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":760,"name":"bool","nodeType":"ElementaryTypeName","src":"9000:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":762,"nodeType":"VariableDeclarationStatement","src":"9000:18:1"},{"assignments":[764],"declarations":[{"constant":false,"id":764,"mutability":"mutable","name":"targetResult","nameLocation":"9041:12:1","nodeType":"VariableDeclaration","scope":795,"src":"9028:25:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":763,"name":"bytes","nodeType":"ElementaryTypeName","src":"9028:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":765,"nodeType":"VariableDeclarationStatement","src":"9028:25:1"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":771,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":766,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":714,"src":"9067:6:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":769,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9085:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":768,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9077:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":767,"name":"address","nodeType":"ElementaryTypeName","src":"9077:7:1","typeDescriptions":{}}},"id":770,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9077:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9067:20:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":782,"nodeType":"IfStatement","src":"9063:110:1","trueBody":{"id":781,"nodeType":"Block","src":"9089:84:1","statements":[{"expression":{"id":779,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"components":[{"id":772,"name":"targetSuccess","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":761,"src":"9104:13:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":773,"name":"targetResult","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":764,"src":"9119:12:1","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"id":774,"isConstant":false,"isInlineArray":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"TupleExpression","src":"9103:29:1","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":777,"name":"targetCallData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":716,"src":"9147:14:1","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}],"expression":{"id":775,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":714,"src":"9135:6:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":776,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9142:4:1","memberName":"call","nodeType":"MemberAccess","src":"9135:11:1","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":778,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9135:27:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"src":"9103:59:1","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":780,"nodeType":"ExpressionStatement","src":"9103:59:1"}]}},{"errorCall":{"arguments":[{"expression":{"id":784,"name":"opInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":722,"src":"9218:6:1","typeDescriptions":{"typeIdentifier":"t_struct$_UserOpInfo_$825_memory_ptr","typeString":"struct EntryPoint.UserOpInfo memory"}},"id":785,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9225:8:1","memberName":"preOpGas","nodeType":"MemberAccess","referencedDeclaration":824,"src":"9218:15:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":786,"name":"paid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":750,"src":"9247:4:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":787,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":740,"src":"9265:4:1","typeDescriptions":{"typeIdentifier":"t_struct$_ValidationData_$2526_memory_ptr","typeString":"struct ValidationData memory"}},"id":788,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9270:10:1","memberName":"validAfter","nodeType":"MemberAccess","referencedDeclaration":2523,"src":"9265:15:1","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},{"expression":{"id":789,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":740,"src":"9294:4:1","typeDescriptions":{"typeIdentifier":"t_struct$_ValidationData_$2526_memory_ptr","typeString":"struct ValidationData memory"}},"id":790,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9299:10:1","memberName":"validUntil","nodeType":"MemberAccess","referencedDeclaration":2525,"src":"9294:15:1","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},{"id":791,"name":"targetSuccess","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":761,"src":"9323:13:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":792,"name":"targetResult","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":764,"src":"9350:12:1","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint48","typeString":"uint48"},{"typeIdentifier":"t_uint48","typeString":"uint48"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":783,"name":"ExecutionResult","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3493,"src":"9189:15:1","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$_t_uint256_$_t_uint48_$_t_uint48_$_t_bool_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (uint256,uint256,uint48,uint48,bool,bytes memory) pure"}},"id":793,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9189:183:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":794,"nodeType":"RevertStatement","src":"9182:190:1"}]},"documentation":{"id":709,"nodeType":"StructuredDocumentation","src":"8362:27:1","text":"@inheritdoc IEntryPoint"},"functionSelector":"d6383f94","id":796,"implemented":true,"kind":"function","modifiers":[],"name":"simulateHandleOp","nameLocation":"8403:16:1","nodeType":"FunctionDefinition","overrides":{"id":718,"nodeType":"OverrideSpecifier","overrides":[],"src":"8533:8:1"},"parameters":{"id":717,"nodeType":"ParameterList","parameters":[{"constant":false,"id":712,"mutability":"mutable","name":"op","nameLocation":"8452:2:1","nodeType":"VariableDeclaration","scope":796,"src":"8429:25:1","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$3762_calldata_ptr","typeString":"struct UserOperation"},"typeName":{"id":711,"nodeType":"UserDefinedTypeName","pathNode":{"id":710,"name":"UserOperation","nameLocations":["8429:13:1"],"nodeType":"IdentifierPath","referencedDeclaration":3762,"src":"8429:13:1"},"referencedDeclaration":3762,"src":"8429:13:1","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$3762_storage_ptr","typeString":"struct UserOperation"}},"visibility":"internal"},{"constant":false,"id":714,"mutability":"mutable","name":"target","nameLocation":"8472:6:1","nodeType":"VariableDeclaration","scope":796,"src":"8464:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":713,"name":"address","nodeType":"ElementaryTypeName","src":"8464:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":716,"mutability":"mutable","name":"targetCallData","nameLocation":"8503:14:1","nodeType":"VariableDeclaration","scope":796,"src":"8488:29:1","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":715,"name":"bytes","nodeType":"ElementaryTypeName","src":"8488:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"8419:104:1"},"returnParameters":{"id":719,"nodeType":"ParameterList","parameters":[],"src":"8542:0:1"},"scope":2517,"src":"8394:985:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"canonicalName":"EntryPoint.MemoryUserOp","id":813,"members":[{"constant":false,"id":798,"mutability":"mutable","name":"sender","nameLocation":"9569:6:1","nodeType":"VariableDeclaration","scope":813,"src":"9561:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":797,"name":"address","nodeType":"ElementaryTypeName","src":"9561:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":800,"mutability":"mutable","name":"nonce","nameLocation":"9593:5:1","nodeType":"VariableDeclaration","scope":813,"src":"9585:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":799,"name":"uint256","nodeType":"ElementaryTypeName","src":"9585:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":802,"mutability":"mutable","name":"callGasLimit","nameLocation":"9616:12:1","nodeType":"VariableDeclaration","scope":813,"src":"9608:20:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":801,"name":"uint256","nodeType":"ElementaryTypeName","src":"9608:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":804,"mutability":"mutable","name":"verificationGasLimit","nameLocation":"9646:20:1","nodeType":"VariableDeclaration","scope":813,"src":"9638:28:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":803,"name":"uint256","nodeType":"ElementaryTypeName","src":"9638:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":806,"mutability":"mutable","name":"preVerificationGas","nameLocation":"9684:18:1","nodeType":"VariableDeclaration","scope":813,"src":"9676:26:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":805,"name":"uint256","nodeType":"ElementaryTypeName","src":"9676:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":808,"mutability":"mutable","name":"paymaster","nameLocation":"9720:9:1","nodeType":"VariableDeclaration","scope":813,"src":"9712:17:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":807,"name":"address","nodeType":"ElementaryTypeName","src":"9712:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":810,"mutability":"mutable","name":"maxFeePerGas","nameLocation":"9747:12:1","nodeType":"VariableDeclaration","scope":813,"src":"9739:20:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":809,"name":"uint256","nodeType":"ElementaryTypeName","src":"9739:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":812,"mutability":"mutable","name":"maxPriorityFeePerGas","nameLocation":"9777:20:1","nodeType":"VariableDeclaration","scope":813,"src":"9769:28:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":811,"name":"uint256","nodeType":"ElementaryTypeName","src":"9769:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"MemoryUserOp","nameLocation":"9538:12:1","nodeType":"StructDefinition","scope":2517,"src":"9531:273:1","visibility":"public"},{"canonicalName":"EntryPoint.UserOpInfo","id":825,"members":[{"constant":false,"id":816,"mutability":"mutable","name":"mUserOp","nameLocation":"9851:7:1","nodeType":"VariableDeclaration","scope":825,"src":"9838:20:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_MemoryUserOp_$813_storage_ptr","typeString":"struct EntryPoint.MemoryUserOp"},"typeName":{"id":815,"nodeType":"UserDefinedTypeName","pathNode":{"id":814,"name":"MemoryUserOp","nameLocations":["9838:12:1"],"nodeType":"IdentifierPath","referencedDeclaration":813,"src":"9838:12:1"},"referencedDeclaration":813,"src":"9838:12:1","typeDescriptions":{"typeIdentifier":"t_struct$_MemoryUserOp_$813_storage_ptr","typeString":"struct EntryPoint.MemoryUserOp"}},"visibility":"internal"},{"constant":false,"id":818,"mutability":"mutable","name":"userOpHash","nameLocation":"9876:10:1","nodeType":"VariableDeclaration","scope":825,"src":"9868:18:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":817,"name":"bytes32","nodeType":"ElementaryTypeName","src":"9868:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":820,"mutability":"mutable","name":"prefund","nameLocation":"9904:7:1","nodeType":"VariableDeclaration","scope":825,"src":"9896:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":819,"name":"uint256","nodeType":"ElementaryTypeName","src":"9896:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":822,"mutability":"mutable","name":"contextOffset","nameLocation":"9929:13:1","nodeType":"VariableDeclaration","scope":825,"src":"9921:21:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":821,"name":"uint256","nodeType":"ElementaryTypeName","src":"9921:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":824,"mutability":"mutable","name":"preOpGas","nameLocation":"9960:8:1","nodeType":"VariableDeclaration","scope":825,"src":"9952:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":823,"name":"uint256","nodeType":"ElementaryTypeName","src":"9952:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"UserOpInfo","nameLocation":"9817:10:1","nodeType":"StructDefinition","scope":2517,"src":"9810:165:1","visibility":"public"},{"body":{"id":980,"nodeType":"Block","src":"10320:1744:1","statements":[{"assignments":[839],"declarations":[{"constant":false,"id":839,"mutability":"mutable","name":"preGas","nameLocation":"10338:6:1","nodeType":"VariableDeclaration","scope":980,"src":"10330:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":838,"name":"uint256","nodeType":"ElementaryTypeName","src":"10330:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":842,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":840,"name":"gasleft","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-7,"src":"10347:7:1","typeDescriptions":{"typeIdentifier":"t_function_gasleft_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":841,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10347:9:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10330:26:1"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":850,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":844,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"10374:3:1","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":845,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10378:6:1","memberName":"sender","nodeType":"MemberAccess","src":"10374:10:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"id":848,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"10396:4:1","typeDescriptions":{"typeIdentifier":"t_contract$_EntryPoint_$2517","typeString":"contract EntryPoint"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_EntryPoint_$2517","typeString":"contract EntryPoint"}],"id":847,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10388:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":846,"name":"address","nodeType":"ElementaryTypeName","src":"10388:7:1","typeDescriptions":{}}},"id":849,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10388:13:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"10374:27:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4141393220696e7465726e616c2063616c6c206f6e6c79","id":851,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10403:25:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_bf4e5bbea2250480ca8cf3cc338d236d16fd3805a9bc8205224406394a71fe66","typeString":"literal_string \"AA92 internal call only\""},"value":"AA92 internal call only"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_bf4e5bbea2250480ca8cf3cc338d236d16fd3805a9bc8205224406394a71fe66","typeString":"literal_string \"AA92 internal call only\""}],"id":843,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"10366:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":852,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10366:63:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":853,"nodeType":"ExpressionStatement","src":"10366:63:1"},{"assignments":[856],"declarations":[{"constant":false,"id":856,"mutability":"mutable","name":"mUserOp","nameLocation":"10459:7:1","nodeType":"VariableDeclaration","scope":980,"src":"10439:27:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_MemoryUserOp_$813_memory_ptr","typeString":"struct EntryPoint.MemoryUserOp"},"typeName":{"id":855,"nodeType":"UserDefinedTypeName","pathNode":{"id":854,"name":"MemoryUserOp","nameLocations":["10439:12:1"],"nodeType":"IdentifierPath","referencedDeclaration":813,"src":"10439:12:1"},"referencedDeclaration":813,"src":"10439:12:1","typeDescriptions":{"typeIdentifier":"t_struct$_MemoryUserOp_$813_storage_ptr","typeString":"struct EntryPoint.MemoryUserOp"}},"visibility":"internal"}],"id":859,"initialValue":{"expression":{"id":857,"name":"opInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":831,"src":"10469:6:1","typeDescriptions":{"typeIdentifier":"t_struct$_UserOpInfo_$825_memory_ptr","typeString":"struct EntryPoint.UserOpInfo memory"}},"id":858,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10476:7:1","memberName":"mUserOp","nodeType":"MemberAccess","referencedDeclaration":816,"src":"10469:14:1","typeDescriptions":{"typeIdentifier":"t_struct$_MemoryUserOp_$813_memory_ptr","typeString":"struct EntryPoint.MemoryUserOp memory"}},"nodeType":"VariableDeclarationStatement","src":"10439:44:1"},{"assignments":[861],"declarations":[{"constant":false,"id":861,"mutability":"mutable","name":"callGasLimit","nameLocation":"10499:12:1","nodeType":"VariableDeclaration","scope":980,"src":"10494:17:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":860,"name":"uint","nodeType":"ElementaryTypeName","src":"10494:4:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":864,"initialValue":{"expression":{"id":862,"name":"mUserOp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":856,"src":"10514:7:1","typeDescriptions":{"typeIdentifier":"t_struct$_MemoryUserOp_$813_memory_ptr","typeString":"struct EntryPoint.MemoryUserOp memory"}},"id":863,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10522:12:1","memberName":"callGasLimit","nodeType":"MemberAccess","referencedDeclaration":802,"src":"10514:20:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10494:40:1"},{"id":877,"nodeType":"UncheckedBlock","src":"10544:355:1","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":873,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":865,"name":"gasleft","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-7,"src":"10670:7:1","typeDescriptions":{"typeIdentifier":"t_function_gasleft_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":866,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10670:9:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":872,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":870,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":867,"name":"callGasLimit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":861,"src":"10682:12:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"expression":{"id":868,"name":"mUserOp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":856,"src":"10697:7:1","typeDescriptions":{"typeIdentifier":"t_struct$_MemoryUserOp_$813_memory_ptr","typeString":"struct EntryPoint.MemoryUserOp memory"}},"id":869,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10705:20:1","memberName":"verificationGasLimit","nodeType":"MemberAccess","referencedDeclaration":804,"src":"10697:28:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10682:43:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"35303030","id":871,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10728:4:1","typeDescriptions":{"typeIdentifier":"t_rational_5000_by_1","typeString":"int_const 5000"},"value":"5000"},"src":"10682:50:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10670:62:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":876,"nodeType":"IfStatement","src":"10649:240:1","trueBody":{"id":875,"nodeType":"Block","src":"10747:142:1","statements":[{"AST":{"nodeType":"YulBlock","src":"10774:101:1","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10803:1:1","type":"","value":"0"},{"name":"INNER_OUT_OF_GAS","nodeType":"YulIdentifier","src":"10806:16:1"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10796:6:1"},"nodeType":"YulFunctionCall","src":"10796:27:1"},"nodeType":"YulExpressionStatement","src":"10796:27:1"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10851:1:1","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"10854:2:1","type":"","value":"32"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"10844:6:1"},"nodeType":"YulFunctionCall","src":"10844:13:1"},"nodeType":"YulExpressionStatement","src":"10844:13:1"}]},"evmVersion":"london","externalReferences":[{"declaration":92,"isOffset":false,"isSlot":false,"src":"10806:16:1","valueSize":1}],"id":874,"nodeType":"InlineAssembly","src":"10765:110:1"}]}}]},{"assignments":[882],"declarations":[{"constant":false,"id":882,"mutability":"mutable","name":"mode","nameLocation":"10931:4:1","nodeType":"VariableDeclaration","scope":980,"src":"10909:26:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_PostOpMode_$3603","typeString":"enum IPaymaster.PostOpMode"},"typeName":{"id":881,"nodeType":"UserDefinedTypeName","pathNode":{"id":880,"name":"IPaymaster.PostOpMode","nameLocations":["10909:10:1","10920:10:1"],"nodeType":"IdentifierPath","referencedDeclaration":3603,"src":"10909:21:1"},"referencedDeclaration":3603,"src":"10909:21:1","typeDescriptions":{"typeIdentifier":"t_enum$_PostOpMode_$3603","typeString":"enum IPaymaster.PostOpMode"}},"visibility":"internal"}],"id":886,"initialValue":{"expression":{"expression":{"id":883,"name":"IPaymaster","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3630,"src":"10938:10:1","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IPaymaster_$3630_$","typeString":"type(contract IPaymaster)"}},"id":884,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10949:10:1","memberName":"PostOpMode","nodeType":"MemberAccess","referencedDeclaration":3603,"src":"10938:21:1","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_PostOpMode_$3603_$","typeString":"type(enum IPaymaster.PostOpMode)"}},"id":885,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10960:11:1","memberName":"opSucceeded","nodeType":"MemberAccess","referencedDeclaration":3600,"src":"10938:33:1","typeDescriptions":{"typeIdentifier":"t_enum$_PostOpMode_$3603","typeString":"enum IPaymaster.PostOpMode"}},"nodeType":"VariableDeclarationStatement","src":"10909:62:1"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":890,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":887,"name":"callData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":828,"src":"10985:8:1","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":888,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10994:6:1","memberName":"length","nodeType":"MemberAccess","src":"10985:15:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":889,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11003:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"10985:19:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":960,"nodeType":"IfStatement","src":"10981:777:1","trueBody":{"id":959,"nodeType":"Block","src":"11006:752:1","statements":[{"assignments":[892],"declarations":[{"constant":false,"id":892,"mutability":"mutable","name":"success","nameLocation":"11025:7:1","nodeType":"VariableDeclaration","scope":959,"src":"11020:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":891,"name":"bool","nodeType":"ElementaryTypeName","src":"11020:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":901,"initialValue":{"arguments":[{"expression":{"id":895,"name":"mUserOp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":856,"src":"11045:7:1","typeDescriptions":{"typeIdentifier":"t_struct$_MemoryUserOp_$813_memory_ptr","typeString":"struct EntryPoint.MemoryUserOp memory"}},"id":896,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11053:6:1","memberName":"sender","nodeType":"MemberAccess","referencedDeclaration":798,"src":"11045:14:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"hexValue":"30","id":897,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11061:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"id":898,"name":"callData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":828,"src":"11064:8:1","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":899,"name":"callGasLimit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":861,"src":"11074:12:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":893,"name":"Exec","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4113,"src":"11035:4:1","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Exec_$4113_$","typeString":"type(library Exec)"}},"id":894,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11040:4:1","memberName":"call","nodeType":"MemberAccess","referencedDeclaration":4040,"src":"11035:9:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256,bytes memory,uint256) returns (bool)"}},"id":900,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11035:52:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"11020:67:1"},{"condition":{"id":903,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"11105:8:1","subExpression":{"id":902,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":892,"src":"11106:7:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":958,"nodeType":"IfStatement","src":"11101:647:1","trueBody":{"id":957,"nodeType":"Block","src":"11115:633:1","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":908,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":905,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"11141:3:1","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":906,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11145:5:1","memberName":"value","nodeType":"MemberAccess","src":"11141:9:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3237","id":907,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11153:2:1","typeDescriptions":{"typeIdentifier":"t_rational_27_by_1","typeString":"int_const 27"},"value":"27"},"src":"11141:14:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"76616c7565206e6875206375742032373737","id":909,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"11157:20:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_512b7f828b958a64085eb6e413141fc5a3b281a8c79858ceec0987942aec0d53","typeString":"literal_string \"value nhu cut 2777\""},"value":"value nhu cut 2777"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_512b7f828b958a64085eb6e413141fc5a3b281a8c79858ceec0987942aec0d53","typeString":"literal_string \"value nhu cut 2777\""}],"id":904,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"11133:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":910,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11133:45:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":911,"nodeType":"ExpressionStatement","src":"11133:45:1"},{"assignments":[913],"declarations":[{"constant":false,"id":913,"mutability":"mutable","name":"result","nameLocation":"11209:6:1","nodeType":"VariableDeclaration","scope":957,"src":"11196:19:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":912,"name":"bytes","nodeType":"ElementaryTypeName","src":"11196:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":918,"initialValue":{"arguments":[{"id":916,"name":"REVERT_REASON_MAX_LEN","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":95,"src":"11237:21:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":914,"name":"Exec","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4113,"src":"11218:4:1","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Exec_$4113_$","typeString":"type(library Exec)"}},"id":915,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11223:13:1","memberName":"getReturnData","nodeType":"MemberAccess","referencedDeclaration":4075,"src":"11218:18:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"}},"id":917,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11218:41:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"11196:63:1"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":923,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":920,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"11285:3:1","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":921,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11289:5:1","memberName":"value","nodeType":"MemberAccess","src":"11285:9:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3238","id":922,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11297:2:1","typeDescriptions":{"typeIdentifier":"t_rational_28_by_1","typeString":"int_const 28"},"value":"28"},"src":"11285:14:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"76616c7565206e6875206375742032383838","id":924,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"11301:20:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_895654c5e97627ddd4610814c7bc804fffb317fe15555866d49787819643007c","typeString":"literal_string \"value nhu cut 2888\""},"value":"value nhu cut 2888"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_895654c5e97627ddd4610814c7bc804fffb317fe15555866d49787819643007c","typeString":"literal_string \"value nhu cut 2888\""}],"id":919,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"11277:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":925,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11277:45:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":926,"nodeType":"ExpressionStatement","src":"11277:45:1"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":930,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":927,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":913,"src":"11344:6:1","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":928,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11351:6:1","memberName":"length","nodeType":"MemberAccess","src":"11344:13:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":929,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11360:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11344:17:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":950,"nodeType":"IfStatement","src":"11340:337:1","trueBody":{"id":949,"nodeType":"Block","src":"11363:314:1","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":935,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":932,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"11393:3:1","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":933,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11397:5:1","memberName":"value","nodeType":"MemberAccess","src":"11393:9:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3239","id":934,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11405:2:1","typeDescriptions":{"typeIdentifier":"t_rational_29_by_1","typeString":"int_const 29"},"value":"29"},"src":"11393:14:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"76616c7565206e6875206375742032393939","id":936,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"11409:20:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_ef7b03291aa29628ee00182fd28392ba48735c033d1fec93406eda0c52dee066","typeString":"literal_string \"value nhu cut 2999\""},"value":"value nhu cut 2999"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_ef7b03291aa29628ee00182fd28392ba48735c033d1fec93406eda0c52dee066","typeString":"literal_string \"value nhu cut 2999\""}],"id":931,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"11385:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":937,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11385:45:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":938,"nodeType":"ExpressionStatement","src":"11385:45:1"},{"eventCall":{"arguments":[{"expression":{"id":940,"name":"opInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":831,"src":"11508:6:1","typeDescriptions":{"typeIdentifier":"t_struct$_UserOpInfo_$825_memory_ptr","typeString":"struct EntryPoint.UserOpInfo memory"}},"id":941,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11515:10:1","memberName":"userOpHash","nodeType":"MemberAccess","referencedDeclaration":818,"src":"11508:17:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":942,"name":"mUserOp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":856,"src":"11551:7:1","typeDescriptions":{"typeIdentifier":"t_struct$_MemoryUserOp_$813_memory_ptr","typeString":"struct EntryPoint.MemoryUserOp memory"}},"id":943,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11559:6:1","memberName":"sender","nodeType":"MemberAccess","referencedDeclaration":798,"src":"11551:14:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":944,"name":"mUserOp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":856,"src":"11591:7:1","typeDescriptions":{"typeIdentifier":"t_struct$_MemoryUserOp_$813_memory_ptr","typeString":"struct EntryPoint.MemoryUserOp memory"}},"id":945,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11599:5:1","memberName":"nonce","nodeType":"MemberAccess","referencedDeclaration":800,"src":"11591:13:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":946,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":913,"src":"11630:6:1","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":939,"name":"UserOperationRevertReason","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3420,"src":"11457:25:1","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (bytes32,address,uint256,bytes memory)"}},"id":947,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11457:201:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":948,"nodeType":"EmitStatement","src":"11452:206:1"}]}},{"expression":{"id":955,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":951,"name":"mode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":882,"src":"11694:4:1","typeDescriptions":{"typeIdentifier":"t_enum$_PostOpMode_$3603","typeString":"enum IPaymaster.PostOpMode"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"expression":{"id":952,"name":"IPaymaster","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3630,"src":"11701:10:1","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IPaymaster_$3630_$","typeString":"type(contract IPaymaster)"}},"id":953,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11712:10:1","memberName":"PostOpMode","nodeType":"MemberAccess","referencedDeclaration":3603,"src":"11701:21:1","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_PostOpMode_$3603_$","typeString":"type(enum IPaymaster.PostOpMode)"}},"id":954,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11723:10:1","memberName":"opReverted","nodeType":"MemberAccess","referencedDeclaration":3601,"src":"11701:32:1","typeDescriptions":{"typeIdentifier":"t_enum$_PostOpMode_$3603","typeString":"enum IPaymaster.PostOpMode"}},"src":"11694:39:1","typeDescriptions":{"typeIdentifier":"t_enum$_PostOpMode_$3603","typeString":"enum IPaymaster.PostOpMode"}},"id":956,"nodeType":"ExpressionStatement","src":"11694:39:1"}]}}]}},{"id":979,"nodeType":"UncheckedBlock","src":"11768:290:1","statements":[{"assignments":[962],"declarations":[{"constant":false,"id":962,"mutability":"mutable","name":"actualGas","nameLocation":"11800:9:1","nodeType":"VariableDeclaration","scope":979,"src":"11792:17:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":961,"name":"uint256","nodeType":"ElementaryTypeName","src":"11792:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":970,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":969,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":966,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":963,"name":"preGas","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":839,"src":"11812:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":964,"name":"gasleft","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-7,"src":"11821:7:1","typeDescriptions":{"typeIdentifier":"t_function_gasleft_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":965,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11821:9:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11812:18:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"expression":{"id":967,"name":"opInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":831,"src":"11833:6:1","typeDescriptions":{"typeIdentifier":"t_struct$_UserOpInfo_$825_memory_ptr","typeString":"struct EntryPoint.UserOpInfo memory"}},"id":968,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11840:8:1","memberName":"preOpGas","nodeType":"MemberAccess","referencedDeclaration":824,"src":"11833:15:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11812:36:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"11792:56:1"},{"expression":{"arguments":[{"hexValue":"30","id":972,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12011:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"id":973,"name":"mode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":882,"src":"12014:4:1","typeDescriptions":{"typeIdentifier":"t_enum$_PostOpMode_$3603","typeString":"enum IPaymaster.PostOpMode"}},{"id":974,"name":"opInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":831,"src":"12020:6:1","typeDescriptions":{"typeIdentifier":"t_struct$_UserOpInfo_$825_memory_ptr","typeString":"struct EntryPoint.UserOpInfo memory"}},{"id":975,"name":"context","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":833,"src":"12028:7:1","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},{"id":976,"name":"actualGas","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":962,"src":"12037:9:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_enum$_PostOpMode_$3603","typeString":"enum IPaymaster.PostOpMode"},{"typeIdentifier":"t_struct$_UserOpInfo_$825_memory_ptr","typeString":"struct EntryPoint.UserOpInfo memory"},{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":971,"name":"_handlePostOp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2440,"src":"11997:13:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$_t_enum$_PostOpMode_$3603_$_t_struct$_UserOpInfo_$825_memory_ptr_$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,enum IPaymaster.PostOpMode,struct EntryPoint.UserOpInfo memory,bytes memory,uint256) returns (uint256)"}},"id":977,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11997:50:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":837,"id":978,"nodeType":"Return","src":"11990:57:1"}]}]},"documentation":{"id":826,"nodeType":"StructuredDocumentation","src":"9981:159:1","text":" inner function to handle a UserOperation.\n Must be declared \"external\" to open a call context, but it can only be called by handleOps."},"functionSelector":"1d732756","id":981,"implemented":true,"kind":"function","modifiers":[],"name":"innerHandleOp","nameLocation":"10154:13:1","nodeType":"FunctionDefinition","parameters":{"id":834,"nodeType":"ParameterList","parameters":[{"constant":false,"id":828,"mutability":"mutable","name":"callData","nameLocation":"10190:8:1","nodeType":"VariableDeclaration","scope":981,"src":"10177:21:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":827,"name":"bytes","nodeType":"ElementaryTypeName","src":"10177:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":831,"mutability":"mutable","name":"opInfo","nameLocation":"10226:6:1","nodeType":"VariableDeclaration","scope":981,"src":"10208:24:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_UserOpInfo_$825_memory_ptr","typeString":"struct EntryPoint.UserOpInfo"},"typeName":{"id":830,"nodeType":"UserDefinedTypeName","pathNode":{"id":829,"name":"UserOpInfo","nameLocations":["10208:10:1"],"nodeType":"IdentifierPath","referencedDeclaration":825,"src":"10208:10:1"},"referencedDeclaration":825,"src":"10208:10:1","typeDescriptions":{"typeIdentifier":"t_struct$_UserOpInfo_$825_storage_ptr","typeString":"struct EntryPoint.UserOpInfo"}},"visibility":"internal"},{"constant":false,"id":833,"mutability":"mutable","name":"context","nameLocation":"10257:7:1","nodeType":"VariableDeclaration","scope":981,"src":"10242:22:1","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":832,"name":"bytes","nodeType":"ElementaryTypeName","src":"10242:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"10167:103:1"},"returnParameters":{"id":837,"nodeType":"ParameterList","parameters":[{"constant":false,"id":836,"mutability":"mutable","name":"actualGasCost","nameLocation":"10305:13:1","nodeType":"VariableDeclaration","scope":981,"src":"10297:21:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":835,"name":"uint256","nodeType":"ElementaryTypeName","src":"10297:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10296:23:1"},"scope":2517,"src":"10145:1919:1","stateMutability":"payable","virtual":false,"visibility":"external"},{"baseFunctions":[3532],"body":{"id":1005,"nodeType":"Block","src":"12370:102:1","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":993,"name":"userOp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":985,"src":"12420:6:1","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$3762_calldata_ptr","typeString":"struct UserOperation calldata"}},"id":994,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12427:4:1","memberName":"hash","nodeType":"MemberAccess","referencedDeclaration":3914,"src":"12420:11:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_UserOperation_$3762_calldata_ptr_$returns$_t_bytes32_$bound_to$_t_struct$_UserOperation_$3762_calldata_ptr_$","typeString":"function (struct UserOperation calldata) pure returns (bytes32)"}},"id":995,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12420:13:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"arguments":[{"id":998,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"12443:4:1","typeDescriptions":{"typeIdentifier":"t_contract$_EntryPoint_$2517","typeString":"contract EntryPoint"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_EntryPoint_$2517","typeString":"contract EntryPoint"}],"id":997,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12435:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":996,"name":"address","nodeType":"ElementaryTypeName","src":"12435:7:1","typeDescriptions":{}}},"id":999,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12435:13:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":1000,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"12450:5:1","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":1001,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12456:7:1","memberName":"chainid","nodeType":"MemberAccess","src":"12450:13:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":991,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"12409:3:1","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":992,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"12413:6:1","memberName":"encode","nodeType":"MemberAccess","src":"12409:10:1","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":1002,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12409:55:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":990,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"12399:9:1","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":1003,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12399:66:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":989,"id":1004,"nodeType":"Return","src":"12380:85:1"}]},"documentation":{"id":982,"nodeType":"StructuredDocumentation","src":"12070:197:1","text":" generate a request Id - unique identifier for this request.\n the request ID is a hash over the content of the userOp (except the signature), the entrypoint and the chainid."},"functionSelector":"a6193531","id":1006,"implemented":true,"kind":"function","modifiers":[],"name":"getUserOpHash","nameLocation":"12281:13:1","nodeType":"FunctionDefinition","parameters":{"id":986,"nodeType":"ParameterList","parameters":[{"constant":false,"id":985,"mutability":"mutable","name":"userOp","nameLocation":"12327:6:1","nodeType":"VariableDeclaration","scope":1006,"src":"12304:29:1","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$3762_calldata_ptr","typeString":"struct UserOperation"},"typeName":{"id":984,"nodeType":"UserDefinedTypeName","pathNode":{"id":983,"name":"UserOperation","nameLocations":["12304:13:1"],"nodeType":"IdentifierPath","referencedDeclaration":3762,"src":"12304:13:1"},"referencedDeclaration":3762,"src":"12304:13:1","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$3762_storage_ptr","typeString":"struct UserOperation"}},"visibility":"internal"}],"src":"12294:45:1"},"returnParameters":{"id":989,"nodeType":"ParameterList","parameters":[{"constant":false,"id":988,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1006,"src":"12361:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":987,"name":"bytes32","nodeType":"ElementaryTypeName","src":"12361:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"12360:9:1"},"scope":2517,"src":"12272:200:1","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":1108,"nodeType":"Block","src":"12692:774:1","statements":[{"expression":{"id":1021,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":1016,"name":"mUserOp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1013,"src":"12702:7:1","typeDescriptions":{"typeIdentifier":"t_struct$_MemoryUserOp_$813_memory_ptr","typeString":"struct EntryPoint.MemoryUserOp memory"}},"id":1018,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"12710:6:1","memberName":"sender","nodeType":"MemberAccess","referencedDeclaration":798,"src":"12702:14:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":1019,"name":"userOp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1010,"src":"12719:6:1","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$3762_calldata_ptr","typeString":"struct UserOperation calldata"}},"id":1020,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12726:6:1","memberName":"sender","nodeType":"MemberAccess","referencedDeclaration":3741,"src":"12719:13:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"12702:30:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1022,"nodeType":"ExpressionStatement","src":"12702:30:1"},{"expression":{"id":1028,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":1023,"name":"mUserOp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1013,"src":"12742:7:1","typeDescriptions":{"typeIdentifier":"t_struct$_MemoryUserOp_$813_memory_ptr","typeString":"struct EntryPoint.MemoryUserOp memory"}},"id":1025,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"12750:5:1","memberName":"nonce","nodeType":"MemberAccess","referencedDeclaration":800,"src":"12742:13:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":1026,"name":"userOp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1010,"src":"12758:6:1","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$3762_calldata_ptr","typeString":"struct UserOperation calldata"}},"id":1027,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12765:5:1","memberName":"nonce","nodeType":"MemberAccess","referencedDeclaration":3743,"src":"12758:12:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12742:28:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1029,"nodeType":"ExpressionStatement","src":"12742:28:1"},{"expression":{"id":1035,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":1030,"name":"mUserOp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1013,"src":"12780:7:1","typeDescriptions":{"typeIdentifier":"t_struct$_MemoryUserOp_$813_memory_ptr","typeString":"struct EntryPoint.MemoryUserOp memory"}},"id":1032,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"12788:12:1","memberName":"callGasLimit","nodeType":"MemberAccess","referencedDeclaration":802,"src":"12780:20:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":1033,"name":"userOp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1010,"src":"12803:6:1","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$3762_calldata_ptr","typeString":"struct UserOperation calldata"}},"id":1034,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12810:12:1","memberName":"callGasLimit","nodeType":"MemberAccess","referencedDeclaration":3749,"src":"12803:19:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12780:42:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1036,"nodeType":"ExpressionStatement","src":"12780:42:1"},{"expression":{"id":1042,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":1037,"name":"mUserOp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1013,"src":"12832:7:1","typeDescriptions":{"typeIdentifier":"t_struct$_MemoryUserOp_$813_memory_ptr","typeString":"struct EntryPoint.MemoryUserOp memory"}},"id":1039,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"12840:20:1","memberName":"verificationGasLimit","nodeType":"MemberAccess","referencedDeclaration":804,"src":"12832:28:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":1040,"name":"userOp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1010,"src":"12863:6:1","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$3762_calldata_ptr","typeString":"struct UserOperation calldata"}},"id":1041,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12870:20:1","memberName":"verificationGasLimit","nodeType":"MemberAccess","referencedDeclaration":3751,"src":"12863:27:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12832:58:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1043,"nodeType":"ExpressionStatement","src":"12832:58:1"},{"expression":{"id":1049,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":1044,"name":"mUserOp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1013,"src":"12900:7:1","typeDescriptions":{"typeIdentifier":"t_struct$_MemoryUserOp_$813_memory_ptr","typeString":"struct EntryPoint.MemoryUserOp memory"}},"id":1046,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"12908:18:1","memberName":"preVerificationGas","nodeType":"MemberAccess","referencedDeclaration":806,"src":"12900:26:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":1047,"name":"userOp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1010,"src":"12929:6:1","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$3762_calldata_ptr","typeString":"struct UserOperation calldata"}},"id":1048,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12936:18:1","memberName":"preVerificationGas","nodeType":"MemberAccess","referencedDeclaration":3753,"src":"12929:25:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12900:54:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1050,"nodeType":"ExpressionStatement","src":"12900:54:1"},{"expression":{"id":1056,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":1051,"name":"mUserOp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1013,"src":"12964:7:1","typeDescriptions":{"typeIdentifier":"t_struct$_MemoryUserOp_$813_memory_ptr","typeString":"struct EntryPoint.MemoryUserOp memory"}},"id":1053,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"12972:12:1","memberName":"maxFeePerGas","nodeType":"MemberAccess","referencedDeclaration":810,"src":"12964:20:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":1054,"name":"userOp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1010,"src":"12987:6:1","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$3762_calldata_ptr","typeString":"struct UserOperation calldata"}},"id":1055,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12994:12:1","memberName":"maxFeePerGas","nodeType":"MemberAccess","referencedDeclaration":3755,"src":"12987:19:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12964:42:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1057,"nodeType":"ExpressionStatement","src":"12964:42:1"},{"expression":{"id":1063,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":1058,"name":"mUserOp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1013,"src":"13016:7:1","typeDescriptions":{"typeIdentifier":"t_struct$_MemoryUserOp_$813_memory_ptr","typeString":"struct EntryPoint.MemoryUserOp memory"}},"id":1060,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"13024:20:1","memberName":"maxPriorityFeePerGas","nodeType":"MemberAccess","referencedDeclaration":812,"src":"13016:28:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":1061,"name":"userOp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1010,"src":"13047:6:1","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$3762_calldata_ptr","typeString":"struct UserOperation calldata"}},"id":1062,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13054:20:1","memberName":"maxPriorityFeePerGas","nodeType":"MemberAccess","referencedDeclaration":3757,"src":"13047:27:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13016:58:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1064,"nodeType":"ExpressionStatement","src":"13016:58:1"},{"assignments":[1066],"declarations":[{"constant":false,"id":1066,"mutability":"mutable","name":"paymasterAndData","nameLocation":"13099:16:1","nodeType":"VariableDeclaration","scope":1108,"src":"13084:31:1","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1065,"name":"bytes","nodeType":"ElementaryTypeName","src":"13084:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1069,"initialValue":{"expression":{"id":1067,"name":"userOp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1010,"src":"13118:6:1","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$3762_calldata_ptr","typeString":"struct UserOperation calldata"}},"id":1068,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13125:16:1","memberName":"paymasterAndData","nodeType":"MemberAccess","referencedDeclaration":3759,"src":"13118:23:1","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"nodeType":"VariableDeclarationStatement","src":"13084:57:1"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1073,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1070,"name":"paymasterAndData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1066,"src":"13155:16:1","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"id":1071,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13172:6:1","memberName":"length","nodeType":"MemberAccess","src":"13155:23:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1072,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13181:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"13155:27:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1106,"nodeType":"Block","src":"13405:55:1","statements":[{"expression":{"id":1104,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":1097,"name":"mUserOp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1013,"src":"13419:7:1","typeDescriptions":{"typeIdentifier":"t_struct$_MemoryUserOp_$813_memory_ptr","typeString":"struct EntryPoint.MemoryUserOp memory"}},"id":1099,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"13427:9:1","memberName":"paymaster","nodeType":"MemberAccess","referencedDeclaration":808,"src":"13419:17:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"hexValue":"30","id":1102,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13447:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1101,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13439:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1100,"name":"address","nodeType":"ElementaryTypeName","src":"13439:7:1","typeDescriptions":{}}},"id":1103,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13439:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"13419:30:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1105,"nodeType":"ExpressionStatement","src":"13419:30:1"}]},"id":1107,"nodeType":"IfStatement","src":"13151:309:1","trueBody":{"id":1096,"nodeType":"Block","src":"13184:215:1","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1078,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1075,"name":"paymasterAndData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1066,"src":"13223:16:1","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"id":1076,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13240:6:1","memberName":"length","nodeType":"MemberAccess","src":"13223:23:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"hexValue":"3230","id":1077,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13250:2:1","typeDescriptions":{"typeIdentifier":"t_rational_20_by_1","typeString":"int_const 20"},"value":"20"},"src":"13223:29:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4141393320696e76616c6964207061796d6173746572416e6444617461","id":1079,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"13270:31:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_bed5bf2586bcf71963468f5a6e4def651dfab48dcb520989dbad3d1cd3cd8bdd","typeString":"literal_string \"AA93 invalid paymasterAndData\""},"value":"AA93 invalid paymasterAndData"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_bed5bf2586bcf71963468f5a6e4def651dfab48dcb520989dbad3d1cd3cd8bdd","typeString":"literal_string \"AA93 invalid paymasterAndData\""}],"id":1074,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"13198:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1080,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13198:117:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1081,"nodeType":"ExpressionStatement","src":"13198:117:1"},{"expression":{"id":1094,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":1082,"name":"mUserOp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1013,"src":"13329:7:1","typeDescriptions":{"typeIdentifier":"t_struct$_MemoryUserOp_$813_memory_ptr","typeString":"struct EntryPoint.MemoryUserOp memory"}},"id":1084,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"13337:9:1","memberName":"paymaster","nodeType":"MemberAccess","referencedDeclaration":808,"src":"13329:17:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"arguments":[{"baseExpression":{"id":1089,"name":"paymasterAndData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1066,"src":"13365:16:1","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"endExpression":{"hexValue":"3230","id":1090,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13383:2:1","typeDescriptions":{"typeIdentifier":"t_rational_20_by_1","typeString":"int_const 20"},"value":"20"},"id":1091,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexRangeAccess","src":"13365:21:1","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr_slice","typeString":"bytes calldata slice"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_calldata_ptr_slice","typeString":"bytes calldata slice"}],"id":1088,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13357:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes20_$","typeString":"type(bytes20)"},"typeName":{"id":1087,"name":"bytes20","nodeType":"ElementaryTypeName","src":"13357:7:1","typeDescriptions":{}}},"id":1092,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13357:30:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes20","typeString":"bytes20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes20","typeString":"bytes20"}],"id":1086,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13349:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1085,"name":"address","nodeType":"ElementaryTypeName","src":"13349:7:1","typeDescriptions":{}}},"id":1093,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13349:39:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"13329:59:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1095,"nodeType":"ExpressionStatement","src":"13329:59:1"}]}}]},"documentation":{"id":1007,"nodeType":"StructuredDocumentation","src":"12478:84:1","text":" copy general fields from userOp into the memory opInfo structure."},"id":1109,"implemented":true,"kind":"function","modifiers":[],"name":"_copyUserOpToMemory","nameLocation":"12576:19:1","nodeType":"FunctionDefinition","parameters":{"id":1014,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1010,"mutability":"mutable","name":"userOp","nameLocation":"12628:6:1","nodeType":"VariableDeclaration","scope":1109,"src":"12605:29:1","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$3762_calldata_ptr","typeString":"struct UserOperation"},"typeName":{"id":1009,"nodeType":"UserDefinedTypeName","pathNode":{"id":1008,"name":"UserOperation","nameLocations":["12605:13:1"],"nodeType":"IdentifierPath","referencedDeclaration":3762,"src":"12605:13:1"},"referencedDeclaration":3762,"src":"12605:13:1","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$3762_storage_ptr","typeString":"struct UserOperation"}},"visibility":"internal"},{"constant":false,"id":1013,"mutability":"mutable","name":"mUserOp","nameLocation":"12664:7:1","nodeType":"VariableDeclaration","scope":1109,"src":"12644:27:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_MemoryUserOp_$813_memory_ptr","typeString":"struct EntryPoint.MemoryUserOp"},"typeName":{"id":1012,"nodeType":"UserDefinedTypeName","pathNode":{"id":1011,"name":"MemoryUserOp","nameLocations":["12644:12:1"],"nodeType":"IdentifierPath","referencedDeclaration":813,"src":"12644:12:1"},"referencedDeclaration":813,"src":"12644:12:1","typeDescriptions":{"typeIdentifier":"t_struct$_MemoryUserOp_$813_storage_ptr","typeString":"struct EntryPoint.MemoryUserOp"}},"visibility":"internal"}],"src":"12595:82:1"},"returnParameters":{"id":1015,"nodeType":"ParameterList","parameters":[],"src":"12692:0:1"},"scope":2517,"src":"12567:899:1","stateMutability":"pure","virtual":false,"visibility":"internal"},{"baseFunctions":[3539],"body":{"id":1271,"nodeType":"Block","src":"13943:1813:1","statements":[{"assignments":[1118],"declarations":[{"constant":false,"id":1118,"mutability":"mutable","name":"outOpInfo","nameLocation":"13971:9:1","nodeType":"VariableDeclaration","scope":1271,"src":"13953:27:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_UserOpInfo_$825_memory_ptr","typeString":"struct EntryPoint.UserOpInfo"},"typeName":{"id":1117,"nodeType":"UserDefinedTypeName","pathNode":{"id":1116,"name":"UserOpInfo","nameLocations":["13953:10:1"],"nodeType":"IdentifierPath","referencedDeclaration":825,"src":"13953:10:1"},"referencedDeclaration":825,"src":"13953:10:1","typeDescriptions":{"typeIdentifier":"t_struct$_UserOpInfo_$825_storage_ptr","typeString":"struct EntryPoint.UserOpInfo"}},"visibility":"internal"}],"id":1119,"nodeType":"VariableDeclarationStatement","src":"13953:27:1"},{"expression":{"arguments":[{"id":1121,"name":"userOp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1113,"src":"14018:6:1","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$3762_calldata_ptr","typeString":"struct UserOperation calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_UserOperation_$3762_calldata_ptr","typeString":"struct UserOperation calldata"}],"id":1120,"name":"_simulationOnlyValidations","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1471,"src":"13991:26:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_UserOperation_$3762_calldata_ptr_$returns$__$","typeString":"function (struct UserOperation calldata) view"}},"id":1122,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13991:34:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1123,"nodeType":"ExpressionStatement","src":"13991:34:1"},{"assignments":[1125,1127],"declarations":[{"constant":false,"id":1125,"mutability":"mutable","name":"validationData","nameLocation":"14057:14:1","nodeType":"VariableDeclaration","scope":1271,"src":"14049:22:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1124,"name":"uint256","nodeType":"ElementaryTypeName","src":"14049:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1127,"mutability":"mutable","name":"paymasterValidationData","nameLocation":"14093:23:1","nodeType":"VariableDeclaration","scope":1271,"src":"14085:31:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1126,"name":"uint256","nodeType":"ElementaryTypeName","src":"14085:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1133,"initialValue":{"arguments":[{"hexValue":"30","id":1129,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14149:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"id":1130,"name":"userOp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1113,"src":"14152:6:1","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$3762_calldata_ptr","typeString":"struct UserOperation calldata"}},{"id":1131,"name":"outOpInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1118,"src":"14160:9:1","typeDescriptions":{"typeIdentifier":"t_struct$_UserOpInfo_$825_memory_ptr","typeString":"struct EntryPoint.UserOpInfo memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_struct$_UserOperation_$3762_calldata_ptr","typeString":"struct UserOperation calldata"},{"typeIdentifier":"t_struct$_UserOpInfo_$825_memory_ptr","typeString":"struct EntryPoint.UserOpInfo memory"}],"id":1128,"name":"_validatePrepayment","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2251,"src":"14129:19:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$_t_struct$_UserOperation_$3762_calldata_ptr_$_t_struct$_UserOpInfo_$825_memory_ptr_$returns$_t_uint256_$_t_uint256_$","typeString":"function (uint256,struct UserOperation calldata,struct EntryPoint.UserOpInfo memory) returns (uint256,uint256)"}},"id":1132,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14129:41:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"14035:135:1"},{"assignments":[1136],"declarations":[{"constant":false,"id":1136,"mutability":"mutable","name":"paymasterInfo","nameLocation":"14197:13:1","nodeType":"VariableDeclaration","scope":1271,"src":"14180:30:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_StakeInfo_$3687_memory_ptr","typeString":"struct IStakeManager.StakeInfo"},"typeName":{"id":1135,"nodeType":"UserDefinedTypeName","pathNode":{"id":1134,"name":"StakeInfo","nameLocations":["14180:9:1"],"nodeType":"IdentifierPath","referencedDeclaration":3687,"src":"14180:9:1"},"referencedDeclaration":3687,"src":"14180:9:1","typeDescriptions":{"typeIdentifier":"t_struct$_StakeInfo_$3687_storage_ptr","typeString":"struct IStakeManager.StakeInfo"}},"visibility":"internal"}],"id":1142,"initialValue":{"arguments":[{"expression":{"expression":{"id":1138,"name":"outOpInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1118,"src":"14240:9:1","typeDescriptions":{"typeIdentifier":"t_struct$_UserOpInfo_$825_memory_ptr","typeString":"struct EntryPoint.UserOpInfo memory"}},"id":1139,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"14250:7:1","memberName":"mUserOp","nodeType":"MemberAccess","referencedDeclaration":816,"src":"14240:17:1","typeDescriptions":{"typeIdentifier":"t_struct$_MemoryUserOp_$813_memory_ptr","typeString":"struct EntryPoint.MemoryUserOp memory"}},"id":1140,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"14258:9:1","memberName":"paymaster","nodeType":"MemberAccess","referencedDeclaration":808,"src":"14240:27:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1137,"name":"_getStakeInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2951,"src":"14213:13:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_struct$_StakeInfo_$3687_memory_ptr_$","typeString":"function (address) view returns (struct IStakeManager.StakeInfo memory)"}},"id":1141,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14213:64:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_StakeInfo_$3687_memory_ptr","typeString":"struct IStakeManager.StakeInfo memory"}},"nodeType":"VariableDeclarationStatement","src":"14180:97:1"},{"assignments":[1145],"declarations":[{"constant":false,"id":1145,"mutability":"mutable","name":"senderInfo","nameLocation":"14304:10:1","nodeType":"VariableDeclaration","scope":1271,"src":"14287:27:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_StakeInfo_$3687_memory_ptr","typeString":"struct IStakeManager.StakeInfo"},"typeName":{"id":1144,"nodeType":"UserDefinedTypeName","pathNode":{"id":1143,"name":"StakeInfo","nameLocations":["14287:9:1"],"nodeType":"IdentifierPath","referencedDeclaration":3687,"src":"14287:9:1"},"referencedDeclaration":3687,"src":"14287:9:1","typeDescriptions":{"typeIdentifier":"t_struct$_StakeInfo_$3687_storage_ptr","typeString":"struct IStakeManager.StakeInfo"}},"visibility":"internal"}],"id":1151,"initialValue":{"arguments":[{"expression":{"expression":{"id":1147,"name":"outOpInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1118,"src":"14331:9:1","typeDescriptions":{"typeIdentifier":"t_struct$_UserOpInfo_$825_memory_ptr","typeString":"struct EntryPoint.UserOpInfo memory"}},"id":1148,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"14341:7:1","memberName":"mUserOp","nodeType":"MemberAccess","referencedDeclaration":816,"src":"14331:17:1","typeDescriptions":{"typeIdentifier":"t_struct$_MemoryUserOp_$813_memory_ptr","typeString":"struct EntryPoint.MemoryUserOp memory"}},"id":1149,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"14349:6:1","memberName":"sender","nodeType":"MemberAccess","referencedDeclaration":798,"src":"14331:24:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1146,"name":"_getStakeInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2951,"src":"14317:13:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_struct$_StakeInfo_$3687_memory_ptr_$","typeString":"function (address) view returns (struct IStakeManager.StakeInfo memory)"}},"id":1150,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14317:39:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_StakeInfo_$3687_memory_ptr","typeString":"struct IStakeManager.StakeInfo memory"}},"nodeType":"VariableDeclarationStatement","src":"14287:69:1"},{"assignments":[1154],"declarations":[{"constant":false,"id":1154,"mutability":"mutable","name":"factoryInfo","nameLocation":"14383:11:1","nodeType":"VariableDeclaration","scope":1271,"src":"14366:28:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_StakeInfo_$3687_memory_ptr","typeString":"struct IStakeManager.StakeInfo"},"typeName":{"id":1153,"nodeType":"UserDefinedTypeName","pathNode":{"id":1152,"name":"StakeInfo","nameLocations":["14366:9:1"],"nodeType":"IdentifierPath","referencedDeclaration":3687,"src":"14366:9:1"},"referencedDeclaration":3687,"src":"14366:9:1","typeDescriptions":{"typeIdentifier":"t_struct$_StakeInfo_$3687_storage_ptr","typeString":"struct IStakeManager.StakeInfo"}},"visibility":"internal"}],"id":1155,"nodeType":"VariableDeclarationStatement","src":"14366:28:1"},{"id":1189,"nodeType":"Block","src":"14404:249:1","statements":[{"assignments":[1157],"declarations":[{"constant":false,"id":1157,"mutability":"mutable","name":"initCode","nameLocation":"14433:8:1","nodeType":"VariableDeclaration","scope":1189,"src":"14418:23:1","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1156,"name":"bytes","nodeType":"ElementaryTypeName","src":"14418:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1160,"initialValue":{"expression":{"id":1158,"name":"userOp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1113,"src":"14444:6:1","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$3762_calldata_ptr","typeString":"struct UserOperation calldata"}},"id":1159,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14451:8:1","memberName":"initCode","nodeType":"MemberAccess","referencedDeclaration":3745,"src":"14444:15:1","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"nodeType":"VariableDeclarationStatement","src":"14418:41:1"},{"assignments":[1162],"declarations":[{"constant":false,"id":1162,"mutability":"mutable","name":"factory","nameLocation":"14481:7:1","nodeType":"VariableDeclaration","scope":1189,"src":"14473:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1161,"name":"address","nodeType":"ElementaryTypeName","src":"14473:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1182,"initialValue":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1166,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1163,"name":"initCode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1157,"src":"14491:8:1","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"id":1164,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14500:6:1","memberName":"length","nodeType":"MemberAccess","src":"14491:15:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"hexValue":"3230","id":1165,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14510:2:1","typeDescriptions":{"typeIdentifier":"t_rational_20_by_1","typeString":"int_const 20"},"value":"20"},"src":"14491:21:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"arguments":[{"hexValue":"30","id":1179,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14590:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1178,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14582:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1177,"name":"address","nodeType":"ElementaryTypeName","src":"14582:7:1","typeDescriptions":{}}},"id":1180,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14582:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1181,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"14491:101:1","trueExpression":{"arguments":[{"arguments":[{"baseExpression":{"id":1171,"name":"initCode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1157,"src":"14547:8:1","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"endExpression":{"hexValue":"3230","id":1173,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14558:2:1","typeDescriptions":{"typeIdentifier":"t_rational_20_by_1","typeString":"int_const 20"},"value":"20"},"id":1174,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexRangeAccess","src":"14547:14:1","startExpression":{"hexValue":"30","id":1172,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14556:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr_slice","typeString":"bytes calldata slice"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_calldata_ptr_slice","typeString":"bytes calldata slice"}],"id":1170,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14539:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes20_$","typeString":"type(bytes20)"},"typeName":{"id":1169,"name":"bytes20","nodeType":"ElementaryTypeName","src":"14539:7:1","typeDescriptions":{}}},"id":1175,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14539:23:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes20","typeString":"bytes20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes20","typeString":"bytes20"}],"id":1168,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14531:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1167,"name":"address","nodeType":"ElementaryTypeName","src":"14531:7:1","typeDescriptions":{}}},"id":1176,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14531:32:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"14473:119:1"},{"expression":{"id":1187,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1183,"name":"factoryInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1154,"src":"14606:11:1","typeDescriptions":{"typeIdentifier":"t_struct$_StakeInfo_$3687_memory_ptr","typeString":"struct IStakeManager.StakeInfo memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":1185,"name":"factory","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1162,"src":"14634:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1184,"name":"_getStakeInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2951,"src":"14620:13:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_struct$_StakeInfo_$3687_memory_ptr_$","typeString":"function (address) view returns (struct IStakeManager.StakeInfo memory)"}},"id":1186,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14620:22:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_StakeInfo_$3687_memory_ptr","typeString":"struct IStakeManager.StakeInfo memory"}},"src":"14606:36:1","typeDescriptions":{"typeIdentifier":"t_struct$_StakeInfo_$3687_memory_ptr","typeString":"struct IStakeManager.StakeInfo memory"}},"id":1188,"nodeType":"ExpressionStatement","src":"14606:36:1"}]},{"assignments":[1192],"declarations":[{"constant":false,"id":1192,"mutability":"mutable","name":"data","nameLocation":"14685:4:1","nodeType":"VariableDeclaration","scope":1271,"src":"14663:26:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_ValidationData_$2526_memory_ptr","typeString":"struct ValidationData"},"typeName":{"id":1191,"nodeType":"UserDefinedTypeName","pathNode":{"id":1190,"name":"ValidationData","nameLocations":["14663:14:1"],"nodeType":"IdentifierPath","referencedDeclaration":2526,"src":"14663:14:1"},"referencedDeclaration":2526,"src":"14663:14:1","typeDescriptions":{"typeIdentifier":"t_struct$_ValidationData_$2526_storage_ptr","typeString":"struct ValidationData"}},"visibility":"internal"}],"id":1197,"initialValue":{"arguments":[{"id":1194,"name":"validationData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1125,"src":"14725:14:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1195,"name":"paymasterValidationData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1127,"src":"14753:23:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1193,"name":"_intersectTimeRange","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2670,"src":"14692:19:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_struct$_ValidationData_$2526_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (struct ValidationData memory)"}},"id":1196,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14692:94:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_ValidationData_$2526_memory_ptr","typeString":"struct ValidationData memory"}},"nodeType":"VariableDeclarationStatement","src":"14663:123:1"},{"assignments":[1199],"declarations":[{"constant":false,"id":1199,"mutability":"mutable","name":"aggregator","nameLocation":"14804:10:1","nodeType":"VariableDeclaration","scope":1271,"src":"14796:18:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1198,"name":"address","nodeType":"ElementaryTypeName","src":"14796:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1202,"initialValue":{"expression":{"id":1200,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1192,"src":"14817:4:1","typeDescriptions":{"typeIdentifier":"t_struct$_ValidationData_$2526_memory_ptr","typeString":"struct ValidationData memory"}},"id":1201,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"14822:10:1","memberName":"aggregator","nodeType":"MemberAccess","referencedDeclaration":2521,"src":"14817:15:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"14796:36:1"},{"assignments":[1204],"declarations":[{"constant":false,"id":1204,"mutability":"mutable","name":"sigFailed","nameLocation":"14847:9:1","nodeType":"VariableDeclaration","scope":1271,"src":"14842:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1203,"name":"bool","nodeType":"ElementaryTypeName","src":"14842:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":1211,"initialValue":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1210,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1205,"name":"aggregator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1199,"src":"14859:10:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"31","id":1208,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14881:1:1","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"}],"id":1207,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14873:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1206,"name":"address","nodeType":"ElementaryTypeName","src":"14873:7:1","typeDescriptions":{}}},"id":1209,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14873:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"14859:24:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"14842:41:1"},{"assignments":[1214],"declarations":[{"constant":false,"id":1214,"mutability":"mutable","name":"returnInfo","nameLocation":"14911:10:1","nodeType":"VariableDeclaration","scope":1271,"src":"14893:28:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_ReturnInfo_$3552_memory_ptr","typeString":"struct IEntryPoint.ReturnInfo"},"typeName":{"id":1213,"nodeType":"UserDefinedTypeName","pathNode":{"id":1212,"name":"ReturnInfo","nameLocations":["14893:10:1"],"nodeType":"IdentifierPath","referencedDeclaration":3552,"src":"14893:10:1"},"referencedDeclaration":3552,"src":"14893:10:1","typeDescriptions":{"typeIdentifier":"t_struct$_ReturnInfo_$3552_storage_ptr","typeString":"struct IEntryPoint.ReturnInfo"}},"visibility":"internal"}],"id":1230,"initialValue":{"arguments":[{"expression":{"id":1216,"name":"outOpInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1118,"src":"14948:9:1","typeDescriptions":{"typeIdentifier":"t_struct$_UserOpInfo_$825_memory_ptr","typeString":"struct EntryPoint.UserOpInfo memory"}},"id":1217,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"14958:8:1","memberName":"preOpGas","nodeType":"MemberAccess","referencedDeclaration":824,"src":"14948:18:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":1218,"name":"outOpInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1118,"src":"14980:9:1","typeDescriptions":{"typeIdentifier":"t_struct$_UserOpInfo_$825_memory_ptr","typeString":"struct EntryPoint.UserOpInfo memory"}},"id":1219,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"14990:7:1","memberName":"prefund","nodeType":"MemberAccess","referencedDeclaration":820,"src":"14980:17:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1220,"name":"sigFailed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1204,"src":"15011:9:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"expression":{"id":1221,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1192,"src":"15034:4:1","typeDescriptions":{"typeIdentifier":"t_struct$_ValidationData_$2526_memory_ptr","typeString":"struct ValidationData memory"}},"id":1222,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"15039:10:1","memberName":"validAfter","nodeType":"MemberAccess","referencedDeclaration":2523,"src":"15034:15:1","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},{"expression":{"id":1223,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1192,"src":"15063:4:1","typeDescriptions":{"typeIdentifier":"t_struct$_ValidationData_$2526_memory_ptr","typeString":"struct ValidationData memory"}},"id":1224,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"15068:10:1","memberName":"validUntil","nodeType":"MemberAccess","referencedDeclaration":2525,"src":"15063:15:1","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},{"arguments":[{"expression":{"id":1226,"name":"outOpInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1118,"src":"15117:9:1","typeDescriptions":{"typeIdentifier":"t_struct$_UserOpInfo_$825_memory_ptr","typeString":"struct EntryPoint.UserOpInfo memory"}},"id":1227,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"15127:13:1","memberName":"contextOffset","nodeType":"MemberAccess","referencedDeclaration":822,"src":"15117:23:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1225,"name":"getMemoryBytesFromOffset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2511,"src":"15092:24:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"}},"id":1228,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15092:49:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint48","typeString":"uint48"},{"typeIdentifier":"t_uint48","typeString":"uint48"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1215,"name":"ReturnInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3552,"src":"14924:10:1","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_ReturnInfo_$3552_storage_ptr_$","typeString":"type(struct IEntryPoint.ReturnInfo storage pointer)"}},"id":1229,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14924:227:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_ReturnInfo_$3552_memory_ptr","typeString":"struct IEntryPoint.ReturnInfo memory"}},"nodeType":"VariableDeclarationStatement","src":"14893:258:1"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1243,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1236,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1231,"name":"aggregator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1199,"src":"15166:10:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1234,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15188:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1233,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15180:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1232,"name":"address","nodeType":"ElementaryTypeName","src":"15180:7:1","typeDescriptions":{}}},"id":1235,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15180:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"15166:24:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1242,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1237,"name":"aggregator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1199,"src":"15194:10:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"31","id":1240,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15216:1:1","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"}],"id":1239,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15208:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1238,"name":"address","nodeType":"ElementaryTypeName","src":"15208:7:1","typeDescriptions":{}}},"id":1241,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15208:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"15194:24:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"15166:52:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1263,"nodeType":"IfStatement","src":"15162:445:1","trueBody":{"id":1262,"nodeType":"Block","src":"15220:387:1","statements":[{"assignments":[1246],"declarations":[{"constant":false,"id":1246,"mutability":"mutable","name":"aggregatorInfo","nameLocation":"15261:14:1","nodeType":"VariableDeclaration","scope":1262,"src":"15234:41:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_AggregatorStakeInfo_$3558_memory_ptr","typeString":"struct IEntryPoint.AggregatorStakeInfo"},"typeName":{"id":1245,"nodeType":"UserDefinedTypeName","pathNode":{"id":1244,"name":"AggregatorStakeInfo","nameLocations":["15234:19:1"],"nodeType":"IdentifierPath","referencedDeclaration":3558,"src":"15234:19:1"},"referencedDeclaration":3558,"src":"15234:19:1","typeDescriptions":{"typeIdentifier":"t_struct$_AggregatorStakeInfo_$3558_storage_ptr","typeString":"struct IEntryPoint.AggregatorStakeInfo"}},"visibility":"internal"}],"id":1253,"initialValue":{"arguments":[{"id":1248,"name":"aggregator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1199,"src":"15315:10:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":1250,"name":"aggregator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1199,"src":"15357:10:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1249,"name":"_getStakeInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2951,"src":"15343:13:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_struct$_StakeInfo_$3687_memory_ptr_$","typeString":"function (address) view returns (struct IStakeManager.StakeInfo memory)"}},"id":1251,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15343:25:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_StakeInfo_$3687_memory_ptr","typeString":"struct IStakeManager.StakeInfo memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_struct$_StakeInfo_$3687_memory_ptr","typeString":"struct IStakeManager.StakeInfo memory"}],"id":1247,"name":"AggregatorStakeInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3558,"src":"15278:19:1","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_AggregatorStakeInfo_$3558_storage_ptr_$","typeString":"type(struct IEntryPoint.AggregatorStakeInfo storage pointer)"}},"id":1252,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15278:104:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AggregatorStakeInfo_$3558_memory_ptr","typeString":"struct IEntryPoint.AggregatorStakeInfo memory"}},"nodeType":"VariableDeclarationStatement","src":"15234:148:1"},{"errorCall":{"arguments":[{"id":1255,"name":"returnInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1214,"src":"15452:10:1","typeDescriptions":{"typeIdentifier":"t_struct$_ReturnInfo_$3552_memory_ptr","typeString":"struct IEntryPoint.ReturnInfo memory"}},{"id":1256,"name":"senderInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1145,"src":"15480:10:1","typeDescriptions":{"typeIdentifier":"t_struct$_StakeInfo_$3687_memory_ptr","typeString":"struct IStakeManager.StakeInfo memory"}},{"id":1257,"name":"factoryInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1154,"src":"15508:11:1","typeDescriptions":{"typeIdentifier":"t_struct$_StakeInfo_$3687_memory_ptr","typeString":"struct IStakeManager.StakeInfo memory"}},{"id":1258,"name":"paymasterInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1136,"src":"15537:13:1","typeDescriptions":{"typeIdentifier":"t_struct$_StakeInfo_$3687_memory_ptr","typeString":"struct IStakeManager.StakeInfo memory"}},{"id":1259,"name":"aggregatorInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1246,"src":"15568:14:1","typeDescriptions":{"typeIdentifier":"t_struct$_AggregatorStakeInfo_$3558_memory_ptr","typeString":"struct IEntryPoint.AggregatorStakeInfo memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_ReturnInfo_$3552_memory_ptr","typeString":"struct IEntryPoint.ReturnInfo memory"},{"typeIdentifier":"t_struct$_StakeInfo_$3687_memory_ptr","typeString":"struct IStakeManager.StakeInfo memory"},{"typeIdentifier":"t_struct$_StakeInfo_$3687_memory_ptr","typeString":"struct IStakeManager.StakeInfo memory"},{"typeIdentifier":"t_struct$_StakeInfo_$3687_memory_ptr","typeString":"struct IStakeManager.StakeInfo memory"},{"typeIdentifier":"t_struct$_AggregatorStakeInfo_$3558_memory_ptr","typeString":"struct IEntryPoint.AggregatorStakeInfo memory"}],"id":1254,"name":"ValidationResultWithAggregation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3473,"src":"15403:31:1","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_struct$_ReturnInfo_$3552_memory_ptr_$_t_struct$_StakeInfo_$3687_memory_ptr_$_t_struct$_StakeInfo_$3687_memory_ptr_$_t_struct$_StakeInfo_$3687_memory_ptr_$_t_struct$_AggregatorStakeInfo_$3558_memory_ptr_$returns$__$","typeString":"function (struct IEntryPoint.ReturnInfo memory,struct IStakeManager.StakeInfo memory,struct IStakeManager.StakeInfo memory,struct IStakeManager.StakeInfo memory,struct IEntryPoint.AggregatorStakeInfo memory) pure"}},"id":1260,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15403:193:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1261,"nodeType":"RevertStatement","src":"15396:200:1"}]}},{"errorCall":{"arguments":[{"id":1265,"name":"returnInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1214,"src":"15653:10:1","typeDescriptions":{"typeIdentifier":"t_struct$_ReturnInfo_$3552_memory_ptr","typeString":"struct IEntryPoint.ReturnInfo memory"}},{"id":1266,"name":"senderInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1145,"src":"15677:10:1","typeDescriptions":{"typeIdentifier":"t_struct$_StakeInfo_$3687_memory_ptr","typeString":"struct IStakeManager.StakeInfo memory"}},{"id":1267,"name":"factoryInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1154,"src":"15701:11:1","typeDescriptions":{"typeIdentifier":"t_struct$_StakeInfo_$3687_memory_ptr","typeString":"struct IStakeManager.StakeInfo memory"}},{"id":1268,"name":"paymasterInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1136,"src":"15726:13:1","typeDescriptions":{"typeIdentifier":"t_struct$_StakeInfo_$3687_memory_ptr","typeString":"struct IStakeManager.StakeInfo memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_ReturnInfo_$3552_memory_ptr","typeString":"struct IEntryPoint.ReturnInfo memory"},{"typeIdentifier":"t_struct$_StakeInfo_$3687_memory_ptr","typeString":"struct IStakeManager.StakeInfo memory"},{"typeIdentifier":"t_struct$_StakeInfo_$3687_memory_ptr","typeString":"struct IStakeManager.StakeInfo memory"},{"typeIdentifier":"t_struct$_StakeInfo_$3687_memory_ptr","typeString":"struct IStakeManager.StakeInfo memory"}],"id":1264,"name":"ValidationResult","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3455,"src":"15623:16:1","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_struct$_ReturnInfo_$3552_memory_ptr_$_t_struct$_StakeInfo_$3687_memory_ptr_$_t_struct$_StakeInfo_$3687_memory_ptr_$_t_struct$_StakeInfo_$3687_memory_ptr_$returns$__$","typeString":"function (struct IEntryPoint.ReturnInfo memory,struct IStakeManager.StakeInfo memory,struct IStakeManager.StakeInfo memory,struct IStakeManager.StakeInfo memory) pure"}},"id":1269,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15623:126:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1270,"nodeType":"RevertStatement","src":"15616:133:1"}]},"documentation":{"id":1110,"nodeType":"StructuredDocumentation","src":"13472:398:1","text":" Simulate a call to account.validateUserOp and paymaster.validatePaymasterUserOp.\n @dev this method always revert. Successful result is ValidationResult error. other errors are failures.\n @dev The node must also verify it doesn't use banned opcodes, and that it doesn't reference storage outside the account's data.\n @param userOp the user operation to validate."},"functionSelector":"ee219423","id":1272,"implemented":true,"kind":"function","modifiers":[],"name":"simulateValidation","nameLocation":"13884:18:1","nodeType":"FunctionDefinition","parameters":{"id":1114,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1113,"mutability":"mutable","name":"userOp","nameLocation":"13926:6:1","nodeType":"VariableDeclaration","scope":1272,"src":"13903:29:1","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$3762_calldata_ptr","typeString":"struct UserOperation"},"typeName":{"id":1112,"nodeType":"UserDefinedTypeName","pathNode":{"id":1111,"name":"UserOperation","nameLocations":["13903:13:1"],"nodeType":"IdentifierPath","referencedDeclaration":3762,"src":"13903:13:1"},"referencedDeclaration":3762,"src":"13903:13:1","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$3762_storage_ptr","typeString":"struct UserOperation"}},"visibility":"internal"}],"src":"13902:31:1"},"returnParameters":{"id":1115,"nodeType":"ParameterList","parameters":[],"src":"13943:0:1"},"scope":2517,"src":"13875:1881:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":1314,"nodeType":"Block","src":"15882:521:1","statements":[{"id":1313,"nodeType":"UncheckedBlock","src":"15892:505:1","statements":[{"assignments":[1281],"declarations":[{"constant":false,"id":1281,"mutability":"mutable","name":"mul","nameLocation":"16104:3:1","nodeType":"VariableDeclaration","scope":1313,"src":"16096:11:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1280,"name":"uint256","nodeType":"ElementaryTypeName","src":"16096:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1292,"initialValue":{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1288,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1282,"name":"mUserOp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1275,"src":"16110:7:1","typeDescriptions":{"typeIdentifier":"t_struct$_MemoryUserOp_$813_memory_ptr","typeString":"struct EntryPoint.MemoryUserOp memory"}},"id":1283,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"16118:9:1","memberName":"paymaster","nodeType":"MemberAccess","referencedDeclaration":808,"src":"16110:17:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1286,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16139:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1285,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16131:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1284,"name":"address","nodeType":"ElementaryTypeName","src":"16131:7:1","typeDescriptions":{}}},"id":1287,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16131:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"16110:31:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"31","id":1290,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16148:1:1","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"id":1291,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"16110:39:1","trueExpression":{"hexValue":"33","id":1289,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16144:1:1","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"VariableDeclarationStatement","src":"16096:53:1"},{"assignments":[1294],"declarations":[{"constant":false,"id":1294,"mutability":"mutable","name":"requiredGas","nameLocation":"16171:11:1","nodeType":"VariableDeclaration","scope":1313,"src":"16163:19:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1293,"name":"uint256","nodeType":"ElementaryTypeName","src":"16163:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1305,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1304,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1301,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1295,"name":"mUserOp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1275,"src":"16185:7:1","typeDescriptions":{"typeIdentifier":"t_struct$_MemoryUserOp_$813_memory_ptr","typeString":"struct EntryPoint.MemoryUserOp memory"}},"id":1296,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"16193:12:1","memberName":"callGasLimit","nodeType":"MemberAccess","referencedDeclaration":802,"src":"16185:20:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1300,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1297,"name":"mUserOp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1275,"src":"16224:7:1","typeDescriptions":{"typeIdentifier":"t_struct$_MemoryUserOp_$813_memory_ptr","typeString":"struct EntryPoint.MemoryUserOp memory"}},"id":1298,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"16232:20:1","memberName":"verificationGasLimit","nodeType":"MemberAccess","referencedDeclaration":804,"src":"16224:28:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1299,"name":"mul","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1281,"src":"16271:3:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"16224:50:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"16185:89:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"expression":{"id":1302,"name":"mUserOp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1275,"src":"16293:7:1","typeDescriptions":{"typeIdentifier":"t_struct$_MemoryUserOp_$813_memory_ptr","typeString":"struct EntryPoint.MemoryUserOp memory"}},"id":1303,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"16301:18:1","memberName":"preVerificationGas","nodeType":"MemberAccess","referencedDeclaration":806,"src":"16293:26:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"16185:134:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"16163:156:1"},{"expression":{"id":1311,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1306,"name":"requiredPrefund","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1278,"src":"16334:15:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1310,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1307,"name":"requiredGas","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1294,"src":"16352:11:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"expression":{"id":1308,"name":"mUserOp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1275,"src":"16366:7:1","typeDescriptions":{"typeIdentifier":"t_struct$_MemoryUserOp_$813_memory_ptr","typeString":"struct EntryPoint.MemoryUserOp memory"}},"id":1309,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"16374:12:1","memberName":"maxFeePerGas","nodeType":"MemberAccess","referencedDeclaration":810,"src":"16366:20:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"16352:34:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"16334:52:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1312,"nodeType":"ExpressionStatement","src":"16334:52:1"}]}]},"id":1315,"implemented":true,"kind":"function","modifiers":[],"name":"_getRequiredPrefund","nameLocation":"15771:19:1","nodeType":"FunctionDefinition","parameters":{"id":1276,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1275,"mutability":"mutable","name":"mUserOp","nameLocation":"15820:7:1","nodeType":"VariableDeclaration","scope":1315,"src":"15800:27:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_MemoryUserOp_$813_memory_ptr","typeString":"struct EntryPoint.MemoryUserOp"},"typeName":{"id":1274,"nodeType":"UserDefinedTypeName","pathNode":{"id":1273,"name":"MemoryUserOp","nameLocations":["15800:12:1"],"nodeType":"IdentifierPath","referencedDeclaration":813,"src":"15800:12:1"},"referencedDeclaration":813,"src":"15800:12:1","typeDescriptions":{"typeIdentifier":"t_struct$_MemoryUserOp_$813_storage_ptr","typeString":"struct EntryPoint.MemoryUserOp"}},"visibility":"internal"}],"src":"15790:43:1"},"returnParameters":{"id":1279,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1278,"mutability":"mutable","name":"requiredPrefund","nameLocation":"15865:15:1","nodeType":"VariableDeclaration","scope":1315,"src":"15857:23:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1277,"name":"uint256","nodeType":"ElementaryTypeName","src":"15857:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15856:25:1"},"scope":2517,"src":"15762:641:1","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1414,"nodeType":"Block","src":"16594:946:1","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1328,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1325,"name":"initCode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1322,"src":"16608:8:1","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"id":1326,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16617:6:1","memberName":"length","nodeType":"MemberAccess","src":"16608:15:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":1327,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16627:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"16608:20:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1413,"nodeType":"IfStatement","src":"16604:930:1","trueBody":{"id":1412,"nodeType":"Block","src":"16630:904:1","statements":[{"assignments":[1330],"declarations":[{"constant":false,"id":1330,"mutability":"mutable","name":"sender","nameLocation":"16652:6:1","nodeType":"VariableDeclaration","scope":1412,"src":"16644:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1329,"name":"address","nodeType":"ElementaryTypeName","src":"16644:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1334,"initialValue":{"expression":{"expression":{"id":1331,"name":"opInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1320,"src":"16661:6:1","typeDescriptions":{"typeIdentifier":"t_struct$_UserOpInfo_$825_memory_ptr","typeString":"struct EntryPoint.UserOpInfo memory"}},"id":1332,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"16668:7:1","memberName":"mUserOp","nodeType":"MemberAccess","referencedDeclaration":816,"src":"16661:14:1","typeDescriptions":{"typeIdentifier":"t_struct$_MemoryUserOp_$813_memory_ptr","typeString":"struct EntryPoint.MemoryUserOp memory"}},"id":1333,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"16676:6:1","memberName":"sender","nodeType":"MemberAccess","referencedDeclaration":798,"src":"16661:21:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"16644:38:1"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1339,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":1335,"name":"sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1330,"src":"16700:6:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1336,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16707:4:1","memberName":"code","nodeType":"MemberAccess","src":"16700:11:1","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1337,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16712:6:1","memberName":"length","nodeType":"MemberAccess","src":"16700:18:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":1338,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16722:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"16700:23:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1345,"nodeType":"IfStatement","src":"16696:104:1","trueBody":{"errorCall":{"arguments":[{"id":1341,"name":"opIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1317,"src":"16757:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"414131302073656e64657220616c726561647920636f6e7374727563746564","id":1342,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"16766:33:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_267485e0b239ff7726cfbcfb111a14e388e8253ef89a57c2a12abc410bbc1a79","typeString":"literal_string \"AA10 sender already constructed\""},"value":"AA10 sender already constructed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_267485e0b239ff7726cfbcfb111a14e388e8253ef89a57c2a12abc410bbc1a79","typeString":"literal_string \"AA10 sender already constructed\""}],"id":1340,"name":"FailedOp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3435,"src":"16748:8:1","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$_t_string_memory_ptr_$returns$__$","typeString":"function (uint256,string memory) pure"}},"id":1343,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16748:52:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1344,"nodeType":"RevertStatement","src":"16741:59:1"}},{"assignments":[1347],"declarations":[{"constant":false,"id":1347,"mutability":"mutable","name":"sender1","nameLocation":"16822:7:1","nodeType":"VariableDeclaration","scope":1412,"src":"16814:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1346,"name":"address","nodeType":"ElementaryTypeName","src":"16814:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1356,"initialValue":{"arguments":[{"id":1354,"name":"initCode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1322,"src":"16931:8:1","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}],"expression":{"id":1348,"name":"senderCreator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":83,"src":"16832:13:1","typeDescriptions":{"typeIdentifier":"t_contract$_SenderCreator_$2895","typeString":"contract SenderCreator"}},"id":1349,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16846:12:1","memberName":"createSender","nodeType":"MemberAccess","referencedDeclaration":2894,"src":"16832:26:1","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$_t_address_$","typeString":"function (bytes memory) external returns (address)"}},"id":1353,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["gas"],"nodeType":"FunctionCallOptions","options":[{"expression":{"expression":{"id":1350,"name":"opInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1320,"src":"16881:6:1","typeDescriptions":{"typeIdentifier":"t_struct$_UserOpInfo_$825_memory_ptr","typeString":"struct EntryPoint.UserOpInfo memory"}},"id":1351,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"16888:7:1","memberName":"mUserOp","nodeType":"MemberAccess","referencedDeclaration":816,"src":"16881:14:1","typeDescriptions":{"typeIdentifier":"t_struct$_MemoryUserOp_$813_memory_ptr","typeString":"struct EntryPoint.MemoryUserOp memory"}},"id":1352,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"16896:20:1","memberName":"verificationGasLimit","nodeType":"MemberAccess","referencedDeclaration":804,"src":"16881:35:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"16832:98:1","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$_t_address_$gas","typeString":"function (bytes memory) external returns (address)"}},"id":1355,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16832:108:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"16814:126:1"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1362,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1357,"name":"sender1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1347,"src":"16958:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1360,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16977:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1359,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16969:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1358,"name":"address","nodeType":"ElementaryTypeName","src":"16969:7:1","typeDescriptions":{}}},"id":1361,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16969:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"16958:21:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1368,"nodeType":"IfStatement","src":"16954:98:1","trueBody":{"errorCall":{"arguments":[{"id":1364,"name":"opIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1317,"src":"17013:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"4141313320696e6974436f6465206661696c6564206f72204f4f47","id":1365,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"17022:29:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_a46d515f685002bbb631614d07729b129ca01335d4ee63cf10853491e47dee73","typeString":"literal_string \"AA13 initCode failed or OOG\""},"value":"AA13 initCode failed or OOG"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_a46d515f685002bbb631614d07729b129ca01335d4ee63cf10853491e47dee73","typeString":"literal_string \"AA13 initCode failed or OOG\""}],"id":1363,"name":"FailedOp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3435,"src":"17004:8:1","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$_t_string_memory_ptr_$returns$__$","typeString":"function (uint256,string memory) pure"}},"id":1366,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17004:48:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1367,"nodeType":"RevertStatement","src":"16997:55:1"}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1371,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1369,"name":"sender1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1347,"src":"17070:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":1370,"name":"sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1330,"src":"17081:6:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"17070:17:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1377,"nodeType":"IfStatement","src":"17066:99:1","trueBody":{"errorCall":{"arguments":[{"id":1373,"name":"opIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1317,"src":"17121:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"4141313420696e6974436f6465206d7573742072657475726e2073656e646572","id":1374,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"17130:34:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_cf8e5f91822a9ca4de44f9559ff5db3083e7cb35e25710632c57dc900da04602","typeString":"literal_string \"AA14 initCode must return sender\""},"value":"AA14 initCode must return sender"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_cf8e5f91822a9ca4de44f9559ff5db3083e7cb35e25710632c57dc900da04602","typeString":"literal_string \"AA14 initCode must return sender\""}],"id":1372,"name":"FailedOp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3435,"src":"17112:8:1","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$_t_string_memory_ptr_$returns$__$","typeString":"function (uint256,string memory) pure"}},"id":1375,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17112:53:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1376,"nodeType":"RevertStatement","src":"17105:60:1"}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1382,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":1378,"name":"sender1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1347,"src":"17183:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1379,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"17191:4:1","memberName":"code","nodeType":"MemberAccess","src":"17183:12:1","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1380,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"17196:6:1","memberName":"length","nodeType":"MemberAccess","src":"17183:19:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1381,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17206:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"17183:24:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1388,"nodeType":"IfStatement","src":"17179:106:1","trueBody":{"errorCall":{"arguments":[{"id":1384,"name":"opIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1317,"src":"17241:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"4141313520696e6974436f6465206d757374206372656174652073656e646572","id":1385,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"17250:34:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_bb1e067ee25aabe05bbdddb7ea9a4490fa96ed7d10c6207acd0a3c723a9b7ed6","typeString":"literal_string \"AA15 initCode must create sender\""},"value":"AA15 initCode must create sender"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_bb1e067ee25aabe05bbdddb7ea9a4490fa96ed7d10c6207acd0a3c723a9b7ed6","typeString":"literal_string \"AA15 initCode must create sender\""}],"id":1383,"name":"FailedOp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3435,"src":"17232:8:1","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$_t_string_memory_ptr_$returns$__$","typeString":"function (uint256,string memory) pure"}},"id":1386,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17232:53:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1387,"nodeType":"RevertStatement","src":"17225:60:1"}},{"assignments":[1390],"declarations":[{"constant":false,"id":1390,"mutability":"mutable","name":"factory","nameLocation":"17307:7:1","nodeType":"VariableDeclaration","scope":1412,"src":"17299:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1389,"name":"address","nodeType":"ElementaryTypeName","src":"17299:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1401,"initialValue":{"arguments":[{"arguments":[{"baseExpression":{"id":1395,"name":"initCode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1322,"src":"17333:8:1","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"endExpression":{"hexValue":"3230","id":1397,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17344:2:1","typeDescriptions":{"typeIdentifier":"t_rational_20_by_1","typeString":"int_const 20"},"value":"20"},"id":1398,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexRangeAccess","src":"17333:14:1","startExpression":{"hexValue":"30","id":1396,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17342:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr_slice","typeString":"bytes calldata slice"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_calldata_ptr_slice","typeString":"bytes calldata slice"}],"id":1394,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17325:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes20_$","typeString":"type(bytes20)"},"typeName":{"id":1393,"name":"bytes20","nodeType":"ElementaryTypeName","src":"17325:7:1","typeDescriptions":{}}},"id":1399,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17325:23:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes20","typeString":"bytes20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes20","typeString":"bytes20"}],"id":1392,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17317:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1391,"name":"address","nodeType":"ElementaryTypeName","src":"17317:7:1","typeDescriptions":{}}},"id":1400,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17317:32:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"17299:50:1"},{"eventCall":{"arguments":[{"expression":{"id":1403,"name":"opInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1320,"src":"17401:6:1","typeDescriptions":{"typeIdentifier":"t_struct$_UserOpInfo_$825_memory_ptr","typeString":"struct EntryPoint.UserOpInfo memory"}},"id":1404,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"17408:10:1","memberName":"userOpHash","nodeType":"MemberAccess","referencedDeclaration":818,"src":"17401:17:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1405,"name":"sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1330,"src":"17436:6:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1406,"name":"factory","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1390,"src":"17460:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"expression":{"id":1407,"name":"opInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1320,"src":"17485:6:1","typeDescriptions":{"typeIdentifier":"t_struct$_UserOpInfo_$825_memory_ptr","typeString":"struct EntryPoint.UserOpInfo memory"}},"id":1408,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"17492:7:1","memberName":"mUserOp","nodeType":"MemberAccess","referencedDeclaration":816,"src":"17485:14:1","typeDescriptions":{"typeIdentifier":"t_struct$_MemoryUserOp_$813_memory_ptr","typeString":"struct EntryPoint.MemoryUserOp memory"}},"id":1409,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"17500:9:1","memberName":"paymaster","nodeType":"MemberAccess","referencedDeclaration":808,"src":"17485:24:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1402,"name":"AccountDeployed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3409,"src":"17368:15:1","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$_t_address_$returns$__$","typeString":"function (bytes32,address,address,address)"}},"id":1410,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17368:155:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1411,"nodeType":"EmitStatement","src":"17363:160:1"}]}}]},"id":1415,"implemented":true,"kind":"function","modifiers":[],"name":"_createSenderIfNeeded","nameLocation":"16465:21:1","nodeType":"FunctionDefinition","parameters":{"id":1323,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1317,"mutability":"mutable","name":"opIndex","nameLocation":"16504:7:1","nodeType":"VariableDeclaration","scope":1415,"src":"16496:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1316,"name":"uint256","nodeType":"ElementaryTypeName","src":"16496:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1320,"mutability":"mutable","name":"opInfo","nameLocation":"16539:6:1","nodeType":"VariableDeclaration","scope":1415,"src":"16521:24:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_UserOpInfo_$825_memory_ptr","typeString":"struct EntryPoint.UserOpInfo"},"typeName":{"id":1319,"nodeType":"UserDefinedTypeName","pathNode":{"id":1318,"name":"UserOpInfo","nameLocations":["16521:10:1"],"nodeType":"IdentifierPath","referencedDeclaration":825,"src":"16521:10:1"},"referencedDeclaration":825,"src":"16521:10:1","typeDescriptions":{"typeIdentifier":"t_struct$_UserOpInfo_$825_storage_ptr","typeString":"struct EntryPoint.UserOpInfo"}},"visibility":"internal"},{"constant":false,"id":1322,"mutability":"mutable","name":"initCode","nameLocation":"16570:8:1","nodeType":"VariableDeclaration","scope":1415,"src":"16555:23:1","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1321,"name":"bytes","nodeType":"ElementaryTypeName","src":"16555:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"16486:98:1"},"returnParameters":{"id":1324,"nodeType":"ParameterList","parameters":[],"src":"16594:0:1"},"scope":2517,"src":"16456:1084:1","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"baseFunctions":[3564],"body":{"id":1432,"nodeType":"Block","src":"17946:114:1","statements":[{"assignments":[1422],"declarations":[{"constant":false,"id":1422,"mutability":"mutable","name":"sender","nameLocation":"17964:6:1","nodeType":"VariableDeclaration","scope":1432,"src":"17956:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1421,"name":"address","nodeType":"ElementaryTypeName","src":"17956:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1427,"initialValue":{"arguments":[{"id":1425,"name":"initCode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1418,"src":"18000:8:1","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}],"expression":{"id":1423,"name":"senderCreator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":83,"src":"17973:13:1","typeDescriptions":{"typeIdentifier":"t_contract$_SenderCreator_$2895","typeString":"contract SenderCreator"}},"id":1424,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"17987:12:1","memberName":"createSender","nodeType":"MemberAccess","referencedDeclaration":2894,"src":"17973:26:1","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$_t_address_$","typeString":"function (bytes memory) external returns (address)"}},"id":1426,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17973:36:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"17956:53:1"},{"errorCall":{"arguments":[{"id":1429,"name":"sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1422,"src":"18046:6:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1428,"name":"SenderAddressResult","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3478,"src":"18026:19:1","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1430,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18026:27:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1431,"nodeType":"RevertStatement","src":"18019:34:1"}]},"documentation":{"id":1416,"nodeType":"StructuredDocumentation","src":"17546:337:1","text":" Get counterfactual sender address.\n  Calculate the sender contract address that will be generated by the initCode and salt in the UserOperation.\n this method always revert, and returns the address in SenderAddressResult error\n @param initCode the constructor code to be passed into the UserOperation."},"functionSelector":"9b249f69","id":1433,"implemented":true,"kind":"function","modifiers":[],"name":"getSenderAddress","nameLocation":"17897:16:1","nodeType":"FunctionDefinition","parameters":{"id":1419,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1418,"mutability":"mutable","name":"initCode","nameLocation":"17929:8:1","nodeType":"VariableDeclaration","scope":1433,"src":"17914:23:1","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1417,"name":"bytes","nodeType":"ElementaryTypeName","src":"17914:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"17913:25:1"},"returnParameters":{"id":1420,"nodeType":"ParameterList","parameters":[],"src":"17946:0:1"},"scope":2517,"src":"17888:172:1","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":1470,"nodeType":"Block","src":"18161:414:1","statements":[{"clauses":[{"block":{"id":1448,"nodeType":"Block","src":"18400:2:1","statements":[]},"errorName":"","id":1449,"nodeType":"TryCatchClause","src":"18400:2:1"},{"block":{"id":1467,"nodeType":"Block","src":"18443:126:1","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1459,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":1455,"name":"revertReason","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1451,"src":"18467:12:1","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1454,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"18461:5:1","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1453,"name":"bytes","nodeType":"ElementaryTypeName","src":"18461:5:1","typeDescriptions":{}}},"id":1456,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18461:19:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1457,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"18481:6:1","memberName":"length","nodeType":"MemberAccess","src":"18461:26:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":1458,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18491:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"18461:31:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1466,"nodeType":"IfStatement","src":"18457:102:1","trueBody":{"id":1465,"nodeType":"Block","src":"18494:65:1","statements":[{"errorCall":{"arguments":[{"hexValue":"30","id":1461,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18528:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"id":1462,"name":"revertReason","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1451,"src":"18531:12:1","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1460,"name":"FailedOp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3435,"src":"18519:8:1","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$_t_string_memory_ptr_$returns$__$","typeString":"function (uint256,string memory) pure"}},"id":1463,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18519:25:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1464,"nodeType":"RevertStatement","src":"18512:32:1"}]}}]},"errorName":"Error","id":1468,"nodeType":"TryCatchClause","parameters":{"id":1452,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1451,"mutability":"mutable","name":"revertReason","nameLocation":"18429:12:1","nodeType":"VariableDeclaration","scope":1468,"src":"18415:26:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1450,"name":"string","nodeType":"ElementaryTypeName","src":"18415:6:1","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"18414:28:1"},"src":"18403:166:1"}],"externalCall":{"arguments":[{"expression":{"id":1441,"name":"userOp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1436,"src":"18290:6:1","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$3762_calldata_ptr","typeString":"struct UserOperation calldata"}},"id":1442,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"18297:8:1","memberName":"initCode","nodeType":"MemberAccess","referencedDeclaration":3745,"src":"18290:15:1","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},{"expression":{"id":1443,"name":"userOp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1436,"src":"18323:6:1","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$3762_calldata_ptr","typeString":"struct UserOperation calldata"}},"id":1444,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"18330:6:1","memberName":"sender","nodeType":"MemberAccess","referencedDeclaration":3741,"src":"18323:13:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":1445,"name":"userOp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1436,"src":"18354:6:1","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$3762_calldata_ptr","typeString":"struct UserOperation calldata"}},"id":1446,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"18361:16:1","memberName":"paymasterAndData","nodeType":"MemberAccess","referencedDeclaration":3759,"src":"18354:23:1","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}],"expression":{"id":1439,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"18240:4:1","typeDescriptions":{"typeIdentifier":"t_contract$_EntryPoint_$2517","typeString":"contract EntryPoint"}},"id":1440,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"18245:27:1","memberName":"_validateSenderAndPaymaster","nodeType":"MemberAccess","referencedDeclaration":1532,"src":"18240:32:1","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_bytes_memory_ptr_$_t_address_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (bytes memory,address,bytes memory) view external"}},"id":1447,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18240:151:1","tryCall":true,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1469,"nodeType":"TryStatement","src":"18224:345:1"}]},"id":1471,"implemented":true,"kind":"function","modifiers":[],"name":"_simulationOnlyValidations","nameLocation":"18075:26:1","nodeType":"FunctionDefinition","parameters":{"id":1437,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1436,"mutability":"mutable","name":"userOp","nameLocation":"18134:6:1","nodeType":"VariableDeclaration","scope":1471,"src":"18111:29:1","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$3762_calldata_ptr","typeString":"struct UserOperation"},"typeName":{"id":1435,"nodeType":"UserDefinedTypeName","pathNode":{"id":1434,"name":"UserOperation","nameLocations":["18111:13:1"],"nodeType":"IdentifierPath","referencedDeclaration":3762,"src":"18111:13:1"},"referencedDeclaration":3762,"src":"18111:13:1","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$3762_storage_ptr","typeString":"struct UserOperation"}},"visibility":"internal"}],"src":"18101:45:1"},"returnParameters":{"id":1438,"nodeType":"ParameterList","parameters":[],"src":"18161:0:1"},"scope":2517,"src":"18066:509:1","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1531,"nodeType":"Block","src":"18899:560:1","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1490,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1484,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1481,"name":"initCode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1474,"src":"18913:8:1","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"id":1482,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"18922:6:1","memberName":"length","nodeType":"MemberAccess","src":"18913:15:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1483,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18932:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"18913:20:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1489,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":1485,"name":"sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1476,"src":"18937:6:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1486,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"18944:4:1","memberName":"code","nodeType":"MemberAccess","src":"18937:11:1","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1487,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"18949:6:1","memberName":"length","nodeType":"MemberAccess","src":"18937:18:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1488,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18959:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"18937:23:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"18913:47:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1496,"nodeType":"IfStatement","src":"18909:182:1","trueBody":{"id":1495,"nodeType":"Block","src":"18962:129:1","statements":[{"expression":{"arguments":[{"hexValue":"41413230206163636f756e74206e6f74206465706c6f796564","id":1492,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"19052:27:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_71b8c59e134d62690a752e786c07dbe8b7f35be51e386ddf501ff1ee93b9f00e","typeString":"literal_string \"AA20 account not deployed\""},"value":"AA20 account not deployed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_71b8c59e134d62690a752e786c07dbe8b7f35be51e386ddf501ff1ee93b9f00e","typeString":"literal_string \"AA20 account not deployed\""}],"id":1491,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"19045:6:1","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":1493,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19045:35:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1494,"nodeType":"ExpressionStatement","src":"19045:35:1"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1500,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1497,"name":"paymasterAndData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1478,"src":"19104:16:1","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"id":1498,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"19121:6:1","memberName":"length","nodeType":"MemberAccess","src":"19104:23:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"hexValue":"3230","id":1499,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19131:2:1","typeDescriptions":{"typeIdentifier":"t_rational_20_by_1","typeString":"int_const 20"},"value":"20"},"src":"19104:29:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1526,"nodeType":"IfStatement","src":"19100:308:1","trueBody":{"id":1525,"nodeType":"Block","src":"19135:273:1","statements":[{"assignments":[1502],"declarations":[{"constant":false,"id":1502,"mutability":"mutable","name":"paymaster","nameLocation":"19157:9:1","nodeType":"VariableDeclaration","scope":1525,"src":"19149:17:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1501,"name":"address","nodeType":"ElementaryTypeName","src":"19149:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1513,"initialValue":{"arguments":[{"arguments":[{"baseExpression":{"id":1507,"name":"paymasterAndData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1478,"src":"19185:16:1","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"endExpression":{"hexValue":"3230","id":1509,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19204:2:1","typeDescriptions":{"typeIdentifier":"t_rational_20_by_1","typeString":"int_const 20"},"value":"20"},"id":1510,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexRangeAccess","src":"19185:22:1","startExpression":{"hexValue":"30","id":1508,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19202:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr_slice","typeString":"bytes calldata slice"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_calldata_ptr_slice","typeString":"bytes calldata slice"}],"id":1506,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"19177:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes20_$","typeString":"type(bytes20)"},"typeName":{"id":1505,"name":"bytes20","nodeType":"ElementaryTypeName","src":"19177:7:1","typeDescriptions":{}}},"id":1511,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19177:31:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes20","typeString":"bytes20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes20","typeString":"bytes20"}],"id":1504,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"19169:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1503,"name":"address","nodeType":"ElementaryTypeName","src":"19169:7:1","typeDescriptions":{}}},"id":1512,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19169:40:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"19149:60:1"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1518,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":1514,"name":"paymaster","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1502,"src":"19227:9:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1515,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"19237:4:1","memberName":"code","nodeType":"MemberAccess","src":"19227:14:1","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1516,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"19242:6:1","memberName":"length","nodeType":"MemberAccess","src":"19227:21:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1517,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19252:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"19227:26:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1524,"nodeType":"IfStatement","src":"19223:175:1","trueBody":{"id":1523,"nodeType":"Block","src":"19255:143:1","statements":[{"expression":{"arguments":[{"hexValue":"41413330207061796d6173746572206e6f74206465706c6f796564","id":1520,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"19353:29:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_d82b4d418151273a79eb9148ccd7dd21ef8c139f3cb080a13113b33d0ca4ba60","typeString":"literal_string \"AA30 paymaster not deployed\""},"value":"AA30 paymaster not deployed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_d82b4d418151273a79eb9148ccd7dd21ef8c139f3cb080a13113b33d0ca4ba60","typeString":"literal_string \"AA30 paymaster not deployed\""}],"id":1519,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"19346:6:1","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":1521,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19346:37:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1522,"nodeType":"ExpressionStatement","src":"19346:37:1"}]}}]}},{"expression":{"arguments":[{"hexValue":"","id":1528,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"19449:2:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"id":1527,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"19442:6:1","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":1529,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19442:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1530,"nodeType":"ExpressionStatement","src":"19442:10:1"}]},"documentation":{"id":1472,"nodeType":"StructuredDocumentation","src":"18581:158:1","text":" Called only during simulation.\n This function always reverts to prevent warm/cold storage differentiation in simulation vs execution."},"functionSelector":"957122ab","id":1532,"implemented":true,"kind":"function","modifiers":[],"name":"_validateSenderAndPaymaster","nameLocation":"18753:27:1","nodeType":"FunctionDefinition","parameters":{"id":1479,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1474,"mutability":"mutable","name":"initCode","nameLocation":"18805:8:1","nodeType":"VariableDeclaration","scope":1532,"src":"18790:23:1","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1473,"name":"bytes","nodeType":"ElementaryTypeName","src":"18790:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1476,"mutability":"mutable","name":"sender","nameLocation":"18831:6:1","nodeType":"VariableDeclaration","scope":1532,"src":"18823:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1475,"name":"address","nodeType":"ElementaryTypeName","src":"18823:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1478,"mutability":"mutable","name":"paymasterAndData","nameLocation":"18862:16:1","nodeType":"VariableDeclaration","scope":1532,"src":"18847:31:1","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1477,"name":"bytes","nodeType":"ElementaryTypeName","src":"18847:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"18780:104:1"},"returnParameters":{"id":1480,"nodeType":"ParameterList","parameters":[],"src":"18899:0:1"},"scope":2517,"src":"18744:715:1","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":1703,"nodeType":"Block","src":"19974:1651:1","statements":[{"id":1702,"nodeType":"UncheckedBlock","src":"19984:1635:1","statements":[{"assignments":[1551],"declarations":[{"constant":false,"id":1551,"mutability":"mutable","name":"preGas","nameLocation":"20016:6:1","nodeType":"VariableDeclaration","scope":1702,"src":"20008:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1550,"name":"uint256","nodeType":"ElementaryTypeName","src":"20008:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1554,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":1552,"name":"gasleft","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-7,"src":"20025:7:1","typeDescriptions":{"typeIdentifier":"t_function_gasleft_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":1553,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20025:9:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"20008:26:1"},{"assignments":[1557],"declarations":[{"constant":false,"id":1557,"mutability":"mutable","name":"mUserOp","nameLocation":"20068:7:1","nodeType":"VariableDeclaration","scope":1702,"src":"20048:27:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_MemoryUserOp_$813_memory_ptr","typeString":"struct EntryPoint.MemoryUserOp"},"typeName":{"id":1556,"nodeType":"UserDefinedTypeName","pathNode":{"id":1555,"name":"MemoryUserOp","nameLocations":["20048:12:1"],"nodeType":"IdentifierPath","referencedDeclaration":813,"src":"20048:12:1"},"referencedDeclaration":813,"src":"20048:12:1","typeDescriptions":{"typeIdentifier":"t_struct$_MemoryUserOp_$813_storage_ptr","typeString":"struct EntryPoint.MemoryUserOp"}},"visibility":"internal"}],"id":1560,"initialValue":{"expression":{"id":1558,"name":"opInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1541,"src":"20078:6:1","typeDescriptions":{"typeIdentifier":"t_struct$_UserOpInfo_$825_memory_ptr","typeString":"struct EntryPoint.UserOpInfo memory"}},"id":1559,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"20085:7:1","memberName":"mUserOp","nodeType":"MemberAccess","referencedDeclaration":816,"src":"20078:14:1","typeDescriptions":{"typeIdentifier":"t_struct$_MemoryUserOp_$813_memory_ptr","typeString":"struct EntryPoint.MemoryUserOp memory"}},"nodeType":"VariableDeclarationStatement","src":"20048:44:1"},{"assignments":[1562],"declarations":[{"constant":false,"id":1562,"mutability":"mutable","name":"sender","nameLocation":"20114:6:1","nodeType":"VariableDeclaration","scope":1702,"src":"20106:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1561,"name":"address","nodeType":"ElementaryTypeName","src":"20106:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1565,"initialValue":{"expression":{"id":1563,"name":"mUserOp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1557,"src":"20123:7:1","typeDescriptions":{"typeIdentifier":"t_struct$_MemoryUserOp_$813_memory_ptr","typeString":"struct EntryPoint.MemoryUserOp memory"}},"id":1564,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"20131:6:1","memberName":"sender","nodeType":"MemberAccess","referencedDeclaration":798,"src":"20123:14:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"20106:31:1"},{"expression":{"arguments":[{"id":1567,"name":"opIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1535,"src":"20173:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1568,"name":"opInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1541,"src":"20182:6:1","typeDescriptions":{"typeIdentifier":"t_struct$_UserOpInfo_$825_memory_ptr","typeString":"struct EntryPoint.UserOpInfo memory"}},{"expression":{"id":1569,"name":"op","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1538,"src":"20190:2:1","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$3762_calldata_ptr","typeString":"struct UserOperation calldata"}},"id":1570,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"20193:8:1","memberName":"initCode","nodeType":"MemberAccess","referencedDeclaration":3745,"src":"20190:11:1","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_struct$_UserOpInfo_$825_memory_ptr","typeString":"struct EntryPoint.UserOpInfo memory"},{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}],"id":1566,"name":"_createSenderIfNeeded","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1415,"src":"20151:21:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$_t_struct$_UserOpInfo_$825_memory_ptr_$_t_bytes_calldata_ptr_$returns$__$","typeString":"function (uint256,struct EntryPoint.UserOpInfo memory,bytes calldata)"}},"id":1571,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20151:51:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1572,"nodeType":"ExpressionStatement","src":"20151:51:1"},{"assignments":[1574],"declarations":[{"constant":false,"id":1574,"mutability":"mutable","name":"paymaster","nameLocation":"20224:9:1","nodeType":"VariableDeclaration","scope":1702,"src":"20216:17:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1573,"name":"address","nodeType":"ElementaryTypeName","src":"20216:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1577,"initialValue":{"expression":{"id":1575,"name":"mUserOp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1557,"src":"20236:7:1","typeDescriptions":{"typeIdentifier":"t_struct$_MemoryUserOp_$813_memory_ptr","typeString":"struct EntryPoint.MemoryUserOp memory"}},"id":1576,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"20244:9:1","memberName":"paymaster","nodeType":"MemberAccess","referencedDeclaration":808,"src":"20236:17:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"20216:37:1"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":1578,"name":"numberMarker","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2516,"src":"20267:12:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":1579,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20267:14:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1580,"nodeType":"ExpressionStatement","src":"20267:14:1"},{"assignments":[1582],"declarations":[{"constant":false,"id":1582,"mutability":"mutable","name":"missingAccountFunds","nameLocation":"20303:19:1","nodeType":"VariableDeclaration","scope":1702,"src":"20295:27:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1581,"name":"uint256","nodeType":"ElementaryTypeName","src":"20295:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1584,"initialValue":{"hexValue":"30","id":1583,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20325:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"20295:31:1"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1590,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1585,"name":"paymaster","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1574,"src":"20344:9:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1588,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20365:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1587,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"20357:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1586,"name":"address","nodeType":"ElementaryTypeName","src":"20357:7:1","typeDescriptions":{}}},"id":1589,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20357:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"20344:23:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1609,"nodeType":"IfStatement","src":"20340:222:1","trueBody":{"id":1608,"nodeType":"Block","src":"20369:193:1","statements":[{"assignments":[1592],"declarations":[{"constant":false,"id":1592,"mutability":"mutable","name":"bal","nameLocation":"20395:3:1","nodeType":"VariableDeclaration","scope":1608,"src":"20387:11:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1591,"name":"uint256","nodeType":"ElementaryTypeName","src":"20387:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1596,"initialValue":{"arguments":[{"id":1594,"name":"sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1562,"src":"20411:6:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1593,"name":"balanceOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2965,"src":"20401:9:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view returns (uint256)"}},"id":1595,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20401:17:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"20387:31:1"},{"expression":{"id":1606,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1597,"name":"missingAccountFunds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1582,"src":"20436:19:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1600,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1598,"name":"bal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1592,"src":"20458:3:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":1599,"name":"requiredPrefund","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1543,"src":"20464:15:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"20458:21:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1604,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1602,"name":"requiredPrefund","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1543,"src":"20526:15:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":1603,"name":"bal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1592,"src":"20544:3:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"20526:21:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1605,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"20458:89:1","trueExpression":{"hexValue":"30","id":1601,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20502:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"20436:111:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1607,"nodeType":"ExpressionStatement","src":"20436:111:1"}]}},{"clauses":[{"block":{"id":1629,"nodeType":"Block","src":"20790:65:1","statements":[{"expression":{"id":1627,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1625,"name":"validationData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1548,"src":"20808:14:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1626,"name":"_validationData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1623,"src":"20825:15:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"20808:32:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1628,"nodeType":"ExpressionStatement","src":"20808:32:1"}]},"errorName":"","id":1630,"nodeType":"TryCatchClause","parameters":{"id":1624,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1623,"mutability":"mutable","name":"_validationData","nameLocation":"20773:15:1","nodeType":"VariableDeclaration","scope":1630,"src":"20765:23:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1622,"name":"uint256","nodeType":"ElementaryTypeName","src":"20765:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"20764:25:1"},"src":"20756:99:1"},{"block":{"id":1644,"nodeType":"Block","src":"20896:163:1","statements":[{"errorCall":{"arguments":[{"id":1635,"name":"opIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1535,"src":"20951:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"hexValue":"414132332072657665727465643a20","id":1639,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"20994:17:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_64c32ef8d2e99d9125e89faefd194cdf39408ea487a6e93e9008b5c390f307f5","typeString":"literal_string \"AA23 reverted: \""},"value":"AA23 reverted: "},{"id":1640,"name":"revertReason","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1632,"src":"21013:12:1","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_64c32ef8d2e99d9125e89faefd194cdf39408ea487a6e93e9008b5c390f307f5","typeString":"literal_string \"AA23 reverted: \""},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":1637,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"20980:6:1","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":1636,"name":"string","nodeType":"ElementaryTypeName","src":"20980:6:1","typeDescriptions":{}}},"id":1638,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"20987:6:1","memberName":"concat","nodeType":"MemberAccess","src":"20980:13:1","typeDescriptions":{"typeIdentifier":"t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$","typeString":"function () pure returns (string memory)"}},"id":1641,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20980:46:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1634,"name":"FailedOp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3435,"src":"20921:8:1","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$_t_string_memory_ptr_$returns$__$","typeString":"function (uint256,string memory) pure"}},"id":1642,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20921:123:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1643,"nodeType":"RevertStatement","src":"20914:130:1"}]},"errorName":"Error","id":1645,"nodeType":"TryCatchClause","parameters":{"id":1633,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1632,"mutability":"mutable","name":"revertReason","nameLocation":"20882:12:1","nodeType":"VariableDeclaration","scope":1645,"src":"20868:26:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1631,"name":"string","nodeType":"ElementaryTypeName","src":"20868:6:1","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"20867:28:1"},"src":"20856:203:1"},{"block":{"id":1651,"nodeType":"Block","src":"21066:83:1","statements":[{"errorCall":{"arguments":[{"id":1647,"name":"opIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1535,"src":"21100:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"4141323320726576657274656420286f72204f4f4729","id":1648,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"21109:24:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_d8c5b4f1a3cbc05d00982c170cbf8bc904c4339a4c7a07644651f9fa6baa122d","typeString":"literal_string \"AA23 reverted (or OOG)\""},"value":"AA23 reverted (or OOG)"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_d8c5b4f1a3cbc05d00982c170cbf8bc904c4339a4c7a07644651f9fa6baa122d","typeString":"literal_string \"AA23 reverted (or OOG)\""}],"id":1646,"name":"FailedOp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3435,"src":"21091:8:1","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$_t_string_memory_ptr_$returns$__$","typeString":"function (uint256,string memory) pure"}},"id":1649,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21091:43:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1650,"nodeType":"RevertStatement","src":"21084:50:1"}]},"errorName":"","id":1652,"nodeType":"TryCatchClause","src":"21060:89:1"}],"externalCall":{"arguments":[{"id":1617,"name":"op","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1538,"src":"20700:2:1","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$3762_calldata_ptr","typeString":"struct UserOperation calldata"}},{"expression":{"id":1618,"name":"opInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1541,"src":"20704:6:1","typeDescriptions":{"typeIdentifier":"t_struct$_UserOpInfo_$825_memory_ptr","typeString":"struct EntryPoint.UserOpInfo memory"}},"id":1619,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"20711:10:1","memberName":"userOpHash","nodeType":"MemberAccess","referencedDeclaration":818,"src":"20704:17:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1620,"name":"missingAccountFunds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1582,"src":"20723:19:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_UserOperation_$3762_calldata_ptr","typeString":"struct UserOperation calldata"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_UserOperation_$3762_calldata_ptr","typeString":"struct UserOperation calldata"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":1611,"name":"sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1562,"src":"20604:6:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1610,"name":"IAccount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3338,"src":"20595:8:1","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IAccount_$3338_$","typeString":"type(contract IAccount)"}},"id":1612,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20595:16:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IAccount_$3338","typeString":"contract IAccount"}},"id":1613,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"20612:14:1","memberName":"validateUserOp","nodeType":"MemberAccess","referencedDeclaration":3337,"src":"20595:31:1","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_struct$_UserOperation_$3762_memory_ptr_$_t_bytes32_$_t_uint256_$returns$_t_uint256_$","typeString":"function (struct UserOperation memory,bytes32,uint256) external returns (uint256)"}},"id":1616,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["gas"],"nodeType":"FunctionCallOptions","options":[{"expression":{"id":1614,"name":"mUserOp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1557,"src":"20653:7:1","typeDescriptions":{"typeIdentifier":"t_struct$_MemoryUserOp_$813_memory_ptr","typeString":"struct EntryPoint.MemoryUserOp memory"}},"id":1615,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"20661:20:1","memberName":"verificationGasLimit","nodeType":"MemberAccess","referencedDeclaration":804,"src":"20653:28:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"20595:104:1","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_struct$_UserOperation_$3762_memory_ptr_$_t_bytes32_$_t_uint256_$returns$_t_uint256_$gas","typeString":"function (struct UserOperation memory,bytes32,uint256) external returns (uint256)"}},"id":1621,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20595:148:1","tryCall":true,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1653,"nodeType":"TryStatement","src":"20575:574:1"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1659,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1654,"name":"paymaster","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1574,"src":"21166:9:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1657,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21187:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1656,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"21179:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1655,"name":"address","nodeType":"ElementaryTypeName","src":"21179:7:1","typeDescriptions":{}}},"id":1658,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21179:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"21166:23:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1694,"nodeType":"IfStatement","src":"21162:378:1","trueBody":{"id":1693,"nodeType":"Block","src":"21191:349:1","statements":[{"assignments":[1662],"declarations":[{"constant":false,"id":1662,"mutability":"mutable","name":"senderInfo","nameLocation":"21229:10:1","nodeType":"VariableDeclaration","scope":1693,"src":"21209:30:1","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_DepositInfo_$3682_storage_ptr","typeString":"struct IStakeManager.DepositInfo"},"typeName":{"id":1661,"nodeType":"UserDefinedTypeName","pathNode":{"id":1660,"name":"DepositInfo","nameLocations":["21209:11:1"],"nodeType":"IdentifierPath","referencedDeclaration":3682,"src":"21209:11:1"},"referencedDeclaration":3682,"src":"21209:11:1","typeDescriptions":{"typeIdentifier":"t_struct$_DepositInfo_$3682_storage_ptr","typeString":"struct IStakeManager.DepositInfo"}},"visibility":"internal"}],"id":1666,"initialValue":{"baseExpression":{"id":1663,"name":"deposits","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2907,"src":"21242:8:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_DepositInfo_$3682_storage_$","typeString":"mapping(address => struct IStakeManager.DepositInfo storage ref)"}},"id":1665,"indexExpression":{"id":1664,"name":"sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1562,"src":"21251:6:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"21242:16:1","typeDescriptions":{"typeIdentifier":"t_struct$_DepositInfo_$3682_storage","typeString":"struct IStakeManager.DepositInfo storage ref"}},"nodeType":"VariableDeclarationStatement","src":"21209:49:1"},{"assignments":[1668],"declarations":[{"constant":false,"id":1668,"mutability":"mutable","name":"deposit","nameLocation":"21284:7:1","nodeType":"VariableDeclaration","scope":1693,"src":"21276:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1667,"name":"uint256","nodeType":"ElementaryTypeName","src":"21276:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1671,"initialValue":{"expression":{"id":1669,"name":"senderInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1662,"src":"21294:10:1","typeDescriptions":{"typeIdentifier":"t_struct$_DepositInfo_$3682_storage_ptr","typeString":"struct IStakeManager.DepositInfo storage pointer"}},"id":1670,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"21305:7:1","memberName":"deposit","nodeType":"MemberAccess","referencedDeclaration":3673,"src":"21294:18:1","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"nodeType":"VariableDeclarationStatement","src":"21276:36:1"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1674,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1672,"name":"requiredPrefund","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1543,"src":"21334:15:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":1673,"name":"deposit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1668,"src":"21352:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"21334:25:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1681,"nodeType":"IfStatement","src":"21330:123:1","trueBody":{"id":1680,"nodeType":"Block","src":"21361:92:1","statements":[{"errorCall":{"arguments":[{"id":1676,"name":"opIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1535,"src":"21399:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"41413231206469646e2774207061792070726566756e64","id":1677,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"21408:25:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_af9d5dc558e78f4dcea94657e51b2cc454e4ce4aecf26fcc28fc02e10982eb3d","typeString":"literal_string \"AA21 didn't pay prefund\""},"value":"AA21 didn't pay prefund"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_af9d5dc558e78f4dcea94657e51b2cc454e4ce4aecf26fcc28fc02e10982eb3d","typeString":"literal_string \"AA21 didn't pay prefund\""}],"id":1675,"name":"FailedOp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3435,"src":"21390:8:1","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$_t_string_memory_ptr_$returns$__$","typeString":"function (uint256,string memory) pure"}},"id":1678,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21390:44:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1679,"nodeType":"RevertStatement","src":"21383:51:1"}]}},{"expression":{"id":1691,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":1682,"name":"senderInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1662,"src":"21470:10:1","typeDescriptions":{"typeIdentifier":"t_struct$_DepositInfo_$3682_storage_ptr","typeString":"struct IStakeManager.DepositInfo storage pointer"}},"id":1684,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"21481:7:1","memberName":"deposit","nodeType":"MemberAccess","referencedDeclaration":3673,"src":"21470:18:1","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1689,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1687,"name":"deposit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1668,"src":"21499:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":1688,"name":"requiredPrefund","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1543,"src":"21509:15:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"21499:25:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1686,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"21491:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"},"typeName":{"id":1685,"name":"uint112","nodeType":"ElementaryTypeName","src":"21491:7:1","typeDescriptions":{}}},"id":1690,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21491:34:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"src":"21470:55:1","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"id":1692,"nodeType":"ExpressionStatement","src":"21470:55:1"}]}},{"expression":{"id":1700,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1695,"name":"gasUsedByValidateAccountPrepayment","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1546,"src":"21553:34:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1699,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1696,"name":"preGas","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1551,"src":"21590:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":1697,"name":"gasleft","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-7,"src":"21599:7:1","typeDescriptions":{"typeIdentifier":"t_function_gasleft_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":1698,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21599:9:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"21590:18:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"21553:55:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1701,"nodeType":"ExpressionStatement","src":"21553:55:1"}]}]},"documentation":{"id":1533,"nodeType":"StructuredDocumentation","src":"19465:195:1","text":" call account.validateUserOp.\n revert (with FailedOp) in case validateUserOp reverts, or account didn't send required prefund.\n decrement account's deposit if needed"},"id":1704,"implemented":true,"kind":"function","modifiers":[],"name":"_validateAccountPrepayment","nameLocation":"19674:26:1","nodeType":"FunctionDefinition","parameters":{"id":1544,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1535,"mutability":"mutable","name":"opIndex","nameLocation":"19718:7:1","nodeType":"VariableDeclaration","scope":1704,"src":"19710:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1534,"name":"uint256","nodeType":"ElementaryTypeName","src":"19710:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1538,"mutability":"mutable","name":"op","nameLocation":"19758:2:1","nodeType":"VariableDeclaration","scope":1704,"src":"19735:25:1","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$3762_calldata_ptr","typeString":"struct UserOperation"},"typeName":{"id":1537,"nodeType":"UserDefinedTypeName","pathNode":{"id":1536,"name":"UserOperation","nameLocations":["19735:13:1"],"nodeType":"IdentifierPath","referencedDeclaration":3762,"src":"19735:13:1"},"referencedDeclaration":3762,"src":"19735:13:1","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$3762_storage_ptr","typeString":"struct UserOperation"}},"visibility":"internal"},{"constant":false,"id":1541,"mutability":"mutable","name":"opInfo","nameLocation":"19788:6:1","nodeType":"VariableDeclaration","scope":1704,"src":"19770:24:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_UserOpInfo_$825_memory_ptr","typeString":"struct EntryPoint.UserOpInfo"},"typeName":{"id":1540,"nodeType":"UserDefinedTypeName","pathNode":{"id":1539,"name":"UserOpInfo","nameLocations":["19770:10:1"],"nodeType":"IdentifierPath","referencedDeclaration":825,"src":"19770:10:1"},"referencedDeclaration":825,"src":"19770:10:1","typeDescriptions":{"typeIdentifier":"t_struct$_UserOpInfo_$825_storage_ptr","typeString":"struct EntryPoint.UserOpInfo"}},"visibility":"internal"},{"constant":false,"id":1543,"mutability":"mutable","name":"requiredPrefund","nameLocation":"19812:15:1","nodeType":"VariableDeclaration","scope":1704,"src":"19804:23:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1542,"name":"uint256","nodeType":"ElementaryTypeName","src":"19804:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"19700:133:1"},"returnParameters":{"id":1549,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1546,"mutability":"mutable","name":"gasUsedByValidateAccountPrepayment","nameLocation":"19889:34:1","nodeType":"VariableDeclaration","scope":1704,"src":"19881:42:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1545,"name":"uint256","nodeType":"ElementaryTypeName","src":"19881:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1548,"mutability":"mutable","name":"validationData","nameLocation":"19945:14:1","nodeType":"VariableDeclaration","scope":1704,"src":"19937:22:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1547,"name":"uint256","nodeType":"ElementaryTypeName","src":"19937:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"19867:102:1"},"scope":2517,"src":"19665:1960:1","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1836,"nodeType":"Block","src":"22170:1482:1","statements":[{"id":1835,"nodeType":"UncheckedBlock","src":"22180:1466:1","statements":[{"assignments":[1726],"declarations":[{"constant":false,"id":1726,"mutability":"mutable","name":"mUserOp","nameLocation":"22224:7:1","nodeType":"VariableDeclaration","scope":1835,"src":"22204:27:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_MemoryUserOp_$813_memory_ptr","typeString":"struct EntryPoint.MemoryUserOp"},"typeName":{"id":1725,"nodeType":"UserDefinedTypeName","pathNode":{"id":1724,"name":"MemoryUserOp","nameLocations":["22204:12:1"],"nodeType":"IdentifierPath","referencedDeclaration":813,"src":"22204:12:1"},"referencedDeclaration":813,"src":"22204:12:1","typeDescriptions":{"typeIdentifier":"t_struct$_MemoryUserOp_$813_storage_ptr","typeString":"struct EntryPoint.MemoryUserOp"}},"visibility":"internal"}],"id":1729,"initialValue":{"expression":{"id":1727,"name":"opInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1713,"src":"22234:6:1","typeDescriptions":{"typeIdentifier":"t_struct$_UserOpInfo_$825_memory_ptr","typeString":"struct EntryPoint.UserOpInfo memory"}},"id":1728,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"22241:7:1","memberName":"mUserOp","nodeType":"MemberAccess","referencedDeclaration":816,"src":"22234:14:1","typeDescriptions":{"typeIdentifier":"t_struct$_MemoryUserOp_$813_memory_ptr","typeString":"struct EntryPoint.MemoryUserOp memory"}},"nodeType":"VariableDeclarationStatement","src":"22204:44:1"},{"assignments":[1731],"declarations":[{"constant":false,"id":1731,"mutability":"mutable","name":"verificationGasLimit","nameLocation":"22270:20:1","nodeType":"VariableDeclaration","scope":1835,"src":"22262:28:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1730,"name":"uint256","nodeType":"ElementaryTypeName","src":"22262:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1734,"initialValue":{"expression":{"id":1732,"name":"mUserOp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1726,"src":"22293:7:1","typeDescriptions":{"typeIdentifier":"t_struct$_MemoryUserOp_$813_memory_ptr","typeString":"struct EntryPoint.MemoryUserOp memory"}},"id":1733,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"22301:20:1","memberName":"verificationGasLimit","nodeType":"MemberAccess","referencedDeclaration":804,"src":"22293:28:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"22262:59:1"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1738,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1736,"name":"verificationGasLimit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1731,"src":"22360:20:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":1737,"name":"gasUsedByValidateAccountPrepayment","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1717,"src":"22383:34:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22360:57:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4141343120746f6f206c6974746c6520766572696669636174696f6e476173","id":1739,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"22435:33:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_845e7a5bae687c41d5c517dad2fcb3470ce8c1ba5192471348c2a4a402b500f5","typeString":"literal_string \"AA41 too little verificationGas\""},"value":"AA41 too little verificationGas"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_845e7a5bae687c41d5c517dad2fcb3470ce8c1ba5192471348c2a4a402b500f5","typeString":"literal_string \"AA41 too little verificationGas\""}],"id":1735,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"22335:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1740,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22335:147:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1741,"nodeType":"ExpressionStatement","src":"22335:147:1"},{"assignments":[1743],"declarations":[{"constant":false,"id":1743,"mutability":"mutable","name":"gas","nameLocation":"22504:3:1","nodeType":"VariableDeclaration","scope":1835,"src":"22496:11:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1742,"name":"uint256","nodeType":"ElementaryTypeName","src":"22496:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1747,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1746,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1744,"name":"verificationGasLimit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1731,"src":"22510:20:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":1745,"name":"gasUsedByValidateAccountPrepayment","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1717,"src":"22549:34:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22510:73:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"22496:87:1"},{"assignments":[1749],"declarations":[{"constant":false,"id":1749,"mutability":"mutable","name":"paymaster","nameLocation":"22606:9:1","nodeType":"VariableDeclaration","scope":1835,"src":"22598:17:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1748,"name":"address","nodeType":"ElementaryTypeName","src":"22598:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1752,"initialValue":{"expression":{"id":1750,"name":"mUserOp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1726,"src":"22618:7:1","typeDescriptions":{"typeIdentifier":"t_struct$_MemoryUserOp_$813_memory_ptr","typeString":"struct EntryPoint.MemoryUserOp memory"}},"id":1751,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"22626:9:1","memberName":"paymaster","nodeType":"MemberAccess","referencedDeclaration":808,"src":"22618:17:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"22598:37:1"},{"assignments":[1755],"declarations":[{"constant":false,"id":1755,"mutability":"mutable","name":"paymasterInfo","nameLocation":"22669:13:1","nodeType":"VariableDeclaration","scope":1835,"src":"22649:33:1","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_DepositInfo_$3682_storage_ptr","typeString":"struct IStakeManager.DepositInfo"},"typeName":{"id":1754,"nodeType":"UserDefinedTypeName","pathNode":{"id":1753,"name":"DepositInfo","nameLocations":["22649:11:1"],"nodeType":"IdentifierPath","referencedDeclaration":3682,"src":"22649:11:1"},"referencedDeclaration":3682,"src":"22649:11:1","typeDescriptions":{"typeIdentifier":"t_struct$_DepositInfo_$3682_storage_ptr","typeString":"struct IStakeManager.DepositInfo"}},"visibility":"internal"}],"id":1759,"initialValue":{"baseExpression":{"id":1756,"name":"deposits","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2907,"src":"22685:8:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_DepositInfo_$3682_storage_$","typeString":"mapping(address => struct IStakeManager.DepositInfo storage ref)"}},"id":1758,"indexExpression":{"id":1757,"name":"paymaster","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1749,"src":"22694:9:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"22685:19:1","typeDescriptions":{"typeIdentifier":"t_struct$_DepositInfo_$3682_storage","typeString":"struct IStakeManager.DepositInfo storage ref"}},"nodeType":"VariableDeclarationStatement","src":"22649:55:1"},{"assignments":[1761],"declarations":[{"constant":false,"id":1761,"mutability":"mutable","name":"deposit","nameLocation":"22726:7:1","nodeType":"VariableDeclaration","scope":1835,"src":"22718:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1760,"name":"uint256","nodeType":"ElementaryTypeName","src":"22718:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1764,"initialValue":{"expression":{"id":1762,"name":"paymasterInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1755,"src":"22736:13:1","typeDescriptions":{"typeIdentifier":"t_struct$_DepositInfo_$3682_storage_ptr","typeString":"struct IStakeManager.DepositInfo storage pointer"}},"id":1763,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"22750:7:1","memberName":"deposit","nodeType":"MemberAccess","referencedDeclaration":3673,"src":"22736:21:1","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"nodeType":"VariableDeclarationStatement","src":"22718:39:1"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1767,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1765,"name":"deposit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1761,"src":"22775:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1766,"name":"requiredPreFund","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1715,"src":"22785:15:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22775:25:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1774,"nodeType":"IfStatement","src":"22771:122:1","trueBody":{"id":1773,"nodeType":"Block","src":"22802:91:1","statements":[{"errorCall":{"arguments":[{"id":1769,"name":"opIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1707,"src":"22836:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"41413331207061796d6173746572206465706f73697420746f6f206c6f77","id":1770,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"22845:32:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_423a165b7dbbda2ae3873c5d3fae3c0ad56dda63b0eb4d372683317213e4df0f","typeString":"literal_string \"AA31 paymaster deposit too low\""},"value":"AA31 paymaster deposit too low"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_423a165b7dbbda2ae3873c5d3fae3c0ad56dda63b0eb4d372683317213e4df0f","typeString":"literal_string \"AA31 paymaster deposit too low\""}],"id":1768,"name":"FailedOp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3435,"src":"22827:8:1","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$_t_string_memory_ptr_$returns$__$","typeString":"function (uint256,string memory) pure"}},"id":1771,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22827:51:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1772,"nodeType":"RevertStatement","src":"22820:58:1"}]}},{"expression":{"id":1784,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":1775,"name":"paymasterInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1755,"src":"22906:13:1","typeDescriptions":{"typeIdentifier":"t_struct$_DepositInfo_$3682_storage_ptr","typeString":"struct IStakeManager.DepositInfo storage pointer"}},"id":1777,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"22920:7:1","memberName":"deposit","nodeType":"MemberAccess","referencedDeclaration":3673,"src":"22906:21:1","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1782,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1780,"name":"deposit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1761,"src":"22938:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":1781,"name":"requiredPreFund","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1715,"src":"22948:15:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22938:25:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1779,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"22930:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"},"typeName":{"id":1778,"name":"uint112","nodeType":"ElementaryTypeName","src":"22930:7:1","typeDescriptions":{}}},"id":1783,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22930:34:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"src":"22906:58:1","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"id":1785,"nodeType":"ExpressionStatement","src":"22906:58:1"},{"clauses":[{"block":{"id":1810,"nodeType":"Block","src":"23241:101:1","statements":[{"expression":{"id":1804,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1802,"name":"context","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1720,"src":"23259:7:1","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1803,"name":"_context","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1798,"src":"23269:8:1","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"src":"23259:18:1","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1805,"nodeType":"ExpressionStatement","src":"23259:18:1"},{"expression":{"id":1808,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1806,"name":"validationData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1722,"src":"23295:14:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1807,"name":"_validationData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1800,"src":"23312:15:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23295:32:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1809,"nodeType":"ExpressionStatement","src":"23295:32:1"}]},"errorName":"","id":1811,"nodeType":"TryCatchClause","parameters":{"id":1801,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1798,"mutability":"mutable","name":"_context","nameLocation":"23206:8:1","nodeType":"VariableDeclaration","scope":1811,"src":"23193:21:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1797,"name":"bytes","nodeType":"ElementaryTypeName","src":"23193:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1800,"mutability":"mutable","name":"_validationData","nameLocation":"23224:15:1","nodeType":"VariableDeclaration","scope":1811,"src":"23216:23:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1799,"name":"uint256","nodeType":"ElementaryTypeName","src":"23216:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"23192:48:1"},"src":"23184:158:1"},{"block":{"id":1825,"nodeType":"Block","src":"23383:163:1","statements":[{"errorCall":{"arguments":[{"id":1816,"name":"opIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1707,"src":"23438:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"hexValue":"414133332072657665727465643a20","id":1820,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"23481:17:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_d5055b4e51389a9724dff5ba1d52dcc7fe941798fcbecc4026c62f349f2c064e","typeString":"literal_string \"AA33 reverted: \""},"value":"AA33 reverted: "},{"id":1821,"name":"revertReason","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1813,"src":"23500:12:1","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_d5055b4e51389a9724dff5ba1d52dcc7fe941798fcbecc4026c62f349f2c064e","typeString":"literal_string \"AA33 reverted: \""},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":1818,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"23467:6:1","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":1817,"name":"string","nodeType":"ElementaryTypeName","src":"23467:6:1","typeDescriptions":{}}},"id":1819,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"23474:6:1","memberName":"concat","nodeType":"MemberAccess","src":"23467:13:1","typeDescriptions":{"typeIdentifier":"t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$","typeString":"function () pure returns (string memory)"}},"id":1822,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23467:46:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1815,"name":"FailedOp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3435,"src":"23408:8:1","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$_t_string_memory_ptr_$returns$__$","typeString":"function (uint256,string memory) pure"}},"id":1823,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23408:123:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1824,"nodeType":"RevertStatement","src":"23401:130:1"}]},"errorName":"Error","id":1826,"nodeType":"TryCatchClause","parameters":{"id":1814,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1813,"mutability":"mutable","name":"revertReason","nameLocation":"23369:12:1","nodeType":"VariableDeclaration","scope":1826,"src":"23355:26:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1812,"name":"string","nodeType":"ElementaryTypeName","src":"23355:6:1","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"23354:28:1"},"src":"23343:203:1"},{"block":{"id":1832,"nodeType":"Block","src":"23553:83:1","statements":[{"errorCall":{"arguments":[{"id":1828,"name":"opIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1707,"src":"23587:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"4141333320726576657274656420286f72204f4f4729","id":1829,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"23596:24:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_b1ed1567fa5d3a521ab390827d63ed8b5fd475a7cdb2315873e7127995800f2c","typeString":"literal_string \"AA33 reverted (or OOG)\""},"value":"AA33 reverted (or OOG)"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_b1ed1567fa5d3a521ab390827d63ed8b5fd475a7cdb2315873e7127995800f2c","typeString":"literal_string \"AA33 reverted (or OOG)\""}],"id":1827,"name":"FailedOp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3435,"src":"23578:8:1","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$_t_string_memory_ptr_$returns$__$","typeString":"function (uint256,string memory) pure"}},"id":1830,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23578:43:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1831,"nodeType":"RevertStatement","src":"23571:50:1"}]},"errorName":"","id":1833,"nodeType":"TryCatchClause","src":"23547:89:1"}],"externalCall":{"arguments":[{"id":1792,"name":"op","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1710,"src":"23075:2:1","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$3762_calldata_ptr","typeString":"struct UserOperation calldata"}},{"expression":{"id":1793,"name":"opInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1713,"src":"23099:6:1","typeDescriptions":{"typeIdentifier":"t_struct$_UserOpInfo_$825_memory_ptr","typeString":"struct EntryPoint.UserOpInfo memory"}},"id":1794,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"23106:10:1","memberName":"userOpHash","nodeType":"MemberAccess","referencedDeclaration":818,"src":"23099:17:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1795,"name":"requiredPreFund","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1715,"src":"23138:15:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_UserOperation_$3762_calldata_ptr","typeString":"struct UserOperation calldata"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_UserOperation_$3762_calldata_ptr","typeString":"struct UserOperation calldata"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":1787,"name":"paymaster","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1749,"src":"23009:9:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1786,"name":"IPaymaster","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3630,"src":"22998:10:1","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IPaymaster_$3630_$","typeString":"type(contract IPaymaster)"}},"id":1788,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22998:21:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IPaymaster_$3630","typeString":"contract IPaymaster"}},"id":1789,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"23020:23:1","memberName":"validatePaymasterUserOp","nodeType":"MemberAccess","referencedDeclaration":3618,"src":"22998:45:1","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_struct$_UserOperation_$3762_memory_ptr_$_t_bytes32_$_t_uint256_$returns$_t_bytes_memory_ptr_$_t_uint256_$","typeString":"function (struct UserOperation memory,bytes32,uint256) external returns (bytes memory,uint256)"}},"id":1791,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["gas"],"nodeType":"FunctionCallOptions","options":[{"id":1790,"name":"gas","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1743,"src":"23049:3:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"22998:55:1","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_struct$_UserOperation_$3762_memory_ptr_$_t_bytes32_$_t_uint256_$returns$_t_bytes_memory_ptr_$_t_uint256_$gas","typeString":"function (struct UserOperation memory,bytes32,uint256) external returns (bytes memory,uint256)"}},"id":1796,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22998:173:1","tryCall":true,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bytes_memory_ptr_$_t_uint256_$","typeString":"tuple(bytes memory,uint256)"}},"id":1834,"nodeType":"TryStatement","src":"22978:658:1"}]}]},"documentation":{"id":1705,"nodeType":"StructuredDocumentation","src":"21631:247:1","text":" In case the request has a paymaster:\n Validate paymaster has enough deposit.\n Call paymaster.validatePaymasterUserOp.\n Revert with proper FailedOp in case paymaster reverts.\n Decrement paymaster's deposit"},"id":1837,"implemented":true,"kind":"function","modifiers":[],"name":"_validatePaymasterPrepayment","nameLocation":"21892:28:1","nodeType":"FunctionDefinition","parameters":{"id":1718,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1707,"mutability":"mutable","name":"opIndex","nameLocation":"21938:7:1","nodeType":"VariableDeclaration","scope":1837,"src":"21930:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1706,"name":"uint256","nodeType":"ElementaryTypeName","src":"21930:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1710,"mutability":"mutable","name":"op","nameLocation":"21978:2:1","nodeType":"VariableDeclaration","scope":1837,"src":"21955:25:1","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$3762_calldata_ptr","typeString":"struct UserOperation"},"typeName":{"id":1709,"nodeType":"UserDefinedTypeName","pathNode":{"id":1708,"name":"UserOperation","nameLocations":["21955:13:1"],"nodeType":"IdentifierPath","referencedDeclaration":3762,"src":"21955:13:1"},"referencedDeclaration":3762,"src":"21955:13:1","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$3762_storage_ptr","typeString":"struct UserOperation"}},"visibility":"internal"},{"constant":false,"id":1713,"mutability":"mutable","name":"opInfo","nameLocation":"22008:6:1","nodeType":"VariableDeclaration","scope":1837,"src":"21990:24:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_UserOpInfo_$825_memory_ptr","typeString":"struct EntryPoint.UserOpInfo"},"typeName":{"id":1712,"nodeType":"UserDefinedTypeName","pathNode":{"id":1711,"name":"UserOpInfo","nameLocations":["21990:10:1"],"nodeType":"IdentifierPath","referencedDeclaration":825,"src":"21990:10:1"},"referencedDeclaration":825,"src":"21990:10:1","typeDescriptions":{"typeIdentifier":"t_struct$_UserOpInfo_$825_storage_ptr","typeString":"struct EntryPoint.UserOpInfo"}},"visibility":"internal"},{"constant":false,"id":1715,"mutability":"mutable","name":"requiredPreFund","nameLocation":"22032:15:1","nodeType":"VariableDeclaration","scope":1837,"src":"22024:23:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1714,"name":"uint256","nodeType":"ElementaryTypeName","src":"22024:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1717,"mutability":"mutable","name":"gasUsedByValidateAccountPrepayment","nameLocation":"22065:34:1","nodeType":"VariableDeclaration","scope":1837,"src":"22057:42:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1716,"name":"uint256","nodeType":"ElementaryTypeName","src":"22057:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"21920:185:1"},"returnParameters":{"id":1723,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1720,"mutability":"mutable","name":"context","nameLocation":"22137:7:1","nodeType":"VariableDeclaration","scope":1837,"src":"22124:20:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1719,"name":"bytes","nodeType":"ElementaryTypeName","src":"22124:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1722,"mutability":"mutable","name":"validationData","nameLocation":"22154:14:1","nodeType":"VariableDeclaration","scope":1837,"src":"22146:22:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1721,"name":"uint256","nodeType":"ElementaryTypeName","src":"22146:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"22123:46:1"},"scope":2517,"src":"21883:1769:1","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1955,"nodeType":"Block","src":"23966:1264:1","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1853,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1850,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"23984:3:1","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1851,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"23988:5:1","memberName":"value","nodeType":"MemberAccess","src":"23984:9:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3137","id":1852,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23996:2:1","typeDescriptions":{"typeIdentifier":"t_rational_17_by_1","typeString":"int_const 17"},"value":"17"},"src":"23984:14:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"76616c7565206e68752063757420373737","id":1854,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"24000:19:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_712f192ef735e8cb5d6385011b694e8bb923e92afdbb78857020844c5b435b2d","typeString":"literal_string \"value nhu cut 777\""},"value":"value nhu cut 777"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_712f192ef735e8cb5d6385011b694e8bb923e92afdbb78857020844c5b435b2d","typeString":"literal_string \"value nhu cut 777\""}],"id":1849,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"23976:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1855,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23976:44:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1856,"nodeType":"ExpressionStatement","src":"23976:44:1"},{"assignments":[1858,1860],"declarations":[{"constant":false,"id":1858,"mutability":"mutable","name":"aggregator","nameLocation":"24039:10:1","nodeType":"VariableDeclaration","scope":1955,"src":"24031:18:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1857,"name":"address","nodeType":"ElementaryTypeName","src":"24031:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1860,"mutability":"mutable","name":"outOfTimeRange","nameLocation":"24056:14:1","nodeType":"VariableDeclaration","scope":1955,"src":"24051:19:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1859,"name":"bool","nodeType":"ElementaryTypeName","src":"24051:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":1864,"initialValue":{"arguments":[{"id":1862,"name":"validationData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1842,"src":"24106:14:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1861,"name":"_getValidationData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2004,"src":"24074:18:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$_t_bool_$","typeString":"function (uint256) view returns (address,bool)"}},"id":1863,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24074:56:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_bool_$","typeString":"tuple(address,bool)"}},"nodeType":"VariableDeclarationStatement","src":"24030:100:1"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1869,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1866,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"24148:3:1","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1867,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"24152:5:1","memberName":"value","nodeType":"MemberAccess","src":"24148:9:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3138","id":1868,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24160:2:1","typeDescriptions":{"typeIdentifier":"t_rational_18_by_1","typeString":"int_const 18"},"value":"18"},"src":"24148:14:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"76616c7565206e68752063757420383838","id":1870,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"24164:19:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_ed86fec7dc60294aca1f1bfcc3b625c0c029f1713303eebe5782055a06ac25a6","typeString":"literal_string \"value nhu cut 888\""},"value":"value nhu cut 888"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_ed86fec7dc60294aca1f1bfcc3b625c0c029f1713303eebe5782055a06ac25a6","typeString":"literal_string \"value nhu cut 888\""}],"id":1865,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"24140:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1871,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24140:44:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1872,"nodeType":"ExpressionStatement","src":"24140:44:1"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1875,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1873,"name":"expectedAggregator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1846,"src":"24198:18:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":1874,"name":"aggregator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1858,"src":"24220:10:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"24198:32:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1882,"nodeType":"IfStatement","src":"24194:111:1","trueBody":{"id":1881,"nodeType":"Block","src":"24232:73:1","statements":[{"errorCall":{"arguments":[{"id":1877,"name":"opIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1840,"src":"24262:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"41413234207369676e6174757265206572726f72","id":1878,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"24271:22:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_230fad9992163f7c7bca82563472469d2ae8f1696105d00fd8b1abf9e366de4e","typeString":"literal_string \"AA24 signature error\""},"value":"AA24 signature error"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_230fad9992163f7c7bca82563472469d2ae8f1696105d00fd8b1abf9e366de4e","typeString":"literal_string \"AA24 signature error\""}],"id":1876,"name":"FailedOp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3435,"src":"24253:8:1","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$_t_string_memory_ptr_$returns$__$","typeString":"function (uint256,string memory) pure"}},"id":1879,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24253:41:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1880,"nodeType":"RevertStatement","src":"24246:48:1"}]}},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1887,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1884,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"24322:3:1","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1885,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"24326:5:1","memberName":"value","nodeType":"MemberAccess","src":"24322:9:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3139","id":1886,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24334:2:1","typeDescriptions":{"typeIdentifier":"t_rational_19_by_1","typeString":"int_const 19"},"value":"19"},"src":"24322:14:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"76616c7565206e68752063757420393939","id":1888,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"24338:19:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_e32d6a570f15ef0330d0d7b82b5e02fd74f2f0da76ac717f85218cc665e1e420","typeString":"literal_string \"value nhu cut 999\""},"value":"value nhu cut 999"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_e32d6a570f15ef0330d0d7b82b5e02fd74f2f0da76ac717f85218cc665e1e420","typeString":"literal_string \"value nhu cut 999\""}],"id":1883,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"24314:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1889,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24314:44:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1890,"nodeType":"ExpressionStatement","src":"24314:44:1"},{"condition":{"id":1891,"name":"outOfTimeRange","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1860,"src":"24372:14:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1898,"nodeType":"IfStatement","src":"24368:96:1","trueBody":{"id":1897,"nodeType":"Block","src":"24388:76:1","statements":[{"errorCall":{"arguments":[{"id":1893,"name":"opIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1840,"src":"24418:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"414132322065787069726564206f72206e6f7420647565","id":1894,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"24427:25:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_4f6af422606d6fab6224761f4f503b9674de8994d20a0052616d3524b670e766","typeString":"literal_string \"AA22 expired or not due\""},"value":"AA22 expired or not due"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_4f6af422606d6fab6224761f4f503b9674de8994d20a0052616d3524b670e766","typeString":"literal_string \"AA22 expired or not due\""}],"id":1892,"name":"FailedOp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3435,"src":"24409:8:1","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$_t_string_memory_ptr_$returns$__$","typeString":"function (uint256,string memory) pure"}},"id":1895,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24409:44:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1896,"nodeType":"RevertStatement","src":"24402:51:1"}]}},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1903,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1900,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"24481:3:1","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1901,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"24485:5:1","memberName":"value","nodeType":"MemberAccess","src":"24481:9:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3230","id":1902,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24493:2:1","typeDescriptions":{"typeIdentifier":"t_rational_20_by_1","typeString":"int_const 20"},"value":"20"},"src":"24481:14:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"76616c7565206e6875206375742031303030","id":1904,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"24497:20:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_5102bce35c053af79019d64af911ef9208b7ea3a7f5171d03ed51ad0c5708e59","typeString":"literal_string \"value nhu cut 1000\""},"value":"value nhu cut 1000"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_5102bce35c053af79019d64af911ef9208b7ea3a7f5171d03ed51ad0c5708e59","typeString":"literal_string \"value nhu cut 1000\""}],"id":1899,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"24473:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1905,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24473:45:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1906,"nodeType":"ExpressionStatement","src":"24473:45:1"},{"assignments":[1908],"declarations":[{"constant":false,"id":1908,"mutability":"mutable","name":"pmAggregator","nameLocation":"24764:12:1","nodeType":"VariableDeclaration","scope":1955,"src":"24756:20:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1907,"name":"address","nodeType":"ElementaryTypeName","src":"24756:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1909,"nodeType":"VariableDeclarationStatement","src":"24756:20:1"},{"expression":{"id":1916,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"components":[{"id":1910,"name":"pmAggregator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1908,"src":"24787:12:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1911,"name":"outOfTimeRange","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1860,"src":"24801:14:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":1912,"isConstant":false,"isInlineArray":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"TupleExpression","src":"24786:30:1","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_bool_$","typeString":"tuple(address,bool)"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":1914,"name":"paymasterValidationData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1844,"src":"24851:23:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1913,"name":"_getValidationData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2004,"src":"24819:18:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$_t_bool_$","typeString":"function (uint256) view returns (address,bool)"}},"id":1915,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24819:65:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_bool_$","typeString":"tuple(address,bool)"}},"src":"24786:98:1","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1917,"nodeType":"ExpressionStatement","src":"24786:98:1"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1922,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1919,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"24902:3:1","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1920,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"24906:5:1","memberName":"value","nodeType":"MemberAccess","src":"24902:9:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3231","id":1921,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24914:2:1","typeDescriptions":{"typeIdentifier":"t_rational_21_by_1","typeString":"int_const 21"},"value":"21"},"src":"24902:14:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"76616c7565206e6875206375742031313131","id":1923,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"24918:20:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_6b233eb68e5ee39caca6e74ca8d6c8cfadd7570fb1073e9436a56fc4cb2a53a3","typeString":"literal_string \"value nhu cut 1111\""},"value":"value nhu cut 1111"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_6b233eb68e5ee39caca6e74ca8d6c8cfadd7570fb1073e9436a56fc4cb2a53a3","typeString":"literal_string \"value nhu cut 1111\""}],"id":1918,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"24894:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1924,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24894:45:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1925,"nodeType":"ExpressionStatement","src":"24894:45:1"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1931,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1926,"name":"pmAggregator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1908,"src":"24953:12:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1929,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24977:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1928,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"24969:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1927,"name":"address","nodeType":"ElementaryTypeName","src":"24969:7:1","typeDescriptions":{}}},"id":1930,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24969:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"24953:26:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1938,"nodeType":"IfStatement","src":"24949:105:1","trueBody":{"id":1937,"nodeType":"Block","src":"24981:73:1","statements":[{"errorCall":{"arguments":[{"id":1933,"name":"opIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1840,"src":"25011:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"41413334207369676e6174757265206572726f72","id":1934,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"25020:22:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_b49ba4e4826dc300b471d06b2a8612d53c4c2eb033cbfd2061c54c636bb00871","typeString":"literal_string \"AA34 signature error\""},"value":"AA34 signature error"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_b49ba4e4826dc300b471d06b2a8612d53c4c2eb033cbfd2061c54c636bb00871","typeString":"literal_string \"AA34 signature error\""}],"id":1932,"name":"FailedOp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3435,"src":"25002:8:1","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$_t_string_memory_ptr_$returns$__$","typeString":"function (uint256,string memory) pure"}},"id":1935,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25002:41:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1936,"nodeType":"RevertStatement","src":"24995:48:1"}]}},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1943,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1940,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"25071:3:1","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1941,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"25075:5:1","memberName":"value","nodeType":"MemberAccess","src":"25071:9:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3232","id":1942,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25083:2:1","typeDescriptions":{"typeIdentifier":"t_rational_22_by_1","typeString":"int_const 22"},"value":"22"},"src":"25071:14:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"76616c7565206e6875206375742032323232","id":1944,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"25087:20:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_487e67c7ac846f0ed2e2a803dfa041461a5d2a2e6de4ab0fbc57c1fffd9acb1d","typeString":"literal_string \"value nhu cut 2222\""},"value":"value nhu cut 2222"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_487e67c7ac846f0ed2e2a803dfa041461a5d2a2e6de4ab0fbc57c1fffd9acb1d","typeString":"literal_string \"value nhu cut 2222\""}],"id":1939,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"25063:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1945,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25063:45:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1946,"nodeType":"ExpressionStatement","src":"25063:45:1"},{"condition":{"id":1947,"name":"outOfTimeRange","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1860,"src":"25122:14:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1954,"nodeType":"IfStatement","src":"25118:106:1","trueBody":{"id":1953,"nodeType":"Block","src":"25138:86:1","statements":[{"errorCall":{"arguments":[{"id":1949,"name":"opIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1840,"src":"25168:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"41413332207061796d61737465722065787069726564206f72206e6f7420647565","id":1950,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"25177:35:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_15a824f4c22cc564e6215a3b0d10da3af06bea6cdb58dc3760d85748fcd6036b","typeString":"literal_string \"AA32 paymaster expired or not due\""},"value":"AA32 paymaster expired or not due"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_15a824f4c22cc564e6215a3b0d10da3af06bea6cdb58dc3760d85748fcd6036b","typeString":"literal_string \"AA32 paymaster expired or not due\""}],"id":1948,"name":"FailedOp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3435,"src":"25159:8:1","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$_t_string_memory_ptr_$returns$__$","typeString":"function (uint256,string memory) pure"}},"id":1951,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25159:54:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1952,"nodeType":"RevertStatement","src":"25152:61:1"}]}}]},"documentation":{"id":1838,"nodeType":"StructuredDocumentation","src":"23658:97:1","text":" revert if either account validationData or paymaster validationData is expired"},"id":1956,"implemented":true,"kind":"function","modifiers":[],"name":"_validateAccountAndPaymasterValidationData","nameLocation":"23769:42:1","nodeType":"FunctionDefinition","parameters":{"id":1847,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1840,"mutability":"mutable","name":"opIndex","nameLocation":"23829:7:1","nodeType":"VariableDeclaration","scope":1956,"src":"23821:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1839,"name":"uint256","nodeType":"ElementaryTypeName","src":"23821:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1842,"mutability":"mutable","name":"validationData","nameLocation":"23854:14:1","nodeType":"VariableDeclaration","scope":1956,"src":"23846:22:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1841,"name":"uint256","nodeType":"ElementaryTypeName","src":"23846:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1844,"mutability":"mutable","name":"paymasterValidationData","nameLocation":"23886:23:1","nodeType":"VariableDeclaration","scope":1956,"src":"23878:31:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1843,"name":"uint256","nodeType":"ElementaryTypeName","src":"23878:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1846,"mutability":"mutable","name":"expectedAggregator","nameLocation":"23927:18:1","nodeType":"VariableDeclaration","scope":1956,"src":"23919:26:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1845,"name":"address","nodeType":"ElementaryTypeName","src":"23919:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"23811:140:1"},"returnParameters":{"id":1848,"nodeType":"ParameterList","parameters":[],"src":"23966:0:1"},"scope":2517,"src":"23760:1470:1","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":2003,"nodeType":"Block","src":"25366:380:1","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1967,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1965,"name":"validationData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1958,"src":"25380:14:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1966,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25398:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"25380:19:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1976,"nodeType":"IfStatement","src":"25376:76:1","trueBody":{"id":1975,"nodeType":"Block","src":"25401:51:1","statements":[{"expression":{"components":[{"arguments":[{"hexValue":"30","id":1970,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25431:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1969,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"25423:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1968,"name":"address","nodeType":"ElementaryTypeName","src":"25423:7:1","typeDescriptions":{}}},"id":1971,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25423:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"hexValue":"66616c7365","id":1972,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"25435:5:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"}],"id":1973,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"25422:19:1","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_bool_$","typeString":"tuple(address,bool)"}},"functionReturnParameters":1964,"id":1974,"nodeType":"Return","src":"25415:26:1"}]}},{"assignments":[1979],"declarations":[{"constant":false,"id":1979,"mutability":"mutable","name":"data","nameLocation":"25483:4:1","nodeType":"VariableDeclaration","scope":2003,"src":"25461:26:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_ValidationData_$2526_memory_ptr","typeString":"struct ValidationData"},"typeName":{"id":1978,"nodeType":"UserDefinedTypeName","pathNode":{"id":1977,"name":"ValidationData","nameLocations":["25461:14:1"],"nodeType":"IdentifierPath","referencedDeclaration":2526,"src":"25461:14:1"},"referencedDeclaration":2526,"src":"25461:14:1","typeDescriptions":{"typeIdentifier":"t_struct$_ValidationData_$2526_storage_ptr","typeString":"struct ValidationData"}},"visibility":"internal"}],"id":1983,"initialValue":{"arguments":[{"id":1981,"name":"validationData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1958,"src":"25511:14:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1980,"name":"_parseValidationData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2585,"src":"25490:20:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_struct$_ValidationData_$2526_memory_ptr_$","typeString":"function (uint256) pure returns (struct ValidationData memory)"}},"id":1982,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25490:36:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_ValidationData_$2526_memory_ptr","typeString":"struct ValidationData memory"}},"nodeType":"VariableDeclarationStatement","src":"25461:65:1"},{"expression":{"id":1996,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1984,"name":"outOfTimeRange","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1963,"src":"25590:14:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1995,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1989,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1985,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"25619:5:1","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":1986,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"25625:9:1","memberName":"timestamp","nodeType":"MemberAccess","src":"25619:15:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"id":1987,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1979,"src":"25637:4:1","typeDescriptions":{"typeIdentifier":"t_struct$_ValidationData_$2526_memory_ptr","typeString":"struct ValidationData memory"}},"id":1988,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"25642:10:1","memberName":"validUntil","nodeType":"MemberAccess","referencedDeclaration":2525,"src":"25637:15:1","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"src":"25619:33:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1994,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1990,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"25668:5:1","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":1991,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"25674:9:1","memberName":"timestamp","nodeType":"MemberAccess","src":"25668:15:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":1992,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1979,"src":"25686:4:1","typeDescriptions":{"typeIdentifier":"t_struct$_ValidationData_$2526_memory_ptr","typeString":"struct ValidationData memory"}},"id":1993,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"25691:10:1","memberName":"validAfter","nodeType":"MemberAccess","referencedDeclaration":2523,"src":"25686:15:1","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"src":"25668:33:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"25619:82:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"25590:111:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1997,"nodeType":"ExpressionStatement","src":"25590:111:1"},{"expression":{"id":2001,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1998,"name":"aggregator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1961,"src":"25711:10:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":1999,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1979,"src":"25724:4:1","typeDescriptions":{"typeIdentifier":"t_struct$_ValidationData_$2526_memory_ptr","typeString":"struct ValidationData memory"}},"id":2000,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"25729:10:1","memberName":"aggregator","nodeType":"MemberAccess","referencedDeclaration":2521,"src":"25724:15:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"25711:28:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2002,"nodeType":"ExpressionStatement","src":"25711:28:1"}]},"id":2004,"implemented":true,"kind":"function","modifiers":[],"name":"_getValidationData","nameLocation":"25245:18:1","nodeType":"FunctionDefinition","parameters":{"id":1959,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1958,"mutability":"mutable","name":"validationData","nameLocation":"25281:14:1","nodeType":"VariableDeclaration","scope":2004,"src":"25273:22:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1957,"name":"uint256","nodeType":"ElementaryTypeName","src":"25273:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"25263:38:1"},"returnParameters":{"id":1964,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1961,"mutability":"mutable","name":"aggregator","nameLocation":"25333:10:1","nodeType":"VariableDeclaration","scope":2004,"src":"25325:18:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1960,"name":"address","nodeType":"ElementaryTypeName","src":"25325:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1963,"mutability":"mutable","name":"outOfTimeRange","nameLocation":"25350:14:1","nodeType":"VariableDeclaration","scope":2004,"src":"25345:19:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1962,"name":"bool","nodeType":"ElementaryTypeName","src":"25345:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"25324:41:1"},"scope":2517,"src":"25236:510:1","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":2250,"nodeType":"Block","src":"26333:2597:1","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2024,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2021,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"26351:3:1","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2022,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26355:5:1","memberName":"value","nodeType":"MemberAccess","src":"26351:9:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"37","id":2023,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26363:1:1","typeDescriptions":{"typeIdentifier":"t_rational_7_by_1","typeString":"int_const 7"},"value":"7"},"src":"26351:13:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"76616c7565206e687520637574203737","id":2025,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"26366:18:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_24271b86bd0cf060f67736e8b3d079102dc9852c5b65a1c8890da93cbb7af398","typeString":"literal_string \"value nhu cut 77\""},"value":"value nhu cut 77"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_24271b86bd0cf060f67736e8b3d079102dc9852c5b65a1c8890da93cbb7af398","typeString":"literal_string \"value nhu cut 77\""}],"id":2020,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"26343:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2026,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26343:42:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2027,"nodeType":"ExpressionStatement","src":"26343:42:1"},{"assignments":[2029],"declarations":[{"constant":false,"id":2029,"mutability":"mutable","name":"preGas","nameLocation":"26403:6:1","nodeType":"VariableDeclaration","scope":2250,"src":"26395:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2028,"name":"uint256","nodeType":"ElementaryTypeName","src":"26395:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2032,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":2030,"name":"gasleft","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-7,"src":"26412:7:1","typeDescriptions":{"typeIdentifier":"t_function_gasleft_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":2031,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26412:9:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"26395:26:1"},{"assignments":[2035],"declarations":[{"constant":false,"id":2035,"mutability":"mutable","name":"mUserOp","nameLocation":"26451:7:1","nodeType":"VariableDeclaration","scope":2250,"src":"26431:27:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_MemoryUserOp_$813_memory_ptr","typeString":"struct EntryPoint.MemoryUserOp"},"typeName":{"id":2034,"nodeType":"UserDefinedTypeName","pathNode":{"id":2033,"name":"MemoryUserOp","nameLocations":["26431:12:1"],"nodeType":"IdentifierPath","referencedDeclaration":813,"src":"26431:12:1"},"referencedDeclaration":813,"src":"26431:12:1","typeDescriptions":{"typeIdentifier":"t_struct$_MemoryUserOp_$813_storage_ptr","typeString":"struct EntryPoint.MemoryUserOp"}},"visibility":"internal"}],"id":2038,"initialValue":{"expression":{"id":2036,"name":"outOpInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2013,"src":"26461:9:1","typeDescriptions":{"typeIdentifier":"t_struct$_UserOpInfo_$825_memory_ptr","typeString":"struct EntryPoint.UserOpInfo memory"}},"id":2037,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"26471:7:1","memberName":"mUserOp","nodeType":"MemberAccess","referencedDeclaration":816,"src":"26461:17:1","typeDescriptions":{"typeIdentifier":"t_struct$_MemoryUserOp_$813_memory_ptr","typeString":"struct EntryPoint.MemoryUserOp memory"}},"nodeType":"VariableDeclarationStatement","src":"26431:47:1"},{"expression":{"arguments":[{"id":2040,"name":"userOp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2010,"src":"26508:6:1","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$3762_calldata_ptr","typeString":"struct UserOperation calldata"}},{"id":2041,"name":"mUserOp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2035,"src":"26516:7:1","typeDescriptions":{"typeIdentifier":"t_struct$_MemoryUserOp_$813_memory_ptr","typeString":"struct EntryPoint.MemoryUserOp memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_UserOperation_$3762_calldata_ptr","typeString":"struct UserOperation calldata"},{"typeIdentifier":"t_struct$_MemoryUserOp_$813_memory_ptr","typeString":"struct EntryPoint.MemoryUserOp memory"}],"id":2039,"name":"_copyUserOpToMemory","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1109,"src":"26488:19:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_UserOperation_$3762_calldata_ptr_$_t_struct$_MemoryUserOp_$813_memory_ptr_$returns$__$","typeString":"function (struct UserOperation calldata,struct EntryPoint.MemoryUserOp memory) pure"}},"id":2042,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26488:36:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2043,"nodeType":"ExpressionStatement","src":"26488:36:1"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2048,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2045,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"26542:3:1","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2046,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26546:5:1","memberName":"value","nodeType":"MemberAccess","src":"26542:9:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"38","id":2047,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26554:1:1","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"26542:13:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"76616c7565206e687520637574203838","id":2049,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"26557:18:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_1ea05cbfc3e9085610509d4fa2c0ba5b4da4a41367b6cc7b2cfe20927c3dd657","typeString":"literal_string \"value nhu cut 88\""},"value":"value nhu cut 88"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_1ea05cbfc3e9085610509d4fa2c0ba5b4da4a41367b6cc7b2cfe20927c3dd657","typeString":"literal_string \"value nhu cut 88\""}],"id":2044,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"26534:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2050,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26534:42:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2051,"nodeType":"ExpressionStatement","src":"26534:42:1"},{"expression":{"id":2058,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":2052,"name":"outOpInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2013,"src":"26586:9:1","typeDescriptions":{"typeIdentifier":"t_struct$_UserOpInfo_$825_memory_ptr","typeString":"struct EntryPoint.UserOpInfo memory"}},"id":2054,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"26596:10:1","memberName":"userOpHash","nodeType":"MemberAccess","referencedDeclaration":818,"src":"26586:20:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":2056,"name":"userOp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2010,"src":"26623:6:1","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$3762_calldata_ptr","typeString":"struct UserOperation calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_UserOperation_$3762_calldata_ptr","typeString":"struct UserOperation calldata"}],"id":2055,"name":"getUserOpHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1006,"src":"26609:13:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_UserOperation_$3762_calldata_ptr_$returns$_t_bytes32_$","typeString":"function (struct UserOperation calldata) view returns (bytes32)"}},"id":2057,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26609:21:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"26586:44:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":2059,"nodeType":"ExpressionStatement","src":"26586:44:1"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2064,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2061,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"26648:3:1","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2062,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26652:5:1","memberName":"value","nodeType":"MemberAccess","src":"26648:9:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"39","id":2063,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26660:1:1","typeDescriptions":{"typeIdentifier":"t_rational_9_by_1","typeString":"int_const 9"},"value":"9"},"src":"26648:13:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"76616c7565206e687520637574203939","id":2065,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"26663:18:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_a5814e8d42830c8e365edb256d09992ce6dab626cb227763fdceb2ad680fe908","typeString":"literal_string \"value nhu cut 99\""},"value":"value nhu cut 99"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_a5814e8d42830c8e365edb256d09992ce6dab626cb227763fdceb2ad680fe908","typeString":"literal_string \"value nhu cut 99\""}],"id":2060,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"26640:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2066,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26640:42:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2067,"nodeType":"ExpressionStatement","src":"26640:42:1"},{"assignments":[2069],"declarations":[{"constant":false,"id":2069,"mutability":"mutable","name":"maxGasValues","nameLocation":"26852:12:1","nodeType":"VariableDeclaration","scope":2250,"src":"26844:20:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2068,"name":"uint256","nodeType":"ElementaryTypeName","src":"26844:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2084,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2083,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2080,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2077,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2074,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2070,"name":"mUserOp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2035,"src":"26867:7:1","typeDescriptions":{"typeIdentifier":"t_struct$_MemoryUserOp_$813_memory_ptr","typeString":"struct EntryPoint.MemoryUserOp memory"}},"id":2071,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"26875:18:1","memberName":"preVerificationGas","nodeType":"MemberAccess","referencedDeclaration":806,"src":"26867:26:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"expression":{"id":2072,"name":"mUserOp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2035,"src":"26908:7:1","typeDescriptions":{"typeIdentifier":"t_struct$_MemoryUserOp_$813_memory_ptr","typeString":"struct EntryPoint.MemoryUserOp memory"}},"id":2073,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"26916:20:1","memberName":"verificationGasLimit","nodeType":"MemberAccess","referencedDeclaration":804,"src":"26908:28:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26867:69:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"expression":{"id":2075,"name":"mUserOp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2035,"src":"26951:7:1","typeDescriptions":{"typeIdentifier":"t_struct$_MemoryUserOp_$813_memory_ptr","typeString":"struct EntryPoint.MemoryUserOp memory"}},"id":2076,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"26959:12:1","memberName":"callGasLimit","nodeType":"MemberAccess","referencedDeclaration":802,"src":"26951:20:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26867:104:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"expression":{"id":2078,"name":"userOp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2010,"src":"26986:6:1","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$3762_calldata_ptr","typeString":"struct UserOperation calldata"}},"id":2079,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26993:12:1","memberName":"maxFeePerGas","nodeType":"MemberAccess","referencedDeclaration":3755,"src":"26986:19:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26867:138:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"expression":{"id":2081,"name":"userOp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2010,"src":"27020:6:1","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$3762_calldata_ptr","typeString":"struct UserOperation calldata"}},"id":2082,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"27027:20:1","memberName":"maxPriorityFeePerGas","nodeType":"MemberAccess","referencedDeclaration":3757,"src":"27020:27:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26867:180:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"26844:203:1"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2092,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2086,"name":"maxGasValues","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2069,"src":"27065:12:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":2089,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"27086:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_uint120_$","typeString":"type(uint120)"},"typeName":{"id":2088,"name":"uint120","nodeType":"ElementaryTypeName","src":"27086:7:1","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint120_$","typeString":"type(uint120)"}],"id":2087,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"27081:4:1","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2090,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27081:13:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint120","typeString":"type(uint120)"}},"id":2091,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"27095:3:1","memberName":"max","nodeType":"MemberAccess","src":"27081:17:1","typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"}},"src":"27065:33:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"41413934206761732076616c756573206f766572666c6f77","id":2093,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"27100:26:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_2454d602dd1245dd701375973b2bac347a9e27dc7542cb5ffbdc114cb2232f69","typeString":"literal_string \"AA94 gas values overflow\""},"value":"AA94 gas values overflow"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_2454d602dd1245dd701375973b2bac347a9e27dc7542cb5ffbdc114cb2232f69","typeString":"literal_string \"AA94 gas values overflow\""}],"id":2085,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"27057:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2094,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27057:70:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2095,"nodeType":"ExpressionStatement","src":"27057:70:1"},{"assignments":[2097],"declarations":[{"constant":false,"id":2097,"mutability":"mutable","name":"gasUsedByValidateAccountPrepayment","nameLocation":"27146:34:1","nodeType":"VariableDeclaration","scope":2250,"src":"27138:42:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2096,"name":"uint256","nodeType":"ElementaryTypeName","src":"27138:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2098,"nodeType":"VariableDeclarationStatement","src":"27138:42:1"},{"assignments":[2100],"declarations":[{"constant":false,"id":2100,"mutability":"mutable","name":"requiredPreFund","nameLocation":"27198:15:1","nodeType":"VariableDeclaration","scope":2250,"src":"27190:23:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2099,"name":"uint256","nodeType":"ElementaryTypeName","src":"27190:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2104,"initialValue":{"arguments":[{"id":2102,"name":"mUserOp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2035,"src":"27236:7:1","typeDescriptions":{"typeIdentifier":"t_struct$_MemoryUserOp_$813_memory_ptr","typeString":"struct EntryPoint.MemoryUserOp memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_MemoryUserOp_$813_memory_ptr","typeString":"struct EntryPoint.MemoryUserOp memory"}],"id":2101,"name":"_getRequiredPrefund","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1315,"src":"27216:19:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_MemoryUserOp_$813_memory_ptr_$returns$_t_uint256_$","typeString":"function (struct EntryPoint.MemoryUserOp memory) pure returns (uint256)"}},"id":2103,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27216:28:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"27190:54:1"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2109,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2106,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"27262:3:1","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2107,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"27266:5:1","memberName":"value","nodeType":"MemberAccess","src":"27262:9:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3130","id":2108,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27274:2:1","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"src":"27262:14:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"76616c7565206e68752063757420313030","id":2110,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"27278:19:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_02b1668e8ce83930cfb6044a3a77d291c5d00a9acd5516a985a21835955fb99f","typeString":"literal_string \"value nhu cut 100\""},"value":"value nhu cut 100"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_02b1668e8ce83930cfb6044a3a77d291c5d00a9acd5516a985a21835955fb99f","typeString":"literal_string \"value nhu cut 100\""}],"id":2105,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"27254:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2111,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27254:44:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2112,"nodeType":"ExpressionStatement","src":"27254:44:1"},{"expression":{"id":2122,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"components":[{"id":2113,"name":"gasUsedByValidateAccountPrepayment","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2097,"src":"27322:34:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2114,"name":"validationData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2016,"src":"27370:14:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2115,"isConstant":false,"isInlineArray":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"TupleExpression","src":"27308:86:1","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":2117,"name":"opIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2007,"src":"27437:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2118,"name":"userOp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2010,"src":"27458:6:1","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$3762_calldata_ptr","typeString":"struct UserOperation calldata"}},{"id":2119,"name":"outOpInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2013,"src":"27478:9:1","typeDescriptions":{"typeIdentifier":"t_struct$_UserOpInfo_$825_memory_ptr","typeString":"struct EntryPoint.UserOpInfo memory"}},{"id":2120,"name":"requiredPreFund","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2100,"src":"27501:15:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_struct$_UserOperation_$3762_calldata_ptr","typeString":"struct UserOperation calldata"},{"typeIdentifier":"t_struct$_UserOpInfo_$825_memory_ptr","typeString":"struct EntryPoint.UserOpInfo memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2116,"name":"_validateAccountPrepayment","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1704,"src":"27397:26:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$_t_struct$_UserOperation_$3762_calldata_ptr_$_t_struct$_UserOpInfo_$825_memory_ptr_$_t_uint256_$returns$_t_uint256_$_t_uint256_$","typeString":"function (uint256,struct UserOperation calldata,struct EntryPoint.UserOpInfo memory,uint256) returns (uint256,uint256)"}},"id":2121,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27397:129:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"src":"27308:218:1","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2123,"nodeType":"ExpressionStatement","src":"27308:218:1"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2128,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2125,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"27544:3:1","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2126,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"27548:5:1","memberName":"value","nodeType":"MemberAccess","src":"27544:9:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3131","id":2127,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27556:2:1","typeDescriptions":{"typeIdentifier":"t_rational_11_by_1","typeString":"int_const 11"},"value":"11"},"src":"27544:14:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"76616c7565206e68752063757420313131","id":2129,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"27560:19:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_c941bf71a61826f5f8b124c689e9c1f99d15a2e7b742995c57483151f9b064b4","typeString":"literal_string \"value nhu cut 111\""},"value":"value nhu cut 111"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_c941bf71a61826f5f8b124c689e9c1f99d15a2e7b742995c57483151f9b064b4","typeString":"literal_string \"value nhu cut 111\""}],"id":2124,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"27536:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2130,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27536:44:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2131,"nodeType":"ExpressionStatement","src":"27536:44:1"},{"condition":{"id":2138,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"27595:55:1","subExpression":{"arguments":[{"expression":{"id":2133,"name":"mUserOp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2035,"src":"27620:7:1","typeDescriptions":{"typeIdentifier":"t_struct$_MemoryUserOp_$813_memory_ptr","typeString":"struct EntryPoint.MemoryUserOp memory"}},"id":2134,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"27628:6:1","memberName":"sender","nodeType":"MemberAccess","referencedDeclaration":798,"src":"27620:14:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":2135,"name":"mUserOp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2035,"src":"27636:7:1","typeDescriptions":{"typeIdentifier":"t_struct$_MemoryUserOp_$813_memory_ptr","typeString":"struct EntryPoint.MemoryUserOp memory"}},"id":2136,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"27644:5:1","memberName":"nonce","nodeType":"MemberAccess","referencedDeclaration":800,"src":"27636:13:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2132,"name":"_validateAndUpdateNonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2847,"src":"27596:23:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) returns (bool)"}},"id":2137,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27596:54:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2145,"nodeType":"IfStatement","src":"27591:140:1","trueBody":{"id":2144,"nodeType":"Block","src":"27652:79:1","statements":[{"errorCall":{"arguments":[{"id":2140,"name":"opIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2007,"src":"27682:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"4141323520696e76616c6964206163636f756e74206e6f6e6365","id":2141,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"27691:28:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_1a6d2773a48550bbfcfd396dd79645bef61ab18efc53f13933af43bfa63cc5b5","typeString":"literal_string \"AA25 invalid account nonce\""},"value":"AA25 invalid account nonce"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_1a6d2773a48550bbfcfd396dd79645bef61ab18efc53f13933af43bfa63cc5b5","typeString":"literal_string \"AA25 invalid account nonce\""}],"id":2139,"name":"FailedOp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3435,"src":"27673:8:1","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$_t_string_memory_ptr_$returns$__$","typeString":"function (uint256,string memory) pure"}},"id":2142,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27673:47:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2143,"nodeType":"RevertStatement","src":"27666:54:1"}]}},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":2146,"name":"numberMarker","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2516,"src":"27907:12:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":2147,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27907:14:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2148,"nodeType":"ExpressionStatement","src":"27907:14:1"},{"assignments":[2150],"declarations":[{"constant":false,"id":2150,"mutability":"mutable","name":"context","nameLocation":"27945:7:1","nodeType":"VariableDeclaration","scope":2250,"src":"27932:20:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2149,"name":"bytes","nodeType":"ElementaryTypeName","src":"27932:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2151,"nodeType":"VariableDeclarationStatement","src":"27932:20:1"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2158,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2152,"name":"mUserOp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2035,"src":"27966:7:1","typeDescriptions":{"typeIdentifier":"t_struct$_MemoryUserOp_$813_memory_ptr","typeString":"struct EntryPoint.MemoryUserOp memory"}},"id":2153,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"27974:9:1","memberName":"paymaster","nodeType":"MemberAccess","referencedDeclaration":808,"src":"27966:17:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":2156,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27995:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2155,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"27987:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2154,"name":"address","nodeType":"ElementaryTypeName","src":"27987:7:1","typeDescriptions":{}}},"id":2157,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27987:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"27966:31:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2172,"nodeType":"IfStatement","src":"27962:302:1","trueBody":{"id":2171,"nodeType":"Block","src":"27999:265:1","statements":[{"expression":{"id":2169,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"components":[{"id":2159,"name":"context","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2150,"src":"28014:7:1","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":2160,"name":"paymasterValidationData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2018,"src":"28023:23:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2161,"isConstant":false,"isInlineArray":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"TupleExpression","src":"28013:34:1","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bytes_memory_ptr_$_t_uint256_$","typeString":"tuple(bytes memory,uint256)"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":2163,"name":"opIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2007,"src":"28096:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2164,"name":"userOp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2010,"src":"28121:6:1","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$3762_calldata_ptr","typeString":"struct UserOperation calldata"}},{"id":2165,"name":"outOpInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2013,"src":"28145:9:1","typeDescriptions":{"typeIdentifier":"t_struct$_UserOpInfo_$825_memory_ptr","typeString":"struct EntryPoint.UserOpInfo memory"}},{"id":2166,"name":"requiredPreFund","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2100,"src":"28172:15:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2167,"name":"gasUsedByValidateAccountPrepayment","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2097,"src":"28205:34:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_struct$_UserOperation_$3762_calldata_ptr","typeString":"struct UserOperation calldata"},{"typeIdentifier":"t_struct$_UserOpInfo_$825_memory_ptr","typeString":"struct EntryPoint.UserOpInfo memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2162,"name":"_validatePaymasterPrepayment","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1837,"src":"28050:28:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$_t_struct$_UserOperation_$3762_calldata_ptr_$_t_struct$_UserOpInfo_$825_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bytes_memory_ptr_$_t_uint256_$","typeString":"function (uint256,struct UserOperation calldata,struct EntryPoint.UserOpInfo memory,uint256,uint256) returns (bytes memory,uint256)"}},"id":2168,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28050:203:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bytes_memory_ptr_$_t_uint256_$","typeString":"tuple(bytes memory,uint256)"}},"src":"28013:240:1","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2170,"nodeType":"ExpressionStatement","src":"28013:240:1"}]}},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2177,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2174,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"28281:3:1","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2175,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"28285:5:1","memberName":"value","nodeType":"MemberAccess","src":"28281:9:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3132","id":2176,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28293:2:1","typeDescriptions":{"typeIdentifier":"t_rational_12_by_1","typeString":"int_const 12"},"value":"12"},"src":"28281:14:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"76616c7565206e68752063757420313232","id":2178,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"28297:19:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_d6fc4f4d29a659c9ebb796a0a13aff111624d6c108ce4eaa29fefe368a89de2e","typeString":"literal_string \"value nhu cut 122\""},"value":"value nhu cut 122"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_d6fc4f4d29a659c9ebb796a0a13aff111624d6c108ce4eaa29fefe368a89de2e","typeString":"literal_string \"value nhu cut 122\""}],"id":2173,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"28273:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2179,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28273:44:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2180,"nodeType":"ExpressionStatement","src":"28273:44:1"},{"id":2249,"nodeType":"UncheckedBlock","src":"28328:596:1","statements":[{"assignments":[2182],"declarations":[{"constant":false,"id":2182,"mutability":"mutable","name":"gasUsed","nameLocation":"28360:7:1","nodeType":"VariableDeclaration","scope":2249,"src":"28352:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2181,"name":"uint256","nodeType":"ElementaryTypeName","src":"28352:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2187,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2186,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2183,"name":"preGas","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2029,"src":"28370:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":2184,"name":"gasleft","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-7,"src":"28379:7:1","typeDescriptions":{"typeIdentifier":"t_function_gasleft_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":2185,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28379:9:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"28370:18:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"28352:36:1"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2192,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2189,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"28410:3:1","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2190,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"28414:5:1","memberName":"value","nodeType":"MemberAccess","src":"28410:9:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3133","id":2191,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28422:2:1","typeDescriptions":{"typeIdentifier":"t_rational_13_by_1","typeString":"int_const 13"},"value":"13"},"src":"28410:14:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"76616c7565206e68752063757420313233","id":2193,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"28426:19:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_e24c4424b22a8e4fdf0510a12a4b4e3c85380e6b472862ccb473180978ba3e27","typeString":"literal_string \"value nhu cut 123\""},"value":"value nhu cut 123"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_e24c4424b22a8e4fdf0510a12a4b4e3c85380e6b472862ccb473180978ba3e27","typeString":"literal_string \"value nhu cut 123\""}],"id":2188,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"28402:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2194,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28402:44:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2195,"nodeType":"ExpressionStatement","src":"28402:44:1"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2199,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2196,"name":"userOp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2010,"src":"28465:6:1","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$3762_calldata_ptr","typeString":"struct UserOperation calldata"}},"id":2197,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"28472:20:1","memberName":"verificationGasLimit","nodeType":"MemberAccess","referencedDeclaration":3751,"src":"28465:27:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2198,"name":"gasUsed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2182,"src":"28495:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"28465:37:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2206,"nodeType":"IfStatement","src":"28461:134:1","trueBody":{"id":2205,"nodeType":"Block","src":"28504:91:1","statements":[{"errorCall":{"arguments":[{"id":2201,"name":"opIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2007,"src":"28538:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"41413430206f76657220766572696669636174696f6e4761734c696d6974","id":2202,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"28547:32:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_7d1dd4a09dc6414e69300598bfd3bd697585d57a99ffc262a56c7dd3f91bdcaf","typeString":"literal_string \"AA40 over verificationGasLimit\""},"value":"AA40 over verificationGasLimit"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_7d1dd4a09dc6414e69300598bfd3bd697585d57a99ffc262a56c7dd3f91bdcaf","typeString":"literal_string \"AA40 over verificationGasLimit\""}],"id":2200,"name":"FailedOp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3435,"src":"28529:8:1","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$_t_string_memory_ptr_$returns$__$","typeString":"function (uint256,string memory) pure"}},"id":2203,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28529:51:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2204,"nodeType":"RevertStatement","src":"28522:58:1"}]}},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2211,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2208,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"28616:3:1","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2209,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"28620:5:1","memberName":"value","nodeType":"MemberAccess","src":"28616:9:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3134","id":2210,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28628:2:1","typeDescriptions":{"typeIdentifier":"t_rational_14_by_1","typeString":"int_const 14"},"value":"14"},"src":"28616:14:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"76616c7565206e68752063757420313234","id":2212,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"28632:19:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_2fb44655227d9a1cc6a7ea9f812168dc8300a94baf0e6025234ba58fca7371e8","typeString":"literal_string \"value nhu cut 124\""},"value":"value nhu cut 124"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_2fb44655227d9a1cc6a7ea9f812168dc8300a94baf0e6025234ba58fca7371e8","typeString":"literal_string \"value nhu cut 124\""}],"id":2207,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"28608:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2213,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28608:44:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2214,"nodeType":"ExpressionStatement","src":"28608:44:1"},{"expression":{"id":2219,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":2215,"name":"outOpInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2013,"src":"28667:9:1","typeDescriptions":{"typeIdentifier":"t_struct$_UserOpInfo_$825_memory_ptr","typeString":"struct EntryPoint.UserOpInfo memory"}},"id":2217,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"28677:7:1","memberName":"prefund","nodeType":"MemberAccess","referencedDeclaration":820,"src":"28667:17:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2218,"name":"requiredPreFund","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2100,"src":"28687:15:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"28667:35:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2220,"nodeType":"ExpressionStatement","src":"28667:35:1"},{"expression":{"id":2227,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":2221,"name":"outOpInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2013,"src":"28716:9:1","typeDescriptions":{"typeIdentifier":"t_struct$_UserOpInfo_$825_memory_ptr","typeString":"struct EntryPoint.UserOpInfo memory"}},"id":2223,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"28726:13:1","memberName":"contextOffset","nodeType":"MemberAccess","referencedDeclaration":822,"src":"28716:23:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":2225,"name":"context","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2150,"src":"28765:7:1","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2224,"name":"getOffsetOfMemoryBytes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2502,"src":"28742:22:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_uint256_$","typeString":"function (bytes memory) pure returns (uint256)"}},"id":2226,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28742:31:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"28716:57:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2228,"nodeType":"ExpressionStatement","src":"28716:57:1"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2233,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2230,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"28795:3:1","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2231,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"28799:5:1","memberName":"value","nodeType":"MemberAccess","src":"28795:9:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3135","id":2232,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28807:2:1","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"15"},"src":"28795:14:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"76616c7565206e68752063757420313235","id":2234,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"28811:19:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_6f5fa8bb0a53516847d42c588cef13651f03248f4e6acc7eef786656a1d873ef","typeString":"literal_string \"value nhu cut 125\""},"value":"value nhu cut 125"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_6f5fa8bb0a53516847d42c588cef13651f03248f4e6acc7eef786656a1d873ef","typeString":"literal_string \"value nhu cut 125\""}],"id":2229,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"28787:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2235,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28787:44:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2236,"nodeType":"ExpressionStatement","src":"28787:44:1"},{"expression":{"id":2247,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":2237,"name":"outOpInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2013,"src":"28846:9:1","typeDescriptions":{"typeIdentifier":"t_struct$_UserOpInfo_$825_memory_ptr","typeString":"struct EntryPoint.UserOpInfo memory"}},"id":2239,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"28856:8:1","memberName":"preOpGas","nodeType":"MemberAccess","referencedDeclaration":824,"src":"28846:18:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2246,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2243,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2240,"name":"preGas","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2029,"src":"28867:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":2241,"name":"gasleft","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-7,"src":"28876:7:1","typeDescriptions":{"typeIdentifier":"t_function_gasleft_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":2242,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28876:9:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"28867:18:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"expression":{"id":2244,"name":"userOp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2010,"src":"28888:6:1","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$3762_calldata_ptr","typeString":"struct UserOperation calldata"}},"id":2245,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"28895:18:1","memberName":"preVerificationGas","nodeType":"MemberAccess","referencedDeclaration":3753,"src":"28888:25:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"28867:46:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"28846:67:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2248,"nodeType":"ExpressionStatement","src":"28846:67:1"}]}]},"documentation":{"id":2005,"nodeType":"StructuredDocumentation","src":"25752:346:1","text":" validate account and paymaster (if defined).\n also make sure total validation doesn't exceed verificationGasLimit\n this method is called off-chain (simulateValidation()) and on-chain (from handleOps)\n @param opIndex the index of this userOp into the \"opInfos\" array\n @param userOp the userOp to validate"},"id":2251,"implemented":true,"kind":"function","modifiers":[],"name":"_validatePrepayment","nameLocation":"26112:19:1","nodeType":"FunctionDefinition","parameters":{"id":2014,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2007,"mutability":"mutable","name":"opIndex","nameLocation":"26149:7:1","nodeType":"VariableDeclaration","scope":2251,"src":"26141:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2006,"name":"uint256","nodeType":"ElementaryTypeName","src":"26141:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2010,"mutability":"mutable","name":"userOp","nameLocation":"26189:6:1","nodeType":"VariableDeclaration","scope":2251,"src":"26166:29:1","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$3762_calldata_ptr","typeString":"struct UserOperation"},"typeName":{"id":2009,"nodeType":"UserDefinedTypeName","pathNode":{"id":2008,"name":"UserOperation","nameLocations":["26166:13:1"],"nodeType":"IdentifierPath","referencedDeclaration":3762,"src":"26166:13:1"},"referencedDeclaration":3762,"src":"26166:13:1","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$3762_storage_ptr","typeString":"struct UserOperation"}},"visibility":"internal"},{"constant":false,"id":2013,"mutability":"mutable","name":"outOpInfo","nameLocation":"26223:9:1","nodeType":"VariableDeclaration","scope":2251,"src":"26205:27:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_UserOpInfo_$825_memory_ptr","typeString":"struct EntryPoint.UserOpInfo"},"typeName":{"id":2012,"nodeType":"UserDefinedTypeName","pathNode":{"id":2011,"name":"UserOpInfo","nameLocations":["26205:10:1"],"nodeType":"IdentifierPath","referencedDeclaration":825,"src":"26205:10:1"},"referencedDeclaration":825,"src":"26205:10:1","typeDescriptions":{"typeIdentifier":"t_struct$_UserOpInfo_$825_storage_ptr","typeString":"struct EntryPoint.UserOpInfo"}},"visibility":"internal"}],"src":"26131:107:1"},"returnParameters":{"id":2019,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2016,"mutability":"mutable","name":"validationData","nameLocation":"26280:14:1","nodeType":"VariableDeclaration","scope":2251,"src":"26272:22:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2015,"name":"uint256","nodeType":"ElementaryTypeName","src":"26272:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2018,"mutability":"mutable","name":"paymasterValidationData","nameLocation":"26304:23:1","nodeType":"VariableDeclaration","scope":2251,"src":"26296:31:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2017,"name":"uint256","nodeType":"ElementaryTypeName","src":"26296:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"26271:57:1"},"scope":2517,"src":"26103:2827:1","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":2439,"nodeType":"Block","src":"29795:2239:1","statements":[{"assignments":[2270],"declarations":[{"constant":false,"id":2270,"mutability":"mutable","name":"preGas","nameLocation":"29813:6:1","nodeType":"VariableDeclaration","scope":2439,"src":"29805:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2269,"name":"uint256","nodeType":"ElementaryTypeName","src":"29805:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2273,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":2271,"name":"gasleft","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-7,"src":"29822:7:1","typeDescriptions":{"typeIdentifier":"t_function_gasleft_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":2272,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29822:9:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"29805:26:1"},{"id":2438,"nodeType":"UncheckedBlock","src":"29841:2174:1","statements":[{"assignments":[2275],"declarations":[{"constant":false,"id":2275,"mutability":"mutable","name":"refundAddress","nameLocation":"29873:13:1","nodeType":"VariableDeclaration","scope":2438,"src":"29865:21:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2274,"name":"address","nodeType":"ElementaryTypeName","src":"29865:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":2276,"nodeType":"VariableDeclarationStatement","src":"29865:21:1"},{"assignments":[2279],"declarations":[{"constant":false,"id":2279,"mutability":"mutable","name":"mUserOp","nameLocation":"29920:7:1","nodeType":"VariableDeclaration","scope":2438,"src":"29900:27:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_MemoryUserOp_$813_memory_ptr","typeString":"struct EntryPoint.MemoryUserOp"},"typeName":{"id":2278,"nodeType":"UserDefinedTypeName","pathNode":{"id":2277,"name":"MemoryUserOp","nameLocations":["29900:12:1"],"nodeType":"IdentifierPath","referencedDeclaration":813,"src":"29900:12:1"},"referencedDeclaration":813,"src":"29900:12:1","typeDescriptions":{"typeIdentifier":"t_struct$_MemoryUserOp_$813_storage_ptr","typeString":"struct EntryPoint.MemoryUserOp"}},"visibility":"internal"}],"id":2282,"initialValue":{"expression":{"id":2280,"name":"opInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2260,"src":"29930:6:1","typeDescriptions":{"typeIdentifier":"t_struct$_UserOpInfo_$825_memory_ptr","typeString":"struct EntryPoint.UserOpInfo memory"}},"id":2281,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"29937:7:1","memberName":"mUserOp","nodeType":"MemberAccess","referencedDeclaration":816,"src":"29930:14:1","typeDescriptions":{"typeIdentifier":"t_struct$_MemoryUserOp_$813_memory_ptr","typeString":"struct EntryPoint.MemoryUserOp memory"}},"nodeType":"VariableDeclarationStatement","src":"29900:44:1"},{"assignments":[2284],"declarations":[{"constant":false,"id":2284,"mutability":"mutable","name":"gasPrice","nameLocation":"29966:8:1","nodeType":"VariableDeclaration","scope":2438,"src":"29958:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2283,"name":"uint256","nodeType":"ElementaryTypeName","src":"29958:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2288,"initialValue":{"arguments":[{"id":2286,"name":"mUserOp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2279,"src":"29995:7:1","typeDescriptions":{"typeIdentifier":"t_struct$_MemoryUserOp_$813_memory_ptr","typeString":"struct EntryPoint.MemoryUserOp memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_MemoryUserOp_$813_memory_ptr","typeString":"struct EntryPoint.MemoryUserOp memory"}],"id":2285,"name":"getUserOpGasPrice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2476,"src":"29977:17:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_MemoryUserOp_$813_memory_ptr_$returns$_t_uint256_$","typeString":"function (struct EntryPoint.MemoryUserOp memory) view returns (uint256)"}},"id":2287,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29977:26:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"29958:45:1"},{"assignments":[2290],"declarations":[{"constant":false,"id":2290,"mutability":"mutable","name":"paymaster","nameLocation":"30026:9:1","nodeType":"VariableDeclaration","scope":2438,"src":"30018:17:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2289,"name":"address","nodeType":"ElementaryTypeName","src":"30018:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":2293,"initialValue":{"expression":{"id":2291,"name":"mUserOp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2279,"src":"30038:7:1","typeDescriptions":{"typeIdentifier":"t_struct$_MemoryUserOp_$813_memory_ptr","typeString":"struct EntryPoint.MemoryUserOp memory"}},"id":2292,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"30046:9:1","memberName":"paymaster","nodeType":"MemberAccess","referencedDeclaration":808,"src":"30038:17:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"30018:37:1"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2299,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2294,"name":"paymaster","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2290,"src":"30073:9:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":2297,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30094:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2296,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"30086:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2295,"name":"address","nodeType":"ElementaryTypeName","src":"30086:7:1","typeDescriptions":{}}},"id":2298,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30086:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"30073:23:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2378,"nodeType":"Block","src":"30167:1149:1","statements":[{"expression":{"id":2308,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2306,"name":"refundAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2275,"src":"30185:13:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2307,"name":"paymaster","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2290,"src":"30201:9:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"30185:25:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2309,"nodeType":"ExpressionStatement","src":"30185:25:1"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2313,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2310,"name":"context","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2262,"src":"30232:7:1","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2311,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"30240:6:1","memberName":"length","nodeType":"MemberAccess","src":"30232:14:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2312,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30249:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"30232:18:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2377,"nodeType":"IfStatement","src":"30228:1074:1","trueBody":{"id":2376,"nodeType":"Block","src":"30252:1050:1","statements":[{"expression":{"id":2318,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2314,"name":"actualGasCost","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2267,"src":"30274:13:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2317,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2315,"name":"actualGas","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2264,"src":"30290:9:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2316,"name":"gasPrice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2284,"src":"30302:8:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"30290:20:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"30274:36:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2319,"nodeType":"ExpressionStatement","src":"30274:36:1"},{"condition":{"commonType":{"typeIdentifier":"t_enum$_PostOpMode_$3603","typeString":"enum IPaymaster.PostOpMode"},"id":2324,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2320,"name":"mode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2257,"src":"30336:4:1","typeDescriptions":{"typeIdentifier":"t_enum$_PostOpMode_$3603","typeString":"enum IPaymaster.PostOpMode"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"expression":{"id":2321,"name":"IPaymaster","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3630,"src":"30344:10:1","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IPaymaster_$3630_$","typeString":"type(contract IPaymaster)"}},"id":2322,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"30355:10:1","memberName":"PostOpMode","nodeType":"MemberAccess","referencedDeclaration":3603,"src":"30344:21:1","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_PostOpMode_$3603_$","typeString":"type(enum IPaymaster.PostOpMode)"}},"id":2323,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"30366:14:1","memberName":"postOpReverted","nodeType":"MemberAccess","referencedDeclaration":3602,"src":"30344:36:1","typeDescriptions":{"typeIdentifier":"t_enum$_PostOpMode_$3603","typeString":"enum IPaymaster.PostOpMode"}},"src":"30336:44:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2374,"nodeType":"Block","src":"30584:700:1","statements":[{"clauses":[{"block":{"id":2349,"nodeType":"Block","src":"30891:2:1","statements":[]},"errorName":"","id":2350,"nodeType":"TryCatchClause","src":"30891:2:1"},{"block":{"id":2364,"nodeType":"Block","src":"30928:224:1","statements":[{"errorCall":{"arguments":[{"id":2355,"name":"opIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2254,"src":"31007:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"hexValue":"4141353020706f73744f702072657665727465643a20","id":2359,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"31062:24:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_89cfa8476c9240f64d7d0db687b79e8eeea1ecc4f5bfab4622523f588b7a9023","typeString":"literal_string \"AA50 postOp reverted: \""},"value":"AA50 postOp reverted: "},{"id":2360,"name":"reason","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2352,"src":"31088:6:1","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_89cfa8476c9240f64d7d0db687b79e8eeea1ecc4f5bfab4622523f588b7a9023","typeString":"literal_string \"AA50 postOp reverted: \""},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":2357,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"31048:6:1","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":2356,"name":"string","nodeType":"ElementaryTypeName","src":"31048:6:1","typeDescriptions":{}}},"id":2358,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"31055:6:1","memberName":"concat","nodeType":"MemberAccess","src":"31048:13:1","typeDescriptions":{"typeIdentifier":"t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$","typeString":"function () pure returns (string memory)"}},"id":2361,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31048:47:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2354,"name":"FailedOp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3435,"src":"30965:8:1","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$_t_string_memory_ptr_$returns$__$","typeString":"function (uint256,string memory) pure"}},"id":2362,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30965:160:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2363,"nodeType":"RevertStatement","src":"30958:167:1"}]},"errorName":"Error","id":2365,"nodeType":"TryCatchClause","parameters":{"id":2353,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2352,"mutability":"mutable","name":"reason","nameLocation":"30920:6:1","nodeType":"VariableDeclaration","scope":2365,"src":"30906:20:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2351,"name":"string","nodeType":"ElementaryTypeName","src":"30906:6:1","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"30905:22:1"},"src":"30894:258:1"},{"block":{"id":2371,"nodeType":"Block","src":"31159:103:1","statements":[{"errorCall":{"arguments":[{"id":2367,"name":"opIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2254,"src":"31205:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"4141353020706f73744f7020726576657274","id":2368,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"31214:20:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_90de5d306df3292f820b93f6e4dc87adc3236924e1c3376b59e166ff929d9706","typeString":"literal_string \"AA50 postOp revert\""},"value":"AA50 postOp revert"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_90de5d306df3292f820b93f6e4dc87adc3236924e1c3376b59e166ff929d9706","typeString":"literal_string \"AA50 postOp revert\""}],"id":2366,"name":"FailedOp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3435,"src":"31196:8:1","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$_t_string_memory_ptr_$returns$__$","typeString":"function (uint256,string memory) pure"}},"id":2369,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31196:39:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2370,"nodeType":"RevertStatement","src":"31189:46:1"}]},"errorName":"","id":2372,"nodeType":"TryCatchClause","src":"31153:109:1"}],"externalCall":{"arguments":[{"id":2345,"name":"mode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2257,"src":"30837:4:1","typeDescriptions":{"typeIdentifier":"t_enum$_PostOpMode_$3603","typeString":"enum IPaymaster.PostOpMode"}},{"id":2346,"name":"context","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2262,"src":"30843:7:1","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":2347,"name":"actualGasCost","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2267,"src":"30852:13:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_PostOpMode_$3603","typeString":"enum IPaymaster.PostOpMode"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_PostOpMode_$3603","typeString":"enum IPaymaster.PostOpMode"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":2339,"name":"paymaster","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2290,"src":"30722:9:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2338,"name":"IPaymaster","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3630,"src":"30711:10:1","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IPaymaster_$3630_$","typeString":"type(contract IPaymaster)"}},"id":2340,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30711:21:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IPaymaster_$3630","typeString":"contract IPaymaster"}},"id":2341,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"30733:6:1","memberName":"postOp","nodeType":"MemberAccess","referencedDeclaration":3629,"src":"30711:28:1","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_enum$_PostOpMode_$3603_$_t_bytes_memory_ptr_$_t_uint256_$returns$__$","typeString":"function (enum IPaymaster.PostOpMode,bytes memory,uint256) external"}},"id":2344,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["gas"],"nodeType":"FunctionCallOptions","options":[{"expression":{"id":2342,"name":"mUserOp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2279,"src":"30778:7:1","typeDescriptions":{"typeIdentifier":"t_struct$_MemoryUserOp_$813_memory_ptr","typeString":"struct EntryPoint.MemoryUserOp memory"}},"id":2343,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"30786:20:1","memberName":"verificationGasLimit","nodeType":"MemberAccess","referencedDeclaration":804,"src":"30778:28:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"30711:125:1","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_enum$_PostOpMode_$3603_$_t_bytes_memory_ptr_$_t_uint256_$returns$__$gas","typeString":"function (enum IPaymaster.PostOpMode,bytes memory,uint256) external"}},"id":2348,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30711:155:1","tryCall":true,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2373,"nodeType":"TryStatement","src":"30679:583:1"}]},"id":2375,"nodeType":"IfStatement","src":"30332:952:1","trueBody":{"id":2337,"nodeType":"Block","src":"30382:196:1","statements":[{"expression":{"arguments":[{"id":2332,"name":"mode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2257,"src":"30526:4:1","typeDescriptions":{"typeIdentifier":"t_enum$_PostOpMode_$3603","typeString":"enum IPaymaster.PostOpMode"}},{"id":2333,"name":"context","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2262,"src":"30532:7:1","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":2334,"name":"actualGasCost","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2267,"src":"30541:13:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_PostOpMode_$3603","typeString":"enum IPaymaster.PostOpMode"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_PostOpMode_$3603","typeString":"enum IPaymaster.PostOpMode"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":2326,"name":"paymaster","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2290,"src":"30419:9:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2325,"name":"IPaymaster","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3630,"src":"30408:10:1","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IPaymaster_$3630_$","typeString":"type(contract IPaymaster)"}},"id":2327,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30408:21:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IPaymaster_$3630","typeString":"contract IPaymaster"}},"id":2328,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"30430:6:1","memberName":"postOp","nodeType":"MemberAccess","referencedDeclaration":3629,"src":"30408:28:1","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_enum$_PostOpMode_$3603_$_t_bytes_memory_ptr_$_t_uint256_$returns$__$","typeString":"function (enum IPaymaster.PostOpMode,bytes memory,uint256) external"}},"id":2331,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["gas"],"nodeType":"FunctionCallOptions","options":[{"expression":{"id":2329,"name":"mUserOp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2279,"src":"30471:7:1","typeDescriptions":{"typeIdentifier":"t_struct$_MemoryUserOp_$813_memory_ptr","typeString":"struct EntryPoint.MemoryUserOp memory"}},"id":2330,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"30479:20:1","memberName":"verificationGasLimit","nodeType":"MemberAccess","referencedDeclaration":804,"src":"30471:28:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"30408:117:1","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_enum$_PostOpMode_$3603_$_t_bytes_memory_ptr_$_t_uint256_$returns$__$gas","typeString":"function (enum IPaymaster.PostOpMode,bytes memory,uint256) external"}},"id":2335,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30408:147:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2336,"nodeType":"ExpressionStatement","src":"30408:147:1"}]}}]}}]},"id":2379,"nodeType":"IfStatement","src":"30069:1247:1","trueBody":{"id":2305,"nodeType":"Block","src":"30098:63:1","statements":[{"expression":{"id":2303,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2300,"name":"refundAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2275,"src":"30116:13:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":2301,"name":"mUserOp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2279,"src":"30132:7:1","typeDescriptions":{"typeIdentifier":"t_struct$_MemoryUserOp_$813_memory_ptr","typeString":"struct EntryPoint.MemoryUserOp memory"}},"id":2302,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"30140:6:1","memberName":"sender","nodeType":"MemberAccess","referencedDeclaration":798,"src":"30132:14:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"30116:30:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2304,"nodeType":"ExpressionStatement","src":"30116:30:1"}]}},{"expression":{"id":2385,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2380,"name":"actualGas","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2264,"src":"31329:9:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2384,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2381,"name":"preGas","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2270,"src":"31342:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":2382,"name":"gasleft","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-7,"src":"31351:7:1","typeDescriptions":{"typeIdentifier":"t_function_gasleft_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":2383,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31351:9:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31342:18:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31329:31:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2386,"nodeType":"ExpressionStatement","src":"31329:31:1"},{"expression":{"id":2391,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2387,"name":"actualGasCost","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2267,"src":"31374:13:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2390,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2388,"name":"actualGas","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2264,"src":"31390:9:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2389,"name":"gasPrice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2284,"src":"31402:8:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31390:20:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31374:36:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2392,"nodeType":"ExpressionStatement","src":"31374:36:1"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2396,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2393,"name":"opInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2260,"src":"31428:6:1","typeDescriptions":{"typeIdentifier":"t_struct$_UserOpInfo_$825_memory_ptr","typeString":"struct EntryPoint.UserOpInfo memory"}},"id":2394,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"31435:7:1","memberName":"prefund","nodeType":"MemberAccess","referencedDeclaration":820,"src":"31428:14:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2395,"name":"actualGasCost","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2267,"src":"31445:13:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31428:30:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2403,"nodeType":"IfStatement","src":"31424:129:1","trueBody":{"id":2402,"nodeType":"Block","src":"31460:93:1","statements":[{"errorCall":{"arguments":[{"id":2398,"name":"opIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2254,"src":"31494:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"414135312070726566756e642062656c6f772061637475616c476173436f7374","id":2399,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"31503:34:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_6d9dc9889ad1c5031a22e90fdbb1ca90f7e3143417446c3f113ca547893317fb","typeString":"literal_string \"AA51 prefund below actualGasCost\""},"value":"AA51 prefund below actualGasCost"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_6d9dc9889ad1c5031a22e90fdbb1ca90f7e3143417446c3f113ca547893317fb","typeString":"literal_string \"AA51 prefund below actualGasCost\""}],"id":2397,"name":"FailedOp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3435,"src":"31485:8:1","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$_t_string_memory_ptr_$returns$__$","typeString":"function (uint256,string memory) pure"}},"id":2400,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31485:53:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2401,"nodeType":"RevertStatement","src":"31478:60:1"}]}},{"assignments":[2405],"declarations":[{"constant":false,"id":2405,"mutability":"mutable","name":"refund","nameLocation":"31574:6:1","nodeType":"VariableDeclaration","scope":2438,"src":"31566:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2404,"name":"uint256","nodeType":"ElementaryTypeName","src":"31566:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2410,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2409,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2406,"name":"opInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2260,"src":"31583:6:1","typeDescriptions":{"typeIdentifier":"t_struct$_UserOpInfo_$825_memory_ptr","typeString":"struct EntryPoint.UserOpInfo memory"}},"id":2407,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"31590:7:1","memberName":"prefund","nodeType":"MemberAccess","referencedDeclaration":820,"src":"31583:14:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":2408,"name":"actualGasCost","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2267,"src":"31600:13:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31583:30:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"31566:47:1"},{"expression":{"arguments":[{"id":2412,"name":"refundAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2275,"src":"31645:13:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2413,"name":"refund","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2405,"src":"31660:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2411,"name":"_incrementDeposit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3016,"src":"31627:17:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":2414,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31627:40:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2415,"nodeType":"ExpressionStatement","src":"31627:40:1"},{"assignments":[2417],"declarations":[{"constant":false,"id":2417,"mutability":"mutable","name":"success","nameLocation":"31686:7:1","nodeType":"VariableDeclaration","scope":2438,"src":"31681:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2416,"name":"bool","nodeType":"ElementaryTypeName","src":"31681:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":2423,"initialValue":{"commonType":{"typeIdentifier":"t_enum$_PostOpMode_$3603","typeString":"enum IPaymaster.PostOpMode"},"id":2422,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2418,"name":"mode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2257,"src":"31696:4:1","typeDescriptions":{"typeIdentifier":"t_enum$_PostOpMode_$3603","typeString":"enum IPaymaster.PostOpMode"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"expression":{"id":2419,"name":"IPaymaster","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3630,"src":"31704:10:1","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IPaymaster_$3630_$","typeString":"type(contract IPaymaster)"}},"id":2420,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"31715:10:1","memberName":"PostOpMode","nodeType":"MemberAccess","referencedDeclaration":3603,"src":"31704:21:1","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_PostOpMode_$3603_$","typeString":"type(enum IPaymaster.PostOpMode)"}},"id":2421,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"31726:11:1","memberName":"opSucceeded","nodeType":"MemberAccess","referencedDeclaration":3600,"src":"31704:33:1","typeDescriptions":{"typeIdentifier":"t_enum$_PostOpMode_$3603","typeString":"enum IPaymaster.PostOpMode"}},"src":"31696:41:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"31681:56:1"},{"eventCall":{"arguments":[{"expression":{"id":2425,"name":"opInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2260,"src":"31792:6:1","typeDescriptions":{"typeIdentifier":"t_struct$_UserOpInfo_$825_memory_ptr","typeString":"struct EntryPoint.UserOpInfo memory"}},"id":2426,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"31799:10:1","memberName":"userOpHash","nodeType":"MemberAccess","referencedDeclaration":818,"src":"31792:17:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":2427,"name":"mUserOp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2279,"src":"31827:7:1","typeDescriptions":{"typeIdentifier":"t_struct$_MemoryUserOp_$813_memory_ptr","typeString":"struct EntryPoint.MemoryUserOp memory"}},"id":2428,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"31835:6:1","memberName":"sender","nodeType":"MemberAccess","referencedDeclaration":798,"src":"31827:14:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":2429,"name":"mUserOp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2279,"src":"31859:7:1","typeDescriptions":{"typeIdentifier":"t_struct$_MemoryUserOp_$813_memory_ptr","typeString":"struct EntryPoint.MemoryUserOp memory"}},"id":2430,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"31867:9:1","memberName":"paymaster","nodeType":"MemberAccess","referencedDeclaration":808,"src":"31859:17:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":2431,"name":"mUserOp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2279,"src":"31894:7:1","typeDescriptions":{"typeIdentifier":"t_struct$_MemoryUserOp_$813_memory_ptr","typeString":"struct EntryPoint.MemoryUserOp memory"}},"id":2432,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"31902:5:1","memberName":"nonce","nodeType":"MemberAccess","referencedDeclaration":800,"src":"31894:13:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2433,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2417,"src":"31925:7:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":2434,"name":"actualGasCost","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2267,"src":"31950:13:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2435,"name":"actualGas","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2264,"src":"31981:9:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2424,"name":"UserOperationEvent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3398,"src":"31756:18:1","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$_t_uint256_$_t_bool_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (bytes32,address,address,uint256,bool,uint256,uint256)"}},"id":2436,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31756:248:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2437,"nodeType":"EmitStatement","src":"31751:253:1"}]}]},"documentation":{"id":2252,"nodeType":"StructuredDocumentation","src":"28936:633:1","text":" process post-operation.\n called just after the callData is executed.\n if a paymaster is defined and its validation returned a non-empty context, its postOp is called.\n the excess amount is refunded to the account (or paymaster - if it was used in the request)\n @param opIndex index in the batch\n @param mode - whether is called from innerHandleOp, or outside (postOpReverted)\n @param opInfo userOp fields and info collected during validation\n @param context the context returned in validatePaymasterUserOp\n @param actualGas the gas used so far by this user operation"},"id":2440,"implemented":true,"kind":"function","modifiers":[],"name":"_handlePostOp","nameLocation":"29583:13:1","nodeType":"FunctionDefinition","parameters":{"id":2265,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2254,"mutability":"mutable","name":"opIndex","nameLocation":"29614:7:1","nodeType":"VariableDeclaration","scope":2440,"src":"29606:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2253,"name":"uint256","nodeType":"ElementaryTypeName","src":"29606:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2257,"mutability":"mutable","name":"mode","nameLocation":"29653:4:1","nodeType":"VariableDeclaration","scope":2440,"src":"29631:26:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_PostOpMode_$3603","typeString":"enum IPaymaster.PostOpMode"},"typeName":{"id":2256,"nodeType":"UserDefinedTypeName","pathNode":{"id":2255,"name":"IPaymaster.PostOpMode","nameLocations":["29631:10:1","29642:10:1"],"nodeType":"IdentifierPath","referencedDeclaration":3603,"src":"29631:21:1"},"referencedDeclaration":3603,"src":"29631:21:1","typeDescriptions":{"typeIdentifier":"t_enum$_PostOpMode_$3603","typeString":"enum IPaymaster.PostOpMode"}},"visibility":"internal"},{"constant":false,"id":2260,"mutability":"mutable","name":"opInfo","nameLocation":"29685:6:1","nodeType":"VariableDeclaration","scope":2440,"src":"29667:24:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_UserOpInfo_$825_memory_ptr","typeString":"struct EntryPoint.UserOpInfo"},"typeName":{"id":2259,"nodeType":"UserDefinedTypeName","pathNode":{"id":2258,"name":"UserOpInfo","nameLocations":["29667:10:1"],"nodeType":"IdentifierPath","referencedDeclaration":825,"src":"29667:10:1"},"referencedDeclaration":825,"src":"29667:10:1","typeDescriptions":{"typeIdentifier":"t_struct$_UserOpInfo_$825_storage_ptr","typeString":"struct EntryPoint.UserOpInfo"}},"visibility":"internal"},{"constant":false,"id":2262,"mutability":"mutable","name":"context","nameLocation":"29714:7:1","nodeType":"VariableDeclaration","scope":2440,"src":"29701:20:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2261,"name":"bytes","nodeType":"ElementaryTypeName","src":"29701:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":2264,"mutability":"mutable","name":"actualGas","nameLocation":"29739:9:1","nodeType":"VariableDeclaration","scope":2440,"src":"29731:17:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2263,"name":"uint256","nodeType":"ElementaryTypeName","src":"29731:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"29596:158:1"},"returnParameters":{"id":2268,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2267,"mutability":"mutable","name":"actualGasCost","nameLocation":"29780:13:1","nodeType":"VariableDeclaration","scope":2440,"src":"29772:21:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2266,"name":"uint256","nodeType":"ElementaryTypeName","src":"29772:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"29771:23:1"},"scope":2517,"src":"29574:2460:1","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":2475,"nodeType":"Block","src":"32304:429:1","statements":[{"id":2474,"nodeType":"UncheckedBlock","src":"32314:413:1","statements":[{"assignments":[2450],"declarations":[{"constant":false,"id":2450,"mutability":"mutable","name":"maxFeePerGas","nameLocation":"32346:12:1","nodeType":"VariableDeclaration","scope":2474,"src":"32338:20:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2449,"name":"uint256","nodeType":"ElementaryTypeName","src":"32338:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2453,"initialValue":{"expression":{"id":2451,"name":"mUserOp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2444,"src":"32361:7:1","typeDescriptions":{"typeIdentifier":"t_struct$_MemoryUserOp_$813_memory_ptr","typeString":"struct EntryPoint.MemoryUserOp memory"}},"id":2452,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"32369:12:1","memberName":"maxFeePerGas","nodeType":"MemberAccess","referencedDeclaration":810,"src":"32361:20:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"32338:43:1"},{"assignments":[2455],"declarations":[{"constant":false,"id":2455,"mutability":"mutable","name":"maxPriorityFeePerGas","nameLocation":"32403:20:1","nodeType":"VariableDeclaration","scope":2474,"src":"32395:28:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2454,"name":"uint256","nodeType":"ElementaryTypeName","src":"32395:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2458,"initialValue":{"expression":{"id":2456,"name":"mUserOp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2444,"src":"32426:7:1","typeDescriptions":{"typeIdentifier":"t_struct$_MemoryUserOp_$813_memory_ptr","typeString":"struct EntryPoint.MemoryUserOp memory"}},"id":2457,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"32434:20:1","memberName":"maxPriorityFeePerGas","nodeType":"MemberAccess","referencedDeclaration":812,"src":"32426:28:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"32395:59:1"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2461,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2459,"name":"maxFeePerGas","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2450,"src":"32472:12:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":2460,"name":"maxPriorityFeePerGas","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2455,"src":"32488:20:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"32472:36:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2465,"nodeType":"IfStatement","src":"32468:173:1","trueBody":{"id":2464,"nodeType":"Block","src":"32510:131:1","statements":[{"expression":{"id":2462,"name":"maxFeePerGas","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2450,"src":"32614:12:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2448,"id":2463,"nodeType":"Return","src":"32607:19:1"}]}},{"expression":{"arguments":[{"id":2467,"name":"maxFeePerGas","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2450,"src":"32665:12:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2471,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2468,"name":"maxPriorityFeePerGas","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2455,"src":"32679:20:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"expression":{"id":2469,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"32702:5:1","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":2470,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"32708:7:1","memberName":"basefee","nodeType":"MemberAccess","src":"32702:13:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"32679:36:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2466,"name":"min","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2493,"src":"32661:3:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":2472,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32661:55:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2448,"id":2473,"nodeType":"Return","src":"32654:62:1"}]}]},"documentation":{"id":2441,"nodeType":"StructuredDocumentation","src":"32040:157:1","text":" the gas price this UserOp agrees to pay.\n relayer/block builder might submit the TX with higher priorityFee, but the user should not"},"id":2476,"implemented":true,"kind":"function","modifiers":[],"name":"getUserOpGasPrice","nameLocation":"32211:17:1","nodeType":"FunctionDefinition","parameters":{"id":2445,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2444,"mutability":"mutable","name":"mUserOp","nameLocation":"32258:7:1","nodeType":"VariableDeclaration","scope":2476,"src":"32238:27:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_MemoryUserOp_$813_memory_ptr","typeString":"struct EntryPoint.MemoryUserOp"},"typeName":{"id":2443,"nodeType":"UserDefinedTypeName","pathNode":{"id":2442,"name":"MemoryUserOp","nameLocations":["32238:12:1"],"nodeType":"IdentifierPath","referencedDeclaration":813,"src":"32238:12:1"},"referencedDeclaration":813,"src":"32238:12:1","typeDescriptions":{"typeIdentifier":"t_struct$_MemoryUserOp_$813_storage_ptr","typeString":"struct EntryPoint.MemoryUserOp"}},"visibility":"internal"}],"src":"32228:43:1"},"returnParameters":{"id":2448,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2447,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2476,"src":"32295:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2446,"name":"uint256","nodeType":"ElementaryTypeName","src":"32295:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"32294:9:1"},"scope":2517,"src":"32202:531:1","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":2492,"nodeType":"Block","src":"32806:37:1","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2487,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2485,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2478,"src":"32823:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2486,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2480,"src":"32827:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"32823:5:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":2489,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2480,"src":"32835:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2490,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"32823:13:1","trueExpression":{"id":2488,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2478,"src":"32831:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2484,"id":2491,"nodeType":"Return","src":"32816:20:1"}]},"id":2493,"implemented":true,"kind":"function","modifiers":[],"name":"min","nameLocation":"32748:3:1","nodeType":"FunctionDefinition","parameters":{"id":2481,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2478,"mutability":"mutable","name":"a","nameLocation":"32760:1:1","nodeType":"VariableDeclaration","scope":2493,"src":"32752:9:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2477,"name":"uint256","nodeType":"ElementaryTypeName","src":"32752:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2480,"mutability":"mutable","name":"b","nameLocation":"32771:1:1","nodeType":"VariableDeclaration","scope":2493,"src":"32763:9:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2479,"name":"uint256","nodeType":"ElementaryTypeName","src":"32763:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"32751:22:1"},"returnParameters":{"id":2484,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2483,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2493,"src":"32797:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2482,"name":"uint256","nodeType":"ElementaryTypeName","src":"32797:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"32796:9:1"},"scope":2517,"src":"32739:104:1","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2501,"nodeType":"Block","src":"32953:63:1","statements":[{"AST":{"nodeType":"YulBlock","src":"32972:38:1","statements":[{"nodeType":"YulAssignment","src":"32986:14:1","value":{"name":"data","nodeType":"YulIdentifier","src":"32996:4:1"},"variableNames":[{"name":"offset","nodeType":"YulIdentifier","src":"32986:6:1"}]}]},"evmVersion":"london","externalReferences":[{"declaration":2495,"isOffset":false,"isSlot":false,"src":"32996:4:1","valueSize":1},{"declaration":2498,"isOffset":false,"isSlot":false,"src":"32986:6:1","valueSize":1}],"id":2500,"nodeType":"InlineAssembly","src":"32963:47:1"}]},"id":2502,"implemented":true,"kind":"function","modifiers":[],"name":"getOffsetOfMemoryBytes","nameLocation":"32858:22:1","nodeType":"FunctionDefinition","parameters":{"id":2496,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2495,"mutability":"mutable","name":"data","nameLocation":"32903:4:1","nodeType":"VariableDeclaration","scope":2502,"src":"32890:17:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2494,"name":"bytes","nodeType":"ElementaryTypeName","src":"32890:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"32880:33:1"},"returnParameters":{"id":2499,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2498,"mutability":"mutable","name":"offset","nameLocation":"32945:6:1","nodeType":"VariableDeclaration","scope":2502,"src":"32937:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2497,"name":"uint256","nodeType":"ElementaryTypeName","src":"32937:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"32936:16:1"},"scope":2517,"src":"32849:167:1","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2510,"nodeType":"Block","src":"33128:63:1","statements":[{"AST":{"nodeType":"YulBlock","src":"33147:38:1","statements":[{"nodeType":"YulAssignment","src":"33161:14:1","value":{"name":"offset","nodeType":"YulIdentifier","src":"33169:6:1"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"33161:4:1"}]}]},"evmVersion":"london","externalReferences":[{"declaration":2507,"isOffset":false,"isSlot":false,"src":"33161:4:1","valueSize":1},{"declaration":2504,"isOffset":false,"isSlot":false,"src":"33169:6:1","valueSize":1}],"id":2509,"nodeType":"InlineAssembly","src":"33138:47:1"}]},"id":2511,"implemented":true,"kind":"function","modifiers":[],"name":"getMemoryBytesFromOffset","nameLocation":"33031:24:1","nodeType":"FunctionDefinition","parameters":{"id":2505,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2504,"mutability":"mutable","name":"offset","nameLocation":"33073:6:1","nodeType":"VariableDeclaration","scope":2511,"src":"33065:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2503,"name":"uint256","nodeType":"ElementaryTypeName","src":"33065:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"33055:30:1"},"returnParameters":{"id":2508,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2507,"mutability":"mutable","name":"data","nameLocation":"33122:4:1","nodeType":"VariableDeclaration","scope":2511,"src":"33109:17:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2506,"name":"bytes","nodeType":"ElementaryTypeName","src":"33109:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"33108:19:1"},"scope":2517,"src":"33022:169:1","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2515,"nodeType":"Block","src":"33422:68:1","statements":[{"AST":{"nodeType":"YulBlock","src":"33441:43:1","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"33462:1:1","type":"","value":"0"},{"arguments":[],"functionName":{"name":"number","nodeType":"YulIdentifier","src":"33465:6:1"},"nodeType":"YulFunctionCall","src":"33465:8:1"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"33455:6:1"},"nodeType":"YulFunctionCall","src":"33455:19:1"},"nodeType":"YulExpressionStatement","src":"33455:19:1"}]},"evmVersion":"london","externalReferences":[],"id":2514,"nodeType":"InlineAssembly","src":"33432:52:1"}]},"id":2516,"implemented":true,"kind":"function","modifiers":[],"name":"numberMarker","nameLocation":"33393:12:1","nodeType":"FunctionDefinition","parameters":{"id":2512,"nodeType":"ParameterList","parameters":[],"src":"33405:2:1"},"returnParameters":{"id":2513,"nodeType":"ParameterList","parameters":[],"src":"33422:0:1"},"scope":2517,"src":"33384:106:1","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":2518,"src":"595:32897:1","usedErrors":[3435,3440,3455,3473,3478,3493]}],"src":"163:33330:1"}},"contracts/smart-contract-wallet/aa-4337/core/Helpers.sol":{"id":2,"ast":{"absolutePath":"contracts/smart-contract-wallet/aa-4337/core/Helpers.sol","exportedSymbols":{"ValidationData":[2526],"_intersectTimeRange":[2670],"_packValidationData":[2707,2745],"_parseValidationData":[2585],"calldataKeccak":[2755]},"id":2756,"license":"GPL-3.0","nodeType":"SourceUnit","nodes":[{"id":2519,"literals":["solidity","0.8",".17"],"nodeType":"PragmaDirective","src":"36:23:2"},{"canonicalName":"ValidationData","id":2526,"members":[{"constant":false,"id":2521,"mutability":"mutable","name":"aggregator","nameLocation":"721:10:2","nodeType":"VariableDeclaration","scope":2526,"src":"713:18:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2520,"name":"address","nodeType":"ElementaryTypeName","src":"713:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2523,"mutability":"mutable","name":"validAfter","nameLocation":"744:10:2","nodeType":"VariableDeclaration","scope":2526,"src":"737:17:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":2522,"name":"uint48","nodeType":"ElementaryTypeName","src":"737:6:2","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"},{"constant":false,"id":2525,"mutability":"mutable","name":"validUntil","nameLocation":"767:10:2","nodeType":"VariableDeclaration","scope":2526,"src":"760:17:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":2524,"name":"uint48","nodeType":"ElementaryTypeName","src":"760:6:2","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"name":"ValidationData","nameLocation":"692:14:2","nodeType":"StructDefinition","scope":2756,"src":"685:95:2","visibility":"public"},{"body":{"id":2584,"nodeType":"Block","src":"978:314:2","statements":[{"assignments":[2535],"declarations":[{"constant":false,"id":2535,"mutability":"mutable","name":"aggregator","nameLocation":"992:10:2","nodeType":"VariableDeclaration","scope":2584,"src":"984:18:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2534,"name":"address","nodeType":"ElementaryTypeName","src":"984:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":2543,"initialValue":{"arguments":[{"arguments":[{"id":2540,"name":"validationData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2528,"src":"1021:14:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2539,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1013:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":2538,"name":"uint160","nodeType":"ElementaryTypeName","src":"1013:7:2","typeDescriptions":{}}},"id":2541,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1013:23:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":2537,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1005:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2536,"name":"address","nodeType":"ElementaryTypeName","src":"1005:7:2","typeDescriptions":{}}},"id":2542,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1005:32:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"984:53:2"},{"assignments":[2545],"declarations":[{"constant":false,"id":2545,"mutability":"mutable","name":"validUntil","nameLocation":"1050:10:2","nodeType":"VariableDeclaration","scope":2584,"src":"1043:17:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":2544,"name":"uint48","nodeType":"ElementaryTypeName","src":"1043:6:2","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"id":2552,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2550,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2548,"name":"validationData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2528,"src":"1070:14:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"313630","id":2549,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1088:3:2","typeDescriptions":{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},"value":"160"},"src":"1070:21:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2547,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1063:6:2","typeDescriptions":{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"},"typeName":{"id":2546,"name":"uint48","nodeType":"ElementaryTypeName","src":"1063:6:2","typeDescriptions":{}}},"id":2551,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1063:29:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"nodeType":"VariableDeclarationStatement","src":"1043:49:2"},{"condition":{"commonType":{"typeIdentifier":"t_uint48","typeString":"uint48"},"id":2555,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2553,"name":"validUntil","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2545,"src":"1102:10:2","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2554,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1116:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1102:15:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2565,"nodeType":"IfStatement","src":"1098:67:2","trueBody":{"id":2564,"nodeType":"Block","src":"1119:46:2","statements":[{"expression":{"id":2562,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2556,"name":"validUntil","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2545,"src":"1129:10:2","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"arguments":[{"id":2559,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1147:6:2","typeDescriptions":{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"},"typeName":{"id":2558,"name":"uint48","nodeType":"ElementaryTypeName","src":"1147:6:2","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"}],"id":2557,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"1142:4:2","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2560,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1142:12:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint48","typeString":"type(uint48)"}},"id":2561,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1155:3:2","memberName":"max","nodeType":"MemberAccess","src":"1142:16:2","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"src":"1129:29:2","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"id":2563,"nodeType":"ExpressionStatement","src":"1129:29:2"}]}},{"assignments":[2567],"declarations":[{"constant":false,"id":2567,"mutability":"mutable","name":"validAfter","nameLocation":"1177:10:2","nodeType":"VariableDeclaration","scope":2584,"src":"1170:17:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":2566,"name":"uint48","nodeType":"ElementaryTypeName","src":"1170:6:2","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"id":2577,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2575,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2570,"name":"validationData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2528,"src":"1197:14:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},"id":2573,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3438","id":2571,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1216:2:2","typeDescriptions":{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},"value":"48"},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"313630","id":2572,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1221:3:2","typeDescriptions":{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},"value":"160"},"src":"1216:8:2","typeDescriptions":{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"}}],"id":2574,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"1215:10:2","typeDescriptions":{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"}},"src":"1197:28:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2569,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1190:6:2","typeDescriptions":{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"},"typeName":{"id":2568,"name":"uint48","nodeType":"ElementaryTypeName","src":"1190:6:2","typeDescriptions":{}}},"id":2576,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1190:36:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"nodeType":"VariableDeclarationStatement","src":"1170:56:2"},{"expression":{"arguments":[{"id":2579,"name":"aggregator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2535,"src":"1254:10:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2580,"name":"validAfter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2567,"src":"1266:10:2","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},{"id":2581,"name":"validUntil","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2545,"src":"1278:10:2","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint48","typeString":"uint48"},{"typeIdentifier":"t_uint48","typeString":"uint48"}],"id":2578,"name":"ValidationData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2526,"src":"1239:14:2","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_ValidationData_$2526_storage_ptr_$","typeString":"type(struct ValidationData storage pointer)"}},"id":2582,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1239:50:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_ValidationData_$2526_memory_ptr","typeString":"struct ValidationData memory"}},"functionReturnParameters":2533,"id":2583,"nodeType":"Return","src":"1232:57:2"}]},"id":2585,"implemented":true,"kind":"freeFunction","modifiers":[],"name":"_parseValidationData","nameLocation":"888:20:2","nodeType":"FunctionDefinition","parameters":{"id":2529,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2528,"mutability":"mutable","name":"validationData","nameLocation":"919:14:2","nodeType":"VariableDeclaration","scope":2585,"src":"914:19:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2527,"name":"uint","nodeType":"ElementaryTypeName","src":"914:4:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"908:27:2"},"returnParameters":{"id":2533,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2532,"mutability":"mutable","name":"data","nameLocation":"972:4:2","nodeType":"VariableDeclaration","scope":2585,"src":"950:26:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_ValidationData_$2526_memory_ptr","typeString":"struct ValidationData"},"typeName":{"id":2531,"nodeType":"UserDefinedTypeName","pathNode":{"id":2530,"name":"ValidationData","nameLocations":["950:14:2"],"nodeType":"IdentifierPath","referencedDeclaration":2526,"src":"950:14:2"},"referencedDeclaration":2526,"src":"950:14:2","typeDescriptions":{"typeIdentifier":"t_struct$_ValidationData_$2526_storage_ptr","typeString":"struct ValidationData"}},"visibility":"internal"}],"src":"949:28:2"},"scope":2756,"src":"879:413:2","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2669,"nodeType":"Block","src":"1470:776:2","statements":[{"assignments":[2597],"declarations":[{"constant":false,"id":2597,"mutability":"mutable","name":"accountValidationData","nameLocation":"1498:21:2","nodeType":"VariableDeclaration","scope":2669,"src":"1476:43:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_ValidationData_$2526_memory_ptr","typeString":"struct ValidationData"},"typeName":{"id":2596,"nodeType":"UserDefinedTypeName","pathNode":{"id":2595,"name":"ValidationData","nameLocations":["1476:14:2"],"nodeType":"IdentifierPath","referencedDeclaration":2526,"src":"1476:14:2"},"referencedDeclaration":2526,"src":"1476:14:2","typeDescriptions":{"typeIdentifier":"t_struct$_ValidationData_$2526_storage_ptr","typeString":"struct ValidationData"}},"visibility":"internal"}],"id":2601,"initialValue":{"arguments":[{"id":2599,"name":"validationData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2587,"src":"1552:14:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2598,"name":"_parseValidationData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2585,"src":"1522:20:2","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_struct$_ValidationData_$2526_memory_ptr_$","typeString":"function (uint256) pure returns (struct ValidationData memory)"}},"id":2600,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1522:50:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_ValidationData_$2526_memory_ptr","typeString":"struct ValidationData memory"}},"nodeType":"VariableDeclarationStatement","src":"1476:96:2"},{"assignments":[2604],"declarations":[{"constant":false,"id":2604,"mutability":"mutable","name":"pmValidationData","nameLocation":"1600:16:2","nodeType":"VariableDeclaration","scope":2669,"src":"1578:38:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_ValidationData_$2526_memory_ptr","typeString":"struct ValidationData"},"typeName":{"id":2603,"nodeType":"UserDefinedTypeName","pathNode":{"id":2602,"name":"ValidationData","nameLocations":["1578:14:2"],"nodeType":"IdentifierPath","referencedDeclaration":2526,"src":"1578:14:2"},"referencedDeclaration":2526,"src":"1578:14:2","typeDescriptions":{"typeIdentifier":"t_struct$_ValidationData_$2526_storage_ptr","typeString":"struct ValidationData"}},"visibility":"internal"}],"id":2608,"initialValue":{"arguments":[{"id":2606,"name":"paymasterValidationData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2589,"src":"1649:23:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2605,"name":"_parseValidationData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2585,"src":"1619:20:2","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_struct$_ValidationData_$2526_memory_ptr_$","typeString":"function (uint256) pure returns (struct ValidationData memory)"}},"id":2607,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1619:59:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_ValidationData_$2526_memory_ptr","typeString":"struct ValidationData memory"}},"nodeType":"VariableDeclarationStatement","src":"1578:100:2"},{"assignments":[2610],"declarations":[{"constant":false,"id":2610,"mutability":"mutable","name":"aggregator","nameLocation":"1692:10:2","nodeType":"VariableDeclaration","scope":2669,"src":"1684:18:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2609,"name":"address","nodeType":"ElementaryTypeName","src":"1684:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":2613,"initialValue":{"expression":{"id":2611,"name":"accountValidationData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2597,"src":"1705:21:2","typeDescriptions":{"typeIdentifier":"t_struct$_ValidationData_$2526_memory_ptr","typeString":"struct ValidationData memory"}},"id":2612,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1727:10:2","memberName":"aggregator","nodeType":"MemberAccess","referencedDeclaration":2521,"src":"1705:32:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"1684:53:2"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2619,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2614,"name":"aggregator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2610,"src":"1747:10:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":2617,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1769:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2616,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1761:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2615,"name":"address","nodeType":"ElementaryTypeName","src":"1761:7:2","typeDescriptions":{}}},"id":2618,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1761:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1747:24:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2626,"nodeType":"IfStatement","src":"1743:87:2","trueBody":{"id":2625,"nodeType":"Block","src":"1773:57:2","statements":[{"expression":{"id":2623,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2620,"name":"aggregator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2610,"src":"1783:10:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":2621,"name":"pmValidationData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2604,"src":"1796:16:2","typeDescriptions":{"typeIdentifier":"t_struct$_ValidationData_$2526_memory_ptr","typeString":"struct ValidationData memory"}},"id":2622,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1813:10:2","memberName":"aggregator","nodeType":"MemberAccess","referencedDeclaration":2521,"src":"1796:27:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1783:40:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2624,"nodeType":"ExpressionStatement","src":"1783:40:2"}]}},{"assignments":[2628],"declarations":[{"constant":false,"id":2628,"mutability":"mutable","name":"validAfter","nameLocation":"1842:10:2","nodeType":"VariableDeclaration","scope":2669,"src":"1835:17:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":2627,"name":"uint48","nodeType":"ElementaryTypeName","src":"1835:6:2","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"id":2631,"initialValue":{"expression":{"id":2629,"name":"accountValidationData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2597,"src":"1855:21:2","typeDescriptions":{"typeIdentifier":"t_struct$_ValidationData_$2526_memory_ptr","typeString":"struct ValidationData memory"}},"id":2630,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1877:10:2","memberName":"validAfter","nodeType":"MemberAccess","referencedDeclaration":2523,"src":"1855:32:2","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"nodeType":"VariableDeclarationStatement","src":"1835:52:2"},{"assignments":[2633],"declarations":[{"constant":false,"id":2633,"mutability":"mutable","name":"validUntil","nameLocation":"1900:10:2","nodeType":"VariableDeclaration","scope":2669,"src":"1893:17:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":2632,"name":"uint48","nodeType":"ElementaryTypeName","src":"1893:6:2","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"id":2636,"initialValue":{"expression":{"id":2634,"name":"accountValidationData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2597,"src":"1913:21:2","typeDescriptions":{"typeIdentifier":"t_struct$_ValidationData_$2526_memory_ptr","typeString":"struct ValidationData memory"}},"id":2635,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1935:10:2","memberName":"validUntil","nodeType":"MemberAccess","referencedDeclaration":2525,"src":"1913:32:2","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"nodeType":"VariableDeclarationStatement","src":"1893:52:2"},{"assignments":[2638],"declarations":[{"constant":false,"id":2638,"mutability":"mutable","name":"pmValidAfter","nameLocation":"1958:12:2","nodeType":"VariableDeclaration","scope":2669,"src":"1951:19:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":2637,"name":"uint48","nodeType":"ElementaryTypeName","src":"1951:6:2","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"id":2641,"initialValue":{"expression":{"id":2639,"name":"pmValidationData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2604,"src":"1973:16:2","typeDescriptions":{"typeIdentifier":"t_struct$_ValidationData_$2526_memory_ptr","typeString":"struct ValidationData memory"}},"id":2640,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1990:10:2","memberName":"validAfter","nodeType":"MemberAccess","referencedDeclaration":2523,"src":"1973:27:2","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"nodeType":"VariableDeclarationStatement","src":"1951:49:2"},{"assignments":[2643],"declarations":[{"constant":false,"id":2643,"mutability":"mutable","name":"pmValidUntil","nameLocation":"2013:12:2","nodeType":"VariableDeclaration","scope":2669,"src":"2006:19:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":2642,"name":"uint48","nodeType":"ElementaryTypeName","src":"2006:6:2","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"id":2646,"initialValue":{"expression":{"id":2644,"name":"pmValidationData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2604,"src":"2028:16:2","typeDescriptions":{"typeIdentifier":"t_struct$_ValidationData_$2526_memory_ptr","typeString":"struct ValidationData memory"}},"id":2645,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2045:10:2","memberName":"validUntil","nodeType":"MemberAccess","referencedDeclaration":2525,"src":"2028:27:2","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"nodeType":"VariableDeclarationStatement","src":"2006:49:2"},{"condition":{"commonType":{"typeIdentifier":"t_uint48","typeString":"uint48"},"id":2649,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2647,"name":"validAfter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2628,"src":"2066:10:2","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2648,"name":"pmValidAfter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2638,"src":"2079:12:2","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"src":"2066:25:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2654,"nodeType":"IfStatement","src":"2062:56:2","trueBody":{"expression":{"id":2652,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2650,"name":"validAfter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2628,"src":"2093:10:2","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2651,"name":"pmValidAfter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2638,"src":"2106:12:2","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"src":"2093:25:2","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"id":2653,"nodeType":"ExpressionStatement","src":"2093:25:2"}},{"condition":{"commonType":{"typeIdentifier":"t_uint48","typeString":"uint48"},"id":2657,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2655,"name":"validUntil","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2633,"src":"2128:10:2","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":2656,"name":"pmValidUntil","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2643,"src":"2141:12:2","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"src":"2128:25:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2662,"nodeType":"IfStatement","src":"2124:56:2","trueBody":{"expression":{"id":2660,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2658,"name":"validUntil","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2633,"src":"2155:10:2","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2659,"name":"pmValidUntil","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2643,"src":"2168:12:2","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"src":"2155:25:2","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"id":2661,"nodeType":"ExpressionStatement","src":"2155:25:2"}},{"expression":{"arguments":[{"id":2664,"name":"aggregator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2610,"src":"2208:10:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2665,"name":"validAfter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2628,"src":"2220:10:2","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},{"id":2666,"name":"validUntil","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2633,"src":"2232:10:2","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint48","typeString":"uint48"},{"typeIdentifier":"t_uint48","typeString":"uint48"}],"id":2663,"name":"ValidationData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2526,"src":"2193:14:2","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_ValidationData_$2526_storage_ptr_$","typeString":"type(struct ValidationData storage pointer)"}},"id":2667,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2193:50:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_ValidationData_$2526_memory_ptr","typeString":"struct ValidationData memory"}},"functionReturnParameters":2594,"id":2668,"nodeType":"Return","src":"2186:57:2"}]},"id":2670,"implemented":true,"kind":"freeFunction","modifiers":[],"name":"_intersectTimeRange","nameLocation":"1346:19:2","nodeType":"FunctionDefinition","parameters":{"id":2590,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2587,"mutability":"mutable","name":"validationData","nameLocation":"1379:14:2","nodeType":"VariableDeclaration","scope":2670,"src":"1371:22:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2586,"name":"uint256","nodeType":"ElementaryTypeName","src":"1371:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2589,"mutability":"mutable","name":"paymasterValidationData","nameLocation":"1407:23:2","nodeType":"VariableDeclaration","scope":2670,"src":"1399:31:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2588,"name":"uint256","nodeType":"ElementaryTypeName","src":"1399:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1365:67:2"},"returnParameters":{"id":2594,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2593,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2670,"src":"1447:21:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_ValidationData_$2526_memory_ptr","typeString":"struct ValidationData"},"typeName":{"id":2592,"nodeType":"UserDefinedTypeName","pathNode":{"id":2591,"name":"ValidationData","nameLocations":["1447:14:2"],"nodeType":"IdentifierPath","referencedDeclaration":2526,"src":"1447:14:2"},"referencedDeclaration":2526,"src":"1447:14:2","typeDescriptions":{"typeIdentifier":"t_struct$_ValidationData_$2526_storage_ptr","typeString":"struct ValidationData"}},"visibility":"internal"}],"src":"1446:23:2"},"scope":2756,"src":"1337:909:2","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2706,"nodeType":"Block","src":"2440:143:2","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2704,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2692,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"expression":{"id":2681,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2674,"src":"2469:4:2","typeDescriptions":{"typeIdentifier":"t_struct$_ValidationData_$2526_memory_ptr","typeString":"struct ValidationData memory"}},"id":2682,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2474:10:2","memberName":"aggregator","nodeType":"MemberAccess","referencedDeclaration":2521,"src":"2469:15:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2680,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2461:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":2679,"name":"uint160","nodeType":"ElementaryTypeName","src":"2461:7:2","typeDescriptions":{}}},"id":2683,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2461:24:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2690,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"expression":{"id":2686,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2674,"src":"2505:4:2","typeDescriptions":{"typeIdentifier":"t_struct$_ValidationData_$2526_memory_ptr","typeString":"struct ValidationData memory"}},"id":2687,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2510:10:2","memberName":"validUntil","nodeType":"MemberAccess","referencedDeclaration":2525,"src":"2505:15:2","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint48","typeString":"uint48"}],"id":2685,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2497:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2684,"name":"uint256","nodeType":"ElementaryTypeName","src":"2497:7:2","typeDescriptions":{}}},"id":2688,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2497:24:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"313630","id":2689,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2525:3:2","typeDescriptions":{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},"value":"160"},"src":"2497:31:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2691,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2496:33:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2461:68:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2702,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"expression":{"id":2695,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2674,"src":"2549:4:2","typeDescriptions":{"typeIdentifier":"t_struct$_ValidationData_$2526_memory_ptr","typeString":"struct ValidationData memory"}},"id":2696,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2554:10:2","memberName":"validAfter","nodeType":"MemberAccess","referencedDeclaration":2523,"src":"2549:15:2","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint48","typeString":"uint48"}],"id":2694,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2541:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2693,"name":"uint256","nodeType":"ElementaryTypeName","src":"2541:7:2","typeDescriptions":{}}},"id":2697,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2541:24:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},"id":2700,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"313630","id":2698,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2570:3:2","typeDescriptions":{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},"value":"160"},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"3438","id":2699,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2576:2:2","typeDescriptions":{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},"value":"48"},"src":"2570:8:2","typeDescriptions":{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"}}],"id":2701,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"2569:10:2","typeDescriptions":{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"}},"src":"2541:38:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2703,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2540:40:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2461:119:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2678,"id":2705,"nodeType":"Return","src":"2446:134:2"}]},"documentation":{"id":2671,"nodeType":"StructuredDocumentation","src":"2248:105:2","text":" helper to pack the return value for validateUserOp\n @param data - the ValidationData to pack"},"id":2707,"implemented":true,"kind":"freeFunction","modifiers":[],"name":"_packValidationData","nameLocation":"2363:19:2","nodeType":"FunctionDefinition","parameters":{"id":2675,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2674,"mutability":"mutable","name":"data","nameLocation":"2410:4:2","nodeType":"VariableDeclaration","scope":2707,"src":"2388:26:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_ValidationData_$2526_memory_ptr","typeString":"struct ValidationData"},"typeName":{"id":2673,"nodeType":"UserDefinedTypeName","pathNode":{"id":2672,"name":"ValidationData","nameLocations":["2388:14:2"],"nodeType":"IdentifierPath","referencedDeclaration":2526,"src":"2388:14:2"},"referencedDeclaration":2526,"src":"2388:14:2","typeDescriptions":{"typeIdentifier":"t_struct$_ValidationData_$2526_storage_ptr","typeString":"struct ValidationData"}},"visibility":"internal"}],"src":"2382:34:2"},"returnParameters":{"id":2678,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2677,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2707,"src":"2431:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2676,"name":"uint256","nodeType":"ElementaryTypeName","src":"2431:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2430:9:2"},"scope":2756,"src":"2354:229:2","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2744,"nodeType":"Block","src":"3017:128:2","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2742,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2731,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"condition":{"id":2719,"name":"sigFailed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2710,"src":"3039:9:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":2721,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3055:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":2722,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"3039:17:2","trueExpression":{"hexValue":"31","id":2720,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3051:1:2","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":2723,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3038:19:2","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2729,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2726,"name":"validUntil","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2712,"src":"3077:10:2","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint48","typeString":"uint48"}],"id":2725,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3069:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2724,"name":"uint256","nodeType":"ElementaryTypeName","src":"3069:7:2","typeDescriptions":{}}},"id":2727,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3069:19:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"313630","id":2728,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3092:3:2","typeDescriptions":{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},"value":"160"},"src":"3069:26:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2730,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3068:28:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3038:58:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2740,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2734,"name":"validAfter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2714,"src":"3116:10:2","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint48","typeString":"uint48"}],"id":2733,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3108:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2732,"name":"uint256","nodeType":"ElementaryTypeName","src":"3108:7:2","typeDescriptions":{}}},"id":2735,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3108:19:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},"id":2738,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"313630","id":2736,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3132:3:2","typeDescriptions":{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},"value":"160"},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"3438","id":2737,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3138:2:2","typeDescriptions":{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},"value":"48"},"src":"3132:8:2","typeDescriptions":{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"}}],"id":2739,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"3131:10:2","typeDescriptions":{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"}},"src":"3108:33:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2741,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3107:35:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3038:104:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2718,"id":2743,"nodeType":"Return","src":"3023:119:2"}]},"documentation":{"id":2708,"nodeType":"StructuredDocumentation","src":"2585:311:2","text":" helper to pack the return value for validateUserOp, when not using an aggregator\n @param sigFailed - true for signature failure, false for success\n @param validUntil last timestamp this UserOperation is valid (or zero for infinite)\n @param validAfter first timestamp this UserOperation is valid"},"id":2745,"implemented":true,"kind":"freeFunction","modifiers":[],"name":"_packValidationData","nameLocation":"2906:19:2","nodeType":"FunctionDefinition","parameters":{"id":2715,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2710,"mutability":"mutable","name":"sigFailed","nameLocation":"2936:9:2","nodeType":"VariableDeclaration","scope":2745,"src":"2931:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2709,"name":"bool","nodeType":"ElementaryTypeName","src":"2931:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2712,"mutability":"mutable","name":"validUntil","nameLocation":"2958:10:2","nodeType":"VariableDeclaration","scope":2745,"src":"2951:17:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":2711,"name":"uint48","nodeType":"ElementaryTypeName","src":"2951:6:2","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"},{"constant":false,"id":2714,"mutability":"mutable","name":"validAfter","nameLocation":"2981:10:2","nodeType":"VariableDeclaration","scope":2745,"src":"2974:17:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":2713,"name":"uint48","nodeType":"ElementaryTypeName","src":"2974:6:2","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"src":"2925:68:2"},"returnParameters":{"id":2718,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2717,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2745,"src":"3008:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2716,"name":"uint256","nodeType":"ElementaryTypeName","src":"3008:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3007:9:2"},"scope":2756,"src":"2897:248:2","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2754,"nodeType":"Block","src":"3396:165:2","statements":[{"AST":{"nodeType":"YulBlock","src":"3411:148:2","statements":[{"nodeType":"YulVariableDeclaration","src":"3421:22:2","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3438:4:2","type":"","value":"0x40"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3432:5:2"},"nodeType":"YulFunctionCall","src":"3432:11:2"},"variables":[{"name":"mem","nodeType":"YulTypedName","src":"3425:3:2","type":""}]},{"nodeType":"YulVariableDeclaration","src":"3452:22:2","value":{"name":"data.length","nodeType":"YulIdentifier","src":"3463:11:2"},"variables":[{"name":"len","nodeType":"YulTypedName","src":"3456:3:2","type":""}]},{"expression":{"arguments":[{"name":"mem","nodeType":"YulIdentifier","src":"3496:3:2"},{"name":"data.offset","nodeType":"YulIdentifier","src":"3501:11:2"},{"name":"len","nodeType":"YulIdentifier","src":"3514:3:2"}],"functionName":{"name":"calldatacopy","nodeType":"YulIdentifier","src":"3483:12:2"},"nodeType":"YulFunctionCall","src":"3483:35:2"},"nodeType":"YulExpressionStatement","src":"3483:35:2"},{"nodeType":"YulAssignment","src":"3527:26:2","value":{"arguments":[{"name":"mem","nodeType":"YulIdentifier","src":"3544:3:2"},{"name":"len","nodeType":"YulIdentifier","src":"3549:3:2"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"3534:9:2"},"nodeType":"YulFunctionCall","src":"3534:19:2"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"3527:3:2"}]}]},"evmVersion":"london","externalReferences":[{"declaration":2748,"isOffset":false,"isSlot":false,"src":"3463:11:2","suffix":"length","valueSize":1},{"declaration":2748,"isOffset":true,"isSlot":false,"src":"3501:11:2","suffix":"offset","valueSize":1},{"declaration":2751,"isOffset":false,"isSlot":false,"src":"3527:3:2","valueSize":1}],"id":2753,"nodeType":"InlineAssembly","src":"3402:157:2"}]},"documentation":{"id":2746,"nodeType":"StructuredDocumentation","src":"3147:176:2","text":" keccak function over calldata.\n @dev copy calldata into memory, do keccak and drop allocated memory. Strangely, this is more efficient than letting solidity do it."},"id":2755,"implemented":true,"kind":"freeFunction","modifiers":[],"name":"calldataKeccak","nameLocation":"3333:14:2","nodeType":"FunctionDefinition","parameters":{"id":2749,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2748,"mutability":"mutable","name":"data","nameLocation":"3363:4:2","nodeType":"VariableDeclaration","scope":2755,"src":"3348:19:2","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":2747,"name":"bytes","nodeType":"ElementaryTypeName","src":"3348:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3347:21:2"},"returnParameters":{"id":2752,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2751,"mutability":"mutable","name":"ret","nameLocation":"3391:3:2","nodeType":"VariableDeclaration","scope":2755,"src":"3383:11:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2750,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3383:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3382:13:2"},"scope":2756,"src":"3324:237:2","stateMutability":"pure","virtual":false,"visibility":"internal"}],"src":"36:3526:2"}},"contracts/smart-contract-wallet/aa-4337/core/NonceManager.sol":{"id":3,"ast":{"absolutePath":"contracts/smart-contract-wallet/aa-4337/core/NonceManager.sol","exportedSymbols":{"IEntryPoint":[3576],"INonceManager":[3595],"NonceManager":[2848]},"id":2849,"license":"GPL-3.0","nodeType":"SourceUnit","nodes":[{"id":2757,"literals":["solidity","0.8",".17"],"nodeType":"PragmaDirective","src":"36:23:3"},{"absolutePath":"contracts/smart-contract-wallet/aa-4337/interfaces/IEntryPoint.sol","file":"../interfaces/IEntryPoint.sol","id":2759,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2849,"sourceUnit":3577,"src":"61:58:3","symbolAliases":[{"foreign":{"id":2758,"name":"IEntryPoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3576,"src":"69:11:3","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"contracts/smart-contract-wallet/aa-4337/interfaces/INonceManager.sol","file":"../interfaces/INonceManager.sol","id":2761,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2849,"sourceUnit":3596,"src":"120:62:3","symbolAliases":[{"foreign":{"id":2760,"name":"INonceManager","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3595,"src":"128:13:3","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":2763,"name":"INonceManager","nameLocations":["251:13:3"],"nodeType":"IdentifierPath","referencedDeclaration":3595,"src":"251:13:3"},"id":2764,"nodeType":"InheritanceSpecifier","src":"251:13:3"}],"canonicalName":"NonceManager","contractDependencies":[],"contractKind":"contract","documentation":{"id":2762,"nodeType":"StructuredDocumentation","src":"184:41:3","text":" nonce management functionality"},"fullyImplemented":true,"id":2848,"linearizedBaseContracts":[2848,3595],"name":"NonceManager","nameLocation":"235:12:3","nodeType":"ContractDefinition","nodes":[{"constant":false,"documentation":{"id":2765,"nodeType":"StructuredDocumentation","src":"271:72:3","text":" The next valid sequence number for a given nonce key."},"functionSelector":"1b2e01b8","id":2771,"mutability":"mutable","name":"nonceSequenceNumber","nameLocation":"403:19:3","nodeType":"VariableDeclaration","scope":2848,"src":"348:74:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint192_$_t_uint256_$_$","typeString":"mapping(address => mapping(uint192 => uint256))"},"typeName":{"id":2770,"keyType":{"id":2766,"name":"address","nodeType":"ElementaryTypeName","src":"356:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"348:47:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint192_$_t_uint256_$_$","typeString":"mapping(address => mapping(uint192 => uint256))"},"valueType":{"id":2769,"keyType":{"id":2767,"name":"uint192","nodeType":"ElementaryTypeName","src":"375:7:3","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"nodeType":"Mapping","src":"367:27:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint192_$_t_uint256_$","typeString":"mapping(uint192 => uint256)"},"valueType":{"id":2768,"name":"uint256","nodeType":"ElementaryTypeName","src":"386:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}}},"visibility":"public"},{"baseFunctions":[3588],"body":{"id":2795,"nodeType":"Block","src":"543:79:3","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2793,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"baseExpression":{"id":2781,"name":"nonceSequenceNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2771,"src":"560:19:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint192_$_t_uint256_$_$","typeString":"mapping(address => mapping(uint192 => uint256))"}},"id":2783,"indexExpression":{"id":2782,"name":"sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2773,"src":"580:6:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"560:27:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint192_$_t_uint256_$","typeString":"mapping(uint192 => uint256)"}},"id":2785,"indexExpression":{"id":2784,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2775,"src":"588:3:3","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"560:32:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2791,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2788,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2775,"src":"604:3:3","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint192","typeString":"uint192"}],"id":2787,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"596:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2786,"name":"uint256","nodeType":"ElementaryTypeName","src":"596:7:3","typeDescriptions":{}}},"id":2789,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"596:12:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3634","id":2790,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"612:2:3","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"596:18:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2792,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"595:20:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"560:55:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2780,"id":2794,"nodeType":"Return","src":"553:62:3"}]},"functionSelector":"35567e1a","id":2796,"implemented":true,"kind":"function","modifiers":[],"name":"getNonce","nameLocation":"438:8:3","nodeType":"FunctionDefinition","overrides":{"id":2777,"nodeType":"OverrideSpecifier","overrides":[],"src":"510:8:3"},"parameters":{"id":2776,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2773,"mutability":"mutable","name":"sender","nameLocation":"464:6:3","nodeType":"VariableDeclaration","scope":2796,"src":"456:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2772,"name":"address","nodeType":"ElementaryTypeName","src":"456:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2775,"mutability":"mutable","name":"key","nameLocation":"488:3:3","nodeType":"VariableDeclaration","scope":2796,"src":"480:11:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"},"typeName":{"id":2774,"name":"uint192","nodeType":"ElementaryTypeName","src":"480:7:3","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"visibility":"internal"}],"src":"446:51:3"},"returnParameters":{"id":2780,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2779,"mutability":"mutable","name":"nonce","nameLocation":"536:5:3","nodeType":"VariableDeclaration","scope":2796,"src":"528:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2778,"name":"uint256","nodeType":"ElementaryTypeName","src":"528:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"527:15:3"},"scope":2848,"src":"429:193:3","stateMutability":"view","virtual":false,"visibility":"public"},{"baseFunctions":[3594],"body":{"id":2810,"nodeType":"Block","src":"936:55:3","statements":[{"expression":{"id":2808,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"946:38:3","subExpression":{"baseExpression":{"baseExpression":{"id":2802,"name":"nonceSequenceNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2771,"src":"946:19:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint192_$_t_uint256_$_$","typeString":"mapping(address => mapping(uint192 => uint256))"}},"id":2806,"indexExpression":{"expression":{"id":2803,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"966:3:3","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2804,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"970:6:3","memberName":"sender","nodeType":"MemberAccess","src":"966:10:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"946:31:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint192_$_t_uint256_$","typeString":"mapping(uint192 => uint256)"}},"id":2807,"indexExpression":{"id":2805,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2798,"src":"978:3:3","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"946:36:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2809,"nodeType":"ExpressionStatement","src":"946:38:3"}]},"functionSelector":"0bd28e3b","id":2811,"implemented":true,"kind":"function","modifiers":[],"name":"incrementNonce","nameLocation":"892:14:3","nodeType":"FunctionDefinition","overrides":{"id":2800,"nodeType":"OverrideSpecifier","overrides":[],"src":"927:8:3"},"parameters":{"id":2799,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2798,"mutability":"mutable","name":"key","nameLocation":"915:3:3","nodeType":"VariableDeclaration","scope":2811,"src":"907:11:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"},"typeName":{"id":2797,"name":"uint192","nodeType":"ElementaryTypeName","src":"907:7:3","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"visibility":"internal"}],"src":"906:13:3"},"returnParameters":{"id":2801,"nodeType":"ParameterList","parameters":[],"src":"936:0:3"},"scope":2848,"src":"883:108:3","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":2846,"nodeType":"Block","src":"1216:145:3","statements":[{"assignments":[2822],"declarations":[{"constant":false,"id":2822,"mutability":"mutable","name":"key","nameLocation":"1234:3:3","nodeType":"VariableDeclaration","scope":2846,"src":"1226:11:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"},"typeName":{"id":2821,"name":"uint192","nodeType":"ElementaryTypeName","src":"1226:7:3","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"visibility":"internal"}],"id":2829,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2827,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2825,"name":"nonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2816,"src":"1248:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3634","id":2826,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1257:2:3","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"1248:11:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2824,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1240:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_uint192_$","typeString":"type(uint192)"},"typeName":{"id":2823,"name":"uint192","nodeType":"ElementaryTypeName","src":"1240:7:3","typeDescriptions":{}}},"id":2828,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1240:20:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"nodeType":"VariableDeclarationStatement","src":"1226:34:3"},{"assignments":[2831],"declarations":[{"constant":false,"id":2831,"mutability":"mutable","name":"seq","nameLocation":"1277:3:3","nodeType":"VariableDeclaration","scope":2846,"src":"1270:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":2830,"name":"uint64","nodeType":"ElementaryTypeName","src":"1270:6:3","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"id":2836,"initialValue":{"arguments":[{"id":2834,"name":"nonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2816,"src":"1290:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2833,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1283:6:3","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":2832,"name":"uint64","nodeType":"ElementaryTypeName","src":"1283:6:3","typeDescriptions":{}}},"id":2835,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1283:13:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"VariableDeclarationStatement","src":"1270:26:3"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2844,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2842,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"1313:34:3","subExpression":{"baseExpression":{"baseExpression":{"id":2837,"name":"nonceSequenceNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2771,"src":"1313:19:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint192_$_t_uint256_$_$","typeString":"mapping(address => mapping(uint192 => uint256))"}},"id":2839,"indexExpression":{"id":2838,"name":"sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2814,"src":"1333:6:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1313:27:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint192_$_t_uint256_$","typeString":"mapping(uint192 => uint256)"}},"id":2841,"indexExpression":{"id":2840,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2822,"src":"1341:3:3","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1313:32:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":2843,"name":"seq","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2831,"src":"1351:3:3","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"1313:41:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2820,"id":2845,"nodeType":"Return","src":"1306:48:3"}]},"documentation":{"id":2812,"nodeType":"StructuredDocumentation","src":"997:104:3","text":" validate nonce uniqueness for this account.\n called just after validateUserOp()"},"id":2847,"implemented":true,"kind":"function","modifiers":[],"name":"_validateAndUpdateNonce","nameLocation":"1115:23:3","nodeType":"FunctionDefinition","parameters":{"id":2817,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2814,"mutability":"mutable","name":"sender","nameLocation":"1156:6:3","nodeType":"VariableDeclaration","scope":2847,"src":"1148:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2813,"name":"address","nodeType":"ElementaryTypeName","src":"1148:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2816,"mutability":"mutable","name":"nonce","nameLocation":"1180:5:3","nodeType":"VariableDeclaration","scope":2847,"src":"1172:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2815,"name":"uint256","nodeType":"ElementaryTypeName","src":"1172:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1138:53:3"},"returnParameters":{"id":2820,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2819,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2847,"src":"1210:4:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2818,"name":"bool","nodeType":"ElementaryTypeName","src":"1210:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1209:6:3"},"scope":2848,"src":"1106:255:3","stateMutability":"nonpayable","virtual":false,"visibility":"internal"}],"scope":2849,"src":"226:1137:3","usedErrors":[]}],"src":"36:1328:3"}},"contracts/smart-contract-wallet/aa-4337/core/SenderCreator.sol":{"id":4,"ast":{"absolutePath":"contracts/smart-contract-wallet/aa-4337/core/SenderCreator.sol","exportedSymbols":{"SenderCreator":[2895]},"id":2896,"license":"GPL-3.0","nodeType":"SourceUnit","nodes":[{"id":2850,"literals":["solidity","0.8",".17"],"nodeType":"PragmaDirective","src":"36:23:4"},{"abstract":false,"baseContracts":[],"canonicalName":"SenderCreator","contractDependencies":[],"contractKind":"contract","documentation":{"id":2851,"nodeType":"StructuredDocumentation","src":"61:142:4","text":" helper contract for EntryPoint, to call userOp.initCode from a \"neutral\" address,\n which is explicitly not the entryPoint itself."},"fullyImplemented":true,"id":2895,"linearizedBaseContracts":[2895],"name":"SenderCreator","nameLocation":"213:13:4","nodeType":"ContractDefinition","nodes":[{"body":{"id":2893,"nodeType":"Block","src":"638:542:4","statements":[{"assignments":[2860],"declarations":[{"constant":false,"id":2860,"mutability":"mutable","name":"factory","nameLocation":"656:7:4","nodeType":"VariableDeclaration","scope":2893,"src":"648:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2859,"name":"address","nodeType":"ElementaryTypeName","src":"648:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":2871,"initialValue":{"arguments":[{"arguments":[{"baseExpression":{"id":2865,"name":"initCode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2854,"src":"682:8:4","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"endExpression":{"hexValue":"3230","id":2867,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"693:2:4","typeDescriptions":{"typeIdentifier":"t_rational_20_by_1","typeString":"int_const 20"},"value":"20"},"id":2868,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexRangeAccess","src":"682:14:4","startExpression":{"hexValue":"30","id":2866,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"691:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr_slice","typeString":"bytes calldata slice"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_calldata_ptr_slice","typeString":"bytes calldata slice"}],"id":2864,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"674:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes20_$","typeString":"type(bytes20)"},"typeName":{"id":2863,"name":"bytes20","nodeType":"ElementaryTypeName","src":"674:7:4","typeDescriptions":{}}},"id":2869,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"674:23:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes20","typeString":"bytes20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes20","typeString":"bytes20"}],"id":2862,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"666:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2861,"name":"address","nodeType":"ElementaryTypeName","src":"666:7:4","typeDescriptions":{}}},"id":2870,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"666:32:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"648:50:4"},{"assignments":[2873],"declarations":[{"constant":false,"id":2873,"mutability":"mutable","name":"initCallData","nameLocation":"721:12:4","nodeType":"VariableDeclaration","scope":2893,"src":"708:25:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2872,"name":"bytes","nodeType":"ElementaryTypeName","src":"708:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2877,"initialValue":{"baseExpression":{"id":2874,"name":"initCode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2854,"src":"736:8:4","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"id":2876,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexRangeAccess","src":"736:13:4","startExpression":{"hexValue":"3230","id":2875,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"745:2:4","typeDescriptions":{"typeIdentifier":"t_rational_20_by_1","typeString":"int_const 20"},"value":"20"},"typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr_slice","typeString":"bytes calldata slice"}},"nodeType":"VariableDeclarationStatement","src":"708:41:4"},{"assignments":[2879],"declarations":[{"constant":false,"id":2879,"mutability":"mutable","name":"success","nameLocation":"764:7:4","nodeType":"VariableDeclaration","scope":2893,"src":"759:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2878,"name":"bool","nodeType":"ElementaryTypeName","src":"759:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":2880,"nodeType":"VariableDeclarationStatement","src":"759:12:4"},{"AST":{"nodeType":"YulBlock","src":"839:268:4","statements":[{"nodeType":"YulAssignment","src":"853:213:4","value":{"arguments":[{"arguments":[],"functionName":{"name":"gas","nodeType":"YulIdentifier","src":"886:3:4"},"nodeType":"YulFunctionCall","src":"886:5:4"},{"name":"factory","nodeType":"YulIdentifier","src":"909:7:4"},{"kind":"number","nodeType":"YulLiteral","src":"934:1:4","type":"","value":"0"},{"arguments":[{"name":"initCallData","nodeType":"YulIdentifier","src":"957:12:4"},{"kind":"number","nodeType":"YulLiteral","src":"971:4:4","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"953:3:4"},"nodeType":"YulFunctionCall","src":"953:23:4"},{"arguments":[{"name":"initCallData","nodeType":"YulIdentifier","src":"1000:12:4"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"994:5:4"},"nodeType":"YulFunctionCall","src":"994:19:4"},{"kind":"number","nodeType":"YulLiteral","src":"1031:1:4","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1050:2:4","type":"","value":"32"}],"functionName":{"name":"call","nodeType":"YulIdentifier","src":"864:4:4"},"nodeType":"YulFunctionCall","src":"864:202:4"},"variableNames":[{"name":"success","nodeType":"YulIdentifier","src":"853:7:4"}]},{"nodeType":"YulAssignment","src":"1079:18:4","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1095:1:4","type":"","value":"0"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1089:5:4"},"nodeType":"YulFunctionCall","src":"1089:8:4"},"variableNames":[{"name":"sender","nodeType":"YulIdentifier","src":"1079:6:4"}]}]},"evmVersion":"london","externalReferences":[{"declaration":2860,"isOffset":false,"isSlot":false,"src":"909:7:4","valueSize":1},{"declaration":2873,"isOffset":false,"isSlot":false,"src":"1000:12:4","valueSize":1},{"declaration":2873,"isOffset":false,"isSlot":false,"src":"957:12:4","valueSize":1},{"declaration":2857,"isOffset":false,"isSlot":false,"src":"1079:6:4","valueSize":1},{"declaration":2879,"isOffset":false,"isSlot":false,"src":"853:7:4","valueSize":1}],"id":2881,"nodeType":"InlineAssembly","src":"830:277:4"},{"condition":{"id":2883,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"1120:8:4","subExpression":{"id":2882,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2879,"src":"1121:7:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2892,"nodeType":"IfStatement","src":"1116:58:4","trueBody":{"id":2891,"nodeType":"Block","src":"1130:44:4","statements":[{"expression":{"id":2889,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2884,"name":"sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2857,"src":"1144:6:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"hexValue":"30","id":2887,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1161:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2886,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1153:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2885,"name":"address","nodeType":"ElementaryTypeName","src":"1153:7:4","typeDescriptions":{}}},"id":2888,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1153:10:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1144:19:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2890,"nodeType":"ExpressionStatement","src":"1144:19:4"}]}}]},"documentation":{"id":2852,"nodeType":"StructuredDocumentation","src":"233:305:4","text":" call the \"initCode\" factory to create and return the sender account address\n @param initCode the initCode value from a UserOp. contains 20 bytes of factory address, followed by calldata\n @return sender the returned address of the created account, or zero address on failure."},"functionSelector":"570e1a36","id":2894,"implemented":true,"kind":"function","modifiers":[],"name":"createSender","nameLocation":"552:12:4","nodeType":"FunctionDefinition","parameters":{"id":2855,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2854,"mutability":"mutable","name":"initCode","nameLocation":"589:8:4","nodeType":"VariableDeclaration","scope":2894,"src":"574:23:4","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":2853,"name":"bytes","nodeType":"ElementaryTypeName","src":"574:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"564:39:4"},"returnParameters":{"id":2858,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2857,"mutability":"mutable","name":"sender","nameLocation":"630:6:4","nodeType":"VariableDeclaration","scope":2894,"src":"622:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2856,"name":"address","nodeType":"ElementaryTypeName","src":"622:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"621:16:4"},"scope":2895,"src":"543:637:4","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":2896,"src":"204:978:4","usedErrors":[]}],"src":"36:1147:4"}},"contracts/smart-contract-wallet/aa-4337/core/StakeManager.sol":{"id":5,"ast":{"absolutePath":"contracts/smart-contract-wallet/aa-4337/core/StakeManager.sol","exportedSymbols":{"IStakeManager":[3735],"StakeManager":[3320]},"id":3321,"license":"GPL-3.0-only","nodeType":"SourceUnit","nodes":[{"id":2897,"literals":["solidity","0.8",".17"],"nodeType":"PragmaDirective","src":"41:23:5"},{"absolutePath":"contracts/smart-contract-wallet/aa-4337/interfaces/IStakeManager.sol","file":"../interfaces/IStakeManager.sol","id":2898,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3321,"sourceUnit":3736,"src":"66:41:5","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":2900,"name":"IStakeManager","nameLocations":["432:13:5"],"nodeType":"IdentifierPath","referencedDeclaration":3735,"src":"432:13:5"},"id":2901,"nodeType":"InheritanceSpecifier","src":"432:13:5"}],"canonicalName":"StakeManager","contractDependencies":[],"contractKind":"contract","documentation":{"id":2899,"nodeType":"StructuredDocumentation","src":"192:205:5","text":" manage deposits and stakes.\n deposit is just a balance used to pay for UserOperations (either by a paymaster or an account)\n stake is value locked for at least \"unstakeDelay\" by a paymaster."},"fullyImplemented":true,"id":3320,"linearizedBaseContracts":[3320,3735],"name":"StakeManager","nameLocation":"416:12:5","nodeType":"ContractDefinition","nodes":[{"constant":false,"documentation":{"id":2902,"nodeType":"StructuredDocumentation","src":"452:47:5","text":"maps paymaster to their deposits and stakes"},"functionSelector":"fc7e286d","id":2907,"mutability":"mutable","name":"deposits","nameLocation":"543:8:5","nodeType":"VariableDeclaration","scope":3320,"src":"504:47:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_DepositInfo_$3682_storage_$","typeString":"mapping(address => struct IStakeManager.DepositInfo)"},"typeName":{"id":2906,"keyType":{"id":2903,"name":"address","nodeType":"ElementaryTypeName","src":"512:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"504:31:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_DepositInfo_$3682_storage_$","typeString":"mapping(address => struct IStakeManager.DepositInfo)"},"valueType":{"id":2905,"nodeType":"UserDefinedTypeName","pathNode":{"id":2904,"name":"DepositInfo","nameLocations":["523:11:5"],"nodeType":"IdentifierPath","referencedDeclaration":3682,"src":"523:11:5"},"referencedDeclaration":3682,"src":"523:11:5","typeDescriptions":{"typeIdentifier":"t_struct$_DepositInfo_$3682_storage_ptr","typeString":"struct IStakeManager.DepositInfo"}}},"visibility":"public"},{"baseFunctions":[3696],"body":{"id":2920,"nodeType":"Block","src":"693:41:5","statements":[{"expression":{"baseExpression":{"id":2916,"name":"deposits","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2907,"src":"710:8:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_DepositInfo_$3682_storage_$","typeString":"mapping(address => struct IStakeManager.DepositInfo storage ref)"}},"id":2918,"indexExpression":{"id":2917,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2910,"src":"719:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"710:17:5","typeDescriptions":{"typeIdentifier":"t_struct$_DepositInfo_$3682_storage","typeString":"struct IStakeManager.DepositInfo storage ref"}},"functionReturnParameters":2915,"id":2919,"nodeType":"Return","src":"703:24:5"}]},"documentation":{"id":2908,"nodeType":"StructuredDocumentation","src":"558:29:5","text":"@inheritdoc IStakeManager"},"functionSelector":"5287ce12","id":2921,"implemented":true,"kind":"function","modifiers":[],"name":"getDepositInfo","nameLocation":"601:14:5","nodeType":"FunctionDefinition","parameters":{"id":2911,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2910,"mutability":"mutable","name":"account","nameLocation":"633:7:5","nodeType":"VariableDeclaration","scope":2921,"src":"625:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2909,"name":"address","nodeType":"ElementaryTypeName","src":"625:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"615:31:5"},"returnParameters":{"id":2915,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2914,"mutability":"mutable","name":"info","nameLocation":"687:4:5","nodeType":"VariableDeclaration","scope":2921,"src":"668:23:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_DepositInfo_$3682_memory_ptr","typeString":"struct IStakeManager.DepositInfo"},"typeName":{"id":2913,"nodeType":"UserDefinedTypeName","pathNode":{"id":2912,"name":"DepositInfo","nameLocations":["668:11:5"],"nodeType":"IdentifierPath","referencedDeclaration":3682,"src":"668:11:5"},"referencedDeclaration":3682,"src":"668:11:5","typeDescriptions":{"typeIdentifier":"t_struct$_DepositInfo_$3682_storage_ptr","typeString":"struct IStakeManager.DepositInfo"}},"visibility":"internal"}],"src":"667:25:5"},"scope":3320,"src":"592:142:5","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":2950,"nodeType":"Block","src":"890:165:5","statements":[{"assignments":[2931],"declarations":[{"constant":false,"id":2931,"mutability":"mutable","name":"depositInfo","nameLocation":"920:11:5","nodeType":"VariableDeclaration","scope":2950,"src":"900:31:5","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_DepositInfo_$3682_storage_ptr","typeString":"struct IStakeManager.DepositInfo"},"typeName":{"id":2930,"nodeType":"UserDefinedTypeName","pathNode":{"id":2929,"name":"DepositInfo","nameLocations":["900:11:5"],"nodeType":"IdentifierPath","referencedDeclaration":3682,"src":"900:11:5"},"referencedDeclaration":3682,"src":"900:11:5","typeDescriptions":{"typeIdentifier":"t_struct$_DepositInfo_$3682_storage_ptr","typeString":"struct IStakeManager.DepositInfo"}},"visibility":"internal"}],"id":2935,"initialValue":{"baseExpression":{"id":2932,"name":"deposits","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2907,"src":"934:8:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_DepositInfo_$3682_storage_$","typeString":"mapping(address => struct IStakeManager.DepositInfo storage ref)"}},"id":2934,"indexExpression":{"id":2933,"name":"addr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2923,"src":"943:4:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"934:14:5","typeDescriptions":{"typeIdentifier":"t_struct$_DepositInfo_$3682_storage","typeString":"struct IStakeManager.DepositInfo storage ref"}},"nodeType":"VariableDeclarationStatement","src":"900:48:5"},{"expression":{"id":2941,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":2936,"name":"info","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2927,"src":"958:4:5","typeDescriptions":{"typeIdentifier":"t_struct$_StakeInfo_$3687_memory_ptr","typeString":"struct IStakeManager.StakeInfo memory"}},"id":2938,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"963:5:5","memberName":"stake","nodeType":"MemberAccess","referencedDeclaration":3684,"src":"958:10:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":2939,"name":"depositInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2931,"src":"971:11:5","typeDescriptions":{"typeIdentifier":"t_struct$_DepositInfo_$3682_storage_ptr","typeString":"struct IStakeManager.DepositInfo storage pointer"}},"id":2940,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"983:5:5","memberName":"stake","nodeType":"MemberAccess","referencedDeclaration":3677,"src":"971:17:5","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"src":"958:30:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2942,"nodeType":"ExpressionStatement","src":"958:30:5"},{"expression":{"id":2948,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":2943,"name":"info","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2927,"src":"998:4:5","typeDescriptions":{"typeIdentifier":"t_struct$_StakeInfo_$3687_memory_ptr","typeString":"struct IStakeManager.StakeInfo memory"}},"id":2945,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"1003:15:5","memberName":"unstakeDelaySec","nodeType":"MemberAccess","referencedDeclaration":3686,"src":"998:20:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":2946,"name":"depositInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2931,"src":"1021:11:5","typeDescriptions":{"typeIdentifier":"t_struct$_DepositInfo_$3682_storage_ptr","typeString":"struct IStakeManager.DepositInfo storage pointer"}},"id":2947,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1033:15:5","memberName":"unstakeDelaySec","nodeType":"MemberAccess","referencedDeclaration":3679,"src":"1021:27:5","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"998:50:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2949,"nodeType":"ExpressionStatement","src":"998:50:5"}]},"id":2951,"implemented":true,"kind":"function","modifiers":[],"name":"_getStakeInfo","nameLocation":"802:13:5","nodeType":"FunctionDefinition","parameters":{"id":2924,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2923,"mutability":"mutable","name":"addr","nameLocation":"833:4:5","nodeType":"VariableDeclaration","scope":2951,"src":"825:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2922,"name":"address","nodeType":"ElementaryTypeName","src":"825:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"815:28:5"},"returnParameters":{"id":2928,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2927,"mutability":"mutable","name":"info","nameLocation":"884:4:5","nodeType":"VariableDeclaration","scope":2951,"src":"867:21:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_StakeInfo_$3687_memory_ptr","typeString":"struct IStakeManager.StakeInfo"},"typeName":{"id":2926,"nodeType":"UserDefinedTypeName","pathNode":{"id":2925,"name":"StakeInfo","nameLocations":["867:9:5"],"nodeType":"IdentifierPath","referencedDeclaration":3687,"src":"867:9:5"},"referencedDeclaration":3687,"src":"867:9:5","typeDescriptions":{"typeIdentifier":"t_struct$_StakeInfo_$3687_storage_ptr","typeString":"struct IStakeManager.StakeInfo"}},"visibility":"internal"}],"src":"866:23:5"},"scope":3320,"src":"793:262:5","stateMutability":"view","virtual":false,"visibility":"internal"},{"baseFunctions":[3704],"body":{"id":2964,"nodeType":"Block","src":"1187:49:5","statements":[{"expression":{"expression":{"baseExpression":{"id":2959,"name":"deposits","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2907,"src":"1204:8:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_DepositInfo_$3682_storage_$","typeString":"mapping(address => struct IStakeManager.DepositInfo storage ref)"}},"id":2961,"indexExpression":{"id":2960,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2954,"src":"1213:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1204:17:5","typeDescriptions":{"typeIdentifier":"t_struct$_DepositInfo_$3682_storage","typeString":"struct IStakeManager.DepositInfo storage ref"}},"id":2962,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1222:7:5","memberName":"deposit","nodeType":"MemberAccess","referencedDeclaration":3673,"src":"1204:25:5","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"functionReturnParameters":2958,"id":2963,"nodeType":"Return","src":"1197:32:5"}]},"documentation":{"id":2952,"nodeType":"StructuredDocumentation","src":"1061:55:5","text":"return the deposit (for gas payment) of the account"},"functionSelector":"70a08231","id":2965,"implemented":true,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"1130:9:5","nodeType":"FunctionDefinition","parameters":{"id":2955,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2954,"mutability":"mutable","name":"account","nameLocation":"1148:7:5","nodeType":"VariableDeclaration","scope":2965,"src":"1140:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2953,"name":"address","nodeType":"ElementaryTypeName","src":"1140:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1139:17:5"},"returnParameters":{"id":2958,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2957,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2965,"src":"1178:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2956,"name":"uint256","nodeType":"ElementaryTypeName","src":"1178:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1177:9:5"},"scope":3320,"src":"1121:115:5","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":2973,"nodeType":"Block","src":"1269:38:5","statements":[{"expression":{"arguments":[{"expression":{"id":2969,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1289:3:5","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2970,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1293:6:5","memberName":"sender","nodeType":"MemberAccess","src":"1289:10:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2968,"name":"depositTo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3042,"src":"1279:9:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":2971,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1279:21:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2972,"nodeType":"ExpressionStatement","src":"1279:21:5"}]},"id":2974,"implemented":true,"kind":"receive","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":2966,"nodeType":"ParameterList","parameters":[],"src":"1249:2:5"},"returnParameters":{"id":2967,"nodeType":"ParameterList","parameters":[],"src":"1269:0:5"},"scope":3320,"src":"1242:65:5","stateMutability":"payable","virtual":false,"visibility":"external"},{"body":{"id":3015,"nodeType":"Block","src":"1382:224:5","statements":[{"assignments":[2983],"declarations":[{"constant":false,"id":2983,"mutability":"mutable","name":"info","nameLocation":"1412:4:5","nodeType":"VariableDeclaration","scope":3015,"src":"1392:24:5","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_DepositInfo_$3682_storage_ptr","typeString":"struct IStakeManager.DepositInfo"},"typeName":{"id":2982,"nodeType":"UserDefinedTypeName","pathNode":{"id":2981,"name":"DepositInfo","nameLocations":["1392:11:5"],"nodeType":"IdentifierPath","referencedDeclaration":3682,"src":"1392:11:5"},"referencedDeclaration":3682,"src":"1392:11:5","typeDescriptions":{"typeIdentifier":"t_struct$_DepositInfo_$3682_storage_ptr","typeString":"struct IStakeManager.DepositInfo"}},"visibility":"internal"}],"id":2987,"initialValue":{"baseExpression":{"id":2984,"name":"deposits","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2907,"src":"1419:8:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_DepositInfo_$3682_storage_$","typeString":"mapping(address => struct IStakeManager.DepositInfo storage ref)"}},"id":2986,"indexExpression":{"id":2985,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2976,"src":"1428:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1419:17:5","typeDescriptions":{"typeIdentifier":"t_struct$_DepositInfo_$3682_storage","typeString":"struct IStakeManager.DepositInfo storage ref"}},"nodeType":"VariableDeclarationStatement","src":"1392:44:5"},{"assignments":[2989],"declarations":[{"constant":false,"id":2989,"mutability":"mutable","name":"newAmount","nameLocation":"1454:9:5","nodeType":"VariableDeclaration","scope":3015,"src":"1446:17:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2988,"name":"uint256","nodeType":"ElementaryTypeName","src":"1446:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2994,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2993,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2990,"name":"info","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2983,"src":"1466:4:5","typeDescriptions":{"typeIdentifier":"t_struct$_DepositInfo_$3682_storage_ptr","typeString":"struct IStakeManager.DepositInfo storage pointer"}},"id":2991,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1471:7:5","memberName":"deposit","nodeType":"MemberAccess","referencedDeclaration":3673,"src":"1466:12:5","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":2992,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2978,"src":"1481:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1466:21:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1446:41:5"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3002,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2996,"name":"newAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2989,"src":"1505:9:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":2999,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1523:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"},"typeName":{"id":2998,"name":"uint112","nodeType":"ElementaryTypeName","src":"1523:7:5","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"}],"id":2997,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"1518:4:5","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3000,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1518:13:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint112","typeString":"type(uint112)"}},"id":3001,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1532:3:5","memberName":"max","nodeType":"MemberAccess","src":"1518:17:5","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"src":"1505:30:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"6465706f736974206f766572666c6f77","id":3003,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1537:18:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_2df876f4a1443545618e673329ffafd9bcd8ac55000274188f0ae7458d7624fa","typeString":"literal_string \"deposit overflow\""},"value":"deposit overflow"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_2df876f4a1443545618e673329ffafd9bcd8ac55000274188f0ae7458d7624fa","typeString":"literal_string \"deposit overflow\""}],"id":2995,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1497:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3004,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1497:59:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3005,"nodeType":"ExpressionStatement","src":"1497:59:5"},{"expression":{"id":3013,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":3006,"name":"info","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2983,"src":"1566:4:5","typeDescriptions":{"typeIdentifier":"t_struct$_DepositInfo_$3682_storage_ptr","typeString":"struct IStakeManager.DepositInfo storage pointer"}},"id":3008,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"1571:7:5","memberName":"deposit","nodeType":"MemberAccess","referencedDeclaration":3673,"src":"1566:12:5","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3011,"name":"newAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2989,"src":"1589:9:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3010,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1581:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"},"typeName":{"id":3009,"name":"uint112","nodeType":"ElementaryTypeName","src":"1581:7:5","typeDescriptions":{}}},"id":3012,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1581:18:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"src":"1566:33:5","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"id":3014,"nodeType":"ExpressionStatement","src":"1566:33:5"}]},"id":3016,"implemented":true,"kind":"function","modifiers":[],"name":"_incrementDeposit","nameLocation":"1322:17:5","nodeType":"FunctionDefinition","parameters":{"id":2979,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2976,"mutability":"mutable","name":"account","nameLocation":"1348:7:5","nodeType":"VariableDeclaration","scope":3016,"src":"1340:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2975,"name":"address","nodeType":"ElementaryTypeName","src":"1340:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2978,"mutability":"mutable","name":"amount","nameLocation":"1365:6:5","nodeType":"VariableDeclaration","scope":3016,"src":"1357:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2977,"name":"uint256","nodeType":"ElementaryTypeName","src":"1357:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1339:33:5"},"returnParameters":{"id":2980,"nodeType":"ParameterList","parameters":[],"src":"1382:0:5"},"scope":3320,"src":"1313:293:5","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"baseFunctions":[3710],"body":{"id":3041,"nodeType":"Block","src":"1726:155:5","statements":[{"expression":{"arguments":[{"id":3023,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3019,"src":"1754:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":3024,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1763:3:5","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3025,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1767:5:5","memberName":"value","nodeType":"MemberAccess","src":"1763:9:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3022,"name":"_incrementDeposit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3016,"src":"1736:17:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":3026,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1736:37:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3027,"nodeType":"ExpressionStatement","src":"1736:37:5"},{"assignments":[3030],"declarations":[{"constant":false,"id":3030,"mutability":"mutable","name":"info","nameLocation":"1803:4:5","nodeType":"VariableDeclaration","scope":3041,"src":"1783:24:5","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_DepositInfo_$3682_storage_ptr","typeString":"struct IStakeManager.DepositInfo"},"typeName":{"id":3029,"nodeType":"UserDefinedTypeName","pathNode":{"id":3028,"name":"DepositInfo","nameLocations":["1783:11:5"],"nodeType":"IdentifierPath","referencedDeclaration":3682,"src":"1783:11:5"},"referencedDeclaration":3682,"src":"1783:11:5","typeDescriptions":{"typeIdentifier":"t_struct$_DepositInfo_$3682_storage_ptr","typeString":"struct IStakeManager.DepositInfo"}},"visibility":"internal"}],"id":3034,"initialValue":{"baseExpression":{"id":3031,"name":"deposits","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2907,"src":"1810:8:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_DepositInfo_$3682_storage_$","typeString":"mapping(address => struct IStakeManager.DepositInfo storage ref)"}},"id":3033,"indexExpression":{"id":3032,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3019,"src":"1819:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1810:17:5","typeDescriptions":{"typeIdentifier":"t_struct$_DepositInfo_$3682_storage","typeString":"struct IStakeManager.DepositInfo storage ref"}},"nodeType":"VariableDeclarationStatement","src":"1783:44:5"},{"eventCall":{"arguments":[{"id":3036,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3019,"src":"1852:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":3037,"name":"info","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3030,"src":"1861:4:5","typeDescriptions":{"typeIdentifier":"t_struct$_DepositInfo_$3682_storage_ptr","typeString":"struct IStakeManager.DepositInfo storage pointer"}},"id":3038,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1866:7:5","memberName":"deposit","nodeType":"MemberAccess","referencedDeclaration":3673,"src":"1861:12:5","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint112","typeString":"uint112"}],"id":3035,"name":"Deposited","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3639,"src":"1842:9:5","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":3039,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1842:32:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3040,"nodeType":"EmitStatement","src":"1837:37:5"}]},"documentation":{"id":3017,"nodeType":"StructuredDocumentation","src":"1612:58:5","text":" add to the deposit of the given account"},"functionSelector":"b760faf9","id":3042,"implemented":true,"kind":"function","modifiers":[],"name":"depositTo","nameLocation":"1684:9:5","nodeType":"FunctionDefinition","parameters":{"id":3020,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3019,"mutability":"mutable","name":"account","nameLocation":"1702:7:5","nodeType":"VariableDeclaration","scope":3042,"src":"1694:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3018,"name":"address","nodeType":"ElementaryTypeName","src":"1694:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1693:17:5"},"returnParameters":{"id":3021,"nodeType":"ParameterList","parameters":[],"src":"1726:0:5"},"scope":3320,"src":"1675:206:5","stateMutability":"payable","virtual":false,"visibility":"public"},{"baseFunctions":[3716],"body":{"id":3121,"nodeType":"Block","src":"2149:649:5","statements":[{"assignments":[3050],"declarations":[{"constant":false,"id":3050,"mutability":"mutable","name":"info","nameLocation":"2179:4:5","nodeType":"VariableDeclaration","scope":3121,"src":"2159:24:5","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_DepositInfo_$3682_storage_ptr","typeString":"struct IStakeManager.DepositInfo"},"typeName":{"id":3049,"nodeType":"UserDefinedTypeName","pathNode":{"id":3048,"name":"DepositInfo","nameLocations":["2159:11:5"],"nodeType":"IdentifierPath","referencedDeclaration":3682,"src":"2159:11:5"},"referencedDeclaration":3682,"src":"2159:11:5","typeDescriptions":{"typeIdentifier":"t_struct$_DepositInfo_$3682_storage_ptr","typeString":"struct IStakeManager.DepositInfo"}},"visibility":"internal"}],"id":3055,"initialValue":{"baseExpression":{"id":3051,"name":"deposits","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2907,"src":"2186:8:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_DepositInfo_$3682_storage_$","typeString":"mapping(address => struct IStakeManager.DepositInfo storage ref)"}},"id":3054,"indexExpression":{"expression":{"id":3052,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2195:3:5","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3053,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2199:6:5","memberName":"sender","nodeType":"MemberAccess","src":"2195:10:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2186:20:5","typeDescriptions":{"typeIdentifier":"t_struct$_DepositInfo_$3682_storage","typeString":"struct IStakeManager.DepositInfo storage ref"}},"nodeType":"VariableDeclarationStatement","src":"2159:47:5"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint32","typeString":"uint32"},"id":3059,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3057,"name":"unstakeDelaySec","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3045,"src":"2224:15:5","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3058,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2242:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2224:19:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"6d757374207370656369667920756e7374616b652064656c6179","id":3060,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2245:28:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_b778ed14a7f7833f15cec15447ba73902b7f27cdd540d47113a5b9c3947e6b2b","typeString":"literal_string \"must specify unstake delay\""},"value":"must specify unstake delay"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_b778ed14a7f7833f15cec15447ba73902b7f27cdd540d47113a5b9c3947e6b2b","typeString":"literal_string \"must specify unstake delay\""}],"id":3056,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2216:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3061,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2216:58:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3062,"nodeType":"ExpressionStatement","src":"2216:58:5"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint32","typeString":"uint32"},"id":3067,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3064,"name":"unstakeDelaySec","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3045,"src":"2305:15:5","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"expression":{"id":3065,"name":"info","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3050,"src":"2324:4:5","typeDescriptions":{"typeIdentifier":"t_struct$_DepositInfo_$3682_storage_ptr","typeString":"struct IStakeManager.DepositInfo storage pointer"}},"id":3066,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2329:15:5","memberName":"unstakeDelaySec","nodeType":"MemberAccess","referencedDeclaration":3679,"src":"2324:20:5","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"2305:39:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"63616e6e6f7420646563726561736520756e7374616b652074696d65","id":3068,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2358:30:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_be41a8e875b0d08b577c32bcab0ac88c472e62be6c60e218189d78d10808d9e7","typeString":"literal_string \"cannot decrease unstake time\""},"value":"cannot decrease unstake time"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_be41a8e875b0d08b577c32bcab0ac88c472e62be6c60e218189d78d10808d9e7","typeString":"literal_string \"cannot decrease unstake time\""}],"id":3063,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2284:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3069,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2284:114:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3070,"nodeType":"ExpressionStatement","src":"2284:114:5"},{"assignments":[3072],"declarations":[{"constant":false,"id":3072,"mutability":"mutable","name":"stake","nameLocation":"2416:5:5","nodeType":"VariableDeclaration","scope":3121,"src":"2408:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3071,"name":"uint256","nodeType":"ElementaryTypeName","src":"2408:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3078,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3077,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3073,"name":"info","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3050,"src":"2424:4:5","typeDescriptions":{"typeIdentifier":"t_struct$_DepositInfo_$3682_storage_ptr","typeString":"struct IStakeManager.DepositInfo storage pointer"}},"id":3074,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2429:5:5","memberName":"stake","nodeType":"MemberAccess","referencedDeclaration":3677,"src":"2424:10:5","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"expression":{"id":3075,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2437:3:5","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3076,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2441:5:5","memberName":"value","nodeType":"MemberAccess","src":"2437:9:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2424:22:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2408:38:5"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3082,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3080,"name":"stake","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3072,"src":"2464:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3081,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2472:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2464:9:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"6e6f207374616b6520737065636966696564","id":3083,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2475:20:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_163fbe38f6e79bbafe8ef1c6ecbcd609e161120dfcf32c1dc0ae2ace28e56cf8","typeString":"literal_string \"no stake specified\""},"value":"no stake specified"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_163fbe38f6e79bbafe8ef1c6ecbcd609e161120dfcf32c1dc0ae2ace28e56cf8","typeString":"literal_string \"no stake specified\""}],"id":3079,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2456:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3084,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2456:40:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3085,"nodeType":"ExpressionStatement","src":"2456:40:5"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3093,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3087,"name":"stake","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3072,"src":"2514:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":3090,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2528:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"},"typeName":{"id":3089,"name":"uint112","nodeType":"ElementaryTypeName","src":"2528:7:5","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"}],"id":3088,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"2523:4:5","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3091,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2523:13:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint112","typeString":"type(uint112)"}},"id":3092,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2537:3:5","memberName":"max","nodeType":"MemberAccess","src":"2523:17:5","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"src":"2514:26:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"7374616b65206f766572666c6f77","id":3094,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2542:16:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_6a64644aeeb545618f93fda0e8ccacb2c407cdffe2b26245fdfa446117fd12f8","typeString":"literal_string \"stake overflow\""},"value":"stake overflow"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_6a64644aeeb545618f93fda0e8ccacb2c407cdffe2b26245fdfa446117fd12f8","typeString":"literal_string \"stake overflow\""}],"id":3086,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2506:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3095,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2506:53:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3096,"nodeType":"ExpressionStatement","src":"2506:53:5"},{"expression":{"id":3112,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3097,"name":"deposits","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2907,"src":"2569:8:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_DepositInfo_$3682_storage_$","typeString":"mapping(address => struct IStakeManager.DepositInfo storage ref)"}},"id":3100,"indexExpression":{"expression":{"id":3098,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2578:3:5","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3099,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2582:6:5","memberName":"sender","nodeType":"MemberAccess","src":"2578:10:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2569:20:5","typeDescriptions":{"typeIdentifier":"t_struct$_DepositInfo_$3682_storage","typeString":"struct IStakeManager.DepositInfo storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"expression":{"id":3102,"name":"info","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3050,"src":"2617:4:5","typeDescriptions":{"typeIdentifier":"t_struct$_DepositInfo_$3682_storage_ptr","typeString":"struct IStakeManager.DepositInfo storage pointer"}},"id":3103,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2622:7:5","memberName":"deposit","nodeType":"MemberAccess","referencedDeclaration":3673,"src":"2617:12:5","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},{"hexValue":"74727565","id":3104,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2643:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"arguments":[{"id":3107,"name":"stake","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3072,"src":"2669:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3106,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2661:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"},"typeName":{"id":3105,"name":"uint112","nodeType":"ElementaryTypeName","src":"2661:7:5","typeDescriptions":{}}},"id":3108,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2661:14:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},{"id":3109,"name":"unstakeDelaySec","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3045,"src":"2689:15:5","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"hexValue":"30","id":3110,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2718:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint112","typeString":"uint112"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint112","typeString":"uint112"},{"typeIdentifier":"t_uint32","typeString":"uint32"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3101,"name":"DepositInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3682,"src":"2592:11:5","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_DepositInfo_$3682_storage_ptr_$","typeString":"type(struct IStakeManager.DepositInfo storage pointer)"}},"id":3111,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2592:137:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_DepositInfo_$3682_memory_ptr","typeString":"struct IStakeManager.DepositInfo memory"}},"src":"2569:160:5","typeDescriptions":{"typeIdentifier":"t_struct$_DepositInfo_$3682_storage","typeString":"struct IStakeManager.DepositInfo storage ref"}},"id":3113,"nodeType":"ExpressionStatement","src":"2569:160:5"},{"eventCall":{"arguments":[{"expression":{"id":3115,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2756:3:5","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3116,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2760:6:5","memberName":"sender","nodeType":"MemberAccess","src":"2756:10:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3117,"name":"stake","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3072,"src":"2768:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3118,"name":"unstakeDelaySec","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3045,"src":"2775:15:5","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint32","typeString":"uint32"}],"id":3114,"name":"StakeLocked","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3656,"src":"2744:11:5","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,uint256,uint256)"}},"id":3119,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2744:47:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3120,"nodeType":"EmitStatement","src":"2739:52:5"}]},"documentation":{"id":3043,"nodeType":"StructuredDocumentation","src":"1887:200:5","text":" add to the account's stake - amount and delay\n any pending unstake is first cancelled.\n @param unstakeDelaySec the new lock duration before the deposit can be withdrawn."},"functionSelector":"0396cb60","id":3122,"implemented":true,"kind":"function","modifiers":[],"name":"addStake","nameLocation":"2101:8:5","nodeType":"FunctionDefinition","parameters":{"id":3046,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3045,"mutability":"mutable","name":"unstakeDelaySec","nameLocation":"2117:15:5","nodeType":"VariableDeclaration","scope":3122,"src":"2110:22:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":3044,"name":"uint32","nodeType":"ElementaryTypeName","src":"2110:6:5","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"2109:24:5"},"returnParameters":{"id":3047,"nodeType":"ParameterList","parameters":[],"src":"2149:0:5"},"scope":3320,"src":"2092:706:5","stateMutability":"payable","virtual":false,"visibility":"public"},{"baseFunctions":[3720],"body":{"id":3177,"nodeType":"Block","src":"2969:376:5","statements":[{"assignments":[3128],"declarations":[{"constant":false,"id":3128,"mutability":"mutable","name":"info","nameLocation":"2999:4:5","nodeType":"VariableDeclaration","scope":3177,"src":"2979:24:5","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_DepositInfo_$3682_storage_ptr","typeString":"struct IStakeManager.DepositInfo"},"typeName":{"id":3127,"nodeType":"UserDefinedTypeName","pathNode":{"id":3126,"name":"DepositInfo","nameLocations":["2979:11:5"],"nodeType":"IdentifierPath","referencedDeclaration":3682,"src":"2979:11:5"},"referencedDeclaration":3682,"src":"2979:11:5","typeDescriptions":{"typeIdentifier":"t_struct$_DepositInfo_$3682_storage_ptr","typeString":"struct IStakeManager.DepositInfo"}},"visibility":"internal"}],"id":3133,"initialValue":{"baseExpression":{"id":3129,"name":"deposits","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2907,"src":"3006:8:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_DepositInfo_$3682_storage_$","typeString":"mapping(address => struct IStakeManager.DepositInfo storage ref)"}},"id":3132,"indexExpression":{"expression":{"id":3130,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3015:3:5","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3131,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3019:6:5","memberName":"sender","nodeType":"MemberAccess","src":"3015:10:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3006:20:5","typeDescriptions":{"typeIdentifier":"t_struct$_DepositInfo_$3682_storage","typeString":"struct IStakeManager.DepositInfo storage ref"}},"nodeType":"VariableDeclarationStatement","src":"2979:47:5"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint32","typeString":"uint32"},"id":3138,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3135,"name":"info","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3128,"src":"3044:4:5","typeDescriptions":{"typeIdentifier":"t_struct$_DepositInfo_$3682_storage_ptr","typeString":"struct IStakeManager.DepositInfo storage pointer"}},"id":3136,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3049:15:5","memberName":"unstakeDelaySec","nodeType":"MemberAccess","referencedDeclaration":3679,"src":"3044:20:5","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":3137,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3068:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3044:25:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"6e6f74207374616b6564","id":3139,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3071:12:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_8d1fe892c4e34e50852d9473d3c9854eedeef3b324fbe99dc34a39c1c505db12","typeString":"literal_string \"not staked\""},"value":"not staked"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_8d1fe892c4e34e50852d9473d3c9854eedeef3b324fbe99dc34a39c1c505db12","typeString":"literal_string \"not staked\""}],"id":3134,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3036:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3140,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3036:48:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3141,"nodeType":"ExpressionStatement","src":"3036:48:5"},{"expression":{"arguments":[{"expression":{"id":3143,"name":"info","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3128,"src":"3102:4:5","typeDescriptions":{"typeIdentifier":"t_struct$_DepositInfo_$3682_storage_ptr","typeString":"struct IStakeManager.DepositInfo storage pointer"}},"id":3144,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3107:6:5","memberName":"staked","nodeType":"MemberAccess","referencedDeclaration":3675,"src":"3102:11:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"616c726561647920756e7374616b696e67","id":3145,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3115:19:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_eabab2b938baa7d6708bc792cd1d2d9d9bd3627968a46b23824d4b6af2b0f7a8","typeString":"literal_string \"already unstaking\""},"value":"already unstaking"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_eabab2b938baa7d6708bc792cd1d2d9d9bd3627968a46b23824d4b6af2b0f7a8","typeString":"literal_string \"already unstaking\""}],"id":3142,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3094:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3146,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3094:41:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3147,"nodeType":"ExpressionStatement","src":"3094:41:5"},{"assignments":[3149],"declarations":[{"constant":false,"id":3149,"mutability":"mutable","name":"withdrawTime","nameLocation":"3152:12:5","nodeType":"VariableDeclaration","scope":3177,"src":"3145:19:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":3148,"name":"uint48","nodeType":"ElementaryTypeName","src":"3145:6:5","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"id":3158,"initialValue":{"commonType":{"typeIdentifier":"t_uint48","typeString":"uint48"},"id":3157,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"expression":{"id":3152,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"3174:5:5","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":3153,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3180:9:5","memberName":"timestamp","nodeType":"MemberAccess","src":"3174:15:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3151,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3167:6:5","typeDescriptions":{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"},"typeName":{"id":3150,"name":"uint48","nodeType":"ElementaryTypeName","src":"3167:6:5","typeDescriptions":{}}},"id":3154,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3167:23:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"expression":{"id":3155,"name":"info","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3128,"src":"3193:4:5","typeDescriptions":{"typeIdentifier":"t_struct$_DepositInfo_$3682_storage_ptr","typeString":"struct IStakeManager.DepositInfo storage pointer"}},"id":3156,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3198:15:5","memberName":"unstakeDelaySec","nodeType":"MemberAccess","referencedDeclaration":3679,"src":"3193:20:5","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"3167:46:5","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"nodeType":"VariableDeclarationStatement","src":"3145:68:5"},{"expression":{"id":3163,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":3159,"name":"info","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3128,"src":"3223:4:5","typeDescriptions":{"typeIdentifier":"t_struct$_DepositInfo_$3682_storage_ptr","typeString":"struct IStakeManager.DepositInfo storage pointer"}},"id":3161,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"3228:12:5","memberName":"withdrawTime","nodeType":"MemberAccess","referencedDeclaration":3681,"src":"3223:17:5","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3162,"name":"withdrawTime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3149,"src":"3243:12:5","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"src":"3223:32:5","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"id":3164,"nodeType":"ExpressionStatement","src":"3223:32:5"},{"expression":{"id":3169,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":3165,"name":"info","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3128,"src":"3265:4:5","typeDescriptions":{"typeIdentifier":"t_struct$_DepositInfo_$3682_storage_ptr","typeString":"struct IStakeManager.DepositInfo storage pointer"}},"id":3167,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"3270:6:5","memberName":"staked","nodeType":"MemberAccess","referencedDeclaration":3675,"src":"3265:11:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":3168,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3279:5:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"3265:19:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3170,"nodeType":"ExpressionStatement","src":"3265:19:5"},{"eventCall":{"arguments":[{"expression":{"id":3172,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3313:3:5","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3173,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3317:6:5","memberName":"sender","nodeType":"MemberAccess","src":"3313:10:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3174,"name":"withdrawTime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3149,"src":"3325:12:5","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint48","typeString":"uint48"}],"id":3171,"name":"StakeUnlocked","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3663,"src":"3299:13:5","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":3175,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3299:39:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3176,"nodeType":"EmitStatement","src":"3294:44:5"}]},"documentation":{"id":3123,"nodeType":"StructuredDocumentation","src":"2804:128:5","text":" attempt to unlock the stake.\n the value can be withdrawn (using withdrawStake) after the unstake delay."},"functionSelector":"bb9fe6bf","id":3178,"implemented":true,"kind":"function","modifiers":[],"name":"unlockStake","nameLocation":"2946:11:5","nodeType":"FunctionDefinition","parameters":{"id":3124,"nodeType":"ParameterList","parameters":[],"src":"2957:2:5"},"returnParameters":{"id":3125,"nodeType":"ParameterList","parameters":[],"src":"2969:0:5"},"scope":3320,"src":"2937:408:5","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"baseFunctions":[3726],"body":{"id":3260,"nodeType":"Block","src":"3615:620:5","statements":[{"assignments":[3186],"declarations":[{"constant":false,"id":3186,"mutability":"mutable","name":"info","nameLocation":"3645:4:5","nodeType":"VariableDeclaration","scope":3260,"src":"3625:24:5","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_DepositInfo_$3682_storage_ptr","typeString":"struct IStakeManager.DepositInfo"},"typeName":{"id":3185,"nodeType":"UserDefinedTypeName","pathNode":{"id":3184,"name":"DepositInfo","nameLocations":["3625:11:5"],"nodeType":"IdentifierPath","referencedDeclaration":3682,"src":"3625:11:5"},"referencedDeclaration":3682,"src":"3625:11:5","typeDescriptions":{"typeIdentifier":"t_struct$_DepositInfo_$3682_storage_ptr","typeString":"struct IStakeManager.DepositInfo"}},"visibility":"internal"}],"id":3191,"initialValue":{"baseExpression":{"id":3187,"name":"deposits","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2907,"src":"3652:8:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_DepositInfo_$3682_storage_$","typeString":"mapping(address => struct IStakeManager.DepositInfo storage ref)"}},"id":3190,"indexExpression":{"expression":{"id":3188,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3661:3:5","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3189,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3665:6:5","memberName":"sender","nodeType":"MemberAccess","src":"3661:10:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3652:20:5","typeDescriptions":{"typeIdentifier":"t_struct$_DepositInfo_$3682_storage","typeString":"struct IStakeManager.DepositInfo storage ref"}},"nodeType":"VariableDeclarationStatement","src":"3625:47:5"},{"assignments":[3193],"declarations":[{"constant":false,"id":3193,"mutability":"mutable","name":"stake","nameLocation":"3690:5:5","nodeType":"VariableDeclaration","scope":3260,"src":"3682:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3192,"name":"uint256","nodeType":"ElementaryTypeName","src":"3682:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3196,"initialValue":{"expression":{"id":3194,"name":"info","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3186,"src":"3698:4:5","typeDescriptions":{"typeIdentifier":"t_struct$_DepositInfo_$3682_storage_ptr","typeString":"struct IStakeManager.DepositInfo storage pointer"}},"id":3195,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3703:5:5","memberName":"stake","nodeType":"MemberAccess","referencedDeclaration":3677,"src":"3698:10:5","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"nodeType":"VariableDeclarationStatement","src":"3682:26:5"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3200,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3198,"name":"stake","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3193,"src":"3726:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3199,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3734:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3726:9:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4e6f207374616b6520746f207769746864726177","id":3201,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3737:22:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_2157ff27c581d0c09d0fefae4820572f0bccc198ee5e28633f039d06e0011705","typeString":"literal_string \"No stake to withdraw\""},"value":"No stake to withdraw"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_2157ff27c581d0c09d0fefae4820572f0bccc198ee5e28633f039d06e0011705","typeString":"literal_string \"No stake to withdraw\""}],"id":3197,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3718:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3202,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3718:42:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3203,"nodeType":"ExpressionStatement","src":"3718:42:5"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint48","typeString":"uint48"},"id":3208,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3205,"name":"info","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3186,"src":"3778:4:5","typeDescriptions":{"typeIdentifier":"t_struct$_DepositInfo_$3682_storage_ptr","typeString":"struct IStakeManager.DepositInfo storage pointer"}},"id":3206,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3783:12:5","memberName":"withdrawTime","nodeType":"MemberAccess","referencedDeclaration":3681,"src":"3778:17:5","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3207,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3798:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3778:21:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"6d7573742063616c6c20756e6c6f636b5374616b652829206669727374","id":3209,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3801:31:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_9973ef36bc8342d488dae231c130b6ed95bb2a62fca313f7c859e3c78149cec5","typeString":"literal_string \"must call unlockStake() first\""},"value":"must call unlockStake() first"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_9973ef36bc8342d488dae231c130b6ed95bb2a62fca313f7c859e3c78149cec5","typeString":"literal_string \"must call unlockStake() first\""}],"id":3204,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3770:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3210,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3770:63:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3211,"nodeType":"ExpressionStatement","src":"3770:63:5"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3217,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3213,"name":"info","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3186,"src":"3864:4:5","typeDescriptions":{"typeIdentifier":"t_struct$_DepositInfo_$3682_storage_ptr","typeString":"struct IStakeManager.DepositInfo storage pointer"}},"id":3214,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3869:12:5","memberName":"withdrawTime","nodeType":"MemberAccess","referencedDeclaration":3681,"src":"3864:17:5","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"id":3215,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"3885:5:5","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":3216,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3891:9:5","memberName":"timestamp","nodeType":"MemberAccess","src":"3885:15:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3864:36:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5374616b65207769746864726177616c206973206e6f7420647565","id":3218,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3914:29:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_5cd6155e73f61bccbf344f4197f14538012904bd24fa05bb30427c7f1fe55d45","typeString":"literal_string \"Stake withdrawal is not due\""},"value":"Stake withdrawal is not due"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_5cd6155e73f61bccbf344f4197f14538012904bd24fa05bb30427c7f1fe55d45","typeString":"literal_string \"Stake withdrawal is not due\""}],"id":3212,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3843:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3219,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3843:110:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3220,"nodeType":"ExpressionStatement","src":"3843:110:5"},{"expression":{"id":3225,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":3221,"name":"info","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3186,"src":"3963:4:5","typeDescriptions":{"typeIdentifier":"t_struct$_DepositInfo_$3682_storage_ptr","typeString":"struct IStakeManager.DepositInfo storage pointer"}},"id":3223,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"3968:15:5","memberName":"unstakeDelaySec","nodeType":"MemberAccess","referencedDeclaration":3679,"src":"3963:20:5","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":3224,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3986:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3963:24:5","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"id":3226,"nodeType":"ExpressionStatement","src":"3963:24:5"},{"expression":{"id":3231,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":3227,"name":"info","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3186,"src":"3997:4:5","typeDescriptions":{"typeIdentifier":"t_struct$_DepositInfo_$3682_storage_ptr","typeString":"struct IStakeManager.DepositInfo storage pointer"}},"id":3229,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"4002:12:5","memberName":"withdrawTime","nodeType":"MemberAccess","referencedDeclaration":3681,"src":"3997:17:5","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":3230,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4017:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3997:21:5","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"id":3232,"nodeType":"ExpressionStatement","src":"3997:21:5"},{"expression":{"id":3237,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":3233,"name":"info","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3186,"src":"4028:4:5","typeDescriptions":{"typeIdentifier":"t_struct$_DepositInfo_$3682_storage_ptr","typeString":"struct IStakeManager.DepositInfo storage pointer"}},"id":3235,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"4033:5:5","memberName":"stake","nodeType":"MemberAccess","referencedDeclaration":3677,"src":"4028:10:5","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":3236,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4041:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4028:14:5","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"id":3238,"nodeType":"ExpressionStatement","src":"4028:14:5"},{"eventCall":{"arguments":[{"expression":{"id":3240,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4072:3:5","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3241,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4076:6:5","memberName":"sender","nodeType":"MemberAccess","src":"4072:10:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3242,"name":"withdrawAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3181,"src":"4084:15:5","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},{"id":3243,"name":"stake","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3193,"src":"4101:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address_payable","typeString":"address payable"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3239,"name":"StakeWithdrawn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3671,"src":"4057:14:5","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":3244,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4057:50:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3245,"nodeType":"EmitStatement","src":"4052:55:5"},{"assignments":[3247,null],"declarations":[{"constant":false,"id":3247,"mutability":"mutable","name":"success","nameLocation":"4123:7:5","nodeType":"VariableDeclaration","scope":3260,"src":"4118:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3246,"name":"bool","nodeType":"ElementaryTypeName","src":"4118:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},null],"id":3254,"initialValue":{"arguments":[{"hexValue":"","id":3252,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4171:2:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"id":3248,"name":"withdrawAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3181,"src":"4136:15:5","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":3249,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4152:4:5","memberName":"call","nodeType":"MemberAccess","src":"4136:20:5","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":3251,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":3250,"name":"stake","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3193,"src":"4164:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"4136:34:5","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":3253,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4136:38:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"4117:57:5"},{"expression":{"arguments":[{"id":3256,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3247,"src":"4192:7:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"6661696c656420746f207769746864726177207374616b65","id":3257,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4201:26:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_1dfdcaaacbfb01ed2a280d66b545f88db6fa18ccf502cb079b76e190a3a0227b","typeString":"literal_string \"failed to withdraw stake\""},"value":"failed to withdraw stake"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_1dfdcaaacbfb01ed2a280d66b545f88db6fa18ccf502cb079b76e190a3a0227b","typeString":"literal_string \"failed to withdraw stake\""}],"id":3255,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4184:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3258,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4184:44:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3259,"nodeType":"ExpressionStatement","src":"4184:44:5"}]},"documentation":{"id":3179,"nodeType":"StructuredDocumentation","src":"3351:194:5","text":" withdraw from the (unlocked) stake.\n must first call unlockStake and wait for the unstakeDelay to pass\n @param withdrawAddress the address to send withdrawn value."},"functionSelector":"c23a5cea","id":3261,"implemented":true,"kind":"function","modifiers":[],"name":"withdrawStake","nameLocation":"3559:13:5","nodeType":"FunctionDefinition","parameters":{"id":3182,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3181,"mutability":"mutable","name":"withdrawAddress","nameLocation":"3589:15:5","nodeType":"VariableDeclaration","scope":3261,"src":"3573:31:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":3180,"name":"address","nodeType":"ElementaryTypeName","src":"3573:15:5","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"}],"src":"3572:33:5"},"returnParameters":{"id":3183,"nodeType":"ParameterList","parameters":[],"src":"3615:0:5"},"scope":3320,"src":"3550:685:5","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"baseFunctions":[3734],"body":{"id":3318,"nodeType":"Block","src":"4519:398:5","statements":[{"assignments":[3271],"declarations":[{"constant":false,"id":3271,"mutability":"mutable","name":"info","nameLocation":"4549:4:5","nodeType":"VariableDeclaration","scope":3318,"src":"4529:24:5","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_DepositInfo_$3682_storage_ptr","typeString":"struct IStakeManager.DepositInfo"},"typeName":{"id":3270,"nodeType":"UserDefinedTypeName","pathNode":{"id":3269,"name":"DepositInfo","nameLocations":["4529:11:5"],"nodeType":"IdentifierPath","referencedDeclaration":3682,"src":"4529:11:5"},"referencedDeclaration":3682,"src":"4529:11:5","typeDescriptions":{"typeIdentifier":"t_struct$_DepositInfo_$3682_storage_ptr","typeString":"struct IStakeManager.DepositInfo"}},"visibility":"internal"}],"id":3276,"initialValue":{"baseExpression":{"id":3272,"name":"deposits","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2907,"src":"4556:8:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_DepositInfo_$3682_storage_$","typeString":"mapping(address => struct IStakeManager.DepositInfo storage ref)"}},"id":3275,"indexExpression":{"expression":{"id":3273,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4565:3:5","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3274,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4569:6:5","memberName":"sender","nodeType":"MemberAccess","src":"4565:10:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4556:20:5","typeDescriptions":{"typeIdentifier":"t_struct$_DepositInfo_$3682_storage","typeString":"struct IStakeManager.DepositInfo storage ref"}},"nodeType":"VariableDeclarationStatement","src":"4529:47:5"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3281,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3278,"name":"withdrawAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3266,"src":"4594:14:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"id":3279,"name":"info","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3271,"src":"4612:4:5","typeDescriptions":{"typeIdentifier":"t_struct$_DepositInfo_$3682_storage_ptr","typeString":"struct IStakeManager.DepositInfo storage pointer"}},"id":3280,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4617:7:5","memberName":"deposit","nodeType":"MemberAccess","referencedDeclaration":3673,"src":"4612:12:5","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"src":"4594:30:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"576974686472617720616d6f756e7420746f6f206c61726765","id":3282,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4626:27:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_0c1f958f466ebe53086ccef34937001c8a0d9f200320ab480bde36d46a3c6178","typeString":"literal_string \"Withdraw amount too large\""},"value":"Withdraw amount too large"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_0c1f958f466ebe53086ccef34937001c8a0d9f200320ab480bde36d46a3c6178","typeString":"literal_string \"Withdraw amount too large\""}],"id":3277,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4586:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3283,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4586:68:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3284,"nodeType":"ExpressionStatement","src":"4586:68:5"},{"expression":{"id":3295,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":3285,"name":"info","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3271,"src":"4664:4:5","typeDescriptions":{"typeIdentifier":"t_struct$_DepositInfo_$3682_storage_ptr","typeString":"struct IStakeManager.DepositInfo storage pointer"}},"id":3287,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"4669:7:5","memberName":"deposit","nodeType":"MemberAccess","referencedDeclaration":3673,"src":"4664:12:5","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3293,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3290,"name":"info","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3271,"src":"4687:4:5","typeDescriptions":{"typeIdentifier":"t_struct$_DepositInfo_$3682_storage_ptr","typeString":"struct IStakeManager.DepositInfo storage pointer"}},"id":3291,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4692:7:5","memberName":"deposit","nodeType":"MemberAccess","referencedDeclaration":3673,"src":"4687:12:5","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":3292,"name":"withdrawAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3266,"src":"4702:14:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4687:29:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3289,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4679:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"},"typeName":{"id":3288,"name":"uint112","nodeType":"ElementaryTypeName","src":"4679:7:5","typeDescriptions":{}}},"id":3294,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4679:38:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"src":"4664:53:5","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"id":3296,"nodeType":"ExpressionStatement","src":"4664:53:5"},{"eventCall":{"arguments":[{"expression":{"id":3298,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4742:3:5","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3299,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4746:6:5","memberName":"sender","nodeType":"MemberAccess","src":"4742:10:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3300,"name":"withdrawAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3264,"src":"4754:15:5","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},{"id":3301,"name":"withdrawAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3266,"src":"4771:14:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address_payable","typeString":"address payable"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3297,"name":"Withdrawn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3647,"src":"4732:9:5","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":3302,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4732:54:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3303,"nodeType":"EmitStatement","src":"4727:59:5"},{"assignments":[3305,null],"declarations":[{"constant":false,"id":3305,"mutability":"mutable","name":"success","nameLocation":"4802:7:5","nodeType":"VariableDeclaration","scope":3318,"src":"4797:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3304,"name":"bool","nodeType":"ElementaryTypeName","src":"4797:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},null],"id":3312,"initialValue":{"arguments":[{"hexValue":"","id":3310,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4859:2:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"id":3306,"name":"withdrawAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3264,"src":"4815:15:5","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":3307,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4831:4:5","memberName":"call","nodeType":"MemberAccess","src":"4815:20:5","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":3309,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":3308,"name":"withdrawAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3266,"src":"4843:14:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"4815:43:5","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":3311,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4815:47:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"4796:66:5"},{"expression":{"arguments":[{"id":3314,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3305,"src":"4880:7:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"6661696c656420746f207769746864726177","id":3315,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4889:20:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_a34ed1abbfa8a2aea109afd35a4e04f6c52ffb62d3a545e3e3e4f2d894ca1e41","typeString":"literal_string \"failed to withdraw\""},"value":"failed to withdraw"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_a34ed1abbfa8a2aea109afd35a4e04f6c52ffb62d3a545e3e3e4f2d894ca1e41","typeString":"literal_string \"failed to withdraw\""}],"id":3313,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4872:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3316,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4872:38:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3317,"nodeType":"ExpressionStatement","src":"4872:38:5"}]},"documentation":{"id":3262,"nodeType":"StructuredDocumentation","src":"4241:165:5","text":" withdraw from the deposit.\n @param withdrawAddress the address to send withdrawn value.\n @param withdrawAmount the amount to withdraw."},"functionSelector":"205c2878","id":3319,"implemented":true,"kind":"function","modifiers":[],"name":"withdrawTo","nameLocation":"4420:10:5","nodeType":"FunctionDefinition","parameters":{"id":3267,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3264,"mutability":"mutable","name":"withdrawAddress","nameLocation":"4456:15:5","nodeType":"VariableDeclaration","scope":3319,"src":"4440:31:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":3263,"name":"address","nodeType":"ElementaryTypeName","src":"4440:15:5","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"},{"constant":false,"id":3266,"mutability":"mutable","name":"withdrawAmount","nameLocation":"4489:14:5","nodeType":"VariableDeclaration","scope":3319,"src":"4481:22:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3265,"name":"uint256","nodeType":"ElementaryTypeName","src":"4481:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4430:79:5"},"returnParameters":{"id":3268,"nodeType":"ParameterList","parameters":[],"src":"4519:0:5"},"scope":3320,"src":"4411:506:5","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":3321,"src":"398:4521:5","usedErrors":[]}],"src":"41:4879:5"}},"contracts/smart-contract-wallet/aa-4337/interfaces/IAccount.sol":{"id":6,"ast":{"absolutePath":"contracts/smart-contract-wallet/aa-4337/interfaces/IAccount.sol","exportedSymbols":{"IAccount":[3338],"UserOperation":[3762]},"id":3339,"license":"GPL-3.0","nodeType":"SourceUnit","nodes":[{"id":3322,"literals":["solidity","0.8",".17"],"nodeType":"PragmaDirective","src":"36:23:6"},{"absolutePath":"contracts/smart-contract-wallet/aa-4337/interfaces/UserOperation.sol","file":"./UserOperation.sol","id":3324,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3339,"sourceUnit":3933,"src":"61:50:6","symbolAliases":[{"foreign":{"id":3323,"name":"UserOperation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3762,"src":"69:13:6","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"IAccount","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":3338,"linearizedBaseContracts":[3338],"name":"IAccount","nameLocation":"123:8:6","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":3325,"nodeType":"StructuredDocumentation","src":"138:1861:6","text":" Validate user's signature and nonce\n the entryPoint will make the call to the recipient only if this validation call returns successfully.\n signature failure should be reported by returning SIG_VALIDATION_FAILED (1).\n This allows making a \"simulation call\" without a valid signature\n Other failures (e.g. nonce mismatch, or invalid signature format) should still revert to signal failure.\n @dev Must validate caller is the entryPoint.\n      Must validate the signature and nonce\n @param userOp the operation that is about to be executed.\n @param userOpHash hash of the user's request data. can be used as the basis for signature.\n @param missingAccountFunds missing funds on the account's deposit in the entrypoint.\n      This is the minimum amount to transfer to the sender(entryPoint) to be able to make the call.\n      The excess is left as a deposit in the entrypoint, for future calls.\n      can be withdrawn anytime using \"entryPoint.withdrawTo()\"\n      In case there is a paymaster in the request (or the current deposit is high enough), this value will be zero.\n @return validationData packaged ValidationData structure. use `_packValidationData` and `_unpackValidationData` to encode and decode\n      <20-byte> sigAuthorizer - 0 for valid signature, 1 to mark signature failure,\n         otherwise, an address of an \"authorizer\" contract.\n      <6-byte> validUntil - last timestamp this operation is valid. 0 for \"indefinite\"\n      <6-byte> validAfter - first timestamp this operation is valid\n      If an account doesn't use time-range, it is enough to return SIG_VALIDATION_FAILED value (1) for signature failure.\n      Note that the validation code cannot use block.timestamp (or block.number) directly."},"functionSelector":"3a871cdd","id":3337,"implemented":false,"kind":"function","modifiers":[],"name":"validateUserOp","nameLocation":"2013:14:6","nodeType":"FunctionDefinition","parameters":{"id":3333,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3328,"mutability":"mutable","name":"userOp","nameLocation":"2060:6:6","nodeType":"VariableDeclaration","scope":3337,"src":"2037:29:6","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$3762_calldata_ptr","typeString":"struct UserOperation"},"typeName":{"id":3327,"nodeType":"UserDefinedTypeName","pathNode":{"id":3326,"name":"UserOperation","nameLocations":["2037:13:6"],"nodeType":"IdentifierPath","referencedDeclaration":3762,"src":"2037:13:6"},"referencedDeclaration":3762,"src":"2037:13:6","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$3762_storage_ptr","typeString":"struct UserOperation"}},"visibility":"internal"},{"constant":false,"id":3330,"mutability":"mutable","name":"userOpHash","nameLocation":"2084:10:6","nodeType":"VariableDeclaration","scope":3337,"src":"2076:18:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3329,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2076:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3332,"mutability":"mutable","name":"missingAccountFunds","nameLocation":"2112:19:6","nodeType":"VariableDeclaration","scope":3337,"src":"2104:27:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3331,"name":"uint256","nodeType":"ElementaryTypeName","src":"2104:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2027:110:6"},"returnParameters":{"id":3336,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3335,"mutability":"mutable","name":"validationData","nameLocation":"2164:14:6","nodeType":"VariableDeclaration","scope":3337,"src":"2156:22:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3334,"name":"uint256","nodeType":"ElementaryTypeName","src":"2156:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2155:24:6"},"scope":3338,"src":"2004:176:6","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":3339,"src":"113:2069:6","usedErrors":[]}],"src":"36:2147:6"}},"contracts/smart-contract-wallet/aa-4337/interfaces/IAggregator.sol":{"id":7,"ast":{"absolutePath":"contracts/smart-contract-wallet/aa-4337/interfaces/IAggregator.sol","exportedSymbols":{"IAggregator":[3372],"UserOperation":[3762],"UserOperationLib":[3932],"calldataKeccak":[2755]},"id":3373,"license":"GPL-3.0","nodeType":"SourceUnit","nodes":[{"id":3340,"literals":["solidity","0.8",".17"],"nodeType":"PragmaDirective","src":"36:23:7"},{"absolutePath":"contracts/smart-contract-wallet/aa-4337/interfaces/UserOperation.sol","file":"./UserOperation.sol","id":3341,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3373,"sourceUnit":3933,"src":"61:29:7","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"IAggregator","contractDependencies":[],"contractKind":"interface","documentation":{"id":3342,"nodeType":"StructuredDocumentation","src":"92:43:7","text":" Aggregated Signatures validator."},"fullyImplemented":false,"id":3372,"linearizedBaseContracts":[3372],"name":"IAggregator","nameLocation":"146:11:7","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":3343,"nodeType":"StructuredDocumentation","src":"164:136:7","text":" validate aggregated signature.\n revert if the aggregated signature does not match the given list of operations."},"functionSelector":"e3563a4f","id":3352,"implemented":false,"kind":"function","modifiers":[],"name":"validateSignatures","nameLocation":"314:18:7","nodeType":"FunctionDefinition","parameters":{"id":3350,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3347,"mutability":"mutable","name":"userOps","nameLocation":"367:7:7","nodeType":"VariableDeclaration","scope":3352,"src":"342:32:7","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_UserOperation_$3762_calldata_ptr_$dyn_calldata_ptr","typeString":"struct UserOperation[]"},"typeName":{"baseType":{"id":3345,"nodeType":"UserDefinedTypeName","pathNode":{"id":3344,"name":"UserOperation","nameLocations":["342:13:7"],"nodeType":"IdentifierPath","referencedDeclaration":3762,"src":"342:13:7"},"referencedDeclaration":3762,"src":"342:13:7","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$3762_storage_ptr","typeString":"struct UserOperation"}},"id":3346,"nodeType":"ArrayTypeName","src":"342:15:7","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_UserOperation_$3762_storage_$dyn_storage_ptr","typeString":"struct UserOperation[]"}},"visibility":"internal"},{"constant":false,"id":3349,"mutability":"mutable","name":"signature","nameLocation":"399:9:7","nodeType":"VariableDeclaration","scope":3352,"src":"384:24:7","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":3348,"name":"bytes","nodeType":"ElementaryTypeName","src":"384:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"332:82:7"},"returnParameters":{"id":3351,"nodeType":"ParameterList","parameters":[],"src":"428:0:7"},"scope":3372,"src":"305:124:7","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":3353,"nodeType":"StructuredDocumentation","src":"435:576:7","text":" validate signature of a single userOp\n This method is should be called by bundler after EntryPoint.simulateValidation() returns (reverts) with ValidationResultWithAggregation\n First it validates the signature over the userOp. Then it returns data to be used when creating the handleOps.\n @param userOp the userOperation received from the user.\n @return sigForUserOp the value to put into the signature field of the userOp when calling handleOps.\n    (usually empty, unless account and aggregator support some kind of \"multisig\""},"functionSelector":"64c530cd","id":3361,"implemented":false,"kind":"function","modifiers":[],"name":"validateUserOpSignature","nameLocation":"1025:23:7","nodeType":"FunctionDefinition","parameters":{"id":3357,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3356,"mutability":"mutable","name":"userOp","nameLocation":"1081:6:7","nodeType":"VariableDeclaration","scope":3361,"src":"1058:29:7","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$3762_calldata_ptr","typeString":"struct UserOperation"},"typeName":{"id":3355,"nodeType":"UserDefinedTypeName","pathNode":{"id":3354,"name":"UserOperation","nameLocations":["1058:13:7"],"nodeType":"IdentifierPath","referencedDeclaration":3762,"src":"1058:13:7"},"referencedDeclaration":3762,"src":"1058:13:7","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$3762_storage_ptr","typeString":"struct UserOperation"}},"visibility":"internal"}],"src":"1048:45:7"},"returnParameters":{"id":3360,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3359,"mutability":"mutable","name":"sigForUserOp","nameLocation":"1130:12:7","nodeType":"VariableDeclaration","scope":3361,"src":"1117:25:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3358,"name":"bytes","nodeType":"ElementaryTypeName","src":"1117:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1116:27:7"},"scope":3372,"src":"1016:128:7","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":3362,"nodeType":"StructuredDocumentation","src":"1150:368:7","text":" aggregate multiple signatures into a single value.\n This method is called off-chain to calculate the signature to pass with handleOps()\n bundler MAY use optimized custom code perform this aggregation\n @param userOps array of UserOperations to collect the signatures from.\n @return aggregatedSignature the aggregated signature"},"functionSelector":"275e2d79","id":3371,"implemented":false,"kind":"function","modifiers":[],"name":"aggregateSignatures","nameLocation":"1532:19:7","nodeType":"FunctionDefinition","parameters":{"id":3367,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3366,"mutability":"mutable","name":"userOps","nameLocation":"1586:7:7","nodeType":"VariableDeclaration","scope":3371,"src":"1561:32:7","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_UserOperation_$3762_calldata_ptr_$dyn_calldata_ptr","typeString":"struct UserOperation[]"},"typeName":{"baseType":{"id":3364,"nodeType":"UserDefinedTypeName","pathNode":{"id":3363,"name":"UserOperation","nameLocations":["1561:13:7"],"nodeType":"IdentifierPath","referencedDeclaration":3762,"src":"1561:13:7"},"referencedDeclaration":3762,"src":"1561:13:7","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$3762_storage_ptr","typeString":"struct UserOperation"}},"id":3365,"nodeType":"ArrayTypeName","src":"1561:15:7","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_UserOperation_$3762_storage_$dyn_storage_ptr","typeString":"struct UserOperation[]"}},"visibility":"internal"}],"src":"1551:48:7"},"returnParameters":{"id":3370,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3369,"mutability":"mutable","name":"aggregatedSignature","nameLocation":"1636:19:7","nodeType":"VariableDeclaration","scope":3371,"src":"1623:32:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3368,"name":"bytes","nodeType":"ElementaryTypeName","src":"1623:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1622:34:7"},"scope":3372,"src":"1523:134:7","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":3373,"src":"136:1523:7","usedErrors":[]}],"src":"36:1624:7"}},"contracts/smart-contract-wallet/aa-4337/interfaces/IEntryPoint.sol":{"id":8,"ast":{"absolutePath":"contracts/smart-contract-wallet/aa-4337/interfaces/IEntryPoint.sol","exportedSymbols":{"IAggregator":[3372],"IEntryPoint":[3576],"INonceManager":[3595],"IStakeManager":[3735],"UserOperation":[3762],"UserOperationLib":[3932],"calldataKeccak":[2755]},"id":3577,"license":"GPL-3.0","nodeType":"SourceUnit","nodes":[{"id":3374,"literals":["solidity","0.8",".17"],"nodeType":"PragmaDirective","src":"163:23:8"},{"absolutePath":"contracts/smart-contract-wallet/aa-4337/interfaces/UserOperation.sol","file":"./UserOperation.sol","id":3375,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3577,"sourceUnit":3933,"src":"310:29:8","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/smart-contract-wallet/aa-4337/interfaces/IStakeManager.sol","file":"./IStakeManager.sol","id":3376,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3577,"sourceUnit":3736,"src":"340:29:8","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/smart-contract-wallet/aa-4337/interfaces/IAggregator.sol","file":"./IAggregator.sol","id":3377,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3577,"sourceUnit":3373,"src":"370:27:8","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/smart-contract-wallet/aa-4337/interfaces/INonceManager.sol","file":"./INonceManager.sol","id":3378,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3577,"sourceUnit":3596,"src":"398:29:8","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":3379,"name":"IStakeManager","nameLocations":["454:13:8"],"nodeType":"IdentifierPath","referencedDeclaration":3735,"src":"454:13:8"},"id":3380,"nodeType":"InheritanceSpecifier","src":"454:13:8"},{"baseName":{"id":3381,"name":"INonceManager","nameLocations":["469:13:8"],"nodeType":"IdentifierPath","referencedDeclaration":3595,"src":"469:13:8"},"id":3382,"nodeType":"InheritanceSpecifier","src":"469:13:8"}],"canonicalName":"IEntryPoint","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":3576,"linearizedBaseContracts":[3576,3595,3735],"name":"IEntryPoint","nameLocation":"439:11:8","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"eventSelector":"49628fd1471006c1482da88028e9ce4dbb080b815c9b0344d39e5a8e6ec1419f","id":3398,"name":"UserOperationEvent","nameLocation":"1189:18:8","nodeType":"EventDefinition","parameters":{"id":3397,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3384,"indexed":true,"mutability":"mutable","name":"userOpHash","nameLocation":"1233:10:8","nodeType":"VariableDeclaration","scope":3398,"src":"1217:26:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3383,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1217:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3386,"indexed":true,"mutability":"mutable","name":"sender","nameLocation":"1269:6:8","nodeType":"VariableDeclaration","scope":3398,"src":"1253:22:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3385,"name":"address","nodeType":"ElementaryTypeName","src":"1253:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3388,"indexed":true,"mutability":"mutable","name":"paymaster","nameLocation":"1301:9:8","nodeType":"VariableDeclaration","scope":3398,"src":"1285:25:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3387,"name":"address","nodeType":"ElementaryTypeName","src":"1285:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3390,"indexed":false,"mutability":"mutable","name":"nonce","nameLocation":"1328:5:8","nodeType":"VariableDeclaration","scope":3398,"src":"1320:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3389,"name":"uint256","nodeType":"ElementaryTypeName","src":"1320:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3392,"indexed":false,"mutability":"mutable","name":"success","nameLocation":"1348:7:8","nodeType":"VariableDeclaration","scope":3398,"src":"1343:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3391,"name":"bool","nodeType":"ElementaryTypeName","src":"1343:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3394,"indexed":false,"mutability":"mutable","name":"actualGasCost","nameLocation":"1373:13:8","nodeType":"VariableDeclaration","scope":3398,"src":"1365:21:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3393,"name":"uint256","nodeType":"ElementaryTypeName","src":"1365:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3396,"indexed":false,"mutability":"mutable","name":"actualGasUsed","nameLocation":"1404:13:8","nodeType":"VariableDeclaration","scope":3398,"src":"1396:21:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3395,"name":"uint256","nodeType":"ElementaryTypeName","src":"1396:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1207:216:8"},"src":"1183:241:8"},{"anonymous":false,"documentation":{"id":3399,"nodeType":"StructuredDocumentation","src":"1430:333:8","text":" account \"sender\" was deployed.\n @param userOpHash the userOp that deployed this account. UserOperationEvent will follow.\n @param sender the account that is deployed\n @param factory the factory used to deploy this account (in the initCode)\n @param paymaster the paymaster used by this UserOp"},"eventSelector":"d51a9c61267aa6196961883ecf5ff2da6619c37dac0fa92122513fb32c032d2d","id":3409,"name":"AccountDeployed","nameLocation":"1774:15:8","nodeType":"EventDefinition","parameters":{"id":3408,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3401,"indexed":true,"mutability":"mutable","name":"userOpHash","nameLocation":"1815:10:8","nodeType":"VariableDeclaration","scope":3409,"src":"1799:26:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3400,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1799:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3403,"indexed":true,"mutability":"mutable","name":"sender","nameLocation":"1851:6:8","nodeType":"VariableDeclaration","scope":3409,"src":"1835:22:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3402,"name":"address","nodeType":"ElementaryTypeName","src":"1835:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3405,"indexed":false,"mutability":"mutable","name":"factory","nameLocation":"1875:7:8","nodeType":"VariableDeclaration","scope":3409,"src":"1867:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3404,"name":"address","nodeType":"ElementaryTypeName","src":"1867:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3407,"indexed":false,"mutability":"mutable","name":"paymaster","nameLocation":"1900:9:8","nodeType":"VariableDeclaration","scope":3409,"src":"1892:17:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3406,"name":"address","nodeType":"ElementaryTypeName","src":"1892:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1789:126:8"},"src":"1768:148:8"},{"anonymous":false,"documentation":{"id":3410,"nodeType":"StructuredDocumentation","src":"1922:337:8","text":" An event emitted if the UserOperation \"callData\" reverted with non-zero length\n @param userOpHash the request unique identifier.\n @param sender the sender of this request\n @param nonce the nonce used in the request\n @param revertReason - the return bytes from the (reverted) call to \"callData\"."},"eventSelector":"1c4fada7374c0a9ee8841fc38afe82932dc0f8e69012e927f061a8bae611a201","id":3420,"name":"UserOperationRevertReason","nameLocation":"2270:25:8","nodeType":"EventDefinition","parameters":{"id":3419,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3412,"indexed":true,"mutability":"mutable","name":"userOpHash","nameLocation":"2321:10:8","nodeType":"VariableDeclaration","scope":3420,"src":"2305:26:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3411,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2305:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3414,"indexed":true,"mutability":"mutable","name":"sender","nameLocation":"2357:6:8","nodeType":"VariableDeclaration","scope":3420,"src":"2341:22:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3413,"name":"address","nodeType":"ElementaryTypeName","src":"2341:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3416,"indexed":false,"mutability":"mutable","name":"nonce","nameLocation":"2381:5:8","nodeType":"VariableDeclaration","scope":3420,"src":"2373:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3415,"name":"uint256","nodeType":"ElementaryTypeName","src":"2373:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3418,"indexed":false,"mutability":"mutable","name":"revertReason","nameLocation":"2402:12:8","nodeType":"VariableDeclaration","scope":3420,"src":"2396:18:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3417,"name":"bytes","nodeType":"ElementaryTypeName","src":"2396:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2295:125:8"},"src":"2264:157:8"},{"anonymous":false,"documentation":{"id":3421,"nodeType":"StructuredDocumentation","src":"2427:158:8","text":" an event emitted by handleOps(), before starting the execution loop.\n any event emitted before this event, is part of the validation."},"eventSelector":"bb47ee3e183a558b1a2ff0874b079f3fc5478b7454eacf2bfc5af2ff5878f972","id":3423,"name":"BeforeExecution","nameLocation":"2596:15:8","nodeType":"EventDefinition","parameters":{"id":3422,"nodeType":"ParameterList","parameters":[],"src":"2611:2:8"},"src":"2590:24:8"},{"anonymous":false,"documentation":{"id":3424,"nodeType":"StructuredDocumentation","src":"2620:101:8","text":" signature aggregator used by the following UserOperationEvents within this bundle."},"eventSelector":"575ff3acadd5ab348fe1855e217e0f3678f8d767d7494c9f9fefbee2e17cca4d","id":3428,"name":"SignatureAggregatorChanged","nameLocation":"2732:26:8","nodeType":"EventDefinition","parameters":{"id":3427,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3426,"indexed":true,"mutability":"mutable","name":"aggregator","nameLocation":"2775:10:8","nodeType":"VariableDeclaration","scope":3428,"src":"2759:26:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3425,"name":"address","nodeType":"ElementaryTypeName","src":"2759:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2758:28:8"},"src":"2726:61:8"},{"documentation":{"id":3429,"nodeType":"StructuredDocumentation","src":"2793:756:8","text":" a custom revert error of handleOps, to identify the offending op.\n  NOTE: if simulateValidation passes successfully, there should be no reason for handleOps to fail on it.\n  @param opIndex - index into the array of ops to the failed one (in simulateValidation, this is always zero)\n  @param reason - revert reason\n      The string starts with a unique code \"AAmn\", where \"m\" is \"1\" for factory, \"2\" for account and \"3\" for paymaster issues,\n      so a failure can be attributed to the correct entity.\n   Should be caught in off-chain handleOps simulation and not happen on-chain.\n   Useful for mitigating DoS attempts against batchers or for troubleshooting of factory/account/paymaster reverts."},"errorSelector":"220266b6","id":3435,"name":"FailedOp","nameLocation":"3560:8:8","nodeType":"ErrorDefinition","parameters":{"id":3434,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3431,"mutability":"mutable","name":"opIndex","nameLocation":"3577:7:8","nodeType":"VariableDeclaration","scope":3435,"src":"3569:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3430,"name":"uint256","nodeType":"ElementaryTypeName","src":"3569:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3433,"mutability":"mutable","name":"reason","nameLocation":"3593:6:8","nodeType":"VariableDeclaration","scope":3435,"src":"3586:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3432,"name":"string","nodeType":"ElementaryTypeName","src":"3586:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3568:32:8"},"src":"3554:47:8"},{"documentation":{"id":3436,"nodeType":"StructuredDocumentation","src":"3607:114:8","text":" error case when a signature aggregator fails to verify the aggregated signature it had created."},"errorSelector":"86a9f750","id":3440,"name":"SignatureValidationFailed","nameLocation":"3732:25:8","nodeType":"ErrorDefinition","parameters":{"id":3439,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3438,"mutability":"mutable","name":"aggregator","nameLocation":"3766:10:8","nodeType":"VariableDeclaration","scope":3440,"src":"3758:18:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3437,"name":"address","nodeType":"ElementaryTypeName","src":"3758:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3757:20:8"},"src":"3726:52:8"},{"documentation":{"id":3441,"nodeType":"StructuredDocumentation","src":"3784:327:8","text":" Successful result from simulateValidation.\n @param returnInfo gas and time-range returned values\n @param senderInfo stake information about the sender\n @param factoryInfo stake information about the factory (if any)\n @param paymasterInfo stake information about the paymaster (if any)"},"errorSelector":"e0cff05f","id":3455,"name":"ValidationResult","nameLocation":"4122:16:8","nodeType":"ErrorDefinition","parameters":{"id":3454,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3444,"mutability":"mutable","name":"returnInfo","nameLocation":"4159:10:8","nodeType":"VariableDeclaration","scope":3455,"src":"4148:21:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_ReturnInfo_$3552_memory_ptr","typeString":"struct IEntryPoint.ReturnInfo"},"typeName":{"id":3443,"nodeType":"UserDefinedTypeName","pathNode":{"id":3442,"name":"ReturnInfo","nameLocations":["4148:10:8"],"nodeType":"IdentifierPath","referencedDeclaration":3552,"src":"4148:10:8"},"referencedDeclaration":3552,"src":"4148:10:8","typeDescriptions":{"typeIdentifier":"t_struct$_ReturnInfo_$3552_storage_ptr","typeString":"struct IEntryPoint.ReturnInfo"}},"visibility":"internal"},{"constant":false,"id":3447,"mutability":"mutable","name":"senderInfo","nameLocation":"4189:10:8","nodeType":"VariableDeclaration","scope":3455,"src":"4179:20:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_StakeInfo_$3687_memory_ptr","typeString":"struct IStakeManager.StakeInfo"},"typeName":{"id":3446,"nodeType":"UserDefinedTypeName","pathNode":{"id":3445,"name":"StakeInfo","nameLocations":["4179:9:8"],"nodeType":"IdentifierPath","referencedDeclaration":3687,"src":"4179:9:8"},"referencedDeclaration":3687,"src":"4179:9:8","typeDescriptions":{"typeIdentifier":"t_struct$_StakeInfo_$3687_storage_ptr","typeString":"struct IStakeManager.StakeInfo"}},"visibility":"internal"},{"constant":false,"id":3450,"mutability":"mutable","name":"factoryInfo","nameLocation":"4219:11:8","nodeType":"VariableDeclaration","scope":3455,"src":"4209:21:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_StakeInfo_$3687_memory_ptr","typeString":"struct IStakeManager.StakeInfo"},"typeName":{"id":3449,"nodeType":"UserDefinedTypeName","pathNode":{"id":3448,"name":"StakeInfo","nameLocations":["4209:9:8"],"nodeType":"IdentifierPath","referencedDeclaration":3687,"src":"4209:9:8"},"referencedDeclaration":3687,"src":"4209:9:8","typeDescriptions":{"typeIdentifier":"t_struct$_StakeInfo_$3687_storage_ptr","typeString":"struct IStakeManager.StakeInfo"}},"visibility":"internal"},{"constant":false,"id":3453,"mutability":"mutable","name":"paymasterInfo","nameLocation":"4250:13:8","nodeType":"VariableDeclaration","scope":3455,"src":"4240:23:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_StakeInfo_$3687_memory_ptr","typeString":"struct IStakeManager.StakeInfo"},"typeName":{"id":3452,"nodeType":"UserDefinedTypeName","pathNode":{"id":3451,"name":"StakeInfo","nameLocations":["4240:9:8"],"nodeType":"IdentifierPath","referencedDeclaration":3687,"src":"4240:9:8"},"referencedDeclaration":3687,"src":"4240:9:8","typeDescriptions":{"typeIdentifier":"t_struct$_StakeInfo_$3687_storage_ptr","typeString":"struct IStakeManager.StakeInfo"}},"visibility":"internal"}],"src":"4138:131:8"},"src":"4116:154:8"},{"documentation":{"id":3456,"nodeType":"StructuredDocumentation","src":"4276:561:8","text":" Successful result from simulateValidation, if the account returns a signature aggregator\n @param returnInfo gas and time-range returned values\n @param senderInfo stake information about the sender\n @param factoryInfo stake information about the factory (if any)\n @param paymasterInfo stake information about the paymaster (if any)\n @param aggregatorInfo signature aggregation info (if the account requires signature aggregator)\n      bundler MUST use it to verify the signature, or reject the UserOperation"},"errorSelector":"faecb4e4","id":3473,"name":"ValidationResultWithAggregation","nameLocation":"4848:31:8","nodeType":"ErrorDefinition","parameters":{"id":3472,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3459,"mutability":"mutable","name":"returnInfo","nameLocation":"4900:10:8","nodeType":"VariableDeclaration","scope":3473,"src":"4889:21:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_ReturnInfo_$3552_memory_ptr","typeString":"struct IEntryPoint.ReturnInfo"},"typeName":{"id":3458,"nodeType":"UserDefinedTypeName","pathNode":{"id":3457,"name":"ReturnInfo","nameLocations":["4889:10:8"],"nodeType":"IdentifierPath","referencedDeclaration":3552,"src":"4889:10:8"},"referencedDeclaration":3552,"src":"4889:10:8","typeDescriptions":{"typeIdentifier":"t_struct$_ReturnInfo_$3552_storage_ptr","typeString":"struct IEntryPoint.ReturnInfo"}},"visibility":"internal"},{"constant":false,"id":3462,"mutability":"mutable","name":"senderInfo","nameLocation":"4930:10:8","nodeType":"VariableDeclaration","scope":3473,"src":"4920:20:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_StakeInfo_$3687_memory_ptr","typeString":"struct IStakeManager.StakeInfo"},"typeName":{"id":3461,"nodeType":"UserDefinedTypeName","pathNode":{"id":3460,"name":"StakeInfo","nameLocations":["4920:9:8"],"nodeType":"IdentifierPath","referencedDeclaration":3687,"src":"4920:9:8"},"referencedDeclaration":3687,"src":"4920:9:8","typeDescriptions":{"typeIdentifier":"t_struct$_StakeInfo_$3687_storage_ptr","typeString":"struct IStakeManager.StakeInfo"}},"visibility":"internal"},{"constant":false,"id":3465,"mutability":"mutable","name":"factoryInfo","nameLocation":"4960:11:8","nodeType":"VariableDeclaration","scope":3473,"src":"4950:21:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_StakeInfo_$3687_memory_ptr","typeString":"struct IStakeManager.StakeInfo"},"typeName":{"id":3464,"nodeType":"UserDefinedTypeName","pathNode":{"id":3463,"name":"StakeInfo","nameLocations":["4950:9:8"],"nodeType":"IdentifierPath","referencedDeclaration":3687,"src":"4950:9:8"},"referencedDeclaration":3687,"src":"4950:9:8","typeDescriptions":{"typeIdentifier":"t_struct$_StakeInfo_$3687_storage_ptr","typeString":"struct IStakeManager.StakeInfo"}},"visibility":"internal"},{"constant":false,"id":3468,"mutability":"mutable","name":"paymasterInfo","nameLocation":"4991:13:8","nodeType":"VariableDeclaration","scope":3473,"src":"4981:23:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_StakeInfo_$3687_memory_ptr","typeString":"struct IStakeManager.StakeInfo"},"typeName":{"id":3467,"nodeType":"UserDefinedTypeName","pathNode":{"id":3466,"name":"StakeInfo","nameLocations":["4981:9:8"],"nodeType":"IdentifierPath","referencedDeclaration":3687,"src":"4981:9:8"},"referencedDeclaration":3687,"src":"4981:9:8","typeDescriptions":{"typeIdentifier":"t_struct$_StakeInfo_$3687_storage_ptr","typeString":"struct IStakeManager.StakeInfo"}},"visibility":"internal"},{"constant":false,"id":3471,"mutability":"mutable","name":"aggregatorInfo","nameLocation":"5034:14:8","nodeType":"VariableDeclaration","scope":3473,"src":"5014:34:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_AggregatorStakeInfo_$3558_memory_ptr","typeString":"struct IEntryPoint.AggregatorStakeInfo"},"typeName":{"id":3470,"nodeType":"UserDefinedTypeName","pathNode":{"id":3469,"name":"AggregatorStakeInfo","nameLocations":["5014:19:8"],"nodeType":"IdentifierPath","referencedDeclaration":3558,"src":"5014:19:8"},"referencedDeclaration":3558,"src":"5014:19:8","typeDescriptions":{"typeIdentifier":"t_struct$_AggregatorStakeInfo_$3558_storage_ptr","typeString":"struct IEntryPoint.AggregatorStakeInfo"}},"visibility":"internal"}],"src":"4879:175:8"},"src":"4842:213:8"},{"documentation":{"id":3474,"nodeType":"StructuredDocumentation","src":"5061:51:8","text":" return value of getSenderAddress"},"errorSelector":"6ca7b806","id":3478,"name":"SenderAddressResult","nameLocation":"5123:19:8","nodeType":"ErrorDefinition","parameters":{"id":3477,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3476,"mutability":"mutable","name":"sender","nameLocation":"5151:6:8","nodeType":"VariableDeclaration","scope":3478,"src":"5143:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3475,"name":"address","nodeType":"ElementaryTypeName","src":"5143:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5142:16:8"},"src":"5117:42:8"},{"documentation":{"id":3479,"nodeType":"StructuredDocumentation","src":"5165:51:8","text":" return value of simulateHandleOp"},"errorSelector":"8b7ac980","id":3493,"name":"ExecutionResult","nameLocation":"5227:15:8","nodeType":"ErrorDefinition","parameters":{"id":3492,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3481,"mutability":"mutable","name":"preOpGas","nameLocation":"5260:8:8","nodeType":"VariableDeclaration","scope":3493,"src":"5252:16:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3480,"name":"uint256","nodeType":"ElementaryTypeName","src":"5252:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3483,"mutability":"mutable","name":"paid","nameLocation":"5286:4:8","nodeType":"VariableDeclaration","scope":3493,"src":"5278:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3482,"name":"uint256","nodeType":"ElementaryTypeName","src":"5278:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3485,"mutability":"mutable","name":"validAfter","nameLocation":"5307:10:8","nodeType":"VariableDeclaration","scope":3493,"src":"5300:17:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":3484,"name":"uint48","nodeType":"ElementaryTypeName","src":"5300:6:8","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"},{"constant":false,"id":3487,"mutability":"mutable","name":"validUntil","nameLocation":"5334:10:8","nodeType":"VariableDeclaration","scope":3493,"src":"5327:17:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":3486,"name":"uint48","nodeType":"ElementaryTypeName","src":"5327:6:8","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"},{"constant":false,"id":3489,"mutability":"mutable","name":"targetSuccess","nameLocation":"5359:13:8","nodeType":"VariableDeclaration","scope":3493,"src":"5354:18:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3488,"name":"bool","nodeType":"ElementaryTypeName","src":"5354:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3491,"mutability":"mutable","name":"targetResult","nameLocation":"5388:12:8","nodeType":"VariableDeclaration","scope":3493,"src":"5382:18:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3490,"name":"bytes","nodeType":"ElementaryTypeName","src":"5382:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5242:164:8"},"src":"5221:186:8"},{"canonicalName":"IEntryPoint.UserOpsPerAggregator","id":3503,"members":[{"constant":false,"id":3497,"mutability":"mutable","name":"userOps","nameLocation":"5505:7:8","nodeType":"VariableDeclaration","scope":3503,"src":"5489:23:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_UserOperation_$3762_storage_$dyn_storage_ptr","typeString":"struct UserOperation[]"},"typeName":{"baseType":{"id":3495,"nodeType":"UserDefinedTypeName","pathNode":{"id":3494,"name":"UserOperation","nameLocations":["5489:13:8"],"nodeType":"IdentifierPath","referencedDeclaration":3762,"src":"5489:13:8"},"referencedDeclaration":3762,"src":"5489:13:8","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$3762_storage_ptr","typeString":"struct UserOperation"}},"id":3496,"nodeType":"ArrayTypeName","src":"5489:15:8","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_UserOperation_$3762_storage_$dyn_storage_ptr","typeString":"struct UserOperation[]"}},"visibility":"internal"},{"constant":false,"id":3500,"mutability":"mutable","name":"aggregator","nameLocation":"5564:10:8","nodeType":"VariableDeclaration","scope":3503,"src":"5552:22:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IAggregator_$3372","typeString":"contract IAggregator"},"typeName":{"id":3499,"nodeType":"UserDefinedTypeName","pathNode":{"id":3498,"name":"IAggregator","nameLocations":["5552:11:8"],"nodeType":"IdentifierPath","referencedDeclaration":3372,"src":"5552:11:8"},"referencedDeclaration":3372,"src":"5552:11:8","typeDescriptions":{"typeIdentifier":"t_contract$_IAggregator_$3372","typeString":"contract IAggregator"}},"visibility":"internal"},{"constant":false,"id":3502,"mutability":"mutable","name":"signature","nameLocation":"5622:9:8","nodeType":"VariableDeclaration","scope":3503,"src":"5616:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":3501,"name":"bytes","nodeType":"ElementaryTypeName","src":"5616:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"name":"UserOpsPerAggregator","nameLocation":"5458:20:8","nodeType":"StructDefinition","scope":3576,"src":"5451:187:8","visibility":"public"},{"documentation":{"id":3504,"nodeType":"StructuredDocumentation","src":"5644:368:8","text":" Execute a batch of UserOperation.\n no signature aggregator is used.\n if any account requires an aggregator (that is, it returned an aggregator when\n performing simulateValidation), then handleAggregatedOps() must be used instead.\n @param ops the operations to execute\n @param beneficiary the address to receive the fees"},"functionSelector":"1fad948c","id":3513,"implemented":false,"kind":"function","modifiers":[],"name":"handleOps","nameLocation":"6026:9:8","nodeType":"FunctionDefinition","parameters":{"id":3511,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3508,"mutability":"mutable","name":"ops","nameLocation":"6070:3:8","nodeType":"VariableDeclaration","scope":3513,"src":"6045:28:8","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_UserOperation_$3762_calldata_ptr_$dyn_calldata_ptr","typeString":"struct UserOperation[]"},"typeName":{"baseType":{"id":3506,"nodeType":"UserDefinedTypeName","pathNode":{"id":3505,"name":"UserOperation","nameLocations":["6045:13:8"],"nodeType":"IdentifierPath","referencedDeclaration":3762,"src":"6045:13:8"},"referencedDeclaration":3762,"src":"6045:13:8","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$3762_storage_ptr","typeString":"struct UserOperation"}},"id":3507,"nodeType":"ArrayTypeName","src":"6045:15:8","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_UserOperation_$3762_storage_$dyn_storage_ptr","typeString":"struct UserOperation[]"}},"visibility":"internal"},{"constant":false,"id":3510,"mutability":"mutable","name":"beneficiary","nameLocation":"6099:11:8","nodeType":"VariableDeclaration","scope":3513,"src":"6083:27:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":3509,"name":"address","nodeType":"ElementaryTypeName","src":"6083:15:8","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"}],"src":"6035:81:8"},"returnParameters":{"id":3512,"nodeType":"ParameterList","parameters":[],"src":"6133:0:8"},"scope":3576,"src":"6017:117:8","stateMutability":"payable","virtual":false,"visibility":"external"},{"documentation":{"id":3514,"nodeType":"StructuredDocumentation","src":"6140:249:8","text":" Execute a batch of UserOperation with Aggregators\n @param opsPerAggregator the operations to execute, grouped by aggregator (or address(0) for no-aggregator accounts)\n @param beneficiary the address to receive the fees"},"functionSelector":"4b1d7cf5","id":3523,"implemented":false,"kind":"function","modifiers":[],"name":"handleAggregatedOps","nameLocation":"6403:19:8","nodeType":"FunctionDefinition","parameters":{"id":3521,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3518,"mutability":"mutable","name":"opsPerAggregator","nameLocation":"6464:16:8","nodeType":"VariableDeclaration","scope":3523,"src":"6432:48:8","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_UserOpsPerAggregator_$3503_calldata_ptr_$dyn_calldata_ptr","typeString":"struct IEntryPoint.UserOpsPerAggregator[]"},"typeName":{"baseType":{"id":3516,"nodeType":"UserDefinedTypeName","pathNode":{"id":3515,"name":"UserOpsPerAggregator","nameLocations":["6432:20:8"],"nodeType":"IdentifierPath","referencedDeclaration":3503,"src":"6432:20:8"},"referencedDeclaration":3503,"src":"6432:20:8","typeDescriptions":{"typeIdentifier":"t_struct$_UserOpsPerAggregator_$3503_storage_ptr","typeString":"struct IEntryPoint.UserOpsPerAggregator"}},"id":3517,"nodeType":"ArrayTypeName","src":"6432:22:8","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_UserOpsPerAggregator_$3503_storage_$dyn_storage_ptr","typeString":"struct IEntryPoint.UserOpsPerAggregator[]"}},"visibility":"internal"},{"constant":false,"id":3520,"mutability":"mutable","name":"beneficiary","nameLocation":"6506:11:8","nodeType":"VariableDeclaration","scope":3523,"src":"6490:27:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":3519,"name":"address","nodeType":"ElementaryTypeName","src":"6490:15:8","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"}],"src":"6422:101:8"},"returnParameters":{"id":3522,"nodeType":"ParameterList","parameters":[],"src":"6532:0:8"},"scope":3576,"src":"6394:139:8","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":3524,"nodeType":"StructuredDocumentation","src":"6539:197:8","text":" generate a request Id - unique identifier for this request.\n the request ID is a hash over the content of the userOp (except the signature), the entrypoint and the chainid."},"functionSelector":"a6193531","id":3532,"implemented":false,"kind":"function","modifiers":[],"name":"getUserOpHash","nameLocation":"6750:13:8","nodeType":"FunctionDefinition","parameters":{"id":3528,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3527,"mutability":"mutable","name":"userOp","nameLocation":"6796:6:8","nodeType":"VariableDeclaration","scope":3532,"src":"6773:29:8","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$3762_calldata_ptr","typeString":"struct UserOperation"},"typeName":{"id":3526,"nodeType":"UserDefinedTypeName","pathNode":{"id":3525,"name":"UserOperation","nameLocations":["6773:13:8"],"nodeType":"IdentifierPath","referencedDeclaration":3762,"src":"6773:13:8"},"referencedDeclaration":3762,"src":"6773:13:8","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$3762_storage_ptr","typeString":"struct UserOperation"}},"visibility":"internal"}],"src":"6763:45:8"},"returnParameters":{"id":3531,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3530,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3532,"src":"6832:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3529,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6832:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"6831:9:8"},"scope":3576,"src":"6741:100:8","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":3533,"nodeType":"StructuredDocumentation","src":"6847:398:8","text":" Simulate a call to account.validateUserOp and paymaster.validatePaymasterUserOp.\n @dev this method always revert. Successful result is ValidationResult error. other errors are failures.\n @dev The node must also verify it doesn't use banned opcodes, and that it doesn't reference storage outside the account's data.\n @param userOp the user operation to validate."},"functionSelector":"ee219423","id":3539,"implemented":false,"kind":"function","modifiers":[],"name":"simulateValidation","nameLocation":"7259:18:8","nodeType":"FunctionDefinition","parameters":{"id":3537,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3536,"mutability":"mutable","name":"userOp","nameLocation":"7301:6:8","nodeType":"VariableDeclaration","scope":3539,"src":"7278:29:8","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$3762_calldata_ptr","typeString":"struct UserOperation"},"typeName":{"id":3535,"nodeType":"UserDefinedTypeName","pathNode":{"id":3534,"name":"UserOperation","nameLocations":["7278:13:8"],"nodeType":"IdentifierPath","referencedDeclaration":3762,"src":"7278:13:8"},"referencedDeclaration":3762,"src":"7278:13:8","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$3762_storage_ptr","typeString":"struct UserOperation"}},"visibility":"internal"}],"src":"7277:31:8"},"returnParameters":{"id":3538,"nodeType":"ParameterList","parameters":[],"src":"7317:0:8"},"scope":3576,"src":"7250:68:8","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"canonicalName":"IEntryPoint.ReturnInfo","id":3552,"members":[{"constant":false,"id":3541,"mutability":"mutable","name":"preOpGas","nameLocation":"7953:8:8","nodeType":"VariableDeclaration","scope":3552,"src":"7945:16:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3540,"name":"uint256","nodeType":"ElementaryTypeName","src":"7945:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3543,"mutability":"mutable","name":"prefund","nameLocation":"7979:7:8","nodeType":"VariableDeclaration","scope":3552,"src":"7971:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3542,"name":"uint256","nodeType":"ElementaryTypeName","src":"7971:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3545,"mutability":"mutable","name":"sigFailed","nameLocation":"8001:9:8","nodeType":"VariableDeclaration","scope":3552,"src":"7996:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3544,"name":"bool","nodeType":"ElementaryTypeName","src":"7996:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3547,"mutability":"mutable","name":"validAfter","nameLocation":"8027:10:8","nodeType":"VariableDeclaration","scope":3552,"src":"8020:17:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":3546,"name":"uint48","nodeType":"ElementaryTypeName","src":"8020:6:8","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"},{"constant":false,"id":3549,"mutability":"mutable","name":"validUntil","nameLocation":"8054:10:8","nodeType":"VariableDeclaration","scope":3552,"src":"8047:17:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":3548,"name":"uint48","nodeType":"ElementaryTypeName","src":"8047:6:8","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"},{"constant":false,"id":3551,"mutability":"mutable","name":"paymasterContext","nameLocation":"8080:16:8","nodeType":"VariableDeclaration","scope":3552,"src":"8074:22:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":3550,"name":"bytes","nodeType":"ElementaryTypeName","src":"8074:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"name":"ReturnInfo","nameLocation":"7924:10:8","nodeType":"StructDefinition","scope":3576,"src":"7917:186:8","visibility":"public"},{"canonicalName":"IEntryPoint.AggregatorStakeInfo","id":3558,"members":[{"constant":false,"id":3554,"mutability":"mutable","name":"aggregator","nameLocation":"8283:10:8","nodeType":"VariableDeclaration","scope":3558,"src":"8275:18:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3553,"name":"address","nodeType":"ElementaryTypeName","src":"8275:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3557,"mutability":"mutable","name":"stakeInfo","nameLocation":"8313:9:8","nodeType":"VariableDeclaration","scope":3558,"src":"8303:19:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_StakeInfo_$3687_storage_ptr","typeString":"struct IStakeManager.StakeInfo"},"typeName":{"id":3556,"nodeType":"UserDefinedTypeName","pathNode":{"id":3555,"name":"StakeInfo","nameLocations":["8303:9:8"],"nodeType":"IdentifierPath","referencedDeclaration":3687,"src":"8303:9:8"},"referencedDeclaration":3687,"src":"8303:9:8","typeDescriptions":{"typeIdentifier":"t_struct$_StakeInfo_$3687_storage_ptr","typeString":"struct IStakeManager.StakeInfo"}},"visibility":"internal"}],"name":"AggregatorStakeInfo","nameLocation":"8245:19:8","nodeType":"StructDefinition","scope":3576,"src":"8238:91:8","visibility":"public"},{"documentation":{"id":3559,"nodeType":"StructuredDocumentation","src":"8335:337:8","text":" Get counterfactual sender address.\n  Calculate the sender contract address that will be generated by the initCode and salt in the UserOperation.\n this method always revert, and returns the address in SenderAddressResult error\n @param initCode the constructor code to be passed into the UserOperation."},"functionSelector":"9b249f69","id":3564,"implemented":false,"kind":"function","modifiers":[],"name":"getSenderAddress","nameLocation":"8686:16:8","nodeType":"FunctionDefinition","parameters":{"id":3562,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3561,"mutability":"mutable","name":"initCode","nameLocation":"8716:8:8","nodeType":"VariableDeclaration","scope":3564,"src":"8703:21:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3560,"name":"bytes","nodeType":"ElementaryTypeName","src":"8703:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"8702:23:8"},"returnParameters":{"id":3563,"nodeType":"ParameterList","parameters":[],"src":"8734:0:8"},"scope":3576,"src":"8677:58:8","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":3565,"nodeType":"StructuredDocumentation","src":"8741:847:8","text":" simulate full execution of a UserOperation (including both validation and target execution)\n this method will always revert with \"ExecutionResult\".\n it performs full validation of the UserOperation, but ignores signature error.\n an optional target address is called after the userop succeeds, and its value is returned\n (before the entire call is reverted)\n Note that in order to collect the the success/failure of the target call, it must be executed\n with trace enabled to track the emitted events.\n @param op the UserOperation to simulate\n @param target if nonzero, a target address to call after userop simulation. If called, the targetSuccess and targetResult\n        are set to the return from that call.\n @param targetCallData callData to pass to target address"},"functionSelector":"d6383f94","id":3575,"implemented":false,"kind":"function","modifiers":[],"name":"simulateHandleOp","nameLocation":"9602:16:8","nodeType":"FunctionDefinition","parameters":{"id":3573,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3568,"mutability":"mutable","name":"op","nameLocation":"9651:2:8","nodeType":"VariableDeclaration","scope":3575,"src":"9628:25:8","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$3762_calldata_ptr","typeString":"struct UserOperation"},"typeName":{"id":3567,"nodeType":"UserDefinedTypeName","pathNode":{"id":3566,"name":"UserOperation","nameLocations":["9628:13:8"],"nodeType":"IdentifierPath","referencedDeclaration":3762,"src":"9628:13:8"},"referencedDeclaration":3762,"src":"9628:13:8","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$3762_storage_ptr","typeString":"struct UserOperation"}},"visibility":"internal"},{"constant":false,"id":3570,"mutability":"mutable","name":"target","nameLocation":"9671:6:8","nodeType":"VariableDeclaration","scope":3575,"src":"9663:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3569,"name":"address","nodeType":"ElementaryTypeName","src":"9663:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3572,"mutability":"mutable","name":"targetCallData","nameLocation":"9702:14:8","nodeType":"VariableDeclaration","scope":3575,"src":"9687:29:8","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":3571,"name":"bytes","nodeType":"ElementaryTypeName","src":"9687:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"9618:104:8"},"returnParameters":{"id":3574,"nodeType":"ParameterList","parameters":[],"src":"9731:0:8"},"scope":3576,"src":"9593:139:8","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":3577,"src":"429:9305:8","usedErrors":[3435,3440,3455,3473,3478,3493]}],"src":"163:9572:8"}},"contracts/smart-contract-wallet/aa-4337/interfaces/INonceManager.sol":{"id":9,"ast":{"absolutePath":"contracts/smart-contract-wallet/aa-4337/interfaces/INonceManager.sol","exportedSymbols":{"INonceManager":[3595]},"id":3596,"license":"GPL-3.0","nodeType":"SourceUnit","nodes":[{"id":3578,"literals":["solidity","0.8",".17"],"nodeType":"PragmaDirective","src":"36:23:9"},{"abstract":false,"baseContracts":[],"canonicalName":"INonceManager","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":3595,"linearizedBaseContracts":[3595],"name":"INonceManager","nameLocation":"71:13:9","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":3579,"nodeType":"StructuredDocumentation","src":"91:416:9","text":" Return the next nonce for this sender.\n Within a given key, the nonce values are sequenced (starting with zero, and incremented by one on each userop)\n But UserOp with different keys can come with arbitrary order.\n @param sender the account address\n @param key the high 192 bit of the nonce\n @return nonce a full nonce to pass for next UserOp with this sender."},"functionSelector":"35567e1a","id":3588,"implemented":false,"kind":"function","modifiers":[],"name":"getNonce","nameLocation":"521:8:9","nodeType":"FunctionDefinition","parameters":{"id":3584,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3581,"mutability":"mutable","name":"sender","nameLocation":"547:6:9","nodeType":"VariableDeclaration","scope":3588,"src":"539:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3580,"name":"address","nodeType":"ElementaryTypeName","src":"539:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3583,"mutability":"mutable","name":"key","nameLocation":"571:3:9","nodeType":"VariableDeclaration","scope":3588,"src":"563:11:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"},"typeName":{"id":3582,"name":"uint192","nodeType":"ElementaryTypeName","src":"563:7:9","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"visibility":"internal"}],"src":"529:51:9"},"returnParameters":{"id":3587,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3586,"mutability":"mutable","name":"nonce","nameLocation":"612:5:9","nodeType":"VariableDeclaration","scope":3588,"src":"604:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3585,"name":"uint256","nodeType":"ElementaryTypeName","src":"604:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"603:15:9"},"scope":3595,"src":"512:107:9","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":3589,"nodeType":"StructuredDocumentation","src":"625:449:9","text":" Manually increment the nonce of the sender.\n This method is exposed just for completeness..\n Account does NOT need to call it, neither during validation, nor elsewhere,\n as the EntryPoint will update the nonce regardless.\n Possible use-case is call it with various keys to \"initialize\" their nonces to one, so that future\n UserOperations will not pay extra for the first transaction with a given key."},"functionSelector":"0bd28e3b","id":3594,"implemented":false,"kind":"function","modifiers":[],"name":"incrementNonce","nameLocation":"1088:14:9","nodeType":"FunctionDefinition","parameters":{"id":3592,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3591,"mutability":"mutable","name":"key","nameLocation":"1111:3:9","nodeType":"VariableDeclaration","scope":3594,"src":"1103:11:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"},"typeName":{"id":3590,"name":"uint192","nodeType":"ElementaryTypeName","src":"1103:7:9","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"visibility":"internal"}],"src":"1102:13:9"},"returnParameters":{"id":3593,"nodeType":"ParameterList","parameters":[],"src":"1124:0:9"},"scope":3595,"src":"1079:46:9","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":3596,"src":"61:1066:9","usedErrors":[]}],"src":"36:1092:9"}},"contracts/smart-contract-wallet/aa-4337/interfaces/IPaymaster.sol":{"id":10,"ast":{"absolutePath":"contracts/smart-contract-wallet/aa-4337/interfaces/IPaymaster.sol","exportedSymbols":{"IPaymaster":[3630],"UserOperation":[3762],"UserOperationLib":[3932],"calldataKeccak":[2755]},"id":3631,"license":"GPL-3.0","nodeType":"SourceUnit","nodes":[{"id":3597,"literals":["solidity","0.8",".17"],"nodeType":"PragmaDirective","src":"36:23:10"},{"absolutePath":"contracts/smart-contract-wallet/aa-4337/interfaces/UserOperation.sol","file":"./UserOperation.sol","id":3598,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3631,"sourceUnit":3933,"src":"61:29:10","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"IPaymaster","contractDependencies":[],"contractKind":"interface","documentation":{"id":3599,"nodeType":"StructuredDocumentation","src":"92:216:10","text":" the interface exposed by a paymaster contract, who agrees to pay the gas for user's operations.\n a paymaster must hold a stake to cover the required entrypoint stake and also the gas for the transaction."},"fullyImplemented":false,"id":3630,"linearizedBaseContracts":[3630],"name":"IPaymaster","nameLocation":"319:10:10","nodeType":"ContractDefinition","nodes":[{"canonicalName":"IPaymaster.PostOpMode","id":3603,"members":[{"id":3600,"name":"opSucceeded","nameLocation":"362:11:10","nodeType":"EnumValue","src":"362:11:10"},{"id":3601,"name":"opReverted","nameLocation":"404:10:10","nodeType":"EnumValue","src":"404:10:10"},{"id":3602,"name":"postOpReverted","nameLocation":"471:14:10","nodeType":"EnumValue","src":"471:14:10"}],"name":"PostOpMode","nameLocation":"341:10:10","nodeType":"EnumDefinition","src":"336:269:10"},{"documentation":{"id":3604,"nodeType":"StructuredDocumentation","src":"611:1254:10","text":" payment validation: check if paymaster agrees to pay.\n Must verify sender is the entryPoint.\n Revert to reject this request.\n Note that bundlers will reject this method if it changes the state, unless the paymaster is trusted (whitelisted)\n The paymaster pre-pays using its deposit, and receive back a refund after the postOp method returns.\n @param userOp the user operation\n @param userOpHash hash of the user's request data.\n @param maxCost the maximum cost of this transaction (based on maximum gas and gas price from userOp)\n @return context value to send to a postOp\n      zero length to signify postOp is not required.\n @return validationData signature and time-range of this operation, encoded the same as the return value of validateUserOperation\n      <20-byte> sigAuthorizer - 0 for valid signature, 1 to mark signature failure,\n         otherwise, an address of an \"authorizer\" contract.\n      <6-byte> validUntil - last timestamp this operation is valid. 0 for \"indefinite\"\n      <6-byte> validAfter - first timestamp this operation is valid\n      Note that the validation code cannot use block.timestamp (or block.number) directly."},"functionSelector":"f465c77e","id":3618,"implemented":false,"kind":"function","modifiers":[],"name":"validatePaymasterUserOp","nameLocation":"1879:23:10","nodeType":"FunctionDefinition","parameters":{"id":3612,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3607,"mutability":"mutable","name":"userOp","nameLocation":"1935:6:10","nodeType":"VariableDeclaration","scope":3618,"src":"1912:29:10","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$3762_calldata_ptr","typeString":"struct UserOperation"},"typeName":{"id":3606,"nodeType":"UserDefinedTypeName","pathNode":{"id":3605,"name":"UserOperation","nameLocations":["1912:13:10"],"nodeType":"IdentifierPath","referencedDeclaration":3762,"src":"1912:13:10"},"referencedDeclaration":3762,"src":"1912:13:10","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$3762_storage_ptr","typeString":"struct UserOperation"}},"visibility":"internal"},{"constant":false,"id":3609,"mutability":"mutable","name":"userOpHash","nameLocation":"1959:10:10","nodeType":"VariableDeclaration","scope":3618,"src":"1951:18:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3608,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1951:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3611,"mutability":"mutable","name":"maxCost","nameLocation":"1987:7:10","nodeType":"VariableDeclaration","scope":3618,"src":"1979:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3610,"name":"uint256","nodeType":"ElementaryTypeName","src":"1979:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1902:98:10"},"returnParameters":{"id":3617,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3614,"mutability":"mutable","name":"context","nameLocation":"2032:7:10","nodeType":"VariableDeclaration","scope":3618,"src":"2019:20:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3613,"name":"bytes","nodeType":"ElementaryTypeName","src":"2019:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":3616,"mutability":"mutable","name":"validationData","nameLocation":"2049:14:10","nodeType":"VariableDeclaration","scope":3618,"src":"2041:22:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3615,"name":"uint256","nodeType":"ElementaryTypeName","src":"2041:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2018:46:10"},"scope":3630,"src":"1870:195:10","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":3619,"nodeType":"StructuredDocumentation","src":"2071:616:10","text":" post-operation handler.\n Must verify sender is the entryPoint\n @param mode enum with the following options:\n      opSucceeded - user operation succeeded.\n      opReverted  - user op reverted. still has to pay for gas.\n      postOpReverted - user op succeeded, but caused postOp (in mode=opSucceeded) to revert.\n                       Now this is the 2nd call, after user's op was deliberately reverted.\n @param context - the context value returned by validatePaymasterUserOp\n @param actualGasCost - actual gas used so far (without this postOp call)."},"functionSelector":"a9a23409","id":3629,"implemented":false,"kind":"function","modifiers":[],"name":"postOp","nameLocation":"2701:6:10","nodeType":"FunctionDefinition","parameters":{"id":3627,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3622,"mutability":"mutable","name":"mode","nameLocation":"2728:4:10","nodeType":"VariableDeclaration","scope":3629,"src":"2717:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_PostOpMode_$3603","typeString":"enum IPaymaster.PostOpMode"},"typeName":{"id":3621,"nodeType":"UserDefinedTypeName","pathNode":{"id":3620,"name":"PostOpMode","nameLocations":["2717:10:10"],"nodeType":"IdentifierPath","referencedDeclaration":3603,"src":"2717:10:10"},"referencedDeclaration":3603,"src":"2717:10:10","typeDescriptions":{"typeIdentifier":"t_enum$_PostOpMode_$3603","typeString":"enum IPaymaster.PostOpMode"}},"visibility":"internal"},{"constant":false,"id":3624,"mutability":"mutable","name":"context","nameLocation":"2757:7:10","nodeType":"VariableDeclaration","scope":3629,"src":"2742:22:10","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":3623,"name":"bytes","nodeType":"ElementaryTypeName","src":"2742:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":3626,"mutability":"mutable","name":"actualGasCost","nameLocation":"2782:13:10","nodeType":"VariableDeclaration","scope":3629,"src":"2774:21:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3625,"name":"uint256","nodeType":"ElementaryTypeName","src":"2774:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2707:94:10"},"returnParameters":{"id":3628,"nodeType":"ParameterList","parameters":[],"src":"2810:0:10"},"scope":3630,"src":"2692:119:10","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":3631,"src":"309:2504:10","usedErrors":[]}],"src":"36:2778:10"}},"contracts/smart-contract-wallet/aa-4337/interfaces/IStakeManager.sol":{"id":11,"ast":{"absolutePath":"contracts/smart-contract-wallet/aa-4337/interfaces/IStakeManager.sol","exportedSymbols":{"IStakeManager":[3735]},"id":3736,"license":"GPL-3.0-only","nodeType":"SourceUnit","nodes":[{"id":3632,"literals":["solidity","0.8",".17"],"nodeType":"PragmaDirective","src":"41:23:11"},{"abstract":false,"baseContracts":[],"canonicalName":"IStakeManager","contractDependencies":[],"contractKind":"interface","documentation":{"id":3633,"nodeType":"StructuredDocumentation","src":"66:211:11","text":" manage deposits and stakes.\n deposit is just a balance used to pay for UserOperations (either by a paymaster or an account)\n stake is value locked for at least \"unstakeDelay\" by the staked entity."},"fullyImplemented":false,"id":3735,"linearizedBaseContracts":[3735],"name":"IStakeManager","nameLocation":"288:13:11","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"eventSelector":"2da466a7b24304f47e87fa2e1e5a81b9831ce54fec19055ce277ca2f39ba42c4","id":3639,"name":"Deposited","nameLocation":"314:9:11","nodeType":"EventDefinition","parameters":{"id":3638,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3635,"indexed":true,"mutability":"mutable","name":"account","nameLocation":"340:7:11","nodeType":"VariableDeclaration","scope":3639,"src":"324:23:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3634,"name":"address","nodeType":"ElementaryTypeName","src":"324:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3637,"indexed":false,"mutability":"mutable","name":"totalDeposit","nameLocation":"357:12:11","nodeType":"VariableDeclaration","scope":3639,"src":"349:20:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3636,"name":"uint256","nodeType":"ElementaryTypeName","src":"349:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"323:47:11"},"src":"308:63:11"},{"anonymous":false,"eventSelector":"d1c19fbcd4551a5edfb66d43d2e337c04837afda3482b42bdf569a8fccdae5fb","id":3647,"name":"Withdrawn","nameLocation":"383:9:11","nodeType":"EventDefinition","parameters":{"id":3646,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3641,"indexed":true,"mutability":"mutable","name":"account","nameLocation":"418:7:11","nodeType":"VariableDeclaration","scope":3647,"src":"402:23:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3640,"name":"address","nodeType":"ElementaryTypeName","src":"402:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3643,"indexed":false,"mutability":"mutable","name":"withdrawAddress","nameLocation":"443:15:11","nodeType":"VariableDeclaration","scope":3647,"src":"435:23:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3642,"name":"address","nodeType":"ElementaryTypeName","src":"435:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3645,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"476:6:11","nodeType":"VariableDeclaration","scope":3647,"src":"468:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3644,"name":"uint256","nodeType":"ElementaryTypeName","src":"468:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"392:96:11"},"src":"377:112:11"},{"anonymous":false,"documentation":{"id":3648,"nodeType":"StructuredDocumentation","src":"495:52:11","text":"Emitted when stake or unstake delay are modified"},"eventSelector":"a5ae833d0bb1dcd632d98a8b70973e8516812898e19bf27b70071ebc8dc52c01","id":3656,"name":"StakeLocked","nameLocation":"558:11:11","nodeType":"EventDefinition","parameters":{"id":3655,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3650,"indexed":true,"mutability":"mutable","name":"account","nameLocation":"595:7:11","nodeType":"VariableDeclaration","scope":3656,"src":"579:23:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3649,"name":"address","nodeType":"ElementaryTypeName","src":"579:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3652,"indexed":false,"mutability":"mutable","name":"totalStaked","nameLocation":"620:11:11","nodeType":"VariableDeclaration","scope":3656,"src":"612:19:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3651,"name":"uint256","nodeType":"ElementaryTypeName","src":"612:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3654,"indexed":false,"mutability":"mutable","name":"unstakeDelaySec","nameLocation":"649:15:11","nodeType":"VariableDeclaration","scope":3656,"src":"641:23:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3653,"name":"uint256","nodeType":"ElementaryTypeName","src":"641:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"569:101:11"},"src":"552:119:11"},{"anonymous":false,"documentation":{"id":3657,"nodeType":"StructuredDocumentation","src":"677:52:11","text":"Emitted once a stake is scheduled for withdrawal"},"eventSelector":"fa9b3c14cc825c412c9ed81b3ba365a5b459439403f18829e572ed53a4180f0a","id":3663,"name":"StakeUnlocked","nameLocation":"740:13:11","nodeType":"EventDefinition","parameters":{"id":3662,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3659,"indexed":true,"mutability":"mutable","name":"account","nameLocation":"770:7:11","nodeType":"VariableDeclaration","scope":3663,"src":"754:23:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3658,"name":"address","nodeType":"ElementaryTypeName","src":"754:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3661,"indexed":false,"mutability":"mutable","name":"withdrawTime","nameLocation":"787:12:11","nodeType":"VariableDeclaration","scope":3663,"src":"779:20:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3660,"name":"uint256","nodeType":"ElementaryTypeName","src":"779:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"753:47:11"},"src":"734:67:11"},{"anonymous":false,"eventSelector":"b7c918e0e249f999e965cafeb6c664271b3f4317d296461500e71da39f0cbda3","id":3671,"name":"StakeWithdrawn","nameLocation":"813:14:11","nodeType":"EventDefinition","parameters":{"id":3670,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3665,"indexed":true,"mutability":"mutable","name":"account","nameLocation":"853:7:11","nodeType":"VariableDeclaration","scope":3671,"src":"837:23:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3664,"name":"address","nodeType":"ElementaryTypeName","src":"837:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3667,"indexed":false,"mutability":"mutable","name":"withdrawAddress","nameLocation":"878:15:11","nodeType":"VariableDeclaration","scope":3671,"src":"870:23:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3666,"name":"address","nodeType":"ElementaryTypeName","src":"870:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3669,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"911:6:11","nodeType":"VariableDeclaration","scope":3671,"src":"903:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3668,"name":"uint256","nodeType":"ElementaryTypeName","src":"903:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"827:96:11"},"src":"807:117:11"},{"canonicalName":"IStakeManager.DepositInfo","id":3682,"members":[{"constant":false,"id":3673,"mutability":"mutable","name":"deposit","nameLocation":"1604:7:11","nodeType":"VariableDeclaration","scope":3682,"src":"1596:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"},"typeName":{"id":3672,"name":"uint112","nodeType":"ElementaryTypeName","src":"1596:7:11","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"visibility":"internal"},{"constant":false,"id":3675,"mutability":"mutable","name":"staked","nameLocation":"1626:6:11","nodeType":"VariableDeclaration","scope":3682,"src":"1621:11:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3674,"name":"bool","nodeType":"ElementaryTypeName","src":"1621:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3677,"mutability":"mutable","name":"stake","nameLocation":"1650:5:11","nodeType":"VariableDeclaration","scope":3682,"src":"1642:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"},"typeName":{"id":3676,"name":"uint112","nodeType":"ElementaryTypeName","src":"1642:7:11","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"visibility":"internal"},{"constant":false,"id":3679,"mutability":"mutable","name":"unstakeDelaySec","nameLocation":"1672:15:11","nodeType":"VariableDeclaration","scope":3682,"src":"1665:22:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":3678,"name":"uint32","nodeType":"ElementaryTypeName","src":"1665:6:11","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":3681,"mutability":"mutable","name":"withdrawTime","nameLocation":"1704:12:11","nodeType":"VariableDeclaration","scope":3682,"src":"1697:19:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":3680,"name":"uint48","nodeType":"ElementaryTypeName","src":"1697:6:11","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"name":"DepositInfo","nameLocation":"1574:11:11","nodeType":"StructDefinition","scope":3735,"src":"1567:156:11","visibility":"public"},{"canonicalName":"IStakeManager.StakeInfo","id":3687,"members":[{"constant":false,"id":3684,"mutability":"mutable","name":"stake","nameLocation":"1825:5:11","nodeType":"VariableDeclaration","scope":3687,"src":"1817:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3683,"name":"uint256","nodeType":"ElementaryTypeName","src":"1817:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3686,"mutability":"mutable","name":"unstakeDelaySec","nameLocation":"1848:15:11","nodeType":"VariableDeclaration","scope":3687,"src":"1840:23:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3685,"name":"uint256","nodeType":"ElementaryTypeName","src":"1840:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"StakeInfo","nameLocation":"1797:9:11","nodeType":"StructDefinition","scope":3735,"src":"1790:80:11","visibility":"public"},{"documentation":{"id":3688,"nodeType":"StructuredDocumentation","src":"1876:60:11","text":"@return info - full deposit information of given account"},"functionSelector":"5287ce12","id":3696,"implemented":false,"kind":"function","modifiers":[],"name":"getDepositInfo","nameLocation":"1950:14:11","nodeType":"FunctionDefinition","parameters":{"id":3691,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3690,"mutability":"mutable","name":"account","nameLocation":"1982:7:11","nodeType":"VariableDeclaration","scope":3696,"src":"1974:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3689,"name":"address","nodeType":"ElementaryTypeName","src":"1974:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1964:31:11"},"returnParameters":{"id":3695,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3694,"mutability":"mutable","name":"info","nameLocation":"2038:4:11","nodeType":"VariableDeclaration","scope":3696,"src":"2019:23:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_DepositInfo_$3682_memory_ptr","typeString":"struct IStakeManager.DepositInfo"},"typeName":{"id":3693,"nodeType":"UserDefinedTypeName","pathNode":{"id":3692,"name":"DepositInfo","nameLocations":["2019:11:11"],"nodeType":"IdentifierPath","referencedDeclaration":3682,"src":"2019:11:11"},"referencedDeclaration":3682,"src":"2019:11:11","typeDescriptions":{"typeIdentifier":"t_struct$_DepositInfo_$3682_storage_ptr","typeString":"struct IStakeManager.DepositInfo"}},"visibility":"internal"}],"src":"2018:25:11"},"scope":3735,"src":"1941:103:11","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":3697,"nodeType":"StructuredDocumentation","src":"2050:56:11","text":"@return the deposit (for gas payment) of the account"},"functionSelector":"70a08231","id":3704,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"2120:9:11","nodeType":"FunctionDefinition","parameters":{"id":3700,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3699,"mutability":"mutable","name":"account","nameLocation":"2138:7:11","nodeType":"VariableDeclaration","scope":3704,"src":"2130:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3698,"name":"address","nodeType":"ElementaryTypeName","src":"2130:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2129:17:11"},"returnParameters":{"id":3703,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3702,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3704,"src":"2170:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3701,"name":"uint256","nodeType":"ElementaryTypeName","src":"2170:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2169:9:11"},"scope":3735,"src":"2111:68:11","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":3705,"nodeType":"StructuredDocumentation","src":"2185:58:11","text":" add to the deposit of the given account"},"functionSelector":"b760faf9","id":3710,"implemented":false,"kind":"function","modifiers":[],"name":"depositTo","nameLocation":"2257:9:11","nodeType":"FunctionDefinition","parameters":{"id":3708,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3707,"mutability":"mutable","name":"account","nameLocation":"2275:7:11","nodeType":"VariableDeclaration","scope":3710,"src":"2267:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3706,"name":"address","nodeType":"ElementaryTypeName","src":"2267:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2266:17:11"},"returnParameters":{"id":3709,"nodeType":"ParameterList","parameters":[],"src":"2300:0:11"},"scope":3735,"src":"2248:53:11","stateMutability":"payable","virtual":false,"visibility":"external"},{"documentation":{"id":3711,"nodeType":"StructuredDocumentation","src":"2307:201:11","text":" add to the account's stake - amount and delay\n any pending unstake is first cancelled.\n @param _unstakeDelaySec the new lock duration before the deposit can be withdrawn."},"functionSelector":"0396cb60","id":3716,"implemented":false,"kind":"function","modifiers":[],"name":"addStake","nameLocation":"2522:8:11","nodeType":"FunctionDefinition","parameters":{"id":3714,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3713,"mutability":"mutable","name":"_unstakeDelaySec","nameLocation":"2538:16:11","nodeType":"VariableDeclaration","scope":3716,"src":"2531:23:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":3712,"name":"uint32","nodeType":"ElementaryTypeName","src":"2531:6:11","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"2530:25:11"},"returnParameters":{"id":3715,"nodeType":"ParameterList","parameters":[],"src":"2572:0:11"},"scope":3735,"src":"2513:60:11","stateMutability":"payable","virtual":false,"visibility":"external"},{"documentation":{"id":3717,"nodeType":"StructuredDocumentation","src":"2579:128:11","text":" attempt to unlock the stake.\n the value can be withdrawn (using withdrawStake) after the unstake delay."},"functionSelector":"bb9fe6bf","id":3720,"implemented":false,"kind":"function","modifiers":[],"name":"unlockStake","nameLocation":"2721:11:11","nodeType":"FunctionDefinition","parameters":{"id":3718,"nodeType":"ParameterList","parameters":[],"src":"2732:2:11"},"returnParameters":{"id":3719,"nodeType":"ParameterList","parameters":[],"src":"2743:0:11"},"scope":3735,"src":"2712:32:11","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":3721,"nodeType":"StructuredDocumentation","src":"2750:194:11","text":" withdraw from the (unlocked) stake.\n must first call unlockStake and wait for the unstakeDelay to pass\n @param withdrawAddress the address to send withdrawn value."},"functionSelector":"c23a5cea","id":3726,"implemented":false,"kind":"function","modifiers":[],"name":"withdrawStake","nameLocation":"2958:13:11","nodeType":"FunctionDefinition","parameters":{"id":3724,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3723,"mutability":"mutable","name":"withdrawAddress","nameLocation":"2988:15:11","nodeType":"VariableDeclaration","scope":3726,"src":"2972:31:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":3722,"name":"address","nodeType":"ElementaryTypeName","src":"2972:15:11","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"}],"src":"2971:33:11"},"returnParameters":{"id":3725,"nodeType":"ParameterList","parameters":[],"src":"3013:0:11"},"scope":3735,"src":"2949:65:11","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":3727,"nodeType":"StructuredDocumentation","src":"3020:165:11","text":" withdraw from the deposit.\n @param withdrawAddress the address to send withdrawn value.\n @param withdrawAmount the amount to withdraw."},"functionSelector":"205c2878","id":3734,"implemented":false,"kind":"function","modifiers":[],"name":"withdrawTo","nameLocation":"3199:10:11","nodeType":"FunctionDefinition","parameters":{"id":3732,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3729,"mutability":"mutable","name":"withdrawAddress","nameLocation":"3235:15:11","nodeType":"VariableDeclaration","scope":3734,"src":"3219:31:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":3728,"name":"address","nodeType":"ElementaryTypeName","src":"3219:15:11","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"},{"constant":false,"id":3731,"mutability":"mutable","name":"withdrawAmount","nameLocation":"3268:14:11","nodeType":"VariableDeclaration","scope":3734,"src":"3260:22:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3730,"name":"uint256","nodeType":"ElementaryTypeName","src":"3260:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3209:79:11"},"returnParameters":{"id":3733,"nodeType":"ParameterList","parameters":[],"src":"3297:0:11"},"scope":3735,"src":"3190:108:11","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":3736,"src":"278:3022:11","usedErrors":[]}],"src":"41:3260:11"}},"contracts/smart-contract-wallet/aa-4337/interfaces/UserOperation.sol":{"id":12,"ast":{"absolutePath":"contracts/smart-contract-wallet/aa-4337/interfaces/UserOperation.sol","exportedSymbols":{"UserOperation":[3762],"UserOperationLib":[3932],"calldataKeccak":[2755]},"id":3933,"license":"GPL-3.0","nodeType":"SourceUnit","nodes":[{"id":3737,"literals":["solidity","0.8",".17"],"nodeType":"PragmaDirective","src":"36:23:12"},{"absolutePath":"contracts/smart-contract-wallet/aa-4337/core/Helpers.sol","file":"../core/Helpers.sol","id":3739,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3933,"sourceUnit":2756,"src":"103:51:12","symbolAliases":[{"foreign":{"id":3738,"name":"calldataKeccak","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2755,"src":"111:14:12","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"canonicalName":"UserOperation","id":3762,"members":[{"constant":false,"id":3741,"mutability":"mutable","name":"sender","nameLocation":"1183:6:12","nodeType":"VariableDeclaration","scope":3762,"src":"1175:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3740,"name":"address","nodeType":"ElementaryTypeName","src":"1175:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3743,"mutability":"mutable","name":"nonce","nameLocation":"1203:5:12","nodeType":"VariableDeclaration","scope":3762,"src":"1195:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3742,"name":"uint256","nodeType":"ElementaryTypeName","src":"1195:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3745,"mutability":"mutable","name":"initCode","nameLocation":"1220:8:12","nodeType":"VariableDeclaration","scope":3762,"src":"1214:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":3744,"name":"bytes","nodeType":"ElementaryTypeName","src":"1214:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":3747,"mutability":"mutable","name":"callData","nameLocation":"1240:8:12","nodeType":"VariableDeclaration","scope":3762,"src":"1234:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":3746,"name":"bytes","nodeType":"ElementaryTypeName","src":"1234:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":3749,"mutability":"mutable","name":"callGasLimit","nameLocation":"1262:12:12","nodeType":"VariableDeclaration","scope":3762,"src":"1254:20:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3748,"name":"uint256","nodeType":"ElementaryTypeName","src":"1254:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3751,"mutability":"mutable","name":"verificationGasLimit","nameLocation":"1288:20:12","nodeType":"VariableDeclaration","scope":3762,"src":"1280:28:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3750,"name":"uint256","nodeType":"ElementaryTypeName","src":"1280:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3753,"mutability":"mutable","name":"preVerificationGas","nameLocation":"1322:18:12","nodeType":"VariableDeclaration","scope":3762,"src":"1314:26:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3752,"name":"uint256","nodeType":"ElementaryTypeName","src":"1314:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3755,"mutability":"mutable","name":"maxFeePerGas","nameLocation":"1354:12:12","nodeType":"VariableDeclaration","scope":3762,"src":"1346:20:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3754,"name":"uint256","nodeType":"ElementaryTypeName","src":"1346:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3757,"mutability":"mutable","name":"maxPriorityFeePerGas","nameLocation":"1380:20:12","nodeType":"VariableDeclaration","scope":3762,"src":"1372:28:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3756,"name":"uint256","nodeType":"ElementaryTypeName","src":"1372:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3759,"mutability":"mutable","name":"paymasterAndData","nameLocation":"1412:16:12","nodeType":"VariableDeclaration","scope":3762,"src":"1406:22:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":3758,"name":"bytes","nodeType":"ElementaryTypeName","src":"1406:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":3761,"mutability":"mutable","name":"signature","nameLocation":"1440:9:12","nodeType":"VariableDeclaration","scope":3762,"src":"1434:15:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":3760,"name":"bytes","nodeType":"ElementaryTypeName","src":"1434:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"name":"UserOperation","nameLocation":"1155:13:12","nodeType":"StructDefinition","scope":3933,"src":"1148:304:12","visibility":"public"},{"abstract":false,"baseContracts":[],"canonicalName":"UserOperationLib","contractDependencies":[],"contractKind":"library","documentation":{"id":3763,"nodeType":"StructuredDocumentation","src":"1454:77:12","text":" Utility functions helpful when working with UserOperation structs."},"fullyImplemented":true,"id":3932,"linearizedBaseContracts":[3932],"name":"UserOperationLib","nameLocation":"1540:16:12","nodeType":"ContractDefinition","nodes":[{"body":{"id":3783,"nodeType":"Block","src":"1659:221:12","statements":[{"assignments":[3772],"declarations":[{"constant":false,"id":3772,"mutability":"mutable","name":"data","nameLocation":"1677:4:12","nodeType":"VariableDeclaration","scope":3783,"src":"1669:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3771,"name":"address","nodeType":"ElementaryTypeName","src":"1669:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":3773,"nodeType":"VariableDeclarationStatement","src":"1669:12:12"},{"AST":{"nodeType":"YulBlock","src":"1783:52:12","statements":[{"nodeType":"YulAssignment","src":"1797:28:12","value":{"arguments":[{"name":"userOp","nodeType":"YulIdentifier","src":"1818:6:12"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1805:12:12"},"nodeType":"YulFunctionCall","src":"1805:20:12"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"1797:4:12"}]}]},"evmVersion":"london","externalReferences":[{"declaration":3772,"isOffset":false,"isSlot":false,"src":"1797:4:12","valueSize":1},{"declaration":3766,"isOffset":false,"isSlot":false,"src":"1818:6:12","valueSize":1}],"id":3774,"nodeType":"InlineAssembly","src":"1774:61:12"},{"expression":{"arguments":[{"arguments":[{"id":3779,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3772,"src":"1867:4:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3778,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1859:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":3777,"name":"uint160","nodeType":"ElementaryTypeName","src":"1859:7:12","typeDescriptions":{}}},"id":3780,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1859:13:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":3776,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1851:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3775,"name":"address","nodeType":"ElementaryTypeName","src":"1851:7:12","typeDescriptions":{}}},"id":3781,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1851:22:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":3770,"id":3782,"nodeType":"Return","src":"1844:29:12"}]},"id":3784,"implemented":true,"kind":"function","modifiers":[],"name":"getSender","nameLocation":"1572:9:12","nodeType":"FunctionDefinition","parameters":{"id":3767,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3766,"mutability":"mutable","name":"userOp","nameLocation":"1614:6:12","nodeType":"VariableDeclaration","scope":3784,"src":"1591:29:12","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$3762_calldata_ptr","typeString":"struct UserOperation"},"typeName":{"id":3765,"nodeType":"UserDefinedTypeName","pathNode":{"id":3764,"name":"UserOperation","nameLocations":["1591:13:12"],"nodeType":"IdentifierPath","referencedDeclaration":3762,"src":"1591:13:12"},"referencedDeclaration":3762,"src":"1591:13:12","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$3762_storage_ptr","typeString":"struct UserOperation"}},"visibility":"internal"}],"src":"1581:45:12"},"returnParameters":{"id":3770,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3769,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3784,"src":"1650:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3768,"name":"address","nodeType":"ElementaryTypeName","src":"1650:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1649:9:12"},"scope":3932,"src":"1563:317:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3818,"nodeType":"Block","src":"2115:427:12","statements":[{"id":3817,"nodeType":"UncheckedBlock","src":"2125:411:12","statements":[{"assignments":[3793],"declarations":[{"constant":false,"id":3793,"mutability":"mutable","name":"maxFeePerGas","nameLocation":"2157:12:12","nodeType":"VariableDeclaration","scope":3817,"src":"2149:20:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3792,"name":"uint256","nodeType":"ElementaryTypeName","src":"2149:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3796,"initialValue":{"expression":{"id":3794,"name":"userOp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3787,"src":"2172:6:12","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$3762_calldata_ptr","typeString":"struct UserOperation calldata"}},"id":3795,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2179:12:12","memberName":"maxFeePerGas","nodeType":"MemberAccess","referencedDeclaration":3755,"src":"2172:19:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2149:42:12"},{"assignments":[3798],"declarations":[{"constant":false,"id":3798,"mutability":"mutable","name":"maxPriorityFeePerGas","nameLocation":"2213:20:12","nodeType":"VariableDeclaration","scope":3817,"src":"2205:28:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3797,"name":"uint256","nodeType":"ElementaryTypeName","src":"2205:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3801,"initialValue":{"expression":{"id":3799,"name":"userOp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3787,"src":"2236:6:12","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$3762_calldata_ptr","typeString":"struct UserOperation calldata"}},"id":3800,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2243:20:12","memberName":"maxPriorityFeePerGas","nodeType":"MemberAccess","referencedDeclaration":3757,"src":"2236:27:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2205:58:12"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3804,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3802,"name":"maxFeePerGas","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3793,"src":"2281:12:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":3803,"name":"maxPriorityFeePerGas","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3798,"src":"2297:20:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2281:36:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3808,"nodeType":"IfStatement","src":"2277:173:12","trueBody":{"id":3807,"nodeType":"Block","src":"2319:131:12","statements":[{"expression":{"id":3805,"name":"maxFeePerGas","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3793,"src":"2423:12:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3791,"id":3806,"nodeType":"Return","src":"2416:19:12"}]}},{"expression":{"arguments":[{"id":3810,"name":"maxFeePerGas","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3793,"src":"2474:12:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3814,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3811,"name":"maxPriorityFeePerGas","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3798,"src":"2488:20:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"expression":{"id":3812,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"2511:5:12","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":3813,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2517:7:12","memberName":"basefee","nodeType":"MemberAccess","src":"2511:13:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2488:36:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3809,"name":"min","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3931,"src":"2470:3:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":3815,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2470:55:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3791,"id":3816,"nodeType":"Return","src":"2463:62:12"}]}]},"id":3819,"implemented":true,"kind":"function","modifiers":[],"name":"gasPrice","nameLocation":"2029:8:12","nodeType":"FunctionDefinition","parameters":{"id":3788,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3787,"mutability":"mutable","name":"userOp","nameLocation":"2070:6:12","nodeType":"VariableDeclaration","scope":3819,"src":"2047:29:12","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$3762_calldata_ptr","typeString":"struct UserOperation"},"typeName":{"id":3786,"nodeType":"UserDefinedTypeName","pathNode":{"id":3785,"name":"UserOperation","nameLocations":["2047:13:12"],"nodeType":"IdentifierPath","referencedDeclaration":3762,"src":"2047:13:12"},"referencedDeclaration":3762,"src":"2047:13:12","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$3762_storage_ptr","typeString":"struct UserOperation"}},"visibility":"internal"}],"src":"2037:45:12"},"returnParameters":{"id":3791,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3790,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3819,"src":"2106:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3789,"name":"uint256","nodeType":"ElementaryTypeName","src":"2106:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2105:9:12"},"scope":3932,"src":"2020:522:12","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3898,"nodeType":"Block","src":"2648:972:12","statements":[{"assignments":[3828],"declarations":[{"constant":false,"id":3828,"mutability":"mutable","name":"sender","nameLocation":"2666:6:12","nodeType":"VariableDeclaration","scope":3898,"src":"2658:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3827,"name":"address","nodeType":"ElementaryTypeName","src":"2658:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":3832,"initialValue":{"arguments":[{"id":3830,"name":"userOp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3822,"src":"2685:6:12","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$3762_calldata_ptr","typeString":"struct UserOperation calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_UserOperation_$3762_calldata_ptr","typeString":"struct UserOperation calldata"}],"id":3829,"name":"getSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3784,"src":"2675:9:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_UserOperation_$3762_calldata_ptr_$returns$_t_address_$","typeString":"function (struct UserOperation calldata) pure returns (address)"}},"id":3831,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2675:17:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"2658:34:12"},{"assignments":[3834],"declarations":[{"constant":false,"id":3834,"mutability":"mutable","name":"nonce","nameLocation":"2710:5:12","nodeType":"VariableDeclaration","scope":3898,"src":"2702:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3833,"name":"uint256","nodeType":"ElementaryTypeName","src":"2702:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3837,"initialValue":{"expression":{"id":3835,"name":"userOp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3822,"src":"2718:6:12","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$3762_calldata_ptr","typeString":"struct UserOperation calldata"}},"id":3836,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2725:5:12","memberName":"nonce","nodeType":"MemberAccess","referencedDeclaration":3743,"src":"2718:12:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2702:28:12"},{"assignments":[3839],"declarations":[{"constant":false,"id":3839,"mutability":"mutable","name":"hashInitCode","nameLocation":"2748:12:12","nodeType":"VariableDeclaration","scope":3898,"src":"2740:20:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3838,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2740:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":3844,"initialValue":{"arguments":[{"expression":{"id":3841,"name":"userOp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3822,"src":"2778:6:12","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$3762_calldata_ptr","typeString":"struct UserOperation calldata"}},"id":3842,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2785:8:12","memberName":"initCode","nodeType":"MemberAccess","referencedDeclaration":3745,"src":"2778:15:12","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}],"id":3840,"name":"calldataKeccak","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2755,"src":"2763:14:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_calldata_ptr_$returns$_t_bytes32_$","typeString":"function (bytes calldata) pure returns (bytes32)"}},"id":3843,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2763:31:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"2740:54:12"},{"assignments":[3846],"declarations":[{"constant":false,"id":3846,"mutability":"mutable","name":"hashCallData","nameLocation":"2812:12:12","nodeType":"VariableDeclaration","scope":3898,"src":"2804:20:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3845,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2804:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":3851,"initialValue":{"arguments":[{"expression":{"id":3848,"name":"userOp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3822,"src":"2842:6:12","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$3762_calldata_ptr","typeString":"struct UserOperation calldata"}},"id":3849,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2849:8:12","memberName":"callData","nodeType":"MemberAccess","referencedDeclaration":3747,"src":"2842:15:12","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}],"id":3847,"name":"calldataKeccak","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2755,"src":"2827:14:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_calldata_ptr_$returns$_t_bytes32_$","typeString":"function (bytes calldata) pure returns (bytes32)"}},"id":3850,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2827:31:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"2804:54:12"},{"assignments":[3853],"declarations":[{"constant":false,"id":3853,"mutability":"mutable","name":"callGasLimit","nameLocation":"2876:12:12","nodeType":"VariableDeclaration","scope":3898,"src":"2868:20:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3852,"name":"uint256","nodeType":"ElementaryTypeName","src":"2868:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3856,"initialValue":{"expression":{"id":3854,"name":"userOp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3822,"src":"2891:6:12","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$3762_calldata_ptr","typeString":"struct UserOperation calldata"}},"id":3855,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2898:12:12","memberName":"callGasLimit","nodeType":"MemberAccess","referencedDeclaration":3749,"src":"2891:19:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2868:42:12"},{"assignments":[3858],"declarations":[{"constant":false,"id":3858,"mutability":"mutable","name":"verificationGasLimit","nameLocation":"2928:20:12","nodeType":"VariableDeclaration","scope":3898,"src":"2920:28:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3857,"name":"uint256","nodeType":"ElementaryTypeName","src":"2920:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3861,"initialValue":{"expression":{"id":3859,"name":"userOp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3822,"src":"2951:6:12","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$3762_calldata_ptr","typeString":"struct UserOperation calldata"}},"id":3860,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2958:20:12","memberName":"verificationGasLimit","nodeType":"MemberAccess","referencedDeclaration":3751,"src":"2951:27:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2920:58:12"},{"assignments":[3863],"declarations":[{"constant":false,"id":3863,"mutability":"mutable","name":"preVerificationGas","nameLocation":"2996:18:12","nodeType":"VariableDeclaration","scope":3898,"src":"2988:26:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3862,"name":"uint256","nodeType":"ElementaryTypeName","src":"2988:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3866,"initialValue":{"expression":{"id":3864,"name":"userOp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3822,"src":"3017:6:12","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$3762_calldata_ptr","typeString":"struct UserOperation calldata"}},"id":3865,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3024:18:12","memberName":"preVerificationGas","nodeType":"MemberAccess","referencedDeclaration":3753,"src":"3017:25:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2988:54:12"},{"assignments":[3868],"declarations":[{"constant":false,"id":3868,"mutability":"mutable","name":"maxFeePerGas","nameLocation":"3060:12:12","nodeType":"VariableDeclaration","scope":3898,"src":"3052:20:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3867,"name":"uint256","nodeType":"ElementaryTypeName","src":"3052:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3871,"initialValue":{"expression":{"id":3869,"name":"userOp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3822,"src":"3075:6:12","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$3762_calldata_ptr","typeString":"struct UserOperation calldata"}},"id":3870,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3082:12:12","memberName":"maxFeePerGas","nodeType":"MemberAccess","referencedDeclaration":3755,"src":"3075:19:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3052:42:12"},{"assignments":[3873],"declarations":[{"constant":false,"id":3873,"mutability":"mutable","name":"maxPriorityFeePerGas","nameLocation":"3112:20:12","nodeType":"VariableDeclaration","scope":3898,"src":"3104:28:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3872,"name":"uint256","nodeType":"ElementaryTypeName","src":"3104:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3876,"initialValue":{"expression":{"id":3874,"name":"userOp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3822,"src":"3135:6:12","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$3762_calldata_ptr","typeString":"struct UserOperation calldata"}},"id":3875,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3142:20:12","memberName":"maxPriorityFeePerGas","nodeType":"MemberAccess","referencedDeclaration":3757,"src":"3135:27:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3104:58:12"},{"assignments":[3878],"declarations":[{"constant":false,"id":3878,"mutability":"mutable","name":"hashPaymasterAndData","nameLocation":"3180:20:12","nodeType":"VariableDeclaration","scope":3898,"src":"3172:28:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3877,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3172:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":3883,"initialValue":{"arguments":[{"expression":{"id":3880,"name":"userOp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3822,"src":"3218:6:12","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$3762_calldata_ptr","typeString":"struct UserOperation calldata"}},"id":3881,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3225:16:12","memberName":"paymasterAndData","nodeType":"MemberAccess","referencedDeclaration":3759,"src":"3218:23:12","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}],"id":3879,"name":"calldataKeccak","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2755,"src":"3203:14:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_calldata_ptr_$returns$_t_bytes32_$","typeString":"function (bytes calldata) pure returns (bytes32)"}},"id":3882,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3203:39:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"3172:70:12"},{"expression":{"arguments":[{"id":3886,"name":"sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3828,"src":"3300:6:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3887,"name":"nonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3834,"src":"3324:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3888,"name":"hashInitCode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3839,"src":"3347:12:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3889,"name":"hashCallData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3846,"src":"3377:12:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3890,"name":"callGasLimit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3853,"src":"3407:12:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3891,"name":"verificationGasLimit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3858,"src":"3437:20:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3892,"name":"preVerificationGas","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3863,"src":"3475:18:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3893,"name":"maxFeePerGas","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3868,"src":"3511:12:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3894,"name":"maxPriorityFeePerGas","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3873,"src":"3541:20:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3895,"name":"hashPaymasterAndData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3878,"src":"3579:20:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":3884,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"3272:3:12","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":3885,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3276:6:12","memberName":"encode","nodeType":"MemberAccess","src":"3272:10:12","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":3896,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3272:341:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":3826,"id":3897,"nodeType":"Return","src":"3253:360:12"}]},"id":3899,"implemented":true,"kind":"function","modifiers":[],"name":"pack","nameLocation":"2557:4:12","nodeType":"FunctionDefinition","parameters":{"id":3823,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3822,"mutability":"mutable","name":"userOp","nameLocation":"2594:6:12","nodeType":"VariableDeclaration","scope":3899,"src":"2571:29:12","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$3762_calldata_ptr","typeString":"struct UserOperation"},"typeName":{"id":3821,"nodeType":"UserDefinedTypeName","pathNode":{"id":3820,"name":"UserOperation","nameLocations":["2571:13:12"],"nodeType":"IdentifierPath","referencedDeclaration":3762,"src":"2571:13:12"},"referencedDeclaration":3762,"src":"2571:13:12","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$3762_storage_ptr","typeString":"struct UserOperation"}},"visibility":"internal"}],"src":"2561:45:12"},"returnParameters":{"id":3826,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3825,"mutability":"mutable","name":"ret","nameLocation":"2643:3:12","nodeType":"VariableDeclaration","scope":3899,"src":"2630:16:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3824,"name":"bytes","nodeType":"ElementaryTypeName","src":"2630:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2629:18:12"},"scope":3932,"src":"2548:1072:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3913,"nodeType":"Block","src":"3717:47:12","statements":[{"expression":{"arguments":[{"arguments":[{"id":3909,"name":"userOp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3902,"src":"3749:6:12","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$3762_calldata_ptr","typeString":"struct UserOperation calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_UserOperation_$3762_calldata_ptr","typeString":"struct UserOperation calldata"}],"id":3908,"name":"pack","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3899,"src":"3744:4:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_UserOperation_$3762_calldata_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (struct UserOperation calldata) pure returns (bytes memory)"}},"id":3910,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3744:12:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3907,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"3734:9:12","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":3911,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3734:23:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":3906,"id":3912,"nodeType":"Return","src":"3727:30:12"}]},"id":3914,"implemented":true,"kind":"function","modifiers":[],"name":"hash","nameLocation":"3635:4:12","nodeType":"FunctionDefinition","parameters":{"id":3903,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3902,"mutability":"mutable","name":"userOp","nameLocation":"3672:6:12","nodeType":"VariableDeclaration","scope":3914,"src":"3649:29:12","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$3762_calldata_ptr","typeString":"struct UserOperation"},"typeName":{"id":3901,"nodeType":"UserDefinedTypeName","pathNode":{"id":3900,"name":"UserOperation","nameLocations":["3649:13:12"],"nodeType":"IdentifierPath","referencedDeclaration":3762,"src":"3649:13:12"},"referencedDeclaration":3762,"src":"3649:13:12","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$3762_storage_ptr","typeString":"struct UserOperation"}},"visibility":"internal"}],"src":"3639:45:12"},"returnParameters":{"id":3906,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3905,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3914,"src":"3708:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3904,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3708:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3707:9:12"},"scope":3932,"src":"3626:138:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3930,"nodeType":"Block","src":"3837:37:12","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3925,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3923,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3916,"src":"3854:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3924,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3918,"src":"3858:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3854:5:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":3927,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3918,"src":"3866:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3928,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"3854:13:12","trueExpression":{"id":3926,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3916,"src":"3862:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3922,"id":3929,"nodeType":"Return","src":"3847:20:12"}]},"id":3931,"implemented":true,"kind":"function","modifiers":[],"name":"min","nameLocation":"3779:3:12","nodeType":"FunctionDefinition","parameters":{"id":3919,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3916,"mutability":"mutable","name":"a","nameLocation":"3791:1:12","nodeType":"VariableDeclaration","scope":3931,"src":"3783:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3915,"name":"uint256","nodeType":"ElementaryTypeName","src":"3783:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3918,"mutability":"mutable","name":"b","nameLocation":"3802:1:12","nodeType":"VariableDeclaration","scope":3931,"src":"3794:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3917,"name":"uint256","nodeType":"ElementaryTypeName","src":"3794:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3782:22:12"},"returnParameters":{"id":3922,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3921,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3931,"src":"3828:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3920,"name":"uint256","nodeType":"ElementaryTypeName","src":"3828:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3827:9:12"},"scope":3932,"src":"3770:104:12","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":3933,"src":"1532:2344:12","usedErrors":[]}],"src":"36:3841:12"}},"contracts/smart-contract-wallet/aa-4337/test/MaliciousAccount.sol":{"id":13,"ast":{"absolutePath":"contracts/smart-contract-wallet/aa-4337/test/MaliciousAccount.sol","exportedSymbols":{"EntryPoint":[2517],"Exec":[4113],"IAccount":[3338],"IAggregator":[3372],"IEntryPoint":[3576],"INonceManager":[3595],"IPaymaster":[3630],"IStakeManager":[3735],"MaliciousAccount":[4022],"NonceManager":[2848],"ReentrancyGuard":[53],"SenderCreator":[2895],"StakeManager":[3320],"UserOperation":[3762],"UserOperationLib":[3932],"ValidationData":[2526],"_intersectTimeRange":[2670],"_packValidationData":[2707,2745],"_parseValidationData":[2585],"calldataKeccak":[2755]},"id":4023,"license":"GPL-3.0","nodeType":"SourceUnit","nodes":[{"id":3934,"literals":["solidity","0.8",".17"],"nodeType":"PragmaDirective","src":"36:23:13"},{"absolutePath":"contracts/smart-contract-wallet/aa-4337/interfaces/IAccount.sol","file":"../interfaces/IAccount.sol","id":3935,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4023,"sourceUnit":3339,"src":"60:36:13","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/smart-contract-wallet/aa-4337/interfaces/IEntryPoint.sol","file":"../interfaces/IEntryPoint.sol","id":3936,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4023,"sourceUnit":3577,"src":"97:39:13","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/smart-contract-wallet/aa-4337/core/EntryPoint.sol","file":"../core/EntryPoint.sol","id":3937,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4023,"sourceUnit":2518,"src":"137:32:13","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":3938,"name":"IAccount","nameLocations":["200:8:13"],"nodeType":"IdentifierPath","referencedDeclaration":3338,"src":"200:8:13"},"id":3939,"nodeType":"InheritanceSpecifier","src":"200:8:13"}],"canonicalName":"MaliciousAccount","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":4022,"linearizedBaseContracts":[4022,3338],"name":"MaliciousAccount","nameLocation":"180:16:13","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":3942,"mutability":"mutable","name":"ep","nameLocation":"235:2:13","nodeType":"VariableDeclaration","scope":4022,"src":"215:22:13","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IEntryPoint_$3576","typeString":"contract IEntryPoint"},"typeName":{"id":3941,"nodeType":"UserDefinedTypeName","pathNode":{"id":3940,"name":"IEntryPoint","nameLocations":["215:11:13"],"nodeType":"IdentifierPath","referencedDeclaration":3576,"src":"215:11:13"},"referencedDeclaration":3576,"src":"215:11:13","typeDescriptions":{"typeIdentifier":"t_contract$_IEntryPoint_$3576","typeString":"contract IEntryPoint"}},"visibility":"private"},{"body":{"id":3952,"nodeType":"Block","src":"281:25:13","statements":[{"expression":{"id":3950,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3948,"name":"ep","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3942,"src":"291:2:13","typeDescriptions":{"typeIdentifier":"t_contract$_IEntryPoint_$3576","typeString":"contract IEntryPoint"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3949,"name":"_ep","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3945,"src":"296:3:13","typeDescriptions":{"typeIdentifier":"t_contract$_IEntryPoint_$3576","typeString":"contract IEntryPoint"}},"src":"291:8:13","typeDescriptions":{"typeIdentifier":"t_contract$_IEntryPoint_$3576","typeString":"contract IEntryPoint"}},"id":3951,"nodeType":"ExpressionStatement","src":"291:8:13"}]},"id":3953,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":3946,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3945,"mutability":"mutable","name":"_ep","nameLocation":"268:3:13","nodeType":"VariableDeclaration","scope":3953,"src":"256:15:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IEntryPoint_$3576","typeString":"contract IEntryPoint"},"typeName":{"id":3944,"nodeType":"UserDefinedTypeName","pathNode":{"id":3943,"name":"IEntryPoint","nameLocations":["256:11:13"],"nodeType":"IdentifierPath","referencedDeclaration":3576,"src":"256:11:13"},"referencedDeclaration":3576,"src":"256:11:13","typeDescriptions":{"typeIdentifier":"t_contract$_IEntryPoint_$3576","typeString":"contract IEntryPoint"}},"visibility":"internal"}],"src":"255:17:13"},"returnParameters":{"id":3947,"nodeType":"ParameterList","parameters":[],"src":"281:0:13"},"scope":4022,"src":"244:62:13","stateMutability":"payable","virtual":false,"visibility":"public"},{"baseFunctions":[3337],"body":{"id":4020,"nodeType":"Block","src":"477:636:13","statements":[{"expression":{"arguments":[{"arguments":[{"id":3972,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"536:4:13","typeDescriptions":{"typeIdentifier":"t_contract$_MaliciousAccount_$4022","typeString":"contract MaliciousAccount"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_MaliciousAccount_$4022","typeString":"contract MaliciousAccount"}],"id":3971,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"528:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3970,"name":"address","nodeType":"ElementaryTypeName","src":"528:7:13","typeDescriptions":{}}},"id":3973,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"528:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":3965,"name":"ep","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3942,"src":"487:2:13","typeDescriptions":{"typeIdentifier":"t_contract$_IEntryPoint_$3576","typeString":"contract IEntryPoint"}},"id":3967,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"490:9:13","memberName":"depositTo","nodeType":"MemberAccess","referencedDeclaration":3710,"src":"487:12:13","typeDescriptions":{"typeIdentifier":"t_function_external_payable$_t_address_$returns$__$","typeString":"function (address) payable external"}},"id":3969,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":3968,"name":"missingAccountFunds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3960,"src":"507:19:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"487:40:13","typeDescriptions":{"typeIdentifier":"t_function_external_payable$_t_address_$returns$__$value","typeString":"function (address) payable external"}},"id":3974,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"487:55:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3975,"nodeType":"ExpressionStatement","src":"487:55:13"},{"assignments":[3977],"declarations":[{"constant":false,"id":3977,"mutability":"mutable","name":"externalBaseFee","nameLocation":"692:15:13","nodeType":"VariableDeclaration","scope":4020,"src":"684:23:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3976,"name":"uint256","nodeType":"ElementaryTypeName","src":"684:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3986,"initialValue":{"arguments":[{"expression":{"id":3980,"name":"userOp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3956,"src":"721:6:13","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$3762_calldata_ptr","typeString":"struct UserOperation calldata"}},"id":3981,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"728:9:13","memberName":"signature","nodeType":"MemberAccess","referencedDeclaration":3761,"src":"721:16:13","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},{"components":[{"id":3983,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"740:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3982,"name":"uint256","nodeType":"ElementaryTypeName","src":"740:7:13","typeDescriptions":{}}}],"id":3984,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"739:9:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"},{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"}],"expression":{"id":3978,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"710:3:13","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":3979,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"714:6:13","memberName":"decode","nodeType":"MemberAccess","src":"710:10:13","typeDescriptions":{"typeIdentifier":"t_function_abidecode_pure$__$returns$__$","typeString":"function () pure"}},"id":3985,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"710:39:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"684:65:13"},{"assignments":[3988],"declarations":[{"constant":false,"id":3988,"mutability":"mutable","name":"requiredGas","nameLocation":"767:11:13","nodeType":"VariableDeclaration","scope":4020,"src":"759:19:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3987,"name":"uint256","nodeType":"ElementaryTypeName","src":"759:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3997,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3996,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3993,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3989,"name":"userOp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3956,"src":"781:6:13","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$3762_calldata_ptr","typeString":"struct UserOperation calldata"}},"id":3990,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"788:12:13","memberName":"callGasLimit","nodeType":"MemberAccess","referencedDeclaration":3749,"src":"781:19:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"expression":{"id":3991,"name":"userOp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3956,"src":"815:6:13","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$3762_calldata_ptr","typeString":"struct UserOperation calldata"}},"id":3992,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"822:20:13","memberName":"verificationGasLimit","nodeType":"MemberAccess","referencedDeclaration":3751,"src":"815:27:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"781:61:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"expression":{"id":3994,"name":"userOp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3956,"src":"857:6:13","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$3762_calldata_ptr","typeString":"struct UserOperation calldata"}},"id":3995,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"864:18:13","memberName":"preVerificationGas","nodeType":"MemberAccess","referencedDeclaration":3753,"src":"857:25:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"781:101:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"759:123:13"},{"assignments":[3999],"declarations":[{"constant":false,"id":3999,"mutability":"mutable","name":"gasPrice","nameLocation":"900:8:13","nodeType":"VariableDeclaration","scope":4020,"src":"892:16:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3998,"name":"uint256","nodeType":"ElementaryTypeName","src":"892:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4003,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4002,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4000,"name":"missingAccountFunds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3960,"src":"911:19:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4001,"name":"requiredGas","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3988,"src":"933:11:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"911:33:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"892:52:13"},{"assignments":[4005],"declarations":[{"constant":false,"id":4005,"mutability":"mutable","name":"basefee","nameLocation":"962:7:13","nodeType":"VariableDeclaration","scope":4020,"src":"954:15:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4004,"name":"uint256","nodeType":"ElementaryTypeName","src":"954:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4010,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4009,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4006,"name":"gasPrice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3999,"src":"972:8:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"expression":{"id":4007,"name":"userOp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3956,"src":"983:6:13","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$3762_calldata_ptr","typeString":"struct UserOperation calldata"}},"id":4008,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"990:20:13","memberName":"maxPriorityFeePerGas","nodeType":"MemberAccess","referencedDeclaration":3757,"src":"983:27:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"972:38:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"954:56:13"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4014,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4012,"name":"basefee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4005,"src":"1028:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":4013,"name":"externalBaseFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3977,"src":"1039:15:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1028:26:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5265766572742061667465722066697273742076616c69646174696f6e","id":4015,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1056:31:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_c9a69fb9e86f6a594353e38515d336f45846548dd2f61998ba4ea3679ad627cf","typeString":"literal_string \"Revert after first validation\""},"value":"Revert after first validation"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_c9a69fb9e86f6a594353e38515d336f45846548dd2f61998ba4ea3679ad627cf","typeString":"literal_string \"Revert after first validation\""}],"id":4011,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1020:7:13","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4016,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1020:68:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4017,"nodeType":"ExpressionStatement","src":"1020:68:13"},{"expression":{"hexValue":"30","id":4018,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1105:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":3964,"id":4019,"nodeType":"Return","src":"1098:8:13"}]},"functionSelector":"3a871cdd","id":4021,"implemented":true,"kind":"function","modifiers":[],"name":"validateUserOp","nameLocation":"321:14:13","nodeType":"FunctionDefinition","parameters":{"id":3961,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3956,"mutability":"mutable","name":"userOp","nameLocation":"368:6:13","nodeType":"VariableDeclaration","scope":4021,"src":"345:29:13","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$3762_calldata_ptr","typeString":"struct UserOperation"},"typeName":{"id":3955,"nodeType":"UserDefinedTypeName","pathNode":{"id":3954,"name":"UserOperation","nameLocations":["345:13:13"],"nodeType":"IdentifierPath","referencedDeclaration":3762,"src":"345:13:13"},"referencedDeclaration":3762,"src":"345:13:13","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$3762_storage_ptr","typeString":"struct UserOperation"}},"visibility":"internal"},{"constant":false,"id":3958,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4021,"src":"384:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3957,"name":"bytes32","nodeType":"ElementaryTypeName","src":"384:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3960,"mutability":"mutable","name":"missingAccountFunds","nameLocation":"409:19:13","nodeType":"VariableDeclaration","scope":4021,"src":"401:27:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3959,"name":"uint256","nodeType":"ElementaryTypeName","src":"401:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"335:99:13"},"returnParameters":{"id":3964,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3963,"mutability":"mutable","name":"validationData","nameLocation":"461:14:13","nodeType":"VariableDeclaration","scope":4021,"src":"453:22:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3962,"name":"uint256","nodeType":"ElementaryTypeName","src":"453:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"452:24:13"},"scope":4022,"src":"312:801:13","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":4023,"src":"171:944:13","usedErrors":[]}],"src":"36:1080:13"}},"contracts/smart-contract-wallet/aa-4337/utils/Exec.sol":{"id":14,"ast":{"absolutePath":"contracts/smart-contract-wallet/aa-4337/utils/Exec.sol","exportedSymbols":{"Exec":[4113]},"id":4114,"license":"LGPL-3.0-only","nodeType":"SourceUnit","nodes":[{"id":4024,"literals":["solidity","0.8",".17"],"nodeType":"PragmaDirective","src":"42:23:14"},{"abstract":false,"baseContracts":[],"canonicalName":"Exec","contractDependencies":[],"contractKind":"library","documentation":{"id":4025,"nodeType":"StructuredDocumentation","src":"106:95:14","text":" Utility functions helpful when making different kinds of contract calls in Solidity."},"fullyImplemented":true,"id":4113,"linearizedBaseContracts":[4113],"name":"Exec","nameLocation":"210:4:14","nodeType":"ContractDefinition","nodes":[{"body":{"id":4039,"nodeType":"Block","src":"366:116:14","statements":[{"AST":{"nodeType":"YulBlock","src":"385:91:14","statements":[{"nodeType":"YulAssignment","src":"399:67:14","value":{"arguments":[{"name":"txGas","nodeType":"YulIdentifier","src":"415:5:14"},{"name":"to","nodeType":"YulIdentifier","src":"422:2:14"},{"name":"value","nodeType":"YulIdentifier","src":"426:5:14"},{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"437:4:14"},{"kind":"number","nodeType":"YulLiteral","src":"443:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"433:3:14"},"nodeType":"YulFunctionCall","src":"433:13:14"},{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"454:4:14"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"448:5:14"},"nodeType":"YulFunctionCall","src":"448:11:14"},{"kind":"number","nodeType":"YulLiteral","src":"461:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"464:1:14","type":"","value":"0"}],"functionName":{"name":"call","nodeType":"YulIdentifier","src":"410:4:14"},"nodeType":"YulFunctionCall","src":"410:56:14"},"variableNames":[{"name":"success","nodeType":"YulIdentifier","src":"399:7:14"}]}]},"evmVersion":"london","externalReferences":[{"declaration":4031,"isOffset":false,"isSlot":false,"src":"437:4:14","valueSize":1},{"declaration":4031,"isOffset":false,"isSlot":false,"src":"454:4:14","valueSize":1},{"declaration":4036,"isOffset":false,"isSlot":false,"src":"399:7:14","valueSize":1},{"declaration":4027,"isOffset":false,"isSlot":false,"src":"422:2:14","valueSize":1},{"declaration":4033,"isOffset":false,"isSlot":false,"src":"415:5:14","valueSize":1},{"declaration":4029,"isOffset":false,"isSlot":false,"src":"426:5:14","valueSize":1}],"id":4038,"nodeType":"InlineAssembly","src":"376:100:14"}]},"id":4040,"implemented":true,"kind":"function","modifiers":[],"name":"call","nameLocation":"230:4:14","nodeType":"FunctionDefinition","parameters":{"id":4034,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4027,"mutability":"mutable","name":"to","nameLocation":"252:2:14","nodeType":"VariableDeclaration","scope":4040,"src":"244:10:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4026,"name":"address","nodeType":"ElementaryTypeName","src":"244:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4029,"mutability":"mutable","name":"value","nameLocation":"272:5:14","nodeType":"VariableDeclaration","scope":4040,"src":"264:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4028,"name":"uint256","nodeType":"ElementaryTypeName","src":"264:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4031,"mutability":"mutable","name":"data","nameLocation":"300:4:14","nodeType":"VariableDeclaration","scope":4040,"src":"287:17:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4030,"name":"bytes","nodeType":"ElementaryTypeName","src":"287:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":4033,"mutability":"mutable","name":"txGas","nameLocation":"322:5:14","nodeType":"VariableDeclaration","scope":4040,"src":"314:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4032,"name":"uint256","nodeType":"ElementaryTypeName","src":"314:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"234:99:14"},"returnParameters":{"id":4037,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4036,"mutability":"mutable","name":"success","nameLocation":"357:7:14","nodeType":"VariableDeclaration","scope":4040,"src":"352:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4035,"name":"bool","nodeType":"ElementaryTypeName","src":"352:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"351:14:14"},"scope":4113,"src":"221:261:14","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":4052,"nodeType":"Block","src":"621:115:14","statements":[{"AST":{"nodeType":"YulBlock","src":"640:90:14","statements":[{"nodeType":"YulAssignment","src":"654:66:14","value":{"arguments":[{"name":"txGas","nodeType":"YulIdentifier","src":"676:5:14"},{"name":"to","nodeType":"YulIdentifier","src":"683:2:14"},{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"691:4:14"},{"kind":"number","nodeType":"YulLiteral","src":"697:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"687:3:14"},"nodeType":"YulFunctionCall","src":"687:13:14"},{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"708:4:14"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"702:5:14"},"nodeType":"YulFunctionCall","src":"702:11:14"},{"kind":"number","nodeType":"YulLiteral","src":"715:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"718:1:14","type":"","value":"0"}],"functionName":{"name":"staticcall","nodeType":"YulIdentifier","src":"665:10:14"},"nodeType":"YulFunctionCall","src":"665:55:14"},"variableNames":[{"name":"success","nodeType":"YulIdentifier","src":"654:7:14"}]}]},"evmVersion":"london","externalReferences":[{"declaration":4044,"isOffset":false,"isSlot":false,"src":"691:4:14","valueSize":1},{"declaration":4044,"isOffset":false,"isSlot":false,"src":"708:4:14","valueSize":1},{"declaration":4049,"isOffset":false,"isSlot":false,"src":"654:7:14","valueSize":1},{"declaration":4042,"isOffset":false,"isSlot":false,"src":"683:2:14","valueSize":1},{"declaration":4046,"isOffset":false,"isSlot":false,"src":"676:5:14","valueSize":1}],"id":4051,"nodeType":"InlineAssembly","src":"631:99:14"}]},"id":4053,"implemented":true,"kind":"function","modifiers":[],"name":"staticcall","nameLocation":"497:10:14","nodeType":"FunctionDefinition","parameters":{"id":4047,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4042,"mutability":"mutable","name":"to","nameLocation":"525:2:14","nodeType":"VariableDeclaration","scope":4053,"src":"517:10:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4041,"name":"address","nodeType":"ElementaryTypeName","src":"517:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4044,"mutability":"mutable","name":"data","nameLocation":"550:4:14","nodeType":"VariableDeclaration","scope":4053,"src":"537:17:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4043,"name":"bytes","nodeType":"ElementaryTypeName","src":"537:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":4046,"mutability":"mutable","name":"txGas","nameLocation":"572:5:14","nodeType":"VariableDeclaration","scope":4053,"src":"564:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4045,"name":"uint256","nodeType":"ElementaryTypeName","src":"564:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"507:76:14"},"returnParameters":{"id":4050,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4049,"mutability":"mutable","name":"success","nameLocation":"612:7:14","nodeType":"VariableDeclaration","scope":4053,"src":"607:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4048,"name":"bool","nodeType":"ElementaryTypeName","src":"607:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"606:14:14"},"scope":4113,"src":"488:248:14","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":4065,"nodeType":"Block","src":"872:117:14","statements":[{"AST":{"nodeType":"YulBlock","src":"891:92:14","statements":[{"nodeType":"YulAssignment","src":"905:68:14","value":{"arguments":[{"name":"txGas","nodeType":"YulIdentifier","src":"929:5:14"},{"name":"to","nodeType":"YulIdentifier","src":"936:2:14"},{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"944:4:14"},{"kind":"number","nodeType":"YulLiteral","src":"950:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"940:3:14"},"nodeType":"YulFunctionCall","src":"940:13:14"},{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"961:4:14"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"955:5:14"},"nodeType":"YulFunctionCall","src":"955:11:14"},{"kind":"number","nodeType":"YulLiteral","src":"968:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"971:1:14","type":"","value":"0"}],"functionName":{"name":"delegatecall","nodeType":"YulIdentifier","src":"916:12:14"},"nodeType":"YulFunctionCall","src":"916:57:14"},"variableNames":[{"name":"success","nodeType":"YulIdentifier","src":"905:7:14"}]}]},"evmVersion":"london","externalReferences":[{"declaration":4057,"isOffset":false,"isSlot":false,"src":"944:4:14","valueSize":1},{"declaration":4057,"isOffset":false,"isSlot":false,"src":"961:4:14","valueSize":1},{"declaration":4062,"isOffset":false,"isSlot":false,"src":"905:7:14","valueSize":1},{"declaration":4055,"isOffset":false,"isSlot":false,"src":"936:2:14","valueSize":1},{"declaration":4059,"isOffset":false,"isSlot":false,"src":"929:5:14","valueSize":1}],"id":4064,"nodeType":"InlineAssembly","src":"882:101:14"}]},"id":4066,"implemented":true,"kind":"function","modifiers":[],"name":"delegateCall","nameLocation":"751:12:14","nodeType":"FunctionDefinition","parameters":{"id":4060,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4055,"mutability":"mutable","name":"to","nameLocation":"781:2:14","nodeType":"VariableDeclaration","scope":4066,"src":"773:10:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4054,"name":"address","nodeType":"ElementaryTypeName","src":"773:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4057,"mutability":"mutable","name":"data","nameLocation":"806:4:14","nodeType":"VariableDeclaration","scope":4066,"src":"793:17:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4056,"name":"bytes","nodeType":"ElementaryTypeName","src":"793:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":4059,"mutability":"mutable","name":"txGas","nameLocation":"828:5:14","nodeType":"VariableDeclaration","scope":4066,"src":"820:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4058,"name":"uint256","nodeType":"ElementaryTypeName","src":"820:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"763:76:14"},"returnParameters":{"id":4063,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4062,"mutability":"mutable","name":"success","nameLocation":"863:7:14","nodeType":"VariableDeclaration","scope":4066,"src":"858:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4061,"name":"bool","nodeType":"ElementaryTypeName","src":"858:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"857:14:14"},"scope":4113,"src":"742:247:14","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":4074,"nodeType":"Block","src":"1152:349:14","statements":[{"AST":{"nodeType":"YulBlock","src":"1171:324:14","statements":[{"nodeType":"YulVariableDeclaration","src":"1185:27:14","value":{"arguments":[],"functionName":{"name":"returndatasize","nodeType":"YulIdentifier","src":"1196:14:14"},"nodeType":"YulFunctionCall","src":"1196:16:14"},"variables":[{"name":"len","nodeType":"YulTypedName","src":"1189:3:14","type":""}]},{"body":{"nodeType":"YulBlock","src":"1244:45:14","statements":[{"nodeType":"YulAssignment","src":"1262:13:14","value":{"name":"maxLen","nodeType":"YulIdentifier","src":"1269:6:14"},"variableNames":[{"name":"len","nodeType":"YulIdentifier","src":"1262:3:14"}]}]},"condition":{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"1231:3:14"},{"name":"maxLen","nodeType":"YulIdentifier","src":"1236:6:14"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1228:2:14"},"nodeType":"YulFunctionCall","src":"1228:15:14"},"nodeType":"YulIf","src":"1225:64:14"},{"nodeType":"YulVariableDeclaration","src":"1302:22:14","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1319:4:14","type":"","value":"0x40"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1313:5:14"},"nodeType":"YulFunctionCall","src":"1313:11:14"},"variables":[{"name":"ptr","nodeType":"YulTypedName","src":"1306:3:14","type":""}]},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1344:4:14","type":"","value":"0x40"},{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"1354:3:14"},{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"1363:3:14"},{"kind":"number","nodeType":"YulLiteral","src":"1368:4:14","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1359:3:14"},"nodeType":"YulFunctionCall","src":"1359:14:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1350:3:14"},"nodeType":"YulFunctionCall","src":"1350:24:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1337:6:14"},"nodeType":"YulFunctionCall","src":"1337:38:14"},"nodeType":"YulExpressionStatement","src":"1337:38:14"},{"expression":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"1395:3:14"},{"name":"len","nodeType":"YulIdentifier","src":"1400:3:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1388:6:14"},"nodeType":"YulFunctionCall","src":"1388:16:14"},"nodeType":"YulExpressionStatement","src":"1388:16:14"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"1436:3:14"},{"kind":"number","nodeType":"YulLiteral","src":"1441:4:14","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1432:3:14"},"nodeType":"YulFunctionCall","src":"1432:14:14"},{"kind":"number","nodeType":"YulLiteral","src":"1448:1:14","type":"","value":"0"},{"name":"len","nodeType":"YulIdentifier","src":"1451:3:14"}],"functionName":{"name":"returndatacopy","nodeType":"YulIdentifier","src":"1417:14:14"},"nodeType":"YulFunctionCall","src":"1417:38:14"},"nodeType":"YulExpressionStatement","src":"1417:38:14"},{"nodeType":"YulAssignment","src":"1468:17:14","value":{"name":"ptr","nodeType":"YulIdentifier","src":"1482:3:14"},"variableNames":[{"name":"returnData","nodeType":"YulIdentifier","src":"1468:10:14"}]}]},"evmVersion":"london","externalReferences":[{"declaration":4068,"isOffset":false,"isSlot":false,"src":"1236:6:14","valueSize":1},{"declaration":4068,"isOffset":false,"isSlot":false,"src":"1269:6:14","valueSize":1},{"declaration":4071,"isOffset":false,"isSlot":false,"src":"1468:10:14","valueSize":1}],"id":4073,"nodeType":"InlineAssembly","src":"1162:333:14"}]},"id":4075,"implemented":true,"kind":"function","modifiers":[],"name":"getReturnData","nameLocation":"1060:13:14","nodeType":"FunctionDefinition","parameters":{"id":4069,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4068,"mutability":"mutable","name":"maxLen","nameLocation":"1091:6:14","nodeType":"VariableDeclaration","scope":4075,"src":"1083:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4067,"name":"uint256","nodeType":"ElementaryTypeName","src":"1083:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1073:30:14"},"returnParameters":{"id":4072,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4071,"mutability":"mutable","name":"returnData","nameLocation":"1140:10:14","nodeType":"VariableDeclaration","scope":4075,"src":"1127:23:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4070,"name":"bytes","nodeType":"ElementaryTypeName","src":"1127:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1126:25:14"},"scope":4113,"src":"1051:450:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4081,"nodeType":"Block","src":"1644:95:14","statements":[{"AST":{"nodeType":"YulBlock","src":"1663:70:14","statements":[{"expression":{"arguments":[{"arguments":[{"name":"returnData","nodeType":"YulIdentifier","src":"1688:10:14"},{"kind":"number","nodeType":"YulLiteral","src":"1700:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1684:3:14"},"nodeType":"YulFunctionCall","src":"1684:19:14"},{"arguments":[{"name":"returnData","nodeType":"YulIdentifier","src":"1711:10:14"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1705:5:14"},"nodeType":"YulFunctionCall","src":"1705:17:14"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1677:6:14"},"nodeType":"YulFunctionCall","src":"1677:46:14"},"nodeType":"YulExpressionStatement","src":"1677:46:14"}]},"evmVersion":"london","externalReferences":[{"declaration":4077,"isOffset":false,"isSlot":false,"src":"1688:10:14","valueSize":1},{"declaration":4077,"isOffset":false,"isSlot":false,"src":"1711:10:14","valueSize":1}],"id":4080,"nodeType":"InlineAssembly","src":"1654:79:14"}]},"id":4082,"implemented":true,"kind":"function","modifiers":[],"name":"revertWithData","nameLocation":"1590:14:14","nodeType":"FunctionDefinition","parameters":{"id":4078,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4077,"mutability":"mutable","name":"returnData","nameLocation":"1618:10:14","nodeType":"VariableDeclaration","scope":4082,"src":"1605:23:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4076,"name":"bytes","nodeType":"ElementaryTypeName","src":"1605:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1604:25:14"},"returnParameters":{"id":4079,"nodeType":"ParameterList","parameters":[],"src":"1644:0:14"},"scope":4113,"src":"1581:158:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4111,"nodeType":"Block","src":"1854:145:14","statements":[{"assignments":[4092],"declarations":[{"constant":false,"id":4092,"mutability":"mutable","name":"success","nameLocation":"1869:7:14","nodeType":"VariableDeclaration","scope":4111,"src":"1864:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4091,"name":"bool","nodeType":"ElementaryTypeName","src":"1864:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":4100,"initialValue":{"arguments":[{"id":4094,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4084,"src":"1884:2:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"hexValue":"30","id":4095,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1888:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"id":4096,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4086,"src":"1891:4:14","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"arguments":[],"expression":{"argumentTypes":[],"id":4097,"name":"gasleft","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-7,"src":"1897:7:14","typeDescriptions":{"typeIdentifier":"t_function_gasleft_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":4098,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1897:9:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4093,"name":"call","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4040,"src":"1879:4:14","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256,bytes memory,uint256) returns (bool)"}},"id":4099,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1879:28:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"1864:43:14"},{"condition":{"id":4102,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"1921:8:14","subExpression":{"id":4101,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4092,"src":"1922:7:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4110,"nodeType":"IfStatement","src":"1917:76:14","trueBody":{"id":4109,"nodeType":"Block","src":"1931:62:14","statements":[{"expression":{"arguments":[{"arguments":[{"id":4105,"name":"maxLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4088,"src":"1974:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4104,"name":"getReturnData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4075,"src":"1960:13:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"}},"id":4106,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1960:21:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":4103,"name":"revertWithData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4082,"src":"1945:14:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$returns$__$","typeString":"function (bytes memory) pure"}},"id":4107,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1945:37:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4108,"nodeType":"ExpressionStatement","src":"1945:37:14"}]}}]},"id":4112,"implemented":true,"kind":"function","modifiers":[],"name":"callAndRevert","nameLocation":"1754:13:14","nodeType":"FunctionDefinition","parameters":{"id":4089,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4084,"mutability":"mutable","name":"to","nameLocation":"1785:2:14","nodeType":"VariableDeclaration","scope":4112,"src":"1777:10:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4083,"name":"address","nodeType":"ElementaryTypeName","src":"1777:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4086,"mutability":"mutable","name":"data","nameLocation":"1810:4:14","nodeType":"VariableDeclaration","scope":4112,"src":"1797:17:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4085,"name":"bytes","nodeType":"ElementaryTypeName","src":"1797:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":4088,"mutability":"mutable","name":"maxLen","nameLocation":"1832:6:14","nodeType":"VariableDeclaration","scope":4112,"src":"1824:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4087,"name":"uint256","nodeType":"ElementaryTypeName","src":"1824:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1767:77:14"},"returnParameters":{"id":4090,"nodeType":"ParameterList","parameters":[],"src":"1854:0:14"},"scope":4113,"src":"1745:254:14","stateMutability":"nonpayable","virtual":false,"visibility":"internal"}],"scope":4114,"src":"202:1799:14","usedErrors":[]}],"src":"42:1960:14"}}},"contracts":{"@openzeppelin/contracts/security/ReentrancyGuard.sol":{"ReentrancyGuard":{"abi":[],"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":\"ReentrancyGuard\"},\"evmVersion\":\"london\",\"libraries\":{\":__CACHE_BREAKER__\":\"0x00000000d41867734bbee4c6863d9255b2b06ac1\"},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0x190dd6f8d592b7e4e930feb7f4313aeb8e1c4ad3154c27ce1cf6a512fc30d8cc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ce8dfb62d0c4fa260d6eec8f1cd47f5f2a044e11bde5b31d18072fa6e7d9010\",\"dweb:/ipfs/QmTyFztU3tLEcEDnqqiaW4UJetqsU77LXc6pjc9oTXCK5u\"]}},\"version\":1}","devdoc":{"details":"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].","kind":"dev","methods":{},"version":1},"userdoc":{"kind":"user","methods":{},"version":1},"storageLayout":{"storage":[{"astId":10,"contract":"@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard","label":"_status","offset":0,"slot":"0","type":"t_uint256"}],"types":{"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}},"evm":{"legacyAssembly":null,"assembly":null,"bytecode":null,"methodIdentifiers":{}},"irOptimized":""}},"contracts/smart-contract-wallet/aa-4337/core/EntryPoint.sol":{"EntryPoint":{"abi":[{"inputs":[{"internalType":"uint256","name":"preOpGas","type":"uint256"},{"internalType":"uint256","name":"paid","type":"uint256"},{"internalType":"uint48","name":"validAfter","type":"uint48"},{"internalType":"uint48","name":"validUntil","type":"uint48"},{"internalType":"bool","name":"targetSuccess","type":"bool"},{"internalType":"bytes","name":"targetResult","type":"bytes"}],"name":"ExecutionResult","type":"error"},{"inputs":[{"internalType":"uint256","name":"opIndex","type":"uint256"},{"internalType":"string","name":"reason","type":"string"}],"name":"FailedOp","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"SenderAddressResult","type":"error"},{"inputs":[{"internalType":"address","name":"aggregator","type":"address"}],"name":"SignatureValidationFailed","type":"error"},{"inputs":[{"components":[{"internalType":"uint256","name":"preOpGas","type":"uint256"},{"internalType":"uint256","name":"prefund","type":"uint256"},{"internalType":"bool","name":"sigFailed","type":"bool"},{"internalType":"uint48","name":"validAfter","type":"uint48"},{"internalType":"uint48","name":"validUntil","type":"uint48"},{"internalType":"bytes","name":"paymasterContext","type":"bytes"}],"internalType":"struct IEntryPoint.ReturnInfo","name":"returnInfo","type":"tuple"},{"components":[{"internalType":"uint256","name":"stake","type":"uint256"},{"internalType":"uint256","name":"unstakeDelaySec","type":"uint256"}],"internalType":"struct IStakeManager.StakeInfo","name":"senderInfo","type":"tuple"},{"components":[{"internalType":"uint256","name":"stake","type":"uint256"},{"internalType":"uint256","name":"unstakeDelaySec","type":"uint256"}],"internalType":"struct IStakeManager.StakeInfo","name":"factoryInfo","type":"tuple"},{"components":[{"internalType":"uint256","name":"stake","type":"uint256"},{"internalType":"uint256","name":"unstakeDelaySec","type":"uint256"}],"internalType":"struct IStakeManager.StakeInfo","name":"paymasterInfo","type":"tuple"}],"name":"ValidationResult","type":"error"},{"inputs":[{"components":[{"internalType":"uint256","name":"preOpGas","type":"uint256"},{"internalType":"uint256","name":"prefund","type":"uint256"},{"internalType":"bool","name":"sigFailed","type":"bool"},{"internalType":"uint48","name":"validAfter","type":"uint48"},{"internalType":"uint48","name":"validUntil","type":"uint48"},{"internalType":"bytes","name":"paymasterContext","type":"bytes"}],"internalType":"struct IEntryPoint.ReturnInfo","name":"returnInfo","type":"tuple"},{"components":[{"internalType":"uint256","name":"stake","type":"uint256"},{"internalType":"uint256","name":"unstakeDelaySec","type":"uint256"}],"internalType":"struct IStakeManager.StakeInfo","name":"senderInfo","type":"tuple"},{"components":[{"internalType":"uint256","name":"stake","type":"uint256"},{"internalType":"uint256","name":"unstakeDelaySec","type":"uint256"}],"internalType":"struct IStakeManager.StakeInfo","name":"factoryInfo","type":"tuple"},{"components":[{"internalType":"uint256","name":"stake","type":"uint256"},{"internalType":"uint256","name":"unstakeDelaySec","type":"uint256"}],"internalType":"struct IStakeManager.StakeInfo","name":"paymasterInfo","type":"tuple"},{"components":[{"internalType":"address","name":"aggregator","type":"address"},{"components":[{"internalType":"uint256","name":"stake","type":"uint256"},{"internalType":"uint256","name":"unstakeDelaySec","type":"uint256"}],"internalType":"struct IStakeManager.StakeInfo","name":"stakeInfo","type":"tuple"}],"internalType":"struct IEntryPoint.AggregatorStakeInfo","name":"aggregatorInfo","type":"tuple"}],"name":"ValidationResultWithAggregation","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"userOpHash","type":"bytes32"},{"indexed":true,"internalType":"address","name":"sender","type":"address"},{"indexed":false,"internalType":"address","name":"factory","type":"address"},{"indexed":false,"internalType":"address","name":"paymaster","type":"address"}],"name":"AccountDeployed","type":"event"},{"anonymous":false,"inputs":[],"name":"BeforeExecution","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":false,"internalType":"uint256","name":"totalDeposit","type":"uint256"}],"name":"Deposited","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"aggregator","type":"address"}],"name":"SignatureAggregatorChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":false,"internalType":"uint256","name":"totalStaked","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"unstakeDelaySec","type":"uint256"}],"name":"StakeLocked","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":false,"internalType":"uint256","name":"withdrawTime","type":"uint256"}],"name":"StakeUnlocked","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":false,"internalType":"address","name":"withdrawAddress","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"StakeWithdrawn","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"userOpHash","type":"bytes32"},{"indexed":true,"internalType":"address","name":"sender","type":"address"},{"indexed":true,"internalType":"address","name":"paymaster","type":"address"},{"indexed":false,"internalType":"uint256","name":"nonce","type":"uint256"},{"indexed":false,"internalType":"bool","name":"success","type":"bool"},{"indexed":false,"internalType":"uint256","name":"actualGasCost","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"actualGasUsed","type":"uint256"}],"name":"UserOperationEvent","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"userOpHash","type":"bytes32"},{"indexed":true,"internalType":"address","name":"sender","type":"address"},{"indexed":false,"internalType":"uint256","name":"nonce","type":"uint256"},{"indexed":false,"internalType":"bytes","name":"revertReason","type":"bytes"}],"name":"UserOperationRevertReason","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":false,"internalType":"address","name":"withdrawAddress","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"Withdrawn","type":"event"},{"inputs":[],"name":"SIG_VALIDATION_FAILED","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes","name":"initCode","type":"bytes"},{"internalType":"address","name":"sender","type":"address"},{"internalType":"bytes","name":"paymasterAndData","type":"bytes"}],"name":"_validateSenderAndPaymaster","outputs":[],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint32","name":"unstakeDelaySec","type":"uint32"}],"name":"addStake","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"depositTo","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"deposits","outputs":[{"internalType":"uint112","name":"deposit","type":"uint112"},{"internalType":"bool","name":"staked","type":"bool"},{"internalType":"uint112","name":"stake","type":"uint112"},{"internalType":"uint32","name":"unstakeDelaySec","type":"uint32"},{"internalType":"uint48","name":"withdrawTime","type":"uint48"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"getDepositInfo","outputs":[{"components":[{"internalType":"uint112","name":"deposit","type":"uint112"},{"internalType":"bool","name":"staked","type":"bool"},{"internalType":"uint112","name":"stake","type":"uint112"},{"internalType":"uint32","name":"unstakeDelaySec","type":"uint32"},{"internalType":"uint48","name":"withdrawTime","type":"uint48"}],"internalType":"struct IStakeManager.DepositInfo","name":"info","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint192","name":"key","type":"uint192"}],"name":"getNonce","outputs":[{"internalType":"uint256","name":"nonce","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes","name":"initCode","type":"bytes"}],"name":"getSenderAddress","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"components":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"nonce","type":"uint256"},{"internalType":"bytes","name":"initCode","type":"bytes"},{"internalType":"bytes","name":"callData","type":"bytes"},{"internalType":"uint256","name":"callGasLimit","type":"uint256"},{"internalType":"uint256","name":"verificationGasLimit","type":"uint256"},{"internalType":"uint256","name":"preVerificationGas","type":"uint256"},{"internalType":"uint256","name":"maxFeePerGas","type":"uint256"},{"internalType":"uint256","name":"maxPriorityFeePerGas","type":"uint256"},{"internalType":"bytes","name":"paymasterAndData","type":"bytes"},{"internalType":"bytes","name":"signature","type":"bytes"}],"internalType":"struct UserOperation","name":"userOp","type":"tuple"}],"name":"getUserOpHash","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"components":[{"components":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"nonce","type":"uint256"},{"internalType":"bytes","name":"initCode","type":"bytes"},{"internalType":"bytes","name":"callData","type":"bytes"},{"internalType":"uint256","name":"callGasLimit","type":"uint256"},{"internalType":"uint256","name":"verificationGasLimit","type":"uint256"},{"internalType":"uint256","name":"preVerificationGas","type":"uint256"},{"internalType":"uint256","name":"maxFeePerGas","type":"uint256"},{"internalType":"uint256","name":"maxPriorityFeePerGas","type":"uint256"},{"internalType":"bytes","name":"paymasterAndData","type":"bytes"},{"internalType":"bytes","name":"signature","type":"bytes"}],"internalType":"struct UserOperation[]","name":"userOps","type":"tuple[]"},{"internalType":"contract IAggregator","name":"aggregator","type":"address"},{"internalType":"bytes","name":"signature","type":"bytes"}],"internalType":"struct IEntryPoint.UserOpsPerAggregator[]","name":"opsPerAggregator","type":"tuple[]"},{"internalType":"address payable","name":"beneficiary","type":"address"}],"name":"handleAggregatedOps","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"components":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"nonce","type":"uint256"},{"internalType":"bytes","name":"initCode","type":"bytes"},{"internalType":"bytes","name":"callData","type":"bytes"},{"internalType":"uint256","name":"callGasLimit","type":"uint256"},{"internalType":"uint256","name":"verificationGasLimit","type":"uint256"},{"internalType":"uint256","name":"preVerificationGas","type":"uint256"},{"internalType":"uint256","name":"maxFeePerGas","type":"uint256"},{"internalType":"uint256","name":"maxPriorityFeePerGas","type":"uint256"},{"internalType":"bytes","name":"paymasterAndData","type":"bytes"},{"internalType":"bytes","name":"signature","type":"bytes"}],"internalType":"struct UserOperation[]","name":"ops","type":"tuple[]"},{"internalType":"address payable","name":"beneficiary","type":"address"}],"name":"handleOps","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"uint192","name":"key","type":"uint192"}],"name":"incrementNonce","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes","name":"callData","type":"bytes"},{"components":[{"components":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"nonce","type":"uint256"},{"internalType":"uint256","name":"callGasLimit","type":"uint256"},{"internalType":"uint256","name":"verificationGasLimit","type":"uint256"},{"internalType":"uint256","name":"preVerificationGas","type":"uint256"},{"internalType":"address","name":"paymaster","type":"address"},{"internalType":"uint256","name":"maxFeePerGas","type":"uint256"},{"internalType":"uint256","name":"maxPriorityFeePerGas","type":"uint256"}],"internalType":"struct EntryPoint.MemoryUserOp","name":"mUserOp","type":"tuple"},{"internalType":"bytes32","name":"userOpHash","type":"bytes32"},{"internalType":"uint256","name":"prefund","type":"uint256"},{"internalType":"uint256","name":"contextOffset","type":"uint256"},{"internalType":"uint256","name":"preOpGas","type":"uint256"}],"internalType":"struct EntryPoint.UserOpInfo","name":"opInfo","type":"tuple"},{"internalType":"bytes","name":"context","type":"bytes"}],"name":"innerHandleOp","outputs":[{"internalType":"uint256","name":"actualGasCost","type":"uint256"}],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"},{"internalType":"uint192","name":"","type":"uint192"}],"name":"nonceSequenceNumber","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"components":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"nonce","type":"uint256"},{"internalType":"bytes","name":"initCode","type":"bytes"},{"internalType":"bytes","name":"callData","type":"bytes"},{"internalType":"uint256","name":"callGasLimit","type":"uint256"},{"internalType":"uint256","name":"verificationGasLimit","type":"uint256"},{"internalType":"uint256","name":"preVerificationGas","type":"uint256"},{"internalType":"uint256","name":"maxFeePerGas","type":"uint256"},{"internalType":"uint256","name":"maxPriorityFeePerGas","type":"uint256"},{"internalType":"bytes","name":"paymasterAndData","type":"bytes"},{"internalType":"bytes","name":"signature","type":"bytes"}],"internalType":"struct UserOperation","name":"op","type":"tuple"},{"internalType":"address","name":"target","type":"address"},{"internalType":"bytes","name":"targetCallData","type":"bytes"}],"name":"simulateHandleOp","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"components":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"nonce","type":"uint256"},{"internalType":"bytes","name":"initCode","type":"bytes"},{"internalType":"bytes","name":"callData","type":"bytes"},{"internalType":"uint256","name":"callGasLimit","type":"uint256"},{"internalType":"uint256","name":"verificationGasLimit","type":"uint256"},{"internalType":"uint256","name":"preVerificationGas","type":"uint256"},{"internalType":"uint256","name":"maxFeePerGas","type":"uint256"},{"internalType":"uint256","name":"maxPriorityFeePerGas","type":"uint256"},{"internalType":"bytes","name":"paymasterAndData","type":"bytes"},{"internalType":"bytes","name":"signature","type":"bytes"}],"internalType":"struct UserOperation","name":"userOp","type":"tuple"}],"name":"simulateValidation","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"unlockStake","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address payable","name":"withdrawAddress","type":"address"}],"name":"withdrawStake","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address payable","name":"withdrawAddress","type":"address"},{"internalType":"uint256","name":"withdrawAmount","type":"uint256"}],"name":"withdrawTo","outputs":[],"stateMutability":"nonpayable","type":"function"},{"stateMutability":"payable","type":"receive"}],"metadata":{"optimizer_settings":"M3B3","solc_metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"preOpGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"paid\",\"type\":\"uint256\"},{\"internalType\":\"uint48\",\"name\":\"validAfter\",\"type\":\"uint48\"},{\"internalType\":\"uint48\",\"name\":\"validUntil\",\"type\":\"uint48\"},{\"internalType\":\"bool\",\"name\":\"targetSuccess\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"targetResult\",\"type\":\"bytes\"}],\"name\":\"ExecutionResult\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"opIndex\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"reason\",\"type\":\"string\"}],\"name\":\"FailedOp\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"SenderAddressResult\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"aggregator\",\"type\":\"address\"}],\"name\":\"SignatureValidationFailed\",\"type\":\"error\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"preOpGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"prefund\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"sigFailed\",\"type\":\"bool\"},{\"internalType\":\"uint48\",\"name\":\"validAfter\",\"type\":\"uint48\"},{\"internalType\":\"uint48\",\"name\":\"validUntil\",\"type\":\"uint48\"},{\"internalType\":\"bytes\",\"name\":\"paymasterContext\",\"type\":\"bytes\"}],\"internalType\":\"struct IEntryPoint.ReturnInfo\",\"name\":\"returnInfo\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"stake\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"unstakeDelaySec\",\"type\":\"uint256\"}],\"internalType\":\"struct IStakeManager.StakeInfo\",\"name\":\"senderInfo\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"stake\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"unstakeDelaySec\",\"type\":\"uint256\"}],\"internalType\":\"struct IStakeManager.StakeInfo\",\"name\":\"factoryInfo\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"stake\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"unstakeDelaySec\",\"type\":\"uint256\"}],\"internalType\":\"struct IStakeManager.StakeInfo\",\"name\":\"paymasterInfo\",\"type\":\"tuple\"}],\"name\":\"ValidationResult\",\"type\":\"error\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"preOpGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"prefund\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"sigFailed\",\"type\":\"bool\"},{\"internalType\":\"uint48\",\"name\":\"validAfter\",\"type\":\"uint48\"},{\"internalType\":\"uint48\",\"name\":\"validUntil\",\"type\":\"uint48\"},{\"internalType\":\"bytes\",\"name\":\"paymasterContext\",\"type\":\"bytes\"}],\"internalType\":\"struct IEntryPoint.ReturnInfo\",\"name\":\"returnInfo\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"stake\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"unstakeDelaySec\",\"type\":\"uint256\"}],\"internalType\":\"struct IStakeManager.StakeInfo\",\"name\":\"senderInfo\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"stake\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"unstakeDelaySec\",\"type\":\"uint256\"}],\"internalType\":\"struct IStakeManager.StakeInfo\",\"name\":\"factoryInfo\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"stake\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"unstakeDelaySec\",\"type\":\"uint256\"}],\"internalType\":\"struct IStakeManager.StakeInfo\",\"name\":\"paymasterInfo\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"aggregator\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"stake\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"unstakeDelaySec\",\"type\":\"uint256\"}],\"internalType\":\"struct IStakeManager.StakeInfo\",\"name\":\"stakeInfo\",\"type\":\"tuple\"}],\"internalType\":\"struct IEntryPoint.AggregatorStakeInfo\",\"name\":\"aggregatorInfo\",\"type\":\"tuple\"}],\"name\":\"ValidationResultWithAggregation\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"userOpHash\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"factory\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"paymaster\",\"type\":\"address\"}],\"name\":\"AccountDeployed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"BeforeExecution\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"totalDeposit\",\"type\":\"uint256\"}],\"name\":\"Deposited\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"aggregator\",\"type\":\"address\"}],\"name\":\"SignatureAggregatorChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"totalStaked\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"unstakeDelaySec\",\"type\":\"uint256\"}],\"name\":\"StakeLocked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"withdrawTime\",\"type\":\"uint256\"}],\"name\":\"StakeUnlocked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"withdrawAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"StakeWithdrawn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"userOpHash\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"paymaster\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"actualGasCost\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"actualGasUsed\",\"type\":\"uint256\"}],\"name\":\"UserOperationEvent\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"userOpHash\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"revertReason\",\"type\":\"bytes\"}],\"name\":\"UserOperationRevertReason\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"withdrawAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Withdrawn\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"SIG_VALIDATION_FAILED\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"initCode\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"paymasterAndData\",\"type\":\"bytes\"}],\"name\":\"_validateSenderAndPaymaster\",\"outputs\":[],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"unstakeDelaySec\",\"type\":\"uint32\"}],\"name\":\"addStake\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"depositTo\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"deposits\",\"outputs\":[{\"internalType\":\"uint112\",\"name\":\"deposit\",\"type\":\"uint112\"},{\"internalType\":\"bool\",\"name\":\"staked\",\"type\":\"bool\"},{\"internalType\":\"uint112\",\"name\":\"stake\",\"type\":\"uint112\"},{\"internalType\":\"uint32\",\"name\":\"unstakeDelaySec\",\"type\":\"uint32\"},{\"internalType\":\"uint48\",\"name\":\"withdrawTime\",\"type\":\"uint48\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"getDepositInfo\",\"outputs\":[{\"components\":[{\"internalType\":\"uint112\",\"name\":\"deposit\",\"type\":\"uint112\"},{\"internalType\":\"bool\",\"name\":\"staked\",\"type\":\"bool\"},{\"internalType\":\"uint112\",\"name\":\"stake\",\"type\":\"uint112\"},{\"internalType\":\"uint32\",\"name\":\"unstakeDelaySec\",\"type\":\"uint32\"},{\"internalType\":\"uint48\",\"name\":\"withdrawTime\",\"type\":\"uint48\"}],\"internalType\":\"struct IStakeManager.DepositInfo\",\"name\":\"info\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint192\",\"name\":\"key\",\"type\":\"uint192\"}],\"name\":\"getNonce\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"initCode\",\"type\":\"bytes\"}],\"name\":\"getSenderAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"initCode\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"callData\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"callGasLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"verificationGasLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"preVerificationGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxFeePerGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxPriorityFeePerGas\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"paymasterAndData\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"internalType\":\"struct UserOperation\",\"name\":\"userOp\",\"type\":\"tuple\"}],\"name\":\"getUserOpHash\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"initCode\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"callData\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"callGasLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"verificationGasLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"preVerificationGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxFeePerGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxPriorityFeePerGas\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"paymasterAndData\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"internalType\":\"struct UserOperation[]\",\"name\":\"userOps\",\"type\":\"tuple[]\"},{\"internalType\":\"contract IAggregator\",\"name\":\"aggregator\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"internalType\":\"struct IEntryPoint.UserOpsPerAggregator[]\",\"name\":\"opsPerAggregator\",\"type\":\"tuple[]\"},{\"internalType\":\"address payable\",\"name\":\"beneficiary\",\"type\":\"address\"}],\"name\":\"handleAggregatedOps\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"initCode\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"callData\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"callGasLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"verificationGasLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"preVerificationGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxFeePerGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxPriorityFeePerGas\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"paymasterAndData\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"internalType\":\"struct UserOperation[]\",\"name\":\"ops\",\"type\":\"tuple[]\"},{\"internalType\":\"address payable\",\"name\":\"beneficiary\",\"type\":\"address\"}],\"name\":\"handleOps\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint192\",\"name\":\"key\",\"type\":\"uint192\"}],\"name\":\"incrementNonce\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"callData\",\"type\":\"bytes\"},{\"components\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"callGasLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"verificationGasLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"preVerificationGas\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"paymaster\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"maxFeePerGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxPriorityFeePerGas\",\"type\":\"uint256\"}],\"internalType\":\"struct EntryPoint.MemoryUserOp\",\"name\":\"mUserOp\",\"type\":\"tuple\"},{\"internalType\":\"bytes32\",\"name\":\"userOpHash\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"prefund\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"contextOffset\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"preOpGas\",\"type\":\"uint256\"}],\"internalType\":\"struct EntryPoint.UserOpInfo\",\"name\":\"opInfo\",\"type\":\"tuple\"},{\"internalType\":\"bytes\",\"name\":\"context\",\"type\":\"bytes\"}],\"name\":\"innerHandleOp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"actualGasCost\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint192\",\"name\":\"\",\"type\":\"uint192\"}],\"name\":\"nonceSequenceNumber\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"initCode\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"callData\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"callGasLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"verificationGasLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"preVerificationGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxFeePerGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxPriorityFeePerGas\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"paymasterAndData\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"internalType\":\"struct UserOperation\",\"name\":\"op\",\"type\":\"tuple\"},{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"targetCallData\",\"type\":\"bytes\"}],\"name\":\"simulateHandleOp\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"initCode\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"callData\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"callGasLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"verificationGasLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"preVerificationGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxFeePerGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxPriorityFeePerGas\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"paymasterAndData\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"internalType\":\"struct UserOperation\",\"name\":\"userOp\",\"type\":\"tuple\"}],\"name\":\"simulateValidation\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unlockStake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"withdrawAddress\",\"type\":\"address\"}],\"name\":\"withdrawStake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"withdrawAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"withdrawAmount\",\"type\":\"uint256\"}],\"name\":\"withdrawTo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"errors\":{\"FailedOp(uint256,string)\":[{\"params\":{\"opIndex\":\"- index into the array of ops to the failed one (in simulateValidation, this is always zero)\",\"reason\":\"- revert reason      The string starts with a unique code \\\"AAmn\\\", where \\\"m\\\" is \\\"1\\\" for factory, \\\"2\\\" for account and \\\"3\\\" for paymaster issues,      so a failure can be attributed to the correct entity.   Should be caught in off-chain handleOps simulation and not happen on-chain.   Useful for mitigating DoS attempts against batchers or for troubleshooting of factory/account/paymaster reverts.\"}}],\"ValidationResult((uint256,uint256,bool,uint48,uint48,bytes),(uint256,uint256),(uint256,uint256),(uint256,uint256))\":[{\"params\":{\"factoryInfo\":\"stake information about the factory (if any)\",\"paymasterInfo\":\"stake information about the paymaster (if any)\",\"returnInfo\":\"gas and time-range returned values\",\"senderInfo\":\"stake information about the sender\"}}],\"ValidationResultWithAggregation((uint256,uint256,bool,uint48,uint48,bytes),(uint256,uint256),(uint256,uint256),(uint256,uint256),(address,(uint256,uint256)))\":[{\"params\":{\"aggregatorInfo\":\"signature aggregation info (if the account requires signature aggregator)      bundler MUST use it to verify the signature, or reject the UserOperation\",\"factoryInfo\":\"stake information about the factory (if any)\",\"paymasterInfo\":\"stake information about the paymaster (if any)\",\"returnInfo\":\"gas and time-range returned values\",\"senderInfo\":\"stake information about the sender\"}}]},\"kind\":\"dev\",\"methods\":{\"addStake(uint32)\":{\"params\":{\"unstakeDelaySec\":\"the new lock duration before the deposit can be withdrawn.\"}},\"getDepositInfo(address)\":{\"returns\":{\"info\":\"- full deposit information of given account\"}},\"getNonce(address,uint192)\":{\"params\":{\"key\":\"the high 192 bit of the nonce\",\"sender\":\"the account address\"},\"returns\":{\"nonce\":\"a full nonce to pass for next UserOp with this sender.\"}},\"getSenderAddress(bytes)\":{\"params\":{\"initCode\":\"the constructor code to be passed into the UserOperation.\"}},\"handleAggregatedOps(((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes)[],address,bytes)[],address)\":{\"params\":{\"beneficiary\":\"the address to receive the fees\",\"opsPerAggregator\":\"the operations to execute, grouped by aggregator (or address(0) for no-aggregator accounts)\"}},\"handleOps((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes)[],address)\":{\"params\":{\"beneficiary\":\"the address to receive the fees\",\"ops\":\"the operations to execute\"}},\"simulateHandleOp((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes),address,bytes)\":{\"params\":{\"op\":\"the UserOperation to simulate\",\"target\":\"if nonzero, a target address to call after userop simulation. If called, the targetSuccess and targetResult        are set to the return from that call.\",\"targetCallData\":\"callData to pass to target address\"}},\"simulateValidation((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes))\":{\"details\":\"this method always revert. Successful result is ValidationResult error. other errors are failures.The node must also verify it doesn't use banned opcodes, and that it doesn't reference storage outside the account's data.\",\"params\":{\"userOp\":\"the user operation to validate.\"}},\"withdrawStake(address)\":{\"params\":{\"withdrawAddress\":\"the address to send withdrawn value.\"}},\"withdrawTo(address,uint256)\":{\"params\":{\"withdrawAddress\":\"the address to send withdrawn value.\",\"withdrawAmount\":\"the amount to withdraw.\"}}},\"version\":1},\"userdoc\":{\"errors\":{\"ExecutionResult(uint256,uint256,uint48,uint48,bool,bytes)\":[{\"notice\":\"return value of simulateHandleOp\"}],\"FailedOp(uint256,string)\":[{\"notice\":\"a custom revert error of handleOps, to identify the offending op.  NOTE: if simulateValidation passes successfully, there should be no reason for handleOps to fail on it.\"}],\"SenderAddressResult(address)\":[{\"notice\":\"return value of getSenderAddress\"}],\"SignatureValidationFailed(address)\":[{\"notice\":\"error case when a signature aggregator fails to verify the aggregated signature it had created.\"}],\"ValidationResult((uint256,uint256,bool,uint48,uint48,bytes),(uint256,uint256),(uint256,uint256),(uint256,uint256))\":[{\"notice\":\"Successful result from simulateValidation.\"}],\"ValidationResultWithAggregation((uint256,uint256,bool,uint48,uint48,bytes),(uint256,uint256),(uint256,uint256),(uint256,uint256),(address,(uint256,uint256)))\":[{\"notice\":\"Successful result from simulateValidation, if the account returns a signature aggregator\"}]},\"events\":{\"AccountDeployed(bytes32,address,address,address)\":{\"notice\":\"account \\\"sender\\\" was deployed.\"},\"BeforeExecution()\":{\"notice\":\"an event emitted by handleOps(), before starting the execution loop. any event emitted before this event, is part of the validation.\"},\"SignatureAggregatorChanged(address)\":{\"notice\":\"signature aggregator used by the following UserOperationEvents within this bundle.\"},\"StakeLocked(address,uint256,uint256)\":{\"notice\":\"Emitted when stake or unstake delay are modified\"},\"StakeUnlocked(address,uint256)\":{\"notice\":\"Emitted once a stake is scheduled for withdrawal\"},\"UserOperationRevertReason(bytes32,address,uint256,bytes)\":{\"notice\":\"An event emitted if the UserOperation \\\"callData\\\" reverted with non-zero length\"}},\"kind\":\"user\",\"methods\":{\"SIG_VALIDATION_FAILED()\":{\"notice\":\"for simulation purposes, validateUserOp (and validatePaymasterUserOp) must return this value in case of signature failure, instead of revert.\"},\"_validateSenderAndPaymaster(bytes,address,bytes)\":{\"notice\":\"Called only during simulation. This function always reverts to prevent warm/cold storage differentiation in simulation vs execution.\"},\"addStake(uint32)\":{\"notice\":\"add to the account's stake - amount and delay any pending unstake is first cancelled.\"},\"balanceOf(address)\":{\"notice\":\"return the deposit (for gas payment) of the account\"},\"depositTo(address)\":{\"notice\":\"add to the deposit of the given account\"},\"deposits(address)\":{\"notice\":\"maps paymaster to their deposits and stakes\"},\"getNonce(address,uint192)\":{\"notice\":\"Return the next nonce for this sender. Within a given key, the nonce values are sequenced (starting with zero, and incremented by one on each userop) But UserOp with different keys can come with arbitrary order.\"},\"getSenderAddress(bytes)\":{\"notice\":\"Get counterfactual sender address.  Calculate the sender contract address that will be generated by the initCode and salt in the UserOperation. this method always revert, and returns the address in SenderAddressResult error\"},\"getUserOpHash((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes))\":{\"notice\":\"generate a request Id - unique identifier for this request. the request ID is a hash over the content of the userOp (except the signature), the entrypoint and the chainid.\"},\"handleAggregatedOps(((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes)[],address,bytes)[],address)\":{\"notice\":\"Execute a batch of UserOperation with Aggregators\"},\"handleOps((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes)[],address)\":{\"notice\":\"Execute a batch of UserOperations. no signature aggregator is used. if any account requires an aggregator (that is, it returned an aggregator when performing simulateValidation), then handleAggregatedOps() must be used instead.\"},\"incrementNonce(uint192)\":{\"notice\":\"Manually increment the nonce of the sender. This method is exposed just for completeness.. Account does NOT need to call it, neither during validation, nor elsewhere, as the EntryPoint will update the nonce regardless. Possible use-case is call it with various keys to \\\"initialize\\\" their nonces to one, so that future UserOperations will not pay extra for the first transaction with a given key.\"},\"innerHandleOp(bytes,((address,uint256,uint256,uint256,uint256,address,uint256,uint256),bytes32,uint256,uint256,uint256),bytes)\":{\"notice\":\"inner function to handle a UserOperation. Must be declared \\\"external\\\" to open a call context, but it can only be called by handleOps.\"},\"nonceSequenceNumber(address,uint192)\":{\"notice\":\"The next valid sequence number for a given nonce key.\"},\"simulateHandleOp((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes),address,bytes)\":{\"notice\":\"simulate full execution of a UserOperation (including both validation and target execution) this method will always revert with \\\"ExecutionResult\\\". it performs full validation of the UserOperation, but ignores signature error. an optional target address is called after the userop succeeds, and its value is returned (before the entire call is reverted) Note that in order to collect the the success/failure of the target call, it must be executed with trace enabled to track the emitted events.\"},\"simulateValidation((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes))\":{\"notice\":\"Simulate a call to account.validateUserOp and paymaster.validatePaymasterUserOp.\"},\"unlockStake()\":{\"notice\":\"attempt to unlock the stake. the value can be withdrawn (using withdrawStake) after the unstake delay.\"},\"withdrawStake(address)\":{\"notice\":\"withdraw from the (unlocked) stake. must first call unlockStake and wait for the unstakeDelay to pass\"},\"withdrawTo(address,uint256)\":{\"notice\":\"withdraw from the deposit.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/smart-contract-wallet/aa-4337/core/EntryPoint.sol\":\"EntryPoint\"},\"evmVersion\":\"london\",\"libraries\":{\":__CACHE_BREAKER__\":\"0x00000000d41867734bbee4c6863d9255b2b06ac1\"},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0x190dd6f8d592b7e4e930feb7f4313aeb8e1c4ad3154c27ce1cf6a512fc30d8cc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ce8dfb62d0c4fa260d6eec8f1cd47f5f2a044e11bde5b31d18072fa6e7d9010\",\"dweb:/ipfs/QmTyFztU3tLEcEDnqqiaW4UJetqsU77LXc6pjc9oTXCK5u\"]},\"contracts/smart-contract-wallet/aa-4337/core/EntryPoint.sol\":{\"keccak256\":\"0x323374fcf0b4c042e6e5d313bc90f024de2b81e65cd7f2e9a85ac7e1bba4af58\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://fa0d1e2d0e3ef27a142bcaf529097fcd1e990708298d127747137362f245f993\",\"dweb:/ipfs/QmTa3Xn3Swntry5gQcNMLfHuJwYB5oRjyGma28xr6jnvao\"]},\"contracts/smart-contract-wallet/aa-4337/core/Helpers.sol\":{\"keccak256\":\"0x9a220fa7fd433cf4309c5be508907147ad2b0cda5c10867a13da43b0f703cff9\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://062d3a7fe9dcda4ec72e066895c66e189549eae5c9bc886b1d897d1811523219\",\"dweb:/ipfs/Qma6UjdwG5hrMEuKguiT5ccJDjDkju9kVcWBvkHr49JJ6A\"]},\"contracts/smart-contract-wallet/aa-4337/core/NonceManager.sol\":{\"keccak256\":\"0xb61b89724c3d8e361910e745e69f2e83512d9c3e6691a7e550df1cc926ad96e7\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://83afddfa7d12f7ea862ad3951ae70ece7cc4cb222e3971ec4a118db6b7a5ca60\",\"dweb:/ipfs/QmVtFd18gS5LHDPE4BVEVvj2vq7WwNcZEKGw7FCT3sTM2b\"]},\"contracts/smart-contract-wallet/aa-4337/core/SenderCreator.sol\":{\"keccak256\":\"0xebe195e44b31f1e12ab82a1b5007d03780c0a5af2f4dccad6053909e70e17c98\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://1df2e3a394b811e8a84ac0de7197535d2d7b8c6b755e441565543e153390b489\",\"dweb:/ipfs/Qmb9WBntoeqMZeBGr6twCfwx2nDvriBn52qLBJue2n6ucd\"]},\"contracts/smart-contract-wallet/aa-4337/core/StakeManager.sol\":{\"keccak256\":\"0x1b2c921c3c605cf70a9b5acdec6d376fae8ffb2d1347e6004c50b0c5889062ae\",\"license\":\"GPL-3.0-only\",\"urls\":[\"bzz-raw://2b2915672ea26b03fcf8b434e823e7abc57db2e03b24c24f53e8839a861e3587\",\"dweb:/ipfs/QmTxKk5pGSdHfeA2xSfwKsxpAiX6bLaNeQUeH9H2V7smKA\"]},\"contracts/smart-contract-wallet/aa-4337/interfaces/IAccount.sol\":{\"keccak256\":\"0xfff631110ad8e5f3f16308fa209a6cd0baafd60e7df0c02816cb95dd03d45a51\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://2ad40e618887ce68aca26b9d75d53485063917b85c782a9ce3498b824cc22fc0\",\"dweb:/ipfs/Qmb4mxgpjHsJYRaj93qBethXFdio5K1zJw5QznJFwsQuG7\"]},\"contracts/smart-contract-wallet/aa-4337/interfaces/IAggregator.sol\":{\"keccak256\":\"0x33265d5eece854fb1ced8d8c418a92367af4c448d6c097edce2dd8d7f78dc504\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://2da963cb3b7ca8186304003c85b95ba373e9168b128adaaf56e7312246586d59\",\"dweb:/ipfs/Qmeo7BBU3XbiEvhoYx5GWxvqc2xgQwyzHT2vNzco9evAD4\"]},\"contracts/smart-contract-wallet/aa-4337/interfaces/IEntryPoint.sol\":{\"keccak256\":\"0xb860cc0782782fec8ba99512c54f18533fec390e799eb5a0178ba3a2cb3c5d4c\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://0b72111c3e4ed7841bdbc2e11eca4387ed4d19de1fe07ff3b00311c4408063db\",\"dweb:/ipfs/QmcNxDZJmfQwL3tKDsinmXJjkBYJFJY6iBG8NnRQG4hH9m\"]},\"contracts/smart-contract-wallet/aa-4337/interfaces/INonceManager.sol\":{\"keccak256\":\"0x85ad9259108e3af788854d30d93ded1e41991e308d01528a017323d4f6b44320\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://5c4a51982f8e35573c800abab27438451beb076ef083ed4009a1c90dbdd9f7cb\",\"dweb:/ipfs/QmdEDxKEBeos4cxrxJ53rfhFgcncHNMqtyQ2GXzKv3ruFv\"]},\"contracts/smart-contract-wallet/aa-4337/interfaces/IPaymaster.sol\":{\"keccak256\":\"0x1120f4353977dfc9acbb928f264fd9e5565720e3ffe0e43e905352ea631d5b88\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://c2c7b64d608d929ef847f611b4e1f568358cf5460959b0d8ad97ffa328f67d8e\",\"dweb:/ipfs/QmeKcmE9MKS1au7uvK1ioMayQqre9yY3KE9FvHE3wA7boP\"]},\"contracts/smart-contract-wallet/aa-4337/interfaces/IStakeManager.sol\":{\"keccak256\":\"0x2837b8aefb7c69b959a2a9435fba865a9275edd5d3f50465fb06e28322a18b8f\",\"license\":\"GPL-3.0-only\",\"urls\":[\"bzz-raw://a1fe1c192e959f4962be11483e2eb872a7d6f5f87d220dff0dde2dbcd6c48553\",\"dweb:/ipfs/QmenW3vP5wnAVVg8rGfwFQV85AJm5j1j7qLCuo89AzzLDB\"]},\"contracts/smart-contract-wallet/aa-4337/interfaces/UserOperation.sol\":{\"keccak256\":\"0x274a05da373e68f76955cc92b9ee554cc24fe82d0c8f5bd5bef271202cf3a09e\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://d4f5e7fe7416e05c65c4c6da3a8acba0f5cc2bb39a2446146c41d5ec75d1bbd6\",\"dweb:/ipfs/QmVXq9Wv9eYziTAN2fqdar1eAGoYEa9Qtz5NmWei88CaAV\"]},\"contracts/smart-contract-wallet/aa-4337/utils/Exec.sol\":{\"keccak256\":\"0x699f458b342e39a64c8b364cfa9fdeec630f2c2fe71dd0ec27ea3e8a77dd484e\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://cd61e0bc8694f6a857dae1d9cb84e4f06f925fd42792f29cf48ebe240b64bc52\",\"dweb:/ipfs/QmWKdcY6YdqGaxieyFzBg54MqymrHDLh6JcG3XxrQaWqsL\"]}},\"version\":1}","zk_version":"1.3.10"},"devdoc":{"errors":{"FailedOp(uint256,string)":[{"params":{"opIndex":"- index into the array of ops to the failed one (in simulateValidation, this is always zero)","reason":"- revert reason      The string starts with a unique code \"AAmn\", where \"m\" is \"1\" for factory, \"2\" for account and \"3\" for paymaster issues,      so a failure can be attributed to the correct entity.   Should be caught in off-chain handleOps simulation and not happen on-chain.   Useful for mitigating DoS attempts against batchers or for troubleshooting of factory/account/paymaster reverts."}}],"ValidationResult((uint256,uint256,bool,uint48,uint48,bytes),(uint256,uint256),(uint256,uint256),(uint256,uint256))":[{"params":{"factoryInfo":"stake information about the factory (if any)","paymasterInfo":"stake information about the paymaster (if any)","returnInfo":"gas and time-range returned values","senderInfo":"stake information about the sender"}}],"ValidationResultWithAggregation((uint256,uint256,bool,uint48,uint48,bytes),(uint256,uint256),(uint256,uint256),(uint256,uint256),(address,(uint256,uint256)))":[{"params":{"aggregatorInfo":"signature aggregation info (if the account requires signature aggregator)      bundler MUST use it to verify the signature, or reject the UserOperation","factoryInfo":"stake information about the factory (if any)","paymasterInfo":"stake information about the paymaster (if any)","returnInfo":"gas and time-range returned values","senderInfo":"stake information about the sender"}}]},"kind":"dev","methods":{"addStake(uint32)":{"params":{"unstakeDelaySec":"the new lock duration before the deposit can be withdrawn."}},"getDepositInfo(address)":{"returns":{"info":"- full deposit information of given account"}},"getNonce(address,uint192)":{"params":{"key":"the high 192 bit of the nonce","sender":"the account address"},"returns":{"nonce":"a full nonce to pass for next UserOp with this sender."}},"getSenderAddress(bytes)":{"params":{"initCode":"the constructor code to be passed into the UserOperation."}},"handleAggregatedOps(((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes)[],address,bytes)[],address)":{"params":{"beneficiary":"the address to receive the fees","opsPerAggregator":"the operations to execute, grouped by aggregator (or address(0) for no-aggregator accounts)"}},"handleOps((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes)[],address)":{"params":{"beneficiary":"the address to receive the fees","ops":"the operations to execute"}},"simulateHandleOp((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes),address,bytes)":{"params":{"op":"the UserOperation to simulate","target":"if nonzero, a target address to call after userop simulation. If called, the targetSuccess and targetResult        are set to the return from that call.","targetCallData":"callData to pass to target address"}},"simulateValidation((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes))":{"details":"this method always revert. Successful result is ValidationResult error. other errors are failures.The node must also verify it doesn't use banned opcodes, and that it doesn't reference storage outside the account's data.","params":{"userOp":"the user operation to validate."}},"withdrawStake(address)":{"params":{"withdrawAddress":"the address to send withdrawn value."}},"withdrawTo(address,uint256)":{"params":{"withdrawAddress":"the address to send withdrawn value.","withdrawAmount":"the amount to withdraw."}}},"version":1},"userdoc":{"errors":{"ExecutionResult(uint256,uint256,uint48,uint48,bool,bytes)":[{"notice":"return value of simulateHandleOp"}],"FailedOp(uint256,string)":[{"notice":"a custom revert error of handleOps, to identify the offending op.  NOTE: if simulateValidation passes successfully, there should be no reason for handleOps to fail on it."}],"SenderAddressResult(address)":[{"notice":"return value of getSenderAddress"}],"SignatureValidationFailed(address)":[{"notice":"error case when a signature aggregator fails to verify the aggregated signature it had created."}],"ValidationResult((uint256,uint256,bool,uint48,uint48,bytes),(uint256,uint256),(uint256,uint256),(uint256,uint256))":[{"notice":"Successful result from simulateValidation."}],"ValidationResultWithAggregation((uint256,uint256,bool,uint48,uint48,bytes),(uint256,uint256),(uint256,uint256),(uint256,uint256),(address,(uint256,uint256)))":[{"notice":"Successful result from simulateValidation, if the account returns a signature aggregator"}]},"events":{"AccountDeployed(bytes32,address,address,address)":{"notice":"account \"sender\" was deployed."},"BeforeExecution()":{"notice":"an event emitted by handleOps(), before starting the execution loop. any event emitted before this event, is part of the validation."},"SignatureAggregatorChanged(address)":{"notice":"signature aggregator used by the following UserOperationEvents within this bundle."},"StakeLocked(address,uint256,uint256)":{"notice":"Emitted when stake or unstake delay are modified"},"StakeUnlocked(address,uint256)":{"notice":"Emitted once a stake is scheduled for withdrawal"},"UserOperationRevertReason(bytes32,address,uint256,bytes)":{"notice":"An event emitted if the UserOperation \"callData\" reverted with non-zero length"}},"kind":"user","methods":{"SIG_VALIDATION_FAILED()":{"notice":"for simulation purposes, validateUserOp (and validatePaymasterUserOp) must return this value in case of signature failure, instead of revert."},"_validateSenderAndPaymaster(bytes,address,bytes)":{"notice":"Called only during simulation. This function always reverts to prevent warm/cold storage differentiation in simulation vs execution."},"addStake(uint32)":{"notice":"add to the account's stake - amount and delay any pending unstake is first cancelled."},"balanceOf(address)":{"notice":"return the deposit (for gas payment) of the account"},"depositTo(address)":{"notice":"add to the deposit of the given account"},"deposits(address)":{"notice":"maps paymaster to their deposits and stakes"},"getNonce(address,uint192)":{"notice":"Return the next nonce for this sender. Within a given key, the nonce values are sequenced (starting with zero, and incremented by one on each userop) But UserOp with different keys can come with arbitrary order."},"getSenderAddress(bytes)":{"notice":"Get counterfactual sender address.  Calculate the sender contract address that will be generated by the initCode and salt in the UserOperation. this method always revert, and returns the address in SenderAddressResult error"},"getUserOpHash((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes))":{"notice":"generate a request Id - unique identifier for this request. the request ID is a hash over the content of the userOp (except the signature), the entrypoint and the chainid."},"handleAggregatedOps(((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes)[],address,bytes)[],address)":{"notice":"Execute a batch of UserOperation with Aggregators"},"handleOps((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes)[],address)":{"notice":"Execute a batch of UserOperations. no signature aggregator is used. if any account requires an aggregator (that is, it returned an aggregator when performing simulateValidation), then handleAggregatedOps() must be used instead."},"incrementNonce(uint192)":{"notice":"Manually increment the nonce of the sender. This method is exposed just for completeness.. Account does NOT need to call it, neither during validation, nor elsewhere, as the EntryPoint will update the nonce regardless. Possible use-case is call it with various keys to \"initialize\" their nonces to one, so that future UserOperations will not pay extra for the first transaction with a given key."},"innerHandleOp(bytes,((address,uint256,uint256,uint256,uint256,address,uint256,uint256),bytes32,uint256,uint256,uint256),bytes)":{"notice":"inner function to handle a UserOperation. Must be declared \"external\" to open a call context, but it can only be called by handleOps."},"nonceSequenceNumber(address,uint192)":{"notice":"The next valid sequence number for a given nonce key."},"simulateHandleOp((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes),address,bytes)":{"notice":"simulate full execution of a UserOperation (including both validation and target execution) this method will always revert with \"ExecutionResult\". it performs full validation of the UserOperation, but ignores signature error. an optional target address is called after the userop succeeds, and its value is returned (before the entire call is reverted) Note that in order to collect the the success/failure of the target call, it must be executed with trace enabled to track the emitted events."},"simulateValidation((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes))":{"notice":"Simulate a call to account.validateUserOp and paymaster.validatePaymasterUserOp."},"unlockStake()":{"notice":"attempt to unlock the stake. the value can be withdrawn (using withdrawStake) after the unstake delay."},"withdrawStake(address)":{"notice":"withdraw from the (unlocked) stake. must first call unlockStake and wait for the unstakeDelay to pass"},"withdrawTo(address,uint256)":{"notice":"withdraw from the deposit."}},"version":1},"storageLayout":{"storage":[{"astId":2907,"contract":"contracts/smart-contract-wallet/aa-4337/core/EntryPoint.sol:EntryPoint","label":"deposits","offset":0,"slot":"0","type":"t_mapping(t_address,t_struct(DepositInfo)3682_storage)"},{"astId":2771,"contract":"contracts/smart-contract-wallet/aa-4337/core/EntryPoint.sol:EntryPoint","label":"nonceSequenceNumber","offset":0,"slot":"1","type":"t_mapping(t_address,t_mapping(t_uint192,t_uint256))"},{"astId":10,"contract":"contracts/smart-contract-wallet/aa-4337/core/EntryPoint.sol:EntryPoint","label":"_status","offset":0,"slot":"2","type":"t_uint256"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_mapping(t_address,t_mapping(t_uint192,t_uint256))":{"encoding":"mapping","key":"t_address","label":"mapping(address => mapping(uint192 => uint256))","numberOfBytes":"32","value":"t_mapping(t_uint192,t_uint256)"},"t_mapping(t_address,t_struct(DepositInfo)3682_storage)":{"encoding":"mapping","key":"t_address","label":"mapping(address => struct IStakeManager.DepositInfo)","numberOfBytes":"32","value":"t_struct(DepositInfo)3682_storage"},"t_mapping(t_uint192,t_uint256)":{"encoding":"mapping","key":"t_uint192","label":"mapping(uint192 => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_struct(DepositInfo)3682_storage":{"encoding":"inplace","label":"struct IStakeManager.DepositInfo","members":[{"astId":3673,"contract":"contracts/smart-contract-wallet/aa-4337/core/EntryPoint.sol:EntryPoint","label":"deposit","offset":0,"slot":"0","type":"t_uint112"},{"astId":3675,"contract":"contracts/smart-contract-wallet/aa-4337/core/EntryPoint.sol:EntryPoint","label":"staked","offset":14,"slot":"0","type":"t_bool"},{"astId":3677,"contract":"contracts/smart-contract-wallet/aa-4337/core/EntryPoint.sol:EntryPoint","label":"stake","offset":15,"slot":"0","type":"t_uint112"},{"astId":3679,"contract":"contracts/smart-contract-wallet/aa-4337/core/EntryPoint.sol:EntryPoint","label":"unstakeDelaySec","offset":0,"slot":"1","type":"t_uint32"},{"astId":3681,"contract":"contracts/smart-contract-wallet/aa-4337/core/EntryPoint.sol:EntryPoint","label":"withdrawTime","offset":4,"slot":"1","type":"t_uint48"}],"numberOfBytes":"64"},"t_uint112":{"encoding":"inplace","label":"uint112","numberOfBytes":"14"},"t_uint192":{"encoding":"inplace","label":"uint192","numberOfBytes":"24"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"},"t_uint32":{"encoding":"inplace","label":"uint32","numberOfBytes":"4"},"t_uint48":{"encoding":"inplace","label":"uint48","numberOfBytes":"6"}}},"evm":{"legacyAssembly":null,"assembly":"\t.text\n\t.file\t\"EntryPoint.sol:EntryPoint\"\n\t.globl\t__entry\n__entry:\n.func_begin0:\n\tnop\tstack+=[1]\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, r4\n\tptr.add\tr1, r4, stack[@ptr_return_data]\n\tptr.add\tr1, r0, stack[@ptr_calldata]\n\tand\t@CPI0_0[0], r3, stack[@calldatasize]\n\tadd\t0, r0, stack[@returndatasize]\n\tand!\t1, r2, r1\n\tjump.ne\t@.BB0_1\n\tnear_call\tr0, @__runtime, @DEFAULT_UNWIND\n.BB0_1:\n\tadd\t160, r0, r1\n\tst.1\t64, r1\n\tcontext.get_context_u128\tr1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_2\n\tadd\t1, r0, r2\n\tadd\t2, r0, r1\n\tadd\tr2, r0, stack-[1]\n\tsstore\tr1, r2\n\tadd\t@CPI0_1[0], r0, r1\n\tst.1\t196, r1\n\tcontext.gas_left\tr1\n\tadd\t@CPI0_2[0], r0, r2\n\tst.1\t160, r2\n\tst.1\t164, r0\n\tadd\t96, r0, r2\n\tst.1\t228, r2\n\tadd\t@CPI0_0[0], r0, r2\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_3[0], r1, r1\n\tst.1\t260, r0\n\tadd\t32774, r0, r2\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_4\n\tadd\tstack-[1], r0, r3\n\tld\tr1, r1\n\tsub.s!\t0, r1, r2\n\tjump.ne\t@.BB0_12\n\tptr.add\tstack[@ptr_return_data], r0, r1\n\tadd\tstack[@returndatasize], r0, r4\n\tjump\t@.BB0_7\n.BB0_2:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_4:\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tadd\tr1, r0, r2\n\tshr.s\t96, r2, r2\n\tand\t@CPI0_0[0], r2, stack[@returndatasize]\n\tand\t@CPI0_0[0], r2, r4\n.BB0_7:\n\tld.1\t64, r2\n\tand\t31, r4, r3\n\tshr.s!\t5, r4, r4\n\tjump.eq\t@.BB0_14\n\tadd\tr0, r0, r5\n.BB0_9:\n\tshl.s\t5, r5, r6\n\tadd\tr2, r6, r7\n\tptr.add\tr1, r6, r6\n\tld\tr6, r6\n\tst.1\tr7, r6\n\tadd\t1, r5, r5\n\tsub!\tr5, r4, r6\n\tjump.lt\t@.BB0_9\n.BB0_14:\n\tsub.s!\t0, r3, r5\n\tjump.eq\t@.BB0_11\n\tshl.s\t5, r4, r4\n\tptr.add\tr1, r4, r1\n\tadd\tr2, r4, r4\n\tshl.s\t3, r3, r3\n\tld.1\tr4, r5\n\tshl\tr5, r3, r5\n\tshr\tr5, r3, r5\n\tld\tr1, r1\n\tsub\t256, r3, r3\n\tshr\tr1, r3, r1\n\tshl\tr1, r3, r1\n\tor\tr1, r5, r1\n\tst.1\tr4, r1\n.BB0_11:\n\tadd\t@CPI0_0[0], r0, r1\n\tadd\tstack[@returndatasize], r0, r3\n\tsub.s!\t@CPI0_0[0], r3, r4\n\tadd.ge\tr1, r0, r3\n\tsub.s!\t@CPI0_0[0], r2, r4\n\tadd.lt\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t96, r3, r2\n\tor\tr2, r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_12:\n\tst.1\t128, r1\n\tst.2\t320, r0\n\tst.2\t352, r1\n\tadd\t32, r0, r1\n\tst.2\t256, r1\n\tst.2\t288, r3\n\tadd\t@CPI0_4[0], r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.func_end0:\n\n__keccak256:\n.func_begin1:\n\tadd\t@CPI1_0[0], r0, r3\n\tsub.s!\t@CPI1_0[0], r1, r4\n\tadd.ge\tr3, r0, r1\n\tshl.s\t64, r1, r1\n\tsub.s!\t@CPI1_0[0], r2, r4\n\tadd.ge\tr3, r0, r2\n\tshl.s\t96, r2, r2\n\tor\tr2, r1, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI1_0[0], r2, r4\n\tadd.ge\tr3, r0, r2\n\tshl.s\t192, r2, r2\n\tor\tr2, r1, r1\n\tor\t@CPI1_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB1_2\n\tld\tr1, r1\n\tret\n.BB1_2:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end1:\n\n__runtime:\n.func_begin2:\n\tnop\tstack+=[34]\n\tadd\t128, r0, r1\n\tst.1\t64, r1\n\tadd\tstack[@calldatasize], r0, r2\n\tsub.s!\t4, r2, r1\n\tjump.lt\t@.BB2_28\n\tptr.add\tstack[@ptr_calldata], r0, r1\n\tld\tr1, r3\n\tshr.s\t224, r3, r3\n\tsub.s!\t@CPI2_0[0], r3, r4\n\tjump.gt\t@.BB2_15\n\tsub.s!\t@CPI2_14[0], r3, r4\n\tjump.gt\t@.BB2_9\n\tsub.s!\t@CPI2_21[0], r3, r4\n\tjump.le\t@.BB2_4\n\tsub.s!\t@CPI2_22[0], r3, r4\n\tjump.eq\t@.BB2_55\n\tsub.s!\t@CPI2_23[0], r3, r4\n\tjump.eq\t@.BB2_60\n\tsub.s!\t@CPI2_24[0], r3, r3\n\tjump.ne\t@.BB2_30\n\tsub.s\t4, r2, r3\n\tadd\t@CPI2_27[0], r0, r4\n\tsub.s!\t64, r3, r5\n\tadd\t0, r0, r5\n\tadd.lt\tr4, r0, r5\n\tand\t@CPI2_27[0], r3, r3\n\tsub.s!\t0, r3, r6\n\tadd.le\t0, r0, r4\n\tsub.s!\t@CPI2_27[0], r3, r3\n\tadd\tr5, r0, r3\n\tadd.eq\tr4, r0, r3\n\tsub.s!\t0, r3, r3\n\tjump.ne\t@.BB2_30\n\tptr.add.s\t4, r1, r3\n\tld\tr3, r3\n\tadd\tr3, r0, stack-[6]\n\tsub.s!\t@CPI2_34[0], r3, r3\n\tjump.gt\t@.BB2_30\n\tadd\tstack-[6], r0, r3\n\tadd\t35, r3, r3\n\tadd\t@CPI2_27[0], r0, r4\n\tsub!\tr3, r2, r5\n\tadd\t0, r0, r5\n\tadd.ge\tr4, r0, r5\n\tand\t@CPI2_27[0], r2, r6\n\tand\t@CPI2_27[0], r3, r3\n\tsub!\tr3, r6, r7\n\tadd.ge\t0, r0, r4\n\txor\tr3, r6, r3\n\tsub.s!\t@CPI2_27[0], r3, r3\n\tadd\tr5, r0, r3\n\tadd.eq\tr4, r0, r3\n\tsub.s!\t0, r3, r3\n\tjump.ne\t@.BB2_30\n\tadd\tstack-[6], r0, r3\n\tadd\t4, r3, r3\n\tptr.add\tr1, r3, r3\n\tld\tr3, r3\n\tadd\tr3, r0, stack-[28]\n\tsub.s!\t@CPI2_34[0], r3, r3\n\tjump.gt\t@.BB2_30\n\tadd\tstack-[6], r0, r3\n\tadd\t36, r3, r4\n\tadd\tstack-[28], r0, r3\n\tshl.s\t5, r3, r3\n\tadd\tr4, r0, stack-[33]\n\tadd\tr3, r4, r4\n\tsub!\tr4, r2, r2\n\tjump.gt\t@.BB2_30\n\tptr.add.s\t36, r1, r1\n\tld\tr1, r1\n\tadd\tr1, r0, stack-[5]\n\tsub.s!\t@CPI2_28[0], r1, r1\n\tjump.gt\t@.BB2_30\n\tadd\t2, r0, r2\n\tsload\tr2, r1\n\tsub.s!\t2, r1, r1\n\tjump.ne\t@.BB2_85\n\tadd\t@CPI2_42[0], r0, r1\n\tst.1\t128, r1\n\tadd\t32, r0, r1\n\tst.1\t132, r1\n\tadd\t31, r0, r1\n\tst.1\t164, r1\n\tadd\t@CPI2_86[0], r0, r1\n\tst.1\t196, r1\n\tadd\t@CPI2_116[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB2_28:\n\tsub.s!\t0, r2, r1\n\tjump.ne\t@.BB2_30\n\tnear_call\tr0, @fun, @DEFAULT_UNWIND\n\tadd\tr0, r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB2_15:\n\tsub.s!\t@CPI2_1[0], r3, r4\n\tjump.gt\t@.BB2_22\n\tsub.s!\t@CPI2_8[0], r3, r4\n\tjump.le\t@.BB2_17\n\tsub.s!\t@CPI2_9[0], r3, r4\n\tjump.eq\t@.BB2_463\n\tsub.s!\t@CPI2_10[0], r3, r4\n\tjump.eq\t@.BB2_491\n\tsub.s!\t@CPI2_11[0], r3, r3\n\tjump.ne\t@.BB2_30\n\tsub.s\t4, r2, r2\n\tadd\t@CPI2_27[0], r0, r3\n\tsub.s!\t32, r2, r4\n\tadd\t0, r0, r4\n\tadd.lt\tr3, r0, r4\n\tand\t@CPI2_27[0], r2, r2\n\tsub.s!\t0, r2, r5\n\tadd.le\t0, r0, r3\n\tsub.s!\t@CPI2_27[0], r2, r2\n\tadd\tr4, r0, r2\n\tadd.eq\tr3, r0, r2\n\tsub.s!\t0, r2, r2\n\tjump.ne\t@.BB2_30\n\tptr.add.s\t4, r1, r1\n\tld\tr1, r1\n\tsub.s!\t@CPI2_28[0], r1, r2\n\tjump.gt\t@.BB2_30\n\tnear_call\tr0, @fun_depositTo, @DEFAULT_UNWIND\n\tadd\tr0, r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB2_9:\n\tsub.s!\t@CPI2_15[0], r3, r1\n\tjump.le\t@.BB2_10\n\tsub.s!\t@CPI2_16[0], r3, r1\n\tjump.eq\t@.BB2_239\n\tsub.s!\t@CPI2_17[0], r3, r1\n\tjump.eq\t@.BB2_432\n\tsub.s!\t@CPI2_18[0], r3, r1\n\tjump.ne\t@.BB2_30\n\tcontext.get_context_u128\tr1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB2_30\n\tsub.s\t4, r0, r1\n\tadd\tstack[@calldatasize], r1, r1\n\tadd\t@CPI2_27[0], r0, r2\n\tsub.s!\t32, r1, r3\n\tadd\t0, r0, r3\n\tadd.lt\tr2, r0, r3\n\tand\t@CPI2_27[0], r1, r1\n\tsub.s!\t0, r1, r4\n\tadd.le\t0, r0, r2\n\tsub.s!\t@CPI2_27[0], r1, r1\n\tadd\tr3, r0, r1\n\tadd.eq\tr2, r0, r1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB2_30\n\tadd\t4, r0, r1\n\tptr.add\tstack[@ptr_calldata], r1, r1\n\tld\tr1, r1\n\tsub.s!\t@CPI2_28[0], r1, r2\n\tjump.gt\t@.BB2_30\n\tst.1\t0, r1\n\tst.1\t32, r0\n\tadd\t64, r0, r2\n\tadd\tr0, r0, r1\n\tnear_call\tr0, @__keccak256, @DEFAULT_UNWIND\n\tsload\tr1, r1\n\tand\t@CPI2_30[0], r1, r1\n\tld.1\t64, r2\n\tst.1\tr2, r1\n\tadd\t@CPI2_31[0], r0, r1\n\tsub.s!\t@CPI2_31[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI2_69[0], r1, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB2_22:\n\tsub.s!\t@CPI2_2[0], r3, r1\n\tjump.le\t@.BB2_23\n\tsub.s!\t@CPI2_3[0], r3, r1\n\tjump.eq\t@.BB2_521\n\tsub.s!\t@CPI2_4[0], r3, r1\n\tjump.eq\t@.BB2_602\n\tsub.s!\t@CPI2_5[0], r3, r1\n\tjump.ne\t@.BB2_30\n\tcontext.get_context_u128\tr1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB2_30\n\tsub.s\t4, r0, r1\n\tadd\tstack[@calldatasize], r1, r1\n\tadd\t@CPI2_27[0], r0, r2\n\tsub.s!\t32, r1, r3\n\tadd\t0, r0, r3\n\tadd.lt\tr2, r0, r3\n\tand\t@CPI2_27[0], r1, r1\n\tsub.s!\t0, r1, r4\n\tadd.le\t0, r0, r2\n\tsub.s!\t@CPI2_27[0], r1, r1\n\tadd\tr3, r0, r1\n\tadd.eq\tr2, r0, r1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB2_30\n\tadd\t4, r0, r1\n\tptr.add\tstack[@ptr_calldata], r1, r1\n\tld\tr1, r1\n\tsub.s!\t@CPI2_28[0], r1, r2\n\tjump.gt\t@.BB2_30\n\tst.1\t0, r1\n\tst.1\t32, r0\n\tadd\t64, r0, r2\n\tadd\tr0, r0, r1\n\tnear_call\tr0, @__keccak256, @DEFAULT_UNWIND\n\tadd\t1, r1, r2\n\tsload\tr2, r2\n\tsload\tr1, r1\n\tand!\t@CPI2_29[0], r1, r3\n\tadd\t0, r0, r3\n\tadd.ne\t1, r0, r3\n\tld.1\t64, r4\n\tadd\t32, r4, r5\n\tst.1\tr5, r3\n\tshr.s\t120, r1, r3\n\tand\t@CPI2_30[0], r3, r3\n\tadd\t64, r4, r5\n\tst.1\tr5, r3\n\tadd\t96, r4, r3\n\tand\t@CPI2_31[0], r2, r5\n\tst.1\tr3, r5\n\tshr.s\t32, r2, r2\n\tand\t@CPI2_32[0], r2, r2\n\tadd\t128, r4, r3\n\tst.1\tr3, r2\n\tand\t@CPI2_30[0], r1, r1\n\tst.1\tr4, r1\n\tadd\t@CPI2_31[0], r0, r1\n\tsub.s!\t@CPI2_31[0], r4, r2\n\tadd.lt\tr4, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI2_33[0], r1, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB2_4:\n\tsub.s!\t@CPI2_25[0], r3, r4\n\tjump.eq\t@.BB2_29\n\tsub.s!\t@CPI2_26[0], r3, r1\n\tjump.ne\t@.BB2_30\n\tcontext.get_context_u128\tr1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB2_30\n\tsub.s\t4, r0, r1\n\tadd\tstack[@calldatasize], r1, r1\n\tadd\t@CPI2_27[0], r0, r2\n\tsub.s!\t32, r1, r3\n\tadd\t0, r0, r3\n\tadd.lt\tr2, r0, r3\n\tand\t@CPI2_27[0], r1, r1\n\tsub.s!\t0, r1, r4\n\tadd.le\t0, r0, r2\n\tsub.s!\t@CPI2_27[0], r1, r1\n\tadd\tr3, r0, r1\n\tadd.eq\tr2, r0, r1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB2_30\n\tadd\t4, r0, r1\n\tptr.add\tstack[@ptr_calldata], r1, r1\n\tld\tr1, r1\n\tadd\tr1, r0, stack-[34]\n\tsub.s!\t@CPI2_87[0], r1, r1\n\tjump.gt\t@.BB2_30\n\tcontext.caller\tr1\n\tst.1\t0, r1\n\tadd\t1, r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI2_31[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI2_31[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI2_45[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB2_30\n\tld\tr1, r1\n\tadd\tstack-[34], r0, r2\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tadd\t@CPI2_31[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI2_31[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI2_45[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB2_30\n\tld\tr1, r1\n\tsload\tr1, r2\n\tsub.s\t1, r0, r3\n\tsub!\tr2, r3, r3\n\tjump.eq\t@.BB2_38\n\tadd\t1, r2, r2\n\tsstore\tr1, r2\n\tadd\tr0, r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB2_17:\n\tsub.s!\t@CPI2_12[0], r3, r1\n\tjump.eq\t@.BB2_440\n\tsub.s!\t@CPI2_13[0], r3, r1\n\tjump.ne\t@.BB2_30\n\tcontext.get_context_u128\tr1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB2_30\n\tadd\tstack[@calldatasize], r0, r1\n\tsub.s\t4, r1, r2\n\tadd\t@CPI2_27[0], r0, r3\n\tsub.s!\t96, r2, r4\n\tadd\t0, r0, r4\n\tadd.lt\tr3, r0, r4\n\tand\t@CPI2_27[0], r2, r2\n\tsub.s!\t0, r2, r5\n\tadd.le\t0, r0, r3\n\tsub.s!\t@CPI2_27[0], r2, r2\n\tadd\tr4, r0, r2\n\tadd.eq\tr3, r0, r2\n\tsub.s!\t0, r2, r2\n\tjump.ne\t@.BB2_30\n\tptr.add\tstack[@ptr_calldata], r0, r2\n\tptr.add.s\t4, r2, r3\n\tld\tr3, r4\n\tsub.s!\t@CPI2_34[0], r4, r3\n\tjump.gt\t@.BB2_30\n\tadd\t35, r4, r3\n\tadd\t@CPI2_27[0], r0, r5\n\tsub!\tr3, r1, r6\n\tadd\t0, r0, r6\n\tadd.ge\tr5, r0, r6\n\tand\t@CPI2_27[0], r1, r7\n\tand\t@CPI2_27[0], r3, r3\n\tsub!\tr3, r7, r8\n\tadd.ge\t0, r0, r5\n\txor\tr3, r7, r3\n\tsub.s!\t@CPI2_27[0], r3, r3\n\tadd\tr6, r0, r3\n\tadd.eq\tr5, r0, r3\n\tsub.s!\t0, r3, r3\n\tjump.ne\t@.BB2_30\n\tadd\t4, r4, r3\n\tptr.add\tr2, r3, r3\n\tld\tr3, r3\n\tsub.s!\t@CPI2_34[0], r3, r5\n\tjump.gt\t@.BB2_30\n\tadd\tr4, r3, r4\n\tadd\t36, r4, r4\n\tsub!\tr4, r1, r4\n\tjump.gt\t@.BB2_30\n\tptr.add.s\t36, r2, r4\n\tld\tr4, r4\n\tsub.s!\t@CPI2_28[0], r4, r5\n\tjump.gt\t@.BB2_30\n\tptr.add.s\t68, r2, r5\n\tld\tr5, r5\n\tsub.s!\t@CPI2_34[0], r5, r6\n\tjump.gt\t@.BB2_30\n\tadd\t35, r5, r6\n\tadd\t@CPI2_27[0], r0, r7\n\tsub!\tr6, r1, r8\n\tadd\t0, r0, r8\n\tadd.ge\tr7, r0, r8\n\tand\t@CPI2_27[0], r1, r9\n\tand\t@CPI2_27[0], r6, r6\n\tsub!\tr6, r9, r10\n\tadd.ge\t0, r0, r7\n\txor\tr6, r9, r6\n\tsub.s!\t@CPI2_27[0], r6, r6\n\tadd\tr8, r0, r6\n\tadd.eq\tr7, r0, r6\n\tsub.s!\t0, r6, r6\n\tjump.ne\t@.BB2_30\n\tadd\t4, r5, r6\n\tptr.add\tr2, r6, r2\n\tld\tr2, r2\n\tadd\tr2, r0, stack-[34]\n\tsub.s!\t@CPI2_34[0], r2, r2\n\tjump.gt\t@.BB2_30\n\tadd\t36, r5, r5\n\tadd\tstack-[34], r0, r2\n\tadd\tr5, r0, stack-[33]\n\tadd\tr2, r5, r2\n\tsub!\tr2, r1, r1\n\tjump.gt\t@.BB2_30\n\tsub.s!\t0, r3, r1\n\tjump.ne\t@.BB2_458\n\tadd\t@CPI2_37[0], r0, r1\n\tst.2\t0, r1\n\tst.2\t4, r4\n\tadd\t@CPI2_31[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI2_31[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI2_38[0], r1, r1\n\tadd\t32770, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB2_30\n\tld\tr1, r1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB2_458\n\tld.1\t64, r2\n\tadd\tr2, r0, stack-[34]\n\tadd\t@CPI2_42[0], r0, r1\n\tst.1\tr2, r1\n\tadd\t4, r2, r1\n\tnear_call\tr0, @abi_encode_stringliteral_71b8, @DEFAULT_UNWIND\n\tadd\tstack-[34], r0, r4\n\tsub\tr1, r4, r1\n\tadd\t@CPI2_31[0], r0, r2\n\tsub.s!\t@CPI2_31[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tsub.s!\t@CPI2_31[0], r4, r3\n\tadd.lt\tr4, r0, r2\n\tshl.s\t64, r2, r2\n\tshl.s\t96, r1, r1\n\tor\tr1, r2, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB2_10:\n\tsub.s!\t@CPI2_19[0], r3, r1\n\tjump.eq\t@.BB2_224\n\tsub.s!\t@CPI2_20[0], r3, r1\n\tjump.ne\t@.BB2_30\n\tcontext.get_context_u128\tr1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB2_30\n\tsub.s\t4, r0, r1\n\tadd\tstack[@calldatasize], r1, r1\n\tadd\t@CPI2_27[0], r0, r2\n\tsub.s!\t64, r1, r3\n\tadd\t0, r0, r3\n\tadd.lt\tr2, r0, r3\n\tand\t@CPI2_27[0], r1, r1\n\tsub.s!\t0, r1, r4\n\tadd.le\t0, r0, r2\n\tsub.s!\t@CPI2_27[0], r1, r1\n\tadd\tr3, r0, r1\n\tadd.eq\tr2, r0, r1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB2_30\n\tptr.add\tstack[@ptr_calldata], r0, r2\n\tptr.add.s\t4, r2, r1\n\tld\tr1, r1\n\tsub.s!\t@CPI2_28[0], r1, r3\n\tjump.gt\t@.BB2_30\n\tptr.add.s\t36, r2, r2\n\tld\tr2, r2\n\tadd\tr2, r0, stack-[34]\n\tsub.s!\t@CPI2_87[0], r2, r2\n\tjump.gt\t@.BB2_30\n\tst.1\t0, r1\n\tadd\t1, r0, r1\n\tst.1\t32, r1\n\tadd\t64, r0, r2\n\tadd\tr0, r0, r1\n\tnear_call\tr0, @__keccak256, @DEFAULT_UNWIND\n\tadd\tstack-[34], r0, r2\n\tnear_call\tr0, @mapping_index_access_mapping_uint192_uint256_of_uint192, @DEFAULT_UNWIND\n\tadd\tstack-[34], r0, r2\n\tshl.s\t64, r2, r2\n\tsload\tr1, r1\n\tor\tr1, r2, r1\n\tld.1\t64, r2\n\tst.1\tr2, r1\n\tadd\t@CPI2_31[0], r0, r1\n\tsub.s!\t@CPI2_31[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI2_69[0], r1, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB2_23:\n\tsub.s!\t@CPI2_6[0], r3, r1\n\tjump.eq\t@.BB2_496\n\tsub.s!\t@CPI2_7[0], r3, r1\n\tjump.ne\t@.BB2_30\n\tcontext.get_context_u128\tr1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB2_30\n\tsub.s\t4, r0, r1\n\tadd\tstack[@calldatasize], r1, r1\n\tadd\t@CPI2_27[0], r0, r2\n\tsub.s!\t32, r1, r3\n\tadd\t0, r0, r3\n\tadd.lt\tr2, r0, r3\n\tand\t@CPI2_27[0], r1, r1\n\tsub.s!\t0, r1, r4\n\tadd.le\t0, r0, r2\n\tsub.s!\t@CPI2_27[0], r1, r1\n\tadd\tr3, r0, r1\n\tadd.eq\tr2, r0, r1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB2_30\n\tadd\t4, r0, r1\n\tptr.add\tstack[@ptr_calldata], r1, r1\n\tld\tr1, r1\n\tadd\tr1, r0, stack-[34]\n\tsub.s!\t@CPI2_28[0], r1, r1\n\tjump.gt\t@.BB2_30\n\tcontext.caller\tr1\n\tadd\tr1, r0, stack-[33]\n\tand\t@CPI2_28[0], r1, r1\n\tst.1\t0, r1\n\tst.1\t32, r0\n\tadd\t@CPI2_31[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI2_31[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI2_45[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB2_30\n\tld\tr1, r3\n\tsload\tr3, r1\n\tshr.s\t120, r1, r1\n\tand!\t@CPI2_30[0], r1, r2\n\tjump.ne\t@.BB2_512\n\tld.1\t64, r1\n\tadd\t68, r1, r2\n\tadd\t@CPI2_62[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t20, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI2_42[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI2_31[0], r0, r2\n\tsub.s!\t@CPI2_31[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI2_60[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB2_60:\n\tsub.s\t4, r2, r3\n\tadd\t@CPI2_27[0], r0, r4\n\tsub.s!\t448, r3, r5\n\tadd\t0, r0, r5\n\tadd.lt\tr4, r0, r5\n\tand\t@CPI2_27[0], r3, r3\n\tsub.s!\t0, r3, r6\n\tadd.le\t0, r0, r4\n\tsub.s!\t@CPI2_27[0], r3, r3\n\tadd\tr5, r0, r3\n\tadd.eq\tr4, r0, r3\n\tsub.s!\t0, r3, r3\n\tjump.ne\t@.BB2_30\n\tptr.add.s\t4, r1, r3\n\tld\tr3, r3\n\tsub.s!\t@CPI2_34[0], r3, r4\n\tjump.gt\t@.BB2_30\n\tadd\t35, r3, r4\n\tadd\t@CPI2_27[0], r0, r5\n\tsub!\tr4, r2, r6\n\tadd\t0, r0, r6\n\tadd.ge\tr5, r0, r6\n\tand\t@CPI2_27[0], r2, r7\n\tand\t@CPI2_27[0], r4, r4\n\tsub!\tr4, r7, r8\n\tadd.ge\t0, r0, r5\n\txor\tr4, r7, r4\n\tsub.s!\t@CPI2_27[0], r4, r4\n\tadd\tr6, r0, r4\n\tadd.eq\tr5, r0, r4\n\tsub.s!\t0, r4, r4\n\tjump.ne\t@.BB2_30\n\tadd\t4, r3, r4\n\tptr.add\tr1, r4, r1\n\tld\tr1, r1\n\tsub.s!\t@CPI2_34[0], r1, r4\n\tjump.gt\t@.BB2_44\n\tadd\t191, r1, r4\n\tsub.s\t32, r0, r5\n\tand\tr4, r5, r4\n\tsub.s!\t@CPI2_34[0], r4, r5\n\tjump.gt\t@.BB2_44\n\tadd\t36, r3, r3\n\tst.1\t64, r4\n\tst.1\t128, r1\n\tadd\tr1, r3, r4\n\tsub!\tr4, r2, r2\n\tjump.gt\t@.BB2_30\n\tand\t31, r1, r2\n\tptr.add\tstack[@ptr_calldata], r3, r3\n\tshr.s!\t5, r1, r4\n\tjump.eq\t@.BB2_704\n\tadd\tr0, r0, r5\n.BB2_68:\n\tshl.s\t5, r5, r6\n\tptr.add\tr3, r6, r7\n\tld\tr7, r7\n\tadd\t160, r6, r6\n\tst.1\tr6, r7\n\tadd\t1, r5, r5\n\tsub!\tr5, r4, r6\n\tjump.lt\t@.BB2_68\n.BB2_704:\n\tsub.s!\t0, r2, r5\n\tjump.eq\t@.BB2_70\n\tshl.s\t5, r4, r4\n\tptr.add\tr3, r4, r3\n\tshl.s\t3, r2, r2\n\tadd\t160, r4, r4\n\tld.1\tr4, r5\n\tshl\tr5, r2, r5\n\tshr\tr5, r2, r5\n\tld\tr3, r3\n\tsub\t256, r2, r2\n\tshr\tr3, r2, r3\n\tshl\tr3, r2, r2\n\tor\tr2, r5, r2\n\tst.1\tr4, r2\n.BB2_70:\n\tadd\t160, r1, r1\n\tst.1\tr1, r0\n\tsub.s\t36, r0, r1\n\tadd\tstack[@calldatasize], r1, r1\n\tadd\t@CPI2_27[0], r0, r2\n\tsub.s!\t384, r1, r3\n\tadd\t0, r0, r3\n\tadd.lt\tr2, r0, r3\n\tand\t@CPI2_27[0], r1, r1\n\tsub.s!\t0, r1, r4\n\tadd.le\t0, r0, r2\n\tsub.s!\t@CPI2_27[0], r1, r1\n\tadd\tr3, r0, r1\n\tadd.eq\tr2, r0, r1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB2_30\n\tld.1\t64, r3\n\tsub.s!\t@CPI2_35[0], r3, r1\n\tjump.gt\t@.BB2_44\n\tadd\t160, r3, r1\n\tst.1\t64, r1\n\tsub.s!\t@CPI2_36[0], r3, r2\n\tjump.gt\t@.BB2_44\n\tadd\tr3, r0, stack-[34]\n\tadd\t416, r3, r2\n\tst.1\t64, r2\n\tadd\t36, r0, r2\n\tptr.add\tstack[@ptr_calldata], r2, r2\n\tld\tr2, r2\n\tsub.s!\t@CPI2_28[0], r2, r3\n\tjump.gt\t@.BB2_30\n\tst.1\tr1, r2\n\tadd\t68, r0, r2\n\tptr.add\tstack[@ptr_calldata], r2, r2\n\tld\tr2, r2\n\tadd\tstack-[34], r0, r4\n\tadd\t192, r4, r3\n\tst.1\tr3, r2\n\tadd\t100, r0, r2\n\tptr.add\tstack[@ptr_calldata], r2, r2\n\tld\tr2, r2\n\tadd\t224, r4, r3\n\tst.1\tr3, r2\n\tadd\t132, r0, r2\n\tptr.add\tstack[@ptr_calldata], r2, r2\n\tld\tr2, r2\n\tadd\t256, r4, r3\n\tst.1\tr3, r2\n\tadd\t288, r4, r2\n\tadd\t164, r0, r3\n\tptr.add\tstack[@ptr_calldata], r3, r3\n\tld\tr3, r3\n\tst.1\tr2, r3\n\tadd\t196, r0, r2\n\tptr.add\tstack[@ptr_calldata], r2, r2\n\tld\tr2, r2\n\tsub.s!\t@CPI2_28[0], r2, r3\n\tjump.gt\t@.BB2_30\n\tadd\tstack-[34], r0, r4\n\tadd\t320, r4, r3\n\tst.1\tr3, r2\n\tadd\t228, r0, r2\n\tptr.add\tstack[@ptr_calldata], r2, r2\n\tld\tr2, r2\n\tadd\t352, r4, r3\n\tst.1\tr3, r2\n\tadd\t260, r0, r2\n\tptr.add\tstack[@ptr_calldata], r2, r2\n\tld\tr2, r2\n\tadd\t384, r4, r3\n\tst.1\tr3, r2\n\tst.1.inc\tr4, r1, r1\n\tadd\t292, r0, r2\n\tptr.add\tstack[@ptr_calldata], r2, r2\n\tld\tr2, r2\n\tst.1\tr1, r2\n\tadd\t324, r0, r1\n\tptr.add\tstack[@ptr_calldata], r1, r1\n\tld\tr1, r1\n\tadd\t64, r4, r2\n\tst.1\tr2, r1\n\tadd\t356, r0, r1\n\tptr.add\tstack[@ptr_calldata], r1, r1\n\tld\tr1, r1\n\tadd\t96, r4, r2\n\tst.1\tr2, r1\n\tadd\t128, r4, r1\n\tadd\t388, r0, r2\n\tptr.add\tstack[@ptr_calldata], r2, r2\n\tld\tr2, r2\n\tst.1\tr1, r2\n\tadd\t420, r0, r1\n\tptr.add\tstack[@ptr_calldata], r1, r1\n\tld\tr1, r1\n\tsub.s!\t@CPI2_34[0], r1, r2\n\tjump.gt\t@.BB2_30\n\tadd\tstack[@calldatasize], r0, r2\n\tadd\t4, r1, r1\n\tnear_call\tr0, @abi_decode_bytes_calldata, @DEFAULT_UNWIND\n\tadd\tr1, r0, r3\n\tadd\tr2, r0, r4\n\tadd\t128, r0, r1\n\tadd\tstack-[34], r0, r2\n\tnear_call\tr0, @fun_innerHandleOp, @DEFAULT_UNWIND\n\tld.1\t64, r2\n\tst.1\tr2, r1\n\tadd\t@CPI2_31[0], r0, r1\n\tsub.s!\t@CPI2_31[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI2_69[0], r1, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB2_491:\n\tcontext.get_context_u128\tr1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB2_30\n\tadd\tstack[@calldatasize], r0, r1\n\tnear_call\tr0, @abi_decode_struct_UserOperation_calldata_19808, @DEFAULT_UNWIND\n\tnear_call\tr0, @fun_getUserOpHash, @DEFAULT_UNWIND\n\tld.1\t64, r2\n\tst.1\tr2, r1\n\tadd\t@CPI2_31[0], r0, r1\n\tsub.s!\t@CPI2_31[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI2_69[0], r1, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB2_432:\n\tcontext.get_context_u128\tr1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB2_30\n\tsub.s\t4, r0, r1\n\tadd\tstack[@calldatasize], r1, r1\n\tadd\t@CPI2_27[0], r0, r2\n\tsub.s!\t32, r1, r3\n\tadd\t0, r0, r3\n\tadd.lt\tr2, r0, r3\n\tand\t@CPI2_27[0], r1, r1\n\tsub.s!\t0, r1, r4\n\tadd.le\t0, r0, r2\n\tsub.s!\t@CPI2_27[0], r1, r1\n\tadd\tr3, r0, r1\n\tadd.eq\tr2, r0, r1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB2_30\n\tadd\t4, r0, r1\n\tptr.add\tstack[@ptr_calldata], r1, r1\n\tld\tr1, r1\n\tadd\tr1, r0, stack-[34]\n\tsub.s!\t@CPI2_28[0], r1, r1\n\tjump.gt\t@.BB2_30\n\tld.1\t64, r1\n\tadd\tr1, r0, stack-[33]\n\tnear_call\tr0, @finalize_allocation_19805, @DEFAULT_UNWIND\n\tadd\tstack-[33], r0, r2\n\tadd\t128, r2, r1\n\tst.1\tr1, r0\n\tadd\t96, r2, r1\n\tst.1\tr1, r0\n\tadd\t64, r2, r1\n\tst.1\tr1, r0\n\tadd\t32, r2, r1\n\tst.1\tr1, r0\n\tst.1\tr2, r0\n\tadd\tstack-[34], r0, r1\n\tst.1\t0, r1\n\tst.1\t32, r0\n\tadd\t64, r0, r2\n\tadd\tr0, r0, r1\n\tnear_call\tr0, @__keccak256, @DEFAULT_UNWIND\n\tadd\tr1, r0, stack-[34]\n\tld.1\t64, r1\n\tadd\tr1, r0, stack-[33]\n\tnear_call\tr0, @finalize_allocation_19805, @DEFAULT_UNWIND\n\tadd\tstack-[34], r0, r5\n\tsload\tr5, r1\n\tshr.s\t120, r1, r2\n\tand\t@CPI2_30[0], r2, r2\n\tadd\tstack-[33], r0, r4\n\tadd\t64, r4, r3\n\tst.1\tr3, r2\n\tand!\t@CPI2_29[0], r1, r2\n\tadd\t0, r0, r2\n\tadd.ne\t1, r0, r2\n\tadd\t32, r4, r3\n\tst.1\tr3, r2\n\tand\t@CPI2_30[0], r1, r1\n\tst.1\tr4, r1\n\tadd\t1, r5, r1\n\tsload\tr1, r1\n\tadd\t96, r4, r2\n\tand\t@CPI2_31[0], r1, r3\n\tst.1\tr2, r3\n\tshr.s\t32, r1, r1\n\tand\t@CPI2_32[0], r1, r1\n\tadd\t128, r4, r3\n\tadd\tr4, r0, r2\n\tst.1\tr3, r1\n\tld.1\t64, r1\n\tadd\tr1, r0, stack-[34]\n\tnear_call\tr0, @abi_encode_struct_DepositInfo, @DEFAULT_UNWIND\n\tadd\tstack-[34], r0, r4\n\tsub\tr1, r4, r1\n\tadd\t@CPI2_31[0], r0, r2\n\tsub.s!\t@CPI2_31[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tsub.s!\t@CPI2_31[0], r4, r3\n\tadd.lt\tr4, r0, r2\n\tshl.s\t64, r2, r2\n\tshl.s\t96, r1, r1\n\tor\tr1, r2, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB2_602:\n\tcontext.get_context_u128\tr1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB2_30\n\tadd\tstack[@calldatasize], r0, r2\n\tsub.s\t4, r2, r1\n\tadd\t@CPI2_27[0], r0, r3\n\tsub.s!\t32, r1, r4\n\tadd\t0, r0, r4\n\tadd.lt\tr3, r0, r4\n\tand\t@CPI2_27[0], r1, r1\n\tsub.s!\t0, r1, r5\n\tadd.le\t0, r0, r3\n\tsub.s!\t@CPI2_27[0], r1, r1\n\tadd\tr4, r0, r1\n\tadd.eq\tr3, r0, r1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB2_30\n\tadd\t4, r0, r1\n\tadd\tr1, r0, stack-[34]\n\tptr.add\tstack[@ptr_calldata], r1, r1\n\tld\tr1, r1\n\tsub.s!\t@CPI2_34[0], r1, r3\n\tjump.gt\t@.BB2_30\n\tadd\t4, r1, r3\n\tadd\tr3, r0, stack-[33]\n\tsub\tr2, r3, r2\n\tadd\t@CPI2_27[0], r0, r3\n\tsub.s!\t352, r2, r4\n\tadd\t0, r0, r4\n\tadd.lt\tr3, r0, r4\n\tand\t@CPI2_27[0], r2, r2\n\tsub.s!\t0, r2, r5\n\tadd.le\t0, r0, r3\n\tsub.s!\t@CPI2_27[0], r2, r2\n\tadd\tr4, r0, r2\n\tadd.eq\tr3, r0, r2\n\tsub.s!\t0, r2, r2\n\tjump.ne\t@.BB2_30\n\tld.1\t64, r4\n\tsub.s!\t@CPI2_35[0], r4, r2\n\tjump.gt\t@.BB2_44\n\tadd\t160, r4, r2\n\tst.1\t64, r2\n\tsub.s!\t@CPI2_36[0], r4, r3\n\tjump.le\t@.BB2_608\n.BB2_44:\n\tadd\t@CPI2_113[0], r0, r1\n\tst.1\t0, r1\n\tadd\t65, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI2_76[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB2_55:\n\tcontext.get_context_u128\tr1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB2_30\n\tsub.s\t4, r0, r1\n\tadd\tstack[@calldatasize], r1, r1\n\tadd\t@CPI2_27[0], r0, r2\n\tsub.s!\t64, r1, r3\n\tadd\t0, r0, r3\n\tadd.lt\tr2, r0, r3\n\tand\t@CPI2_27[0], r1, r1\n\tsub.s!\t0, r1, r4\n\tadd.le\t0, r0, r2\n\tsub.s!\t@CPI2_27[0], r1, r1\n\tadd\tr3, r0, r1\n\tadd.eq\tr2, r0, r1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB2_30\n\tptr.add\tstack[@ptr_calldata], r0, r2\n\tptr.add.s\t4, r2, r1\n\tld\tr1, r1\n\tsub.s!\t@CPI2_28[0], r1, r3\n\tjump.gt\t@.BB2_30\n\tptr.add.s\t36, r2, r2\n\tld\tr2, r2\n\tadd\tr2, r0, stack-[34]\n\tsub.s!\t@CPI2_87[0], r2, r2\n\tjump.gt\t@.BB2_30\n\tst.1\t0, r1\n\tadd\t1, r0, r1\n\tst.1\t32, r1\n\tadd\t64, r0, r2\n\tadd\tr0, r0, r1\n\tnear_call\tr0, @__keccak256, @DEFAULT_UNWIND\n\tadd\tstack-[34], r0, r2\n\tnear_call\tr0, @mapping_index_access_mapping_uint192_uint256_of_uint192, @DEFAULT_UNWIND\n\tsload\tr1, r1\n\tld.1\t64, r2\n\tst.1\tr2, r1\n\tadd\t@CPI2_31[0], r0, r1\n\tsub.s!\t@CPI2_31[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI2_69[0], r1, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB2_463:\n\tcontext.get_context_u128\tr1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB2_30\n\tadd\tstack[@calldatasize], r0, r1\n\tsub.s\t4, r1, r2\n\tadd\t@CPI2_27[0], r0, r3\n\tsub.s!\t32, r2, r4\n\tadd\t0, r0, r4\n\tadd.lt\tr3, r0, r4\n\tand\t@CPI2_27[0], r2, r2\n\tsub.s!\t0, r2, r5\n\tadd.le\t0, r0, r3\n\tsub.s!\t@CPI2_27[0], r2, r2\n\tadd\tr4, r0, r2\n\tadd.eq\tr3, r0, r2\n\tsub.s!\t0, r2, r2\n\tjump.ne\t@.BB2_30\n\tptr.add\tstack[@ptr_calldata], r0, r3\n\tptr.add.s\t4, r3, r2\n\tld\tr2, r2\n\tsub.s!\t@CPI2_34[0], r2, r4\n\tjump.gt\t@.BB2_30\n\tadd\t35, r2, r4\n\tadd\t@CPI2_27[0], r0, r5\n\tsub!\tr4, r1, r6\n\tadd\t0, r0, r6\n\tadd.ge\tr5, r0, r6\n\tand\t@CPI2_27[0], r1, r7\n\tand\t@CPI2_27[0], r4, r4\n\tsub!\tr4, r7, r8\n\tadd.ge\t0, r0, r5\n\txor\tr4, r7, r4\n\tsub.s!\t@CPI2_27[0], r4, r4\n\tadd\tr6, r0, r4\n\tadd.eq\tr5, r0, r4\n\tsub.s!\t0, r4, r4\n\tjump.ne\t@.BB2_30\n\tadd\t4, r2, r4\n\tptr.add\tr3, r4, r3\n\tld\tr3, r3\n\tadd\tr3, r0, stack-[34]\n\tsub.s!\t@CPI2_34[0], r3, r3\n\tjump.gt\t@.BB2_30\n\tadd\t36, r2, r3\n\tadd\tstack-[34], r0, r2\n\tadd\tr2, r3, r2\n\tsub!\tr2, r1, r1\n\tjump.gt\t@.BB2_30\n\tld.1\t64, r8\n\tadd\t@CPI2_70[0], r0, r1\n\tst.1\tr8, r1\n\tadd\t4, r8, r1\n\tadd\t32, r0, r2\n\tst.1\tr1, r2\n\tadd\t36, r8, r1\n\tadd\tstack-[34], r0, r4\n\tst.1\tr1, r4\n\tand\t31, r4, r2\n\tadd\t68, r8, r1\n\tptr.add\tstack[@ptr_calldata], r3, r3\n\tshr.s!\t5, r4, r4\n\tjump.eq\t@.BB2_692\n\tadd\tr0, r0, r5\n.BB2_471:\n\tshl.s\t5, r5, r6\n\tadd\tr1, r6, r7\n\tptr.add\tr3, r6, r6\n\tld\tr6, r6\n\tst.1\tr7, r6\n\tadd\t1, r5, r5\n\tsub!\tr5, r4, r6\n\tjump.lt\t@.BB2_471\n.BB2_692:\n\tadd\tr8, r0, stack-[33]\n\tsub.s!\t0, r2, r5\n\tjump.eq\t@.BB2_473\n\tshl.s\t5, r4, r4\n\tptr.add\tr3, r4, r3\n\tadd\tr1, r4, r4\n\tshl.s\t3, r2, r2\n\tld.1\tr4, r5\n\tshl\tr5, r2, r5\n\tshr\tr5, r2, r5\n\tld\tr3, r3\n\tsub\t256, r2, r2\n\tshr\tr3, r2, r3\n\tshl\tr3, r2, r2\n\tor\tr2, r5, r2\n\tst.1\tr4, r2\n.BB2_473:\n\tadd\tstack-[34], r0, r2\n\tadd\tr1, r2, r1\n\tst.1\tr1, r0\n\tadd\t@CPI2_71[0], r0, r1\n\tst.2\t0, r1\n\tcontext.code_source\tr1\n\tst.2\t4, r1\n\tst.2\t36, r0\n\tadd\t@CPI2_31[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI2_31[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI2_72[0], r1, r1\n\tadd\t32773, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB2_30\n\tld\tr1, r2\n\tcontext.gas_left\tr1\n\tand\t@CPI2_28[0], r2, r2\n\tsub.s!\t4, r2, r3\n\tjump.ne\t@.BB2_476\n\tadd\tstack[@returndatasize], r0, r3\n\tsub.s!\t32, r3, r1\n\tadd\t32, r0, r4\n\tadd.lt\tr3, r0, r4\n\tadd\tstack-[33], r0, r10\n\tjump\t@.BB2_486\n.BB2_239:\n\tcontext.get_context_u128\tr1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB2_30\n\tadd\tstack[@calldatasize], r0, r1\n\tsub.s\t4, r1, r2\n\tadd\t@CPI2_27[0], r0, r3\n\tsub.s!\t64, r2, r4\n\tadd\t0, r0, r4\n\tadd.lt\tr3, r0, r4\n\tand\t@CPI2_27[0], r2, r2\n\tsub.s!\t0, r2, r5\n\tadd.le\t0, r0, r3\n\tsub.s!\t@CPI2_27[0], r2, r2\n\tadd\tr4, r0, r2\n\tadd.eq\tr3, r0, r2\n\tsub.s!\t0, r2, r2\n\tjump.ne\t@.BB2_30\n\tptr.add\tstack[@ptr_calldata], r0, r2\n\tptr.add.s\t4, r2, r3\n\tld\tr3, r3\n\tadd\tr3, r0, stack-[18]\n\tsub.s!\t@CPI2_34[0], r3, r3\n\tjump.gt\t@.BB2_30\n\tadd\tstack-[18], r0, r3\n\tadd\t35, r3, r3\n\tadd\t@CPI2_27[0], r0, r4\n\tsub!\tr3, r1, r5\n\tadd\t0, r0, r5\n\tadd.ge\tr4, r0, r5\n\tand\t@CPI2_27[0], r1, r6\n\tand\t@CPI2_27[0], r3, r3\n\tsub!\tr3, r6, r7\n\tadd.ge\t0, r0, r4\n\txor\tr3, r6, r3\n\tsub.s!\t@CPI2_27[0], r3, r3\n\tadd\tr5, r0, r3\n\tadd.eq\tr4, r0, r3\n\tsub.s!\t0, r3, r3\n\tjump.ne\t@.BB2_30\n\tadd\tstack-[18], r0, r3\n\tadd\t4, r3, r3\n\tptr.add\tr2, r3, r3\n\tld\tr3, r3\n\tadd\tr3, r0, stack-[20]\n\tsub.s!\t@CPI2_34[0], r3, r3\n\tjump.gt\t@.BB2_30\n\tadd\tstack-[18], r0, r3\n\tadd\t36, r3, r4\n\tadd\tstack-[20], r0, r3\n\tshl.s\t5, r3, r3\n\tadd\tr4, r0, stack-[27]\n\tadd\tr3, r4, r3\n\tsub!\tr3, r1, r1\n\tjump.gt\t@.BB2_30\n\tptr.add.s\t36, r2, r1\n\tld\tr1, r1\n\tadd\tr1, r0, stack-[1]\n\tsub.s!\t@CPI2_28[0], r1, r1\n\tjump.gt\t@.BB2_30\n\tadd\t2, r0, r1\n\tsload\tr1, r2\n\tsub.s!\t2, r2, r2\n\tjump.ne\t@.BB2_248\n\tld.1\t64, r1\n\tadd\t68, r1, r2\n\tadd\t@CPI2_86[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t31, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI2_42[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI2_31[0], r0, r2\n\tsub.s!\t@CPI2_31[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI2_60[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB2_521:\n\tcontext.get_context_u128\tr1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB2_30\n\tadd\tstack[@calldatasize], r0, r2\n\tsub.s\t4, r2, r1\n\tadd\t@CPI2_27[0], r0, r3\n\tsub.s!\t96, r1, r4\n\tadd\t0, r0, r4\n\tadd.lt\tr3, r0, r4\n\tand\t@CPI2_27[0], r1, r1\n\tsub.s!\t0, r1, r5\n\tadd.le\t0, r0, r3\n\tsub.s!\t@CPI2_27[0], r1, r1\n\tadd\tr4, r0, r1\n\tadd.eq\tr3, r0, r1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB2_30\n\tptr.add\tstack[@ptr_calldata], r0, r3\n\tptr.add.s\t4, r3, r1\n\tld\tr1, r1\n\tsub.s!\t@CPI2_34[0], r1, r4\n\tjump.gt\t@.BB2_30\n\tadd\t4, r1, r4\n\tadd\tr4, r0, stack-[34]\n\tsub\tr2, r4, r4\n\tadd\t@CPI2_27[0], r0, r5\n\tsub.s!\t352, r4, r6\n\tadd\t0, r0, r6\n\tadd.lt\tr5, r0, r6\n\tand\t@CPI2_27[0], r4, r4\n\tsub.s!\t0, r4, r7\n\tadd.le\t0, r0, r5\n\tsub.s!\t@CPI2_27[0], r4, r4\n\tadd\tr6, r0, r4\n\tadd.eq\tr5, r0, r4\n\tsub.s!\t0, r4, r4\n\tjump.ne\t@.BB2_30\n\tptr.add.s\t36, r3, r4\n\tld\tr4, r4\n\tadd\tr4, r0, stack-[33]\n\tsub.s!\t@CPI2_28[0], r4, r4\n\tjump.gt\t@.BB2_30\n\tptr.add.s\t68, r3, r4\n\tld\tr4, r4\n\tsub.s!\t@CPI2_34[0], r4, r5\n\tjump.gt\t@.BB2_30\n\tadd\t35, r4, r5\n\tadd\t@CPI2_27[0], r0, r6\n\tsub!\tr5, r2, r7\n\tadd\t0, r0, r7\n\tadd.ge\tr6, r0, r7\n\tand\t@CPI2_27[0], r2, r8\n\tand\t@CPI2_27[0], r5, r5\n\tsub!\tr5, r8, r9\n\tadd.ge\t0, r0, r6\n\txor\tr5, r8, r5\n\tsub.s!\t@CPI2_27[0], r5, r5\n\tadd\tr7, r0, r5\n\tadd.eq\tr6, r0, r5\n\tsub.s!\t0, r5, r5\n\tjump.ne\t@.BB2_30\n\tadd\t4, r4, r5\n\tptr.add\tr3, r5, r3\n\tld\tr3, r3\n\tadd\tr3, r0, stack-[32]\n\tsub.s!\t@CPI2_34[0], r3, r3\n\tjump.gt\t@.BB2_30\n\tadd\t36, r4, r4\n\tadd\tstack-[32], r0, r3\n\tadd\tr4, r0, stack-[31]\n\tadd\tr3, r4, r3\n\tsub!\tr3, r2, r2\n\tjump.gt\t@.BB2_30\n\tld.1\t64, r4\n\tsub.s!\t@CPI2_35[0], r4, r2\n\tjump.gt\t@.BB2_44\n\tadd\t160, r4, r2\n\tst.1\t64, r2\n\tsub.s!\t@CPI2_36[0], r4, r3\n\tjump.gt\t@.BB2_44\n\tadd\t416, r4, r3\n\tst.1\t64, r3\n\tst.1\tr2, r0\n\tst.1.inc\tr4, r2, r2\n\tadd\t384, r4, r3\n\tst.1\tr3, r0\n\tadd\t352, r4, r3\n\tst.1\tr3, r0\n\tadd\t320, r4, r3\n\tst.1\tr3, r0\n\tadd\t288, r4, r3\n\tst.1\tr3, r0\n\tadd\t256, r4, r3\n\tst.1\tr3, r0\n\tadd\t224, r4, r3\n\tst.1\tr3, r0\n\tadd\t192, r4, r3\n\tst.1\tr3, r0\n\tadd\t96, r4, r3\n\tst.1\tr3, r0\n\tadd\t64, r4, r3\n\tst.1\tr3, r0\n\tst.1\tr2, r0\n\tadd\tr4, r0, stack-[30]\n\tadd\t128, r4, r2\n\tadd\tr2, r0, stack-[29]\n\tst.1\tr2, r0\n\tadd\t68, r1, r2\n\tptr.add\tstack[@ptr_calldata], r0, r3\n\tptr.add\tr3, r2, r2\n\tld\tr2, r5\n\tadd\tstack[@calldatasize], r0, r2\n\tsub\tr2, r1, r4\n\tsub.s\t35, r4, r4\n\tadd\t@CPI2_27[0], r0, r6\n\tand\t@CPI2_27[0], r4, r7\n\tand\t@CPI2_27[0], r5, r8\n\tsub!\tr8, r7, r9\n\tadd\t0, r0, r9\n\tadd.lt\tr6, r0, r9\n\txor\tr8, r7, r7\n\tsub!\tr5, r4, r8\n\tadd.lt\t0, r0, r6\n\tsub.s!\t@CPI2_27[0], r7, r7\n\tadd.eq\tr9, r0, r6\n\tsub.s!\t0, r6, r6\n\tjump.ne\t@.BB2_30\n\tadd\tstack-[34], r0, r6\n\tadd\tr5, r6, r5\n\tptr.add\tr3, r5, r6\n\tld\tr6, r6\n\tadd\tr6, r0, stack-[28]\n\tsub.s!\t@CPI2_34[0], r6, r6\n\tjump.gt\t@.BB2_30\n\tadd\tstack-[28], r0, r6\n\tsub\tr2, r6, r6\n\tadd\t32, r5, r8\n\tadd\t@CPI2_27[0], r0, r5\n\tsub!\tr8, r6, r7\n\tadd\t0, r0, r7\n\tadd.gt\tr5, r0, r7\n\tand\t@CPI2_27[0], r6, r6\n\tadd\tr8, r0, stack-[27]\n\tand\t@CPI2_27[0], r8, r8\n\tsub!\tr8, r6, r9\n\tadd.ge\t0, r0, r5\n\txor\tr8, r6, r6\n\tsub.s!\t@CPI2_27[0], r6, r6\n\tadd.ne\tr7, r0, r5\n\tsub.s!\t0, r5, r5\n\tjump.ne\t@.BB2_30\n\tadd\tstack-[34], r0, r5\n\tptr.add\tr3, r5, r5\n\tld\tr5, r5\n\tadd\tr5, r0, stack-[26]\n\tsub.s!\t@CPI2_28[0], r5, r5\n\tjump.gt\t@.BB2_30\n\tadd\t292, r1, r1\n\tptr.add\tr3, r1, r1\n\tld\tr1, r1\n\tadd\t@CPI2_27[0], r0, r5\n\tsub!\tr1, r4, r6\n\tadd\t0, r0, r6\n\tadd.ge\tr5, r0, r6\n\tand\t@CPI2_27[0], r4, r4\n\tand\t@CPI2_27[0], r1, r7\n\tsub!\tr7, r4, r8\n\tadd.ge\t0, r0, r5\n\txor\tr7, r4, r4\n\tsub.s!\t@CPI2_27[0], r4, r4\n\tadd\tr6, r0, r4\n\tadd.eq\tr5, r0, r4\n\tsub.s!\t0, r4, r4\n\tjump.ne\t@.BB2_30\n\tadd\tstack-[34], r0, r4\n\tadd\tr1, r4, r1\n\tptr.add\tr3, r1, r3\n\tld\tr3, r3\n\tadd\tr3, r0, stack-[25]\n\tsub.s!\t@CPI2_34[0], r3, r3\n\tjump.gt\t@.BB2_30\n\tadd\tstack-[25], r0, r3\n\tsub\tr2, r3, r2\n\tadd\t32, r1, r4\n\tadd\t@CPI2_27[0], r0, r1\n\tsub!\tr4, r2, r3\n\tadd\t0, r0, r3\n\tadd.gt\tr1, r0, r3\n\tand\t@CPI2_27[0], r2, r2\n\tadd\tr4, r0, stack-[24]\n\tand\t@CPI2_27[0], r4, r4\n\tsub!\tr4, r2, r5\n\tadd.ge\t0, r0, r1\n\txor\tr4, r2, r2\n\tsub.s!\t@CPI2_27[0], r2, r2\n\tadd.ne\tr3, r0, r1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB2_30\n\tadd\t@CPI2_37[0], r0, r1\n\tst.2\t0, r1\n\tcontext.this\tr1\n\tadd\tr1, r0, stack-[23]\n\tst.2\t4, r1\n\tadd\t@CPI2_31[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI2_31[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI2_38[0], r1, r1\n\tadd\t32770, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB2_30\n\tld\tr1, r1\n\tsub.s!\t0, r1, r1\n\tjump.eq\t@.BB2_30\n\tld.1\t64, r4\n\tadd\t@CPI2_39[0], r0, r1\n\tst.1\tr4, r1\n\tadd\t100, r4, r1\n\tadd\tstack-[28], r0, r5\n\tst.1\tr1, r5\n\tadd\t4, r4, r1\n\tadd\t96, r0, r2\n\tadd\tr2, r0, stack-[21]\n\tst.1\tr1, r2\n\tand\t31, r5, r3\n\tadd\tr4, r0, stack-[22]\n\tadd\t132, r4, r2\n\tadd\tstack-[27], r0, r4\n\tptr.add\tstack[@ptr_calldata], r4, r4\n\tshr.s!\t5, r5, r5\n\tjump.eq\t@.BB2_689\n\tadd\tr0, r0, r6\n.BB2_543:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr4, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB2_543\n.BB2_689:\n\tsub.s!\t0, r3, r6\n\tjump.eq\t@.BB2_545\n\tshl.s\t5, r5, r5\n\tptr.add\tr4, r5, r4\n\tadd\tr2, r5, r5\n\tshl.s\t3, r3, r3\n\tld.1\tr5, r6\n\tshl\tr6, r3, r6\n\tshr\tr6, r3, r6\n\tld\tr4, r4\n\tsub\t256, r3, r3\n\tshr\tr4, r3, r4\n\tshl\tr4, r3, r3\n\tor\tr3, r6, r3\n\tst.1\tr5, r3\n.BB2_545:\n\tadd\tstack-[28], r0, r4\n\tadd\tr2, r4, r3\n\tst.1\tr3, r0\n\tadd\tstack-[22], r0, r5\n\tadd\t36, r5, r3\n\tadd\tstack-[26], r0, r6\n\tst.1\tr3, r6\n\tadd\t31, r4, r3\n\tsub.s\t32, r0, r4\n\tadd\tr4, r0, stack-[28]\n\tand\tr3, r4, r3\n\tadd\tr2, r3, r3\n\tsub\tr3, r1, r1\n\tadd\t68, r5, r2\n\tst.1\tr2, r1\n\tadd\tstack-[25], r0, r4\n\tand\t31, r4, r2\n\tst.1.inc\tr3, r4, r1\n\tadd\tstack-[24], r0, r3\n\tptr.add\tstack[@ptr_calldata], r3, r3\n\tshr.s!\t5, r4, r4\n\tjump.eq\t@.BB2_688\n\tadd\tr0, r0, r5\n.BB2_547:\n\tshl.s\t5, r5, r6\n\tadd\tr1, r6, r7\n\tptr.add\tr3, r6, r6\n\tld\tr6, r6\n\tst.1\tr7, r6\n\tadd\t1, r5, r5\n\tsub!\tr5, r4, r6\n\tjump.lt\t@.BB2_547\n.BB2_688:\n\tsub.s!\t0, r2, r5\n\tjump.eq\t@.BB2_549\n\tshl.s\t5, r4, r4\n\tptr.add\tr3, r4, r3\n\tadd\tr1, r4, r4\n\tshl.s\t3, r2, r2\n\tld.1\tr4, r5\n\tshl\tr5, r2, r5\n\tshr\tr5, r2, r5\n\tld\tr3, r3\n\tsub\t256, r2, r2\n\tshr\tr3, r2, r3\n\tshl\tr3, r2, r2\n\tor\tr2, r5, r2\n\tst.1\tr4, r2\n.BB2_549:\n\tadd\tstack-[25], r0, r2\n\tadd\tr1, r2, r2\n\tst.1\tr2, r0\n\tcontext.gas_left\tr2\n\tadd\tstack-[23], r0, r3\n\tsub.s!\t4, r3, r3\n\tjump.eq\t@.BB2_551\n\tadd\tstack-[25], r0, r3\n\tadd\t31, r3, r3\n\tadd\tstack-[28], r0, r4\n\tand\tr3, r4, r3\n\tadd\tstack-[22], r0, r5\n\tsub\tr3, r5, r3\n\tadd\tr3, r1, r1\n\tadd\t@CPI2_31[0], r0, r3\n\tsub.s!\t@CPI2_31[0], r5, r4\n\tadd\tr3, r0, r4\n\tadd.lt\tr5, r0, r4\n\tshl.s\t64, r4, r4\n\tsub.s!\t@CPI2_31[0], r1, r5\n\tadd.ge\tr3, r0, r1\n\tshl.s\t96, r1, r1\n\tor\tr1, r4, r1\n\tsub.s!\t@CPI2_31[0], r2, r4\n\tadd.ge\tr3, r0, r2\n\tshl.s\t192, r2, r2\n\tor\tr2, r1, r1\n\tadd\tstack-[23], r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI2_31[0], r3, stack[@returndatasize]\n\tand\t@CPI2_31[0], r3, r4\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB2_553\n.BB2_551:\n\tadd\tstack-[22], r0, r1\n\tsub.s!\t@CPI2_34[0], r1, r1\n\tjump.gt\t@.BB2_44\n\tadd\tstack-[22], r0, r1\n\tst.1\t64, r1\n.BB2_575:\n\tadd\tstack-[34], r0, r1\n\tadd\tstack-[30], r0, r2\n\tnear_call\tr0, @fun_validatePrepayment_19814, @DEFAULT_UNWIND\n\tld.1\t64, r3\n\tsub.s!\t@CPI2_46[0], r3, r4\n\tjump.gt\t@.BB2_44\n\tadd\t96, r3, r4\n\tst.1\t64, r4\n\tadd\t64, r3, r4\n\tst.1\tr4, r0\n\tadd\t32, r3, r4\n\tst.1\tr4, r0\n\tst.1\tr3, r0\n\tld.1\t64, r3\n\tsub.s!\t@CPI2_46[0], r3, r4\n\tjump.gt\t@.BB2_44\n\tadd\t96, r3, r4\n\tst.1\t64, r4\n\tadd\t64, r3, r4\n\tst.1\tr4, r0\n\tadd\t32, r3, r4\n\tst.1\tr4, r0\n\tst.1\tr3, r0\n\tld.1\t64, r4\n\tsub.s!\t@CPI2_46[0], r4, r3\n\tjump.gt\t@.BB2_44\n\tadd\t96, r4, r3\n\tst.1\t64, r3\n\tshr.s\t208, r1, r5\n\tadd\t32, r4, r3\n\tst.1\tr3, r5\n\tand\t@CPI2_28[0], r1, r5\n\tst.1\tr4, r5\n\tshr.s\t160, r1, r1\n\tand!\t@CPI2_32[0], r1, r1\n\tadd\t@CPI2_32[0], r0, r5\n\tadd.ne\tr1, r0, r5\n\tadd\t64, r4, r1\n\tst.1\tr1, r5\n\tld.1\t64, r5\n\tsub.s!\t@CPI2_46[0], r5, r6\n\tjump.gt\t@.BB2_44\n\tadd\t96, r5, r6\n\tst.1\t64, r6\n\tadd\t64, r5, r6\n\tst.1\tr6, r0\n\tadd\t32, r5, r6\n\tst.1\tr6, r0\n\tst.1\tr5, r0\n\tld.1\t64, r6\n\tsub.s!\t@CPI2_46[0], r6, r5\n\tjump.gt\t@.BB2_44\n\tadd\t96, r6, r5\n\tst.1\t64, r5\n\tshr.s\t208, r2, r7\n\tadd\t32, r6, r5\n\tst.1\tr5, r7\n\tand\t@CPI2_28[0], r2, r7\n\tst.1\tr6, r7\n\tshr.s\t160, r2, r2\n\tand!\t@CPI2_32[0], r2, r2\n\tadd\t@CPI2_32[0], r0, r7\n\tadd.eq\tr7, r0, r2\n\tadd\t64, r6, r7\n\tst.1\tr7, r2\n\tld.1\tr4, r4\n\tand!\t@CPI2_28[0], r4, r4\n\tjump.ne\t@.BB2_582\n\tld.1\tr6, r4\n\tand\t@CPI2_28[0], r4, r4\n.BB2_582:\n\tld.1\t64, r6\n\tsub.s!\t@CPI2_46[0], r6, r7\n\tjump.gt\t@.BB2_44\n\tld.1\tr3, r3\n\tld.1\tr5, r5\n\tld.1\tr1, r1\n\tadd\t96, r6, r7\n\tst.1\t64, r7\n\tand\t@CPI2_32[0], r1, r1\n\tsub!\tr1, r2, r7\n\tadd.ge\tr2, r0, r1\n\tst.1.inc\tr6, r4, r4\n\tadd\t64, r6, r2\n\tadd\tr2, r0, stack-[26]\n\tst.1\tr2, r1\n\tand\t@CPI2_32[0], r5, r1\n\tand\t@CPI2_32[0], r3, r2\n\tsub!\tr2, r1, r3\n\tadd.gt\tr2, r0, r1\n\tadd\tr4, r0, stack-[27]\n\tst.1\tr4, r1\n\tadd\t@CPI2_50[0], r0, r1\n\tst.2\t0, r1\n\tadd\t@CPI2_31[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI2_31[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI2_51[0], r1, r1\n\tadd\t32779, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB2_30\n\tld\tr1, r1\n\tst.1\t0, r1\n\tadd\tstack-[34], r0, r1\n\tadd\tstack-[30], r0, r2\n\tnear_call\tr0, @fun_executeUserOp_19815, @DEFAULT_UNWIND\n\tadd\t@CPI2_50[0], r0, r2\n\tst.2\t0, r2\n\tadd\tr1, r0, stack-[34]\n\tadd\t@CPI2_31[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI2_31[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI2_51[0], r1, r1\n\tadd\t32779, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB2_30\n\tld\tr1, r1\n\tst.1\t0, r1\n\tadd\tstack-[33], r0, r1\n\tsub.s!\t0, r1, r1\n\tadd\tr0, r0, r6\n\tjump.eq\t@.BB2_591\n\tld.1\t64, r1\n\tadd\tstack-[32], r0, r4\n\tand\t31, r4, r2\n\tadd\tstack-[31], r0, r3\n\tptr.add\tstack[@ptr_calldata], r3, r3\n\tshr.s!\t5, r4, r4\n\tjump.eq\t@.BB2_685\n\tadd\tr0, r0, r5\n.BB2_588:\n\tshl.s\t5, r5, r6\n\tadd\tr1, r6, r7\n\tptr.add\tr3, r6, r6\n\tld\tr6, r6\n\tst.1\tr7, r6\n\tadd\t1, r5, r5\n\tsub!\tr5, r4, r6\n\tjump.lt\t@.BB2_588\n.BB2_685:\n\tsub.s!\t0, r2, r5\n\tjump.eq\t@.BB2_590\n\tshl.s\t5, r4, r4\n\tptr.add\tr3, r4, r3\n\tadd\tr1, r4, r4\n\tshl.s\t3, r2, r2\n\tld.1\tr4, r5\n\tshl\tr5, r2, r5\n\tshr\tr5, r2, r5\n\tld\tr3, r3\n\tsub\t256, r2, r2\n\tshr\tr3, r2, r3\n\tshl\tr3, r2, r2\n\tor\tr2, r5, r2\n\tst.1\tr4, r2\n.BB2_590:\n\tadd\tstack-[32], r0, r2\n\tadd\tr1, r2, r2\n\tst.1\tr2, r0\n\tcontext.gas_left\tr2\n\tadd\tstack-[33], r0, r3\n\tsub.s!\t4, r3, r3\n\tjump.ne\t@.BB2_601\n\tadd\t1, r0, r6\n\tadd\tstack[@returndatasize], r0, r1\n\tjump\t@.BB2_593\n.BB2_29:\n\tsub.s\t4, r2, r2\n\tadd\t@CPI2_27[0], r0, r3\n\tsub.s!\t31, r2, r4\n\tadd\t0, r0, r4\n\tadd.gt\tr3, r0, r4\n\tand\t@CPI2_27[0], r2, r2\n\tsub.s!\t0, r2, r5\n\tadd.ge\t0, r0, r3\n\tsub.s!\t@CPI2_27[0], r2, r2\n\tadd\tr4, r0, r2\n\tadd.eq\tr3, r0, r2\n\tsub.s!\t0, r2, r2\n\tjump.eq\t@.BB2_30\n\tptr.add.s\t4, r1, r1\n\tld\tr1, r1\n\tand\t@CPI2_31[0], r1, r2\n\tadd\tr2, r0, stack-[34]\n\tsub.s!\t@CPI2_31[0], r1, r1\n\tjump.gt\t@.BB2_30\n\tcontext.caller\tr1\n\tadd\tr1, r0, stack-[32]\n\tand\t@CPI2_28[0], r1, r1\n\tadd\tr1, r0, stack-[33]\n\tst.1\t0, r1\n\tst.1\t32, r0\n\tadd\t@CPI2_31[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI2_31[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI2_45[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB2_30\n\tld\tr1, r1\n\tadd\tstack-[34], r0, r4\n\tsub.s!\t0, r4, r2\n\tjump.ne\t@.BB2_35\n\tld.1\t64, r1\n\tadd\t68, r1, r2\n\tadd\t@CPI2_125[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t26, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI2_42[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI2_31[0], r0, r2\n\tsub.s!\t@CPI2_31[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI2_60[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB2_440:\n\tcontext.get_context_u128\tr1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB2_30\n\tsub.s\t4, r0, r1\n\tadd\tstack[@calldatasize], r1, r1\n\tadd\t@CPI2_27[0], r0, r2\n\tsub.s!\t0, r1, r3\n\tadd\t0, r0, r3\n\tadd.lt\tr2, r0, r3\n\tand\t@CPI2_27[0], r1, r1\n\tsub.s!\t0, r1, r4\n\tadd.le\t0, r0, r2\n\tsub.s!\t@CPI2_27[0], r1, r1\n\tadd\tr3, r0, r1\n\tadd.eq\tr2, r0, r1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB2_30\n\tld.1\t64, r1\n\tadd\t1, r0, r2\n\tst.1\tr1, r2\n\tadd\t@CPI2_31[0], r0, r2\n\tsub.s!\t@CPI2_31[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI2_69[0], r1, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB2_224:\n\tcontext.get_context_u128\tr1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB2_30\n\tsub.s\t4, r0, r1\n\tadd\tstack[@calldatasize], r1, r1\n\tadd\t@CPI2_27[0], r0, r2\n\tsub.s!\t64, r1, r3\n\tadd\t0, r0, r3\n\tadd.lt\tr2, r0, r3\n\tand\t@CPI2_27[0], r1, r1\n\tsub.s!\t0, r1, r4\n\tadd.le\t0, r0, r2\n\tsub.s!\t@CPI2_27[0], r1, r1\n\tadd\tr3, r0, r1\n\tadd.eq\tr2, r0, r1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB2_30\n\tptr.add\tstack[@ptr_calldata], r0, r1\n\tptr.add.s\t4, r1, r2\n\tld\tr2, r2\n\tadd\tr2, r0, stack-[34]\n\tsub.s!\t@CPI2_28[0], r2, r2\n\tjump.gt\t@.BB2_30\n\tptr.add.s\t36, r1, r1\n\tld\tr1, r1\n\tadd\tr1, r0, stack-[33]\n\tcontext.caller\tr1\n\tadd\tr1, r0, stack-[32]\n\tst.1\t0, r1\n\tst.1\t32, r0\n\tadd\t@CPI2_31[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI2_31[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI2_45[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB2_30\n\tld\tr1, r1\n\tsload\tr1, r2\n\tand\t@CPI2_30[0], r2, r3\n\tadd\tstack-[33], r0, r4\n\tsub!\tr3, r4, r3\n\tjump.ge\t@.BB2_230\n\tld.1\t64, r1\n\tadd\t68, r1, r2\n\tadd\t@CPI2_90[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t25, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI2_42[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI2_31[0], r0, r2\n\tsub.s!\t@CPI2_31[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI2_60[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB2_496:\n\tcontext.get_context_u128\tr1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB2_30\n\tsub.s\t4, r0, r1\n\tadd\tstack[@calldatasize], r1, r1\n\tadd\t@CPI2_27[0], r0, r2\n\tsub.s!\t0, r1, r3\n\tadd\t0, r0, r3\n\tadd.lt\tr2, r0, r3\n\tand\t@CPI2_27[0], r1, r1\n\tsub.s!\t0, r1, r4\n\tadd.le\t0, r0, r2\n\tsub.s!\t@CPI2_27[0], r1, r1\n\tadd\tr3, r0, r1\n\tadd.eq\tr2, r0, r1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB2_30\n\tcontext.caller\tr1\n\tadd\tr1, r0, stack-[34]\n\tst.1\t0, r1\n\tst.1\t32, r0\n\tadd\t@CPI2_31[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI2_31[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI2_45[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB2_30\n\tld\tr1, r2\n\tadd\t1, r2, r3\n\tsload\tr3, r1\n\tand!\t@CPI2_31[0], r1, r4\n\tjump.ne\t@.BB2_501\n\tld.1\t64, r1\n\tadd\t68, r1, r2\n\tadd\t@CPI2_68[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t10, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI2_42[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI2_31[0], r0, r2\n\tsub.s!\t@CPI2_31[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI2_60[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB2_35:\n\tadd\t1, r1, r2\n\tsload\tr2, r2\n\tand\t@CPI2_31[0], r2, r2\n\tsub!\tr4, r2, r2\n\tjump.ge\t@.BB2_37\n\tld.1\t64, r1\n\tadd\t68, r1, r2\n\tadd\t@CPI2_124[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t28, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI2_42[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI2_31[0], r0, r2\n\tsub.s!\t@CPI2_31[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI2_60[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB2_501:\n\tsload\tr2, r1\n\tand!\t@CPI2_29[0], r1, r1\n\tjump.ne\t@.BB2_503\n\tld.1\t64, r1\n\tadd\t68, r1, r2\n\tadd\t@CPI2_67[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t17, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI2_42[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI2_31[0], r0, r2\n\tsub.s!\t@CPI2_31[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI2_60[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB2_230:\n\tsub\tr2, r4, r3\n\tand\t@CPI2_30[0], r3, r3\n\tand\t@CPI2_88[0], r2, r2\n\tor\tr3, r2, r2\n\tsstore\tr1, r2\n\tld.1\t64, r1\n\tadd\t32, r1, r2\n\tst.1\tr2, r4\n\tadd\tstack-[34], r0, r2\n\tst.1\tr1, r2\n\tadd\t@CPI2_31[0], r0, r2\n\tcontext.gas_left\tr3\n\tsub.s!\t@CPI2_31[0], r3, r4\n\tadd.ge\tr2, r0, r3\n\tsub.s!\t@CPI2_31[0], r1, r4\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r3, r2\n\tor\tr2, r1, r1\n\tor\t@CPI2_45[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t2, r0, r3\n\tadd\t@CPI2_89[0], r0, r4\n\tadd\tstack-[32], r0, r5\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB2_30\n\tadd\t1, r0, r2\n\tcontext.gas_left\tr1\n\tadd\tstack-[34], r0, r4\n\tsub.s!\t4, r4, r3\n\tjump.eq\t@.BB2_233\n\tadd\t@CPI2_31[0], r0, r2\n\tsub.s!\t@CPI2_31[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI2_58[0], r1, r2\n\tadd\tstack-[33], r0, r3\n\tsub.s!\t0, r3, r5\n\tadd.ne\tr2, r0, r1\n\tadd\t32777, r0, r2\n\tadd.eq\tr4, r0, r2\n\tadd\tr0, r0, r5\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI2_31[0], r3, stack[@returndatasize]\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n.BB2_233:\n\tadd\tr2, r0, stack-[34]\n\tnear_call\tr0, @extract_returndata, @DEFAULT_UNWIND\n\tadd\tstack-[34], r0, r1\n\tand\t1, r1, r1\n\tnear_call\tr0, @require_helper_stringliteral_a34e, @DEFAULT_UNWIND\n\tadd\tr0, r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB2_37:\n\tsload\tr1, r1\n\tshr.s\t120, r1, r2\n\tand\t@CPI2_30[0], r2, r2\n\tcontext.get_context_u128\tr3\n\tadd\tr2, r3, r3\n\tsub!\tr3, r2, r2\n\tadd\t0, r0, r2\n\tadd.lt\t1, r0, r2\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB2_38\n\tsub.s!\t0, r3, r2\n\tjump.ne\t@.BB2_41\n\tld.1\t64, r1\n\tadd\t68, r1, r2\n\tadd\t@CPI2_123[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t18, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI2_42[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI2_31[0], r0, r2\n\tsub.s!\t@CPI2_31[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI2_60[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB2_503:\n\tadd\tr4, r0, stack-[33]\n\tadd\tr3, r0, stack-[31]\n\tadd\tr2, r0, stack-[32]\n\tadd\t@CPI2_53[0], r0, r1\n\tst.2\t0, r1\n\tadd\t@CPI2_31[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI2_31[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI2_51[0], r1, r1\n\tadd\t32779, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB2_30\n\tld\tr1, r1\n\tand\t@CPI2_32[0], r1, r1\n\tadd\tstack-[33], r0, r2\n\tadd\tr1, r2, r1\n\tsub.s!\t@CPI2_32[0], r1, r2\n\tjump.le\t@.BB2_505\n.BB2_38:\n\tadd\t@CPI2_113[0], r0, r1\n\tst.1\t0, r1\n\tadd\t17, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI2_76[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB2_512:\n\tadd\t1, r3, r4\n\tsload\tr4, r1\n\tshr.s\t32, r1, r1\n\tand!\t@CPI2_32[0], r1, r1\n\tjump.ne\t@.BB2_514\n\tld.1\t64, r1\n\tadd\t68, r1, r2\n\tadd\t@CPI2_61[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t29, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI2_42[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI2_31[0], r0, r2\n\tsub.s!\t@CPI2_31[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI2_60[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB2_608:\n\tadd\t416, r4, r3\n\tst.1\t64, r3\n\tst.1\tr2, r0\n\tst.1.inc\tr4, r2, r2\n\tadd\t384, r4, r3\n\tst.1\tr3, r0\n\tadd\t352, r4, r3\n\tst.1\tr3, r0\n\tadd\t320, r4, r3\n\tst.1\tr3, r0\n\tadd\t288, r4, r3\n\tst.1\tr3, r0\n\tadd\t256, r4, r3\n\tst.1\tr3, r0\n\tadd\t224, r4, r3\n\tst.1\tr3, r0\n\tadd\t192, r4, r3\n\tst.1\tr3, r0\n\tst.1\tr2, r0\n\tadd\t128, r4, r2\n\tadd\tr2, r0, stack-[28]\n\tst.1\tr2, r0\n\tadd\t96, r4, r2\n\tadd\tr2, r0, stack-[29]\n\tst.1\tr2, r0\n\tadd\tr4, r0, stack-[32]\n\tadd\t64, r4, r2\n\tadd\tr2, r0, stack-[27]\n\tst.1\tr2, r0\n\tsub.s\t35, r0, r2\n\tsub\tr2, r1, r4\n\tadd\t68, r1, r2\n\tptr.add\tstack[@ptr_calldata], r0, r3\n\tadd\tr2, r0, stack-[31]\n\tptr.add\tr3, r2, r2\n\tld\tr2, r5\n\tadd\tstack[@calldatasize], r0, r2\n\tadd\tr4, r0, stack-[30]\n\tadd\tr2, r4, r4\n\tadd\t@CPI2_27[0], r0, r6\n\tand\t@CPI2_27[0], r4, r7\n\tand\t@CPI2_27[0], r5, r8\n\tsub!\tr8, r7, r9\n\tadd\t0, r0, r9\n\tadd.lt\tr6, r0, r9\n\txor\tr8, r7, r7\n\tsub!\tr5, r4, r8\n\tadd.lt\t0, r0, r6\n\tsub.s!\t@CPI2_27[0], r7, r7\n\tadd.eq\tr9, r0, r6\n\tsub.s!\t0, r6, r6\n\tjump.ne\t@.BB2_30\n\tadd\tstack-[33], r0, r6\n\tadd\tr5, r6, r5\n\tptr.add\tr3, r5, r6\n\tld\tr6, r6\n\tadd\tr6, r0, stack-[26]\n\tsub.s!\t@CPI2_34[0], r6, r6\n\tjump.gt\t@.BB2_30\n\tadd\tstack-[26], r0, r6\n\tsub\tr2, r6, r6\n\tadd\t32, r5, r8\n\tadd\t@CPI2_27[0], r0, r5\n\tsub!\tr8, r6, r7\n\tadd\t0, r0, r7\n\tadd.gt\tr5, r0, r7\n\tand\t@CPI2_27[0], r6, r6\n\tadd\tr8, r0, stack-[25]\n\tand\t@CPI2_27[0], r8, r8\n\tsub!\tr8, r6, r9\n\tadd.ge\t0, r0, r5\n\txor\tr8, r6, r6\n\tsub.s!\t@CPI2_27[0], r6, r6\n\tadd.ne\tr7, r0, r5\n\tsub.s!\t0, r5, r5\n\tjump.ne\t@.BB2_30\n\tadd\tstack-[33], r0, r5\n\tptr.add\tr3, r5, r5\n\tld\tr5, r5\n\tadd\tr5, r0, stack-[24]\n\tsub.s!\t@CPI2_28[0], r5, r5\n\tjump.gt\t@.BB2_30\n\tadd\t292, r1, r1\n\tptr.add\tr3, r1, r1\n\tld\tr1, r1\n\tadd\t@CPI2_27[0], r0, r5\n\tsub!\tr1, r4, r6\n\tadd\t0, r0, r6\n\tadd.ge\tr5, r0, r6\n\tand\t@CPI2_27[0], r4, r4\n\tand\t@CPI2_27[0], r1, r7\n\tsub!\tr7, r4, r8\n\tadd.ge\t0, r0, r5\n\txor\tr7, r4, r4\n\tsub.s!\t@CPI2_27[0], r4, r4\n\tadd\tr6, r0, r4\n\tadd.eq\tr5, r0, r4\n\tsub.s!\t0, r4, r4\n\tjump.ne\t@.BB2_30\n\tadd\tstack-[33], r0, r4\n\tadd\tr1, r4, r1\n\tptr.add\tr3, r1, r3\n\tld\tr3, r3\n\tadd\tr3, r0, stack-[23]\n\tsub.s!\t@CPI2_34[0], r3, r3\n\tjump.gt\t@.BB2_30\n\tadd\tstack-[23], r0, r3\n\tsub\tr2, r3, r2\n\tadd\t32, r1, r4\n\tadd\t@CPI2_27[0], r0, r1\n\tsub!\tr4, r2, r3\n\tadd\t0, r0, r3\n\tadd.gt\tr1, r0, r3\n\tand\t@CPI2_27[0], r2, r2\n\tadd\tr4, r0, stack-[22]\n\tand\t@CPI2_27[0], r4, r4\n\tsub!\tr4, r2, r5\n\tadd.ge\t0, r0, r1\n\txor\tr4, r2, r2\n\tsub.s!\t@CPI2_27[0], r2, r2\n\tadd.ne\tr3, r0, r1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB2_30\n\tadd\t@CPI2_37[0], r0, r1\n\tst.2\t0, r1\n\tcontext.this\tr1\n\tadd\tr1, r0, stack-[21]\n\tst.2\t4, r1\n\tadd\t@CPI2_31[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI2_31[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI2_38[0], r1, r1\n\tadd\t32770, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB2_30\n\tld\tr1, r1\n\tsub.s!\t0, r1, r1\n\tjump.eq\t@.BB2_30\n\tld.1\t64, r4\n\tadd\t@CPI2_39[0], r0, r1\n\tst.1\tr4, r1\n\tadd\t100, r4, r1\n\tadd\tstack-[26], r0, r5\n\tst.1\tr1, r5\n\tadd\t4, r4, r1\n\tadd\t96, r0, r2\n\tst.1\tr1, r2\n\tand\t31, r5, r3\n\tadd\tr4, r0, stack-[20]\n\tadd\t132, r4, r2\n\tadd\tstack-[25], r0, r4\n\tptr.add\tstack[@ptr_calldata], r4, r4\n\tshr.s!\t5, r5, r5\n\tjump.eq\t@.BB2_683\n\tadd\tr0, r0, r6\n.BB2_619:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr4, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB2_619\n.BB2_683:\n\tsub.s!\t0, r3, r6\n\tjump.eq\t@.BB2_621\n\tshl.s\t5, r5, r5\n\tptr.add\tr4, r5, r4\n\tadd\tr2, r5, r5\n\tshl.s\t3, r3, r3\n\tld.1\tr5, r6\n\tshl\tr6, r3, r6\n\tshr\tr6, r3, r6\n\tld\tr4, r4\n\tsub\t256, r3, r3\n\tshr\tr4, r3, r4\n\tshl\tr4, r3, r3\n\tor\tr3, r6, r3\n\tst.1\tr5, r3\n.BB2_621:\n\tadd\tstack-[26], r0, r4\n\tadd\tr2, r4, r3\n\tst.1\tr3, r0\n\tadd\tstack-[20], r0, r5\n\tadd\t36, r5, r3\n\tadd\tstack-[24], r0, r6\n\tst.1\tr3, r6\n\tadd\t31, r4, r3\n\tsub.s\t32, r0, r4\n\tadd\tr4, r0, stack-[26]\n\tand\tr3, r4, r3\n\tadd\tr2, r3, r3\n\tsub\tr3, r1, r1\n\tadd\t68, r5, r2\n\tst.1\tr2, r1\n\tadd\tstack-[23], r0, r4\n\tand\t31, r4, r2\n\tst.1.inc\tr3, r4, r1\n\tadd\tstack-[22], r0, r3\n\tptr.add\tstack[@ptr_calldata], r3, r3\n\tshr.s!\t5, r4, r4\n\tjump.eq\t@.BB2_682\n\tadd\tr0, r0, r5\n.BB2_623:\n\tshl.s\t5, r5, r6\n\tadd\tr1, r6, r7\n\tptr.add\tr3, r6, r6\n\tld\tr6, r6\n\tst.1\tr7, r6\n\tadd\t1, r5, r5\n\tsub!\tr5, r4, r6\n\tjump.lt\t@.BB2_623\n.BB2_682:\n\tsub.s!\t0, r2, r5\n\tjump.eq\t@.BB2_625\n\tshl.s\t5, r4, r4\n\tptr.add\tr3, r4, r3\n\tadd\tr1, r4, r4\n\tshl.s\t3, r2, r2\n\tld.1\tr4, r5\n\tshl\tr5, r2, r5\n\tshr\tr5, r2, r5\n\tld\tr3, r3\n\tsub\t256, r2, r2\n\tshr\tr3, r2, r3\n\tshl\tr3, r2, r2\n\tor\tr2, r5, r2\n\tst.1\tr4, r2\n.BB2_625:\n\tadd\tstack-[23], r0, r2\n\tadd\tr1, r2, r2\n\tst.1\tr2, r0\n\tcontext.gas_left\tr2\n\tadd\tstack-[21], r0, r3\n\tsub.s!\t4, r3, r3\n\tjump.eq\t@.BB2_627\n\tadd\tstack-[23], r0, r3\n\tadd\t31, r3, r3\n\tadd\tstack-[26], r0, r4\n\tand\tr3, r4, r3\n\tadd\tstack-[20], r0, r5\n\tsub\tr3, r5, r3\n\tadd\tr3, r1, r1\n\tadd\t@CPI2_31[0], r0, r3\n\tsub.s!\t@CPI2_31[0], r5, r4\n\tadd\tr3, r0, r4\n\tadd.lt\tr5, r0, r4\n\tshl.s\t64, r4, r4\n\tsub.s!\t@CPI2_31[0], r1, r5\n\tadd.ge\tr3, r0, r1\n\tshl.s\t96, r1, r1\n\tor\tr1, r4, r1\n\tsub.s!\t@CPI2_31[0], r2, r4\n\tadd.ge\tr3, r0, r2\n\tshl.s\t192, r2, r2\n\tor\tr2, r1, r1\n\tadd\tstack-[21], r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI2_31[0], r3, stack[@returndatasize]\n\tand\t@CPI2_31[0], r3, r4\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB2_629\n.BB2_627:\n\tadd\tstack-[20], r0, r1\n\tsub.s!\t@CPI2_34[0], r1, r1\n\tjump.gt\t@.BB2_44\n\tadd\tstack-[20], r0, r1\n\tst.1\t64, r1\n.BB2_651:\n\tadd\tstack-[33], r0, r1\n\tadd\tstack-[32], r0, r2\n\tnear_call\tr0, @fun_validatePrepayment_19814, @DEFAULT_UNWIND\n\tadd\tstack-[32], r0, r3\n\tadd\tr1, r0, stack-[26]\n\tadd\tr2, r0, stack-[25]\n\tld.1\t64, r1\n\tadd\tr1, r0, stack-[34]\n\tsub.s!\t@CPI2_44[0], r1, r1\n\tjump.gt\t@.BB2_44\n\tld.1\tr3, r1\n\tadd\t160, r1, r1\n\tld.1\tr1, r1\n\tadd\tstack-[34], r0, r3\n\tadd\t64, r3, r2\n\tst.1\t64, r2\n\tst.1.inc\tr3, r0, r2\n\tadd\tr2, r0, stack-[24]\n\tst.1\tr2, r0\n\tand\t@CPI2_28[0], r1, r1\n\tst.1\t0, r1\n\tst.1\t32, r0\n\tadd\t@CPI2_31[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI2_31[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI2_45[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB2_30\n\tld\tr1, r1\n\tsload\tr1, r2\n\tshr.s\t120, r2, r2\n\tand\t@CPI2_30[0], r2, r2\n\tadd\tstack-[34], r0, r3\n\tst.1\tr3, r2\n\tadd\t1, r1, r1\n\tsload\tr1, r1\n\tand\t@CPI2_31[0], r1, r1\n\tadd\tstack-[24], r0, r2\n\tst.1\tr2, r1\n\tld.1\t64, r1\n\tadd\tr1, r0, stack-[24]\n\tsub.s!\t@CPI2_44[0], r1, r1\n\tadd\tstack-[32], r0, r1\n\tjump.gt\t@.BB2_44\n\tld.1\tr1, r1\n\tld.1\tr1, r1\n\tadd\tstack-[24], r0, r3\n\tadd\t64, r3, r2\n\tst.1\t64, r2\n\tst.1.inc\tr3, r0, r2\n\tadd\tr2, r0, stack-[32]\n\tst.1\tr2, r0\n\tand\t@CPI2_28[0], r1, r1\n\tst.1\t0, r1\n\tst.1\t32, r0\n\tadd\t@CPI2_31[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI2_31[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI2_45[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB2_30\n\tld\tr1, r1\n\tsload\tr1, r2\n\tshr.s\t120, r2, r2\n\tand\t@CPI2_30[0], r2, r2\n\tadd\tstack-[24], r0, r3\n\tst.1\tr3, r2\n\tadd\t1, r1, r1\n\tsload\tr1, r1\n\tand\t@CPI2_31[0], r1, r1\n\tadd\tstack-[32], r0, r2\n\tst.1\tr2, r1\n\tld.1\t64, r1\n\tsub.s!\t@CPI2_44[0], r1, r2\n\tjump.gt\t@.BB2_44\n\tadd\t64, r1, r2\n\tst.1\t64, r2\n\tadd\t32, r1, r2\n\tst.1\tr2, r0\n\tst.1\tr1, r0\n\tadd\tstack[@calldatasize], r0, r2\n\tadd\tstack-[30], r0, r1\n\tadd\tr2, r1, r4\n\tptr.add\tstack[@ptr_calldata], r0, r1\n\tadd\tstack-[31], r0, r3\n\tptr.add\tr1, r3, r3\n\tld\tr3, r3\n\tadd\t@CPI2_27[0], r0, r5\n\tsub!\tr3, r4, r6\n\tadd\t0, r0, r6\n\tadd.ge\tr5, r0, r6\n\tand\t@CPI2_27[0], r4, r4\n\tand\t@CPI2_27[0], r3, r7\n\tsub!\tr7, r4, r8\n\tadd.ge\t0, r0, r5\n\txor\tr7, r4, r4\n\tsub.s!\t@CPI2_27[0], r4, r4\n\tadd\tr6, r0, r4\n\tadd.eq\tr5, r0, r4\n\tsub.s!\t0, r4, r4\n\tjump.ne\t@.BB2_30\n\tadd\tstack-[33], r0, r4\n\tadd\tr3, r4, r4\n\tptr.add\tr1, r4, r3\n\tld\tr3, r3\n\tsub.s!\t@CPI2_34[0], r3, r5\n\tjump.gt\t@.BB2_30\n\tsub\tr2, r3, r5\n\tadd\t32, r4, r2\n\tadd\t@CPI2_27[0], r0, r4\n\tsub!\tr2, r5, r6\n\tadd\t0, r0, r6\n\tadd.gt\tr4, r0, r6\n\tand\t@CPI2_27[0], r5, r5\n\tand\t@CPI2_27[0], r2, r7\n\tsub!\tr7, r5, r8\n\tadd.ge\t0, r0, r4\n\txor\tr7, r5, r5\n\tsub.s!\t@CPI2_27[0], r5, r5\n\tadd.ne\tr6, r0, r4\n\tsub.s!\t0, r4, r4\n\tjump.ne\t@.BB2_30\n\tsub.s!\t19, r3, r3\n\tadd\tr0, r0, r3\n\tjump.le\t@.BB2_660\n\tptr.add\tr1, r2, r1\n\tld\tr1, r1\n\tshr.s\t96, r1, r3\n.BB2_660:\n\tld.1\t64, r1\n\tadd\tr1, r0, stack-[33]\n\tsub.s!\t@CPI2_44[0], r1, r1\n\tjump.gt\t@.BB2_44\n\tadd\tstack-[33], r0, r2\n\tadd\t64, r2, r1\n\tst.1\t64, r1\n\tst.1.inc\tr2, r0, r1\n\tadd\tr1, r0, stack-[32]\n\tst.1\tr1, r0\n\tst.1\t0, r3\n\tst.1\t32, r0\n\tadd\t@CPI2_31[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI2_31[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI2_45[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB2_30\n\tld\tr1, r1\n\tsload\tr1, r2\n\tshr.s\t120, r2, r2\n\tand\t@CPI2_30[0], r2, r2\n\tadd\tstack-[33], r0, r3\n\tst.1\tr3, r2\n\tadd\t1, r1, r1\n\tsload\tr1, r1\n\tand\t@CPI2_31[0], r1, r1\n\tadd\tstack-[32], r0, r2\n\tst.1\tr2, r1\n\tld.1\t64, r1\n\tsub.s!\t@CPI2_46[0], r1, r2\n\tjump.gt\t@.BB2_44\n\tadd\t96, r1, r2\n\tst.1\t64, r2\n\tadd\t64, r1, r2\n\tst.1\tr2, r0\n\tadd\t32, r1, r2\n\tst.1\tr2, r0\n\tst.1\tr1, r0\n\tld.1\t64, r1\n\tsub.s!\t@CPI2_46[0], r1, r2\n\tjump.gt\t@.BB2_44\n\tadd\t96, r1, r2\n\tst.1\t64, r2\n\tadd\t64, r1, r2\n\tst.1\tr2, r0\n\tadd\t32, r1, r2\n\tst.1\tr2, r0\n\tst.1\tr1, r0\n\tld.1\t64, r3\n\tsub.s!\t@CPI2_46[0], r3, r1\n\tjump.gt\t@.BB2_44\n\tadd\t96, r3, r1\n\tst.1\t64, r1\n\tadd\tstack-[26], r0, r4\n\tshr.s\t208, r4, r2\n\tadd\t32, r3, r1\n\tst.1\tr1, r2\n\tand\t@CPI2_28[0], r4, r2\n\tst.1\tr3, r2\n\tshr.s\t160, r4, r2\n\tand!\t@CPI2_32[0], r2, r2\n\tadd\t@CPI2_32[0], r0, r4\n\tadd.ne\tr2, r0, r4\n\tadd\t64, r3, r2\n\tst.1\tr2, r4\n\tld.1\t64, r4\n\tsub.s!\t@CPI2_46[0], r4, r5\n\tjump.gt\t@.BB2_44\n\tadd\t96, r4, r5\n\tst.1\t64, r5\n\tadd\t64, r4, r5\n\tst.1\tr5, r0\n\tadd\t32, r4, r5\n\tst.1\tr5, r0\n\tst.1\tr4, r0\n\tld.1\t64, r6\n\tsub.s!\t@CPI2_46[0], r6, r4\n\tjump.gt\t@.BB2_44\n\tadd\t96, r6, r4\n\tst.1\t64, r4\n\tadd\tstack-[25], r0, r7\n\tshr.s\t208, r7, r5\n\tadd\t32, r6, r4\n\tst.1\tr4, r5\n\tand\t@CPI2_28[0], r7, r5\n\tst.1\tr6, r5\n\tshr.s\t160, r7, r5\n\tand!\t@CPI2_32[0], r5, r5\n\tadd\t@CPI2_32[0], r0, r7\n\tadd.eq\tr7, r0, r5\n\tadd\t64, r6, r7\n\tst.1\tr7, r5\n\tld.1\tr3, r3\n\tand!\t@CPI2_28[0], r3, r7\n\tjump.ne\t@.BB2_669\n\tld.1\tr6, r3\n\tand\t@CPI2_28[0], r3, r7\n.BB2_669:\n\tld.1\t64, r3\n\tsub.s!\t@CPI2_46[0], r3, r6\n\tjump.gt\t@.BB2_44\n\tld.1\tr1, r6\n\tld.1\tr4, r4\n\tld.1\tr2, r1\n\tadd\t96, r3, r2\n\tst.1\t64, r2\n\tand\t@CPI2_32[0], r1, r1\n\tsub!\tr1, r5, r2\n\tadd.ge\tr5, r0, r1\n\tadd\t64, r3, r2\n\tst.1\tr2, r1\n\tand\t@CPI2_32[0], r4, r2\n\tand\t@CPI2_32[0], r6, r4\n\tsub!\tr4, r2, r5\n\tadd.le\tr2, r0, r4\n\tst.1.inc\tr3, r7, r2\n\tst.1\tr2, r4\n\tld.1\t64, r3\n\tadd\tr3, r0, stack-[32]\n\tsub.s!\t@CPI2_47[0], r3, r3\n\tjump.gt\t@.BB2_44\n\tadd\tstack-[28], r0, r3\n\tld.1\tr3, r3\n\tadd\tstack-[27], r0, r4\n\tld.1\tr4, r4\n\tld.1\tr2, r2\n\tadd\tstack-[29], r0, r5\n\tld.1\tr5, r5\n\tadd\tstack-[32], r0, r8\n\tadd\t192, r8, r6\n\tst.1\t64, r6\n\tadd\t160, r8, r6\n\tst.1\tr6, r5\n\tadd\t128, r8, r5\n\tst.1\tr5, r1\n\tand\t@CPI2_32[0], r2, r1\n\tadd\t96, r8, r2\n\tst.1\tr2, r1\n\tadd\tr7, r0, r5\n\tsub.s!\t1, r5, r1\n\tadd\t0, r0, r1\n\tadd.eq\t1, r0, r1\n\tadd\t64, r8, r2\n\tst.1\tr2, r1\n\tadd\t32, r8, r1\n\tst.1\tr1, r4\n\tst.1\tr8, r3\n\tsub.s!\t2, r5, r1\n\tjump.ge\t@.BB2_673\n\tld.1\t64, r2\n\tadd\tr2, r0, stack-[31]\n\tadd\t@CPI2_49[0], r0, r1\n\tst.1\tr2, r1\n\tadd\t4, r2, r1\n\tadd\tstack-[32], r0, r2\n\tadd\tstack-[24], r0, r3\n\tadd\tstack-[33], r0, r4\n\tadd\tstack-[34], r0, r5\n\tnear_call\tr0, @abi_encode_struct_ReturnInfo_struct_StakeInfo_struct_StakeInfo_struct_StakeInfo, @DEFAULT_UNWIND\n\tadd\tstack-[31], r0, r4\n\tsub\tr1, r4, r1\n\tadd\t@CPI2_31[0], r0, r2\n\tsub.s!\t@CPI2_31[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tsub.s!\t@CPI2_31[0], r4, r3\n\tadd.lt\tr4, r0, r2\n\tshl.s\t64, r2, r2\n\tshl.s\t96, r1, r1\n\tor\tr1, r2, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB2_85:\n\tadd\tr2, r0, stack-[4]\n\tsstore\tr2, r2\n\tadd\t63, r3, r1\n\tsub.s\t32, r0, r2\n\tand\tr1, r2, r1\n\tld.1\t64, r6\n\tadd\tr6, r1, r1\n\tsub!\tr1, r6, r2\n\tadd\t0, r0, r2\n\tadd.lt\t1, r0, r2\n\tsub.s!\t@CPI2_34[0], r1, r4\n\tjump.gt\t@.BB2_44\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB2_44\n\tst.1\t64, r1\n\tadd\tstack-[28], r0, r1\n\tst.1.inc\tr6, r1, r2\n\tadd\tr2, r0, stack-[27]\n\tsub.s!\t0, r1, r1\n\tjump.eq\t@.BB2_92\n\tadd\tr0, r0, r1\n.BB2_89:\n\tld.1\t64, r2\n\tsub.s!\t@CPI2_35[0], r2, r4\n\tjump.gt\t@.BB2_44\n\tadd\t160, r2, r4\n\tst.1\t64, r4\n\tsub.s!\t@CPI2_36[0], r2, r5\n\tjump.gt\t@.BB2_44\n\tadd\t416, r2, r5\n\tst.1\t64, r5\n\tst.1\tr4, r0\n\tst.1.inc\tr2, r4, r4\n\tadd\t384, r2, r5\n\tst.1\tr5, r0\n\tadd\t352, r2, r5\n\tst.1\tr5, r0\n\tadd\t320, r2, r5\n\tst.1\tr5, r0\n\tadd\t288, r2, r5\n\tst.1\tr5, r0\n\tadd\t256, r2, r5\n\tst.1\tr5, r0\n\tadd\t224, r2, r5\n\tst.1\tr5, r0\n\tadd\t192, r2, r5\n\tst.1\tr5, r0\n\tadd\t128, r2, r5\n\tst.1\tr5, r0\n\tadd\t96, r2, r5\n\tst.1\tr5, r0\n\tadd\t64, r2, r5\n\tst.1\tr5, r0\n\tst.1\tr4, r0\n\tadd\t32, r1, r1\n\tadd\tr1, r6, r4\n\tst.1\tr4, r2\n\tsub!\tr1, r3, r2\n\tjump.lt\t@.BB2_89\n.BB2_92:\n\tcontext.get_context_u128\tr1\n\tsub.s!\t1, r1, r1\n\tjump.gt\t@.BB2_94\n\tld.1\t64, r1\n\tadd\t68, r1, r2\n\tadd\t@CPI2_115[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t15, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI2_42[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI2_31[0], r0, r2\n\tsub.s!\t@CPI2_31[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI2_60[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB2_514:\n\tadd\tr1, r0, stack-[32]\n\tadd\tr4, r0, stack-[29]\n\tadd\tr3, r0, stack-[30]\n\tadd\tr2, r0, stack-[31]\n\tadd\t@CPI2_53[0], r0, r1\n\tst.2\t0, r1\n\tadd\t@CPI2_31[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI2_31[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI2_51[0], r1, r1\n\tadd\t32779, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB2_30\n\tld\tr1, r1\n\tadd\tstack-[32], r0, r2\n\tsub!\tr2, r1, r1\n\tjump.le\t@.BB2_517\n\tld.1\t64, r1\n\tadd\t68, r1, r2\n\tadd\t@CPI2_59[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t27, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI2_42[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI2_31[0], r0, r2\n\tsub.s!\t@CPI2_31[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI2_60[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB2_476:\n\tadd\tstack-[34], r0, r3\n\tadd\t31, r3, r3\n\tsub.s\t32, r0, r4\n\tand\tr3, r4, r3\n\tadd\t@CPI2_73[0], r0, r4\n\tsub.s!\t@CPI2_73[0], r3, r5\n\tadd.ge\tr4, r0, r3\n\tadd\t@CPI2_31[0], r0, r4\n\tadd\tstack-[33], r0, r6\n\tsub.s!\t@CPI2_31[0], r6, r5\n\tadd\tr4, r0, r5\n\tadd.lt\tr6, r0, r5\n\tshl.s\t64, r5, r5\n\tshl.s\t96, r3, r3\n\tor\tr3, r5, r3\n\tsub.s!\t@CPI2_31[0], r1, r5\n\tadd.ge\tr4, r0, r1\n\tshl.s\t192, r1, r1\n\tor\tr3, r1, r1\n\tadd\t@CPI2_74[0], r1, r1\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tadd\tstack-[33], r0, r10\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI2_31[0], r3, r3\n\tsub.s!\t32, r3, r4\n\tadd\t32, r0, r4\n\tadd.lt\tr3, r0, r4\n\tand\t31, r4, r5\n\tshr.s!\t5, r4, r6\n\tjump.eq\t@.BB2_691\n\tadd\tr0, r0, r7\n.BB2_478:\n\tshl.s\t5, r7, r8\n\tadd\tr10, r8, r9\n\tptr.add\tr1, r8, r8\n\tld\tr8, r8\n\tst.1\tr9, r8\n\tadd\t1, r7, r7\n\tsub!\tr7, r6, r8\n\tjump.lt\t@.BB2_478\n.BB2_691:\n\tsub.s!\t0, r5, r7\n\tjump.eq\t@.BB2_480\n\tshl.s\t5, r6, r6\n\tptr.add\tr1, r6, r7\n\tadd\tr10, r6, r6\n\tshl.s\t3, r5, r5\n\tld.1\tr6, r8\n\tshl\tr8, r5, r8\n\tshr\tr8, r5, r8\n\tld\tr7, r7\n\tsub\t256, r5, r5\n\tshr\tr7, r5, r7\n\tshl\tr7, r5, r5\n\tor\tr5, r8, r5\n\tst.1\tr6, r5\n.BB2_480:\n\tadd\tr3, r0, stack[@returndatasize]\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB2_481\n.BB2_486:\n\tadd\t31, r4, r1\n\tand\t96, r1, r2\n\tadd\tr2, r10, r1\n\tsub!\tr1, r2, r2\n\tadd\t0, r0, r2\n\tadd.lt\t1, r0, r2\n\tsub.s!\t@CPI2_34[0], r1, r4\n\tjump.gt\t@.BB2_44\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB2_44\n\tst.1\t64, r1\n\tsub.s!\t32, r3, r2\n\tjump.lt\t@.BB2_30\n\tadd\tstack-[33], r0, r2\n\tld.1\tr2, r2\n\tsub.s!\t@CPI2_28[0], r2, r3\n\tjump.gt\t@.BB2_30\n\tadd\t@CPI2_75[0], r0, r3\n\tst.1\tr1, r3\n\tadd\t4, r1, r3\n\tst.1\tr3, r2\n\tadd\t@CPI2_31[0], r0, r2\n\tsub.s!\t@CPI2_31[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI2_76[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB2_248:\n\tsstore\tr1, r1\n\tadd\tstack-[20], r0, r1\n\tsub.s!\t0, r1, r1\n\tadd\tr0, r0, stack-[26]\n\tjump.ne\t@.BB2_249\n.BB2_260:\n\tadd\tstack-[26], r0, r1\n\tshl.s\t5, r1, r1\n\tadd\t63, r1, r2\n\tsub.s\t32, r0, r3\n\tand\tr2, r3, r3\n\tld.1\t64, r6\n\tadd\tr3, r6, r2\n\tsub!\tr2, r3, r3\n\tadd\t0, r0, r3\n\tadd.lt\t1, r0, r3\n\tsub.s!\t@CPI2_34[0], r2, r4\n\tjump.gt\t@.BB2_44\n\tand!\t1, r3, r3\n\tjump.ne\t@.BB2_44\n\tst.1\t64, r2\n\tadd\tstack-[26], r0, r3\n\tst.1.inc\tr6, r3, r2\n\tadd\tr2, r0, stack-[4]\n\tsub.s!\t0, r3, r2\n\tjump.eq\t@.BB2_267\n\tadd\tr0, r0, r2\n.BB2_264:\n\tld.1\t64, r3\n\tsub.s!\t@CPI2_35[0], r3, r4\n\tjump.gt\t@.BB2_44\n\tadd\t160, r3, r4\n\tst.1\t64, r4\n\tsub.s!\t@CPI2_36[0], r3, r5\n\tjump.gt\t@.BB2_44\n\tadd\t416, r3, r5\n\tst.1\t64, r5\n\tst.1\tr4, r0\n\tst.1.inc\tr3, r4, r4\n\tadd\t384, r3, r5\n\tst.1\tr5, r0\n\tadd\t352, r3, r5\n\tst.1\tr5, r0\n\tadd\t320, r3, r5\n\tst.1\tr5, r0\n\tadd\t288, r3, r5\n\tst.1\tr5, r0\n\tadd\t256, r3, r5\n\tst.1\tr5, r0\n\tadd\t224, r3, r5\n\tst.1\tr5, r0\n\tadd\t192, r3, r5\n\tst.1\tr5, r0\n\tadd\t128, r3, r5\n\tst.1\tr5, r0\n\tadd\t96, r3, r5\n\tst.1\tr5, r0\n\tadd\t64, r3, r5\n\tst.1\tr5, r0\n\tst.1\tr4, r0\n\tadd\t32, r2, r2\n\tadd\tr2, r6, r4\n\tst.1\tr4, r3\n\tsub!\tr2, r1, r3\n\tjump.lt\t@.BB2_264\n.BB2_267:\n\tadd\tr6, r0, stack-[23]\n\tadd\t@CPI2_31[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI2_31[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI2_58[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t1, r0, r3\n\tadd\t@CPI2_80[0], r0, r4\n\tadd\tr3, r0, stack-[8]\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB2_30\n\tadd\tstack-[20], r0, r1\n\tsub.s!\t0, r1, r1\n\tadd\tr0, r0, stack-[32]\n\tjump.ne\t@.BB2_317\n.BB2_421:\n\tadd\t@CPI2_31[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI2_31[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI2_58[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t2, r0, r3\n\tadd\t@CPI2_85[0], r0, r4\n\tadd\tr3, r0, stack-[34]\n\tadd\tr0, r0, r5\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB2_30\n\tadd\tstack-[1], r0, r1\n\tadd\tstack-[32], r0, r2\n\tnear_call\tr0, @fun_compensate, @DEFAULT_UNWIND\n\tadd\t1, r0, r1\n\tadd\tstack-[34], r0, r2\n\tsstore\tr2, r1\n\tadd\tr0, r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB2_41:\n\tld.1\t64, r5\n\tsub.s!\t@CPI2_117[0], r3, r2\n\tjump.lt\t@.BB2_43\n\tadd\t68, r5, r1\n\tadd\t@CPI2_122[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t36, r5, r1\n\tadd\t14, r0, r2\n\tst.1\tr1, r2\n\tadd\t@CPI2_42[0], r0, r1\n\tst.1\tr5, r1\n\tadd\t4, r5, r1\n\tadd\t32, r0, r2\n\tst.1\tr1, r2\n\tadd\t@CPI2_31[0], r0, r1\n\tsub.s!\t@CPI2_31[0], r5, r2\n\tadd.lt\tr5, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI2_60[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB2_505:\n\tshl.s\t32, r1, r2\n\tand\t@CPI2_63[0], r2, r2\n\tadd\tstack-[31], r0, r4\n\tsload\tr4, r3\n\tand\t@CPI2_55[0], r3, r3\n\tor\tr3, r2, r2\n\tsstore\tr4, r2\n\tadd\tstack-[32], r0, r3\n\tsload\tr3, r2\n\tand\t@CPI2_64[0], r2, r2\n\tsstore\tr3, r2\n\tld.1\t64, r2\n\tst.1\tr2, r1\n\tadd\t@CPI2_31[0], r0, r1\n\tcontext.gas_left\tr3\n\tsub.s!\t@CPI2_31[0], r3, r4\n\tadd.ge\tr1, r0, r3\n\tsub.s!\t@CPI2_31[0], r2, r4\n\tadd.lt\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r3, r2\n\tor\tr2, r1, r1\n\tor\t@CPI2_65[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t2, r0, r3\n\tadd\t@CPI2_66[0], r0, r4\n\tadd\tstack-[34], r0, r5\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB2_30\n.BB2_47:\n\tadd\tr0, r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB2_517:\n\tadd\tstack-[29], r0, r2\n\tsload\tr2, r1\n\tand\t@CPI2_54[0], r1, r1\n\tsstore\tr2, r1\n\tsload\tr2, r1\n\tand\t@CPI2_55[0], r1, r1\n\tsstore\tr2, r1\n\tadd\tstack-[30], r0, r2\n\tsload\tr2, r1\n\tand\t@CPI2_56[0], r1, r1\n\tsstore\tr2, r1\n\tld.1\t64, r1\n\tadd\t32, r1, r2\n\tadd\tstack-[31], r0, r3\n\tst.1\tr2, r3\n\tadd\tstack-[34], r0, r2\n\tst.1\tr1, r2\n\tadd\t@CPI2_31[0], r0, r2\n\tcontext.gas_left\tr3\n\tsub.s!\t@CPI2_31[0], r3, r4\n\tadd.ge\tr2, r0, r3\n\tsub.s!\t@CPI2_31[0], r1, r4\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r3, r2\n\tor\tr2, r1, r1\n\tor\t@CPI2_45[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t2, r0, r3\n\tadd\t@CPI2_57[0], r0, r4\n\tadd\tstack-[33], r0, r5\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB2_30\n\tadd\t1, r0, r1\n\tadd\tr1, r0, stack-[33]\n\tcontext.gas_left\tr1\n\tadd\tstack-[34], r0, r2\n\tsub.s!\t4, r2, r2\n\tjump.eq\t@.BB2_519\n\tadd\t@CPI2_31[0], r0, r2\n\tsub.s!\t@CPI2_31[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI2_58[0], r1, r1\n\tadd\t32777, r0, r2\n\tadd\tstack-[31], r0, r3\n\tadd\tstack-[34], r0, r4\n\tadd\tr0, r0, r5\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tadd\tr2, r0, stack-[33]\n\tadd\tr1, r0, r2\n\tshr.s\t96, r2, r2\n\tand\t@CPI2_31[0], r2, stack[@returndatasize]\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n.BB2_519:\n\tnear_call\tr0, @extract_returndata, @DEFAULT_UNWIND\n\tadd\tstack-[33], r0, r1\n\tand\t1, r1, r1\n\tnear_call\tr0, @require_helper_stringliteral_1dfd, @DEFAULT_UNWIND\n\tadd\tr0, r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB2_481:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r3\n\tjump.eq\t@.BB2_690\n\tadd\tr0, r0, r5\n.BB2_483:\n\tshl.s\t5, r5, r6\n\tadd\tr2, r6, r7\n\tptr.add\tr1, r6, r6\n\tld\tr6, r6\n\tst.1\tr7, r6\n\tadd\t1, r5, r5\n\tsub!\tr5, r3, r6\n\tjump.lt\t@.BB2_483\n.BB2_690:\n\tsub.s!\t0, r4, r5\n\tjump.eq\t@.BB2_485\n\tshl.s\t5, r3, r3\n\tptr.add\tr1, r3, r1\n\tadd\tr2, r3, r3\n\tshl.s\t3, r4, r4\n\tld.1\tr3, r5\n\tshl\tr5, r4, r5\n\tshr\tr5, r4, r5\n\tld\tr1, r1\n\tsub\t256, r4, r4\n\tshr\tr1, r4, r1\n\tshl\tr1, r4, r1\n\tor\tr1, r5, r1\n\tst.1\tr3, r1\n.BB2_485:\n\tadd\t@CPI2_31[0], r0, r1\n\tadd\tstack[@returndatasize], r0, r3\n\tsub.s!\t@CPI2_31[0], r3, r4\n\tadd.ge\tr1, r0, r3\n\tsub.s!\t@CPI2_31[0], r2, r4\n\tadd.lt\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t96, r3, r2\n\tor\tr2, r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB2_249:\n\tsub.s\t131, r0, r1\n\tadd\tstack-[18], r0, r2\n\tsub\tr1, r2, r1\n\tadd\tr1, r0, stack-[19]\n\tadd\tstack[@calldatasize], r0, r1\n\tptr.add\tstack[@ptr_calldata], r0, r2\n\tadd\tr0, r0, stack-[26]\n\tadd\tr0, r0, r5\n.BB2_251:\n\tadd\tstack-[19], r0, r3\n\tadd\tr3, r1, r4\n\tadd\tr5, r0, stack-[25]\n\tshl.s\t5, r5, r3\n\tadd\tstack-[27], r0, r5\n\tadd\tr3, r5, r3\n\tptr.add\tr2, r3, r3\n\tld\tr3, r3\n\tadd\t@CPI2_27[0], r0, r5\n\tsub!\tr3, r4, r6\n\tadd\t0, r0, r6\n\tadd.ge\tr5, r0, r6\n\tand\t@CPI2_27[0], r4, r4\n\tand\t@CPI2_27[0], r3, r7\n\tsub!\tr7, r4, r8\n\tadd.ge\t0, r0, r5\n\txor\tr7, r4, r4\n\tsub.s!\t@CPI2_27[0], r4, r4\n\tadd\tr6, r0, r4\n\tadd.eq\tr5, r0, r4\n\tsub.s!\t0, r4, r4\n\tjump.ne\t@.BB2_30\n\tadd\tstack-[27], r0, r4\n\tadd\tr3, r4, r3\n\tptr.add\tr2, r3, r4\n\tld\tr4, r5\n\tsub\tr1, r3, r4\n\tsub.s\t31, r4, r4\n\tand\t@CPI2_27[0], r4, r6\n\tand\t@CPI2_27[0], r5, r7\n\tadd\t@CPI2_27[0], r0, r8\n\tsub!\tr7, r6, r9\n\tadd\t0, r0, r9\n\tadd.lt\tr8, r0, r9\n\txor\tr7, r6, r6\n\tsub!\tr5, r4, r7\n\tadd\t0, r0, r7\n\tadd.ge\tr8, r0, r7\n\tsub.s!\t@CPI2_27[0], r6, r6\n\tadd\tr7, r0, r6\n\tadd.eq\tr9, r0, r6\n\tsub.s!\t0, r6, r6\n\tjump.ne\t@.BB2_30\n\tadd\tr5, r3, r10\n\tptr.add\tr2, r10, r5\n\tld\tr5, r5\n\tadd\tr5, r0, stack-[32]\n\tsub.s!\t@CPI2_34[0], r5, r5\n\tjump.gt\t@.BB2_30\n\tadd\tstack-[32], r0, r5\n\tshl.s\t5, r5, r11\n\tsub\tr1, r11, r5\n\tadd\t32, r10, r8\n\tadd\t@CPI2_27[0], r0, r6\n\tsub!\tr8, r5, r7\n\tadd\t0, r0, r7\n\tadd.gt\tr6, r0, r7\n\tand\t@CPI2_27[0], r5, r5\n\tadd\tr8, r0, stack-[31]\n\tand\t@CPI2_27[0], r8, r8\n\tsub!\tr8, r5, r9\n\tadd.ge\t0, r0, r6\n\txor\tr8, r5, r5\n\tsub.s!\t@CPI2_27[0], r5, r5\n\tadd\tr7, r0, r5\n\tadd.eq\tr6, r0, r5\n\tsub.s!\t0, r5, r5\n\tjump.ne\t@.BB2_30\n\tadd\t32, r3, r5\n\tptr.add\tr2, r5, r5\n\tld\tr5, r5\n\tadd\tr5, r0, stack-[28]\n\tsub.s!\t@CPI2_28[0], r5, r5\n\tjump.gt\t@.BB2_30\n\tadd\tstack-[28], r0, r6\n\tsub.s!\t1, r6, r5\n\tjump.eq\t@.BB2_257\n\tsub.s!\t0, r6, r5\n\tjump.eq\t@.BB2_273\n\tadd\t64, r3, r5\n\tptr.add\tr2, r5, r5\n\tld\tr5, r5\n\tadd\t@CPI2_27[0], r0, r6\n\tsub!\tr5, r4, r7\n\tadd\t0, r0, r7\n\tadd.ge\tr6, r0, r7\n\tand\t@CPI2_27[0], r4, r4\n\tand\t@CPI2_27[0], r5, r8\n\tsub!\tr8, r4, r9\n\tadd.ge\t0, r0, r6\n\txor\tr8, r4, r4\n\tsub.s!\t@CPI2_27[0], r4, r4\n\tadd\tr7, r0, r4\n\tadd.eq\tr6, r0, r4\n\tsub.s!\t0, r4, r4\n\tjump.ne\t@.BB2_30\n\tadd\tr5, r3, r3\n\tptr.add\tr2, r3, r2\n\tld\tr2, r2\n\tadd\tr2, r0, stack-[23]\n\tsub.s!\t@CPI2_34[0], r2, r2\n\tjump.gt\t@.BB2_30\n\tadd\tstack-[23], r0, r2\n\tsub\tr1, r2, r1\n\tadd\t32, r3, r4\n\tadd\t@CPI2_27[0], r0, r2\n\tsub!\tr4, r1, r3\n\tadd\t0, r0, r3\n\tadd.gt\tr2, r0, r3\n\tand\t@CPI2_27[0], r1, r1\n\tadd\tr4, r0, stack-[22]\n\tand\t@CPI2_27[0], r4, r4\n\tsub!\tr4, r1, r5\n\tadd.ge\t0, r0, r2\n\txor\tr4, r1, r1\n\tsub.s!\t@CPI2_27[0], r1, r1\n\tadd\tr3, r0, r1\n\tadd.eq\tr2, r0, r1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB2_30\n\tadd\t@CPI2_37[0], r0, r1\n\tst.2\t0, r1\n\tadd\tstack-[28], r0, r1\n\tst.2\t4, r1\n\tadd\t@CPI2_31[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI2_31[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI2_38[0], r1, r1\n\tadd\t32770, r0, r2\n\tadd\tr10, r0, stack-[34]\n\tadd\tr11, r0, stack-[33]\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tstack-[33], r0, r6\n\tadd\tstack-[34], r0, r5\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB2_30\n\tld\tr1, r1\n\tsub.s!\t0, r1, r1\n\tjump.eq\t@.BB2_30\n\tld.1\t64, r4\n\tadd\t@CPI2_77[0], r0, r1\n\tst.1\tr4, r1\n\tadd\t68, r4, r1\n\tadd\tstack-[32], r0, r3\n\tst.1\tr1, r3\n\tadd\t4, r4, r1\n\tadd\t64, r0, r2\n\tadd\tr1, r0, stack-[21]\n\tst.1\tr1, r2\n\tadd\tr4, r0, stack-[24]\n\tadd\t100, r4, r2\n\tadd\tr2, r6, r7\n\tsub.s!\t0, r3, r3\n\tjump.eq\t@.BB2_307\n\tsub.s\t383, r0, r3\n\tsub\tr3, r5, r1\n\tadd\tr1, r0, stack-[30]\n\tsub.s\t100, r0, r4\n\tadd\tstack-[24], r0, r1\n\tsub\tr4, r1, r1\n\tadd\tr1, r0, stack-[29]\n\tadd\tr0, r0, r3\n\tadd\tstack-[31], r0, r6\n\tjump\t@.BB2_276\n.BB2_306:\n\tadd\t31, r8, r1\n\tand\tr1, r10, r1\n\tadd\tr8, r7, r2\n\tst.1\tr2, r0\n\tadd\tr1, r7, r7\n\tadd\t32, r6, r6\n\tadd\tstack-[33], r0, r3\n\tadd\t1, r3, r3\n\tadd\tstack-[32], r0, r1\n\tsub!\tr3, r1, r1\n\tadd\tstack-[34], r0, r2\n\tjump.ge\t@.BB2_307\n.BB2_276:\n\tadd\tr3, r0, stack-[33]\n\tadd\tstack-[29], r0, r1\n\tadd\tr1, r7, r8\n\tst.1.inc\tr2, r8, r2\n\tadd\tr2, r0, stack-[34]\n\tptr.add\tstack[@ptr_calldata], r0, r9\n\tptr.add\tr9, r6, r8\n\tld\tr8, r8\n\tadd\tstack-[30], r0, r1\n\tadd\tstack[@calldatasize], r1, r10\n\tadd\t@CPI2_27[0], r0, r11\n\tsub!\tr8, r10, r12\n\tadd\t0, r0, r12\n\tadd.ge\tr11, r0, r12\n\tand\t@CPI2_27[0], r10, r10\n\tand\t@CPI2_27[0], r8, r13\n\tsub!\tr13, r10, r14\n\tadd.ge\t0, r0, r11\n\txor\tr13, r10, r10\n\tsub.s!\t@CPI2_27[0], r10, r10\n\tadd\tr12, r0, r10\n\tadd.eq\tr11, r0, r10\n\tsub.s!\t0, r10, r10\n\tjump.ne\t@.BB2_30\n\tadd\tstack-[31], r0, r1\n\tadd\tr8, r1, r8\n\tptr.add\tr9, r8, r9\n\tld\tr9, r9\n\tsub.s!\t@CPI2_28[0], r9, r10\n\tjump.gt\t@.BB2_30\n\tst.1.inc\tr7, r9, r9\n\tadd\t32, r8, r10\n\tptr.add\tstack[@ptr_calldata], r10, r10\n\tld\tr10, r10\n\tst.1\tr9, r10\n\tsub.s\t31, r0, r9\n\tsub\tr9, r8, r9\n\tadd\t64, r8, r11\n\tptr.add\tstack[@ptr_calldata], r0, r10\n\tptr.add\tr10, r11, r11\n\tld\tr11, r12\n\tadd\tstack[@calldatasize], r0, r11\n\tadd\tr11, r9, r13\n\tadd\t@CPI2_27[0], r0, r14\n\tsub!\tr12, r13, r15\n\tadd\t0, r0, r15\n\tadd.ge\tr14, r0, r15\n\tand\t@CPI2_27[0], r13, r13\n\tand\t@CPI2_27[0], r12, r1\n\tsub!\tr1, r13, r3\n\tadd\t0, r0, r3\n\tadd.lt\tr14, r0, r3\n\txor\tr1, r13, r1\n\tsub.s!\t@CPI2_27[0], r1, r1\n\tadd\tr15, r0, r1\n\tadd.eq\tr3, r0, r1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB2_30\n\tadd\tr12, r8, r12\n\tptr.add\tr10, r12, r1\n\tld\tr1, r10\n\tsub.s!\t@CPI2_34[0], r10, r1\n\tjump.gt\t@.BB2_30\n\tadd\t32, r12, r13\n\tsub\tr11, r10, r1\n\tadd\t@CPI2_27[0], r0, r3\n\tsub!\tr13, r1, r11\n\tadd\t0, r0, r11\n\tadd.gt\tr3, r0, r11\n\tand\t@CPI2_27[0], r1, r1\n\tand\t@CPI2_27[0], r13, r12\n\tsub!\tr12, r1, r14\n\tadd.ge\t0, r0, r3\n\txor\tr12, r1, r1\n\tsub.s!\t@CPI2_27[0], r1, r1\n\tadd\tr11, r0, r1\n\tadd.eq\tr3, r0, r1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB2_30\n\tadd\t64, r7, r1\n\tadd\t352, r0, r3\n\tst.1\tr1, r3\n\tadd\t352, r7, r1\n\tst.1\tr1, r10\n\tadd\t384, r7, r12\n\tptr.add\tstack[@ptr_calldata], r13, r11\n\tshr.s!\t5, r10, r13\n\tjump.eq\t@.BB2_700\n\tadd\tr0, r0, r14\n.BB2_283:\n\tshl.s\t5, r14, r1\n\tadd\tr12, r1, r3\n\tptr.add\tr11, r1, r1\n\tld\tr1, r1\n\tst.1\tr3, r1\n\tadd\t1, r14, r14\n\tsub!\tr14, r13, r1\n\tjump.lt\t@.BB2_283\n.BB2_700:\n\tand!\t31, r10, r14\n\tjump.eq\t@.BB2_285\n\tshl.s\t5, r13, r1\n\tptr.add\tr11, r1, r3\n\tadd\tr12, r1, r1\n\tshl.s\t3, r14, r11\n\tld.1\tr1, r13\n\tshl\tr13, r11, r13\n\tshr\tr13, r11, r13\n\tld\tr3, r3\n\tsub\t256, r11, r11\n\tshr\tr3, r11, r3\n\tshl\tr3, r11, r3\n\tor\tr3, r13, r3\n\tst.1\tr1, r3\n.BB2_285:\n\tadd\tr10, r12, r1\n\tst.1\tr1, r0\n\tadd\tstack[@calldatasize], r0, r13\n\tadd\tr13, r9, r1\n\tadd\t96, r8, r3\n\tptr.add\tstack[@ptr_calldata], r0, r11\n\tptr.add\tr11, r3, r3\n\tld\tr3, r14\n\tadd\t@CPI2_27[0], r0, r3\n\tsub!\tr14, r1, r15\n\tadd\t0, r0, r15\n\tadd.ge\tr3, r0, r15\n\tand\t@CPI2_27[0], r1, r1\n\tand\t@CPI2_27[0], r14, r4\n\tsub!\tr4, r1, r2\n\tadd\t0, r0, r2\n\tadd.lt\tr3, r0, r2\n\txor\tr4, r1, r1\n\tsub.s!\t@CPI2_27[0], r1, r1\n\tadd\tr15, r0, r1\n\tadd.eq\tr2, r0, r1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB2_30\n\tadd\tr14, r8, r14\n\tptr.add\tr11, r14, r1\n\tld\tr1, r11\n\tsub.s!\t@CPI2_34[0], r11, r1\n\tjump.gt\t@.BB2_30\n\tadd\t32, r14, r14\n\tsub\tr13, r11, r1\n\tadd\t@CPI2_27[0], r0, r2\n\tsub!\tr14, r1, r3\n\tadd\t0, r0, r3\n\tadd.gt\tr2, r0, r3\n\tand\t@CPI2_27[0], r1, r1\n\tand\t@CPI2_27[0], r14, r4\n\tsub!\tr4, r1, r13\n\tadd.ge\t0, r0, r2\n\txor\tr4, r1, r1\n\tsub.s!\t@CPI2_27[0], r1, r1\n\tadd\tr3, r0, r1\n\tadd.eq\tr2, r0, r1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB2_30\n\tadd\t31, r10, r1\n\tsub.s\t32, r0, r10\n\tand\tr1, r10, r1\n\tadd\tr1, r12, r1\n\tsub\tr1, r7, r2\n\tadd\t96, r7, r3\n\tst.1\tr3, r2\n\tst.1.inc\tr1, r11, r13\n\tptr.add\tstack[@ptr_calldata], r14, r12\n\tshr.s!\t5, r11, r14\n\tjump.eq\t@.BB2_699\n\tadd\tr0, r0, r15\n.BB2_290:\n\tshl.s\t5, r15, r1\n\tadd\tr13, r1, r2\n\tptr.add\tr12, r1, r1\n\tld\tr1, r1\n\tst.1\tr2, r1\n\tadd\t1, r15, r15\n\tsub!\tr15, r14, r1\n\tjump.lt\t@.BB2_290\n.BB2_699:\n\tand!\t31, r11, r15\n\tjump.eq\t@.BB2_292\n\tshl.s\t5, r14, r1\n\tptr.add\tr12, r1, r2\n\tadd\tr13, r1, r1\n\tshl.s\t3, r15, r3\n\tld.1\tr1, r4\n\tshl\tr4, r3, r4\n\tshr\tr4, r3, r4\n\tld\tr2, r2\n\tsub\t256, r3, r3\n\tshr\tr2, r3, r2\n\tshl\tr2, r3, r2\n\tor\tr2, r4, r2\n\tst.1\tr1, r2\n.BB2_292:\n\tadd\tr11, r13, r1\n\tst.1\tr1, r0\n\tadd\t128, r8, r1\n\tptr.add\tstack[@ptr_calldata], r1, r1\n\tld\tr1, r1\n\tadd\t128, r7, r2\n\tst.1\tr2, r1\n\tadd\t160, r8, r1\n\tptr.add\tstack[@ptr_calldata], r1, r1\n\tld\tr1, r1\n\tadd\t160, r7, r2\n\tst.1\tr2, r1\n\tadd\t192, r8, r1\n\tptr.add\tstack[@ptr_calldata], r1, r1\n\tld\tr1, r1\n\tadd\t192, r7, r2\n\tst.1\tr2, r1\n\tadd\t224, r8, r1\n\tptr.add\tstack[@ptr_calldata], r1, r1\n\tld\tr1, r1\n\tadd\t224, r7, r2\n\tst.1\tr2, r1\n\tadd\t256, r7, r1\n\tadd\t256, r8, r2\n\tptr.add\tstack[@ptr_calldata], r2, r2\n\tld\tr2, r2\n\tst.1\tr1, r2\n\tadd\t288, r8, r1\n\tadd\tstack[@calldatasize], r0, r14\n\tadd\tr14, r9, r2\n\tptr.add\tstack[@ptr_calldata], r0, r12\n\tptr.add\tr12, r1, r1\n\tld\tr1, r15\n\tadd\t@CPI2_27[0], r0, r1\n\tsub!\tr15, r2, r3\n\tadd\t0, r0, r3\n\tadd.ge\tr1, r0, r3\n\tand\t@CPI2_27[0], r2, r2\n\tand\t@CPI2_27[0], r15, r4\n\tsub!\tr4, r2, r5\n\tadd.ge\t0, r0, r1\n\txor\tr4, r2, r2\n\tsub.s!\t@CPI2_27[0], r2, r2\n\tadd.ne\tr3, r0, r1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB2_30\n\tadd\tr15, r8, r15\n\tptr.add\tr12, r15, r1\n\tld\tr1, r12\n\tsub.s!\t@CPI2_34[0], r12, r1\n\tjump.gt\t@.BB2_30\n\tadd\t32, r15, r15\n\tsub\tr14, r12, r1\n\tadd\t@CPI2_27[0], r0, r2\n\tsub!\tr15, r1, r3\n\tadd\t0, r0, r3\n\tadd.gt\tr2, r0, r3\n\tand\t@CPI2_27[0], r1, r1\n\tand\t@CPI2_27[0], r15, r4\n\tsub!\tr4, r1, r5\n\tadd.ge\t0, r0, r2\n\txor\tr4, r1, r1\n\tsub.s!\t@CPI2_27[0], r1, r1\n\tadd\tr3, r0, r1\n\tadd.eq\tr2, r0, r1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB2_30\n\tadd\t31, r11, r1\n\tand\tr1, r10, r1\n\tadd\tr1, r13, r1\n\tsub\tr1, r7, r2\n\tadd\t288, r7, r3\n\tst.1\tr3, r2\n\tst.1.inc\tr1, r12, r11\n\tptr.add\tstack[@ptr_calldata], r15, r13\n\tshr.s!\t5, r12, r14\n\tjump.eq\t@.BB2_698\n\tadd\tr0, r0, r15\n.BB2_297:\n\tshl.s\t5, r15, r1\n\tadd\tr11, r1, r2\n\tptr.add\tr13, r1, r1\n\tld\tr1, r1\n\tst.1\tr2, r1\n\tadd\t1, r15, r15\n\tsub!\tr15, r14, r1\n\tjump.lt\t@.BB2_297\n.BB2_698:\n\tand!\t31, r12, r15\n\tjump.eq\t@.BB2_299\n\tshl.s\t5, r14, r1\n\tptr.add\tr13, r1, r2\n\tadd\tr11, r1, r1\n\tshl.s\t3, r15, r3\n\tld.1\tr1, r4\n\tshl\tr4, r3, r4\n\tshr\tr4, r3, r4\n\tld\tr2, r2\n\tsub\t256, r3, r3\n\tshr\tr2, r3, r2\n\tshl\tr2, r3, r2\n\tor\tr2, r4, r2\n\tst.1\tr1, r2\n.BB2_299:\n\tadd\tr12, r11, r1\n\tst.1\tr1, r0\n\tadd\tstack[@calldatasize], r0, r13\n\tadd\tr13, r9, r1\n\tadd\t320, r8, r2\n\tptr.add\tstack[@ptr_calldata], r0, r9\n\tptr.add\tr9, r2, r2\n\tld\tr2, r14\n\tadd\t@CPI2_27[0], r0, r2\n\tsub!\tr14, r1, r3\n\tadd\t0, r0, r3\n\tadd.ge\tr2, r0, r3\n\tand\t@CPI2_27[0], r1, r1\n\tand\t@CPI2_27[0], r14, r4\n\tsub!\tr4, r1, r5\n\tadd.ge\t0, r0, r2\n\txor\tr4, r1, r1\n\tsub.s!\t@CPI2_27[0], r1, r1\n\tadd\tr3, r0, r1\n\tadd.eq\tr2, r0, r1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB2_30\n\tadd\tr14, r8, r14\n\tptr.add\tr9, r14, r1\n\tld\tr1, r8\n\tsub.s!\t@CPI2_34[0], r8, r1\n\tjump.gt\t@.BB2_30\n\tadd\t32, r14, r9\n\tsub\tr13, r8, r1\n\tadd\t@CPI2_27[0], r0, r2\n\tsub!\tr9, r1, r3\n\tadd\t0, r0, r3\n\tadd.gt\tr2, r0, r3\n\tand\t@CPI2_27[0], r1, r1\n\tand\t@CPI2_27[0], r9, r4\n\tsub!\tr4, r1, r5\n\tadd.ge\t0, r0, r2\n\txor\tr4, r1, r1\n\tsub.s!\t@CPI2_27[0], r1, r1\n\tadd\tr3, r0, r1\n\tadd.eq\tr2, r0, r1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB2_30\n\tadd\t31, r12, r1\n\tand\tr1, r10, r1\n\tadd\tr1, r11, r1\n\tsub\tr1, r7, r2\n\tadd\t320, r7, r3\n\tst.1\tr3, r2\n\tst.1.inc\tr1, r8, r7\n\tptr.add\tstack[@ptr_calldata], r9, r9\n\tshr.s!\t5, r8, r11\n\tjump.eq\t@.BB2_697\n\tadd\tr0, r0, r12\n.BB2_304:\n\tshl.s\t5, r12, r1\n\tadd\tr7, r1, r2\n\tptr.add\tr9, r1, r1\n\tld\tr1, r1\n\tst.1\tr2, r1\n\tadd\t1, r12, r12\n\tsub!\tr12, r11, r1\n\tjump.lt\t@.BB2_304\n.BB2_697:\n\tand!\t31, r8, r12\n\tjump.eq\t@.BB2_306\n\tshl.s\t5, r11, r1\n\tptr.add\tr9, r1, r2\n\tadd\tr7, r1, r1\n\tshl.s\t3, r12, r3\n\tld.1\tr1, r4\n\tshl\tr4, r3, r4\n\tshr\tr4, r3, r4\n\tld\tr2, r2\n\tsub\t256, r3, r3\n\tshr\tr2, r3, r2\n\tshl\tr2, r3, r2\n\tor\tr2, r4, r2\n\tst.1\tr1, r2\n\tjump\t@.BB2_306\n.BB2_307:\n\tadd\tstack-[21], r0, r1\n\tsub\tr7, r1, r1\n\tadd\tstack-[24], r0, r8\n\tadd\t36, r8, r2\n\tst.1\tr2, r1\n\tadd\tstack-[23], r0, r2\n\tst.1.inc\tr7, r2, r1\n\tadd\tr2, r0, r7\n\tadd\tstack-[22], r0, r2\n\tptr.add\tstack[@ptr_calldata], r2, r2\n\tshr.s!\t5, r7, r3\n\tjump.eq\t@.BB2_696\n\tadd\tr0, r0, r4\n.BB2_309:\n\tshl.s\t5, r4, r5\n\tadd\tr1, r5, r6\n\tptr.add\tr2, r5, r5\n\tld\tr5, r5\n\tst.1\tr6, r5\n\tadd\t1, r4, r4\n\tsub!\tr4, r3, r5\n\tjump.lt\t@.BB2_309\n.BB2_696:\n\tand!\t31, r7, r4\n\tjump.eq\t@.BB2_311\n\tshl.s\t5, r3, r3\n\tptr.add\tr2, r3, r2\n\tadd\tr1, r3, r3\n\tshl.s\t3, r4, r4\n\tld.1\tr3, r5\n\tshl\tr5, r4, r5\n\tshr\tr5, r4, r5\n\tld\tr2, r2\n\tsub\t256, r4, r4\n\tshr\tr2, r4, r2\n\tshl\tr2, r4, r2\n\tor\tr2, r5, r2\n\tst.1\tr3, r2\n.BB2_311:\n\tadd\tr1, r7, r2\n\tst.1\tr2, r0\n\tcontext.gas_left\tr6\n\tadd\tstack-[28], r0, r2\n\tsub.s!\t4, r2, r3\n\tjump.eq\t@.BB2_313\n\tadd\t31, r7, r3\n\tsub.s\t32, r0, r4\n\tand\tr3, r4, r3\n\tsub\tr3, r8, r3\n\tadd\tr3, r1, r1\n\tadd\t@CPI2_31[0], r0, r3\n\tsub.s!\t@CPI2_31[0], r8, r4\n\tadd\tr3, r0, r4\n\tadd.lt\tr8, r0, r4\n\tshl.s\t64, r4, r4\n\tsub.s!\t@CPI2_31[0], r1, r5\n\tadd.ge\tr3, r0, r1\n\tshl.s\t96, r1, r1\n\tor\tr1, r4, r1\n\tsub.s!\t@CPI2_31[0], r6, r4\n\tadd.lt\tr6, r0, r3\n\tshl.s\t192, r3, r3\n\tor\tr3, r1, r1\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tstack-[24], r0, r8\n\tadd\tstack-[28], r0, r4\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI2_31[0], r3, stack[@returndatasize]\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB2_315\n.BB2_313:\n\tsub.s!\t@CPI2_34[0], r8, r1\n\tjump.gt\t@.BB2_44\n\tst.1\t64, r8\n\tadd\tstack[@calldatasize], r0, r1\n\tptr.add\tstack[@ptr_calldata], r0, r2\n.BB2_273:\n\tadd\tstack-[26], r0, r3\n\tadd\tstack-[32], r0, r4\n\tadd\tr4, r3, r3\n\tadd\tr3, r0, stack-[26]\n\tsub!\tr3, r4, r3\n\tadd\t0, r0, r3\n\tadd.lt\t1, r0, r3\n\tand!\t1, r3, r3\n\tjump.ne\t@.BB2_38\n\tadd\tstack-[25], r0, r5\n\tadd\t1, r5, r5\n\tadd\tstack-[20], r0, r3\n\tsub!\tr5, r3, r3\n\tjump.lt\t@.BB2_251\n\tadd\tstack-[26], r0, r1\n\tsub.s!\t@CPI2_34[0], r1, r1\n\tjump.gt\t@.BB2_44\n\tjump\t@.BB2_260\n.BB2_43:\n\tsub.s!\t@CPI2_118[0], r5, r2\n\tjump.ge\t@.BB2_44\n\tadd\t160, r5, r2\n\tst.1\t64, r2\n\tadd\t96, r5, r2\n\tadd\tr2, r0, stack-[29]\n\tst.1\tr2, r4\n\tadd\t64, r5, r2\n\tadd\tr3, r0, stack-[31]\n\tadd\tr2, r0, stack-[27]\n\tst.1\tr2, r3\n\tadd\t32, r5, r3\n\tadd\t1, r0, r2\n\tadd\tr3, r0, stack-[26]\n\tst.1\tr3, r2\n\tand\t@CPI2_30[0], r1, r1\n\tst.1\tr5, r1\n\tadd\tr5, r0, stack-[30]\n\tadd\t128, r5, r1\n\tadd\tr1, r0, stack-[28]\n\tst.1\tr1, r0\n\tadd\tstack-[33], r0, r1\n\tst.1\t0, r1\n\tst.1\t32, r0\n\tadd\t@CPI2_31[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI2_31[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI2_45[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB2_30\n\tadd\tstack-[30], r0, r2\n\tld.1\tr2, r2\n\tand\t@CPI2_30[0], r2, r2\n\tld\tr1, r1\n\tsload\tr1, r3\n\tand\t@CPI2_88[0], r3, r3\n\tor\tr3, r2, r2\n\tsstore\tr1, r2\n\tadd\tstack-[26], r0, r2\n\tld.1\tr2, r2\n\tadd\t@CPI2_117[0], r0, r3\n\tsub.s!\t0, r2, r2\n\tadd\tr3, r0, r2\n\tadd.eq\t0, r0, r2\n\tsload\tr1, r3\n\tand\t@CPI2_64[0], r3, r4\n\tor\tr4, r2, r4\n\tsstore\tr1, r4\n\tand\t@CPI2_119[0], r3, r3\n\tor\tr3, r2, r2\n\tadd\tstack-[27], r0, r3\n\tld.1\tr3, r3\n\tshl.s\t120, r3, r3\n\tand\t@CPI2_120[0], r3, r3\n\tor\tr2, r3, r2\n\tsstore\tr1, r2\n\tadd\t1, r1, r1\n\tadd\tstack-[29], r0, r2\n\tld.1\tr2, r2\n\tand\t@CPI2_31[0], r2, r2\n\tsload\tr1, r3\n\tand\t@CPI2_54[0], r3, r3\n\tor\tr3, r2, r2\n\tsstore\tr1, r2\n\tsload\tr1, r2\n\tand\t@CPI2_55[0], r2, r2\n\tadd\tstack-[28], r0, r3\n\tld.1\tr3, r3\n\tshl.s\t32, r3, r3\n\tand\t@CPI2_63[0], r3, r3\n\tor\tr2, r3, r2\n\tsstore\tr1, r2\n\tld.1\t64, r1\n\tadd\t32, r1, r2\n\tadd\tstack-[34], r0, r3\n\tst.1\tr2, r3\n\tadd\tstack-[31], r0, r2\n\tst.1\tr1, r2\n\tadd\t@CPI2_31[0], r0, r2\n\tcontext.gas_left\tr3\n\tsub.s!\t@CPI2_31[0], r3, r4\n\tadd.ge\tr2, r0, r3\n\tsub.s!\t@CPI2_31[0], r1, r4\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r3, r2\n\tor\tr2, r1, r1\n\tor\t@CPI2_45[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t2, r0, r3\n\tadd\t@CPI2_121[0], r0, r4\n\tadd\tstack-[32], r0, r5\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB2_30\n\tjump\t@.BB2_47\n.BB2_94:\n\tcontext.get_context_u128\tr1\n\tcontext.get_context_u128\tr2\n\tadd\tr2, r0, stack-[9]\n\tcontext.get_context_u128\tr2\n\tadd\tr2, r0, stack-[8]\n\tadd\tstack-[28], r0, r2\n\tsub.s!\t0, r2, r2\n\tadd\tr6, r0, stack-[31]\n\tjump.ne\t@.BB2_95\n.BB2_211:\n\tadd\t@CPI2_31[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI2_31[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI2_58[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t1, r0, r3\n\tadd\t@CPI2_80[0], r0, r4\n\tadd\tr3, r0, stack-[29]\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB2_30\n\tcontext.get_context_u128\tr4\n\tcontext.get_context_u128\tr1\n\tadd\tstack-[28], r0, r3\n\tsub.s!\t0, r3, r3\n\tadd\tr0, r0, r2\n\tjump.ne\t@.BB2_213\n.BB2_223:\n\tadd\tstack-[5], r0, r1\n\tnear_call\tr0, @fun_compensate, @DEFAULT_UNWIND\n\tadd\tstack-[4], r0, r1\n\tadd\tstack-[29], r0, r2\n\tsstore\tr1, r2\n\tadd\tr0, r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB2_95:\n\tsub.s!\t3, r1, r1\n\tjump.ge\t@.BB2_96\n\tld.1\t64, r1\n\tadd\t68, r1, r2\n\tadd\t@CPI2_111[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t15, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI2_42[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI2_31[0], r0, r2\n\tsub.s!\t@CPI2_31[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI2_60[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB2_458:\n\tadd\tstack-[34], r0, r1\n\tsub.s!\t20, r1, r1\n\tjump.lt\t@.BB2_461\n\tadd\tstack-[33], r0, r1\n\tptr.add\tstack[@ptr_calldata], r1, r1\n\tld\tr1, r1\n\tadd\t@CPI2_37[0], r0, r2\n\tst.2\t0, r2\n\tshr.s\t96, r1, r1\n\tst.2\t4, r1\n\tadd\t@CPI2_31[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI2_31[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI2_38[0], r1, r1\n\tadd\t32770, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB2_30\n\tld\tr1, r1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB2_461\n\tld.1\t64, r2\n\tadd\tr2, r0, stack-[34]\n\tadd\t@CPI2_42[0], r0, r1\n\tst.1\tr2, r1\n\tadd\t4, r2, r1\n\tnear_call\tr0, @abi_encode_stringliteral_d82b, @DEFAULT_UNWIND\n\tadd\tstack-[34], r0, r4\n\tsub\tr1, r4, r1\n\tadd\t@CPI2_31[0], r0, r2\n\tsub.s!\t@CPI2_31[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tsub.s!\t@CPI2_31[0], r4, r3\n\tadd.lt\tr4, r0, r2\n\tshl.s\t64, r2, r2\n\tshl.s\t96, r1, r1\n\tor\tr1, r2, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB2_461:\n\tld.1\t64, r1\n\tadd\t@CPI2_42[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tst.1\tr2, r0\n\tadd\t@CPI2_31[0], r0, r2\n\tsub.s!\t@CPI2_31[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI2_74[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB2_96:\n\tsub.s\t387, r0, r1\n\tadd\tstack-[6], r0, r2\n\tsub\tr1, r2, r1\n\tadd\tr1, r0, stack-[7]\n\tadd\tr0, r0, r2\n\tadd\tstack-[33], r0, r3\n\tadd\tstack-[31], r0, r4\n.BB2_97:\n\tld.1\tr4, r1\n\tsub!\tr1, r2, r1\n\tjump.le\t@.BB2_99\n\tadd\tr2, r0, stack-[29]\n\tshl.s\t5, r2, r2\n\tadd\tr2, r3, r1\n\tptr.add\tstack[@ptr_calldata], r1, r1\n\tld\tr1, r1\n\tadd\tstack-[7], r0, r3\n\tadd\tstack[@calldatasize], r3, r3\n\tadd\t@CPI2_27[0], r0, r4\n\tsub!\tr1, r3, r5\n\tadd\t0, r0, r5\n\tadd.ge\tr4, r0, r5\n\tand\t@CPI2_27[0], r3, r3\n\tand\t@CPI2_27[0], r1, r6\n\tsub!\tr6, r3, r7\n\tadd.ge\t0, r0, r4\n\txor\tr6, r3, r3\n\tsub.s!\t@CPI2_27[0], r3, r3\n\tadd\tr5, r0, r3\n\tadd.eq\tr4, r0, r3\n\tsub.s!\t0, r3, r3\n\tjump.ne\t@.BB2_30\n\tadd\tstack-[27], r0, r3\n\tadd\tr3, r2, r2\n\tld.1\tr2, r3\n\tcontext.get_context_u128\tr2\n\tsub.s!\t7, r2, r2\n\tjump.le\t@.BB2_102\n\tadd\tstack-[33], r0, r2\n\tadd\tr1, r2, r2\n\tcontext.gas_left\tr1\n\tadd\tr1, r0, stack-[10]\n\tadd\tr3, r0, stack-[30]\n\tld.1.inc\tr3, r1, r3\n\tadd\tr3, r0, stack-[17]\n\tadd\tr1, r0, stack-[32]\n\tadd\tr2, r0, stack-[34]\n\tptr.add\tstack[@ptr_calldata], r2, r1\n\tld\tr1, r1\n\tsub.s!\t@CPI2_28[0], r1, r2\n\tjump.gt\t@.BB2_30\n\tadd\tstack-[32], r0, r2\n\tst.1.inc\tr2, r1, r4\n\tadd\tstack-[34], r0, r3\n\tadd\t32, r3, r1\n\tadd\tr1, r0, stack-[19]\n\tptr.add\tstack[@ptr_calldata], r1, r1\n\tld\tr1, r1\n\tadd\tr4, r0, stack-[11]\n\tst.1\tr4, r1\n\tadd\t128, r3, r1\n\tadd\tr1, r0, stack-[18]\n\tptr.add\tstack[@ptr_calldata], r1, r1\n\tld\tr1, r1\n\tadd\t64, r2, r4\n\tadd\tr4, r0, stack-[16]\n\tst.1\tr4, r1\n\tadd\t160, r3, r1\n\tadd\tr1, r0, stack-[23]\n\tptr.add\tstack[@ptr_calldata], r1, r1\n\tld\tr1, r1\n\tadd\t96, r2, r4\n\tadd\tr4, r0, stack-[15]\n\tst.1\tr4, r1\n\tadd\t192, r3, r1\n\tadd\tr1, r0, stack-[22]\n\tptr.add\tstack[@ptr_calldata], r1, r1\n\tld\tr1, r1\n\tadd\t128, r2, r4\n\tadd\tr4, r0, stack-[14]\n\tst.1\tr4, r1\n\tadd\t224, r3, r1\n\tadd\tr1, r0, stack-[25]\n\tptr.add\tstack[@ptr_calldata], r1, r1\n\tld\tr1, r1\n\tadd\t192, r2, r4\n\tadd\tr4, r0, stack-[13]\n\tst.1\tr4, r1\n\tadd\t224, r2, r1\n\tadd\t256, r3, r2\n\tadd\tr2, r0, stack-[24]\n\tptr.add\tstack[@ptr_calldata], r2, r2\n\tld\tr2, r2\n\tst.1\tr1, r2\n\tsub.s\t31, r0, r1\n\tsub\tr1, r3, r9\n\tadd\t288, r3, r2\n\tptr.add\tstack[@ptr_calldata], r0, r1\n\tadd\tr2, r0, stack-[20]\n\tptr.add\tr1, r2, r2\n\tld\tr2, r2\n\tadd\t@CPI2_27[0], r0, r4\n\tadd\tstack[@calldatasize], r0, r3\n\tadd\tr3, r9, r5\n\tsub!\tr2, r5, r6\n\tadd\t0, r0, r6\n\tadd.ge\tr4, r0, r6\n\tand\t@CPI2_27[0], r5, r5\n\tand\t@CPI2_27[0], r2, r7\n\tsub!\tr7, r5, r8\n\tadd.ge\t0, r0, r4\n\txor\tr7, r5, r5\n\tsub.s!\t@CPI2_27[0], r5, r5\n\tadd.ne\tr6, r0, r4\n\tsub.s!\t0, r4, r4\n\tjump.ne\t@.BB2_30\n\tadd\tstack-[34], r0, r4\n\tadd\tr2, r4, r4\n\tptr.add\tr1, r4, r2\n\tld\tr2, r2\n\tsub.s!\t@CPI2_34[0], r2, r5\n\tjump.gt\t@.BB2_30\n\tsub\tr3, r2, r5\n\tadd\t32, r4, r3\n\tadd\t@CPI2_27[0], r0, r4\n\tsub!\tr3, r5, r6\n\tadd\t0, r0, r6\n\tadd.gt\tr4, r0, r6\n\tand\t@CPI2_27[0], r5, r5\n\tand\t@CPI2_27[0], r3, r7\n\tsub!\tr7, r5, r8\n\tadd.ge\t0, r0, r4\n\txor\tr7, r5, r5\n\tsub.s!\t@CPI2_27[0], r5, r5\n\tadd.ne\tr6, r0, r4\n\tsub.s!\t0, r4, r4\n\tjump.ne\t@.BB2_30\n\tsub.s!\t0, r2, r4\n\tadd\tr0, r0, r4\n\tjump.eq\t@.BB2_111\n\tsub.s!\t19, r2, r2\n\tjump.le\t@.BB2_109\n\tptr.add\tr1, r3, r1\n\tld\tr1, r1\n\tshr.s\t96, r1, r4\n.BB2_111:\n\tadd\tstack-[32], r0, r1\n\tadd\t160, r1, r1\n\tadd\tr1, r0, stack-[21]\n\tst.1\tr1, r4\n\tcontext.get_context_u128\tr1\n\tsub.s!\t8, r1, r1\n\tjump.le\t@.BB2_112\n\tadd\tstack[@calldatasize], r0, r3\n\tadd\tr3, r9, r4\n\tadd\tstack-[34], r0, r1\n\tadd\t64, r1, r1\n\tptr.add\tstack[@ptr_calldata], r0, r2\n\tptr.add\tr2, r1, r1\n\tld\tr1, r1\n\tadd\t@CPI2_27[0], r0, r5\n\tsub!\tr1, r4, r6\n\tadd\t0, r0, r6\n\tadd.ge\tr5, r0, r6\n\tand\t@CPI2_27[0], r4, r4\n\tand\t@CPI2_27[0], r1, r7\n\tsub!\tr7, r4, r8\n\tadd.ge\t0, r0, r5\n\txor\tr7, r4, r4\n\tsub.s!\t@CPI2_27[0], r4, r4\n\tadd\tr6, r0, r4\n\tadd.eq\tr5, r0, r4\n\tsub.s!\t0, r4, r4\n\tjump.ne\t@.BB2_30\n\tadd\tstack-[34], r0, r4\n\tadd\tr1, r4, r4\n\tptr.add\tr2, r4, r1\n\tld\tr1, r1\n\tsub.s!\t@CPI2_34[0], r1, r5\n\tjump.gt\t@.BB2_30\n\tsub\tr3, r1, r5\n\tadd\t32, r4, r3\n\tadd\t@CPI2_27[0], r0, r4\n\tsub!\tr3, r5, r6\n\tadd\t0, r0, r6\n\tadd.gt\tr4, r0, r6\n\tand\t@CPI2_27[0], r5, r5\n\tand\t@CPI2_27[0], r3, r7\n\tsub!\tr7, r5, r8\n\tadd.ge\t0, r0, r4\n\txor\tr7, r5, r5\n\tsub.s!\t@CPI2_27[0], r5, r5\n\tadd.ne\tr6, r0, r4\n\tsub.s!\t0, r4, r4\n\tjump.ne\t@.BB2_30\n\tptr.add\tr2, r3, r3\n\tld.1\t64, r2\n\tshr.s!\t5, r1, r4\n\tjump.eq\t@.BB2_703\n\tadd\tr0, r0, r5\n.BB2_118:\n\tshl.s\t5, r5, r6\n\tadd\tr2, r6, r7\n\tptr.add\tr3, r6, r6\n\tld\tr6, r6\n\tst.1\tr7, r6\n\tadd\t1, r5, r5\n\tsub!\tr5, r4, r6\n\tjump.lt\t@.BB2_118\n.BB2_703:\n\tadd\tr9, r0, stack-[26]\n\tand!\t31, r1, r5\n\tjump.eq\t@.BB2_120\n\tshl.s\t5, r4, r4\n\tptr.add\tr3, r4, r3\n\tadd\tr2, r4, r4\n\tshl.s\t3, r5, r5\n\tld.1\tr4, r6\n\tshl\tr6, r5, r6\n\tshr\tr6, r5, r6\n\tld\tr3, r3\n\tsub\t256, r5, r5\n\tshr\tr3, r5, r3\n\tshl\tr3, r5, r3\n\tor\tr3, r6, r3\n\tst.1\tr4, r3\n.BB2_120:\n\tadd\t@CPI2_31[0], r0, r3\n\tsub.s!\t@CPI2_31[0], r1, r4\n\tadd.ge\tr3, r0, r1\n\tshl.s\t96, r1, r1\n\tsub.s!\t@CPI2_31[0], r2, r4\n\tadd.ge\tr3, r0, r2\n\tshl.s\t64, r2, r2\n\tor\tr2, r1, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI2_31[0], r2, r4\n\tadd.ge\tr3, r0, r2\n\tshl.s\t192, r2, r2\n\tor\tr2, r1, r1\n\tor\t@CPI2_58[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tadd\tstack-[26], r0, r2\n\tjump.eq\t@.BB2_30\n\tadd\tstack[@calldatasize], r0, r3\n\tadd\tr3, r2, r5\n\tadd\tstack-[34], r0, r2\n\tadd\t96, r2, r4\n\tptr.add\tstack[@ptr_calldata], r0, r2\n\tptr.add\tr2, r4, r4\n\tld\tr4, r4\n\tadd\t@CPI2_27[0], r0, r6\n\tsub!\tr4, r5, r7\n\tadd\t0, r0, r7\n\tadd.ge\tr6, r0, r7\n\tand\t@CPI2_27[0], r5, r5\n\tand\t@CPI2_27[0], r4, r8\n\tsub!\tr8, r5, r9\n\tadd.ge\t0, r0, r6\n\txor\tr8, r5, r5\n\tsub.s!\t@CPI2_27[0], r5, r5\n\tadd\tr7, r0, r5\n\tadd.eq\tr6, r0, r5\n\tld\tr1, r1\n\tadd\tr1, r0, stack-[12]\n\tsub.s!\t0, r5, r1\n\tjump.ne\t@.BB2_30\n\tadd\tstack-[34], r0, r1\n\tadd\tr4, r1, r4\n\tptr.add\tr2, r4, r1\n\tld\tr1, r1\n\tsub.s!\t@CPI2_34[0], r1, r5\n\tjump.gt\t@.BB2_30\n\tsub\tr3, r1, r5\n\tadd\t32, r4, r3\n\tadd\t@CPI2_27[0], r0, r4\n\tsub!\tr3, r5, r6\n\tadd\t0, r0, r6\n\tadd.gt\tr4, r0, r6\n\tand\t@CPI2_27[0], r5, r5\n\tand\t@CPI2_27[0], r3, r7\n\tsub!\tr7, r5, r8\n\tadd.ge\t0, r0, r4\n\txor\tr7, r5, r5\n\tsub.s!\t@CPI2_27[0], r5, r5\n\tadd.ne\tr6, r0, r4\n\tsub.s!\t0, r4, r4\n\tjump.ne\t@.BB2_30\n\tptr.add\tr2, r3, r3\n\tld.1\t64, r2\n\tshr.s!\t5, r1, r4\n\tjump.eq\t@.BB2_702\n\tadd\tr0, r0, r5\n.BB2_126:\n\tshl.s\t5, r5, r6\n\tadd\tr2, r6, r7\n\tptr.add\tr3, r6, r6\n\tld\tr6, r6\n\tst.1\tr7, r6\n\tadd\t1, r5, r5\n\tsub!\tr5, r4, r6\n\tjump.lt\t@.BB2_126\n.BB2_702:\n\tand!\t31, r1, r5\n\tjump.eq\t@.BB2_128\n\tshl.s\t5, r4, r4\n\tptr.add\tr3, r4, r3\n\tadd\tr2, r4, r4\n\tshl.s\t3, r5, r5\n\tld.1\tr4, r6\n\tshl\tr6, r5, r6\n\tshr\tr6, r5, r6\n\tld\tr3, r3\n\tsub\t256, r5, r5\n\tshr\tr3, r5, r3\n\tshl\tr3, r5, r3\n\tor\tr3, r6, r3\n\tst.1\tr4, r3\n.BB2_128:\n\tadd\t@CPI2_31[0], r0, r3\n\tsub.s!\t@CPI2_31[0], r1, r4\n\tadd.ge\tr3, r0, r1\n\tshl.s\t96, r1, r1\n\tsub.s!\t@CPI2_31[0], r2, r4\n\tadd.ge\tr3, r0, r2\n\tshl.s\t64, r2, r2\n\tor\tr2, r1, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI2_31[0], r2, r4\n\tadd.ge\tr3, r0, r2\n\tshl.s\t192, r2, r2\n\tor\tr2, r1, r1\n\tor\t@CPI2_58[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tadd\tstack-[26], r0, r2\n\tjump.eq\t@.BB2_30\n\tadd\tstack[@calldatasize], r0, r3\n\tadd\tr3, r2, r5\n\tptr.add\tstack[@ptr_calldata], r0, r2\n\tadd\tstack-[20], r0, r4\n\tptr.add\tr2, r4, r4\n\tld\tr4, r4\n\tadd\t@CPI2_27[0], r0, r6\n\tsub!\tr4, r5, r7\n\tadd\t0, r0, r7\n\tadd.ge\tr6, r0, r7\n\tand\t@CPI2_27[0], r5, r5\n\tand\t@CPI2_27[0], r4, r8\n\tsub!\tr8, r5, r9\n\tadd.ge\t0, r0, r6\n\txor\tr8, r5, r5\n\tsub.s!\t@CPI2_27[0], r5, r5\n\tadd\tr7, r0, r5\n\tadd.eq\tr6, r0, r5\n\tld\tr1, r9\n\tsub.s!\t0, r5, r1\n\tjump.ne\t@.BB2_30\n\tadd\tstack-[34], r0, r1\n\tadd\tr4, r1, r4\n\tptr.add\tr2, r4, r1\n\tld\tr1, r1\n\tsub.s!\t@CPI2_34[0], r1, r5\n\tjump.gt\t@.BB2_30\n\tsub\tr3, r1, r5\n\tadd\t32, r4, r3\n\tadd\t@CPI2_27[0], r0, r4\n\tsub!\tr3, r5, r6\n\tadd\t0, r0, r6\n\tadd.gt\tr4, r0, r6\n\tand\t@CPI2_27[0], r5, r5\n\tand\t@CPI2_27[0], r3, r7\n\tsub!\tr7, r5, r8\n\tadd.ge\t0, r0, r4\n\txor\tr7, r5, r5\n\tsub.s!\t@CPI2_27[0], r5, r5\n\tadd.ne\tr6, r0, r4\n\tsub.s!\t0, r4, r4\n\tjump.ne\t@.BB2_30\n\tptr.add\tr2, r3, r3\n\tld.1\t64, r2\n\tshr.s!\t5, r1, r4\n\tjump.eq\t@.BB2_701\n\tadd\tr0, r0, r5\n.BB2_134:\n\tshl.s\t5, r5, r6\n\tadd\tr2, r6, r7\n\tptr.add\tr3, r6, r6\n\tld\tr6, r6\n\tst.1\tr7, r6\n\tadd\t1, r5, r5\n\tsub!\tr5, r4, r6\n\tjump.lt\t@.BB2_134\n.BB2_701:\n\tadd\tr9, r0, stack-[26]\n\tand!\t31, r1, r5\n\tjump.eq\t@.BB2_136\n\tshl.s\t5, r4, r4\n\tptr.add\tr3, r4, r3\n\tadd\tr2, r4, r4\n\tshl.s\t3, r5, r5\n\tld.1\tr4, r6\n\tshl\tr6, r5, r6\n\tshr\tr6, r5, r6\n\tld\tr3, r3\n\tsub\t256, r5, r5\n\tshr\tr3, r5, r3\n\tshl\tr3, r5, r3\n\tor\tr3, r6, r3\n\tst.1\tr4, r3\n.BB2_136:\n\tadd\t@CPI2_31[0], r0, r3\n\tsub.s!\t@CPI2_31[0], r1, r4\n\tadd.ge\tr3, r0, r1\n\tshl.s\t96, r1, r1\n\tsub.s!\t@CPI2_31[0], r2, r4\n\tadd.ge\tr3, r0, r2\n\tshl.s\t64, r2, r2\n\tor\tr2, r1, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI2_31[0], r2, r4\n\tadd.ge\tr3, r0, r2\n\tshl.s\t192, r2, r2\n\tor\tr2, r1, r1\n\tor\t@CPI2_58[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tadd\tstack-[26], r0, r11\n\tjump.eq\t@.BB2_30\n\tptr.add\tstack[@ptr_calldata], r0, r2\n\tadd\tstack-[24], r0, r3\n\tptr.add\tr2, r3, r3\n\tadd\tstack-[25], r0, r4\n\tptr.add\tr2, r4, r4\n\tadd\tstack-[22], r0, r5\n\tptr.add\tr2, r5, r5\n\tadd\tstack-[23], r0, r6\n\tptr.add\tr2, r6, r6\n\tadd\tstack-[18], r0, r7\n\tptr.add\tr2, r7, r7\n\tadd\tstack-[19], r0, r8\n\tptr.add\tr2, r8, r8\n\tadd\tstack-[34], r0, r9\n\tptr.add\tr2, r9, r2\n\tld\tr2, r9\n\tld\tr8, r2\n\tld\tr7, r7\n\tld\tr6, r6\n\tld\tr5, r5\n\tld\tr4, r4\n\tld\tr3, r3\n\tld\tr1, r8\n\tld.1\t64, r1\n\tadd\t320, r1, r10\n\tst.1\tr10, r8\n\tadd\t288, r1, r8\n\tst.1\tr8, r3\n\tadd\t256, r1, r3\n\tst.1\tr3, r4\n\tadd\t224, r1, r3\n\tst.1\tr3, r5\n\tadd\t192, r1, r3\n\tst.1\tr3, r6\n\tadd\t160, r1, r3\n\tst.1\tr3, r7\n\tadd\t128, r1, r3\n\tst.1\tr3, r11\n\tadd\t96, r1, r3\n\tadd\tstack-[12], r0, r4\n\tst.1\tr3, r4\n\tadd\t64, r1, r3\n\tst.1\tr3, r2\n\tadd\t320, r0, r2\n\tst.1.inc\tr1, r2, r2\n\tand\t@CPI2_28[0], r9, r3\n\tst.1\tr2, r3\n\tsub.s!\t@CPI2_81[0], r1, r3\n\tjump.gt\t@.BB2_44\n\tadd\t352, r1, r3\n\tst.1\t64, r3\n\tadd\t@CPI2_31[0], r0, r3\n\tsub.s!\t@CPI2_31[0], r2, r4\n\tadd.ge\tr3, r0, r2\n\tshl.s\t64, r2, r2\n\tld.1\tr1, r1\n\tsub.s!\t@CPI2_31[0], r1, r4\n\tadd.ge\tr3, r0, r1\n\tshl.s\t96, r1, r1\n\tor\tr1, r2, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI2_31[0], r2, r4\n\tadd.ge\tr3, r0, r2\n\tshl.s\t192, r2, r2\n\tor\tr2, r1, r1\n\tor\t@CPI2_58[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB2_30\n\tld\tr1, r1\n\tadd\tr1, r0, stack-[20]\n\tld.1\t64, r1\n\tadd\tr1, r0, stack-[26]\n\tadd\t@CPI2_82[0], r0, r1\n\tst.2\t0, r1\n\tadd\t@CPI2_31[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI2_31[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI2_51[0], r1, r1\n\tadd\t32779, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB2_30\n\tadd\tstack-[26], r0, r4\n\tadd\t32, r4, r2\n\tld\tr1, r1\n\tadd\tstack-[20], r0, r3\n\tst.1\tr2, r3\n\tadd\t96, r4, r3\n\tst.1\tr3, r1\n\tcontext.this\tr1\n\tand\t@CPI2_28[0], r1, r1\n\tadd\t64, r4, r3\n\tst.1\tr3, r1\n\tadd\t96, r0, r1\n\tadd\tr1, r0, stack-[20]\n\tst.1\tr4, r1\n\tsub.s!\t@CPI2_83[0], r4, r1\n\tjump.gt\t@.BB2_44\n\tadd\t128, r4, r1\n\tst.1\t64, r1\n\tadd\t@CPI2_31[0], r0, r1\n\tsub.s!\t@CPI2_31[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t64, r2, r2\n\tld.1\tr4, r3\n\tsub.s!\t@CPI2_31[0], r3, r4\n\tadd.ge\tr1, r0, r3\n\tshl.s\t96, r3, r3\n\tor\tr3, r2, r2\n\tcontext.gas_left\tr3\n\tsub.s!\t@CPI2_31[0], r3, r4\n\tadd.lt\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\tr1, r2, r1\n\tor\t@CPI2_58[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB2_30\n\tld\tr1, r1\n\tadd\tstack-[17], r0, r2\n\tst.1\tr2, r1\n\tcontext.get_context_u128\tr1\n\tsub.s!\t9, r1, r1\n\tjump.le\t@.BB2_143\n\tadd\tstack-[16], r0, r1\n\tld.1\tr1, r1\n\tadd\tstack-[14], r0, r2\n\tld.1\tr2, r2\n\tadd\tstack-[15], r0, r3\n\tld.1\tr3, r3\n\tor\tr3, r2, r4\n\tor\tr4, r1, r4\n\tptr.add\tstack[@ptr_calldata], r0, r5\n\tadd\tstack-[24], r0, r6\n\tptr.add\tr5, r6, r6\n\tld\tr6, r6\n\tor\tr4, r6, r4\n\tadd\tstack-[25], r0, r6\n\tptr.add\tr5, r6, r5\n\tld\tr5, r5\n\tor\tr4, r5, r4\n\tsub.s!\t@CPI2_92[0], r4, r4\n\tjump.ge\t@.BB2_145\n\tadd\tstack-[21], r0, r4\n\tld.1\tr4, r4\n\tand!\t@CPI2_28[0], r4, r4\n\tadd\t3, r0, r5\n\tadd.eq\t1, r0, r5\n\tadd\tstack-[13], r0, r4\n\tld.1\tr4, r4\n\tcontext.get_context_u128\tr6\n\tsub.s!\t10, r6, r6\n\tjump.le\t@.BB2_147\n\tadd\tr1, r2, r1\n\tmul\tr5, r3, r2, r3\n\tadd\tr1, r2, r1\n\tmul\tr1, r4, r4, r1\n\tadd\tstack-[29], r0, r1\n\tadd\tstack-[34], r0, r2\n\tadd\tstack-[30], r0, r3\n\tadd\tr4, r0, stack-[25]\n\tnear_call\tr0, @fun_validateAccountPrepayment, @DEFAULT_UNWIND\n\tadd\tr1, r0, stack-[19]\n\tadd\tr2, r0, stack-[24]\n\tcontext.get_context_u128\tr1\n\tsub.s!\t11, r1, r1\n\tjump.le\t@.BB2_149\n\tadd\tstack-[11], r0, r1\n\tld.1\tr1, r1\n\tadd\tr1, r0, stack-[26]\n\tadd\tstack-[32], r0, r1\n\tld.1\tr1, r1\n\tand\t@CPI2_28[0], r1, r1\n\tst.1\t0, r1\n\tadd\t1, r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI2_31[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI2_31[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI2_45[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB2_30\n\tld\tr1, r1\n\tadd\tstack-[26], r0, r2\n\tshr.s\t64, r2, r2\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tadd\t@CPI2_31[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI2_31[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI2_45[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB2_30\n\tadd\tstack-[26], r0, r4\n\tld\tr1, r2\n\tsload\tr2, r1\n\tsub.s\t1, r0, r3\n\tsub!\tr1, r3, r3\n\tjump.eq\t@.BB2_38\n\tadd\t1, r1, r3\n\tsstore\tr2, r3\n\tand\t@CPI2_34[0], r4, r2\n\tsub!\tr1, r2, r1\n\tjump.ne\t@.BB2_154\n\tadd\t@CPI2_50[0], r0, r1\n\tst.2\t0, r1\n\tadd\t@CPI2_31[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI2_31[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI2_51[0], r1, r1\n\tadd\t32779, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB2_30\n\tld\tr1, r1\n\tst.1\t0, r1\n\tadd\tstack-[21], r0, r1\n\tld.1\tr1, r1\n\tand!\t@CPI2_28[0], r1, r1\n\tadd\tr0, r0, r6\n\tadd\tstack-[20], r0, r1\n\tjump.eq\t@.BB2_158\n\tadd\tstack-[29], r0, r1\n\tadd\tstack-[34], r0, r2\n\tadd\tstack-[30], r0, r3\n\tadd\tstack-[25], r0, r4\n\tadd\tstack-[19], r0, r5\n\tnear_call\tr0, @fun_validatePaymasterPrepayment, @DEFAULT_UNWIND\n\tadd\tr2, r0, r6\n.BB2_158:\n\tcontext.get_context_u128\tr2\n\tsub.s!\t12, r2, r2\n\tjump.le\t@.BB2_159\n\tcontext.gas_left\tr3\n\tcontext.get_context_u128\tr2\n\tsub.s!\t13, r2, r2\n\tadd\tstack-[10], r0, r5\n\tjump.le\t@.BB2_161\n\tsub\tr5, r3, r3\n\tadd\tstack-[23], r0, r2\n\tptr.add\tstack[@ptr_calldata], r2, r2\n\tld\tr2, r2\n\tsub!\tr2, r3, r2\n\tadd\tstack-[31], r0, r4\n\tadd\tstack-[30], r0, r3\n\tjump.lt\t@.BB2_163\n\tcontext.get_context_u128\tr2\n\tsub.s!\t14, r2, r2\n\tjump.le\t@.BB2_165\n\tadd\t96, r3, r2\n\tst.1\tr2, r1\n\tadd\t64, r3, r1\n\tadd\tstack-[25], r0, r2\n\tst.1\tr1, r2\n\tcontext.get_context_u128\tr1\n\tsub.s!\t15, r1, r1\n\tjump.le\t@.BB2_167\n\tcontext.gas_left\tr1\n\tsub\tr5, r1, r1\n\tadd\tstack-[22], r0, r2\n\tptr.add\tstack[@ptr_calldata], r2, r2\n\tld\tr2, r2\n\tadd\tr1, r2, r1\n\tadd\t128, r3, r2\n\tst.1\tr2, r1\n\tadd\tstack-[9], r0, r1\n\tsub.s!\t16, r1, r1\n\tjump.le\t@.BB2_169\n\tcontext.get_context_u128\tr1\n\tsub.s!\t17, r1, r1\n\tadd\tstack-[24], r0, r3\n\tjump.le\t@.BB2_171\n\tsub.s!\t0, r3, r1\n\tjump.eq\t@.BB2_180\n\tld.1\t64, r1\n\tsub.s!\t@CPI2_46[0], r1, r2\n\tjump.gt\t@.BB2_44\n\tadd\t96, r1, r2\n\tst.1\t64, r2\n\tadd\t64, r1, r2\n\tst.1\tr2, r0\n\tadd\t32, r1, r2\n\tst.1\tr2, r0\n\tst.1\tr1, r0\n\tld.1\t64, r4\n\tsub.s!\t@CPI2_46[0], r4, r1\n\tjump.gt\t@.BB2_44\n\tadd\tr6, r0, stack-[32]\n\tadd\t96, r4, r1\n\tst.1\t64, r1\n\tshr.s\t208, r3, r1\n\tadd\t32, r4, r2\n\tadd\tr2, r0, stack-[26]\n\tst.1\tr2, r1\n\tand\t@CPI2_28[0], r3, r1\n\tst.1\tr4, r1\n\tshr.s\t160, r3, r1\n\tand!\t@CPI2_32[0], r1, r1\n\tadd\t@CPI2_32[0], r0, r2\n\tadd.ne\tr1, r0, r2\n\tadd\tr4, r0, stack-[30]\n\tadd\t64, r4, r1\n\tadd\tr2, r0, stack-[34]\n\tst.1\tr1, r2\n\tadd\t@CPI2_53[0], r0, r1\n\tst.2\t0, r1\n\tadd\t@CPI2_31[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI2_31[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI2_51[0], r1, r1\n\tadd\t32779, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB2_30\n\tld\tr1, r1\n\tadd\tstack-[34], r0, r2\n\tsub!\tr1, r2, r1\n\tadd\tr0, r0, r1\n\tjump.gt\t@.BB2_179\n\tadd\tstack-[26], r0, r1\n\tld.1\tr1, r1\n\tadd\tr1, r0, stack-[34]\n\tadd\t@CPI2_53[0], r0, r1\n\tst.2\t0, r1\n\tadd\t@CPI2_31[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI2_31[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI2_51[0], r1, r1\n\tadd\t32779, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB2_30\n\tadd\tstack-[34], r0, r2\n\tand\t@CPI2_32[0], r2, r2\n\tld\tr1, r1\n\tsub!\tr1, r2, r1\n\tadd\t0, r0, r1\n\tadd.ge\t1, r0, r1\n.BB2_179:\n\tadd\tstack-[30], r0, r2\n\tld.1\tr2, r2\n\tcontext.get_context_u128\tr3\n\tsub.s!\t19, r3, r3\n\tadd\tstack-[31], r0, r4\n\tadd\tstack-[32], r0, r6\n\tjump.lt\t@.BB2_181\n\tand!\t@CPI2_28[0], r2, r2\n\tjump.ne\t@.BB2_183\n\tcontext.get_context_u128\tr2\n\tsub.s!\t20, r2, r2\n\tjump.lt\t@.BB2_186\n\tand!\t1, r1, r1\n\tjump.ne\t@.BB2_189\n\tjump\t@.BB2_188\n.BB2_180:\n\tcontext.get_context_u128\tr1\n\tsub.s!\t18, r1, r1\n\tjump.le\t@.BB2_181\n\tcontext.get_context_u128\tr1\n\tsub.s!\t19, r1, r1\n\tjump.le\t@.BB2_186\n.BB2_189:\n\tcontext.get_context_u128\tr1\n\tsub.s!\t20, r1, r1\n\tjump.le\t@.BB2_190\n\tsub.s!\t0, r6, r1\n\tjump.eq\t@.BB2_199\n\tld.1\t64, r1\n\tsub.s!\t@CPI2_46[0], r1, r2\n\tjump.gt\t@.BB2_44\n\tadd\t96, r1, r2\n\tst.1\t64, r2\n\tadd\t64, r1, r2\n\tst.1\tr2, r0\n\tadd\t32, r1, r2\n\tst.1\tr2, r0\n\tst.1\tr1, r0\n\tld.1\t64, r3\n\tsub.s!\t@CPI2_46[0], r3, r1\n\tjump.gt\t@.BB2_44\n\tadd\t96, r3, r1\n\tst.1\t64, r1\n\tshr.s\t208, r6, r1\n\tadd\t32, r3, r2\n\tadd\tr2, r0, stack-[30]\n\tst.1\tr2, r1\n\tand\t@CPI2_28[0], r6, r1\n\tst.1\tr3, r1\n\tshr.s\t160, r6, r1\n\tand!\t@CPI2_32[0], r1, r1\n\tadd\t@CPI2_32[0], r0, r2\n\tadd.ne\tr1, r0, r2\n\tadd\tr3, r0, stack-[32]\n\tadd\t64, r3, r1\n\tadd\tr2, r0, stack-[34]\n\tst.1\tr1, r2\n\tadd\t@CPI2_53[0], r0, r1\n\tst.2\t0, r1\n\tadd\t@CPI2_31[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI2_31[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI2_51[0], r1, r1\n\tadd\t32779, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB2_30\n\tld\tr1, r1\n\tadd\tstack-[34], r0, r2\n\tsub!\tr1, r2, r1\n\tadd\tr0, r0, r1\n\tjump.gt\t@.BB2_198\n\tadd\tstack-[30], r0, r1\n\tld.1\tr1, r1\n\tadd\tr1, r0, stack-[34]\n\tadd\t@CPI2_53[0], r0, r1\n\tst.2\t0, r1\n\tadd\t@CPI2_31[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI2_31[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI2_51[0], r1, r1\n\tadd\t32779, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB2_30\n\tadd\tstack-[34], r0, r2\n\tand\t@CPI2_32[0], r2, r2\n\tld\tr1, r1\n\tsub!\tr1, r2, r1\n\tadd\t0, r0, r1\n\tadd.ge\t1, r0, r1\n.BB2_198:\n\tadd\tstack-[32], r0, r2\n\tld.1\tr2, r2\n\tcontext.get_context_u128\tr3\n\tsub.s!\t22, r3, r3\n\tadd\tstack-[31], r0, r4\n\tjump.lt\t@.BB2_200\n\tand!\t@CPI2_28[0], r2, r2\n\tjump.ne\t@.BB2_202\n\tcontext.get_context_u128\tr2\n\tsub.s!\t23, r2, r2\n\tadd\tstack-[33], r0, r3\n\tjump.lt\t@.BB2_205\n\tand!\t1, r1, r1\n\tjump.ne\t@.BB2_208\n\tjump\t@.BB2_207\n.BB2_199:\n\tcontext.get_context_u128\tr1\n\tsub.s!\t21, r1, r1\n\tjump.le\t@.BB2_200\n\tcontext.get_context_u128\tr1\n\tsub.s!\t22, r1, r1\n\tadd\tstack-[33], r0, r3\n\tjump.le\t@.BB2_205\n.BB2_208:\n\tadd\tstack-[8], r0, r1\n\tsub.s!\t23, r1, r1\n\tadd\tstack-[29], r0, r2\n\tjump.le\t@.BB2_209\n\tadd\t1, r2, r2\n\tadd\tstack-[28], r0, r1\n\tsub!\tr2, r1, r1\n\tjump.lt\t@.BB2_97\n\tjump\t@.BB2_211\n.BB2_213:\n\tsub.s!\t25, r4, r2\n\tjump.ge\t@.BB2_214\n\tld.1\t64, r1\n\tadd\t68, r1, r2\n\tadd\t@CPI2_114[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t16, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI2_42[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI2_31[0], r0, r2\n\tsub.s!\t@CPI2_31[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI2_60[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB2_317:\n\tsub.s\t131, r0, r1\n\tadd\tstack-[18], r0, r2\n\tsub\tr1, r2, r1\n\tadd\tr1, r0, stack-[2]\n\tadd\tr0, r0, r10\n\tadd\tr0, r0, r2\n\tjump\t@.BB2_320\n.BB2_318:\n\tadd\tstack-[3], r0, r2\n\tadd\t1, r2, r2\n\tadd\tstack-[20], r0, r1\n\tsub!\tr2, r1, r1\n\tjump.ge\t@.BB2_319\n.BB2_320:\n\tadd\tr2, r0, stack-[3]\n\tshl.s\t5, r2, r1\n\tadd\tstack-[27], r0, r2\n\tadd\tr1, r2, r3\n\tadd\tstack[@calldatasize], r0, r2\n\tadd\tstack-[2], r0, r1\n\tadd\tr2, r1, r4\n\tptr.add\tstack[@ptr_calldata], r0, r1\n\tptr.add\tr1, r3, r3\n\tld\tr3, r3\n\tadd\t@CPI2_27[0], r0, r5\n\tsub!\tr3, r4, r6\n\tadd\t0, r0, r6\n\tadd.ge\tr5, r0, r6\n\tand\t@CPI2_27[0], r4, r4\n\tand\t@CPI2_27[0], r3, r7\n\tsub!\tr7, r4, r8\n\tadd.ge\t0, r0, r5\n\txor\tr7, r4, r4\n\tsub.s!\t@CPI2_27[0], r4, r4\n\tadd\tr6, r0, r4\n\tadd.eq\tr5, r0, r4\n\tsub.s!\t0, r4, r4\n\tjump.ne\t@.BB2_30\n\tadd\tstack-[27], r0, r4\n\tadd\tr3, r4, r3\n\tsub\tr2, r3, r4\n\tsub.s\t31, r4, r5\n\tptr.add\tr1, r3, r4\n\tld\tr4, r4\n\tadd\t@CPI2_27[0], r0, r6\n\tsub!\tr4, r5, r7\n\tadd\t0, r0, r7\n\tadd.ge\tr6, r0, r7\n\tand\t@CPI2_27[0], r5, r5\n\tand\t@CPI2_27[0], r4, r8\n\tsub!\tr8, r5, r9\n\tadd.ge\t0, r0, r6\n\txor\tr8, r5, r5\n\tsub.s!\t@CPI2_27[0], r5, r5\n\tadd\tr7, r0, r5\n\tadd.eq\tr6, r0, r5\n\tsub.s!\t0, r5, r5\n\tjump.ne\t@.BB2_30\n\tadd\tr4, r3, r4\n\tptr.add\tr1, r4, r5\n\tld\tr5, r5\n\tadd\tr5, r0, stack-[7]\n\tsub.s!\t@CPI2_34[0], r5, r5\n\tjump.gt\t@.BB2_30\n\tadd\tstack-[7], r0, r5\n\tshl.s\t5, r5, r5\n\tsub\tr2, r5, r2\n\tadd\t32, r4, r7\n\tadd\t@CPI2_27[0], r0, r5\n\tsub!\tr7, r2, r6\n\tadd\t0, r0, r6\n\tadd.gt\tr5, r0, r6\n\tand\t@CPI2_27[0], r2, r2\n\tadd\tr7, r0, stack-[22]\n\tand\t@CPI2_27[0], r7, r7\n\tsub!\tr7, r2, r8\n\tadd.ge\t0, r0, r5\n\txor\tr7, r2, r2\n\tsub.s!\t@CPI2_27[0], r2, r2\n\tadd\tr6, r0, r2\n\tadd.eq\tr5, r0, r2\n\tsub.s!\t0, r2, r2\n\tjump.ne\t@.BB2_30\n\tadd\t32, r3, r2\n\tptr.add\tr1, r2, r1\n\tld\tr1, r1\n\tadd\tr1, r0, stack-[6]\n\tsub.s!\t@CPI2_28[0], r1, r1\n\tjump.gt\t@.BB2_30\n\tadd\tstack-[7], r0, r1\n\tsub.s!\t0, r1, r1\n\tadd\tstack-[23], r0, r5\n\tjump.eq\t@.BB2_318\n\tsub.s\t383, r0, r1\n\tsub\tr1, r4, r1\n\tadd\tr1, r0, stack-[5]\n\tadd\tr0, r0, r2\n\tjump\t@.BB2_327\n.BB2_416:\n\tadd\tstack-[33], r0, r10\n\tadd\t1, r10, r10\n\tadd\tstack-[9], r0, r2\n\tadd\t1, r2, r2\n\tadd\tstack-[7], r0, r1\n\tsub!\tr2, r1, r1\n\tjump.ge\t@.BB2_318\n.BB2_327:\n\tld.1\tr5, r1\n\tadd\tr10, r0, stack-[33]\n\tsub!\tr1, r10, r1\n\tjump.le\t@.BB2_99\n\tadd\tr2, r0, stack-[9]\n\tshl.s\t5, r2, r1\n\tadd\tstack-[22], r0, r2\n\tadd\tr1, r2, r1\n\tptr.add\tstack[@ptr_calldata], r1, r1\n\tld\tr1, r1\n\tadd\tstack-[5], r0, r2\n\tadd\tstack[@calldatasize], r2, r2\n\tadd\t@CPI2_27[0], r0, r3\n\tsub!\tr1, r2, r4\n\tadd\t0, r0, r4\n\tadd.ge\tr3, r0, r4\n\tand\t@CPI2_27[0], r2, r2\n\tand\t@CPI2_27[0], r1, r5\n\tsub!\tr5, r2, r6\n\tadd.ge\t0, r0, r3\n\txor\tr5, r2, r2\n\tsub.s!\t@CPI2_27[0], r2, r2\n\tadd\tr4, r0, r2\n\tadd.eq\tr3, r0, r2\n\tsub.s!\t0, r2, r2\n\tjump.ne\t@.BB2_30\n\tadd\tstack-[33], r0, r2\n\tshl.s\t5, r2, r2\n\tadd\tstack-[4], r0, r3\n\tadd\tr2, r3, r2\n\tld.1\tr2, r3\n\tcontext.get_context_u128\tr2\n\tsub.s!\t8, r2, r2\n\tjump.lt\t@.BB2_102\n\tadd\tstack-[22], r0, r2\n\tadd\tr1, r2, r2\n\tcontext.gas_left\tr1\n\tadd\tr1, r0, stack-[10]\n\tadd\tr3, r0, stack-[31]\n\tld.1.inc\tr3, r1, r3\n\tadd\tr3, r0, stack-[17]\n\tadd\tr1, r0, stack-[32]\n\tadd\tr2, r0, stack-[34]\n\tptr.add\tstack[@ptr_calldata], r2, r1\n\tld\tr1, r1\n\tsub.s!\t@CPI2_28[0], r1, r2\n\tjump.gt\t@.BB2_30\n\tadd\tstack-[32], r0, r2\n\tst.1.inc\tr2, r1, r4\n\tadd\tstack-[34], r0, r3\n\tadd\t32, r3, r1\n\tadd\tr1, r0, stack-[19]\n\tptr.add\tstack[@ptr_calldata], r1, r1\n\tld\tr1, r1\n\tadd\tr4, r0, stack-[11]\n\tst.1\tr4, r1\n\tadd\t128, r3, r1\n\tadd\tr1, r0, stack-[18]\n\tptr.add\tstack[@ptr_calldata], r1, r1\n\tld\tr1, r1\n\tadd\t64, r2, r4\n\tadd\tr4, r0, stack-[16]\n\tst.1\tr4, r1\n\tadd\t160, r3, r1\n\tadd\tr1, r0, stack-[26]\n\tptr.add\tstack[@ptr_calldata], r1, r1\n\tld\tr1, r1\n\tadd\t96, r2, r4\n\tadd\tr4, r0, stack-[15]\n\tst.1\tr4, r1\n\tadd\t192, r3, r1\n\tadd\tr1, r0, stack-[25]\n\tptr.add\tstack[@ptr_calldata], r1, r1\n\tld\tr1, r1\n\tadd\t128, r2, r4\n\tadd\tr4, r0, stack-[14]\n\tst.1\tr4, r1\n\tadd\t224, r3, r1\n\tadd\tr1, r0, stack-[29]\n\tptr.add\tstack[@ptr_calldata], r1, r1\n\tld\tr1, r1\n\tadd\t192, r2, r4\n\tadd\tr4, r0, stack-[13]\n\tst.1\tr4, r1\n\tadd\t224, r2, r1\n\tadd\t256, r3, r2\n\tadd\tr2, r0, stack-[28]\n\tptr.add\tstack[@ptr_calldata], r2, r2\n\tld\tr2, r2\n\tst.1\tr1, r2\n\tsub.s\t31, r0, r1\n\tsub\tr1, r3, r9\n\tadd\t288, r3, r2\n\tptr.add\tstack[@ptr_calldata], r0, r1\n\tadd\tr2, r0, stack-[21]\n\tptr.add\tr1, r2, r2\n\tld\tr2, r2\n\tadd\t@CPI2_27[0], r0, r4\n\tadd\tstack[@calldatasize], r0, r3\n\tadd\tr3, r9, r5\n\tsub!\tr2, r5, r6\n\tadd\t0, r0, r6\n\tadd.ge\tr4, r0, r6\n\tand\t@CPI2_27[0], r5, r5\n\tand\t@CPI2_27[0], r2, r7\n\tsub!\tr7, r5, r8\n\tadd.ge\t0, r0, r4\n\txor\tr7, r5, r5\n\tsub.s!\t@CPI2_27[0], r5, r5\n\tadd.ne\tr6, r0, r4\n\tsub.s!\t0, r4, r4\n\tjump.ne\t@.BB2_30\n\tadd\tstack-[34], r0, r4\n\tadd\tr2, r4, r4\n\tptr.add\tr1, r4, r2\n\tld\tr2, r2\n\tsub.s!\t@CPI2_34[0], r2, r5\n\tjump.gt\t@.BB2_30\n\tsub\tr3, r2, r5\n\tadd\t32, r4, r3\n\tadd\t@CPI2_27[0], r0, r4\n\tsub!\tr3, r5, r6\n\tadd\t0, r0, r6\n\tadd.gt\tr4, r0, r6\n\tand\t@CPI2_27[0], r5, r5\n\tand\t@CPI2_27[0], r3, r7\n\tsub!\tr7, r5, r8\n\tadd.ge\t0, r0, r4\n\txor\tr7, r5, r5\n\tsub.s!\t@CPI2_27[0], r5, r5\n\tadd.ne\tr6, r0, r4\n\tsub.s!\t0, r4, r4\n\tjump.ne\t@.BB2_30\n\tsub.s!\t0, r2, r4\n\tadd\tr0, r0, r4\n\tjump.eq\t@.BB2_337\n\tsub.s!\t20, r2, r2\n\tjump.lt\t@.BB2_109\n\tptr.add\tr1, r3, r1\n\tld\tr1, r1\n\tshr.s\t96, r1, r4\n.BB2_337:\n\tadd\tstack-[32], r0, r1\n\tadd\t160, r1, r1\n\tadd\tr1, r0, stack-[24]\n\tst.1\tr1, r4\n\tcontext.get_context_u128\tr1\n\tsub.s!\t9, r1, r1\n\tjump.lt\t@.BB2_112\n\tadd\tstack[@calldatasize], r0, r3\n\tadd\tr3, r9, r4\n\tadd\tstack-[34], r0, r1\n\tadd\t64, r1, r1\n\tptr.add\tstack[@ptr_calldata], r0, r2\n\tptr.add\tr2, r1, r1\n\tld\tr1, r1\n\tadd\t@CPI2_27[0], r0, r5\n\tsub!\tr1, r4, r6\n\tadd\t0, r0, r6\n\tadd.ge\tr5, r0, r6\n\tand\t@CPI2_27[0], r4, r4\n\tand\t@CPI2_27[0], r1, r7\n\tsub!\tr7, r4, r8\n\tadd.ge\t0, r0, r5\n\txor\tr7, r4, r4\n\tsub.s!\t@CPI2_27[0], r4, r4\n\tadd\tr6, r0, r4\n\tadd.eq\tr5, r0, r4\n\tsub.s!\t0, r4, r4\n\tjump.ne\t@.BB2_30\n\tadd\tstack-[34], r0, r4\n\tadd\tr1, r4, r4\n\tptr.add\tr2, r4, r1\n\tld\tr1, r1\n\tsub.s!\t@CPI2_34[0], r1, r5\n\tjump.gt\t@.BB2_30\n\tsub\tr3, r1, r5\n\tadd\t32, r4, r3\n\tadd\t@CPI2_27[0], r0, r4\n\tsub!\tr3, r5, r6\n\tadd\t0, r0, r6\n\tadd.gt\tr4, r0, r6\n\tand\t@CPI2_27[0], r5, r5\n\tand\t@CPI2_27[0], r3, r7\n\tsub!\tr7, r5, r8\n\tadd.ge\t0, r0, r4\n\txor\tr7, r5, r5\n\tsub.s!\t@CPI2_27[0], r5, r5\n\tadd.ne\tr6, r0, r4\n\tsub.s!\t0, r4, r4\n\tjump.ne\t@.BB2_30\n\tptr.add\tr2, r3, r3\n\tld.1\t64, r2\n\tshr.s!\t5, r1, r4\n\tjump.eq\t@.BB2_695\n\tadd\tr0, r0, r5\n.BB2_343:\n\tshl.s\t5, r5, r6\n\tadd\tr2, r6, r7\n\tptr.add\tr3, r6, r6\n\tld\tr6, r6\n\tst.1\tr7, r6\n\tadd\t1, r5, r5\n\tsub!\tr5, r4, r6\n\tjump.lt\t@.BB2_343\n.BB2_695:\n\tadd\tr9, r0, stack-[30]\n\tand!\t31, r1, r5\n\tjump.eq\t@.BB2_345\n\tshl.s\t5, r4, r4\n\tptr.add\tr3, r4, r3\n\tadd\tr2, r4, r4\n\tshl.s\t3, r5, r5\n\tld.1\tr4, r6\n\tshl\tr6, r5, r6\n\tshr\tr6, r5, r6\n\tld\tr3, r3\n\tsub\t256, r5, r5\n\tshr\tr3, r5, r3\n\tshl\tr3, r5, r3\n\tor\tr3, r6, r3\n\tst.1\tr4, r3\n.BB2_345:\n\tadd\t@CPI2_31[0], r0, r3\n\tsub.s!\t@CPI2_31[0], r1, r4\n\tadd.ge\tr3, r0, r1\n\tshl.s\t96, r1, r1\n\tsub.s!\t@CPI2_31[0], r2, r4\n\tadd.ge\tr3, r0, r2\n\tshl.s\t64, r2, r2\n\tor\tr2, r1, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI2_31[0], r2, r4\n\tadd.ge\tr3, r0, r2\n\tshl.s\t192, r2, r2\n\tor\tr2, r1, r1\n\tor\t@CPI2_58[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tadd\tstack-[30], r0, r2\n\tjump.eq\t@.BB2_30\n\tadd\tstack[@calldatasize], r0, r3\n\tadd\tr3, r2, r5\n\tadd\tstack-[34], r0, r2\n\tadd\t96, r2, r4\n\tptr.add\tstack[@ptr_calldata], r0, r2\n\tptr.add\tr2, r4, r4\n\tld\tr4, r4\n\tadd\t@CPI2_27[0], r0, r6\n\tsub!\tr4, r5, r7\n\tadd\t0, r0, r7\n\tadd.ge\tr6, r0, r7\n\tand\t@CPI2_27[0], r5, r5\n\tand\t@CPI2_27[0], r4, r8\n\tsub!\tr8, r5, r9\n\tadd.ge\t0, r0, r6\n\txor\tr8, r5, r5\n\tsub.s!\t@CPI2_27[0], r5, r5\n\tadd\tr7, r0, r5\n\tadd.eq\tr6, r0, r5\n\tld\tr1, r1\n\tadd\tr1, r0, stack-[12]\n\tsub.s!\t0, r5, r1\n\tjump.ne\t@.BB2_30\n\tadd\tstack-[34], r0, r1\n\tadd\tr4, r1, r4\n\tptr.add\tr2, r4, r1\n\tld\tr1, r1\n\tsub.s!\t@CPI2_34[0], r1, r5\n\tjump.gt\t@.BB2_30\n\tsub\tr3, r1, r5\n\tadd\t32, r4, r3\n\tadd\t@CPI2_27[0], r0, r4\n\tsub!\tr3, r5, r6\n\tadd\t0, r0, r6\n\tadd.gt\tr4, r0, r6\n\tand\t@CPI2_27[0], r5, r5\n\tand\t@CPI2_27[0], r3, r7\n\tsub!\tr7, r5, r8\n\tadd.ge\t0, r0, r4\n\txor\tr7, r5, r5\n\tsub.s!\t@CPI2_27[0], r5, r5\n\tadd.ne\tr6, r0, r4\n\tsub.s!\t0, r4, r4\n\tjump.ne\t@.BB2_30\n\tptr.add\tr2, r3, r3\n\tld.1\t64, r2\n\tshr.s!\t5, r1, r4\n\tjump.eq\t@.BB2_694\n\tadd\tr0, r0, r5\n.BB2_351:\n\tshl.s\t5, r5, r6\n\tadd\tr2, r6, r7\n\tptr.add\tr3, r6, r6\n\tld\tr6, r6\n\tst.1\tr7, r6\n\tadd\t1, r5, r5\n\tsub!\tr5, r4, r6\n\tjump.lt\t@.BB2_351\n.BB2_694:\n\tand!\t31, r1, r5\n\tjump.eq\t@.BB2_353\n\tshl.s\t5, r4, r4\n\tptr.add\tr3, r4, r3\n\tadd\tr2, r4, r4\n\tshl.s\t3, r5, r5\n\tld.1\tr4, r6\n\tshl\tr6, r5, r6\n\tshr\tr6, r5, r6\n\tld\tr3, r3\n\tsub\t256, r5, r5\n\tshr\tr3, r5, r3\n\tshl\tr3, r5, r3\n\tor\tr3, r6, r3\n\tst.1\tr4, r3\n.BB2_353:\n\tadd\t@CPI2_31[0], r0, r3\n\tsub.s!\t@CPI2_31[0], r1, r4\n\tadd.ge\tr3, r0, r1\n\tshl.s\t96, r1, r1\n\tsub.s!\t@CPI2_31[0], r2, r4\n\tadd.ge\tr3, r0, r2\n\tshl.s\t64, r2, r2\n\tor\tr2, r1, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI2_31[0], r2, r4\n\tadd.ge\tr3, r0, r2\n\tshl.s\t192, r2, r2\n\tor\tr2, r1, r1\n\tor\t@CPI2_58[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tadd\tstack-[30], r0, r2\n\tjump.eq\t@.BB2_30\n\tadd\tstack[@calldatasize], r0, r3\n\tadd\tr3, r2, r5\n\tptr.add\tstack[@ptr_calldata], r0, r2\n\tadd\tstack-[21], r0, r4\n\tptr.add\tr2, r4, r4\n\tld\tr4, r4\n\tadd\t@CPI2_27[0], r0, r6\n\tsub!\tr4, r5, r7\n\tadd\t0, r0, r7\n\tadd.ge\tr6, r0, r7\n\tand\t@CPI2_27[0], r5, r5\n\tand\t@CPI2_27[0], r4, r8\n\tsub!\tr8, r5, r9\n\tadd.ge\t0, r0, r6\n\txor\tr8, r5, r5\n\tsub.s!\t@CPI2_27[0], r5, r5\n\tadd\tr7, r0, r5\n\tadd.eq\tr6, r0, r5\n\tld\tr1, r9\n\tsub.s!\t0, r5, r1\n\tjump.ne\t@.BB2_30\n\tadd\tstack-[34], r0, r1\n\tadd\tr4, r1, r4\n\tptr.add\tr2, r4, r1\n\tld\tr1, r1\n\tsub.s!\t@CPI2_34[0], r1, r5\n\tjump.gt\t@.BB2_30\n\tsub\tr3, r1, r5\n\tadd\t32, r4, r3\n\tadd\t@CPI2_27[0], r0, r4\n\tsub!\tr3, r5, r6\n\tadd\t0, r0, r6\n\tadd.gt\tr4, r0, r6\n\tand\t@CPI2_27[0], r5, r5\n\tand\t@CPI2_27[0], r3, r7\n\tsub!\tr7, r5, r8\n\tadd.ge\t0, r0, r4\n\txor\tr7, r5, r5\n\tsub.s!\t@CPI2_27[0], r5, r5\n\tadd.ne\tr6, r0, r4\n\tsub.s!\t0, r4, r4\n\tjump.ne\t@.BB2_30\n\tptr.add\tr2, r3, r3\n\tld.1\t64, r2\n\tshr.s!\t5, r1, r4\n\tjump.eq\t@.BB2_693\n\tadd\tr0, r0, r5\n.BB2_359:\n\tshl.s\t5, r5, r6\n\tadd\tr2, r6, r7\n\tptr.add\tr3, r6, r6\n\tld\tr6, r6\n\tst.1\tr7, r6\n\tadd\t1, r5, r5\n\tsub!\tr5, r4, r6\n\tjump.lt\t@.BB2_359\n.BB2_693:\n\tadd\tr9, r0, stack-[30]\n\tand!\t31, r1, r5\n\tjump.eq\t@.BB2_361\n\tshl.s\t5, r4, r4\n\tptr.add\tr3, r4, r3\n\tadd\tr2, r4, r4\n\tshl.s\t3, r5, r5\n\tld.1\tr4, r6\n\tshl\tr6, r5, r6\n\tshr\tr6, r5, r6\n\tld\tr3, r3\n\tsub\t256, r5, r5\n\tshr\tr3, r5, r3\n\tshl\tr3, r5, r3\n\tor\tr3, r6, r3\n\tst.1\tr4, r3\n.BB2_361:\n\tadd\t@CPI2_31[0], r0, r3\n\tsub.s!\t@CPI2_31[0], r1, r4\n\tadd.ge\tr3, r0, r1\n\tshl.s\t96, r1, r1\n\tsub.s!\t@CPI2_31[0], r2, r4\n\tadd.ge\tr3, r0, r2\n\tshl.s\t64, r2, r2\n\tor\tr2, r1, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI2_31[0], r2, r4\n\tadd.ge\tr3, r0, r2\n\tshl.s\t192, r2, r2\n\tor\tr2, r1, r1\n\tor\t@CPI2_58[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tadd\tstack-[30], r0, r11\n\tjump.eq\t@.BB2_30\n\tptr.add\tstack[@ptr_calldata], r0, r2\n\tadd\tstack-[28], r0, r3\n\tptr.add\tr2, r3, r3\n\tadd\tstack-[29], r0, r4\n\tptr.add\tr2, r4, r4\n\tadd\tstack-[25], r0, r5\n\tptr.add\tr2, r5, r5\n\tadd\tstack-[26], r0, r6\n\tptr.add\tr2, r6, r6\n\tadd\tstack-[18], r0, r7\n\tptr.add\tr2, r7, r7\n\tadd\tstack-[19], r0, r8\n\tptr.add\tr2, r8, r8\n\tadd\tstack-[34], r0, r9\n\tptr.add\tr2, r9, r2\n\tld\tr2, r9\n\tld\tr8, r2\n\tld\tr7, r7\n\tld\tr6, r6\n\tld\tr5, r5\n\tld\tr4, r4\n\tld\tr3, r3\n\tld\tr1, r8\n\tld.1\t64, r1\n\tadd\t320, r1, r10\n\tst.1\tr10, r8\n\tadd\t288, r1, r8\n\tst.1\tr8, r3\n\tadd\t256, r1, r3\n\tst.1\tr3, r4\n\tadd\t224, r1, r3\n\tst.1\tr3, r5\n\tadd\t192, r1, r3\n\tst.1\tr3, r6\n\tadd\t160, r1, r3\n\tst.1\tr3, r7\n\tadd\t128, r1, r3\n\tst.1\tr3, r11\n\tadd\t96, r1, r3\n\tadd\tstack-[12], r0, r4\n\tst.1\tr3, r4\n\tadd\t64, r1, r3\n\tst.1\tr3, r2\n\tadd\t320, r0, r2\n\tst.1.inc\tr1, r2, r2\n\tand\t@CPI2_28[0], r9, r3\n\tst.1\tr2, r3\n\tsub.s!\t@CPI2_81[0], r1, r3\n\tjump.gt\t@.BB2_44\n\tadd\t352, r1, r3\n\tst.1\t64, r3\n\tadd\t@CPI2_31[0], r0, r3\n\tsub.s!\t@CPI2_31[0], r2, r4\n\tadd.ge\tr3, r0, r2\n\tshl.s\t64, r2, r2\n\tld.1\tr1, r1\n\tsub.s!\t@CPI2_31[0], r1, r4\n\tadd.ge\tr3, r0, r1\n\tshl.s\t96, r1, r1\n\tor\tr1, r2, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI2_31[0], r2, r4\n\tadd.ge\tr3, r0, r2\n\tshl.s\t192, r2, r2\n\tor\tr2, r1, r1\n\tor\t@CPI2_58[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB2_30\n\tld\tr1, r1\n\tadd\tr1, r0, stack-[21]\n\tld.1\t64, r1\n\tadd\tr1, r0, stack-[30]\n\tadd\t@CPI2_82[0], r0, r1\n\tst.2\t0, r1\n\tadd\t@CPI2_31[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI2_31[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI2_51[0], r1, r1\n\tadd\t32779, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB2_30\n\tadd\tstack-[30], r0, r4\n\tadd\t32, r4, r2\n\tld\tr1, r1\n\tadd\tstack-[21], r0, r3\n\tst.1\tr2, r3\n\tadd\t96, r4, r3\n\tst.1\tr3, r1\n\tcontext.this\tr1\n\tand\t@CPI2_28[0], r1, r1\n\tadd\t64, r4, r3\n\tst.1\tr3, r1\n\tadd\t96, r0, r1\n\tadd\tr1, r0, stack-[21]\n\tst.1\tr4, r1\n\tsub.s!\t@CPI2_83[0], r4, r1\n\tjump.gt\t@.BB2_44\n\tadd\t128, r4, r1\n\tst.1\t64, r1\n\tadd\t@CPI2_31[0], r0, r1\n\tsub.s!\t@CPI2_31[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t64, r2, r2\n\tld.1\tr4, r3\n\tsub.s!\t@CPI2_31[0], r3, r4\n\tadd.ge\tr1, r0, r3\n\tshl.s\t96, r3, r3\n\tor\tr3, r2, r2\n\tcontext.gas_left\tr3\n\tsub.s!\t@CPI2_31[0], r3, r4\n\tadd.lt\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\tr1, r2, r1\n\tor\t@CPI2_58[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB2_30\n\tld\tr1, r1\n\tadd\tstack-[17], r0, r2\n\tst.1\tr2, r1\n\tcontext.get_context_u128\tr1\n\tsub.s!\t10, r1, r1\n\tjump.lt\t@.BB2_143\n\tadd\tstack-[16], r0, r1\n\tld.1\tr1, r1\n\tadd\tstack-[14], r0, r2\n\tld.1\tr2, r2\n\tadd\tstack-[15], r0, r3\n\tld.1\tr3, r3\n\tor\tr3, r2, r4\n\tor\tr4, r1, r4\n\tptr.add\tstack[@ptr_calldata], r0, r5\n\tadd\tstack-[28], r0, r6\n\tptr.add\tr5, r6, r6\n\tld\tr6, r6\n\tor\tr4, r6, r4\n\tadd\tstack-[29], r0, r6\n\tptr.add\tr5, r6, r5\n\tld\tr5, r5\n\tor\tr4, r5, r4\n\tsub.s!\t@CPI2_84[0], r4, r4\n\tjump.gt\t@.BB2_145\n\tadd\tstack-[24], r0, r4\n\tld.1\tr4, r4\n\tand!\t@CPI2_28[0], r4, r4\n\tadd\t3, r0, r5\n\tadd.eq\t1, r0, r5\n\tadd\tstack-[13], r0, r4\n\tld.1\tr4, r4\n\tcontext.get_context_u128\tr6\n\tsub.s!\t11, r6, r6\n\tjump.lt\t@.BB2_147\n\tadd\tr1, r2, r1\n\tmul\tr5, r3, r2, r3\n\tadd\tr1, r2, r1\n\tmul\tr1, r4, r4, r1\n\tadd\tstack-[33], r0, r1\n\tadd\tstack-[34], r0, r2\n\tadd\tstack-[31], r0, r3\n\tadd\tr4, r0, stack-[29]\n\tnear_call\tr0, @fun_validateAccountPrepayment, @DEFAULT_UNWIND\n\tadd\tr1, r0, stack-[19]\n\tadd\tr2, r0, stack-[28]\n\tcontext.get_context_u128\tr1\n\tsub.s!\t12, r1, r1\n\tjump.lt\t@.BB2_149\n\tadd\tstack-[11], r0, r1\n\tld.1\tr1, r1\n\tadd\tr1, r0, stack-[30]\n\tadd\tstack-[32], r0, r1\n\tld.1\tr1, r1\n\tand\t@CPI2_28[0], r1, r1\n\tst.1\t0, r1\n\tadd\tstack-[8], r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI2_31[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI2_31[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI2_45[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB2_30\n\tld\tr1, r1\n\tadd\tstack-[30], r0, r2\n\tshr.s\t64, r2, r2\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tadd\t@CPI2_31[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI2_31[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI2_45[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB2_30\n\tadd\tstack-[30], r0, r4\n\tld\tr1, r2\n\tsload\tr2, r1\n\tsub.s\t1, r0, r3\n\tsub!\tr1, r3, r3\n\tjump.eq\t@.BB2_38\n\tadd\t1, r1, r3\n\tsstore\tr2, r3\n\tand\t@CPI2_34[0], r4, r2\n\tsub!\tr1, r2, r1\n\tjump.ne\t@.BB2_375\n\tadd\t@CPI2_50[0], r0, r1\n\tst.2\t0, r1\n\tadd\t@CPI2_31[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI2_31[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI2_51[0], r1, r1\n\tadd\t32779, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB2_30\n\tld\tr1, r1\n\tst.1\t0, r1\n\tadd\tstack-[24], r0, r1\n\tld.1\tr1, r1\n\tand!\t@CPI2_28[0], r1, r1\n\tadd\tr0, r0, r6\n\tadd\tstack-[21], r0, r1\n\tjump.eq\t@.BB2_379\n\tadd\tstack-[33], r0, r1\n\tadd\tstack-[34], r0, r2\n\tadd\tstack-[31], r0, r3\n\tadd\tstack-[29], r0, r4\n\tadd\tstack-[19], r0, r5\n\tnear_call\tr0, @fun_validatePaymasterPrepayment, @DEFAULT_UNWIND\n\tadd\tr2, r0, r6\n.BB2_379:\n\tcontext.get_context_u128\tr2\n\tsub.s!\t13, r2, r2\n\tjump.lt\t@.BB2_159\n\tcontext.gas_left\tr3\n\tcontext.get_context_u128\tr2\n\tsub.s!\t14, r2, r2\n\tadd\tstack-[23], r0, r5\n\tadd\tstack-[10], r0, r4\n\tjump.lt\t@.BB2_161\n\tsub\tr4, r3, r3\n\tadd\tstack-[26], r0, r2\n\tptr.add\tstack[@ptr_calldata], r2, r2\n\tld\tr2, r2\n\tsub!\tr2, r3, r2\n\tadd\tstack-[31], r0, r3\n\tjump.lt\t@.BB2_382\n\tcontext.get_context_u128\tr2\n\tsub.s!\t15, r2, r2\n\tjump.lt\t@.BB2_165\n\tadd\t96, r3, r2\n\tst.1\tr2, r1\n\tadd\t64, r3, r1\n\tadd\tstack-[29], r0, r2\n\tst.1\tr1, r2\n\tcontext.get_context_u128\tr1\n\tsub.s!\t16, r1, r1\n\tjump.lt\t@.BB2_167\n\tcontext.gas_left\tr1\n\tsub\tr4, r1, r1\n\tadd\tstack-[25], r0, r2\n\tptr.add\tstack[@ptr_calldata], r2, r2\n\tld\tr2, r2\n\tadd\tr1, r2, r1\n\tadd\t128, r3, r2\n\tst.1\tr2, r1\n\tcontext.get_context_u128\tr1\n\tsub.s!\t18, r1, r1\n\tjump.lt\t@.BB2_171\n\tadd\tstack-[28], r0, r3\n\tsub.s!\t0, r3, r1\n\tadd\tr0, r0, r2\n\tadd\tr0, r0, r1\n\tjump.eq\t@.BB2_394\n\tld.1\t64, r1\n\tsub.s!\t@CPI2_46[0], r1, r2\n\tjump.gt\t@.BB2_44\n\tadd\t96, r1, r2\n\tst.1\t64, r2\n\tadd\t64, r1, r2\n\tst.1\tr2, r0\n\tadd\t32, r1, r2\n\tst.1\tr2, r0\n\tst.1\tr1, r0\n\tld.1\t64, r4\n\tsub.s!\t@CPI2_46[0], r4, r1\n\tjump.gt\t@.BB2_44\n\tadd\tr6, r0, stack-[32]\n\tadd\t96, r4, r1\n\tst.1\t64, r1\n\tshr.s\t208, r3, r1\n\tadd\t32, r4, r2\n\tadd\tr2, r0, stack-[30]\n\tst.1\tr2, r1\n\tand\t@CPI2_28[0], r3, r1\n\tst.1\tr4, r1\n\tshr.s\t160, r3, r1\n\tand!\t@CPI2_32[0], r1, r1\n\tadd\t@CPI2_32[0], r0, r2\n\tadd.ne\tr1, r0, r2\n\tadd\tr4, r0, stack-[31]\n\tadd\t64, r4, r1\n\tadd\tr2, r0, stack-[34]\n\tst.1\tr1, r2\n\tadd\t@CPI2_53[0], r0, r1\n\tst.2\t0, r1\n\tadd\t@CPI2_31[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI2_31[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI2_51[0], r1, r1\n\tadd\t32779, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB2_30\n\tld\tr1, r1\n\tadd\tstack-[34], r0, r2\n\tsub!\tr1, r2, r1\n\tadd\tstack-[8], r0, r1\n\tjump.gt\t@.BB2_393\n\tadd\tstack-[30], r0, r1\n\tld.1\tr1, r1\n\tadd\tr1, r0, stack-[34]\n\tadd\t@CPI2_53[0], r0, r1\n\tst.2\t0, r1\n\tadd\t@CPI2_31[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI2_31[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI2_51[0], r1, r1\n\tadd\t32779, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB2_30\n\tadd\tstack-[34], r0, r2\n\tand\t@CPI2_32[0], r2, r2\n\tld\tr1, r1\n\tsub!\tr1, r2, r1\n\tadd\t0, r0, r1\n\tadd.lt\t1, r0, r1\n.BB2_393:\n\tand\t1, r1, r1\n\tadd\tstack-[31], r0, r2\n\tld.1\tr2, r2\n\tand\t@CPI2_28[0], r2, r2\n\tadd\tstack-[23], r0, r5\n\tadd\tstack-[32], r0, r6\n.BB2_394:\n\tcontext.get_context_u128\tr3\n\tsub.s!\t19, r3, r3\n\tjump.lt\t@.BB2_181\n\tadd\tstack-[6], r0, r3\n\tsub!\tr2, r3, r2\n\tjump.ne\t@.BB2_396\n\tcontext.get_context_u128\tr2\n\tsub.s!\t20, r2, r2\n\tjump.lt\t@.BB2_186\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB2_399\n\tcontext.get_context_u128\tr1\n\tsub.s!\t21, r1, r1\n\tjump.lt\t@.BB2_190\n\tsub.s!\t0, r6, r1\n\tjump.eq\t@.BB2_409\n\tld.1\t64, r1\n\tsub.s!\t@CPI2_46[0], r1, r2\n\tjump.gt\t@.BB2_44\n\tadd\t96, r1, r2\n\tst.1\t64, r2\n\tadd\t64, r1, r2\n\tst.1\tr2, r0\n\tadd\t32, r1, r2\n\tst.1\tr2, r0\n\tst.1\tr1, r0\n\tld.1\t64, r3\n\tsub.s!\t@CPI2_46[0], r3, r1\n\tjump.gt\t@.BB2_44\n\tadd\t96, r3, r1\n\tst.1\t64, r1\n\tshr.s\t208, r6, r1\n\tadd\t32, r3, r2\n\tadd\tr2, r0, stack-[31]\n\tst.1\tr2, r1\n\tand\t@CPI2_28[0], r6, r1\n\tst.1\tr3, r1\n\tshr.s\t160, r6, r1\n\tand!\t@CPI2_32[0], r1, r1\n\tadd\t@CPI2_32[0], r0, r2\n\tadd.ne\tr1, r0, r2\n\tadd\tr3, r0, stack-[32]\n\tadd\t64, r3, r1\n\tadd\tr2, r0, stack-[34]\n\tst.1\tr1, r2\n\tadd\t@CPI2_53[0], r0, r1\n\tst.2\t0, r1\n\tadd\t@CPI2_31[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI2_31[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI2_51[0], r1, r1\n\tadd\t32779, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB2_30\n\tld\tr1, r1\n\tadd\tstack-[34], r0, r2\n\tsub!\tr1, r2, r1\n\tadd\tr0, r0, r1\n\tjump.gt\t@.BB2_408\n\tadd\tstack-[31], r0, r1\n\tld.1\tr1, r1\n\tadd\tr1, r0, stack-[34]\n\tadd\t@CPI2_53[0], r0, r1\n\tst.2\t0, r1\n\tadd\t@CPI2_31[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI2_31[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI2_51[0], r1, r1\n\tadd\t32779, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB2_30\n\tadd\tstack-[34], r0, r2\n\tand\t@CPI2_32[0], r2, r2\n\tld\tr1, r1\n\tsub!\tr1, r2, r1\n\tadd\t0, r0, r1\n\tadd.ge\t1, r0, r1\n.BB2_408:\n\tadd\tstack-[32], r0, r2\n\tld.1\tr2, r2\n\tcontext.get_context_u128\tr3\n\tsub.s!\t22, r3, r3\n\tadd\tstack-[23], r0, r5\n\tjump.lt\t@.BB2_200\n\tand!\t@CPI2_28[0], r2, r2\n\tjump.ne\t@.BB2_411\n\tcontext.get_context_u128\tr2\n\tsub.s!\t23, r2, r2\n\tjump.lt\t@.BB2_205\n\tand!\t1, r1, r1\n\tjump.ne\t@.BB2_416\n\tjump\t@.BB2_415\n.BB2_409:\n\tcontext.get_context_u128\tr1\n\tsub.s!\t22, r1, r1\n\tjump.lt\t@.BB2_200\n\tcontext.get_context_u128\tr1\n\tsub.s!\t23, r1, r1\n\tjump.ge\t@.BB2_416\n.BB2_205:\n\tld.1\t64, r1\n\tadd\t68, r1, r2\n\tadd\t@CPI2_94[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t18, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI2_42[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI2_31[0], r0, r2\n\tsub.s!\t@CPI2_31[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI2_60[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB2_214:\n\tsub.s\t387, r0, r2\n\tadd\tstack-[6], r0, r3\n\tsub\tr2, r3, r2\n\tadd\tr2, r0, stack-[30]\n\tsub.s!\t26, r1, r1\n\tjump.ge\t@.BB2_215\n\tadd\tstack-[30], r0, r1\n\tadd\tstack[@calldatasize], r1, r2\n\tadd\tstack-[33], r0, r1\n\tptr.add\tstack[@ptr_calldata], r1, r1\n\tld\tr1, r1\n\tadd\t@CPI2_27[0], r0, r3\n\tsub!\tr1, r2, r4\n\tadd\t0, r0, r4\n\tadd.ge\tr3, r0, r4\n\tand\t@CPI2_27[0], r2, r2\n\tand\t@CPI2_27[0], r1, r5\n\tsub!\tr5, r2, r6\n\tadd.ge\t0, r0, r3\n\txor\tr5, r2, r2\n\tsub.s!\t@CPI2_27[0], r2, r2\n\tadd\tr4, r0, r2\n\tadd.eq\tr3, r0, r2\n\tsub.s!\t0, r2, r2\n\tjump.ne\t@.BB2_30\n\tadd\tstack-[31], r0, r2\n\tld.1\tr2, r2\n\tsub.s!\t0, r2, r2\n\tadd\tstack-[33], r0, r2\n\tjump.ne\t@.BB2_218\n.BB2_99:\n\tadd\t@CPI2_113[0], r0, r1\n\tst.1\t0, r1\n\tadd\t50, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI2_76[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB2_215:\n\tadd\tr0, r0, r9\n\tadd\tr0, r0, r2\n\tadd\tstack-[33], r0, r1\n.BB2_219:\n\tshl.s\t5, r9, r1\n\tadd\tstack-[33], r0, r3\n\tadd\tr1, r3, r3\n\tptr.add\tstack[@ptr_calldata], r3, r3\n\tld\tr3, r8\n\tadd\tstack-[30], r0, r3\n\tadd\tstack[@calldatasize], r3, r3\n\tadd\t@CPI2_27[0], r0, r4\n\tsub!\tr8, r3, r5\n\tadd\t0, r0, r5\n\tadd.lt\tr4, r0, r5\n\tand\t@CPI2_27[0], r3, r3\n\tand\t@CPI2_27[0], r8, r6\n\tsub!\tr6, r3, r7\n\tadd.le\t0, r0, r4\n\txor\tr6, r3, r3\n\tsub.s!\t@CPI2_27[0], r3, r3\n\tadd\tr5, r0, r3\n\tadd.eq\tr4, r0, r3\n\tsub.s!\t0, r3, r3\n\tjump.eq\t@.BB2_30\n\tadd\tr2, r0, stack-[34]\n\tadd\tstack-[31], r0, r3\n\tld.1\tr3, r3\n\tsub!\tr3, r9, r3\n\tadd\tstack-[33], r0, r4\n\tjump.le\t@.BB2_99\n\tadd\tr8, r4, r2\n\tadd\tstack-[27], r0, r3\n\tadd\tr1, r3, r1\n\tld.1\tr1, r3\n\tadd\tr9, r0, r1\n\tadd\tr9, r0, stack-[32]\n\tnear_call\tr0, @fun_executeUserOp, @DEFAULT_UNWIND\n\tadd\tstack-[32], r0, r9\n\tadd\tstack-[34], r0, r2\n\tadd\tr1, r2, r2\n\tadd\t1, r9, r9\n\tadd\tstack-[28], r0, r1\n\tsub!\tr9, r1, r1\n\tjump.lt\t@.BB2_219\n\tjump\t@.BB2_223\n.BB2_257:\n\tld.1\t64, r1\n\tadd\t68, r1, r2\n\tadd\t@CPI2_79[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t23, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI2_42[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI2_31[0], r0, r2\n\tsub.s!\t@CPI2_31[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI2_60[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB2_218:\n\tadd\tr1, r2, r2\n\tadd\tstack-[27], r0, r1\n\tld.1\tr1, r3\n\tadd\tr0, r0, r1\n\tnear_call\tr0, @fun_executeUserOp, @DEFAULT_UNWIND\n\tadd\t@CPI2_42[0], r0, r1\n\tld.1\t64, r2\n\tst.1\tr2, r1\n\tadd\t4, r2, r1\n\tadd\t32, r0, r3\n\tst.1\tr1, r3\n\tadd\t36, r2, r1\n\tadd\t16, r0, r3\n\tst.1\tr1, r3\n\tadd\t68, r2, r1\n\tadd\t@CPI2_112[0], r0, r3\n\tst.1\tr1, r3\n\tadd\t@CPI2_31[0], r0, r1\n\tsub.s!\t@CPI2_31[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI2_60[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB2_102:\n\tld.1\t64, r1\n\tadd\t68, r1, r2\n\tadd\t@CPI2_110[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t16, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI2_42[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI2_31[0], r0, r2\n\tsub.s!\t@CPI2_31[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI2_60[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB2_112:\n\tld.1\t64, r1\n\tadd\t68, r1, r2\n\tadd\t@CPI2_109[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t16, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI2_42[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI2_31[0], r0, r2\n\tsub.s!\t@CPI2_31[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI2_60[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB2_143:\n\tld.1\t64, r1\n\tadd\t68, r1, r2\n\tadd\t@CPI2_108[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t16, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI2_42[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI2_31[0], r0, r2\n\tsub.s!\t@CPI2_31[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI2_60[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB2_145:\n\tld.1\t64, r1\n\tadd\t68, r1, r2\n\tadd\t@CPI2_107[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t24, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI2_42[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI2_31[0], r0, r2\n\tsub.s!\t@CPI2_31[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI2_60[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB2_147:\n\tld.1\t64, r1\n\tadd\t68, r1, r2\n\tadd\t@CPI2_106[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t17, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI2_42[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI2_31[0], r0, r2\n\tsub.s!\t@CPI2_31[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI2_60[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB2_149:\n\tld.1\t64, r1\n\tadd\t68, r1, r2\n\tadd\t@CPI2_105[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t17, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI2_42[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI2_31[0], r0, r2\n\tsub.s!\t@CPI2_31[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI2_60[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB2_159:\n\tld.1\t64, r1\n\tadd\t68, r1, r2\n\tadd\t@CPI2_104[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t17, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI2_42[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI2_31[0], r0, r2\n\tsub.s!\t@CPI2_31[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI2_60[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB2_161:\n\tld.1\t64, r1\n\tadd\t68, r1, r2\n\tadd\t@CPI2_103[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t17, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI2_42[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI2_31[0], r0, r2\n\tsub.s!\t@CPI2_31[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI2_60[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB2_165:\n\tld.1\t64, r1\n\tadd\t68, r1, r2\n\tadd\t@CPI2_102[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t17, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI2_42[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI2_31[0], r0, r2\n\tsub.s!\t@CPI2_31[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI2_60[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB2_167:\n\tld.1\t64, r1\n\tadd\t68, r1, r2\n\tadd\t@CPI2_101[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t17, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI2_42[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI2_31[0], r0, r2\n\tsub.s!\t@CPI2_31[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI2_60[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB2_171:\n\tld.1\t64, r1\n\tadd\t68, r1, r2\n\tadd\t@CPI2_99[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t17, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI2_42[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI2_31[0], r0, r2\n\tsub.s!\t@CPI2_31[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI2_60[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB2_181:\n\tld.1\t64, r1\n\tadd\t68, r1, r2\n\tadd\t@CPI2_98[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t17, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI2_42[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI2_31[0], r0, r2\n\tsub.s!\t@CPI2_31[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI2_60[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB2_186:\n\tld.1\t64, r1\n\tadd\t68, r1, r2\n\tadd\t@CPI2_97[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t17, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI2_42[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI2_31[0], r0, r2\n\tsub.s!\t@CPI2_31[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI2_60[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB2_190:\n\tld.1\t64, r1\n\tadd\t68, r1, r2\n\tadd\t@CPI2_96[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t18, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI2_42[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI2_31[0], r0, r2\n\tsub.s!\t@CPI2_31[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI2_60[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB2_200:\n\tld.1\t64, r1\n\tadd\t68, r1, r2\n\tadd\t@CPI2_95[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t18, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI2_42[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI2_31[0], r0, r2\n\tsub.s!\t@CPI2_31[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI2_60[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB2_154:\n\tld.1\t64, r2\n\tadd\tr2, r0, stack-[34]\n\tadd\t@CPI2_43[0], r0, r1\n\tst.1\tr2, r1\n\tadd\t4, r2, r1\n\tadd\tstack-[29], r0, r2\n\tnear_call\tr0, @abi_encode_uint256_stringliteral_1a6d, @DEFAULT_UNWIND\n\tadd\tstack-[34], r0, r4\n\tsub\tr1, r4, r1\n\tadd\t@CPI2_31[0], r0, r2\n\tsub.s!\t@CPI2_31[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tsub.s!\t@CPI2_31[0], r4, r3\n\tadd.lt\tr4, r0, r2\n\tshl.s\t64, r2, r2\n\tshl.s\t96, r1, r1\n\tor\tr1, r2, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB2_163:\n\tld.1\t64, r2\n\tadd\tr2, r0, stack-[34]\n\tadd\t@CPI2_43[0], r0, r1\n\tst.1\tr2, r1\n\tadd\t4, r2, r1\n\tadd\tstack-[29], r0, r2\n\tnear_call\tr0, @abi_encode_uint256_stringliteral_7d1d, @DEFAULT_UNWIND\n\tadd\tstack-[34], r0, r4\n\tsub\tr1, r4, r1\n\tadd\t@CPI2_31[0], r0, r2\n\tsub.s!\t@CPI2_31[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tsub.s!\t@CPI2_31[0], r4, r3\n\tadd.lt\tr4, r0, r2\n\tshl.s\t64, r2, r2\n\tshl.s\t96, r1, r1\n\tor\tr1, r2, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB2_169:\n\tld.1\t64, r1\n\tadd\t68, r1, r2\n\tadd\t@CPI2_100[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t16, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI2_42[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI2_31[0], r0, r2\n\tsub.s!\t@CPI2_31[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI2_60[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB2_209:\n\tld.1\t64, r1\n\tadd\t68, r1, r2\n\tadd\t@CPI2_93[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t16, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI2_42[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI2_31[0], r0, r2\n\tsub.s!\t@CPI2_31[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI2_60[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB2_109:\n\tld.1\t64, r1\n\tadd\t68, r1, r2\n\tadd\t@CPI2_91[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t29, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI2_42[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI2_31[0], r0, r2\n\tsub.s!\t@CPI2_31[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI2_60[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB2_315:\n\tld.1\t64, r1\n\tadd\t@CPI2_78[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tst.1\tr2, r4\n\tadd\t@CPI2_31[0], r0, r2\n\tsub.s!\t@CPI2_31[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI2_76[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB2_629:\n\tsub.s!\t4, r4, r2\n\tjump.lt\t@.BB2_646\n\tld.1\t0, r2\n\tand\t@CPI2_40[0], r2, r2\n\tld\tr1, r1\n\tand\t@CPI2_41[0], r1, r1\n\tor\tr1, r2, r1\n\tst.1\t0, r1\n\tand\t@CPI2_41[0], r1, r1\n\tsub.s!\t@CPI2_42[0], r1, r1\n\tjump.ne\t@.BB2_643\n\tadd\tstack[@returndatasize], r0, r3\n\tsub.s!\t68, r3, r1\n\tjump.ge\t@.BB2_632\n.BB2_643:\n\tptr.add\tstack[@ptr_return_data], r0, r1\n\tadd\tstack[@returndatasize], r0, r4\n.BB2_646:\n\tld.1\t64, r2\n\tand\t31, r4, r3\n\tshr.s!\t5, r4, r4\n\tjump.eq\t@.BB2_681\n\tadd\tr0, r0, r5\n.BB2_648:\n\tshl.s\t5, r5, r6\n\tadd\tr2, r6, r7\n\tptr.add\tr1, r6, r6\n\tld\tr6, r6\n\tst.1\tr7, r6\n\tadd\t1, r5, r5\n\tsub!\tr5, r4, r6\n\tjump.lt\t@.BB2_648\n.BB2_681:\n\tsub.s!\t0, r3, r5\n\tjump.eq\t@.BB2_650\n\tshl.s\t5, r4, r4\n\tptr.add\tr1, r4, r1\n\tadd\tr2, r4, r4\n\tshl.s\t3, r3, r3\n\tld.1\tr4, r5\n\tshl\tr5, r3, r5\n\tshr\tr5, r3, r5\n\tld\tr1, r1\n\tsub\t256, r3, r3\n\tshr\tr1, r3, r1\n\tshl\tr1, r3, r1\n\tor\tr1, r5, r1\n\tst.1\tr4, r1\n.BB2_650:\n\tadd\t@CPI2_31[0], r0, r1\n\tadd\tstack[@returndatasize], r0, r3\n\tsub.s!\t@CPI2_31[0], r3, r4\n\tadd.ge\tr1, r0, r3\n\tsub.s!\t@CPI2_31[0], r2, r4\n\tadd.lt\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t96, r3, r2\n\tor\tr2, r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB2_183:\n\tld.1\t64, r2\n\tadd\tr2, r0, stack-[34]\n\tadd\t@CPI2_43[0], r0, r1\n\tst.1\tr2, r1\n\tadd\t4, r2, r1\n\tadd\tstack-[29], r0, r2\n\tnear_call\tr0, @abi_encode_uint256_stringliteral_230f, @DEFAULT_UNWIND\n\tadd\tstack-[34], r0, r4\n\tsub\tr1, r4, r1\n\tadd\t@CPI2_31[0], r0, r2\n\tsub.s!\t@CPI2_31[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tsub.s!\t@CPI2_31[0], r4, r3\n\tadd.lt\tr4, r0, r2\n\tshl.s\t64, r2, r2\n\tshl.s\t96, r1, r1\n\tor\tr1, r2, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB2_188:\n\tld.1\t64, r2\n\tadd\tr2, r0, stack-[34]\n\tadd\t@CPI2_43[0], r0, r1\n\tst.1\tr2, r1\n\tadd\t4, r2, r1\n\tadd\tstack-[29], r0, r2\n\tnear_call\tr0, @abi_encode_uint256_stringliteral_4f6a, @DEFAULT_UNWIND\n\tadd\tstack-[34], r0, r4\n\tsub\tr1, r4, r1\n\tadd\t@CPI2_31[0], r0, r2\n\tsub.s!\t@CPI2_31[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tsub.s!\t@CPI2_31[0], r4, r3\n\tadd.lt\tr4, r0, r2\n\tshl.s\t64, r2, r2\n\tshl.s\t96, r1, r1\n\tor\tr1, r2, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB2_202:\n\tld.1\t64, r2\n\tadd\tr2, r0, stack-[34]\n\tadd\t@CPI2_43[0], r0, r1\n\tst.1\tr2, r1\n\tadd\t4, r2, r1\n\tadd\tstack-[29], r0, r2\n\tnear_call\tr0, @abi_encode_uint256_stringliteral_b49b, @DEFAULT_UNWIND\n\tadd\tstack-[34], r0, r4\n\tsub\tr1, r4, r1\n\tadd\t@CPI2_31[0], r0, r2\n\tsub.s!\t@CPI2_31[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tsub.s!\t@CPI2_31[0], r4, r3\n\tadd.lt\tr4, r0, r2\n\tshl.s\t64, r2, r2\n\tshl.s\t96, r1, r1\n\tor\tr1, r2, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB2_207:\n\tld.1\t64, r2\n\tadd\tr2, r0, stack-[34]\n\tadd\t@CPI2_43[0], r0, r1\n\tst.1\tr2, r1\n\tadd\t4, r2, r1\n\tadd\tstack-[29], r0, r2\n\tnear_call\tr0, @abi_encode_uint256_stringliteral_15a8, @DEFAULT_UNWIND\n\tadd\tstack-[34], r0, r4\n\tsub\tr1, r4, r1\n\tadd\t@CPI2_31[0], r0, r2\n\tsub.s!\t@CPI2_31[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tsub.s!\t@CPI2_31[0], r4, r3\n\tadd.lt\tr4, r0, r2\n\tshl.s\t64, r2, r2\n\tshl.s\t96, r1, r1\n\tor\tr1, r2, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB2_375:\n\tld.1\t64, r2\n\tadd\tr2, r0, stack-[34]\n\tadd\t@CPI2_43[0], r0, r1\n\tst.1\tr2, r1\n\tadd\t4, r2, r1\n\tadd\tstack-[33], r0, r2\n\tnear_call\tr0, @abi_encode_uint256_stringliteral_1a6d, @DEFAULT_UNWIND\n\tadd\tstack-[34], r0, r4\n\tsub\tr1, r4, r1\n\tadd\t@CPI2_31[0], r0, r2\n\tsub.s!\t@CPI2_31[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tsub.s!\t@CPI2_31[0], r4, r3\n\tadd.lt\tr4, r0, r2\n\tshl.s\t64, r2, r2\n\tshl.s\t96, r1, r1\n\tor\tr1, r2, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB2_396:\n\tld.1\t64, r2\n\tadd\tr2, r0, stack-[34]\n\tadd\t@CPI2_43[0], r0, r1\n\tst.1\tr2, r1\n\tadd\t4, r2, r1\n\tadd\tstack-[9], r0, r2\n\tnear_call\tr0, @abi_encode_uint256_stringliteral_230f, @DEFAULT_UNWIND\n\tadd\tstack-[34], r0, r4\n\tsub\tr1, r4, r1\n\tadd\t@CPI2_31[0], r0, r2\n\tsub.s!\t@CPI2_31[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tsub.s!\t@CPI2_31[0], r4, r3\n\tadd.lt\tr4, r0, r2\n\tshl.s\t64, r2, r2\n\tshl.s\t96, r1, r1\n\tor\tr1, r2, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB2_399:\n\tld.1\t64, r2\n\tadd\tr2, r0, stack-[34]\n\tadd\t@CPI2_43[0], r0, r1\n\tst.1\tr2, r1\n\tadd\t4, r2, r1\n\tadd\tstack-[9], r0, r2\n\tnear_call\tr0, @abi_encode_uint256_stringliteral_4f6a, @DEFAULT_UNWIND\n\tadd\tstack-[34], r0, r4\n\tsub\tr1, r4, r1\n\tadd\t@CPI2_31[0], r0, r2\n\tsub.s!\t@CPI2_31[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tsub.s!\t@CPI2_31[0], r4, r3\n\tadd.lt\tr4, r0, r2\n\tshl.s\t64, r2, r2\n\tshl.s\t96, r1, r1\n\tor\tr1, r2, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB2_382:\n\tld.1\t64, r2\n\tadd\tr2, r0, stack-[34]\n\tadd\t@CPI2_43[0], r0, r1\n\tst.1\tr2, r1\n\tadd\t4, r2, r1\n\tadd\tstack-[33], r0, r2\n\tnear_call\tr0, @abi_encode_uint256_stringliteral_7d1d, @DEFAULT_UNWIND\n\tadd\tstack-[34], r0, r4\n\tsub\tr1, r4, r1\n\tadd\t@CPI2_31[0], r0, r2\n\tsub.s!\t@CPI2_31[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tsub.s!\t@CPI2_31[0], r4, r3\n\tadd.lt\tr4, r0, r2\n\tshl.s\t64, r2, r2\n\tshl.s\t96, r1, r1\n\tor\tr1, r2, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB2_415:\n\tld.1\t64, r2\n\tadd\tr2, r0, stack-[34]\n\tadd\t@CPI2_43[0], r0, r1\n\tst.1\tr2, r1\n\tadd\t4, r2, r1\n\tadd\tstack-[9], r0, r2\n\tnear_call\tr0, @abi_encode_uint256_stringliteral_15a8, @DEFAULT_UNWIND\n\tadd\tstack-[34], r0, r4\n\tsub\tr1, r4, r1\n\tadd\t@CPI2_31[0], r0, r2\n\tsub.s!\t@CPI2_31[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tsub.s!\t@CPI2_31[0], r4, r3\n\tadd.lt\tr4, r0, r2\n\tshl.s\t64, r2, r2\n\tshl.s\t96, r1, r1\n\tor\tr1, r2, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB2_411:\n\tld.1\t64, r2\n\tadd\tr2, r0, stack-[34]\n\tadd\t@CPI2_43[0], r0, r1\n\tst.1\tr2, r1\n\tadd\t4, r2, r1\n\tadd\tstack-[9], r0, r2\n\tnear_call\tr0, @abi_encode_uint256_stringliteral_b49b, @DEFAULT_UNWIND\n\tadd\tstack-[34], r0, r4\n\tsub\tr1, r4, r1\n\tadd\t@CPI2_31[0], r0, r2\n\tsub.s!\t@CPI2_31[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tsub.s!\t@CPI2_31[0], r4, r3\n\tadd.lt\tr4, r0, r2\n\tshl.s\t64, r2, r2\n\tshl.s\t96, r1, r1\n\tor\tr1, r2, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB2_632:\n\tld.1\t64, r1\n\tadd\tstack-[34], r0, r2\n\tptr.add\tstack[@ptr_return_data], r2, r2\n\tsub.s\t4, r3, r4\n\tand\t31, r4, r3\n\tshr.s!\t5, r4, r4\n\tjump.eq\t@.BB2_680\n\tadd\tr0, r0, r5\n.BB2_634:\n\tshl.s\t5, r5, r6\n\tadd\tr1, r6, r7\n\tptr.add\tr2, r6, r6\n\tld\tr6, r6\n\tst.1\tr7, r6\n\tadd\t1, r5, r5\n\tsub!\tr5, r4, r6\n\tjump.lt\t@.BB2_634\n.BB2_680:\n\tsub.s!\t0, r3, r5\n\tjump.eq\t@.BB2_636\n\tshl.s\t5, r4, r4\n\tptr.add\tr2, r4, r2\n\tadd\tr1, r4, r4\n\tshl.s\t3, r3, r3\n\tld.1\tr4, r5\n\tshl\tr5, r3, r5\n\tshr\tr5, r3, r5\n\tld\tr2, r2\n\tsub\t256, r3, r3\n\tshr\tr2, r3, r2\n\tshl\tr2, r3, r2\n\tor\tr2, r5, r2\n\tst.1\tr4, r2\n.BB2_636:\n\tadd\tstack[@returndatasize], r0, r4\n\tld.1\tr1, r3\n\tsub.s!\t@CPI2_34[0], r3, r2\n\tjump.gt\t@.BB2_643\n\tadd\t36, r3, r2\n\tsub!\tr2, r4, r2\n\tjump.gt\t@.BB2_643\n\tadd\tr3, r1, r2\n\tld.1\tr2, r5\n\tsub.s!\t@CPI2_34[0], r5, r6\n\tjump.gt\t@.BB2_643\n\tadd\tr2, r5, r6\n\tadd\tr1, r4, r4\n\tsub.s\t4, r4, r4\n\tadd\t32, r6, r6\n\tsub!\tr6, r4, r4\n\tjump.gt\t@.BB2_643\n\tadd\tr3, r5, r3\n\tadd\t63, r3, r3\n\tadd\tstack-[26], r0, r4\n\tand\tr3, r4, r3\n\tadd\tr3, r1, r5\n\tsub!\tr5, r3, r1\n\tadd\t0, r0, r1\n\tadd.lt\t1, r0, r1\n\tadd\tr5, r0, r4\n\tsub.s!\t@CPI2_34[0], r5, r3\n\tjump.gt\t@.BB2_44\n\tand!\t1, r1, r1\n\tjump.ne\t@.BB2_44\n\tst.1\t64, r4\n\tsub.s!\t0, r2, r1\n\tjump.eq\t@.BB2_643\n\tld.1\tr2, r1\n\tsub.s!\t0, r1, r1\n\tjump.eq\t@.BB2_651\n\tadd\t@CPI2_43[0], r0, r1\n\tadd\tr4, r0, stack-[34]\n\tst.1\tr4, r1\n\tadd\t4, r4, r1\n\tnear_call\tr0, @abi_encode_uint256_bytes_29546, @DEFAULT_UNWIND\n\tadd\tstack-[34], r0, r4\n\tsub\tr1, r4, r1\n\tadd\t@CPI2_31[0], r0, r2\n\tsub.s!\t@CPI2_31[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tsub.s!\t@CPI2_31[0], r4, r3\n\tadd.lt\tr4, r0, r2\n\tshl.s\t64, r2, r2\n\tshl.s\t96, r1, r1\n\tor\tr1, r2, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB2_553:\n\tsub.s!\t4, r4, r2\n\tjump.lt\t@.BB2_570\n\tld.1\t0, r2\n\tand\t@CPI2_40[0], r2, r2\n\tld\tr1, r1\n\tand\t@CPI2_41[0], r1, r1\n\tor\tr1, r2, r1\n\tst.1\t0, r1\n\tand\t@CPI2_41[0], r1, r1\n\tsub.s!\t@CPI2_42[0], r1, r1\n\tjump.ne\t@.BB2_567\n\tadd\tstack[@returndatasize], r0, r3\n\tsub.s!\t68, r3, r1\n\tjump.lt\t@.BB2_567\n\tld.1\t64, r1\n\tadd\t4, r0, r2\n\tptr.add\tstack[@ptr_return_data], r2, r2\n\tsub.s\t4, r3, r4\n\tand\t31, r4, r3\n\tshr.s!\t5, r4, r4\n\tjump.eq\t@.BB2_686\n\tadd\tr0, r0, r5\n.BB2_558:\n\tshl.s\t5, r5, r6\n\tadd\tr1, r6, r7\n\tptr.add\tr2, r6, r6\n\tld\tr6, r6\n\tst.1\tr7, r6\n\tadd\t1, r5, r5\n\tsub!\tr5, r4, r6\n\tjump.lt\t@.BB2_558\n.BB2_686:\n\tsub.s!\t0, r3, r5\n\tjump.eq\t@.BB2_560\n\tshl.s\t5, r4, r4\n\tptr.add\tr2, r4, r2\n\tadd\tr1, r4, r4\n\tshl.s\t3, r3, r3\n\tld.1\tr4, r5\n\tshl\tr5, r3, r5\n\tshr\tr5, r3, r5\n\tld\tr2, r2\n\tsub\t256, r3, r3\n\tshr\tr2, r3, r2\n\tshl\tr2, r3, r2\n\tor\tr2, r5, r2\n\tst.1\tr4, r2\n.BB2_560:\n\tadd\tstack[@returndatasize], r0, r4\n\tld.1\tr1, r3\n\tsub.s!\t@CPI2_34[0], r3, r2\n\tjump.gt\t@.BB2_567\n\tadd\t36, r3, r2\n\tsub!\tr2, r4, r2\n\tjump.gt\t@.BB2_567\n\tadd\tr3, r1, r2\n\tld.1\tr2, r5\n\tsub.s!\t@CPI2_34[0], r5, r6\n\tjump.gt\t@.BB2_567\n\tadd\tr2, r5, r6\n\tadd\tr1, r4, r4\n\tsub.s\t4, r4, r4\n\tadd\t32, r6, r6\n\tsub!\tr6, r4, r4\n\tjump.le\t@.BB2_564\n.BB2_567:\n\tptr.add\tstack[@ptr_return_data], r0, r1\n\tadd\tstack[@returndatasize], r0, r4\n.BB2_570:\n\tld.1\t64, r2\n\tand\t31, r4, r3\n\tshr.s!\t5, r4, r4\n\tjump.eq\t@.BB2_687\n\tadd\tr0, r0, r5\n.BB2_572:\n\tshl.s\t5, r5, r6\n\tadd\tr2, r6, r7\n\tptr.add\tr1, r6, r6\n\tld\tr6, r6\n\tst.1\tr7, r6\n\tadd\t1, r5, r5\n\tsub!\tr5, r4, r6\n\tjump.lt\t@.BB2_572\n.BB2_687:\n\tsub.s!\t0, r3, r5\n\tjump.eq\t@.BB2_574\n\tshl.s\t5, r4, r4\n\tptr.add\tr1, r4, r1\n\tadd\tr2, r4, r4\n\tshl.s\t3, r3, r3\n\tld.1\tr4, r5\n\tshl\tr5, r3, r5\n\tshr\tr5, r3, r5\n\tld\tr1, r1\n\tsub\t256, r3, r3\n\tshr\tr1, r3, r1\n\tshl\tr1, r3, r1\n\tor\tr1, r5, r1\n\tst.1\tr4, r1\n.BB2_574:\n\tadd\t@CPI2_31[0], r0, r1\n\tadd\tstack[@returndatasize], r0, r3\n\tsub.s!\t@CPI2_31[0], r3, r4\n\tadd.ge\tr1, r0, r3\n\tsub.s!\t@CPI2_31[0], r2, r4\n\tadd.lt\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t96, r3, r2\n\tor\tr2, r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB2_319:\n\tadd\tr0, r0, r2\n\tadd\tr0, r0, stack-[34]\n\tadd\tr0, r0, stack-[32]\n\tjump\t@.BB2_418\n.BB2_417:\n\tadd\tstack-[28], r0, r2\n\tadd\t1, r2, r2\n\tadd\tstack-[20], r0, r1\n\tsub!\tr2, r1, r1\n\tjump.ge\t@.BB2_421\n.BB2_418:\n\tadd\tr2, r0, stack-[28]\n\tshl.s\t5, r2, r1\n\tadd\tstack-[27], r0, r2\n\tadd\tr1, r2, r2\n\tptr.add\tstack[@ptr_calldata], r0, r1\n\tptr.add\tr1, r2, r2\n\tld\tr2, r2\n\tadd\tstack-[2], r0, r3\n\tadd\tstack[@calldatasize], r3, r3\n\tadd\t@CPI2_27[0], r0, r4\n\tsub!\tr2, r3, r5\n\tadd\t0, r0, r5\n\tadd.ge\tr4, r0, r5\n\tand\t@CPI2_27[0], r3, r3\n\tand\t@CPI2_27[0], r2, r6\n\tsub!\tr6, r3, r7\n\tadd.ge\t0, r0, r4\n\txor\tr6, r3, r3\n\tsub.s!\t@CPI2_27[0], r3, r3\n\tadd\tr5, r0, r3\n\tadd.eq\tr4, r0, r3\n\tsub.s!\t0, r3, r3\n\tjump.ne\t@.BB2_30\n\tadd\tstack-[27], r0, r3\n\tadd\tr2, r3, r2\n\tadd\tr2, r0, stack-[33]\n\tadd\t32, r2, r2\n\tptr.add\tr1, r2, r1\n\tld\tr1, r5\n\tsub.s!\t@CPI2_28[0], r5, r1\n\tjump.gt\t@.BB2_30\n\tadd\t@CPI2_31[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI2_31[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI2_58[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t2, r0, r3\n\tadd\t@CPI2_85[0], r0, r4\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB2_30\n\tadd\tstack[@calldatasize], r0, r2\n\tadd\tstack-[33], r0, r5\n\tsub\tr2, r5, r1\n\tsub.s\t31, r1, r4\n\tptr.add\tstack[@ptr_calldata], r0, r3\n\tptr.add\tr3, r5, r1\n\tld\tr1, r1\n\tadd\t@CPI2_27[0], r0, r5\n\tsub!\tr1, r4, r6\n\tadd\t0, r0, r6\n\tadd.ge\tr5, r0, r6\n\tand\t@CPI2_27[0], r4, r4\n\tand\t@CPI2_27[0], r1, r7\n\tsub!\tr7, r4, r8\n\tadd.ge\t0, r0, r5\n\txor\tr7, r4, r4\n\tsub.s!\t@CPI2_27[0], r4, r4\n\tadd\tr6, r0, r4\n\tadd.eq\tr5, r0, r4\n\tsub.s!\t0, r4, r4\n\tjump.ne\t@.BB2_30\n\tadd\tstack-[33], r0, r4\n\tadd\tr1, r4, r1\n\tptr.add\tr3, r1, r3\n\tld\tr3, r3\n\tadd\tr3, r0, stack-[30]\n\tsub.s!\t@CPI2_34[0], r3, r3\n\tjump.gt\t@.BB2_30\n\tadd\tstack-[30], r0, r3\n\tshl.s\t5, r3, r3\n\tsub\tr2, r3, r2\n\tadd\t32, r1, r5\n\tadd\t@CPI2_27[0], r0, r3\n\tsub!\tr5, r2, r4\n\tadd\t0, r0, r4\n\tadd.gt\tr3, r0, r4\n\tand\t@CPI2_27[0], r2, r2\n\tadd\tr5, r0, stack-[33]\n\tand\t@CPI2_27[0], r5, r5\n\tsub!\tr5, r2, r6\n\tadd.ge\t0, r0, r3\n\txor\tr5, r2, r2\n\tsub.s!\t@CPI2_27[0], r2, r2\n\tadd\tr4, r0, r2\n\tadd.eq\tr3, r0, r2\n\tsub.s!\t0, r2, r2\n\tjump.ne\t@.BB2_30\n\tadd\tstack-[30], r0, r2\n\tsub.s!\t0, r2, r2\n\tjump.eq\t@.BB2_417\n\tsub.s\t383, r0, r2\n\tsub\tr2, r1, r1\n\tadd\tr1, r0, stack-[29]\n\tadd\tr0, r0, r2\n.BB2_427:\n\tadd\tr2, r0, stack-[31]\n\tshl.s\t5, r2, r1\n\tadd\tstack-[33], r0, r2\n\tadd\tr1, r2, r1\n\tptr.add\tstack[@ptr_calldata], r1, r1\n\tld\tr1, r7\n\tadd\tstack-[29], r0, r1\n\tadd\tstack[@calldatasize], r1, r2\n\tadd\t@CPI2_27[0], r0, r3\n\tsub!\tr7, r2, r4\n\tadd\t0, r0, r4\n\tadd.ge\tr3, r0, r4\n\tand\t@CPI2_27[0], r2, r2\n\tand\t@CPI2_27[0], r7, r5\n\tsub!\tr5, r2, r6\n\tadd.ge\t0, r0, r3\n\txor\tr5, r2, r2\n\tsub.s!\t@CPI2_27[0], r2, r2\n\tadd\tr4, r0, r2\n\tadd.eq\tr3, r0, r2\n\tsub.s!\t0, r2, r2\n\tjump.ne\t@.BB2_30\n\tadd\tstack-[23], r0, r2\n\tld.1\tr2, r2\n\tadd\tstack-[34], r0, r1\n\tsub!\tr2, r1, r2\n\tjump.le\t@.BB2_99\n\tadd\tstack-[33], r0, r2\n\tadd\tr7, r2, r2\n\tshl.s\t5, r1, r4\n\tadd\tstack-[4], r0, r3\n\tadd\tr4, r3, r3\n\tld.1\tr3, r3\n\tadd\tr1, r0, stack-[34]\n\tnear_call\tr0, @fun_executeUserOp, @DEFAULT_UNWIND\n\tadd\tstack-[32], r0, r2\n\tadd\tr1, r2, r2\n\tsub!\tr2, r1, r1\n\tadd\t0, r0, r1\n\tadd.lt\t1, r0, r1\n\tand!\t1, r1, r1\n\tjump.ne\t@.BB2_38\n\tadd\tr2, r0, stack-[32]\n\tadd\tstack-[34], r0, r1\n\tadd\t1, r1, r1\n\tadd\tr1, r0, stack-[34]\n\tadd\tstack-[31], r0, r2\n\tadd\t1, r2, r2\n\tadd\tstack-[30], r0, r1\n\tsub!\tr2, r1, r1\n\tjump.lt\t@.BB2_427\n\tjump\t@.BB2_417\n.BB2_30:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB2_564:\n\tadd\tr3, r5, r3\n\tadd\t63, r3, r3\n\tadd\tstack-[28], r0, r4\n\tand\tr3, r4, r3\n\tadd\tr3, r1, r5\n\tsub!\tr5, r3, r1\n\tadd\t0, r0, r1\n\tadd.lt\t1, r0, r1\n\tadd\tr5, r0, r4\n\tsub.s!\t@CPI2_34[0], r5, r3\n\tjump.gt\t@.BB2_44\n\tand!\t1, r1, r1\n\tjump.ne\t@.BB2_44\n\tst.1\t64, r4\n\tsub.s!\t0, r2, r1\n\tjump.eq\t@.BB2_567\n\tld.1\tr2, r1\n\tsub.s!\t0, r1, r1\n\tjump.eq\t@.BB2_575\n\tadd\t@CPI2_43[0], r0, r1\n\tadd\tr4, r0, stack-[27]\n\tst.1\tr4, r1\n\tadd\t4, r4, r1\n\tnear_call\tr0, @abi_encode_uint256_bytes_29546, @DEFAULT_UNWIND\n\tadd\tstack-[27], r0, r4\n\tsub\tr1, r4, r1\n\tadd\t@CPI2_31[0], r0, r2\n\tsub.s!\t@CPI2_31[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tsub.s!\t@CPI2_31[0], r4, r3\n\tadd.lt\tr4, r0, r2\n\tshl.s\t64, r2, r2\n\tshl.s\t96, r1, r1\n\tor\tr1, r2, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB2_601:\n\tadd\t@CPI2_31[0], r0, r3\n\tadd\tstack-[32], r0, r5\n\tsub.s!\t@CPI2_31[0], r5, r4\n\tadd\tr3, r0, r4\n\tadd.lt\tr5, r0, r4\n\tshl.s\t96, r4, r4\n\tsub.s!\t@CPI2_31[0], r1, r5\n\tadd.ge\tr3, r0, r1\n\tshl.s\t64, r1, r1\n\tor\tr1, r4, r1\n\tsub.s!\t@CPI2_31[0], r2, r4\n\tadd.ge\tr3, r0, r2\n\tshl.s\t192, r2, r2\n\tor\tr2, r1, r1\n\tadd\tstack-[33], r0, r2\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand\t1, r2, r6\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tshr.s\t96, r1, r1\n\tand\t@CPI2_31[0], r1, stack[@returndatasize]\n\tand\t@CPI2_31[0], r1, r1\n.BB2_593:\n\tsub.s!\t0, r1, r2\n\tjump.ne\t@.BB2_594\n.BB2_591:\n\tadd\tstack-[29], r0, r1\n\tld.1\tr1, r2\n\tadd\tstack-[26], r0, r1\n\tld.1\tr1, r1\n\tadd\tstack-[27], r0, r3\n\tld.1\tr3, r3\n\tld.1\t64, r7\n\tadd\tr7, r0, stack-[33]\n\tadd\t@CPI2_52[0], r0, r4\n\tst.1\tr7, r4\n\tand\t@CPI2_32[0], r3, r4\n\tand\t@CPI2_32[0], r1, r5\n\tadd\t4, r7, r1\n\tadd\tstack-[34], r0, r3\n\tadd\tstack-[21], r0, r7\n\tnear_call\tr0, @abi_encode_uint256_uint256_uint48_uint48_bool_bytes, @DEFAULT_UNWIND\n\tadd\tstack-[33], r0, r4\n\tsub\tr1, r4, r1\n\tadd\t@CPI2_31[0], r0, r2\n\tsub.s!\t@CPI2_31[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tsub.s!\t@CPI2_31[0], r4, r3\n\tadd.lt\tr4, r0, r2\n\tshl.s\t64, r2, r2\n\tshl.s\t96, r1, r1\n\tor\tr1, r2, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB2_594:\n\tsub.s!\t@CPI2_34[0], r1, r2\n\tjump.gt\t@.BB2_44\n\tadd\t63, r1, r2\n\tadd\tstack-[28], r0, r3\n\tand\tr2, r3, r2\n\tld.1\t64, r3\n\tadd\tr3, r2, r2\n\tadd\tr3, r0, stack-[21]\n\tsub!\tr2, r3, r3\n\tadd\t0, r0, r3\n\tadd.lt\t1, r0, r3\n\tsub.s!\t@CPI2_34[0], r2, r4\n\tjump.gt\t@.BB2_44\n\tand!\t1, r3, r3\n\tjump.ne\t@.BB2_44\n\tst.1\t64, r2\n\tadd\tstack-[21], r0, r2\n\tst.1.inc\tr2, r1, r1\n\tptr.add\tstack[@ptr_return_data], r0, r2\n\tadd\tstack[@returndatasize], r0, r4\n\tand\t31, r4, r3\n\tshr.s!\t5, r4, r4\n\tjump.eq\t@.BB2_684\n\tadd\tr0, r0, r5\n.BB2_599:\n\tshl.s\t5, r5, r7\n\tadd\tr1, r7, r8\n\tptr.add\tr2, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r5, r5\n\tsub!\tr5, r4, r7\n\tjump.lt\t@.BB2_599\n.BB2_684:\n\tsub.s!\t0, r3, r5\n\tjump.eq\t@.BB2_591\n\tshl.s\t5, r4, r4\n\tptr.add\tr2, r4, r2\n\tadd\tr1, r4, r1\n\tshl.s\t3, r3, r3\n\tld.1\tr1, r4\n\tshl\tr4, r3, r4\n\tshr\tr4, r3, r4\n\tld\tr2, r2\n\tsub\t256, r3, r3\n\tshr\tr2, r3, r2\n\tshl\tr2, r3, r2\n\tor\tr2, r4, r2\n\tst.1\tr1, r2\n\tjump\t@.BB2_591\n.BB2_673:\n\tadd\tr7, r0, r1\n\tadd\tr1, r0, stack-[31]\n\tnear_call\tr0, @fun_getStakeInfo, @DEFAULT_UNWIND\n\tadd\tr1, r0, stack-[30]\n\tnear_call\tr0, @allocate_memory_19820, @DEFAULT_UNWIND\n\tadd\tr1, r0, r6\n\tadd\t32, r6, r1\n\tadd\tstack-[30], r0, r2\n\tst.1\tr1, r2\n\tadd\tstack-[31], r0, r1\n\tst.1\tr6, r1\n\tadd\t@CPI2_48[0], r0, r1\n\tld.1\t64, r2\n\tadd\tr2, r0, stack-[31]\n\tst.1\tr2, r1\n\tadd\t4, r2, r1\n\tadd\tstack-[32], r0, r2\n\tadd\tstack-[24], r0, r3\n\tadd\tstack-[33], r0, r4\n\tadd\tstack-[34], r0, r5\n\tnear_call\tr0, @abi_encode_struct_ReturnInfo_struct_StakeInfo_struct_StakeInfo_struct_StakeInfo_struct_AggregatorStakeInfo, @DEFAULT_UNWIND\n\tadd\tstack-[31], r0, r4\n\tsub\tr1, r4, r1\n\tadd\t@CPI2_31[0], r0, r2\n\tsub.s!\t@CPI2_31[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tsub.s!\t@CPI2_31[0], r4, r3\n\tadd.lt\tr4, r0, r2\n\tshl.s\t64, r2, r2\n\tshl.s\t96, r1, r1\n\tor\tr1, r2, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end2:\n\nmapping_index_access_mapping_uint192_uint256_of_uint192:\n.func_begin3:\n\tand\t@CPI3_0[0], r2, r2\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tadd\t@CPI3_1[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI3_1[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI3_2[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB3_1\n\tld\tr1, r1\n\tret\n.BB3_1:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end3:\n\nfinalize_allocation_19805:\n.func_begin4:\n\tsub.s!\t@CPI4_0[0], r1, r2\n\tjump.ge\t@.BB4_1\n\tadd\t160, r1, r1\n\tst.1\t64, r1\n\tret\n.BB4_1:\n\tadd\t@CPI4_1[0], r0, r1\n\tst.1\t0, r1\n\tadd\t65, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI4_2[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end4:\n\nallocate_memory_19820:\n.func_begin5:\n\tld.1\t64, r1\n\tsub.s!\t@CPI5_0[0], r1, r2\n\tjump.ge\t@.BB5_1\n\tadd\t64, r1, r2\n\tst.1\t64, r2\n\tret\n.BB5_1:\n\tadd\t@CPI5_1[0], r0, r1\n\tst.1\t0, r1\n\tadd\t65, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI5_2[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end5:\n\nabi_decode_bytes_calldata:\n.func_begin6:\n\tadd\t31, r1, r3\n\tadd\t@CPI6_0[0], r0, r4\n\tsub!\tr3, r2, r5\n\tadd\t0, r0, r5\n\tadd.lt\tr4, r0, r5\n\tand\t@CPI6_0[0], r2, r6\n\tand\t@CPI6_0[0], r3, r3\n\tsub!\tr3, r6, r7\n\tadd.le\t0, r0, r4\n\txor\tr3, r6, r3\n\tsub.s!\t@CPI6_0[0], r3, r3\n\tadd\tr5, r0, r3\n\tadd.eq\tr4, r0, r3\n\tsub.s!\t0, r3, r3\n\tjump.eq\t@.BB6_1\n\tptr.add\tstack[@ptr_calldata], r1, r3\n\tld\tr3, r3\n\tsub.s!\t@CPI6_1[0], r3, r4\n\tjump.gt\t@.BB6_1\n\tadd\t32, r1, r1\n\tadd\tr1, r3, r4\n\tsub!\tr4, r2, r2\n\tjump.gt\t@.BB6_1\n\tadd\tr3, r0, r2\n\tret\n.BB6_1:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end6:\n\nabi_encode_struct_DepositInfo:\n.func_begin7:\n\tld.1.inc\tr2, r3, r4\n\tand\t@CPI7_0[0], r3, r3\n\tst.1.inc\tr1, r3, r3\n\tld.1\tr4, r4\n\tsub.s!\t0, r4, r4\n\tadd\t0, r0, r4\n\tadd.ne\t1, r0, r4\n\tst.1\tr3, r4\n\tadd\t64, r2, r3\n\tld.1\tr3, r3\n\tand\t@CPI7_0[0], r3, r3\n\tadd\t64, r1, r4\n\tst.1\tr4, r3\n\tadd\t96, r2, r3\n\tld.1\tr3, r3\n\tand\t@CPI7_1[0], r3, r3\n\tadd\t96, r1, r4\n\tst.1\tr4, r3\n\tadd\t128, r2, r2\n\tld.1\tr2, r2\n\tand\t@CPI7_2[0], r2, r2\n\tadd\t128, r1, r3\n\tst.1\tr3, r2\n\tadd\t160, r1, r1\n\tret\n.func_end7:\n\nabi_decode_struct_UserOperation_calldata_19808:\n.func_begin8:\n\tsub.s\t4, r1, r2\n\tadd\t@CPI8_0[0], r0, r3\n\tsub.s!\t31, r2, r4\n\tadd\t0, r0, r4\n\tadd.gt\tr3, r0, r4\n\tand\t@CPI8_0[0], r2, r2\n\tsub.s!\t0, r2, r5\n\tadd.ge\t0, r0, r3\n\tsub.s!\t@CPI8_0[0], r2, r2\n\tadd\tr4, r0, r2\n\tadd.eq\tr3, r0, r2\n\tsub.s!\t0, r2, r2\n\tjump.eq\t@.BB8_1\n\tadd\t4, r0, r2\n\tptr.add\tstack[@ptr_calldata], r2, r2\n\tld\tr2, r2\n\tsub.s!\t@CPI8_1[0], r2, r3\n\tjump.gt\t@.BB8_1\n\tadd\t4, r2, r2\n\tsub\tr1, r2, r1\n\tadd\t@CPI8_0[0], r0, r3\n\tsub.s!\t352, r1, r4\n\tadd\t0, r0, r4\n\tadd.lt\tr3, r0, r4\n\tand\t@CPI8_0[0], r1, r1\n\tsub.s!\t0, r1, r5\n\tadd.le\t0, r0, r3\n\tsub.s!\t@CPI8_0[0], r1, r1\n\tadd\tr4, r0, r1\n\tadd.eq\tr3, r0, r1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB8_1\n\tadd\tr2, r0, r1\n\tret\n.BB8_1:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end8:\n\nextract_returndata:\n.func_begin9:\n\tadd\t96, r0, r1\n\tadd!\tstack[@returndatasize], r0, r2\n\tjump.eq\t@.BB9_1\n\tsub.s!\t@CPI9_0[0], r2, r1\n\tjump.ge\t@.BB9_3\n\tadd\t63, r2, r1\n\tsub.s\t32, r0, r3\n\tand\tr1, r3, r3\n\tld.1\t64, r1\n\tadd\tr1, r3, r3\n\tsub!\tr3, r1, r4\n\tadd\t0, r0, r4\n\tadd.lt\t1, r0, r4\n\tsub.s!\t@CPI9_1[0], r3, r5\n\tjump.gt\t@.BB9_3\n\tand!\t1, r4, r4\n\tjump.ne\t@.BB9_3\n\tst.1\t64, r3\n\tst.1.inc\tr1, r2, r2\n\tptr.add\tstack[@ptr_return_data], r0, r3\n\tadd\tstack[@returndatasize], r0, r5\n\tand\t31, r5, r4\n\tshr.s!\t5, r5, r5\n\tjump.eq\t@.BB9_10\n\tadd\tr0, r0, r6\n.BB9_8:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr3, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB9_8\n.BB9_10:\n\tsub.s!\t0, r4, r6\n\tjump.eq\t@.BB9_1\n\tshl.s\t5, r5, r5\n\tptr.add\tr3, r5, r3\n\tadd\tr2, r5, r2\n\tshl.s\t3, r4, r4\n\tld.1\tr2, r5\n\tshl\tr5, r4, r5\n\tshr\tr5, r4, r5\n\tld\tr3, r3\n\tsub\t256, r4, r4\n\tshr\tr3, r4, r3\n\tshl\tr3, r4, r3\n\tor\tr3, r5, r3\n\tst.1\tr2, r3\n.BB9_1:\n\tret\n.BB9_3:\n\tadd\t@CPI9_2[0], r0, r1\n\tst.1\t0, r1\n\tadd\t65, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI9_3[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end9:\n\nfun_compensate:\n.func_begin10:\n\tadd\tr2, r0, r3\n\tand!\t@CPI10_0[0], r1, r4\n\tjump.eq\t@.BB10_1\n\tcontext.gas_left\tr1\n\tsub.s!\t4, r4, r2\n\tjump.ne\t@.BB10_3\n\tadd\t1, r0, r2\n\tadd\tstack[@returndatasize], r0, r1\n\tjump\t@.BB10_5\n.BB10_3:\n\tadd\t@CPI10_1[0], r0, r2\n\tsub.s!\t@CPI10_1[0], r1, r5\n\tadd.ge\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tsub.s!\t0, r3, r2\n\tjump.eq\t@.BB10_15\n\tor\t@CPI10_2[0], r1, r1\n\tadd\t32777, r0, r2\n\tadd\tr0, r0, r5\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tshr.s\t96, r1, r1\n\tand\t@CPI10_1[0], r1, stack[@returndatasize]\n\tand\t@CPI10_1[0], r1, r1\n\tjump\t@.BB10_5\n.BB10_15:\n\tadd\tr4, r0, r2\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tshr.s\t96, r1, r1\n\tand\t@CPI10_1[0], r1, stack[@returndatasize]\n\tand\t@CPI10_1[0], r1, r1\n.BB10_5:\n\tsub.s!\t0, r1, r3\n\tjump.eq\t@.BB10_14\n\tsub.s!\t@CPI10_3[0], r1, r3\n\tjump.ge\t@.BB10_7\n\tadd\t63, r1, r3\n\tsub.s\t32, r0, r4\n\tand\tr3, r4, r4\n\tld.1\t64, r3\n\tadd\tr3, r4, r4\n\tsub!\tr4, r3, r5\n\tadd\t0, r0, r5\n\tadd.lt\t1, r0, r5\n\tsub.s!\t@CPI10_4[0], r4, r6\n\tjump.gt\t@.BB10_7\n\tand!\t1, r5, r5\n\tjump.ne\t@.BB10_7\n\tst.1\t64, r4\n\tst.1.inc\tr3, r1, r1\n\tptr.add\tstack[@ptr_return_data], r0, r3\n\tadd\tstack[@returndatasize], r0, r5\n\tand\t31, r5, r4\n\tshr.s!\t5, r5, r5\n\tjump.eq\t@.BB10_19\n\tadd\tr0, r0, r6\n.BB10_12:\n\tshl.s\t5, r6, r7\n\tadd\tr1, r7, r8\n\tptr.add\tr3, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB10_12\n.BB10_19:\n\tsub.s!\t0, r4, r6\n\tjump.eq\t@.BB10_14\n\tshl.s\t5, r5, r5\n\tptr.add\tr3, r5, r3\n\tadd\tr1, r5, r1\n\tshl.s\t3, r4, r4\n\tld.1\tr1, r5\n\tshl\tr5, r4, r5\n\tshr\tr5, r4, r5\n\tld\tr3, r3\n\tsub\t256, r4, r4\n\tshr\tr3, r4, r3\n\tshl\tr3, r4, r3\n\tor\tr3, r5, r3\n\tst.1\tr1, r3\n.BB10_14:\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB10_17\n\tret\n.BB10_7:\n\tadd\t@CPI10_5[0], r0, r1\n\tst.1\t0, r1\n\tadd\t65, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI10_6[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB10_1:\n\tld.1\t64, r1\n\tadd\t68, r1, r2\n\tadd\t@CPI10_10[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t24, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI10_8[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI10_1[0], r0, r2\n\tsub.s!\t@CPI10_1[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI10_9[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB10_17:\n\tld.1\t64, r1\n\tadd\t68, r1, r2\n\tadd\t@CPI10_7[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t31, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI10_8[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI10_1[0], r0, r2\n\tsub.s!\t@CPI10_1[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI10_9[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end10:\n\nabi_encode_uint256_stringliteral_eb8a_29533:\n.func_begin11:\n\tadd\t96, r1, r2\n\tadd\t@CPI11_0[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t64, r1, r2\n\tadd\t15, r0, r3\n\tst.1\tr2, r3\n\tadd\t32, r1, r2\n\tadd\t64, r0, r3\n\tst.1\tr2, r3\n\tst.1\tr1, r0\n\tadd\t128, r1, r1\n\tret\n.func_end11:\n\nabi_encode_uint256_stringliteral_eb8a:\n.func_begin12:\n\tadd\t96, r1, r3\n\tadd\t@CPI12_0[0], r0, r4\n\tst.1\tr3, r4\n\tadd\t64, r1, r3\n\tadd\t15, r0, r4\n\tst.1\tr3, r4\n\tadd\t32, r1, r3\n\tadd\t64, r0, r4\n\tst.1\tr3, r4\n\tst.1\tr1, r2\n\tadd\t128, r1, r1\n\tret\n.func_end12:\n\nfun_executeUserOp_19815:\n.func_begin13:\n\tnop\tstack+=[13]\n\tadd\tr2, r0, r12\n\tcontext.gas_left\tr13\n\tcontext.get_context_u128\tr2\n\tsub.s!\t25, r2, r2\n\tjump.le\t@.BB13_1\n\tadd\t96, r12, r2\n\tld.1\tr2, r11\n\tcontext.get_context_u128\tr3\n\tsub.s!\t26, r3, r3\n\tjump.le\t@.BB13_3\n\tadd\tstack[@calldatasize], r0, r3\n\tsub\tr3, r1, r4\n\tsub.s\t31, r4, r6\n\tadd\t96, r1, r5\n\tptr.add\tstack[@ptr_calldata], r0, r4\n\tptr.add\tr4, r5, r5\n\tld\tr5, r5\n\tadd\t@CPI13_0[0], r0, r7\n\tsub!\tr5, r6, r8\n\tadd\t0, r0, r8\n\tadd.lt\tr7, r0, r8\n\tand\t@CPI13_0[0], r6, r6\n\tand\t@CPI13_0[0], r5, r9\n\tsub!\tr9, r6, r10\n\tadd.le\t0, r0, r7\n\txor\tr9, r6, r6\n\tsub.s!\t@CPI13_0[0], r6, r6\n\tadd\tr8, r0, r6\n\tadd.eq\tr7, r0, r6\n\tsub.s!\t0, r6, r6\n\tjump.eq\t@.BB13_5\n\tadd\tr5, r1, r5\n\tptr.add\tr4, r5, r1\n\tld\tr1, r1\n\tsub.s!\t@CPI13_1[0], r1, r4\n\tjump.gt\t@.BB13_5\n\tsub\tr3, r1, r3\n\tadd\t32, r5, r6\n\tadd\t@CPI13_0[0], r0, r4\n\tsub!\tr6, r3, r5\n\tadd\t0, r0, r5\n\tadd.gt\tr4, r0, r5\n\tand\t@CPI13_0[0], r3, r3\n\tand\t@CPI13_0[0], r6, r7\n\tsub!\tr7, r3, r8\n\tadd.ge\t0, r0, r4\n\txor\tr7, r3, r3\n\tsub.s!\t@CPI13_0[0], r3, r3\n\tadd\tr5, r0, r3\n\tadd.eq\tr4, r0, r3\n\tsub.s!\t0, r3, r3\n\tjump.ne\t@.BB13_5\n\tld.1\t64, r14\n\tadd\t@CPI13_2[0], r0, r3\n\tst.1\tr14, r3\n\tadd\t452, r14, r3\n\tst.1\tr3, r1\n\tadd\t4, r14, r3\n\tadd\t448, r0, r4\n\tst.1\tr3, r4\n\tand\t31, r1, r5\n\tadd\t484, r14, r4\n\tptr.add\tstack[@ptr_calldata], r6, r6\n\tshr.s!\t5, r1, r7\n\tjump.eq\t@.BB13_83\n\tadd\tr0, r0, r8\n.BB13_10:\n\tshl.s\t5, r8, r9\n\tadd\tr4, r9, r10\n\tptr.add\tr6, r9, r9\n\tld\tr9, r9\n\tst.1\tr10, r9\n\tadd\t1, r8, r8\n\tsub!\tr8, r7, r9\n\tjump.lt\t@.BB13_10\n.BB13_83:\n\tsub.s!\t0, r5, r8\n\tjump.eq\t@.BB13_12\n\tshl.s\t5, r7, r7\n\tptr.add\tr6, r7, r6\n\tadd\tr4, r7, r7\n\tshl.s\t3, r5, r5\n\tld.1\tr7, r8\n\tshl\tr8, r5, r8\n\tshr\tr8, r5, r8\n\tld\tr6, r6\n\tsub\t256, r5, r5\n\tshr\tr6, r5, r6\n\tshl\tr6, r5, r5\n\tor\tr5, r8, r5\n\tst.1\tr7, r5\n.BB13_12:\n\tadd\tr4, r1, r5\n\tst.1\tr5, r0\n\tld.1.inc\tr12, r5, r9\n\tld.1.inc\tr5, r6, r7\n\tand\t@CPI13_3[0], r6, r6\n\tadd\t36, r14, r8\n\tst.1\tr8, r6\n\tld.1\tr7, r6\n\tadd\t68, r14, r7\n\tst.1\tr7, r6\n\tadd\t64, r5, r6\n\tld.1\tr6, r6\n\tadd\t100, r14, r7\n\tst.1\tr7, r6\n\tadd\t96, r5, r6\n\tld.1\tr6, r6\n\tadd\t132, r14, r7\n\tst.1\tr7, r6\n\tadd\t128, r5, r6\n\tld.1\tr6, r6\n\tadd\t164, r14, r7\n\tst.1\tr7, r6\n\tadd\t160, r5, r6\n\tld.1\tr6, r6\n\tand\t@CPI13_3[0], r6, r6\n\tadd\t196, r14, r7\n\tst.1\tr7, r6\n\tadd\t192, r5, r6\n\tld.1\tr6, r6\n\tadd\t228, r14, r7\n\tst.1\tr7, r6\n\tadd\t224, r5, r5\n\tld.1\tr5, r5\n\tadd\t260, r14, r6\n\tst.1\tr6, r5\n\tadd\t292, r14, r5\n\tadd\tr9, r0, stack-[11]\n\tld.1\tr9, r6\n\tst.1\tr5, r6\n\tadd\t324, r14, r5\n\tadd\t64, r12, r7\n\tld.1\tr7, r6\n\tst.1\tr5, r6\n\tld.1\tr2, r2\n\tadd\t356, r14, r5\n\tst.1\tr5, r2\n\tadd\t31, r1, r1\n\tsub.s\t32, r0, r6\n\tand\tr1, r6, r1\n\tadd\tr4, r1, r1\n\tsub\tr1, r3, r2\n\tadd\t128, r12, r8\n\tadd\t420, r14, r3\n\tld.1\tr8, r4\n\tst.1\tr3, r2\n\tadd\t388, r14, r2\n\tst.1\tr2, r4\n\tld.1\tr11, r3\n\tst.1.inc\tr1, r3, r1\n\tsub.s!\t0, r3, r2\n\tjump.eq\t@.BB13_15\n\tadd\tr0, r0, r2\n.BB13_14:\n\tadd\tr2, r1, r4\n\tadd\t32, r2, r2\n\tadd\tr2, r11, r5\n\tld.1\tr5, r5\n\tst.1\tr4, r5\n\tsub!\tr2, r3, r4\n\tjump.lt\t@.BB13_14\n.BB13_15:\n\tadd\tr3, r1, r2\n\tst.1\tr2, r0\n\tcontext.gas_left\tr4\n\tcontext.this\tr2\n\tsub.s!\t4, r2, r5\n\tjump.ne\t@.BB13_17\n\tcontext.sp\tr7\n\tsub.s\t13, r7, r7\n\tmul\t32, r7, r7, r0\n\tadd\tstack[@returndatasize], r0, r3\n\tsub.s!\t32, r3, r2\n\tadd\t32, r0, r4\n\tadd.lt\tr3, r0, r4\n\tadd\t0, r0, stack-[13]\n\tjump\t@.BB13_22\n.BB13_17:\n\tadd\tr8, r0, stack-[5]\n\tadd\tr13, r0, stack-[8]\n\tadd\tr12, r0, stack-[9]\n\tadd\tr7, r0, stack-[6]\n\tadd\tr11, r0, stack-[10]\n\tadd\t31, r3, r3\n\tadd\tr6, r0, stack-[4]\n\tand\tr3, r6, r3\n\tsub\tr1, r14, r1\n\tadd\tr1, r3, r1\n\tadd\t@CPI13_4[0], r0, r3\n\tsub.s!\t@CPI13_4[0], r1, r5\n\tadd.ge\tr3, r0, r1\n\tshl.s\t96, r1, r1\n\tsub.s!\t@CPI13_4[0], r14, r5\n\tadd\tr3, r0, r5\n\tadd.lt\tr14, r0, r5\n\tshl.s\t64, r5, r5\n\tor\tr1, r5, r1\n\tsub.s!\t@CPI13_4[0], r4, r5\n\tadd.lt\tr4, r0, r3\n\tshl.s\t192, r3, r3\n\tor\tr3, r1, r1\n\tadd\tr14, r0, stack-[7]\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tadd\tstack-[7], r0, r14\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI13_4[0], r3, r3\n\tsub.s!\t32, r3, r4\n\tadd\t32, r0, r4\n\tadd.lt\tr3, r0, r4\n\tand\t31, r4, r5\n\tshr.s!\t5, r4, r6\n\tjump.eq\t@.BB13_82\n\tadd\tr0, r0, r7\n.BB13_19:\n\tshl.s\t5, r7, r8\n\tadd\tr14, r8, r9\n\tptr.add\tr1, r8, r8\n\tld\tr8, r8\n\tst.1\tr9, r8\n\tadd\t1, r7, r7\n\tsub!\tr7, r6, r8\n\tjump.lt\t@.BB13_19\n.BB13_82:\n\tsub.s!\t0, r5, r7\n\tadd\tstack-[8], r0, r9\n\tjump.eq\t@.BB13_21\n\tshl.s\t5, r6, r6\n\tptr.add\tr1, r6, r7\n\tadd\tr14, r6, r6\n\tshl.s\t3, r5, r5\n\tld.1\tr6, r8\n\tshl\tr8, r5, r8\n\tshr\tr8, r5, r8\n\tld\tr7, r7\n\tsub\t256, r5, r5\n\tshr\tr7, r5, r7\n\tshl\tr7, r5, r5\n\tor\tr5, r8, r5\n\tst.1\tr6, r5\n.BB13_21:\n\tadd\tr3, r0, stack[@returndatasize]\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tcontext.sp\tr7\n\tsub.s\t12, r7, r7\n\tmul\t32, r7, r7, r0\n\tadd\t0, r0, stack-[12]\n\tand!\t1, r2, r2\n\tadd\tstack-[10], r0, r5\n\tadd\tstack-[9], r0, r6\n\tjump.eq\t@.BB13_29\n.BB13_22:\n\tadd\t31, r4, r2\n\tand\t96, r2, r4\n\tadd\tr4, r14, r2\n\tsub!\tr2, r4, r4\n\tadd\t0, r0, r4\n\tadd.lt\t1, r0, r4\n\tsub.s!\t@CPI13_1[0], r2, r5\n\tjump.gt\t@.BB13_24\n\tand!\t1, r4, r4\n\tjump.ne\t@.BB13_24\n\tst.1\t64, r2\n\tsub.s!\t32, r3, r2\n\tjump.lt\t@.BB13_5\n\tld.1\tr14, r1\n\tdiv.s\t32, r7, r2, r0\n\tadd\tr1, r0, stack[r2]\n\tcontext.get_context_u128\tr2\n\tsub.s!\t27, r2, r2\n\tjump.gt\t@.BB13_28\n\tld.1\t64, r1\n\tadd\t68, r1, r2\n\tadd\t@CPI13_28[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t16, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI13_13[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI13_4[0], r0, r2\n\tsub.s!\t@CPI13_4[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI13_22[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB13_29:\n\tcontext.get_context_u128\tr1\n\tsub.s!\t28, r1, r1\n\tjump.le\t@.BB13_30\n\tadd\tstack[@returndatasize], r0, r1\n\tsub.s!\t32, r1, r1\n\tjump.lt\t@.BB13_5\n\tptr.add\tstack[@ptr_return_data], r0, r1\n\tadd\tr0, r0, r2\n.BB13_33:\n\tshl.s\t5, r2, r3\n\tptr.add\tr1, r3, r4\n\tld\tr4, r4\n\tst.1\tr3, r4\n\tadd!\t1, r2, r2\n\tadd\t0, r0, r3\n\tadd.eq\t1, r0, r3\n\tand!\t1, r3, r3\n\tjump.ne\t@.BB13_33\n\tld.1\t0, r1\n\tsub.s!\t@CPI13_5[0], r1, r1\n\tadd\tstack-[6], r0, r3\n\tjump.eq\t@.BB13_35\n\tcontext.get_context_u128\tr1\n\tsub.s!\t29, r1, r1\n\tjump.le\t@.BB13_37\n\tcontext.gas_left\tr1\n\tsub!\tr9, r1, r2\n\tjump.lt\t@.BB13_39\n\tsub\tr9, r1, r1\n\tadd\tstack-[5], r0, r2\n\tld.1\tr2, r2\n\tadd\tr2, r1, r8\n\tsub!\tr8, r2, r1\n\tadd\t0, r0, r1\n\tadd.lt\t1, r0, r1\n\tand!\t1, r1, r1\n\tjump.ne\t@.BB13_39\n\tcontext.gas_left\tr4\n\tld.1\tr6, r2\n\tadd\t224, r2, r1\n\tld.1\tr1, r6\n\tadd\t192, r2, r1\n\tld.1\tr1, r9\n\tsub!\tr9, r6, r1\n\tadd\tr2, r0, stack-[9]\n\tjump.eq\t@.BB13_44\n\tadd\tr6, r0, stack-[7]\n\tadd\tr9, r0, stack-[5]\n\tadd\tr4, r0, stack-[3]\n\tadd\tr8, r0, stack-[8]\n\tadd\t@CPI13_6[0], r0, r1\n\tst.2\t0, r1\n\tadd\t@CPI13_4[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI13_4[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI13_7[0], r1, r1\n\tadd\t32779, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tstack-[10], r0, r5\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB13_5\n\tld\tr1, r1\n\tadd\tstack-[7], r0, r2\n\tadd\tr1, r2, r1\n\tadd\tstack-[5], r0, r9\n\tsub!\tr9, r1, r2\n\tadd.ge\tr1, r0, r9\n\tadd\tstack-[6], r0, r3\n\tadd\tstack-[9], r0, r2\n\tadd\tstack-[8], r0, r8\n\tadd\tstack-[3], r0, r4\n.BB13_44:\n\tadd\t160, r2, r1\n\tadd\tr1, r0, stack-[7]\n\tld.1\tr1, r1\n\tand!\t@CPI13_3[0], r1, r6\n\tjump.eq\t@.BB13_72\n\tld.1\tr5, r1\n\tsub.s!\t0, r1, r1\n\tjump.eq\t@.BB13_45\n\tadd\tr9, r0, stack-[5]\n\tadd\tr4, r0, stack-[3]\n\tadd\tr8, r0, stack-[8]\n\tadd\t96, r2, r1\n\tld.1\tr1, r1\n\tadd\tr1, r0, stack-[1]\n\tadd\t@CPI13_8[0], r0, r1\n\tst.2\t0, r1\n\tadd\tr6, r0, stack-[2]\n\tst.2\t4, r6\n\tadd\t@CPI13_4[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI13_4[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI13_9[0], r1, r1\n\tadd\t32770, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tstack-[10], r0, r7\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB13_5\n\tld\tr1, r1\n\tsub.s!\t0, r1, r1\n\tjump.eq\t@.BB13_5\n\tld.1\t64, r10\n\tadd\t36, r10, r1\n\tadd\t96, r0, r2\n\tst.1\tr1, r2\n\tadd\t@CPI13_10[0], r0, r1\n\tst.1\tr10, r1\n\tadd\t4, r10, r1\n\tadd\t2, r0, r2\n\tst.1\tr1, r2\n\tld.1\tr7, r1\n\tadd\t100, r10, r2\n\tst.1\tr2, r1\n\tadd\tstack-[8], r0, r8\n\tadd\tstack-[5], r0, r9\n\tmul\tr9, r8, r2, r3\n\tadd\t132, r10, r3\n\tsub.s!\t0, r1, r4\n\tjump.eq\t@.BB13_52\n\tadd\tr0, r0, r4\n.BB13_51:\n\tadd\tr4, r3, r5\n\tadd\t32, r4, r4\n\tadd\tr4, r7, r6\n\tld.1\tr6, r6\n\tst.1\tr5, r6\n\tsub!\tr4, r1, r5\n\tjump.lt\t@.BB13_51\n.BB13_52:\n\tadd\tr1, r3, r3\n\tst.1\tr3, r0\n\tadd\t68, r10, r3\n\tst.1\tr3, r2\n\tadd\tstack-[2], r0, r6\n\tsub.s!\t4, r6, r2\n\tjump.eq\t@.BB13_54\n\tadd\t31, r1, r1\n\tadd\tstack-[4], r0, r2\n\tand\tr1, r2, r1\n\tadd\t@CPI13_4[0], r0, r2\n\tsub.s!\t@CPI13_4[0], r10, r3\n\tadd\tr2, r0, r3\n\tadd.lt\tr10, r0, r3\n\tshl.s\t64, r3, r3\n\tadd\t132, r1, r1\n\tsub.s!\t@CPI13_4[0], r1, r4\n\tadd.ge\tr2, r0, r1\n\tshl.s\t96, r1, r1\n\tor\tr1, r3, r1\n\tadd\tstack-[1], r0, r4\n\tsub.s!\t@CPI13_4[0], r4, r3\n\tadd.lt\tr4, r0, r2\n\tshl.s\t192, r2, r2\n\tor\tr1, r2, r1\n\tadd\tr6, r0, r2\n\tadd\tr10, r0, stack-[10]\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tadd\tstack-[10], r0, r10\n\tadd\tstack-[2], r0, r6\n\tadd\tstack-[5], r0, r9\n\tadd\tstack-[8], r0, r8\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI13_4[0], r3, stack[@returndatasize]\n\tand\t@CPI13_4[0], r3, r3\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB13_56\n.BB13_54:\n\tsub.s!\t@CPI13_1[0], r10, r1\n\tjump.gt\t@.BB13_24\n\tst.1\t64, r10\n\tadd\tstack-[6], r0, r3\n\tadd\tstack-[3], r0, r4\n\tjump\t@.BB13_45\n.BB13_72:\n\tld.1\tr2, r1\n\tand\t@CPI13_3[0], r1, r6\n.BB13_45:\n\tcontext.gas_left\tr1\n\tsub\tr4, r1, r1\n\tadd\tr1, r8, r1\n\tadd\tr1, r0, stack-[6]\n\tmul\tr1, r9, r2, r1\n\tld.1\tr3, r1\n\tadd\tr2, r0, stack-[10]\n\tadd\tr1, r0, stack-[8]\n\tsub!\tr1, r2, r1\n\tjump.lt\t@.BB13_73\n\tst.1\t0, r6\n\tst.1\t32, r0\n\tadd\t@CPI13_4[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI13_4[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI13_15[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB13_5\n\tadd\tstack-[10], r0, r7\n\tadd\tstack-[8], r0, r2\n\tsub\tr2, r7, r3\n\tld\tr1, r1\n\tsload\tr1, r2\n\tand\t@CPI13_16[0], r2, r4\n\tadd\tr4, r3, r3\n\tsub!\tr3, r4, r4\n\tadd\t0, r0, r4\n\tadd.lt\t1, r0, r4\n\tand!\t1, r4, r4\n\tjump.ne\t@.BB13_39\n\tsub.s!\t@CPI13_17[0], r3, r4\n\tjump.ge\t@.BB13_77\n\tand\t@CPI13_18[0], r2, r2\n\tor\tr3, r2, r2\n\tsstore\tr1, r2\n\tadd\tstack-[11], r0, r1\n\tld.1\tr1, r5\n\tadd\tstack-[7], r0, r1\n\tld.1\tr1, r2\n\tadd\tstack-[9], r0, r1\n\tld.1.inc\tr1, r3, r1\n\tld.1\tr1, r1\n\tld.1\t64, r4\n\tadd\t96, r4, r6\n\tadd\tstack-[6], r0, r8\n\tst.1\tr6, r8\n\tadd\t64, r4, r6\n\tst.1\tr6, r7\n\tst.1.inc\tr4, r1, r1\n\tst.1\tr1, r0\n\tadd\t@CPI13_4[0], r0, r1\n\tcontext.gas_left\tr6\n\tsub.s!\t@CPI13_4[0], r6, r7\n\tadd.ge\tr1, r0, r6\n\tsub.s!\t@CPI13_4[0], r4, r7\n\tadd.lt\tr4, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r6, r4\n\tor\tr4, r1, r1\n\tor\t@CPI13_19[0], r1, r1\n\tand\t@CPI13_3[0], r3, r6\n\tand\t@CPI13_3[0], r2, r7\n\tadd\t32781, r0, r2\n\tadd\t4, r0, r3\n\tadd\t@CPI13_20[0], r0, r4\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB13_5\n\tcontext.get_context_u128\tr1\n\tsub.s!\t30, r1, r1\n\tadd\tstack-[10], r0, r1\n\tjump.le\t@.BB13_80\n.BB13_28:\n\tret\n.BB13_5:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB13_1:\n\tld.1\t64, r1\n\tadd\t68, r1, r2\n\tadd\t@CPI13_30[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t16, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI13_13[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI13_4[0], r0, r2\n\tsub.s!\t@CPI13_4[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI13_22[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB13_3:\n\tld.1\t64, r1\n\tadd\t68, r1, r2\n\tadd\t@CPI13_29[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t16, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI13_13[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI13_4[0], r0, r2\n\tsub.s!\t@CPI13_4[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI13_22[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB13_39:\n\tadd\t@CPI13_24[0], r0, r1\n\tst.1\t0, r1\n\tadd\t17, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI13_25[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB13_30:\n\tld.1\t64, r1\n\tadd\t68, r1, r2\n\tadd\t@CPI13_27[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t16, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI13_13[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI13_4[0], r0, r2\n\tsub.s!\t@CPI13_4[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI13_22[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB13_35:\n\tld.1\t64, r2\n\tadd\tr2, r0, stack-[11]\n\tadd\t@CPI13_14[0], r0, r1\n\tst.1\tr2, r1\n\tadd\t4, r2, r1\n\tnear_call\tr0, @abi_encode_uint256_stringliteral_eb8a_29533, @DEFAULT_UNWIND\n\tadd\tstack-[11], r0, r4\n\tsub\tr1, r4, r1\n\tadd\t@CPI13_4[0], r0, r2\n\tsub.s!\t@CPI13_4[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tsub.s!\t@CPI13_4[0], r4, r3\n\tadd.lt\tr4, r0, r2\n\tshl.s\t64, r2, r2\n\tshl.s\t96, r1, r1\n\tor\tr1, r2, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB13_37:\n\tld.1\t64, r1\n\tadd\t68, r1, r2\n\tadd\t@CPI13_26[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t16, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI13_13[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI13_4[0], r0, r2\n\tsub.s!\t@CPI13_4[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI13_22[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB13_73:\n\tld.1\t64, r2\n\tadd\tr2, r0, stack-[11]\n\tadd\t@CPI13_14[0], r0, r1\n\tst.1\tr2, r1\n\tadd\t4, r2, r1\n\tnear_call\tr0, @abi_encode_uint256_stringliteral_6d9d_29548, @DEFAULT_UNWIND\n\tadd\tstack-[11], r0, r4\n\tsub\tr1, r4, r1\n\tadd\t@CPI13_4[0], r0, r2\n\tsub.s!\t@CPI13_4[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tsub.s!\t@CPI13_4[0], r4, r3\n\tadd.lt\tr4, r0, r2\n\tshl.s\t64, r2, r2\n\tshl.s\t96, r1, r1\n\tor\tr1, r2, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB13_77:\n\tld.1\t64, r1\n\tadd\t68, r1, r2\n\tadd\t@CPI13_23[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t16, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI13_13[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI13_4[0], r0, r2\n\tsub.s!\t@CPI13_4[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI13_22[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB13_80:\n\tld.1\t64, r1\n\tadd\t68, r1, r2\n\tadd\t@CPI13_21[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t16, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI13_13[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI13_4[0], r0, r2\n\tsub.s!\t@CPI13_4[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI13_22[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB13_56:\n\tsub.s!\t4, r3, r2\n\tjump.lt\t@.BB13_71\n\tld.1\t0, r2\n\tand\t@CPI13_11[0], r2, r2\n\tld\tr1, r1\n\tand\t@CPI13_12[0], r1, r1\n\tor\tr1, r2, r1\n\tst.1\t0, r1\n\tand\t@CPI13_12[0], r1, r1\n\tsub.s!\t@CPI13_13[0], r1, r1\n\tjump.ne\t@.BB13_71\n\tadd\tstack[@returndatasize], r0, r3\n\tsub.s!\t68, r3, r1\n\tjump.lt\t@.BB13_71\n\tld.1\t64, r2\n\tadd\t4, r0, r1\n\tptr.add\tstack[@ptr_return_data], r1, r1\n\tsub.s\t4, r3, r4\n\tand\t31, r4, r3\n\tshr.s!\t5, r4, r4\n\tjump.eq\t@.BB13_81\n\tadd\tr0, r0, r5\n.BB13_61:\n\tshl.s\t5, r5, r6\n\tadd\tr2, r6, r7\n\tptr.add\tr1, r6, r6\n\tld\tr6, r6\n\tst.1\tr7, r6\n\tadd\t1, r5, r5\n\tsub!\tr5, r4, r6\n\tjump.lt\t@.BB13_61\n.BB13_81:\n\tsub.s!\t0, r3, r5\n\tjump.eq\t@.BB13_63\n\tshl.s\t5, r4, r4\n\tptr.add\tr1, r4, r1\n\tadd\tr2, r4, r4\n\tshl.s\t3, r3, r3\n\tld.1\tr4, r5\n\tshl\tr5, r3, r5\n\tshr\tr5, r3, r5\n\tld\tr1, r1\n\tsub\t256, r3, r3\n\tshr\tr1, r3, r1\n\tshl\tr1, r3, r1\n\tor\tr1, r5, r1\n\tst.1\tr4, r1\n.BB13_63:\n\tadd\tstack[@returndatasize], r0, r4\n\tld.1\tr2, r3\n\tsub.s!\t@CPI13_1[0], r3, r1\n\tjump.gt\t@.BB13_71\n\tadd\t36, r3, r1\n\tsub!\tr1, r4, r1\n\tjump.gt\t@.BB13_71\n\tadd\tr3, r2, r1\n\tld.1\tr1, r5\n\tsub.s!\t@CPI13_1[0], r5, r6\n\tjump.gt\t@.BB13_71\n\tadd\tr1, r5, r6\n\tadd\tr2, r4, r4\n\tsub.s\t4, r4, r4\n\tadd\t32, r6, r6\n\tsub!\tr6, r4, r4\n\tjump.le\t@.BB13_67\n.BB13_71:\n\tld.1\t64, r2\n\tadd\tr2, r0, stack-[11]\n\tadd\t@CPI13_14[0], r0, r1\n\tst.1\tr2, r1\n\tadd\t4, r2, r1\n\tnear_call\tr0, @abi_encode_uint256_stringliteral_90de_29547, @DEFAULT_UNWIND\n\tadd\tstack-[11], r0, r4\n\tsub\tr1, r4, r1\n\tadd\t@CPI13_4[0], r0, r2\n\tsub.s!\t@CPI13_4[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tsub.s!\t@CPI13_4[0], r4, r3\n\tadd.lt\tr4, r0, r2\n\tshl.s\t64, r2, r2\n\tshl.s\t96, r1, r1\n\tor\tr1, r2, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB13_67:\n\tadd\tr3, r5, r3\n\tadd\t63, r3, r3\n\tadd\tstack-[4], r0, r4\n\tand\tr3, r4, r3\n\tadd\tr3, r2, r2\n\tsub!\tr2, r3, r3\n\tadd\t0, r0, r3\n\tadd.lt\t1, r0, r3\n\tsub.s!\t@CPI13_1[0], r2, r4\n\tjump.gt\t@.BB13_24\n\tand!\t1, r3, r3\n\tjump.ne\t@.BB13_24\n\tst.1\t64, r2\n\tsub.s!\t0, r1, r2\n\tjump.eq\t@.BB13_71\n\tnear_call\tr0, @string_concat_stringliteral_89cf_string, @DEFAULT_UNWIND\n\tadd\t@CPI13_14[0], r0, r2\n\tld.1\t64, r3\n\tadd\tr3, r0, stack-[11]\n\tst.1\tr3, r2\n\tadd\tr1, r0, r2\n\tadd\t4, r3, r1\n\tnear_call\tr0, @abi_encode_uint256_bytes_29546, @DEFAULT_UNWIND\n\tadd\tstack-[11], r0, r4\n\tsub\tr1, r4, r1\n\tadd\t@CPI13_4[0], r0, r2\n\tsub.s!\t@CPI13_4[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tsub.s!\t@CPI13_4[0], r4, r3\n\tadd.lt\tr4, r0, r2\n\tshl.s\t64, r2, r2\n\tshl.s\t96, r1, r1\n\tor\tr1, r2, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB13_24:\n\tadd\t@CPI13_24[0], r0, r1\n\tst.1\t0, r1\n\tadd\t65, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI13_25[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end13:\n\nfun_executeUserOp:\n.func_begin14:\n\tnop\tstack+=[14]\n\tadd\tr3, r0, r12\n\tcontext.gas_left\tr13\n\tcontext.get_context_u128\tr3\n\tsub.s!\t25, r3, r3\n\tjump.le\t@.BB14_1\n\tadd\tr1, r0, stack-[10]\n\tadd\t96, r12, r1\n\tld.1\tr1, r11\n\tcontext.get_context_u128\tr3\n\tsub.s!\t26, r3, r3\n\tjump.le\t@.BB14_3\n\tadd\tstack[@calldatasize], r0, r3\n\tsub\tr3, r2, r4\n\tsub.s\t31, r4, r6\n\tadd\t96, r2, r5\n\tptr.add\tstack[@ptr_calldata], r0, r4\n\tptr.add\tr4, r5, r5\n\tld\tr5, r5\n\tadd\t@CPI14_0[0], r0, r7\n\tsub!\tr5, r6, r8\n\tadd\t0, r0, r8\n\tadd.lt\tr7, r0, r8\n\tand\t@CPI14_0[0], r6, r6\n\tand\t@CPI14_0[0], r5, r9\n\tsub!\tr9, r6, r10\n\tadd.le\t0, r0, r7\n\txor\tr9, r6, r6\n\tsub.s!\t@CPI14_0[0], r6, r6\n\tadd\tr8, r0, r6\n\tadd.eq\tr7, r0, r6\n\tsub.s!\t0, r6, r6\n\tjump.eq\t@.BB14_5\n\tadd\tr5, r2, r5\n\tptr.add\tr4, r5, r2\n\tld\tr2, r2\n\tsub.s!\t@CPI14_1[0], r2, r4\n\tjump.gt\t@.BB14_5\n\tsub\tr3, r2, r3\n\tadd\t32, r5, r6\n\tadd\t@CPI14_0[0], r0, r4\n\tsub!\tr6, r3, r5\n\tadd\t0, r0, r5\n\tadd.gt\tr4, r0, r5\n\tand\t@CPI14_0[0], r3, r3\n\tand\t@CPI14_0[0], r6, r7\n\tsub!\tr7, r3, r8\n\tadd.ge\t0, r0, r4\n\txor\tr7, r3, r3\n\tsub.s!\t@CPI14_0[0], r3, r3\n\tadd\tr5, r0, r3\n\tadd.eq\tr4, r0, r3\n\tsub.s!\t0, r3, r3\n\tjump.ne\t@.BB14_5\n\tld.1\t64, r14\n\tadd\t@CPI14_2[0], r0, r3\n\tst.1\tr14, r3\n\tadd\t452, r14, r3\n\tst.1\tr3, r2\n\tadd\t4, r14, r3\n\tadd\t448, r0, r4\n\tst.1\tr3, r4\n\tand\t31, r2, r5\n\tadd\t484, r14, r4\n\tptr.add\tstack[@ptr_calldata], r6, r6\n\tshr.s!\t5, r2, r7\n\tjump.eq\t@.BB14_83\n\tadd\tr0, r0, r8\n.BB14_10:\n\tshl.s\t5, r8, r9\n\tadd\tr4, r9, r10\n\tptr.add\tr6, r9, r9\n\tld\tr9, r9\n\tst.1\tr10, r9\n\tadd\t1, r8, r8\n\tsub!\tr8, r7, r9\n\tjump.lt\t@.BB14_10\n.BB14_83:\n\tsub.s!\t0, r5, r8\n\tjump.eq\t@.BB14_12\n\tshl.s\t5, r7, r7\n\tptr.add\tr6, r7, r6\n\tadd\tr4, r7, r7\n\tshl.s\t3, r5, r5\n\tld.1\tr7, r8\n\tshl\tr8, r5, r8\n\tshr\tr8, r5, r8\n\tld\tr6, r6\n\tsub\t256, r5, r5\n\tshr\tr6, r5, r6\n\tshl\tr6, r5, r5\n\tor\tr5, r8, r5\n\tst.1\tr7, r5\n.BB14_12:\n\tadd\tr4, r2, r5\n\tst.1\tr5, r0\n\tld.1.inc\tr12, r5, r9\n\tld.1.inc\tr5, r6, r7\n\tand\t@CPI14_3[0], r6, r6\n\tadd\t36, r14, r8\n\tst.1\tr8, r6\n\tld.1\tr7, r6\n\tadd\t68, r14, r7\n\tst.1\tr7, r6\n\tadd\t64, r5, r6\n\tld.1\tr6, r6\n\tadd\t100, r14, r7\n\tst.1\tr7, r6\n\tadd\t96, r5, r6\n\tld.1\tr6, r6\n\tadd\t132, r14, r7\n\tst.1\tr7, r6\n\tadd\t128, r5, r6\n\tld.1\tr6, r6\n\tadd\t164, r14, r7\n\tst.1\tr7, r6\n\tadd\t160, r5, r6\n\tld.1\tr6, r6\n\tand\t@CPI14_3[0], r6, r6\n\tadd\t196, r14, r7\n\tst.1\tr7, r6\n\tadd\t192, r5, r6\n\tld.1\tr6, r6\n\tadd\t228, r14, r7\n\tst.1\tr7, r6\n\tadd\t224, r5, r5\n\tld.1\tr5, r5\n\tadd\t260, r14, r6\n\tst.1\tr6, r5\n\tadd\t292, r14, r5\n\tadd\tr9, r0, stack-[12]\n\tld.1\tr9, r6\n\tst.1\tr5, r6\n\tadd\t324, r14, r5\n\tadd\t64, r12, r7\n\tld.1\tr7, r6\n\tst.1\tr5, r6\n\tld.1\tr1, r1\n\tadd\t356, r14, r5\n\tst.1\tr5, r1\n\tadd\t31, r2, r1\n\tsub.s\t32, r0, r6\n\tand\tr1, r6, r1\n\tadd\tr4, r1, r1\n\tsub\tr1, r3, r2\n\tadd\t128, r12, r8\n\tadd\t420, r14, r3\n\tld.1\tr8, r4\n\tst.1\tr3, r2\n\tadd\t388, r14, r2\n\tst.1\tr2, r4\n\tld.1\tr11, r3\n\tst.1.inc\tr1, r3, r1\n\tsub.s!\t0, r3, r2\n\tjump.eq\t@.BB14_15\n\tadd\tr0, r0, r2\n.BB14_14:\n\tadd\tr2, r1, r4\n\tadd\t32, r2, r2\n\tadd\tr2, r11, r5\n\tld.1\tr5, r5\n\tst.1\tr4, r5\n\tsub!\tr2, r3, r4\n\tjump.lt\t@.BB14_14\n.BB14_15:\n\tadd\tr3, r1, r2\n\tst.1\tr2, r0\n\tcontext.gas_left\tr4\n\tcontext.this\tr2\n\tsub.s!\t4, r2, r5\n\tjump.ne\t@.BB14_17\n\tcontext.sp\tr7\n\tsub.s\t14, r7, r7\n\tmul\t32, r7, r7, r0\n\tadd\tstack[@returndatasize], r0, r3\n\tsub.s!\t32, r3, r2\n\tadd\t32, r0, r4\n\tadd.lt\tr3, r0, r4\n\tadd\t0, r0, stack-[14]\n\tjump\t@.BB14_22\n.BB14_17:\n\tadd\tr8, r0, stack-[5]\n\tadd\tr13, r0, stack-[8]\n\tadd\tr12, r0, stack-[9]\n\tadd\tr7, r0, stack-[6]\n\tadd\tr11, r0, stack-[11]\n\tadd\t31, r3, r3\n\tadd\tr6, r0, stack-[4]\n\tand\tr3, r6, r3\n\tsub\tr1, r14, r1\n\tadd\tr1, r3, r1\n\tadd\t@CPI14_4[0], r0, r3\n\tsub.s!\t@CPI14_4[0], r1, r5\n\tadd.ge\tr3, r0, r1\n\tshl.s\t96, r1, r1\n\tsub.s!\t@CPI14_4[0], r14, r5\n\tadd\tr3, r0, r5\n\tadd.lt\tr14, r0, r5\n\tshl.s\t64, r5, r5\n\tor\tr1, r5, r1\n\tsub.s!\t@CPI14_4[0], r4, r5\n\tadd.lt\tr4, r0, r3\n\tshl.s\t192, r3, r3\n\tor\tr3, r1, r1\n\tadd\tr14, r0, stack-[7]\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tadd\tstack-[7], r0, r14\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI14_4[0], r3, r3\n\tsub.s!\t32, r3, r4\n\tadd\t32, r0, r4\n\tadd.lt\tr3, r0, r4\n\tand\t31, r4, r5\n\tshr.s!\t5, r4, r6\n\tjump.eq\t@.BB14_82\n\tadd\tr0, r0, r7\n.BB14_19:\n\tshl.s\t5, r7, r8\n\tadd\tr14, r8, r9\n\tptr.add\tr1, r8, r8\n\tld\tr8, r8\n\tst.1\tr9, r8\n\tadd\t1, r7, r7\n\tsub!\tr7, r6, r8\n\tjump.lt\t@.BB14_19\n.BB14_82:\n\tsub.s!\t0, r5, r7\n\tadd\tstack-[8], r0, r9\n\tjump.eq\t@.BB14_21\n\tshl.s\t5, r6, r6\n\tptr.add\tr1, r6, r7\n\tadd\tr14, r6, r6\n\tshl.s\t3, r5, r5\n\tld.1\tr6, r8\n\tshl\tr8, r5, r8\n\tshr\tr8, r5, r8\n\tld\tr7, r7\n\tsub\t256, r5, r5\n\tshr\tr7, r5, r7\n\tshl\tr7, r5, r5\n\tor\tr5, r8, r5\n\tst.1\tr6, r5\n.BB14_21:\n\tadd\tr3, r0, stack[@returndatasize]\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tcontext.sp\tr7\n\tsub.s\t13, r7, r7\n\tmul\t32, r7, r7, r0\n\tadd\t0, r0, stack-[13]\n\tand!\t1, r2, r2\n\tadd\tstack-[11], r0, r5\n\tadd\tstack-[9], r0, r6\n\tjump.eq\t@.BB14_29\n.BB14_22:\n\tadd\t31, r4, r2\n\tand\t96, r2, r4\n\tadd\tr4, r14, r2\n\tsub!\tr2, r4, r4\n\tadd\t0, r0, r4\n\tadd.lt\t1, r0, r4\n\tsub.s!\t@CPI14_1[0], r2, r5\n\tjump.gt\t@.BB14_24\n\tand!\t1, r4, r4\n\tjump.ne\t@.BB14_24\n\tst.1\t64, r2\n\tsub.s!\t32, r3, r2\n\tjump.lt\t@.BB14_5\n\tld.1\tr14, r1\n\tdiv.s\t32, r7, r2, r0\n\tadd\tr1, r0, stack[r2]\n\tcontext.get_context_u128\tr2\n\tsub.s!\t27, r2, r2\n\tjump.gt\t@.BB14_28\n\tld.1\t64, r1\n\tadd\t68, r1, r2\n\tadd\t@CPI14_28[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t16, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI14_13[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI14_4[0], r0, r2\n\tsub.s!\t@CPI14_4[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI14_22[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB14_29:\n\tcontext.get_context_u128\tr1\n\tsub.s!\t28, r1, r1\n\tjump.le\t@.BB14_30\n\tadd\tstack[@returndatasize], r0, r1\n\tsub.s!\t32, r1, r1\n\tjump.lt\t@.BB14_5\n\tptr.add\tstack[@ptr_return_data], r0, r1\n\tadd\tr0, r0, r2\n.BB14_33:\n\tshl.s\t5, r2, r3\n\tptr.add\tr1, r3, r4\n\tld\tr4, r4\n\tst.1\tr3, r4\n\tadd!\t1, r2, r2\n\tadd\t0, r0, r3\n\tadd.eq\t1, r0, r3\n\tand!\t1, r3, r3\n\tjump.ne\t@.BB14_33\n\tld.1\t0, r1\n\tsub.s!\t@CPI14_5[0], r1, r1\n\tadd\tstack-[6], r0, r3\n\tjump.eq\t@.BB14_35\n\tcontext.get_context_u128\tr1\n\tsub.s!\t29, r1, r1\n\tjump.le\t@.BB14_37\n\tcontext.gas_left\tr1\n\tsub!\tr9, r1, r2\n\tjump.lt\t@.BB14_39\n\tsub\tr9, r1, r1\n\tadd\tstack-[5], r0, r2\n\tld.1\tr2, r2\n\tadd\tr2, r1, r8\n\tsub!\tr8, r2, r1\n\tadd\t0, r0, r1\n\tadd.lt\t1, r0, r1\n\tand!\t1, r1, r1\n\tjump.ne\t@.BB14_39\n\tcontext.gas_left\tr4\n\tld.1\tr6, r2\n\tadd\t224, r2, r1\n\tld.1\tr1, r6\n\tadd\t192, r2, r1\n\tld.1\tr1, r9\n\tsub!\tr9, r6, r1\n\tadd\tr2, r0, stack-[9]\n\tjump.eq\t@.BB14_44\n\tadd\tr6, r0, stack-[7]\n\tadd\tr9, r0, stack-[5]\n\tadd\tr4, r0, stack-[3]\n\tadd\tr8, r0, stack-[8]\n\tadd\t@CPI14_6[0], r0, r1\n\tst.2\t0, r1\n\tadd\t@CPI14_4[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI14_4[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI14_7[0], r1, r1\n\tadd\t32779, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tstack-[11], r0, r5\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB14_5\n\tld\tr1, r1\n\tadd\tstack-[7], r0, r2\n\tadd\tr1, r2, r1\n\tadd\tstack-[5], r0, r9\n\tsub!\tr9, r1, r2\n\tadd.ge\tr1, r0, r9\n\tadd\tstack-[6], r0, r3\n\tadd\tstack-[9], r0, r2\n\tadd\tstack-[8], r0, r8\n\tadd\tstack-[3], r0, r4\n.BB14_44:\n\tadd\t160, r2, r1\n\tadd\tr1, r0, stack-[7]\n\tld.1\tr1, r1\n\tand!\t@CPI14_3[0], r1, r6\n\tjump.eq\t@.BB14_72\n\tld.1\tr5, r1\n\tsub.s!\t0, r1, r1\n\tjump.eq\t@.BB14_45\n\tadd\tr9, r0, stack-[5]\n\tadd\tr4, r0, stack-[3]\n\tadd\tr8, r0, stack-[8]\n\tadd\t96, r2, r1\n\tld.1\tr1, r1\n\tadd\tr1, r0, stack-[1]\n\tadd\t@CPI14_8[0], r0, r1\n\tst.2\t0, r1\n\tadd\tr6, r0, stack-[2]\n\tst.2\t4, r6\n\tadd\t@CPI14_4[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI14_4[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI14_9[0], r1, r1\n\tadd\t32770, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tstack-[11], r0, r7\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB14_5\n\tld\tr1, r1\n\tsub.s!\t0, r1, r1\n\tjump.eq\t@.BB14_5\n\tld.1\t64, r10\n\tadd\t36, r10, r1\n\tadd\t96, r0, r2\n\tst.1\tr1, r2\n\tadd\t@CPI14_10[0], r0, r1\n\tst.1\tr10, r1\n\tadd\t4, r10, r1\n\tadd\t2, r0, r2\n\tst.1\tr1, r2\n\tld.1\tr7, r1\n\tadd\t100, r10, r2\n\tst.1\tr2, r1\n\tadd\tstack-[8], r0, r8\n\tadd\tstack-[5], r0, r9\n\tmul\tr9, r8, r2, r3\n\tadd\t132, r10, r3\n\tsub.s!\t0, r1, r4\n\tjump.eq\t@.BB14_52\n\tadd\tr0, r0, r4\n.BB14_51:\n\tadd\tr4, r3, r5\n\tadd\t32, r4, r4\n\tadd\tr4, r7, r6\n\tld.1\tr6, r6\n\tst.1\tr5, r6\n\tsub!\tr4, r1, r5\n\tjump.lt\t@.BB14_51\n.BB14_52:\n\tadd\tr1, r3, r3\n\tst.1\tr3, r0\n\tadd\t68, r10, r3\n\tst.1\tr3, r2\n\tadd\tstack-[2], r0, r6\n\tsub.s!\t4, r6, r2\n\tjump.eq\t@.BB14_54\n\tadd\t31, r1, r1\n\tadd\tstack-[4], r0, r2\n\tand\tr1, r2, r1\n\tadd\t@CPI14_4[0], r0, r2\n\tsub.s!\t@CPI14_4[0], r10, r3\n\tadd\tr2, r0, r3\n\tadd.lt\tr10, r0, r3\n\tshl.s\t64, r3, r3\n\tadd\t132, r1, r1\n\tsub.s!\t@CPI14_4[0], r1, r4\n\tadd.ge\tr2, r0, r1\n\tshl.s\t96, r1, r1\n\tor\tr1, r3, r1\n\tadd\tstack-[1], r0, r4\n\tsub.s!\t@CPI14_4[0], r4, r3\n\tadd.lt\tr4, r0, r2\n\tshl.s\t192, r2, r2\n\tor\tr1, r2, r1\n\tadd\tr6, r0, r2\n\tadd\tr10, r0, stack-[11]\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tadd\tstack-[11], r0, r10\n\tadd\tstack-[2], r0, r6\n\tadd\tstack-[5], r0, r9\n\tadd\tstack-[8], r0, r8\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI14_4[0], r3, stack[@returndatasize]\n\tand\t@CPI14_4[0], r3, r3\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB14_56\n.BB14_54:\n\tsub.s!\t@CPI14_1[0], r10, r1\n\tjump.gt\t@.BB14_24\n\tst.1\t64, r10\n\tadd\tstack-[6], r0, r3\n\tadd\tstack-[3], r0, r4\n\tjump\t@.BB14_45\n.BB14_72:\n\tld.1\tr2, r1\n\tand\t@CPI14_3[0], r1, r6\n.BB14_45:\n\tcontext.gas_left\tr1\n\tsub\tr4, r1, r1\n\tadd\tr1, r8, r1\n\tadd\tr1, r0, stack-[6]\n\tmul\tr1, r9, r2, r1\n\tld.1\tr3, r1\n\tadd\tr2, r0, stack-[11]\n\tadd\tr1, r0, stack-[8]\n\tsub!\tr1, r2, r1\n\tjump.lt\t@.BB14_73\n\tst.1\t0, r6\n\tst.1\t32, r0\n\tadd\t@CPI14_4[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI14_4[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI14_15[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB14_5\n\tadd\tstack-[11], r0, r7\n\tadd\tstack-[8], r0, r2\n\tsub\tr2, r7, r3\n\tld\tr1, r1\n\tsload\tr1, r2\n\tand\t@CPI14_16[0], r2, r4\n\tadd\tr4, r3, r3\n\tsub!\tr3, r4, r4\n\tadd\t0, r0, r4\n\tadd.lt\t1, r0, r4\n\tand!\t1, r4, r4\n\tjump.ne\t@.BB14_39\n\tsub.s!\t@CPI14_17[0], r3, r4\n\tjump.ge\t@.BB14_77\n\tand\t@CPI14_18[0], r2, r2\n\tor\tr3, r2, r2\n\tsstore\tr1, r2\n\tadd\tstack-[12], r0, r1\n\tld.1\tr1, r5\n\tadd\tstack-[7], r0, r1\n\tld.1\tr1, r2\n\tadd\tstack-[9], r0, r1\n\tld.1.inc\tr1, r3, r1\n\tld.1\tr1, r1\n\tld.1\t64, r4\n\tadd\t96, r4, r6\n\tadd\tstack-[6], r0, r8\n\tst.1\tr6, r8\n\tadd\t64, r4, r6\n\tst.1\tr6, r7\n\tst.1.inc\tr4, r1, r1\n\tst.1\tr1, r0\n\tadd\t@CPI14_4[0], r0, r1\n\tcontext.gas_left\tr6\n\tsub.s!\t@CPI14_4[0], r6, r7\n\tadd.ge\tr1, r0, r6\n\tsub.s!\t@CPI14_4[0], r4, r7\n\tadd.lt\tr4, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r6, r4\n\tor\tr4, r1, r1\n\tor\t@CPI14_19[0], r1, r1\n\tand\t@CPI14_3[0], r3, r6\n\tand\t@CPI14_3[0], r2, r7\n\tadd\t32781, r0, r2\n\tadd\t4, r0, r3\n\tadd\t@CPI14_20[0], r0, r4\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB14_5\n\tcontext.get_context_u128\tr1\n\tsub.s!\t30, r1, r1\n\tadd\tstack-[11], r0, r1\n\tjump.le\t@.BB14_80\n.BB14_28:\n\tret\n.BB14_5:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB14_1:\n\tld.1\t64, r1\n\tadd\t68, r1, r2\n\tadd\t@CPI14_30[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t16, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI14_13[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI14_4[0], r0, r2\n\tsub.s!\t@CPI14_4[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI14_22[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB14_3:\n\tld.1\t64, r1\n\tadd\t68, r1, r2\n\tadd\t@CPI14_29[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t16, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI14_13[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI14_4[0], r0, r2\n\tsub.s!\t@CPI14_4[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI14_22[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB14_39:\n\tadd\t@CPI14_24[0], r0, r1\n\tst.1\t0, r1\n\tadd\t17, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI14_25[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB14_30:\n\tld.1\t64, r1\n\tadd\t68, r1, r2\n\tadd\t@CPI14_27[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t16, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI14_13[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI14_4[0], r0, r2\n\tsub.s!\t@CPI14_4[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI14_22[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB14_35:\n\tld.1\t64, r2\n\tadd\tr2, r0, stack-[12]\n\tadd\t@CPI14_14[0], r0, r1\n\tst.1\tr2, r1\n\tadd\t4, r2, r1\n\tadd\tstack-[10], r0, r2\n\tnear_call\tr0, @abi_encode_uint256_stringliteral_eb8a, @DEFAULT_UNWIND\n\tadd\tstack-[12], r0, r4\n\tsub\tr1, r4, r1\n\tadd\t@CPI14_4[0], r0, r2\n\tsub.s!\t@CPI14_4[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tsub.s!\t@CPI14_4[0], r4, r3\n\tadd.lt\tr4, r0, r2\n\tshl.s\t64, r2, r2\n\tshl.s\t96, r1, r1\n\tor\tr1, r2, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB14_37:\n\tld.1\t64, r1\n\tadd\t68, r1, r2\n\tadd\t@CPI14_26[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t16, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI14_13[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI14_4[0], r0, r2\n\tsub.s!\t@CPI14_4[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI14_22[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB14_73:\n\tld.1\t64, r2\n\tadd\tr2, r0, stack-[12]\n\tadd\t@CPI14_14[0], r0, r1\n\tst.1\tr2, r1\n\tadd\t4, r2, r1\n\tadd\tstack-[10], r0, r2\n\tnear_call\tr0, @abi_encode_uint256_stringliteral_6d9d, @DEFAULT_UNWIND\n\tadd\tstack-[12], r0, r4\n\tsub\tr1, r4, r1\n\tadd\t@CPI14_4[0], r0, r2\n\tsub.s!\t@CPI14_4[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tsub.s!\t@CPI14_4[0], r4, r3\n\tadd.lt\tr4, r0, r2\n\tshl.s\t64, r2, r2\n\tshl.s\t96, r1, r1\n\tor\tr1, r2, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB14_77:\n\tld.1\t64, r1\n\tadd\t68, r1, r2\n\tadd\t@CPI14_23[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t16, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI14_13[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI14_4[0], r0, r2\n\tsub.s!\t@CPI14_4[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI14_22[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB14_80:\n\tld.1\t64, r1\n\tadd\t68, r1, r2\n\tadd\t@CPI14_21[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t16, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI14_13[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI14_4[0], r0, r2\n\tsub.s!\t@CPI14_4[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI14_22[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB14_56:\n\tsub.s!\t4, r3, r2\n\tjump.lt\t@.BB14_71\n\tld.1\t0, r2\n\tand\t@CPI14_11[0], r2, r2\n\tld\tr1, r1\n\tand\t@CPI14_12[0], r1, r1\n\tor\tr1, r2, r1\n\tst.1\t0, r1\n\tand\t@CPI14_12[0], r1, r1\n\tsub.s!\t@CPI14_13[0], r1, r1\n\tjump.ne\t@.BB14_71\n\tadd\tstack[@returndatasize], r0, r3\n\tsub.s!\t68, r3, r1\n\tjump.lt\t@.BB14_71\n\tld.1\t64, r2\n\tadd\t4, r0, r1\n\tptr.add\tstack[@ptr_return_data], r1, r1\n\tsub.s\t4, r3, r4\n\tand\t31, r4, r3\n\tshr.s!\t5, r4, r4\n\tjump.eq\t@.BB14_81\n\tadd\tr0, r0, r5\n.BB14_61:\n\tshl.s\t5, r5, r6\n\tadd\tr2, r6, r7\n\tptr.add\tr1, r6, r6\n\tld\tr6, r6\n\tst.1\tr7, r6\n\tadd\t1, r5, r5\n\tsub!\tr5, r4, r6\n\tjump.lt\t@.BB14_61\n.BB14_81:\n\tsub.s!\t0, r3, r5\n\tjump.eq\t@.BB14_63\n\tshl.s\t5, r4, r4\n\tptr.add\tr1, r4, r1\n\tadd\tr2, r4, r4\n\tshl.s\t3, r3, r3\n\tld.1\tr4, r5\n\tshl\tr5, r3, r5\n\tshr\tr5, r3, r5\n\tld\tr1, r1\n\tsub\t256, r3, r3\n\tshr\tr1, r3, r1\n\tshl\tr1, r3, r1\n\tor\tr1, r5, r1\n\tst.1\tr4, r1\n.BB14_63:\n\tadd\tstack[@returndatasize], r0, r4\n\tld.1\tr2, r3\n\tsub.s!\t@CPI14_1[0], r3, r1\n\tjump.gt\t@.BB14_71\n\tadd\t36, r3, r1\n\tsub!\tr1, r4, r1\n\tjump.gt\t@.BB14_71\n\tadd\tr3, r2, r1\n\tld.1\tr1, r5\n\tsub.s!\t@CPI14_1[0], r5, r6\n\tjump.gt\t@.BB14_71\n\tadd\tr1, r5, r6\n\tadd\tr2, r4, r4\n\tsub.s\t4, r4, r4\n\tadd\t32, r6, r6\n\tsub!\tr6, r4, r4\n\tjump.le\t@.BB14_67\n.BB14_71:\n\tld.1\t64, r2\n\tadd\tr2, r0, stack-[12]\n\tadd\t@CPI14_14[0], r0, r1\n\tst.1\tr2, r1\n\tadd\t4, r2, r1\n\tadd\tstack-[10], r0, r2\n\tnear_call\tr0, @abi_encode_uint256_stringliteral_90de, @DEFAULT_UNWIND\n\tadd\tstack-[12], r0, r4\n\tsub\tr1, r4, r1\n\tadd\t@CPI14_4[0], r0, r2\n\tsub.s!\t@CPI14_4[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tsub.s!\t@CPI14_4[0], r4, r3\n\tadd.lt\tr4, r0, r2\n\tshl.s\t64, r2, r2\n\tshl.s\t96, r1, r1\n\tor\tr1, r2, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB14_67:\n\tadd\tr3, r5, r3\n\tadd\t63, r3, r3\n\tadd\tstack-[4], r0, r4\n\tand\tr3, r4, r3\n\tadd\tr3, r2, r2\n\tsub!\tr2, r3, r3\n\tadd\t0, r0, r3\n\tadd.lt\t1, r0, r3\n\tsub.s!\t@CPI14_1[0], r2, r4\n\tjump.gt\t@.BB14_24\n\tand!\t1, r3, r3\n\tjump.ne\t@.BB14_24\n\tst.1\t64, r2\n\tsub.s!\t0, r1, r2\n\tjump.eq\t@.BB14_71\n\tnear_call\tr0, @string_concat_stringliteral_89cf_string, @DEFAULT_UNWIND\n\tadd\t@CPI14_14[0], r0, r2\n\tld.1\t64, r4\n\tadd\tr4, r0, stack-[12]\n\tst.1\tr4, r2\n\tadd\tr1, r0, r3\n\tadd\t4, r4, r1\n\tadd\tstack-[10], r0, r2\n\tnear_call\tr0, @abi_encode_uint256_bytes, @DEFAULT_UNWIND\n\tadd\tstack-[12], r0, r4\n\tsub\tr1, r4, r1\n\tadd\t@CPI14_4[0], r0, r2\n\tsub.s!\t@CPI14_4[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tsub.s!\t@CPI14_4[0], r4, r3\n\tadd.lt\tr4, r0, r2\n\tshl.s\t64, r2, r2\n\tshl.s\t96, r1, r1\n\tor\tr1, r2, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB14_24:\n\tadd\t@CPI14_24[0], r0, r1\n\tst.1\t0, r1\n\tadd\t65, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI14_25[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end14:\n\nabi_encode_uint256_uint256_uint48_uint48_bool_bytes:\n.func_begin15:\n\tadd\t160, r1, r8\n\tadd\t192, r0, r9\n\tst.1\tr8, r9\n\tsub.s!\t0, r6, r6\n\tadd\t0, r0, r6\n\tadd.ne\t1, r0, r6\n\tadd\t128, r1, r8\n\tst.1\tr8, r6\n\tand\t@CPI15_0[0], r5, r5\n\tadd\t96, r1, r6\n\tst.1\tr6, r5\n\tand\t@CPI15_0[0], r4, r4\n\tadd\t64, r1, r5\n\tst.1\tr5, r4\n\tadd\t32, r1, r4\n\tst.1\tr4, r3\n\tst.1\tr1, r2\n\tld.1\tr7, r2\n\tadd\t192, r1, r3\n\tst.1\tr3, r2\n\tadd\t224, r1, r1\n\tsub.s!\t0, r2, r3\n\tjump.eq\t@.BB15_3\n\tadd\tr0, r0, r3\n.BB15_2:\n\tadd\tr3, r1, r4\n\tadd\t32, r3, r3\n\tadd\tr3, r7, r5\n\tld.1\tr5, r5\n\tst.1\tr4, r5\n\tsub!\tr3, r2, r4\n\tjump.lt\t@.BB15_2\n.BB15_3:\n\tadd\tr2, r1, r3\n\tst.1\tr3, r0\n\tadd\t31, r2, r2\n\tsub.s\t32, r0, r3\n\tand\tr2, r3, r2\n\tadd\tr2, r1, r1\n\tret\n.func_end15:\n\nabi_encode_uint256_bytes_29546:\n.func_begin16:\n\tadd\t32, r1, r3\n\tadd\t64, r0, r4\n\tst.1\tr3, r4\n\tst.1\tr1, r0\n\tld.1\tr2, r3\n\tadd\t64, r1, r4\n\tst.1\tr4, r3\n\tadd\t96, r1, r1\n\tsub.s!\t0, r3, r4\n\tjump.eq\t@.BB16_3\n\tadd\tr0, r0, r4\n.BB16_2:\n\tadd\tr4, r1, r5\n\tadd\t32, r4, r4\n\tadd\tr4, r2, r6\n\tld.1\tr6, r6\n\tst.1\tr5, r6\n\tsub!\tr4, r3, r5\n\tjump.lt\t@.BB16_2\n.BB16_3:\n\tadd\tr3, r1, r2\n\tst.1\tr2, r0\n\tadd\t31, r3, r2\n\tsub.s\t32, r0, r3\n\tand\tr2, r3, r2\n\tadd\tr2, r1, r1\n\tret\n.func_end16:\n\nabi_encode_uint256_bytes:\n.func_begin17:\n\tadd\t32, r1, r4\n\tadd\t64, r0, r5\n\tst.1\tr4, r5\n\tst.1\tr1, r2\n\tld.1\tr3, r2\n\tadd\t64, r1, r4\n\tst.1\tr4, r2\n\tadd\t96, r1, r1\n\tsub.s!\t0, r2, r4\n\tjump.eq\t@.BB17_3\n\tadd\tr0, r0, r4\n.BB17_2:\n\tadd\tr4, r1, r5\n\tadd\t32, r4, r4\n\tadd\tr4, r3, r6\n\tld.1\tr6, r6\n\tst.1\tr5, r6\n\tsub!\tr4, r2, r5\n\tjump.lt\t@.BB17_2\n.BB17_3:\n\tadd\tr2, r1, r3\n\tst.1\tr3, r0\n\tadd\t31, r2, r2\n\tsub.s\t32, r0, r3\n\tand\tr2, r3, r2\n\tadd\tr2, r1, r1\n\tret\n.func_end17:\n\nfun_innerHandleOp:\n.func_begin18:\n\tnop\tstack+=[13]\n\tadd\tr4, r0, r11\n\tadd\tr3, r0, r12\n\tadd\tr2, r0, r9\n\tcontext.gas_left\tr10\n\tcontext.this\tr2\n\tcontext.caller\tr3\n\tsub!\tr3, r2, r2\n\tjump.ne\t@.BB18_1\n\tld.1.inc\tr9, r7, r2\n\tadd\tr2, r0, stack-[10]\n\tadd\t64, r7, r2\n\tld.1\tr2, r3\n\tadd\t96, r7, r2\n\tcontext.gas_left\tr4\n\tld.1\tr2, r2\n\tadd\tr3, r2, r2\n\tadd\t5000, r2, r2\n\tsub!\tr4, r2, r2\n\tjump.lt\t@.BB18_3\n\tadd\t1, r0, r2\n\tadd\tr2, r0, stack-[11]\n\tld.1.inc\tr1, r4, r1\n\tsub.s!\t0, r4, r2\n\tadd\tr0, r0, r8\n\tadd\tr9, r0, stack-[13]\n\tjump.eq\t@.BB18_7\n\tld.1.inc\tr7, r2, r13\n\tand\t@CPI18_4[0], r2, r2\n\tsub.s!\t4, r2, r5\n\tadd\tr0, r0, r8\n\tjump.eq\t@.BB18_7\n\tadd\t@CPI18_2[0], r0, r5\n\tsub.s!\t@CPI18_2[0], r4, r6\n\tadd.ge\tr5, r0, r4\n\tshl.s\t96, r4, r4\n\tsub.s!\t@CPI18_2[0], r1, r6\n\tadd.ge\tr5, r0, r1\n\tshl.s\t64, r1, r1\n\tor\tr4, r1, r1\n\tsub.s!\t@CPI18_2[0], r3, r4\n\tadd.ge\tr5, r0, r3\n\tshl.s\t192, r3, r3\n\tor\tr1, r3, r1\n\tadd\tr10, r0, stack-[8]\n\tadd\tr11, r0, stack-[12]\n\tadd\tr12, r0, stack-[7]\n\tadd\tr7, r0, stack-[6]\n\tadd\tr13, r0, stack-[5]\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tadd\tstack-[5], r0, r14\n\tadd\tstack-[6], r0, r13\n\tadd\tstack-[7], r0, r12\n\tadd\tstack-[12], r0, r11\n\tadd\tstack-[8], r0, r10\n\tadd\tstack-[13], r0, r9\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI18_2[0], r3, stack[@returndatasize]\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r1\n\tadd\tr0, r0, r8\n\tjump.ne\t@.BB18_7\n\tcontext.get_context_u128\tr1\n\tsub.s!\t27, r1, r1\n\tjump.le\t@.BB18_47\n\tadd\tstack[@returndatasize], r0, r1\n\tsub.s!\t2048, r1, r2\n\tadd\t2048, r0, r5\n\tadd.lt\tr1, r0, r5\n\tld.1\t64, r1\n\tadd\t32, r1, r2\n\tadd\tr2, r5, r3\n\tst.1\t64, r3\n\tst.1\tr1, r5\n\tadd\tstack[@returndatasize], r0, r3\n\tsub!\tr5, r3, r3\n\tjump.gt\t@.BB18_12\n\tptr.add\tstack[@ptr_return_data], r0, r4\n\tand\t31, r5, r3\n\tshr.s!\t5, r5, r5\n\tjump.eq\t@.BB18_62\n\tadd\tr0, r0, r6\n.BB18_51:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr4, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB18_51\n.BB18_62:\n\tsub.s!\t0, r3, r6\n\tjump.eq\t@.BB18_53\n\tshl.s\t5, r5, r5\n\tptr.add\tr4, r5, r4\n\tadd\tr2, r5, r2\n\tshl.s\t3, r3, r3\n\tld.1\tr2, r5\n\tshl\tr5, r3, r5\n\tshr\tr5, r3, r5\n\tld\tr4, r4\n\tsub\t256, r3, r3\n\tshr\tr4, r3, r4\n\tshl\tr4, r3, r3\n\tor\tr3, r5, r3\n\tst.1\tr2, r3\n.BB18_53:\n\tcontext.get_context_u128\tr2\n\tsub.s!\t28, r2, r2\n\tjump.le\t@.BB18_54\n\tadd\t1, r0, r8\n\tld.1\tr1, r2\n\tsub.s!\t0, r2, r2\n\tadd\tr0, r0, stack-[11]\n\tjump.eq\t@.BB18_7\n\tcontext.get_context_u128\tr2\n\tsub.s!\t29, r2, r2\n\tjump.le\t@.BB18_57\n\tadd\tr8, r0, stack-[9]\n\tadd\tstack-[10], r0, r2\n\tld.1\tr2, r5\n\tld.1\tr13, r6\n\tld.1\tr14, r3\n\tld.1\t64, r2\n\tadd\t32, r2, r4\n\tadd\t64, r0, r7\n\tst.1\tr4, r7\n\tst.1\tr2, r3\n\tld.1\tr1, r3\n\tadd\t64, r2, r4\n\tst.1\tr4, r3\n\tadd\t96, r2, r4\n\tand\t@CPI18_4[0], r6, r6\n\tsub.s!\t0, r3, r7\n\tjump.eq\t@.BB18_61\n\tadd\tr0, r0, r7\n.BB18_60:\n\tadd\tr7, r4, r8\n\tadd\t32, r7, r7\n\tadd\tr7, r1, r9\n\tld.1\tr9, r9\n\tst.1\tr8, r9\n\tsub!\tr7, r3, r8\n\tjump.lt\t@.BB18_60\n.BB18_61:\n\tadd\tr3, r4, r1\n\tst.1\tr1, r0\n\tadd\t127, r3, r1\n\tsub.s\t32, r0, r3\n\tand\tr1, r3, r1\n\tadd\t@CPI18_2[0], r0, r3\n\tsub.s!\t@CPI18_2[0], r2, r4\n\tadd.ge\tr3, r0, r2\n\tshl.s\t64, r2, r2\n\tsub.s!\t@CPI18_2[0], r1, r4\n\tadd.ge\tr3, r0, r1\n\tshl.s\t96, r1, r1\n\tor\tr1, r2, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI18_2[0], r2, r4\n\tadd.ge\tr3, r0, r2\n\tshl.s\t192, r2, r2\n\tor\tr2, r1, r1\n\tor\t@CPI18_5[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t3, r0, r3\n\tadd\t@CPI18_6[0], r0, r4\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tadd\tr0, r0, stack-[11]\n\tadd\tstack-[13], r0, r9\n\tadd\tstack-[8], r0, r10\n\tadd\tstack-[12], r0, r11\n\tadd\tstack-[9], r0, r8\n\tadd\tstack-[7], r0, r12\n\tjump.eq\t@.BB18_12\n.BB18_7:\n\tcontext.gas_left\tr14\n\tadd\t128, r9, r1\n\tld.1\tr1, r15\n\tadd\tstack[@calldatasize], r0, r2\n\tsub.s!\t@CPI18_10[0], r11, r1\n\tjump.ge\t@.BB18_8\n\tadd\t63, r11, r1\n\tsub.s\t32, r0, r3\n\tadd\tr3, r0, stack-[4]\n\tand\tr1, r3, r1\n\tld.1\t64, r13\n\tadd\tr13, r1, r1\n\tsub!\tr1, r13, r3\n\tadd\t0, r0, r3\n\tadd.lt\t1, r0, r3\n\tsub.s!\t@CPI18_11[0], r1, r4\n\tjump.gt\t@.BB18_8\n\tand!\t1, r3, r3\n\tjump.ne\t@.BB18_8\n\tst.1\t64, r1\n\tst.1.inc\tr13, r11, r1\n\tadd\tr11, r12, r3\n\tsub!\tr3, r2, r2\n\tjump.gt\t@.BB18_12\n\tand\t31, r11, r2\n\tptr.add\tstack[@ptr_calldata], r12, r3\n\tshr.s!\t5, r11, r4\n\tjump.eq\t@.BB18_64\n\tadd\tr0, r0, r5\n.BB18_15:\n\tshl.s\t5, r5, r6\n\tadd\tr1, r6, r7\n\tptr.add\tr3, r6, r6\n\tld\tr6, r6\n\tst.1\tr7, r6\n\tadd\t1, r5, r5\n\tsub!\tr5, r4, r6\n\tjump.lt\t@.BB18_15\n.BB18_64:\n\tsub.s!\t0, r2, r5\n\tjump.eq\t@.BB18_17\n\tshl.s\t5, r4, r4\n\tptr.add\tr3, r4, r3\n\tadd\tr1, r4, r4\n\tshl.s\t3, r2, r2\n\tld.1\tr4, r5\n\tshl\tr5, r2, r5\n\tshr\tr5, r2, r5\n\tld\tr3, r3\n\tsub\t256, r2, r2\n\tshr\tr3, r2, r3\n\tshl\tr3, r2, r2\n\tor\tr2, r5, r2\n\tst.1\tr4, r2\n.BB18_17:\n\tadd\tr1, r11, r1\n\tst.1\tr1, r0\n\tcontext.gas_left\tr3\n\tld.1\tr9, r2\n\tadd\t224, r2, r1\n\tld.1\tr1, r4\n\tadd\t192, r2, r1\n\tld.1\tr1, r11\n\tsub!\tr11, r4, r1\n\tadd\tr2, r0, stack-[12]\n\tjump.eq\t@.BB18_20\n\tadd\tr4, r0, stack-[1]\n\tadd\tr11, r0, stack-[7]\n\tadd\tr3, r0, stack-[5]\n\tadd\t@CPI18_12[0], r0, r1\n\tst.2\t0, r1\n\tadd\t@CPI18_2[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI18_2[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI18_13[0], r1, r1\n\tadd\t32779, r0, r2\n\tadd\tr10, r0, stack-[8]\n\tadd\tr8, r0, stack-[9]\n\tadd\tr13, r0, stack-[6]\n\tadd\tr14, r0, stack-[3]\n\tadd\tr15, r0, stack-[2]\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tstack-[2], r0, r15\n\tadd\tstack-[3], r0, r14\n\tadd\tstack-[6], r0, r13\n\tadd\tstack-[9], r0, r8\n\tadd\tstack-[8], r0, r10\n\tadd\tstack-[13], r0, r9\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB18_12\n\tld\tr1, r1\n\tadd\tstack-[1], r0, r2\n\tadd\tr1, r2, r1\n\tadd\tstack-[7], r0, r11\n\tsub!\tr11, r1, r2\n\tadd.ge\tr1, r0, r11\n\tadd\tstack-[12], r0, r2\n\tadd\tstack-[5], r0, r3\n.BB18_20:\n\tsub\tr10, r14, r1\n\tadd\tr1, r15, r10\n\tadd\t160, r2, r1\n\tadd\tr1, r0, stack-[8]\n\tld.1\tr1, r1\n\tand!\t@CPI18_4[0], r1, r5\n\tjump.eq\t@.BB18_37\n\tld.1\tr13, r1\n\tsub.s!\t0, r1, r1\n\tjump.eq\t@.BB18_21\n\tadd\tr10, r0, stack-[2]\n\tadd\tr11, r0, stack-[7]\n\tadd\tr3, r0, stack-[5]\n\tadd\t96, r2, r1\n\tld.1\tr1, r1\n\tadd\tr1, r0, stack-[1]\n\tadd\t@CPI18_14[0], r0, r1\n\tst.2\t0, r1\n\tadd\tr5, r0, stack-[3]\n\tst.2\t4, r5\n\tadd\t@CPI18_2[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI18_2[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI18_15[0], r1, r1\n\tadd\t32770, r0, r2\n\tadd\tr8, r0, stack-[9]\n\tadd\tr13, r0, stack-[6]\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tstack-[6], r0, r7\n\tadd\tstack-[9], r0, r4\n\tadd\tstack-[13], r0, r9\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB18_12\n\tld\tr1, r1\n\tsub.s!\t0, r1, r1\n\tjump.eq\t@.BB18_12\n\tadd\tstack-[7], r0, r11\n\tadd\tstack-[2], r0, r10\n\tmul\tr11, r10, r1, r2\n\tld.1\t64, r8\n\tadd\t36, r8, r2\n\tadd\t96, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI18_16[0], r0, r2\n\tst.1\tr8, r2\n\tadd\t4, r8, r2\n\tst.1\tr2, r4\n\tld.1\tr7, r2\n\tadd\t100, r8, r3\n\tst.1\tr3, r2\n\tadd\t132, r8, r3\n\tsub.s!\t0, r2, r4\n\tjump.eq\t@.BB18_28\n\tadd\tr0, r0, r4\n.BB18_27:\n\tadd\tr4, r3, r5\n\tadd\t32, r4, r4\n\tadd\tr4, r7, r6\n\tld.1\tr6, r6\n\tst.1\tr5, r6\n\tsub!\tr4, r2, r5\n\tjump.lt\t@.BB18_27\n.BB18_28:\n\tadd\tr2, r3, r3\n\tst.1\tr3, r0\n\tadd\t68, r8, r3\n\tst.1\tr3, r1\n\tadd\tstack-[3], r0, r5\n\tsub.s!\t4, r5, r1\n\tjump.eq\t@.BB18_35\n\tadd\t31, r2, r1\n\tadd\tstack-[4], r0, r2\n\tand\tr1, r2, r1\n\tadd\t@CPI18_2[0], r0, r2\n\tsub.s!\t@CPI18_2[0], r8, r3\n\tadd\tr2, r0, r3\n\tadd.lt\tr8, r0, r3\n\tshl.s\t64, r3, r3\n\tadd\t132, r1, r1\n\tsub.s!\t@CPI18_2[0], r1, r4\n\tadd.ge\tr2, r0, r1\n\tshl.s\t96, r1, r1\n\tor\tr1, r3, r1\n\tadd\tstack-[1], r0, r4\n\tsub.s!\t@CPI18_2[0], r4, r3\n\tadd.lt\tr4, r0, r2\n\tshl.s\t192, r2, r2\n\tor\tr1, r2, r1\n\tadd\tr5, r0, r2\n\tadd\tr8, r0, stack-[9]\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tadd\tstack-[9], r0, r8\n\tadd\tstack-[2], r0, r10\n\tadd\tstack-[3], r0, r5\n\tadd\tstack-[7], r0, r11\n\tadd\tstack-[13], r0, r9\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI18_2[0], r3, stack[@returndatasize]\n\tand\t@CPI18_2[0], r3, r4\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB18_30\n.BB18_35:\n\tsub.s!\t@CPI18_11[0], r8, r1\n\tjump.gt\t@.BB18_8\n\tst.1\t64, r8\n\tadd\tstack-[5], r0, r3\n\tjump\t@.BB18_21\n.BB18_37:\n\tld.1\tr2, r1\n\tand\t@CPI18_4[0], r1, r5\n.BB18_21:\n\tcontext.gas_left\tr1\n\tsub\tr3, r1, r1\n\tadd\tr1, r10, r1\n\tadd\tr1, r0, stack-[7]\n\tmul\tr1, r11, r2, r1\n\tadd\t64, r9, r1\n\tld.1\tr1, r1\n\tadd\tr2, r0, stack-[13]\n\tadd\tr1, r0, stack-[9]\n\tsub!\tr1, r2, r1\n\tjump.lt\t@.BB18_38\n\tst.1\t0, r5\n\tst.1\t32, r0\n\tadd\t@CPI18_2[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI18_2[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI18_17[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tadd\tstack-[13], r0, r7\n\tjump.eq\t@.BB18_12\n\tadd\tstack-[9], r0, r2\n\tsub\tr2, r7, r3\n\tld\tr1, r1\n\tsload\tr1, r2\n\tand\t@CPI18_18[0], r2, r4\n\tadd\tr4, r3, r3\n\tsub!\tr3, r4, r4\n\tadd\t0, r0, r4\n\tadd.lt\t1, r0, r4\n\tand!\t1, r4, r4\n\tjump.ne\t@.BB18_41\n\tsub.s!\t@CPI18_19[0], r3, r4\n\tjump.ge\t@.BB18_43\n\tand\t@CPI18_20[0], r2, r2\n\tor\tr3, r2, r2\n\tsstore\tr1, r2\n\tadd\tstack-[10], r0, r1\n\tld.1\tr1, r5\n\tadd\tstack-[8], r0, r1\n\tld.1\tr1, r2\n\tadd\tstack-[12], r0, r1\n\tld.1.inc\tr1, r3, r1\n\tld.1\tr1, r1\n\tld.1\t64, r4\n\tadd\t96, r4, r6\n\tadd\tstack-[7], r0, r8\n\tst.1\tr6, r8\n\tadd\t64, r4, r6\n\tst.1\tr6, r7\n\tadd\t32, r4, r6\n\tadd\tstack-[11], r0, r7\n\tst.1\tr6, r7\n\tst.1\tr4, r1\n\tadd\t@CPI18_2[0], r0, r1\n\tcontext.gas_left\tr6\n\tsub.s!\t@CPI18_2[0], r6, r7\n\tadd.ge\tr1, r0, r6\n\tsub.s!\t@CPI18_2[0], r4, r7\n\tadd.lt\tr4, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r6, r4\n\tor\tr4, r1, r1\n\tor\t@CPI18_21[0], r1, r1\n\tand\t@CPI18_4[0], r3, r6\n\tand\t@CPI18_4[0], r2, r7\n\tadd\t32781, r0, r2\n\tadd\t4, r0, r3\n\tadd\t@CPI18_22[0], r0, r4\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB18_12\n\tadd\tstack-[13], r0, r1\n\tret\n.BB18_12:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB18_8:\n\tadd\t@CPI18_24[0], r0, r1\n\tst.1\t0, r1\n\tadd\t65, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI18_25[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB18_1:\n\tld.1\t64, r1\n\tadd\t68, r1, r2\n\tadd\t@CPI18_0[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t23, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI18_1[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI18_2[0], r0, r2\n\tsub.s!\t@CPI18_2[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI18_3[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB18_3:\n\tadd\t@CPI18_27[0], r0, r1\n\tst.1\t0, r1\n\tadd\t@CPI18_28[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB18_38:\n\tld.1\t64, r2\n\tadd\tr2, r0, stack-[13]\n\tadd\t@CPI18_26[0], r0, r1\n\tst.1\tr2, r1\n\tadd\t4, r2, r1\n\tnear_call\tr0, @abi_encode_uint256_stringliteral_6d9d_29548, @DEFAULT_UNWIND\n\tadd\tstack-[13], r0, r4\n\tsub\tr1, r4, r1\n\tadd\t@CPI18_2[0], r0, r2\n\tsub.s!\t@CPI18_2[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tsub.s!\t@CPI18_2[0], r4, r3\n\tadd.lt\tr4, r0, r2\n\tshl.s\t64, r2, r2\n\tshl.s\t96, r1, r1\n\tor\tr1, r2, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB18_41:\n\tadd\t@CPI18_24[0], r0, r1\n\tst.1\t0, r1\n\tadd\t17, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI18_25[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB18_43:\n\tld.1\t64, r1\n\tadd\t68, r1, r2\n\tadd\t@CPI18_23[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t16, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI18_1[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI18_2[0], r0, r2\n\tsub.s!\t@CPI18_2[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI18_3[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB18_30:\n\tld.1\t64, r2\n\tand\t31, r4, r3\n\tshr.s!\t5, r4, r4\n\tjump.eq\t@.BB18_63\n\tadd\tr0, r0, r5\n.BB18_32:\n\tshl.s\t5, r5, r6\n\tadd\tr2, r6, r7\n\tptr.add\tr1, r6, r6\n\tld\tr6, r6\n\tst.1\tr7, r6\n\tadd\t1, r5, r5\n\tsub!\tr5, r4, r6\n\tjump.lt\t@.BB18_32\n.BB18_63:\n\tsub.s!\t0, r3, r5\n\tjump.eq\t@.BB18_34\n\tshl.s\t5, r4, r4\n\tptr.add\tr1, r4, r1\n\tadd\tr2, r4, r4\n\tshl.s\t3, r3, r3\n\tld.1\tr4, r5\n\tshl\tr5, r3, r5\n\tshr\tr5, r3, r5\n\tld\tr1, r1\n\tsub\t256, r3, r3\n\tshr\tr1, r3, r1\n\tshl\tr1, r3, r1\n\tor\tr1, r5, r1\n\tst.1\tr4, r1\n.BB18_34:\n\tadd\t@CPI18_2[0], r0, r1\n\tadd\tstack[@returndatasize], r0, r3\n\tsub.s!\t@CPI18_2[0], r3, r4\n\tadd.ge\tr1, r0, r3\n\tsub.s!\t@CPI18_2[0], r2, r4\n\tadd.lt\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t96, r3, r2\n\tor\tr2, r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB18_47:\n\tld.1\t64, r1\n\tadd\t68, r1, r2\n\tadd\t@CPI18_9[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t18, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI18_1[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI18_2[0], r0, r2\n\tsub.s!\t@CPI18_2[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI18_3[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB18_54:\n\tld.1\t64, r1\n\tadd\t68, r1, r2\n\tadd\t@CPI18_8[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t18, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI18_1[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI18_2[0], r0, r2\n\tsub.s!\t@CPI18_2[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI18_3[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB18_57:\n\tld.1\t64, r1\n\tadd\t68, r1, r2\n\tadd\t@CPI18_7[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t18, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI18_1[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI18_2[0], r0, r2\n\tsub.s!\t@CPI18_2[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI18_3[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end18:\n\nfun_getUserOpHash:\n.func_begin19:\n\tnop\tstack+=[3]\n\tsub.s\t31, r0, r2\n\tsub\tr2, r1, r4\n\tadd\t64, r1, r3\n\tptr.add\tstack[@ptr_calldata], r0, r2\n\tptr.add\tr2, r3, r3\n\tld\tr3, r9\n\tadd\tstack[@calldatasize], r0, r3\n\tadd\tr4, r0, stack-[2]\n\tadd\tr3, r4, r4\n\tadd\t@CPI19_0[0], r0, r5\n\tsub!\tr9, r4, r6\n\tadd\t0, r0, r6\n\tadd.lt\tr5, r0, r6\n\tand\t@CPI19_0[0], r4, r4\n\tand\t@CPI19_0[0], r9, r7\n\tsub!\tr7, r4, r8\n\tadd.le\t0, r0, r5\n\txor\tr7, r4, r4\n\tsub.s!\t@CPI19_0[0], r4, r4\n\tadd\tr6, r0, r4\n\tadd.eq\tr5, r0, r4\n\tsub.s!\t0, r4, r4\n\tjump.eq\t@.BB19_1\n\tadd\tr9, r1, r4\n\tptr.add\tr2, r4, r5\n\tld\tr5, r9\n\tsub.s!\t@CPI19_1[0], r9, r5\n\tjump.gt\t@.BB19_1\n\tsub\tr3, r9, r5\n\tadd\t32, r4, r3\n\tadd\t@CPI19_0[0], r0, r4\n\tsub!\tr3, r5, r6\n\tadd\t0, r0, r6\n\tadd.gt\tr4, r0, r6\n\tand\t@CPI19_0[0], r5, r5\n\tand\t@CPI19_0[0], r3, r7\n\tsub!\tr7, r5, r8\n\tadd.ge\t0, r0, r4\n\txor\tr7, r5, r5\n\tsub.s!\t@CPI19_0[0], r5, r5\n\tadd.ne\tr6, r0, r4\n\tsub.s!\t0, r4, r4\n\tjump.ne\t@.BB19_1\n\tptr.add\tr2, r3, r3\n\tld.1\t64, r2\n\tand\t31, r9, r4\n\tshr.s!\t5, r9, r5\n\tjump.eq\t@.BB19_34\n\tadd\tr0, r0, r6\n.BB19_6:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr3, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB19_6\n.BB19_34:\n\tadd\tr1, r0, stack-[3]\n\tsub.s!\t0, r4, r6\n\tjump.eq\t@.BB19_8\n\tshl.s\t5, r5, r5\n\tptr.add\tr3, r5, r3\n\tadd\tr2, r5, r5\n\tshl.s\t3, r4, r4\n\tld.1\tr5, r6\n\tshl\tr6, r4, r6\n\tshr\tr6, r4, r6\n\tld\tr3, r3\n\tsub\t256, r4, r4\n\tshr\tr3, r4, r3\n\tshl\tr3, r4, r3\n\tor\tr3, r6, r3\n\tst.1\tr5, r3\n.BB19_8:\n\tadd\t@CPI19_2[0], r0, r3\n\tsub.s!\t@CPI19_2[0], r9, r4\n\tadd\tr3, r0, r1\n\tadd.lt\tr9, r0, r1\n\tshl.s\t96, r1, r1\n\tsub.s!\t@CPI19_2[0], r2, r4\n\tadd.ge\tr3, r0, r2\n\tshl.s\t64, r2, r2\n\tor\tr2, r1, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI19_2[0], r2, r4\n\tadd.ge\tr3, r0, r2\n\tshl.s\t192, r2, r2\n\tor\tr2, r1, r1\n\tor\t@CPI19_3[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tadd\tstack-[3], r0, r10\n\tjump.eq\t@.BB19_1\n\tadd\tstack[@calldatasize], r0, r3\n\tadd\tstack-[2], r0, r2\n\tadd\tr3, r2, r5\n\tadd\t96, r10, r4\n\tptr.add\tstack[@ptr_calldata], r0, r2\n\tptr.add\tr2, r4, r4\n\tld\tr4, r4\n\tadd\t@CPI19_0[0], r0, r6\n\tsub!\tr4, r5, r7\n\tadd\t0, r0, r7\n\tadd.ge\tr6, r0, r7\n\tand\t@CPI19_0[0], r5, r5\n\tand\t@CPI19_0[0], r4, r8\n\tsub!\tr8, r5, r9\n\tadd.ge\t0, r0, r6\n\txor\tr8, r5, r5\n\tsub.s!\t@CPI19_0[0], r5, r5\n\tadd\tr7, r0, r5\n\tadd.eq\tr6, r0, r5\n\tld\tr1, r1\n\tadd\tr1, r0, stack-[1]\n\tsub.s!\t0, r5, r1\n\tjump.ne\t@.BB19_1\n\tadd\tr4, r10, r4\n\tptr.add\tr2, r4, r1\n\tld\tr1, r1\n\tsub.s!\t@CPI19_1[0], r1, r5\n\tjump.gt\t@.BB19_1\n\tsub\tr3, r1, r5\n\tadd\t32, r4, r3\n\tadd\t@CPI19_0[0], r0, r4\n\tsub!\tr3, r5, r6\n\tadd\t0, r0, r6\n\tadd.gt\tr4, r0, r6\n\tand\t@CPI19_0[0], r5, r5\n\tand\t@CPI19_0[0], r3, r7\n\tsub!\tr7, r5, r8\n\tadd.ge\t0, r0, r4\n\txor\tr7, r5, r5\n\tsub.s!\t@CPI19_0[0], r5, r5\n\tadd.ne\tr6, r0, r4\n\tsub.s!\t0, r4, r4\n\tjump.ne\t@.BB19_1\n\tptr.add\tr2, r3, r3\n\tld.1\t64, r2\n\tand\t31, r1, r4\n\tshr.s!\t5, r1, r5\n\tjump.eq\t@.BB19_33\n\tadd\tr0, r0, r6\n.BB19_14:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr3, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB19_14\n.BB19_33:\n\tsub.s!\t0, r4, r6\n\tjump.eq\t@.BB19_16\n\tshl.s\t5, r5, r5\n\tptr.add\tr3, r5, r3\n\tadd\tr2, r5, r5\n\tshl.s\t3, r4, r4\n\tld.1\tr5, r6\n\tshl\tr6, r4, r6\n\tshr\tr6, r4, r6\n\tld\tr3, r3\n\tsub\t256, r4, r4\n\tshr\tr3, r4, r3\n\tshl\tr3, r4, r3\n\tor\tr3, r6, r3\n\tst.1\tr5, r3\n.BB19_16:\n\tadd\t@CPI19_2[0], r0, r3\n\tsub.s!\t@CPI19_2[0], r1, r4\n\tadd.ge\tr3, r0, r1\n\tshl.s\t96, r1, r1\n\tsub.s!\t@CPI19_2[0], r2, r4\n\tadd.ge\tr3, r0, r2\n\tshl.s\t64, r2, r2\n\tor\tr2, r1, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI19_2[0], r2, r4\n\tadd.ge\tr3, r0, r2\n\tshl.s\t192, r2, r2\n\tor\tr2, r1, r1\n\tor\t@CPI19_3[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tadd\tstack-[3], r0, r10\n\tjump.eq\t@.BB19_1\n\tadd\tstack[@calldatasize], r0, r3\n\tadd\tstack-[2], r0, r2\n\tadd\tr3, r2, r5\n\tadd\t288, r10, r4\n\tptr.add\tstack[@ptr_calldata], r0, r2\n\tptr.add\tr2, r4, r4\n\tld\tr4, r4\n\tadd\t@CPI19_0[0], r0, r6\n\tsub!\tr4, r5, r7\n\tadd\t0, r0, r7\n\tadd.ge\tr6, r0, r7\n\tand\t@CPI19_0[0], r5, r5\n\tand\t@CPI19_0[0], r4, r8\n\tsub!\tr8, r5, r9\n\tadd.ge\t0, r0, r6\n\txor\tr8, r5, r5\n\tsub.s!\t@CPI19_0[0], r5, r5\n\tadd\tr7, r0, r5\n\tadd.eq\tr6, r0, r5\n\tld\tr1, r9\n\tsub.s!\t0, r5, r1\n\tjump.ne\t@.BB19_1\n\tadd\tr4, r10, r4\n\tptr.add\tr2, r4, r1\n\tld\tr1, r1\n\tsub.s!\t@CPI19_1[0], r1, r5\n\tjump.gt\t@.BB19_1\n\tsub\tr3, r1, r5\n\tadd\t32, r4, r3\n\tadd\t@CPI19_0[0], r0, r4\n\tsub!\tr3, r5, r6\n\tadd\t0, r0, r6\n\tadd.gt\tr4, r0, r6\n\tand\t@CPI19_0[0], r5, r5\n\tand\t@CPI19_0[0], r3, r7\n\tsub!\tr7, r5, r8\n\tadd.ge\t0, r0, r4\n\txor\tr7, r5, r5\n\tsub.s!\t@CPI19_0[0], r5, r5\n\tadd.ne\tr6, r0, r4\n\tsub.s!\t0, r4, r4\n\tjump.ne\t@.BB19_1\n\tptr.add\tr2, r3, r3\n\tld.1\t64, r2\n\tand\t31, r1, r4\n\tshr.s!\t5, r1, r5\n\tjump.eq\t@.BB19_32\n\tadd\tr0, r0, r6\n.BB19_22:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr3, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB19_22\n.BB19_32:\n\tadd\tr9, r0, stack-[2]\n\tsub.s!\t0, r4, r6\n\tjump.eq\t@.BB19_24\n\tshl.s\t5, r5, r5\n\tptr.add\tr3, r5, r3\n\tadd\tr2, r5, r5\n\tshl.s\t3, r4, r4\n\tld.1\tr5, r6\n\tshl\tr6, r4, r6\n\tshr\tr6, r4, r6\n\tld\tr3, r3\n\tsub\t256, r4, r4\n\tshr\tr3, r4, r3\n\tshl\tr3, r4, r3\n\tor\tr3, r6, r3\n\tst.1\tr5, r3\n.BB19_24:\n\tadd\t@CPI19_2[0], r0, r3\n\tsub.s!\t@CPI19_2[0], r1, r4\n\tadd.ge\tr3, r0, r1\n\tshl.s\t96, r1, r1\n\tsub.s!\t@CPI19_2[0], r2, r4\n\tadd.ge\tr3, r0, r2\n\tshl.s\t64, r2, r2\n\tor\tr2, r1, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI19_2[0], r2, r4\n\tadd.ge\tr3, r0, r2\n\tshl.s\t192, r2, r2\n\tor\tr2, r1, r1\n\tor\t@CPI19_3[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tadd\tstack-[3], r0, r9\n\tadd\tstack-[2], r0, r11\n\tjump.eq\t@.BB19_1\n\tadd\t256, r9, r2\n\tptr.add\tstack[@ptr_calldata], r0, r3\n\tptr.add\tr3, r2, r2\n\tadd\t224, r9, r4\n\tptr.add\tr3, r4, r4\n\tadd\t192, r9, r5\n\tptr.add\tr3, r5, r5\n\tadd\t160, r9, r6\n\tptr.add\tr3, r6, r6\n\tadd\t128, r9, r7\n\tptr.add\tr3, r7, r7\n\tadd\t32, r9, r8\n\tptr.add\tr3, r8, r8\n\tptr.add\tr3, r9, r3\n\tld\tr3, r3\n\tld\tr8, r8\n\tld\tr7, r7\n\tld\tr6, r6\n\tld\tr5, r5\n\tld\tr4, r4\n\tld\tr2, r2\n\tld\tr1, r9\n\tld.1\t64, r1\n\tadd\t320, r1, r10\n\tst.1\tr10, r9\n\tadd\t288, r1, r9\n\tst.1\tr9, r2\n\tadd\t256, r1, r2\n\tst.1\tr2, r4\n\tadd\t224, r1, r2\n\tst.1\tr2, r5\n\tadd\t192, r1, r2\n\tst.1\tr2, r6\n\tadd\t160, r1, r2\n\tst.1\tr2, r7\n\tadd\t128, r1, r2\n\tst.1\tr2, r11\n\tadd\t96, r1, r2\n\tadd\tstack-[1], r0, r4\n\tst.1\tr2, r4\n\tadd\t64, r1, r2\n\tst.1\tr2, r8\n\tand\t@CPI19_4[0], r3, r3\n\tadd\t32, r1, r2\n\tst.1\tr2, r3\n\tadd\t320, r0, r3\n\tst.1\tr1, r3\n\tsub.s!\t@CPI19_5[0], r1, r3\n\tjump.ge\t@.BB19_26\n\tadd\t352, r1, r3\n\tst.1\t64, r3\n\tadd\t@CPI19_2[0], r0, r3\n\tsub.s!\t@CPI19_2[0], r2, r4\n\tadd.ge\tr3, r0, r2\n\tshl.s\t64, r2, r2\n\tld.1\tr1, r1\n\tsub.s!\t@CPI19_2[0], r1, r4\n\tadd.ge\tr3, r0, r1\n\tshl.s\t96, r1, r1\n\tor\tr1, r2, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI19_2[0], r2, r4\n\tadd.ge\tr3, r0, r2\n\tshl.s\t192, r2, r2\n\tor\tr2, r1, r1\n\tor\t@CPI19_3[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB19_1\n\tld\tr1, r1\n\tadd\tr1, r0, stack-[2]\n\tld.1\t64, r1\n\tadd\tr1, r0, stack-[3]\n\tadd\t@CPI19_6[0], r0, r1\n\tst.2\t0, r1\n\tadd\t@CPI19_2[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI19_2[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI19_7[0], r1, r1\n\tadd\t32779, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB19_1\n\tadd\tstack-[3], r0, r4\n\tadd\t32, r4, r2\n\tld\tr1, r1\n\tadd\tstack-[2], r0, r3\n\tst.1\tr2, r3\n\tadd\t96, r4, r3\n\tst.1\tr3, r1\n\tcontext.this\tr1\n\tand\t@CPI19_4[0], r1, r1\n\tadd\t64, r4, r3\n\tst.1\tr3, r1\n\tadd\t96, r0, r1\n\tst.1\tr4, r1\n\tsub.s!\t@CPI19_8[0], r4, r1\n\tjump.gt\t@.BB19_26\n\tadd\t128, r4, r1\n\tst.1\t64, r1\n\tadd\t@CPI19_2[0], r0, r1\n\tsub.s!\t@CPI19_2[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t64, r2, r2\n\tld.1\tr4, r3\n\tsub.s!\t@CPI19_2[0], r3, r4\n\tadd.ge\tr1, r0, r3\n\tshl.s\t96, r3, r3\n\tor\tr3, r2, r2\n\tcontext.gas_left\tr3\n\tsub.s!\t@CPI19_2[0], r3, r4\n\tadd.lt\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\tr1, r2, r1\n\tor\t@CPI19_3[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB19_1\n\tld\tr1, r1\n\tret\n.BB19_1:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB19_26:\n\tadd\t@CPI19_9[0], r0, r1\n\tst.1\t0, r1\n\tadd\t65, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI19_10[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end19:\n\nabi_encode_struct_ReturnInfo_struct_StakeInfo_struct_StakeInfo_struct_StakeInfo_struct_AggregatorStakeInfo:\n.func_begin20:\n\tadd\t320, r0, r7\n\tst.1.inc\tr1, r7, r7\n\tadd\t320, r1, r8\n\tld.1.inc\tr2, r9, r10\n\tst.1\tr8, r9\n\tld.1\tr10, r8\n\tadd\t352, r1, r9\n\tst.1\tr9, r8\n\tadd\t64, r2, r8\n\tld.1\tr8, r8\n\tsub.s!\t0, r8, r8\n\tadd\t0, r0, r8\n\tadd.ne\t1, r0, r8\n\tadd\t384, r1, r9\n\tst.1\tr9, r8\n\tadd\t96, r2, r8\n\tld.1\tr8, r8\n\tand\t@CPI20_0[0], r8, r8\n\tadd\t416, r1, r9\n\tst.1\tr9, r8\n\tadd\t128, r2, r8\n\tld.1\tr8, r8\n\tand\t@CPI20_0[0], r8, r8\n\tadd\t448, r1, r9\n\tst.1\tr9, r8\n\tadd\t160, r2, r2\n\tld.1\tr2, r9\n\tadd\t480, r1, r2\n\tadd\t192, r0, r8\n\tst.1\tr2, r8\n\tadd\t512, r1, r2\n\tld.1\tr9, r8\n\tst.1\tr2, r8\n\tadd\t544, r1, r2\n\tsub.s!\t0, r8, r10\n\tjump.eq\t@.BB20_3\n\tadd\tr0, r0, r10\n.BB20_2:\n\tadd\tr10, r2, r11\n\tadd\t32, r10, r10\n\tadd\tr10, r9, r12\n\tld.1\tr12, r12\n\tst.1\tr11, r12\n\tsub!\tr10, r8, r11\n\tjump.lt\t@.BB20_2\n.BB20_3:\n\tadd\tr8, r2, r9\n\tst.1\tr9, r0\n\tld.1.inc\tr3, r3, r9\n\tst.1\tr7, r3\n\tld.1\tr9, r3\n\tadd\t64, r1, r7\n\tst.1\tr7, r3\n\tadd\t96, r1, r3\n\tld.1.inc\tr4, r4, r7\n\tst.1\tr3, r4\n\tld.1\tr7, r3\n\tadd\t128, r1, r4\n\tst.1\tr4, r3\n\tadd\t160, r1, r3\n\tld.1.inc\tr5, r4, r5\n\tst.1\tr3, r4\n\tld.1\tr5, r3\n\tadd\t192, r1, r4\n\tst.1\tr4, r3\n\tld.1.inc\tr6, r3, r4\n\tand\t@CPI20_1[0], r3, r3\n\tadd\t224, r1, r5\n\tst.1\tr5, r3\n\tld.1\tr4, r3\n\tadd\t256, r1, r4\n\tld.1.inc\tr3, r3, r5\n\tst.1\tr4, r3\n\tadd\t288, r1, r1\n\tld.1\tr5, r3\n\tst.1\tr1, r3\n\tadd\t31, r8, r1\n\tsub.s\t32, r0, r3\n\tand\tr1, r3, r1\n\tadd\tr1, r2, r1\n\tret\n.func_end20:\n\nabi_encode_struct_ReturnInfo_struct_StakeInfo_struct_StakeInfo_struct_StakeInfo:\n.func_begin21:\n\tadd\t224, r0, r6\n\tst.1.inc\tr1, r6, r6\n\tadd\t224, r1, r7\n\tld.1.inc\tr2, r8, r9\n\tst.1\tr7, r8\n\tld.1\tr9, r7\n\tadd\t256, r1, r8\n\tst.1\tr8, r7\n\tadd\t64, r2, r7\n\tld.1\tr7, r7\n\tsub.s!\t0, r7, r7\n\tadd\t0, r0, r7\n\tadd.ne\t1, r0, r7\n\tadd\t288, r1, r8\n\tst.1\tr8, r7\n\tadd\t96, r2, r7\n\tld.1\tr7, r7\n\tand\t@CPI21_0[0], r7, r7\n\tadd\t320, r1, r8\n\tst.1\tr8, r7\n\tadd\t128, r2, r7\n\tld.1\tr7, r7\n\tand\t@CPI21_0[0], r7, r7\n\tadd\t352, r1, r8\n\tst.1\tr8, r7\n\tadd\t160, r2, r2\n\tld.1\tr2, r8\n\tadd\t384, r1, r2\n\tadd\t192, r0, r7\n\tst.1\tr2, r7\n\tadd\t416, r1, r2\n\tld.1\tr8, r7\n\tst.1\tr2, r7\n\tadd\t448, r1, r2\n\tsub.s!\t0, r7, r9\n\tjump.eq\t@.BB21_3\n\tadd\tr0, r0, r9\n.BB21_2:\n\tadd\tr9, r2, r10\n\tadd\t32, r9, r9\n\tadd\tr9, r8, r11\n\tld.1\tr11, r11\n\tst.1\tr10, r11\n\tsub!\tr9, r7, r10\n\tjump.lt\t@.BB21_2\n.BB21_3:\n\tadd\tr7, r2, r8\n\tst.1\tr8, r0\n\tld.1.inc\tr3, r3, r8\n\tst.1\tr6, r3\n\tld.1\tr8, r3\n\tadd\t64, r1, r6\n\tst.1\tr6, r3\n\tadd\t96, r1, r3\n\tld.1.inc\tr4, r4, r6\n\tst.1\tr3, r4\n\tld.1\tr6, r3\n\tadd\t128, r1, r4\n\tst.1\tr4, r3\n\tadd\t160, r1, r3\n\tld.1.inc\tr5, r4, r5\n\tst.1\tr3, r4\n\tadd\t192, r1, r1\n\tld.1\tr5, r3\n\tst.1\tr1, r3\n\tadd\t31, r7, r1\n\tsub.s\t32, r0, r3\n\tand\tr1, r3, r1\n\tadd\tr1, r2, r1\n\tret\n.func_end21:\n\nabi_encode_stringliteral_71b8:\n.func_begin22:\n\tadd\t64, r1, r2\n\tadd\t@CPI22_0[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t32, r1, r2\n\tadd\t25, r0, r3\n\tst.1\tr2, r3\n\tadd\t32, r0, r2\n\tst.1\tr1, r2\n\tadd\t96, r1, r1\n\tret\n.func_end22:\n\nabi_encode_stringliteral_d82b:\n.func_begin23:\n\tadd\t64, r1, r2\n\tadd\t@CPI23_0[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t32, r1, r2\n\tadd\t27, r0, r3\n\tst.1\tr2, r3\n\tadd\t32, r0, r2\n\tst.1\tr1, r2\n\tadd\t96, r1, r1\n\tret\n.func_end23:\n\nabi_encode_uint256_stringliteral_230f:\n.func_begin24:\n\tadd\t96, r1, r3\n\tadd\t@CPI24_0[0], r0, r4\n\tst.1\tr3, r4\n\tadd\t64, r1, r3\n\tadd\t20, r0, r4\n\tst.1\tr3, r4\n\tadd\t32, r1, r3\n\tadd\t64, r0, r4\n\tst.1\tr3, r4\n\tst.1\tr1, r2\n\tadd\t128, r1, r1\n\tret\n.func_end24:\n\nabi_encode_uint256_stringliteral_4f6a:\n.func_begin25:\n\tadd\t96, r1, r3\n\tadd\t@CPI25_0[0], r0, r4\n\tst.1\tr3, r4\n\tadd\t64, r1, r3\n\tadd\t23, r0, r4\n\tst.1\tr3, r4\n\tadd\t32, r1, r3\n\tadd\t64, r0, r4\n\tst.1\tr3, r4\n\tst.1\tr1, r2\n\tadd\t128, r1, r1\n\tret\n.func_end25:\n\nabi_encode_uint256_stringliteral_b49b:\n.func_begin26:\n\tadd\t96, r1, r3\n\tadd\t@CPI26_0[0], r0, r4\n\tst.1\tr3, r4\n\tadd\t64, r1, r3\n\tadd\t20, r0, r4\n\tst.1\tr3, r4\n\tadd\t32, r1, r3\n\tadd\t64, r0, r4\n\tst.1\tr3, r4\n\tst.1\tr1, r2\n\tadd\t128, r1, r1\n\tret\n.func_end26:\n\nabi_encode_uint256_stringliteral_15a8:\n.func_begin27:\n\tadd\t128, r1, r3\n\tadd\t@CPI27_0[0], r0, r4\n\tst.1\tr3, r4\n\tadd\t96, r1, r3\n\tadd\t@CPI27_1[0], r0, r4\n\tst.1\tr3, r4\n\tadd\t64, r1, r3\n\tadd\t33, r0, r4\n\tst.1\tr3, r4\n\tadd\t32, r1, r3\n\tadd\t64, r0, r4\n\tst.1\tr3, r4\n\tst.1\tr1, r2\n\tadd\t160, r1, r1\n\tret\n.func_end27:\n\nabi_encode_uint256_stringliteral_1a6d_29536:\n.func_begin28:\n\tadd\t96, r1, r2\n\tadd\t@CPI28_0[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t64, r1, r2\n\tadd\t26, r0, r3\n\tst.1\tr2, r3\n\tadd\t32, r1, r2\n\tadd\t64, r0, r3\n\tst.1\tr2, r3\n\tst.1\tr1, r0\n\tadd\t128, r1, r1\n\tret\n.func_end28:\n\nabi_encode_uint256_stringliteral_1a6d:\n.func_begin29:\n\tadd\t96, r1, r3\n\tadd\t@CPI29_0[0], r0, r4\n\tst.1\tr3, r4\n\tadd\t64, r1, r3\n\tadd\t26, r0, r4\n\tst.1\tr3, r4\n\tadd\t32, r1, r3\n\tadd\t64, r0, r4\n\tst.1\tr3, r4\n\tst.1\tr1, r2\n\tadd\t128, r1, r1\n\tret\n.func_end29:\n\nabi_encode_uint256_stringliteral_7d1d_29538:\n.func_begin30:\n\tadd\t96, r1, r2\n\tadd\t@CPI30_0[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t64, r1, r2\n\tadd\t30, r0, r3\n\tst.1\tr2, r3\n\tadd\t32, r1, r2\n\tadd\t64, r0, r3\n\tst.1\tr2, r3\n\tst.1\tr1, r0\n\tadd\t128, r1, r1\n\tret\n.func_end30:\n\nabi_encode_uint256_stringliteral_7d1d:\n.func_begin31:\n\tadd\t96, r1, r3\n\tadd\t@CPI31_0[0], r0, r4\n\tst.1\tr3, r4\n\tadd\t64, r1, r3\n\tadd\t30, r0, r4\n\tst.1\tr3, r4\n\tadd\t32, r1, r3\n\tadd\t64, r0, r4\n\tst.1\tr3, r4\n\tst.1\tr1, r2\n\tadd\t128, r1, r1\n\tret\n.func_end31:\n\nfun_validatePrepayment_19814:\n.func_begin32:\n\tnop\tstack+=[20]\n\tadd\tr1, r0, r9\n\tcontext.get_context_u128\tr1\n\tsub.s!\t7, r1, r1\n\tjump.le\t@.BB32_1\n\tcontext.gas_left\tr1\n\tadd\tr1, r0, stack-[1]\n\tadd\tr2, r0, stack-[18]\n\tld.1.inc\tr2, r1, r2\n\tadd\tr2, r0, stack-[8]\n\tadd\tr1, r0, stack-[19]\n\tptr.add\tstack[@ptr_calldata], r9, r1\n\tld\tr1, r1\n\tsub.s!\t@CPI32_0[0], r1, r2\n\tjump.ge\t@.BB32_3\n\tadd\tstack-[19], r0, r2\n\tst.1.inc\tr2, r1, r3\n\tadd\t32, r9, r1\n\tadd\tr1, r0, stack-[10]\n\tptr.add\tstack[@ptr_calldata], r1, r1\n\tld\tr1, r1\n\tadd\tr3, r0, stack-[2]\n\tst.1\tr3, r1\n\tadd\t128, r9, r1\n\tadd\tr1, r0, stack-[9]\n\tptr.add\tstack[@ptr_calldata], r1, r1\n\tld\tr1, r1\n\tadd\t64, r2, r3\n\tadd\tr3, r0, stack-[7]\n\tst.1\tr3, r1\n\tadd\t160, r9, r1\n\tadd\tr1, r0, stack-[14]\n\tptr.add\tstack[@ptr_calldata], r1, r1\n\tld\tr1, r1\n\tadd\t96, r2, r3\n\tadd\tr3, r0, stack-[6]\n\tst.1\tr3, r1\n\tadd\t192, r9, r1\n\tadd\tr1, r0, stack-[13]\n\tptr.add\tstack[@ptr_calldata], r1, r1\n\tld\tr1, r1\n\tadd\t128, r2, r3\n\tadd\tr3, r0, stack-[5]\n\tst.1\tr3, r1\n\tadd\t224, r9, r1\n\tadd\tr1, r0, stack-[16]\n\tptr.add\tstack[@ptr_calldata], r1, r1\n\tld\tr1, r1\n\tadd\t192, r2, r3\n\tadd\tr3, r0, stack-[4]\n\tst.1\tr3, r1\n\tadd\t224, r2, r1\n\tadd\t256, r9, r2\n\tadd\tr2, r0, stack-[15]\n\tptr.add\tstack[@ptr_calldata], r2, r2\n\tld\tr2, r2\n\tst.1\tr1, r2\n\tsub.s\t31, r0, r1\n\tsub\tr1, r9, r10\n\tadd\t288, r9, r2\n\tptr.add\tstack[@ptr_calldata], r0, r1\n\tadd\tr2, r0, stack-[11]\n\tptr.add\tr1, r2, r2\n\tld\tr2, r2\n\tadd\t@CPI32_1[0], r0, r4\n\tadd\tstack[@calldatasize], r0, r3\n\tadd\tr3, r10, r5\n\tsub!\tr2, r5, r6\n\tadd\t0, r0, r6\n\tadd.ge\tr4, r0, r6\n\tand\t@CPI32_1[0], r5, r5\n\tand\t@CPI32_1[0], r2, r7\n\tsub!\tr7, r5, r8\n\tadd.ge\t0, r0, r4\n\txor\tr7, r5, r5\n\tsub.s!\t@CPI32_1[0], r5, r5\n\tadd.ne\tr6, r0, r4\n\tsub.s!\t0, r4, r4\n\tjump.ne\t@.BB32_3\n\tadd\tr2, r9, r4\n\tptr.add\tr1, r4, r2\n\tld\tr2, r2\n\tsub.s!\t@CPI32_2[0], r2, r5\n\tjump.gt\t@.BB32_3\n\tsub\tr3, r2, r5\n\tadd\t32, r4, r3\n\tadd\t@CPI32_1[0], r0, r4\n\tsub!\tr3, r5, r6\n\tadd\t0, r0, r6\n\tadd.gt\tr4, r0, r6\n\tand\t@CPI32_1[0], r5, r5\n\tand\t@CPI32_1[0], r3, r7\n\tsub!\tr7, r5, r8\n\tadd.ge\t0, r0, r4\n\txor\tr7, r5, r5\n\tsub.s!\t@CPI32_1[0], r5, r5\n\tadd.ne\tr6, r0, r4\n\tsub.s!\t0, r4, r4\n\tjump.ne\t@.BB32_3\n\tsub.s!\t0, r2, r4\n\tadd\tr0, r0, r4\n\tjump.eq\t@.BB32_11\n\tsub.s!\t19, r2, r2\n\tjump.le\t@.BB32_9\n\tptr.add\tr1, r3, r1\n\tld\tr1, r1\n\tshr.s\t96, r1, r4\n.BB32_11:\n\tadd\tstack-[19], r0, r1\n\tadd\t160, r1, r1\n\tadd\tr1, r0, stack-[12]\n\tst.1\tr1, r4\n\tcontext.get_context_u128\tr1\n\tsub.s!\t8, r1, r1\n\tjump.le\t@.BB32_12\n\tadd\tstack[@calldatasize], r0, r3\n\tadd\tr3, r10, r4\n\tadd\t64, r9, r1\n\tptr.add\tstack[@ptr_calldata], r0, r2\n\tptr.add\tr2, r1, r1\n\tld\tr1, r1\n\tadd\t@CPI32_1[0], r0, r5\n\tsub!\tr1, r4, r6\n\tadd\t0, r0, r6\n\tadd.ge\tr5, r0, r6\n\tand\t@CPI32_1[0], r4, r4\n\tand\t@CPI32_1[0], r1, r7\n\tsub!\tr7, r4, r8\n\tadd.ge\t0, r0, r5\n\txor\tr7, r4, r4\n\tsub.s!\t@CPI32_1[0], r4, r4\n\tadd\tr6, r0, r4\n\tadd.eq\tr5, r0, r4\n\tsub.s!\t0, r4, r4\n\tjump.ne\t@.BB32_3\n\tadd\tr1, r9, r4\n\tptr.add\tr2, r4, r1\n\tld\tr1, r1\n\tsub.s!\t@CPI32_2[0], r1, r5\n\tjump.gt\t@.BB32_3\n\tsub\tr3, r1, r5\n\tadd\t32, r4, r3\n\tadd\t@CPI32_1[0], r0, r4\n\tsub!\tr3, r5, r6\n\tadd\t0, r0, r6\n\tadd.gt\tr4, r0, r6\n\tand\t@CPI32_1[0], r5, r5\n\tand\t@CPI32_1[0], r3, r7\n\tsub!\tr7, r5, r8\n\tadd.ge\t0, r0, r4\n\txor\tr7, r5, r5\n\tsub.s!\t@CPI32_1[0], r5, r5\n\tadd.ne\tr6, r0, r4\n\tsub.s!\t0, r4, r4\n\tjump.ne\t@.BB32_3\n\tptr.add\tr2, r3, r3\n\tld.1\t64, r2\n\tand\t31, r1, r4\n\tshr.s!\t5, r1, r5\n\tjump.eq\t@.BB32_73\n\tadd\tr0, r0, r6\n.BB32_18:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr3, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB32_18\n.BB32_73:\n\tadd\tr10, r0, stack-[17]\n\tadd\tr9, r0, stack-[20]\n\tsub.s!\t0, r4, r6\n\tjump.eq\t@.BB32_20\n\tshl.s\t5, r5, r5\n\tptr.add\tr3, r5, r3\n\tadd\tr2, r5, r5\n\tshl.s\t3, r4, r4\n\tld.1\tr5, r6\n\tshl\tr6, r4, r6\n\tshr\tr6, r4, r6\n\tld\tr3, r3\n\tsub\t256, r4, r4\n\tshr\tr3, r4, r3\n\tshl\tr3, r4, r3\n\tor\tr3, r6, r3\n\tst.1\tr5, r3\n.BB32_20:\n\tadd\t@CPI32_5[0], r0, r3\n\tsub.s!\t@CPI32_5[0], r1, r4\n\tadd.ge\tr3, r0, r1\n\tshl.s\t96, r1, r1\n\tsub.s!\t@CPI32_5[0], r2, r4\n\tadd.ge\tr3, r0, r2\n\tshl.s\t64, r2, r2\n\tor\tr2, r1, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI32_5[0], r2, r4\n\tadd.ge\tr3, r0, r2\n\tshl.s\t192, r2, r2\n\tor\tr2, r1, r1\n\tor\t@CPI32_7[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tadd\tstack-[20], r0, r10\n\tadd\tstack-[17], r0, r2\n\tjump.eq\t@.BB32_3\n\tadd\tstack[@calldatasize], r0, r3\n\tadd\tr3, r2, r5\n\tadd\t96, r10, r4\n\tptr.add\tstack[@ptr_calldata], r0, r2\n\tptr.add\tr2, r4, r4\n\tld\tr4, r4\n\tadd\t@CPI32_1[0], r0, r6\n\tsub!\tr4, r5, r7\n\tadd\t0, r0, r7\n\tadd.ge\tr6, r0, r7\n\tand\t@CPI32_1[0], r5, r5\n\tand\t@CPI32_1[0], r4, r8\n\tsub!\tr8, r5, r9\n\tadd.ge\t0, r0, r6\n\txor\tr8, r5, r5\n\tsub.s!\t@CPI32_1[0], r5, r5\n\tadd\tr7, r0, r5\n\tadd.eq\tr6, r0, r5\n\tld\tr1, r1\n\tadd\tr1, r0, stack-[3]\n\tsub.s!\t0, r5, r1\n\tjump.ne\t@.BB32_3\n\tadd\tr4, r10, r4\n\tptr.add\tr2, r4, r1\n\tld\tr1, r1\n\tsub.s!\t@CPI32_2[0], r1, r5\n\tjump.gt\t@.BB32_3\n\tsub\tr3, r1, r5\n\tadd\t32, r4, r3\n\tadd\t@CPI32_1[0], r0, r4\n\tsub!\tr3, r5, r6\n\tadd\t0, r0, r6\n\tadd.gt\tr4, r0, r6\n\tand\t@CPI32_1[0], r5, r5\n\tand\t@CPI32_1[0], r3, r7\n\tsub!\tr7, r5, r8\n\tadd.ge\t0, r0, r4\n\txor\tr7, r5, r5\n\tsub.s!\t@CPI32_1[0], r5, r5\n\tadd.ne\tr6, r0, r4\n\tsub.s!\t0, r4, r4\n\tjump.ne\t@.BB32_3\n\tptr.add\tr2, r3, r3\n\tld.1\t64, r2\n\tand\t31, r1, r4\n\tshr.s!\t5, r1, r5\n\tjump.eq\t@.BB32_72\n\tadd\tr0, r0, r6\n.BB32_26:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr3, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB32_26\n.BB32_72:\n\tsub.s!\t0, r4, r6\n\tjump.eq\t@.BB32_28\n\tshl.s\t5, r5, r5\n\tptr.add\tr3, r5, r3\n\tadd\tr2, r5, r5\n\tshl.s\t3, r4, r4\n\tld.1\tr5, r6\n\tshl\tr6, r4, r6\n\tshr\tr6, r4, r6\n\tld\tr3, r3\n\tsub\t256, r4, r4\n\tshr\tr3, r4, r3\n\tshl\tr3, r4, r3\n\tor\tr3, r6, r3\n\tst.1\tr5, r3\n.BB32_28:\n\tadd\t@CPI32_5[0], r0, r3\n\tsub.s!\t@CPI32_5[0], r1, r4\n\tadd.ge\tr3, r0, r1\n\tshl.s\t96, r1, r1\n\tsub.s!\t@CPI32_5[0], r2, r4\n\tadd.ge\tr3, r0, r2\n\tshl.s\t64, r2, r2\n\tor\tr2, r1, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI32_5[0], r2, r4\n\tadd.ge\tr3, r0, r2\n\tshl.s\t192, r2, r2\n\tor\tr2, r1, r1\n\tor\t@CPI32_7[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tadd\tstack-[20], r0, r10\n\tadd\tstack-[17], r0, r2\n\tjump.eq\t@.BB32_3\n\tadd\tstack[@calldatasize], r0, r3\n\tadd\tr3, r2, r5\n\tptr.add\tstack[@ptr_calldata], r0, r2\n\tadd\tstack-[11], r0, r4\n\tptr.add\tr2, r4, r4\n\tld\tr4, r4\n\tadd\t@CPI32_1[0], r0, r6\n\tsub!\tr4, r5, r7\n\tadd\t0, r0, r7\n\tadd.ge\tr6, r0, r7\n\tand\t@CPI32_1[0], r5, r5\n\tand\t@CPI32_1[0], r4, r8\n\tsub!\tr8, r5, r9\n\tadd.ge\t0, r0, r6\n\txor\tr8, r5, r5\n\tsub.s!\t@CPI32_1[0], r5, r5\n\tadd\tr7, r0, r5\n\tadd.eq\tr6, r0, r5\n\tld\tr1, r9\n\tsub.s!\t0, r5, r1\n\tjump.ne\t@.BB32_3\n\tadd\tr4, r10, r4\n\tptr.add\tr2, r4, r1\n\tld\tr1, r1\n\tsub.s!\t@CPI32_2[0], r1, r5\n\tjump.gt\t@.BB32_3\n\tsub\tr3, r1, r5\n\tadd\t32, r4, r3\n\tadd\t@CPI32_1[0], r0, r4\n\tsub!\tr3, r5, r6\n\tadd\t0, r0, r6\n\tadd.gt\tr4, r0, r6\n\tand\t@CPI32_1[0], r5, r5\n\tand\t@CPI32_1[0], r3, r7\n\tsub!\tr7, r5, r8\n\tadd.ge\t0, r0, r4\n\txor\tr7, r5, r5\n\tsub.s!\t@CPI32_1[0], r5, r5\n\tadd.ne\tr6, r0, r4\n\tsub.s!\t0, r4, r4\n\tjump.ne\t@.BB32_3\n\tptr.add\tr2, r3, r3\n\tld.1\t64, r2\n\tand\t31, r1, r4\n\tshr.s!\t5, r1, r5\n\tjump.eq\t@.BB32_71\n\tadd\tr0, r0, r6\n.BB32_34:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr3, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB32_34\n.BB32_71:\n\tadd\tr9, r0, stack-[17]\n\tsub.s!\t0, r4, r6\n\tjump.eq\t@.BB32_36\n\tshl.s\t5, r5, r5\n\tptr.add\tr3, r5, r3\n\tadd\tr2, r5, r5\n\tshl.s\t3, r4, r4\n\tld.1\tr5, r6\n\tshl\tr6, r4, r6\n\tshr\tr6, r4, r6\n\tld\tr3, r3\n\tsub\t256, r4, r4\n\tshr\tr3, r4, r3\n\tshl\tr3, r4, r3\n\tor\tr3, r6, r3\n\tst.1\tr5, r3\n.BB32_36:\n\tadd\t@CPI32_5[0], r0, r3\n\tsub.s!\t@CPI32_5[0], r1, r4\n\tadd.ge\tr3, r0, r1\n\tshl.s\t96, r1, r1\n\tsub.s!\t@CPI32_5[0], r2, r4\n\tadd.ge\tr3, r0, r2\n\tshl.s\t64, r2, r2\n\tor\tr2, r1, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI32_5[0], r2, r4\n\tadd.ge\tr3, r0, r2\n\tshl.s\t192, r2, r2\n\tor\tr2, r1, r1\n\tor\t@CPI32_7[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tadd\tstack-[20], r0, r9\n\tadd\tstack-[17], r0, r11\n\tjump.eq\t@.BB32_3\n\tptr.add\tstack[@ptr_calldata], r0, r2\n\tadd\tstack-[15], r0, r3\n\tptr.add\tr2, r3, r3\n\tadd\tstack-[16], r0, r4\n\tptr.add\tr2, r4, r4\n\tadd\tstack-[13], r0, r5\n\tptr.add\tr2, r5, r5\n\tadd\tstack-[14], r0, r6\n\tptr.add\tr2, r6, r6\n\tadd\tstack-[9], r0, r7\n\tptr.add\tr2, r7, r7\n\tadd\tstack-[10], r0, r8\n\tptr.add\tr2, r8, r8\n\tptr.add\tr2, r9, r2\n\tld\tr2, r9\n\tld\tr8, r2\n\tld\tr7, r7\n\tld\tr6, r6\n\tld\tr5, r5\n\tld\tr4, r4\n\tld\tr3, r3\n\tld\tr1, r8\n\tld.1\t64, r1\n\tadd\t320, r1, r10\n\tst.1\tr10, r8\n\tadd\t288, r1, r8\n\tst.1\tr8, r3\n\tadd\t256, r1, r3\n\tst.1\tr3, r4\n\tadd\t224, r1, r3\n\tst.1\tr3, r5\n\tadd\t192, r1, r3\n\tst.1\tr3, r6\n\tadd\t160, r1, r3\n\tst.1\tr3, r7\n\tadd\t128, r1, r3\n\tst.1\tr3, r11\n\tadd\t96, r1, r3\n\tadd\tstack-[3], r0, r4\n\tst.1\tr3, r4\n\tadd\t64, r1, r3\n\tst.1\tr3, r2\n\tadd\t320, r0, r2\n\tst.1.inc\tr1, r2, r2\n\tand\t@CPI32_8[0], r9, r3\n\tst.1\tr2, r3\n\tsub.s!\t@CPI32_9[0], r1, r3\n\tjump.ge\t@.BB32_38\n\tadd\t352, r1, r3\n\tst.1\t64, r3\n\tadd\t@CPI32_5[0], r0, r3\n\tsub.s!\t@CPI32_5[0], r2, r4\n\tadd.ge\tr3, r0, r2\n\tshl.s\t64, r2, r2\n\tld.1\tr1, r1\n\tsub.s!\t@CPI32_5[0], r1, r4\n\tadd.ge\tr3, r0, r1\n\tshl.s\t96, r1, r1\n\tor\tr1, r2, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI32_5[0], r2, r4\n\tadd.ge\tr3, r0, r2\n\tshl.s\t192, r2, r2\n\tor\tr2, r1, r1\n\tor\t@CPI32_7[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB32_3\n\tld\tr1, r1\n\tadd\tr1, r0, stack-[11]\n\tld.1\t64, r1\n\tadd\tr1, r0, stack-[17]\n\tadd\t@CPI32_10[0], r0, r1\n\tst.2\t0, r1\n\tadd\t@CPI32_5[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI32_5[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI32_11[0], r1, r1\n\tadd\t32779, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB32_3\n\tadd\tstack-[17], r0, r4\n\tadd\t32, r4, r2\n\tld\tr1, r1\n\tadd\tstack-[11], r0, r3\n\tst.1\tr2, r3\n\tadd\t96, r4, r3\n\tst.1\tr3, r1\n\tcontext.this\tr1\n\tand\t@CPI32_8[0], r1, r1\n\tadd\t64, r4, r3\n\tst.1\tr3, r1\n\tadd\t96, r0, r1\n\tadd\tr1, r0, stack-[11]\n\tst.1\tr4, r1\n\tsub.s!\t@CPI32_12[0], r4, r1\n\tjump.gt\t@.BB32_38\n\tadd\t128, r4, r1\n\tst.1\t64, r1\n\tadd\t@CPI32_5[0], r0, r1\n\tsub.s!\t@CPI32_5[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t64, r2, r2\n\tld.1\tr4, r3\n\tsub.s!\t@CPI32_5[0], r3, r4\n\tadd.ge\tr1, r0, r3\n\tshl.s\t96, r3, r3\n\tor\tr3, r2, r2\n\tcontext.gas_left\tr3\n\tsub.s!\t@CPI32_5[0], r3, r4\n\tadd.lt\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\tr1, r2, r1\n\tor\t@CPI32_7[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tadd\tstack-[20], r0, r7\n\tjump.eq\t@.BB32_3\n\tld\tr1, r1\n\tadd\tstack-[8], r0, r2\n\tst.1\tr2, r1\n\tcontext.get_context_u128\tr1\n\tsub.s!\t9, r1, r1\n\tjump.le\t@.BB32_44\n\tadd\tstack-[7], r0, r1\n\tld.1\tr1, r1\n\tadd\tstack-[5], r0, r2\n\tld.1\tr2, r2\n\tadd\tstack-[6], r0, r3\n\tld.1\tr3, r3\n\tor\tr3, r2, r4\n\tor\tr4, r1, r4\n\tptr.add\tstack[@ptr_calldata], r0, r5\n\tadd\tstack-[15], r0, r6\n\tptr.add\tr5, r6, r6\n\tld\tr6, r6\n\tor\tr4, r6, r4\n\tadd\tstack-[16], r0, r6\n\tptr.add\tr5, r6, r5\n\tld\tr5, r5\n\tor\tr4, r5, r4\n\tsub.s!\t@CPI32_13[0], r4, r4\n\tjump.ge\t@.BB32_46\n\tadd\tstack-[12], r0, r4\n\tld.1\tr4, r4\n\tand!\t@CPI32_8[0], r4, r4\n\tadd\t3, r0, r5\n\tadd.eq\t1, r0, r5\n\tadd\tstack-[4], r0, r4\n\tld.1\tr4, r4\n\tcontext.get_context_u128\tr6\n\tsub.s!\t10, r6, r6\n\tjump.le\t@.BB32_48\n\tadd\tr1, r2, r1\n\tmul\tr5, r3, r2, r3\n\tadd\tr1, r2, r1\n\tmul\tr1, r4, r3, r1\n\tadd\tr7, r0, r1\n\tadd\tstack-[18], r0, r2\n\tadd\tr3, r0, stack-[16]\n\tnear_call\tr0, @fun_validateAccountPrepayment_29535, @DEFAULT_UNWIND\n\tadd\tr1, r0, stack-[10]\n\tadd\tr2, r0, stack-[15]\n\tcontext.get_context_u128\tr1\n\tsub.s!\t11, r1, r1\n\tjump.le\t@.BB32_50\n\tadd\tstack-[2], r0, r1\n\tld.1\tr1, r1\n\tadd\tr1, r0, stack-[17]\n\tadd\tstack-[19], r0, r1\n\tld.1\tr1, r1\n\tand\t@CPI32_8[0], r1, r1\n\tst.1\t0, r1\n\tadd\t1, r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI32_5[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI32_5[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI32_14[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB32_3\n\tld\tr1, r1\n\tadd\tstack-[17], r0, r2\n\tshr.s\t64, r2, r2\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tadd\t@CPI32_5[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI32_5[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI32_14[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB32_3\n\tadd\tstack-[17], r0, r4\n\tld\tr1, r2\n\tsload\tr2, r1\n\tsub.s\t1, r0, r3\n\tsub!\tr1, r3, r3\n\tjump.eq\t@.BB32_54\n\tadd\t1, r1, r3\n\tsstore\tr2, r3\n\tand\t@CPI32_2[0], r4, r2\n\tsub!\tr1, r2, r1\n\tjump.ne\t@.BB32_56\n\tadd\t@CPI32_16[0], r0, r1\n\tst.2\t0, r1\n\tadd\t@CPI32_5[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI32_5[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI32_11[0], r1, r1\n\tadd\t32779, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tadd\tstack-[20], r0, r3\n\tjump.eq\t@.BB32_3\n\tld\tr1, r1\n\tst.1\t0, r1\n\tadd\tstack-[12], r0, r1\n\tld.1\tr1, r1\n\tand!\t@CPI32_8[0], r1, r1\n\tadd\tr0, r0, r2\n\tadd\tstack-[11], r0, r1\n\tjump.eq\t@.BB32_60\n\tadd\tr3, r0, r1\n\tadd\tstack-[18], r0, r2\n\tadd\tstack-[16], r0, r3\n\tadd\tstack-[10], r0, r4\n\tnear_call\tr0, @fun_validatePaymasterPrepayment_29537, @DEFAULT_UNWIND\n.BB32_60:\n\tcontext.get_context_u128\tr3\n\tsub.s!\t12, r3, r3\n\tjump.le\t@.BB32_61\n\tcontext.gas_left\tr4\n\tcontext.get_context_u128\tr3\n\tsub.s!\t13, r3, r3\n\tadd\tstack-[1], r0, r5\n\tjump.le\t@.BB32_63\n\tsub\tr5, r4, r4\n\tadd\tstack-[14], r0, r3\n\tptr.add\tstack[@ptr_calldata], r3, r3\n\tld\tr3, r3\n\tsub!\tr3, r4, r3\n\tadd\tstack-[18], r0, r4\n\tjump.lt\t@.BB32_65\n\tcontext.get_context_u128\tr3\n\tsub.s!\t14, r3, r3\n\tjump.le\t@.BB32_67\n\tadd\t96, r4, r3\n\tst.1\tr3, r1\n\tadd\t64, r4, r1\n\tadd\tstack-[16], r0, r3\n\tst.1\tr1, r3\n\tcontext.get_context_u128\tr1\n\tsub.s!\t15, r1, r1\n\tjump.le\t@.BB32_69\n\tcontext.gas_left\tr1\n\tsub\tr5, r1, r1\n\tadd\tstack-[13], r0, r3\n\tptr.add\tstack[@ptr_calldata], r3, r3\n\tld\tr3, r3\n\tadd\tr1, r3, r1\n\tadd\t128, r4, r3\n\tst.1\tr3, r1\n\tadd\tstack-[15], r0, r1\n\tret\n.BB32_3:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB32_38:\n\tadd\t@CPI32_21[0], r0, r1\n\tst.1\t0, r1\n\tadd\t65, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI32_22[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB32_1:\n\tld.1\t64, r1\n\tadd\t68, r1, r2\n\tadd\t@CPI32_28[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t16, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI32_4[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI32_5[0], r0, r2\n\tsub.s!\t@CPI32_5[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI32_6[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB32_12:\n\tld.1\t64, r1\n\tadd\t68, r1, r2\n\tadd\t@CPI32_27[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t16, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI32_4[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI32_5[0], r0, r2\n\tsub.s!\t@CPI32_5[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI32_6[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB32_44:\n\tld.1\t64, r1\n\tadd\t68, r1, r2\n\tadd\t@CPI32_26[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t16, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI32_4[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI32_5[0], r0, r2\n\tsub.s!\t@CPI32_5[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI32_6[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB32_46:\n\tld.1\t64, r1\n\tadd\t68, r1, r2\n\tadd\t@CPI32_25[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t24, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI32_4[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI32_5[0], r0, r2\n\tsub.s!\t@CPI32_5[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI32_6[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB32_48:\n\tld.1\t64, r1\n\tadd\t68, r1, r2\n\tadd\t@CPI32_24[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t17, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI32_4[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI32_5[0], r0, r2\n\tsub.s!\t@CPI32_5[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI32_6[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB32_50:\n\tld.1\t64, r1\n\tadd\t68, r1, r2\n\tadd\t@CPI32_23[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t17, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI32_4[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI32_5[0], r0, r2\n\tsub.s!\t@CPI32_5[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI32_6[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB32_54:\n\tadd\t@CPI32_21[0], r0, r1\n\tst.1\t0, r1\n\tadd\t17, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI32_22[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB32_56:\n\tld.1\t64, r2\n\tadd\tr2, r0, stack-[20]\n\tadd\t@CPI32_15[0], r0, r1\n\tst.1\tr2, r1\n\tadd\t4, r2, r1\n\tnear_call\tr0, @abi_encode_uint256_stringliteral_1a6d_29536, @DEFAULT_UNWIND\n\tadd\tstack-[20], r0, r4\n\tsub\tr1, r4, r1\n\tadd\t@CPI32_5[0], r0, r2\n\tsub.s!\t@CPI32_5[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tsub.s!\t@CPI32_5[0], r4, r3\n\tadd.lt\tr4, r0, r2\n\tshl.s\t64, r2, r2\n\tshl.s\t96, r1, r1\n\tor\tr1, r2, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB32_61:\n\tld.1\t64, r1\n\tadd\t68, r1, r2\n\tadd\t@CPI32_20[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t17, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI32_4[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI32_5[0], r0, r2\n\tsub.s!\t@CPI32_5[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI32_6[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB32_63:\n\tld.1\t64, r1\n\tadd\t68, r1, r2\n\tadd\t@CPI32_19[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t17, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI32_4[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI32_5[0], r0, r2\n\tsub.s!\t@CPI32_5[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI32_6[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB32_65:\n\tld.1\t64, r2\n\tadd\tr2, r0, stack-[20]\n\tadd\t@CPI32_15[0], r0, r1\n\tst.1\tr2, r1\n\tadd\t4, r2, r1\n\tnear_call\tr0, @abi_encode_uint256_stringliteral_7d1d_29538, @DEFAULT_UNWIND\n\tadd\tstack-[20], r0, r4\n\tsub\tr1, r4, r1\n\tadd\t@CPI32_5[0], r0, r2\n\tsub.s!\t@CPI32_5[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tsub.s!\t@CPI32_5[0], r4, r3\n\tadd.lt\tr4, r0, r2\n\tshl.s\t64, r2, r2\n\tshl.s\t96, r1, r1\n\tor\tr1, r2, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB32_67:\n\tld.1\t64, r1\n\tadd\t68, r1, r2\n\tadd\t@CPI32_18[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t17, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI32_4[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI32_5[0], r0, r2\n\tsub.s!\t@CPI32_5[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI32_6[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB32_69:\n\tld.1\t64, r1\n\tadd\t68, r1, r2\n\tadd\t@CPI32_17[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t17, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI32_4[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI32_5[0], r0, r2\n\tsub.s!\t@CPI32_5[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI32_6[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB32_9:\n\tld.1\t64, r1\n\tadd\t68, r1, r2\n\tadd\t@CPI32_3[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t29, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI32_4[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI32_5[0], r0, r2\n\tsub.s!\t@CPI32_5[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI32_6[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end32:\n\nstring_concat_stringliteral_64c3_string:\n.func_begin33:\n\tadd\tr1, r0, r2\n\tld.1\t64, r1\n\tadd\t32, r1, r3\n\tadd\t@CPI33_0[0], r0, r4\n\tst.1\tr3, r4\n\tadd\t47, r1, r4\n\tld.1\tr2, r3\n\tsub.s!\t0, r3, r5\n\tjump.eq\t@.BB33_3\n\tadd\tr0, r0, r5\n.BB33_2:\n\tadd\tr5, r4, r6\n\tadd\t32, r5, r5\n\tadd\tr5, r2, r7\n\tld.1\tr7, r7\n\tst.1\tr6, r7\n\tsub!\tr5, r3, r6\n\tjump.lt\t@.BB33_2\n.BB33_3:\n\tadd\tr3, r4, r2\n\tst.1\tr2, r0\n\tadd\t15, r3, r2\n\tst.1\tr1, r2\n\tadd\t78, r3, r2\n\tsub.s\t32, r0, r3\n\tand\tr2, r3, r3\n\tadd\tr3, r1, r2\n\tsub!\tr2, r3, r3\n\tadd\t0, r0, r3\n\tadd.lt\t1, r0, r3\n\tsub.s!\t@CPI33_1[0], r2, r4\n\tjump.gt\t@.BB33_5\n\tand!\t1, r3, r3\n\tjump.ne\t@.BB33_5\n\tst.1\t64, r2\n\tret\n.BB33_5:\n\tadd\t@CPI33_2[0], r0, r1\n\tst.1\t0, r1\n\tadd\t65, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI33_3[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end33:\n\nabi_encode_uint256_stringliteral_d8c5_36516:\n.func_begin34:\n\tadd\t96, r1, r2\n\tadd\t@CPI34_0[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t64, r1, r2\n\tadd\t22, r0, r3\n\tst.1\tr2, r3\n\tadd\t32, r1, r2\n\tadd\t64, r0, r3\n\tst.1\tr2, r3\n\tst.1\tr1, r0\n\tadd\t128, r1, r1\n\tret\n.func_end34:\n\nabi_encode_uint256_stringliteral_d8c5:\n.func_begin35:\n\tadd\t96, r1, r3\n\tadd\t@CPI35_0[0], r0, r4\n\tst.1\tr3, r4\n\tadd\t64, r1, r3\n\tadd\t22, r0, r4\n\tst.1\tr3, r4\n\tadd\t32, r1, r3\n\tadd\t64, r0, r4\n\tst.1\tr3, r4\n\tst.1\tr1, r2\n\tadd\t128, r1, r1\n\tret\n.func_end35:\n\nabi_encode_uint256_stringliteral_af9d_36517:\n.func_begin36:\n\tadd\t96, r1, r2\n\tadd\t@CPI36_0[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t64, r1, r2\n\tadd\t23, r0, r3\n\tst.1\tr2, r3\n\tadd\t32, r1, r2\n\tadd\t64, r0, r3\n\tst.1\tr2, r3\n\tst.1\tr1, r0\n\tadd\t128, r1, r1\n\tret\n.func_end36:\n\nabi_encode_uint256_stringliteral_af9d:\n.func_begin37:\n\tadd\t96, r1, r3\n\tadd\t@CPI37_0[0], r0, r4\n\tst.1\tr3, r4\n\tadd\t64, r1, r3\n\tadd\t23, r0, r4\n\tst.1\tr3, r4\n\tadd\t32, r1, r3\n\tadd\t64, r0, r4\n\tst.1\tr3, r4\n\tst.1\tr1, r2\n\tadd\t128, r1, r1\n\tret\n.func_end37:\n\nfun_validateAccountPrepayment_29535:\n.func_begin38:\n\tnop\tstack+=[15]\n\tadd\tr3, r0, stack-[3]\n\tadd\tr1, r0, r9\n\tsub.s\t31, r0, r1\n\tsub\tr1, r9, r4\n\tadd\t64, r9, r3\n\tcontext.gas_left\tr1\n\tadd\tr1, r0, stack-[4]\n\tptr.add\tstack[@ptr_calldata], r0, r10\n\tadd\tr3, r0, stack-[5]\n\tptr.add\tr10, r3, r1\n\tld\tr1, r3\n\tadd\tstack[@calldatasize], r0, r1\n\tadd\tr4, r0, stack-[13]\n\tadd\tr1, r4, r4\n\tadd\t@CPI38_0[0], r0, r5\n\tsub!\tr3, r4, r6\n\tadd\t0, r0, r6\n\tadd.lt\tr5, r0, r6\n\tand\t@CPI38_0[0], r4, r4\n\tand\t@CPI38_0[0], r3, r7\n\tsub!\tr7, r4, r8\n\tadd.le\t0, r0, r5\n\txor\tr7, r4, r4\n\tsub.s!\t@CPI38_0[0], r4, r4\n\tadd\tr6, r0, r4\n\tadd.eq\tr5, r0, r4\n\tadd\tr2, r0, stack-[7]\n\tld.1.inc\tr2, r5, r6\n\tadd\tr6, r0, stack-[10]\n\tadd\tr5, r0, stack-[11]\n\tld.1\tr5, r5\n\tand\t@CPI38_1[0], r5, r5\n\tadd\tr5, r0, stack-[12]\n\tsub.s!\t0, r4, r4\n\tjump.eq\t@.BB38_1\n\tadd\tr3, r9, r3\n\tptr.add\tr10, r3, r2\n\tld\tr2, r6\n\tsub.s!\t@CPI38_2[0], r6, r2\n\tjump.gt\t@.BB38_1\n\tsub\tr1, r6, r1\n\tadd\t32, r3, r4\n\tadd\t@CPI38_0[0], r0, r2\n\tsub!\tr4, r1, r3\n\tadd\t0, r0, r3\n\tadd.gt\tr2, r0, r3\n\tand\t@CPI38_0[0], r1, r1\n\tadd\tr4, r0, stack-[6]\n\tand\t@CPI38_0[0], r4, r4\n\tsub!\tr4, r1, r5\n\tadd.ge\t0, r0, r2\n\txor\tr4, r1, r1\n\tsub.s!\t@CPI38_0[0], r1, r1\n\tadd\tr3, r0, r1\n\tadd.eq\tr2, r0, r1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB38_1\n\tsub.s!\t0, r6, r1\n\tadd\tr9, r0, stack-[8]\n\tjump.eq\t@.BB38_39\n\tadd\t@CPI38_3[0], r0, r1\n\tst.2\t0, r1\n\tadd\tstack-[12], r0, r1\n\tst.2\t4, r1\n\tadd\t@CPI38_4[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI38_4[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI38_5[0], r1, r1\n\tadd\t32770, r0, r2\n\tadd\tr6, r0, stack-[9]\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tstack-[9], r0, r8\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB38_1\n\tld\tr1, r1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB38_7\n\tadd\tstack-[7], r0, r1\n\tld.1\tr1, r1\n\tadd\t96, r1, r1\n\tld.1\tr1, r1\n\tadd\tr1, r0, stack-[1]\n\tld.1\t64, r9\n\tadd\t@CPI38_7[0], r0, r1\n\tst.1\tr9, r1\n\tadd\t4, r9, r1\n\tadd\t32, r0, r2\n\tst.1\tr1, r2\n\tadd\t36, r9, r1\n\tst.1\tr1, r8\n\tand\t31, r8, r2\n\tadd\t68, r9, r1\n\tadd\tstack-[6], r0, r3\n\tptr.add\tstack[@ptr_calldata], r3, r3\n\tshr.s!\t5, r8, r4\n\tjump.eq\t@.BB38_112\n\tadd\tr0, r0, r5\n.BB38_10:\n\tshl.s\t5, r5, r6\n\tadd\tr1, r6, r7\n\tptr.add\tr3, r6, r6\n\tld\tr6, r6\n\tst.1\tr7, r6\n\tadd\t1, r5, r5\n\tsub!\tr5, r4, r6\n\tjump.lt\t@.BB38_10\n.BB38_112:\n\tadd\tr9, r0, stack-[2]\n\tsub.s!\t0, r2, r5\n\tjump.eq\t@.BB38_12\n\tshl.s\t5, r4, r4\n\tptr.add\tr3, r4, r3\n\tadd\tr1, r4, r4\n\tshl.s\t3, r2, r2\n\tld.1\tr4, r5\n\tshl\tr5, r2, r5\n\tshr\tr5, r2, r5\n\tld\tr3, r3\n\tsub\t256, r2, r2\n\tshr\tr3, r2, r3\n\tshl\tr3, r2, r2\n\tor\tr2, r5, r2\n\tst.1\tr4, r2\n.BB38_12:\n\tadd\tr1, r8, r1\n\tst.1\tr1, r0\n\tadd\t@CPI38_8[0], r0, r1\n\tst.2\t0, r1\n\tcontext.code_source\tr1\n\tst.2\t4, r1\n\tst.2\t36, r0\n\tadd\t@CPI38_4[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI38_4[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI38_9[0], r1, r1\n\tadd\t32773, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tstack-[9], r0, r3\n\tand!\t1, r2, r2\n\tadd\tstack-[2], r0, r10\n\tjump.eq\t@.BB38_1\n\tld\tr1, r1\n\tand\t@CPI38_1[0], r1, r2\n\tsub.s!\t4, r2, r1\n\tjump.ne\t@.BB38_15\n\tadd\tstack[@returndatasize], r0, r3\n\tsub.s!\t32, r3, r1\n\tadd\t32, r0, r4\n\tadd.lt\tr3, r0, r4\n\tjump\t@.BB38_25\n.BB38_15:\n\tadd\t31, r3, r1\n\tsub.s\t32, r0, r3\n\tand\tr1, r3, r1\n\tadd\t@CPI38_10[0], r0, r3\n\tsub.s!\t@CPI38_10[0], r1, r4\n\tadd.ge\tr3, r0, r1\n\tadd\t@CPI38_4[0], r0, r3\n\tsub.s!\t@CPI38_4[0], r10, r4\n\tadd\tr3, r0, r4\n\tadd.lt\tr10, r0, r4\n\tshl.s\t64, r4, r4\n\tshl.s\t96, r1, r1\n\tor\tr1, r4, r1\n\tadd\tstack-[1], r0, r5\n\tsub.s!\t@CPI38_4[0], r5, r4\n\tadd.lt\tr5, r0, r3\n\tshl.s\t192, r3, r3\n\tor\tr1, r3, r1\n\tadd\t@CPI38_11[0], r1, r1\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tadd\tstack-[2], r0, r10\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI38_4[0], r3, r3\n\tsub.s!\t32, r3, r4\n\tadd\t32, r0, r4\n\tadd.lt\tr3, r0, r4\n\tand\t31, r4, r5\n\tshr.s!\t5, r4, r6\n\tjump.eq\t@.BB38_111\n\tadd\tr0, r0, r7\n.BB38_17:\n\tshl.s\t5, r7, r8\n\tadd\tr10, r8, r9\n\tptr.add\tr1, r8, r8\n\tld\tr8, r8\n\tst.1\tr9, r8\n\tadd\t1, r7, r7\n\tsub!\tr7, r6, r8\n\tjump.lt\t@.BB38_17\n.BB38_111:\n\tsub.s!\t0, r5, r7\n\tjump.eq\t@.BB38_19\n\tshl.s\t5, r6, r6\n\tptr.add\tr1, r6, r7\n\tadd\tr10, r6, r6\n\tshl.s\t3, r5, r5\n\tld.1\tr6, r8\n\tshl\tr8, r5, r8\n\tshr\tr8, r5, r8\n\tld\tr7, r7\n\tsub\t256, r5, r5\n\tshr\tr7, r5, r7\n\tshl\tr7, r5, r5\n\tor\tr5, r8, r5\n\tst.1\tr6, r5\n.BB38_19:\n\tadd\tr3, r0, stack[@returndatasize]\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB38_20\n.BB38_25:\n\tadd\t31, r4, r1\n\tand\t96, r1, r1\n\tadd\tr1, r10, r4\n\tsub!\tr4, r1, r1\n\tadd\t0, r0, r1\n\tadd.lt\t1, r0, r1\n\tsub.s!\t@CPI38_2[0], r4, r2\n\tjump.gt\t@.BB38_27\n\tand!\t1, r1, r1\n\tjump.ne\t@.BB38_27\n\tst.1\t64, r4\n\tsub.s!\t32, r3, r1\n\tjump.lt\t@.BB38_1\n\tld.1\tr10, r1\n\tsub.s!\t@CPI38_1[0], r1, r2\n\tjump.gt\t@.BB38_1\n\tsub.s!\t0, r1, r2\n\tjump.eq\t@.BB38_31\n\tadd\tstack-[12], r0, r2\n\tsub!\tr1, r2, r1\n\tjump.ne\t@.BB38_33\n\tadd\t@CPI38_3[0], r0, r1\n\tst.2\t0, r1\n\tst.2\t4, r2\n\tadd\t@CPI38_4[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI38_4[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI38_5[0], r1, r1\n\tadd\t32770, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tadd\tstack-[9], r0, r2\n\tjump.eq\t@.BB38_1\n\tld\tr1, r1\n\tsub.s!\t0, r1, r1\n\tjump.eq\t@.BB38_36\n\tsub.s!\t20, r2, r1\n\tjump.lt\t@.BB38_1\n\tadd\tstack-[6], r0, r1\n\tptr.add\tstack[@ptr_calldata], r1, r1\n\tadd\tstack-[10], r0, r2\n\tld.1\tr2, r5\n\tld\tr1, r1\n\tadd\tstack-[7], r0, r2\n\tld.1\tr2, r2\n\tadd\t160, r2, r2\n\tld.1\tr2, r2\n\tand\t@CPI38_1[0], r2, r2\n\tld.1\t64, r3\n\tadd\t32, r3, r4\n\tst.1\tr4, r2\n\tshr.s\t96, r1, r1\n\tst.1\tr3, r1\n\tadd\t@CPI38_4[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI38_4[0], r2, r4\n\tadd.ge\tr1, r0, r2\n\tsub.s!\t@CPI38_4[0], r3, r4\n\tadd.lt\tr3, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r2, r2\n\tor\tr2, r1, r1\n\tor\t@CPI38_12[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t3, r0, r3\n\tadd\t@CPI38_13[0], r0, r4\n\tadd\tstack-[12], r0, r6\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB38_1\n.BB38_39:\n\tadd\tstack-[11], r0, r1\n\tadd\t160, r1, r1\n\tld.1\tr1, r1\n\tadd\tr1, r0, stack-[9]\n\tadd\t@CPI38_14[0], r0, r1\n\tst.2\t0, r1\n\tadd\t@CPI38_4[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI38_4[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI38_15[0], r1, r1\n\tadd\t32779, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tstack-[8], r0, r15\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB38_1\n\tld\tr1, r1\n\tst.1\t0, r1\n\tadd\tstack-[9], r0, r1\n\tand!\t@CPI38_1[0], r1, r1\n\tadd\tr1, r0, stack-[9]\n\tadd\tr0, r0, r2\n\tjump.ne\t@.BB38_43\n\tadd\tstack-[12], r0, r1\n\tst.1\t0, r1\n\tst.1\t32, r0\n\tadd\t@CPI38_4[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI38_4[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI38_12[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tstack-[8], r0, r15\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB38_1\n\tld\tr1, r1\n\tsload\tr1, r1\n\tand\t@CPI38_16[0], r1, r1\n\tadd\tstack-[3], r0, r2\n\tsub\tr2, r1, r1\n\tsub!\tr1, r2, r2\n\tadd\t0, r0, r2\n\tadd.gt\t1, r0, r2\n\tsub.s!\t0, r2, r2\n\tadd\tr1, r0, r2\n\tadd.ne\t0, r0, r2\n.BB38_43:\n\tadd\tstack-[10], r0, r1\n\tld.1\tr1, r3\n\tadd\tstack-[11], r0, r1\n\tadd\t96, r1, r1\n\tld.1\tr1, r1\n\tld.1\t64, r13\n\tadd\t@CPI38_17[0], r0, r4\n\tst.1\tr13, r4\n\tadd\t4, r13, r4\n\tadd\t96, r0, r5\n\tst.1\tr4, r5\n\tptr.add\tstack[@ptr_calldata], r15, r4\n\tld\tr4, r5\n\tsub.s!\t@CPI38_1[0], r5, r4\n\tjump.gt\t@.BB38_1\n\tadd\t100, r13, r4\n\tst.1\tr4, r5\n\tadd\t32, r15, r5\n\tptr.add\tstack[@ptr_calldata], r5, r5\n\tld\tr5, r5\n\tadd\t132, r13, r6\n\tst.1\tr6, r5\n\tadd\tstack[@calldatasize], r0, r5\n\tadd\tstack-[13], r0, r6\n\tadd\tr5, r6, r8\n\tptr.add\tstack[@ptr_calldata], r0, r6\n\tadd\tstack-[5], r0, r7\n\tptr.add\tr6, r7, r7\n\tld\tr7, r7\n\tadd\t@CPI38_0[0], r0, r9\n\tsub!\tr7, r8, r10\n\tadd\t0, r0, r10\n\tadd.ge\tr9, r0, r10\n\tand\t@CPI38_0[0], r8, r8\n\tand\t@CPI38_0[0], r7, r11\n\tsub!\tr11, r8, r12\n\tadd.ge\t0, r0, r9\n\txor\tr11, r8, r8\n\tsub.s!\t@CPI38_0[0], r8, r8\n\tadd\tr10, r0, r8\n\tadd.eq\tr9, r0, r8\n\tsub.s!\t0, r8, r8\n\tjump.ne\t@.BB38_1\n\tadd\tr7, r15, r7\n\tptr.add\tr6, r7, r6\n\tld\tr6, r6\n\tsub.s!\t@CPI38_2[0], r6, r8\n\tjump.gt\t@.BB38_1\n\tadd\t32, r7, r8\n\tsub\tr5, r6, r5\n\tadd\t@CPI38_0[0], r0, r7\n\tsub!\tr8, r5, r9\n\tadd\t0, r0, r9\n\tadd.gt\tr7, r0, r9\n\tand\t@CPI38_0[0], r5, r5\n\tand\t@CPI38_0[0], r8, r10\n\tsub!\tr10, r5, r11\n\tadd.ge\t0, r0, r7\n\txor\tr10, r5, r5\n\tsub.s!\t@CPI38_0[0], r5, r5\n\tadd\tr9, r0, r5\n\tadd.eq\tr7, r0, r5\n\tsub.s!\t0, r5, r5\n\tjump.ne\t@.BB38_1\n\tadd\t164, r13, r5\n\tadd\t352, r0, r7\n\tst.1\tr5, r7\n\tadd\t452, r13, r5\n\tst.1\tr5, r6\n\tand\t31, r6, r5\n\tadd\t484, r13, r7\n\tptr.add\tstack[@ptr_calldata], r8, r8\n\tshr.s!\t5, r6, r9\n\tjump.eq\t@.BB38_109\n\tadd\tr0, r0, r10\n.BB38_49:\n\tshl.s\t5, r10, r11\n\tadd\tr7, r11, r12\n\tptr.add\tr8, r11, r11\n\tld\tr11, r11\n\tst.1\tr12, r11\n\tadd\t1, r10, r10\n\tsub!\tr10, r9, r11\n\tjump.lt\t@.BB38_49\n.BB38_109:\n\tadd\tr13, r0, stack-[11]\n\tsub.s!\t0, r5, r10\n\tjump.eq\t@.BB38_51\n\tshl.s\t5, r9, r9\n\tptr.add\tr8, r9, r8\n\tadd\tr7, r9, r9\n\tshl.s\t3, r5, r5\n\tld.1\tr9, r10\n\tshl\tr10, r5, r10\n\tshr\tr10, r5, r10\n\tld\tr8, r8\n\tsub\t256, r5, r5\n\tshr\tr8, r5, r8\n\tshl\tr8, r5, r5\n\tor\tr5, r10, r5\n\tst.1\tr9, r5\n.BB38_51:\n\tadd\tr6, r7, r5\n\tst.1\tr5, r0\n\tadd\tstack[@calldatasize], r0, r8\n\tadd\tstack-[13], r0, r5\n\tadd\tr8, r5, r10\n\tadd\t96, r15, r9\n\tptr.add\tstack[@ptr_calldata], r0, r5\n\tptr.add\tr5, r9, r9\n\tld\tr9, r9\n\tadd\t@CPI38_0[0], r0, r11\n\tsub!\tr9, r10, r12\n\tadd\t0, r0, r12\n\tadd.ge\tr11, r0, r12\n\tand\t@CPI38_0[0], r10, r10\n\tand\t@CPI38_0[0], r9, r13\n\tsub!\tr13, r10, r14\n\tadd.ge\t0, r0, r11\n\txor\tr13, r10, r10\n\tsub.s!\t@CPI38_0[0], r10, r10\n\tadd\tr12, r0, r10\n\tadd.eq\tr11, r0, r10\n\tsub.s!\t0, r10, r10\n\tadd\tstack-[11], r0, r14\n\tjump.ne\t@.BB38_1\n\tadd\tr9, r15, r9\n\tptr.add\tr5, r9, r5\n\tld\tr5, r5\n\tsub.s!\t@CPI38_2[0], r5, r10\n\tjump.gt\t@.BB38_1\n\tadd\t32, r9, r9\n\tsub\tr8, r5, r8\n\tadd\t@CPI38_0[0], r0, r10\n\tsub!\tr9, r8, r11\n\tadd\t0, r0, r11\n\tadd.gt\tr10, r0, r11\n\tand\t@CPI38_0[0], r8, r8\n\tand\t@CPI38_0[0], r9, r12\n\tsub!\tr12, r8, r13\n\tadd.ge\t0, r0, r10\n\txor\tr12, r8, r8\n\tsub.s!\t@CPI38_0[0], r8, r8\n\tadd\tr11, r0, r8\n\tadd.eq\tr10, r0, r8\n\tsub.s!\t0, r8, r8\n\tjump.ne\t@.BB38_1\n\tadd\t31, r6, r6\n\tsub.s\t32, r0, r8\n\tadd\tr8, r0, stack-[10]\n\tand\tr6, r8, r6\n\tadd\tr6, r7, r7\n\tsub\tr7, r4, r6\n\tadd\t196, r14, r8\n\tst.1\tr8, r6\n\tand\t31, r5, r6\n\tst.1.inc\tr7, r5, r7\n\tptr.add\tstack[@ptr_calldata], r9, r8\n\tshr.s!\t5, r5, r9\n\tjump.eq\t@.BB38_108\n\tadd\tr0, r0, r10\n.BB38_56:\n\tshl.s\t5, r10, r11\n\tadd\tr7, r11, r12\n\tptr.add\tr8, r11, r11\n\tld\tr11, r11\n\tst.1\tr12, r11\n\tadd\t1, r10, r10\n\tsub!\tr10, r9, r11\n\tjump.lt\t@.BB38_56\n.BB38_108:\n\tsub.s!\t0, r6, r10\n\tjump.eq\t@.BB38_58\n\tshl.s\t5, r9, r9\n\tptr.add\tr8, r9, r8\n\tadd\tr7, r9, r9\n\tshl.s\t3, r6, r6\n\tld.1\tr9, r10\n\tshl\tr10, r6, r10\n\tshr\tr10, r6, r10\n\tld\tr8, r8\n\tsub\t256, r6, r6\n\tshr\tr8, r6, r8\n\tshl\tr8, r6, r6\n\tor\tr6, r10, r6\n\tst.1\tr9, r6\n.BB38_58:\n\tadd\tr5, r7, r6\n\tst.1\tr6, r0\n\tadd\t128, r15, r6\n\tptr.add\tstack[@ptr_calldata], r6, r6\n\tld\tr6, r6\n\tadd\t228, r14, r8\n\tst.1\tr8, r6\n\tadd\t160, r15, r6\n\tptr.add\tstack[@ptr_calldata], r6, r6\n\tld\tr6, r6\n\tadd\t260, r14, r8\n\tst.1\tr8, r6\n\tadd\t192, r15, r6\n\tptr.add\tstack[@ptr_calldata], r6, r6\n\tld\tr6, r6\n\tadd\t292, r14, r8\n\tst.1\tr8, r6\n\tadd\t224, r15, r6\n\tptr.add\tstack[@ptr_calldata], r6, r6\n\tld\tr6, r6\n\tadd\t324, r14, r8\n\tst.1\tr8, r6\n\tadd\t356, r14, r6\n\tadd\t256, r15, r8\n\tptr.add\tstack[@ptr_calldata], r8, r8\n\tld\tr8, r8\n\tst.1\tr6, r8\n\tadd\t288, r15, r9\n\tadd\tstack[@calldatasize], r0, r8\n\tadd\tstack-[13], r0, r6\n\tadd\tr8, r6, r10\n\tptr.add\tstack[@ptr_calldata], r0, r6\n\tptr.add\tr6, r9, r9\n\tld\tr9, r9\n\tadd\t@CPI38_0[0], r0, r11\n\tsub!\tr9, r10, r12\n\tadd\t0, r0, r12\n\tadd.ge\tr11, r0, r12\n\tand\t@CPI38_0[0], r10, r10\n\tand\t@CPI38_0[0], r9, r13\n\tsub!\tr13, r10, r14\n\tadd\tstack-[11], r0, r14\n\tadd.ge\t0, r0, r11\n\txor\tr13, r10, r10\n\tsub.s!\t@CPI38_0[0], r10, r10\n\tadd\tr12, r0, r10\n\tadd.eq\tr11, r0, r10\n\tsub.s!\t0, r10, r10\n\tjump.ne\t@.BB38_1\n\tadd\tr9, r15, r9\n\tptr.add\tr6, r9, r6\n\tld\tr6, r6\n\tsub.s!\t@CPI38_2[0], r6, r10\n\tjump.gt\t@.BB38_1\n\tadd\t32, r9, r9\n\tsub\tr8, r6, r8\n\tadd\t@CPI38_0[0], r0, r10\n\tsub!\tr9, r8, r11\n\tadd\t0, r0, r11\n\tadd.gt\tr10, r0, r11\n\tand\t@CPI38_0[0], r8, r8\n\tand\t@CPI38_0[0], r9, r12\n\tsub!\tr12, r8, r13\n\tadd.ge\t0, r0, r10\n\txor\tr12, r8, r8\n\tsub.s!\t@CPI38_0[0], r8, r8\n\tadd\tr11, r0, r8\n\tadd.eq\tr10, r0, r8\n\tsub.s!\t0, r8, r8\n\tjump.ne\t@.BB38_1\n\tadd\t31, r5, r5\n\tadd\tstack-[10], r0, r8\n\tand\tr5, r8, r5\n\tadd\tr5, r7, r5\n\tsub\tr5, r4, r7\n\tadd\t388, r14, r8\n\tst.1\tr8, r7\n\tand\t31, r6, r7\n\tst.1.inc\tr5, r6, r5\n\tptr.add\tstack[@ptr_calldata], r9, r8\n\tshr.s!\t5, r6, r9\n\tjump.eq\t@.BB38_107\n\tadd\tr0, r0, r10\n.BB38_63:\n\tshl.s\t5, r10, r11\n\tadd\tr5, r11, r12\n\tptr.add\tr8, r11, r11\n\tld\tr11, r11\n\tst.1\tr12, r11\n\tadd\t1, r10, r10\n\tsub!\tr10, r9, r11\n\tjump.lt\t@.BB38_63\n.BB38_107:\n\tsub.s!\t0, r7, r10\n\tjump.eq\t@.BB38_65\n\tshl.s\t5, r9, r9\n\tptr.add\tr8, r9, r8\n\tadd\tr5, r9, r9\n\tshl.s\t3, r7, r7\n\tld.1\tr9, r10\n\tshl\tr10, r7, r10\n\tshr\tr10, r7, r10\n\tld\tr8, r8\n\tsub\t256, r7, r7\n\tshr\tr8, r7, r8\n\tshl\tr8, r7, r7\n\tor\tr7, r10, r7\n\tst.1\tr9, r7\n.BB38_65:\n\tadd\tr6, r5, r7\n\tst.1\tr7, r0\n\tadd\tstack[@calldatasize], r0, r8\n\tadd\tstack-[13], r0, r7\n\tadd\tr8, r7, r10\n\tadd\t320, r15, r9\n\tptr.add\tstack[@ptr_calldata], r0, r7\n\tptr.add\tr7, r9, r9\n\tld\tr9, r9\n\tadd\t@CPI38_0[0], r0, r11\n\tsub!\tr9, r10, r12\n\tadd\t0, r0, r12\n\tadd.ge\tr11, r0, r12\n\tand\t@CPI38_0[0], r10, r10\n\tand\t@CPI38_0[0], r9, r13\n\tsub!\tr13, r10, r14\n\tadd.ge\t0, r0, r11\n\txor\tr13, r10, r10\n\tsub.s!\t@CPI38_0[0], r10, r10\n\tadd\tr12, r0, r10\n\tadd.eq\tr11, r0, r10\n\tsub.s!\t0, r10, r10\n\tadd\tstack-[11], r0, r14\n\tjump.ne\t@.BB38_1\n\tadd\tr9, r15, r9\n\tptr.add\tr7, r9, r7\n\tld\tr7, r7\n\tsub.s!\t@CPI38_2[0], r7, r10\n\tjump.gt\t@.BB38_1\n\tadd\t32, r9, r9\n\tsub\tr8, r7, r8\n\tadd\t@CPI38_0[0], r0, r10\n\tsub!\tr9, r8, r11\n\tadd\t0, r0, r11\n\tadd.gt\tr10, r0, r11\n\tand\t@CPI38_0[0], r8, r8\n\tand\t@CPI38_0[0], r9, r12\n\tsub!\tr12, r8, r13\n\tadd.ge\t0, r0, r10\n\txor\tr12, r8, r8\n\tsub.s!\t@CPI38_0[0], r8, r8\n\tadd\tr11, r0, r8\n\tadd.eq\tr10, r0, r8\n\tsub.s!\t0, r8, r8\n\tjump.ne\t@.BB38_1\n\tadd\t31, r6, r6\n\tadd\tstack-[10], r0, r8\n\tand\tr6, r8, r6\n\tadd\tr6, r5, r6\n\tsub\tr6, r4, r4\n\tadd\t420, r14, r5\n\tst.1\tr5, r4\n\tand\t31, r7, r5\n\tst.1.inc\tr6, r7, r4\n\tptr.add\tstack[@ptr_calldata], r9, r6\n\tshr.s!\t5, r7, r8\n\tjump.eq\t@.BB38_106\n\tadd\tr0, r0, r9\n.BB38_70:\n\tshl.s\t5, r9, r10\n\tadd\tr4, r10, r11\n\tptr.add\tr6, r10, r10\n\tld\tr10, r10\n\tst.1\tr11, r10\n\tadd\t1, r9, r9\n\tsub!\tr9, r8, r10\n\tjump.lt\t@.BB38_70\n.BB38_106:\n\tsub.s!\t0, r5, r9\n\tjump.eq\t@.BB38_72\n\tshl.s\t5, r8, r8\n\tptr.add\tr6, r8, r6\n\tadd\tr4, r8, r8\n\tshl.s\t3, r5, r5\n\tld.1\tr8, r9\n\tshl\tr9, r5, r9\n\tshr\tr9, r5, r9\n\tld\tr6, r6\n\tsub\t256, r5, r5\n\tshr\tr6, r5, r6\n\tshl\tr6, r5, r5\n\tor\tr5, r9, r5\n\tst.1\tr8, r5\n.BB38_72:\n\tadd\tr7, r4, r5\n\tst.1\tr5, r0\n\tadd\t68, r14, r5\n\tst.1\tr5, r2\n\tadd\t36, r14, r2\n\tst.1\tr2, r3\n\tadd\tstack-[12], r0, r2\n\tsub.s!\t4, r2, r3\n\tjump.ne\t@.BB38_74\n\tcontext.sp\tr5\n\tsub.s\t15, r5, r5\n\tmul\t32, r5, r5, r0\n\tadd\tstack[@returndatasize], r0, r3\n\tsub.s!\t32, r3, r1\n\tadd\t32, r0, r4\n\tadd.lt\tr3, r0, r4\n\tadd\t0, r0, stack-[15]\n\tjump\t@.BB38_79\n.BB38_74:\n\tadd\t31, r7, r3\n\tadd\tstack-[10], r0, r5\n\tand\tr3, r5, r5\n\tsub\tr4, r14, r3\n\tadd\tr3, r5, r5\n\tadd\t@CPI38_4[0], r0, r3\n\tsub.s!\t@CPI38_4[0], r5, r4\n\tadd\tr3, r0, r4\n\tadd.lt\tr5, r0, r4\n\tshl.s\t96, r4, r5\n\tsub.s!\t@CPI38_4[0], r14, r4\n\tadd\tr3, r0, r4\n\tadd.lt\tr14, r0, r4\n\tshl.s\t64, r4, r4\n\tor\tr5, r4, r5\n\tsub.s!\t@CPI38_4[0], r1, r4\n\tadd.ge\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\tr5, r1, r1\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tadd\tstack-[11], r0, r14\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI38_4[0], r3, r3\n\tsub.s!\t32, r3, r4\n\tadd\t32, r0, r4\n\tadd.lt\tr3, r0, r4\n\tand\t31, r4, r5\n\tshr.s!\t5, r4, r6\n\tjump.eq\t@.BB38_105\n\tadd\tr0, r0, r7\n.BB38_76:\n\tshl.s\t5, r7, r8\n\tadd\tr14, r8, r9\n\tptr.add\tr1, r8, r8\n\tld\tr8, r8\n\tst.1\tr9, r8\n\tadd\t1, r7, r7\n\tsub!\tr7, r6, r8\n\tjump.lt\t@.BB38_76\n.BB38_105:\n\tsub.s!\t0, r5, r7\n\tjump.eq\t@.BB38_78\n\tshl.s\t5, r6, r6\n\tptr.add\tr1, r6, r7\n\tadd\tr14, r6, r6\n\tshl.s\t3, r5, r5\n\tld.1\tr6, r8\n\tshl\tr8, r5, r8\n\tshr\tr8, r5, r8\n\tld\tr7, r7\n\tsub\t256, r5, r5\n\tshr\tr7, r5, r7\n\tshl\tr7, r5, r5\n\tor\tr5, r8, r5\n\tst.1\tr6, r5\n.BB38_78:\n\tadd\tr3, r0, stack[@returndatasize]\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tcontext.sp\tr5\n\tsub.s\t14, r5, r5\n\tmul\t32, r5, r5, r0\n\tadd\t0, r0, stack-[14]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB38_83\n.BB38_79:\n\tadd\t31, r4, r1\n\tand\t96, r1, r2\n\tadd\tr2, r14, r1\n\tsub!\tr1, r2, r2\n\tadd\t0, r0, r2\n\tadd.lt\t1, r0, r2\n\tsub.s!\t@CPI38_2[0], r1, r4\n\tjump.gt\t@.BB38_27\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB38_27\n\tst.1\t64, r1\n\tsub.s!\t32, r3, r1\n\tjump.lt\t@.BB38_1\n\tld.1\tr14, r3\n\tdiv.s\t32, r5, r1, r0\n\tadd\tr3, r0, stack[r1]\n\tadd\tstack-[9], r0, r1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB38_101\n\tadd\tr3, r0, stack-[13]\n\tadd\tstack-[12], r0, r1\n\tst.1\t0, r1\n\tst.1\t32, r0\n\tadd\t@CPI38_4[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI38_4[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI38_12[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB38_1\n\tld\tr1, r1\n\tsload\tr1, r2\n\tand\t@CPI38_16[0], r2, r3\n\tadd\tstack-[3], r0, r4\n\tsub!\tr3, r4, r3\n\tjump.lt\t@.BB38_102\n\tsub\tr2, r4, r3\n\tand\t@CPI38_16[0], r3, r3\n\tand\t@CPI38_21[0], r2, r2\n\tor\tr3, r2, r2\n\tsstore\tr1, r2\n\tadd\tstack-[13], r0, r3\n.BB38_101:\n\tcontext.gas_left\tr1\n\tadd\tstack-[4], r0, r2\n\tsub\tr2, r1, r1\n\tadd\tr3, r0, r2\n\tret\n.BB38_1:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB38_7:\n\tld.1\t64, r2\n\tadd\tr2, r0, stack-[13]\n\tadd\t@CPI38_6[0], r0, r1\n\tst.1\tr2, r1\n\tadd\t4, r2, r1\n\tnear_call\tr0, @abi_encode_uint256_stringliteral, @DEFAULT_UNWIND\n\tadd\tstack-[13], r0, r4\n\tsub\tr1, r4, r1\n\tadd\t@CPI38_4[0], r0, r2\n\tsub.s!\t@CPI38_4[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tsub.s!\t@CPI38_4[0], r4, r3\n\tadd.lt\tr4, r0, r2\n\tshl.s\t64, r2, r2\n\tshl.s\t96, r1, r1\n\tor\tr1, r2, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB38_31:\n\tadd\t@CPI38_6[0], r0, r1\n\tst.1\tr4, r1\n\tadd\t4, r4, r1\n\tadd\tr4, r0, stack-[13]\n\tnear_call\tr0, @abi_encode_uint256_stringliteral_a46d_42910, @DEFAULT_UNWIND\n\tadd\tstack-[13], r0, r4\n\tsub\tr1, r4, r1\n\tadd\t@CPI38_4[0], r0, r2\n\tsub.s!\t@CPI38_4[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tsub.s!\t@CPI38_4[0], r4, r3\n\tadd.lt\tr4, r0, r2\n\tshl.s\t64, r2, r2\n\tshl.s\t96, r1, r1\n\tor\tr1, r2, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB38_33:\n\tadd\t@CPI38_6[0], r0, r1\n\tst.1\tr4, r1\n\tadd\t4, r4, r1\n\tadd\tr4, r0, stack-[13]\n\tnear_call\tr0, @abi_encode_uint256_stringliteral_cf8e_42911, @DEFAULT_UNWIND\n\tadd\tstack-[13], r0, r4\n\tsub\tr1, r4, r1\n\tadd\t@CPI38_4[0], r0, r2\n\tsub.s!\t@CPI38_4[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tsub.s!\t@CPI38_4[0], r4, r3\n\tadd.lt\tr4, r0, r2\n\tshl.s\t64, r2, r2\n\tshl.s\t96, r1, r1\n\tor\tr1, r2, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB38_36:\n\tld.1\t64, r2\n\tadd\tr2, r0, stack-[13]\n\tadd\t@CPI38_6[0], r0, r1\n\tst.1\tr2, r1\n\tadd\t4, r2, r1\n\tnear_call\tr0, @abi_encode_uint256_stringliteral_bb1e_42912, @DEFAULT_UNWIND\n\tadd\tstack-[13], r0, r4\n\tsub\tr1, r4, r1\n\tadd\t@CPI38_4[0], r0, r2\n\tsub.s!\t@CPI38_4[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tsub.s!\t@CPI38_4[0], r4, r3\n\tadd.lt\tr4, r0, r2\n\tshl.s\t64, r2, r2\n\tshl.s\t96, r1, r1\n\tor\tr1, r2, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB38_83:\n\tsub.s!\t4, r3, r2\n\tjump.lt\t@.BB38_98\n\tld.1\t0, r2\n\tand\t@CPI38_18[0], r2, r2\n\tld\tr1, r1\n\tand\t@CPI38_19[0], r1, r1\n\tor\tr1, r2, r1\n\tst.1\t0, r1\n\tand\t@CPI38_19[0], r1, r1\n\tsub.s!\t@CPI38_20[0], r1, r1\n\tjump.ne\t@.BB38_98\n\tadd\tstack[@returndatasize], r0, r3\n\tsub.s!\t68, r3, r1\n\tjump.lt\t@.BB38_98\n\tld.1\t64, r2\n\tadd\t4, r0, r1\n\tptr.add\tstack[@ptr_return_data], r1, r1\n\tsub.s\t4, r3, r4\n\tand\t31, r4, r3\n\tshr.s!\t5, r4, r4\n\tjump.eq\t@.BB38_104\n\tadd\tr0, r0, r5\n.BB38_88:\n\tshl.s\t5, r5, r6\n\tadd\tr2, r6, r7\n\tptr.add\tr1, r6, r6\n\tld\tr6, r6\n\tst.1\tr7, r6\n\tadd\t1, r5, r5\n\tsub!\tr5, r4, r6\n\tjump.lt\t@.BB38_88\n.BB38_104:\n\tsub.s!\t0, r3, r5\n\tjump.eq\t@.BB38_90\n\tshl.s\t5, r4, r4\n\tptr.add\tr1, r4, r1\n\tadd\tr2, r4, r4\n\tshl.s\t3, r3, r3\n\tld.1\tr4, r5\n\tshl\tr5, r3, r5\n\tshr\tr5, r3, r5\n\tld\tr1, r1\n\tsub\t256, r3, r3\n\tshr\tr1, r3, r1\n\tshl\tr1, r3, r1\n\tor\tr1, r5, r1\n\tst.1\tr4, r1\n.BB38_90:\n\tadd\tstack[@returndatasize], r0, r4\n\tld.1\tr2, r3\n\tsub.s!\t@CPI38_2[0], r3, r1\n\tjump.gt\t@.BB38_98\n\tadd\t36, r3, r1\n\tsub!\tr1, r4, r1\n\tjump.gt\t@.BB38_98\n\tadd\tr3, r2, r1\n\tld.1\tr1, r5\n\tsub.s!\t@CPI38_2[0], r5, r6\n\tjump.gt\t@.BB38_98\n\tadd\tr1, r5, r6\n\tadd\tr2, r4, r4\n\tsub.s\t4, r4, r4\n\tadd\t32, r6, r6\n\tsub!\tr6, r4, r4\n\tjump.le\t@.BB38_94\n.BB38_98:\n\tld.1\t64, r2\n\tadd\tr2, r0, stack-[13]\n\tadd\t@CPI38_6[0], r0, r1\n\tst.1\tr2, r1\n\tadd\t4, r2, r1\n\tnear_call\tr0, @abi_encode_uint256_stringliteral_d8c5_36516, @DEFAULT_UNWIND\n\tadd\tstack-[13], r0, r4\n\tsub\tr1, r4, r1\n\tadd\t@CPI38_4[0], r0, r2\n\tsub.s!\t@CPI38_4[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tsub.s!\t@CPI38_4[0], r4, r3\n\tadd.lt\tr4, r0, r2\n\tshl.s\t64, r2, r2\n\tshl.s\t96, r1, r1\n\tor\tr1, r2, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB38_102:\n\tld.1\t64, r2\n\tadd\tr2, r0, stack-[13]\n\tadd\t@CPI38_6[0], r0, r1\n\tst.1\tr2, r1\n\tadd\t4, r2, r1\n\tnear_call\tr0, @abi_encode_uint256_stringliteral_af9d_36517, @DEFAULT_UNWIND\n\tadd\tstack-[13], r0, r4\n\tsub\tr1, r4, r1\n\tadd\t@CPI38_4[0], r0, r2\n\tsub.s!\t@CPI38_4[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tsub.s!\t@CPI38_4[0], r4, r3\n\tadd.lt\tr4, r0, r2\n\tshl.s\t64, r2, r2\n\tshl.s\t96, r1, r1\n\tor\tr1, r2, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB38_20:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r3\n\tjump.eq\t@.BB38_110\n\tadd\tr0, r0, r5\n.BB38_22:\n\tshl.s\t5, r5, r6\n\tadd\tr2, r6, r7\n\tptr.add\tr1, r6, r6\n\tld\tr6, r6\n\tst.1\tr7, r6\n\tadd\t1, r5, r5\n\tsub!\tr5, r3, r6\n\tjump.lt\t@.BB38_22\n.BB38_110:\n\tsub.s!\t0, r4, r5\n\tjump.eq\t@.BB38_24\n\tshl.s\t5, r3, r3\n\tptr.add\tr1, r3, r1\n\tadd\tr2, r3, r3\n\tshl.s\t3, r4, r4\n\tld.1\tr3, r5\n\tshl\tr5, r4, r5\n\tshr\tr5, r4, r5\n\tld\tr1, r1\n\tsub\t256, r4, r4\n\tshr\tr1, r4, r1\n\tshl\tr1, r4, r1\n\tor\tr1, r5, r1\n\tst.1\tr3, r1\n.BB38_24:\n\tadd\t@CPI38_4[0], r0, r1\n\tadd\tstack[@returndatasize], r0, r3\n\tsub.s!\t@CPI38_4[0], r3, r4\n\tadd.ge\tr1, r0, r3\n\tsub.s!\t@CPI38_4[0], r2, r4\n\tadd.lt\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t96, r3, r2\n\tor\tr2, r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB38_94:\n\tadd\tr3, r5, r3\n\tadd\t63, r3, r3\n\tadd\tstack-[10], r0, r4\n\tand\tr3, r4, r3\n\tadd\tr3, r2, r2\n\tsub!\tr2, r3, r3\n\tadd\t0, r0, r3\n\tadd.lt\t1, r0, r3\n\tsub.s!\t@CPI38_2[0], r2, r4\n\tjump.gt\t@.BB38_27\n\tand!\t1, r3, r3\n\tjump.ne\t@.BB38_27\n\tst.1\t64, r2\n\tsub.s!\t0, r1, r2\n\tjump.eq\t@.BB38_98\n\tnear_call\tr0, @string_concat_stringliteral_64c3_string, @DEFAULT_UNWIND\n\tadd\t@CPI38_6[0], r0, r2\n\tld.1\t64, r3\n\tadd\tr3, r0, stack-[13]\n\tst.1\tr3, r2\n\tadd\tr1, r0, r2\n\tadd\t4, r3, r1\n\tnear_call\tr0, @abi_encode_uint256_bytes_29546, @DEFAULT_UNWIND\n\tadd\tstack-[13], r0, r4\n\tsub\tr1, r4, r1\n\tadd\t@CPI38_4[0], r0, r2\n\tsub.s!\t@CPI38_4[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tsub.s!\t@CPI38_4[0], r4, r3\n\tadd.lt\tr4, r0, r2\n\tshl.s\t64, r2, r2\n\tshl.s\t96, r1, r1\n\tor\tr1, r2, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB38_27:\n\tadd\t@CPI38_22[0], r0, r1\n\tst.1\t0, r1\n\tadd\t65, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI38_23[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end38:\n\nfun_validateAccountPrepayment:\n.func_begin39:\n\tnop\tstack+=[16]\n\tadd\tr4, r0, stack-[4]\n\tadd\tr1, r0, stack-[2]\n\tsub.s\t31, r0, r1\n\tsub\tr1, r2, r4\n\tadd\t64, r2, r5\n\tcontext.gas_left\tr1\n\tadd\tr1, r0, stack-[5]\n\tptr.add\tstack[@ptr_calldata], r0, r9\n\tadd\tr5, r0, stack-[6]\n\tptr.add\tr9, r5, r1\n\tld\tr1, r10\n\tadd\tstack[@calldatasize], r0, r1\n\tadd\tr4, r0, stack-[14]\n\tadd\tr1, r4, r4\n\tadd\t@CPI39_0[0], r0, r5\n\tsub!\tr10, r4, r6\n\tadd\t0, r0, r6\n\tadd.lt\tr5, r0, r6\n\tand\t@CPI39_0[0], r4, r4\n\tand\t@CPI39_0[0], r10, r7\n\tsub!\tr7, r4, r8\n\tadd.le\t0, r0, r5\n\txor\tr7, r4, r4\n\tsub.s!\t@CPI39_0[0], r4, r4\n\tadd\tr6, r0, r4\n\tadd.eq\tr5, r0, r4\n\tadd\tr3, r0, stack-[8]\n\tld.1.inc\tr3, r5, r6\n\tadd\tr6, r0, stack-[11]\n\tadd\tr5, r0, stack-[12]\n\tld.1\tr5, r5\n\tand\t@CPI39_1[0], r5, r5\n\tadd\tr5, r0, stack-[13]\n\tsub.s!\t0, r4, r4\n\tjump.eq\t@.BB39_1\n\tadd\tr10, r2, r3\n\tptr.add\tr9, r3, r4\n\tld\tr4, r7\n\tsub.s!\t@CPI39_2[0], r7, r4\n\tjump.gt\t@.BB39_1\n\tsub\tr1, r7, r1\n\tadd\t32, r3, r4\n\tadd\t@CPI39_0[0], r0, r6\n\tsub!\tr4, r1, r3\n\tadd\t0, r0, r3\n\tadd.gt\tr6, r0, r3\n\tand\t@CPI39_0[0], r1, r1\n\tadd\tr4, r0, stack-[7]\n\tand\t@CPI39_0[0], r4, r4\n\tsub!\tr4, r1, r5\n\tadd\t0, r0, r5\n\tadd.lt\tr6, r0, r5\n\txor\tr4, r1, r1\n\tsub.s!\t@CPI39_0[0], r1, r1\n\tadd\tr3, r0, r1\n\tadd.eq\tr5, r0, r1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB39_1\n\tsub.s!\t0, r7, r1\n\tadd\tr2, r0, stack-[9]\n\tjump.eq\t@.BB39_39\n\tadd\t@CPI39_3[0], r0, r1\n\tst.2\t0, r1\n\tadd\tstack-[13], r0, r1\n\tst.2\t4, r1\n\tadd\t@CPI39_4[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI39_4[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI39_5[0], r1, r1\n\tadd\t32770, r0, r2\n\tadd\tr7, r0, stack-[10]\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tstack-[10], r0, r8\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB39_1\n\tld\tr1, r1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB39_7\n\tadd\tstack-[8], r0, r1\n\tld.1\tr1, r1\n\tadd\t96, r1, r1\n\tld.1\tr1, r1\n\tadd\tr1, r0, stack-[1]\n\tld.1\t64, r9\n\tadd\t@CPI39_7[0], r0, r1\n\tst.1\tr9, r1\n\tadd\t4, r9, r1\n\tadd\t32, r0, r2\n\tst.1\tr1, r2\n\tadd\t36, r9, r1\n\tst.1\tr1, r8\n\tand\t31, r8, r2\n\tadd\t68, r9, r1\n\tadd\tstack-[7], r0, r3\n\tptr.add\tstack[@ptr_calldata], r3, r3\n\tshr.s!\t5, r8, r4\n\tjump.eq\t@.BB39_112\n\tadd\tr0, r0, r5\n.BB39_10:\n\tshl.s\t5, r5, r6\n\tadd\tr1, r6, r7\n\tptr.add\tr3, r6, r6\n\tld\tr6, r6\n\tst.1\tr7, r6\n\tadd\t1, r5, r5\n\tsub!\tr5, r4, r6\n\tjump.lt\t@.BB39_10\n.BB39_112:\n\tadd\tr9, r0, stack-[3]\n\tsub.s!\t0, r2, r5\n\tjump.eq\t@.BB39_12\n\tshl.s\t5, r4, r4\n\tptr.add\tr3, r4, r3\n\tadd\tr1, r4, r4\n\tshl.s\t3, r2, r2\n\tld.1\tr4, r5\n\tshl\tr5, r2, r5\n\tshr\tr5, r2, r5\n\tld\tr3, r3\n\tsub\t256, r2, r2\n\tshr\tr3, r2, r3\n\tshl\tr3, r2, r2\n\tor\tr2, r5, r2\n\tst.1\tr4, r2\n.BB39_12:\n\tadd\tr1, r8, r1\n\tst.1\tr1, r0\n\tadd\t@CPI39_8[0], r0, r1\n\tst.2\t0, r1\n\tcontext.code_source\tr1\n\tst.2\t4, r1\n\tst.2\t36, r0\n\tadd\t@CPI39_4[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI39_4[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI39_9[0], r1, r1\n\tadd\t32773, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tstack-[10], r0, r3\n\tand!\t1, r2, r2\n\tadd\tstack-[3], r0, r10\n\tjump.eq\t@.BB39_1\n\tld\tr1, r1\n\tand\t@CPI39_1[0], r1, r2\n\tsub.s!\t4, r2, r1\n\tjump.ne\t@.BB39_15\n\tadd\tstack[@returndatasize], r0, r3\n\tsub.s!\t32, r3, r1\n\tadd\t32, r0, r4\n\tadd.lt\tr3, r0, r4\n\tjump\t@.BB39_25\n.BB39_15:\n\tadd\t31, r3, r1\n\tsub.s\t32, r0, r3\n\tand\tr1, r3, r1\n\tadd\t@CPI39_10[0], r0, r3\n\tsub.s!\t@CPI39_10[0], r1, r4\n\tadd.ge\tr3, r0, r1\n\tadd\t@CPI39_4[0], r0, r3\n\tsub.s!\t@CPI39_4[0], r10, r4\n\tadd\tr3, r0, r4\n\tadd.lt\tr10, r0, r4\n\tshl.s\t64, r4, r4\n\tshl.s\t96, r1, r1\n\tor\tr1, r4, r1\n\tadd\tstack-[1], r0, r5\n\tsub.s!\t@CPI39_4[0], r5, r4\n\tadd.lt\tr5, r0, r3\n\tshl.s\t192, r3, r3\n\tor\tr1, r3, r1\n\tadd\t@CPI39_11[0], r1, r1\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tadd\tstack-[3], r0, r10\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI39_4[0], r3, r3\n\tsub.s!\t32, r3, r4\n\tadd\t32, r0, r4\n\tadd.lt\tr3, r0, r4\n\tand\t31, r4, r5\n\tshr.s!\t5, r4, r6\n\tjump.eq\t@.BB39_111\n\tadd\tr0, r0, r7\n.BB39_17:\n\tshl.s\t5, r7, r8\n\tadd\tr10, r8, r9\n\tptr.add\tr1, r8, r8\n\tld\tr8, r8\n\tst.1\tr9, r8\n\tadd\t1, r7, r7\n\tsub!\tr7, r6, r8\n\tjump.lt\t@.BB39_17\n.BB39_111:\n\tsub.s!\t0, r5, r7\n\tjump.eq\t@.BB39_19\n\tshl.s\t5, r6, r6\n\tptr.add\tr1, r6, r7\n\tadd\tr10, r6, r6\n\tshl.s\t3, r5, r5\n\tld.1\tr6, r8\n\tshl\tr8, r5, r8\n\tshr\tr8, r5, r8\n\tld\tr7, r7\n\tsub\t256, r5, r5\n\tshr\tr7, r5, r7\n\tshl\tr7, r5, r5\n\tor\tr5, r8, r5\n\tst.1\tr6, r5\n.BB39_19:\n\tadd\tr3, r0, stack[@returndatasize]\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB39_20\n.BB39_25:\n\tadd\t31, r4, r1\n\tand\t96, r1, r1\n\tadd\tr1, r10, r4\n\tsub!\tr4, r1, r1\n\tadd\t0, r0, r1\n\tadd.lt\t1, r0, r1\n\tsub.s!\t@CPI39_2[0], r4, r2\n\tjump.gt\t@.BB39_27\n\tand!\t1, r1, r1\n\tjump.ne\t@.BB39_27\n\tst.1\t64, r4\n\tsub.s!\t32, r3, r1\n\tjump.lt\t@.BB39_1\n\tld.1\tr10, r1\n\tsub.s!\t@CPI39_1[0], r1, r2\n\tjump.gt\t@.BB39_1\n\tsub.s!\t0, r1, r2\n\tjump.eq\t@.BB39_31\n\tadd\tstack-[13], r0, r2\n\tsub!\tr1, r2, r1\n\tjump.ne\t@.BB39_33\n\tadd\t@CPI39_3[0], r0, r1\n\tst.2\t0, r1\n\tst.2\t4, r2\n\tadd\t@CPI39_4[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI39_4[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI39_5[0], r1, r1\n\tadd\t32770, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tadd\tstack-[10], r0, r2\n\tjump.eq\t@.BB39_1\n\tld\tr1, r1\n\tsub.s!\t0, r1, r1\n\tjump.eq\t@.BB39_36\n\tsub.s!\t20, r2, r1\n\tjump.lt\t@.BB39_1\n\tadd\tstack-[7], r0, r1\n\tptr.add\tstack[@ptr_calldata], r1, r1\n\tadd\tstack-[11], r0, r2\n\tld.1\tr2, r5\n\tld\tr1, r1\n\tadd\tstack-[8], r0, r2\n\tld.1\tr2, r2\n\tadd\t160, r2, r2\n\tld.1\tr2, r2\n\tand\t@CPI39_1[0], r2, r2\n\tld.1\t64, r3\n\tadd\t32, r3, r4\n\tst.1\tr4, r2\n\tshr.s\t96, r1, r1\n\tst.1\tr3, r1\n\tadd\t@CPI39_4[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI39_4[0], r2, r4\n\tadd.ge\tr1, r0, r2\n\tsub.s!\t@CPI39_4[0], r3, r4\n\tadd.lt\tr3, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r2, r2\n\tor\tr2, r1, r1\n\tor\t@CPI39_12[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t3, r0, r3\n\tadd\t@CPI39_13[0], r0, r4\n\tadd\tstack-[13], r0, r6\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB39_1\n.BB39_39:\n\tadd\tstack-[12], r0, r1\n\tadd\t160, r1, r1\n\tld.1\tr1, r1\n\tadd\tr1, r0, stack-[10]\n\tadd\t@CPI39_14[0], r0, r1\n\tst.2\t0, r1\n\tadd\t@CPI39_4[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI39_4[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI39_15[0], r1, r1\n\tadd\t32779, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tstack-[9], r0, r15\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB39_1\n\tld\tr1, r1\n\tst.1\t0, r1\n\tadd\tstack-[10], r0, r1\n\tand!\t@CPI39_1[0], r1, r1\n\tadd\tr1, r0, stack-[10]\n\tadd\tr0, r0, r2\n\tjump.ne\t@.BB39_43\n\tadd\tstack-[13], r0, r1\n\tst.1\t0, r1\n\tst.1\t32, r0\n\tadd\t@CPI39_4[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI39_4[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI39_12[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tstack-[9], r0, r15\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB39_1\n\tld\tr1, r1\n\tsload\tr1, r1\n\tand\t@CPI39_16[0], r1, r1\n\tadd\tstack-[4], r0, r2\n\tsub\tr2, r1, r1\n\tsub!\tr1, r2, r2\n\tadd\t0, r0, r2\n\tadd.gt\t1, r0, r2\n\tsub.s!\t0, r2, r2\n\tadd\tr1, r0, r2\n\tadd.ne\t0, r0, r2\n.BB39_43:\n\tadd\tstack-[11], r0, r1\n\tld.1\tr1, r3\n\tadd\tstack-[12], r0, r1\n\tadd\t96, r1, r1\n\tld.1\tr1, r1\n\tld.1\t64, r13\n\tadd\t@CPI39_17[0], r0, r4\n\tst.1\tr13, r4\n\tadd\t4, r13, r4\n\tadd\t96, r0, r5\n\tst.1\tr4, r5\n\tptr.add\tstack[@ptr_calldata], r15, r4\n\tld\tr4, r5\n\tsub.s!\t@CPI39_1[0], r5, r4\n\tjump.gt\t@.BB39_1\n\tadd\t100, r13, r4\n\tst.1\tr4, r5\n\tadd\t32, r15, r5\n\tptr.add\tstack[@ptr_calldata], r5, r5\n\tld\tr5, r5\n\tadd\t132, r13, r6\n\tst.1\tr6, r5\n\tadd\tstack[@calldatasize], r0, r5\n\tadd\tstack-[14], r0, r6\n\tadd\tr5, r6, r8\n\tptr.add\tstack[@ptr_calldata], r0, r6\n\tadd\tstack-[6], r0, r7\n\tptr.add\tr6, r7, r7\n\tld\tr7, r7\n\tadd\t@CPI39_0[0], r0, r9\n\tsub!\tr7, r8, r10\n\tadd\t0, r0, r10\n\tadd.ge\tr9, r0, r10\n\tand\t@CPI39_0[0], r8, r8\n\tand\t@CPI39_0[0], r7, r11\n\tsub!\tr11, r8, r12\n\tadd.ge\t0, r0, r9\n\txor\tr11, r8, r8\n\tsub.s!\t@CPI39_0[0], r8, r8\n\tadd\tr10, r0, r8\n\tadd.eq\tr9, r0, r8\n\tsub.s!\t0, r8, r8\n\tjump.ne\t@.BB39_1\n\tadd\tr7, r15, r7\n\tptr.add\tr6, r7, r6\n\tld\tr6, r6\n\tsub.s!\t@CPI39_2[0], r6, r8\n\tjump.gt\t@.BB39_1\n\tadd\t32, r7, r8\n\tsub\tr5, r6, r5\n\tadd\t@CPI39_0[0], r0, r7\n\tsub!\tr8, r5, r9\n\tadd\t0, r0, r9\n\tadd.gt\tr7, r0, r9\n\tand\t@CPI39_0[0], r5, r5\n\tand\t@CPI39_0[0], r8, r10\n\tsub!\tr10, r5, r11\n\tadd.ge\t0, r0, r7\n\txor\tr10, r5, r5\n\tsub.s!\t@CPI39_0[0], r5, r5\n\tadd\tr9, r0, r5\n\tadd.eq\tr7, r0, r5\n\tsub.s!\t0, r5, r5\n\tjump.ne\t@.BB39_1\n\tadd\t164, r13, r5\n\tadd\t352, r0, r7\n\tst.1\tr5, r7\n\tadd\t452, r13, r5\n\tst.1\tr5, r6\n\tand\t31, r6, r5\n\tadd\t484, r13, r7\n\tptr.add\tstack[@ptr_calldata], r8, r8\n\tshr.s!\t5, r6, r9\n\tjump.eq\t@.BB39_109\n\tadd\tr0, r0, r10\n.BB39_49:\n\tshl.s\t5, r10, r11\n\tadd\tr7, r11, r12\n\tptr.add\tr8, r11, r11\n\tld\tr11, r11\n\tst.1\tr12, r11\n\tadd\t1, r10, r10\n\tsub!\tr10, r9, r11\n\tjump.lt\t@.BB39_49\n.BB39_109:\n\tadd\tr13, r0, stack-[12]\n\tsub.s!\t0, r5, r10\n\tjump.eq\t@.BB39_51\n\tshl.s\t5, r9, r9\n\tptr.add\tr8, r9, r8\n\tadd\tr7, r9, r9\n\tshl.s\t3, r5, r5\n\tld.1\tr9, r10\n\tshl\tr10, r5, r10\n\tshr\tr10, r5, r10\n\tld\tr8, r8\n\tsub\t256, r5, r5\n\tshr\tr8, r5, r8\n\tshl\tr8, r5, r5\n\tor\tr5, r10, r5\n\tst.1\tr9, r5\n.BB39_51:\n\tadd\tr6, r7, r5\n\tst.1\tr5, r0\n\tadd\tstack[@calldatasize], r0, r8\n\tadd\tstack-[14], r0, r5\n\tadd\tr8, r5, r10\n\tadd\t96, r15, r9\n\tptr.add\tstack[@ptr_calldata], r0, r5\n\tptr.add\tr5, r9, r9\n\tld\tr9, r9\n\tadd\t@CPI39_0[0], r0, r11\n\tsub!\tr9, r10, r12\n\tadd\t0, r0, r12\n\tadd.ge\tr11, r0, r12\n\tand\t@CPI39_0[0], r10, r10\n\tand\t@CPI39_0[0], r9, r13\n\tsub!\tr13, r10, r14\n\tadd.ge\t0, r0, r11\n\txor\tr13, r10, r10\n\tsub.s!\t@CPI39_0[0], r10, r10\n\tadd\tr12, r0, r10\n\tadd.eq\tr11, r0, r10\n\tsub.s!\t0, r10, r10\n\tadd\tstack-[12], r0, r14\n\tjump.ne\t@.BB39_1\n\tadd\tr9, r15, r9\n\tptr.add\tr5, r9, r5\n\tld\tr5, r5\n\tsub.s!\t@CPI39_2[0], r5, r10\n\tjump.gt\t@.BB39_1\n\tadd\t32, r9, r9\n\tsub\tr8, r5, r8\n\tadd\t@CPI39_0[0], r0, r10\n\tsub!\tr9, r8, r11\n\tadd\t0, r0, r11\n\tadd.gt\tr10, r0, r11\n\tand\t@CPI39_0[0], r8, r8\n\tand\t@CPI39_0[0], r9, r12\n\tsub!\tr12, r8, r13\n\tadd.ge\t0, r0, r10\n\txor\tr12, r8, r8\n\tsub.s!\t@CPI39_0[0], r8, r8\n\tadd\tr11, r0, r8\n\tadd.eq\tr10, r0, r8\n\tsub.s!\t0, r8, r8\n\tjump.ne\t@.BB39_1\n\tadd\t31, r6, r6\n\tsub.s\t32, r0, r8\n\tadd\tr8, r0, stack-[11]\n\tand\tr6, r8, r6\n\tadd\tr6, r7, r7\n\tsub\tr7, r4, r6\n\tadd\t196, r14, r8\n\tst.1\tr8, r6\n\tand\t31, r5, r6\n\tst.1.inc\tr7, r5, r7\n\tptr.add\tstack[@ptr_calldata], r9, r8\n\tshr.s!\t5, r5, r9\n\tjump.eq\t@.BB39_108\n\tadd\tr0, r0, r10\n.BB39_56:\n\tshl.s\t5, r10, r11\n\tadd\tr7, r11, r12\n\tptr.add\tr8, r11, r11\n\tld\tr11, r11\n\tst.1\tr12, r11\n\tadd\t1, r10, r10\n\tsub!\tr10, r9, r11\n\tjump.lt\t@.BB39_56\n.BB39_108:\n\tsub.s!\t0, r6, r10\n\tjump.eq\t@.BB39_58\n\tshl.s\t5, r9, r9\n\tptr.add\tr8, r9, r8\n\tadd\tr7, r9, r9\n\tshl.s\t3, r6, r6\n\tld.1\tr9, r10\n\tshl\tr10, r6, r10\n\tshr\tr10, r6, r10\n\tld\tr8, r8\n\tsub\t256, r6, r6\n\tshr\tr8, r6, r8\n\tshl\tr8, r6, r6\n\tor\tr6, r10, r6\n\tst.1\tr9, r6\n.BB39_58:\n\tadd\tr5, r7, r6\n\tst.1\tr6, r0\n\tadd\t128, r15, r6\n\tptr.add\tstack[@ptr_calldata], r6, r6\n\tld\tr6, r6\n\tadd\t228, r14, r8\n\tst.1\tr8, r6\n\tadd\t160, r15, r6\n\tptr.add\tstack[@ptr_calldata], r6, r6\n\tld\tr6, r6\n\tadd\t260, r14, r8\n\tst.1\tr8, r6\n\tadd\t192, r15, r6\n\tptr.add\tstack[@ptr_calldata], r6, r6\n\tld\tr6, r6\n\tadd\t292, r14, r8\n\tst.1\tr8, r6\n\tadd\t224, r15, r6\n\tptr.add\tstack[@ptr_calldata], r6, r6\n\tld\tr6, r6\n\tadd\t324, r14, r8\n\tst.1\tr8, r6\n\tadd\t356, r14, r6\n\tadd\t256, r15, r8\n\tptr.add\tstack[@ptr_calldata], r8, r8\n\tld\tr8, r8\n\tst.1\tr6, r8\n\tadd\t288, r15, r9\n\tadd\tstack[@calldatasize], r0, r8\n\tadd\tstack-[14], r0, r6\n\tadd\tr8, r6, r10\n\tptr.add\tstack[@ptr_calldata], r0, r6\n\tptr.add\tr6, r9, r9\n\tld\tr9, r9\n\tadd\t@CPI39_0[0], r0, r11\n\tsub!\tr9, r10, r12\n\tadd\t0, r0, r12\n\tadd.ge\tr11, r0, r12\n\tand\t@CPI39_0[0], r10, r10\n\tand\t@CPI39_0[0], r9, r13\n\tsub!\tr13, r10, r14\n\tadd\tstack-[12], r0, r14\n\tadd.ge\t0, r0, r11\n\txor\tr13, r10, r10\n\tsub.s!\t@CPI39_0[0], r10, r10\n\tadd\tr12, r0, r10\n\tadd.eq\tr11, r0, r10\n\tsub.s!\t0, r10, r10\n\tjump.ne\t@.BB39_1\n\tadd\tr9, r15, r9\n\tptr.add\tr6, r9, r6\n\tld\tr6, r6\n\tsub.s!\t@CPI39_2[0], r6, r10\n\tjump.gt\t@.BB39_1\n\tadd\t32, r9, r9\n\tsub\tr8, r6, r8\n\tadd\t@CPI39_0[0], r0, r10\n\tsub!\tr9, r8, r11\n\tadd\t0, r0, r11\n\tadd.gt\tr10, r0, r11\n\tand\t@CPI39_0[0], r8, r8\n\tand\t@CPI39_0[0], r9, r12\n\tsub!\tr12, r8, r13\n\tadd.ge\t0, r0, r10\n\txor\tr12, r8, r8\n\tsub.s!\t@CPI39_0[0], r8, r8\n\tadd\tr11, r0, r8\n\tadd.eq\tr10, r0, r8\n\tsub.s!\t0, r8, r8\n\tjump.ne\t@.BB39_1\n\tadd\t31, r5, r5\n\tadd\tstack-[11], r0, r8\n\tand\tr5, r8, r5\n\tadd\tr5, r7, r5\n\tsub\tr5, r4, r7\n\tadd\t388, r14, r8\n\tst.1\tr8, r7\n\tand\t31, r6, r7\n\tst.1.inc\tr5, r6, r5\n\tptr.add\tstack[@ptr_calldata], r9, r8\n\tshr.s!\t5, r6, r9\n\tjump.eq\t@.BB39_107\n\tadd\tr0, r0, r10\n.BB39_63:\n\tshl.s\t5, r10, r11\n\tadd\tr5, r11, r12\n\tptr.add\tr8, r11, r11\n\tld\tr11, r11\n\tst.1\tr12, r11\n\tadd\t1, r10, r10\n\tsub!\tr10, r9, r11\n\tjump.lt\t@.BB39_63\n.BB39_107:\n\tsub.s!\t0, r7, r10\n\tjump.eq\t@.BB39_65\n\tshl.s\t5, r9, r9\n\tptr.add\tr8, r9, r8\n\tadd\tr5, r9, r9\n\tshl.s\t3, r7, r7\n\tld.1\tr9, r10\n\tshl\tr10, r7, r10\n\tshr\tr10, r7, r10\n\tld\tr8, r8\n\tsub\t256, r7, r7\n\tshr\tr8, r7, r8\n\tshl\tr8, r7, r7\n\tor\tr7, r10, r7\n\tst.1\tr9, r7\n.BB39_65:\n\tadd\tr6, r5, r7\n\tst.1\tr7, r0\n\tadd\tstack[@calldatasize], r0, r8\n\tadd\tstack-[14], r0, r7\n\tadd\tr8, r7, r10\n\tadd\t320, r15, r9\n\tptr.add\tstack[@ptr_calldata], r0, r7\n\tptr.add\tr7, r9, r9\n\tld\tr9, r9\n\tadd\t@CPI39_0[0], r0, r11\n\tsub!\tr9, r10, r12\n\tadd\t0, r0, r12\n\tadd.ge\tr11, r0, r12\n\tand\t@CPI39_0[0], r10, r10\n\tand\t@CPI39_0[0], r9, r13\n\tsub!\tr13, r10, r14\n\tadd.ge\t0, r0, r11\n\txor\tr13, r10, r10\n\tsub.s!\t@CPI39_0[0], r10, r10\n\tadd\tr12, r0, r10\n\tadd.eq\tr11, r0, r10\n\tsub.s!\t0, r10, r10\n\tadd\tstack-[12], r0, r14\n\tjump.ne\t@.BB39_1\n\tadd\tr9, r15, r9\n\tptr.add\tr7, r9, r7\n\tld\tr7, r7\n\tsub.s!\t@CPI39_2[0], r7, r10\n\tjump.gt\t@.BB39_1\n\tadd\t32, r9, r9\n\tsub\tr8, r7, r8\n\tadd\t@CPI39_0[0], r0, r10\n\tsub!\tr9, r8, r11\n\tadd\t0, r0, r11\n\tadd.gt\tr10, r0, r11\n\tand\t@CPI39_0[0], r8, r8\n\tand\t@CPI39_0[0], r9, r12\n\tsub!\tr12, r8, r13\n\tadd.ge\t0, r0, r10\n\txor\tr12, r8, r8\n\tsub.s!\t@CPI39_0[0], r8, r8\n\tadd\tr11, r0, r8\n\tadd.eq\tr10, r0, r8\n\tsub.s!\t0, r8, r8\n\tjump.ne\t@.BB39_1\n\tadd\t31, r6, r6\n\tadd\tstack-[11], r0, r8\n\tand\tr6, r8, r6\n\tadd\tr6, r5, r6\n\tsub\tr6, r4, r4\n\tadd\t420, r14, r5\n\tst.1\tr5, r4\n\tand\t31, r7, r5\n\tst.1.inc\tr6, r7, r4\n\tptr.add\tstack[@ptr_calldata], r9, r6\n\tshr.s!\t5, r7, r8\n\tjump.eq\t@.BB39_106\n\tadd\tr0, r0, r9\n.BB39_70:\n\tshl.s\t5, r9, r10\n\tadd\tr4, r10, r11\n\tptr.add\tr6, r10, r10\n\tld\tr10, r10\n\tst.1\tr11, r10\n\tadd\t1, r9, r9\n\tsub!\tr9, r8, r10\n\tjump.lt\t@.BB39_70\n.BB39_106:\n\tsub.s!\t0, r5, r9\n\tjump.eq\t@.BB39_72\n\tshl.s\t5, r8, r8\n\tptr.add\tr6, r8, r6\n\tadd\tr4, r8, r8\n\tshl.s\t3, r5, r5\n\tld.1\tr8, r9\n\tshl\tr9, r5, r9\n\tshr\tr9, r5, r9\n\tld\tr6, r6\n\tsub\t256, r5, r5\n\tshr\tr6, r5, r6\n\tshl\tr6, r5, r5\n\tor\tr5, r9, r5\n\tst.1\tr8, r5\n.BB39_72:\n\tadd\tr7, r4, r5\n\tst.1\tr5, r0\n\tadd\t68, r14, r5\n\tst.1\tr5, r2\n\tadd\t36, r14, r2\n\tst.1\tr2, r3\n\tadd\tstack-[13], r0, r2\n\tsub.s!\t4, r2, r3\n\tjump.ne\t@.BB39_74\n\tcontext.sp\tr5\n\tsub.s\t16, r5, r5\n\tmul\t32, r5, r5, r0\n\tadd\tstack[@returndatasize], r0, r3\n\tsub.s!\t32, r3, r1\n\tadd\t32, r0, r4\n\tadd.lt\tr3, r0, r4\n\tadd\t0, r0, stack-[16]\n\tjump\t@.BB39_79\n.BB39_74:\n\tadd\t31, r7, r3\n\tadd\tstack-[11], r0, r5\n\tand\tr3, r5, r5\n\tsub\tr4, r14, r3\n\tadd\tr3, r5, r5\n\tadd\t@CPI39_4[0], r0, r3\n\tsub.s!\t@CPI39_4[0], r5, r4\n\tadd\tr3, r0, r4\n\tadd.lt\tr5, r0, r4\n\tshl.s\t96, r4, r5\n\tsub.s!\t@CPI39_4[0], r14, r4\n\tadd\tr3, r0, r4\n\tadd.lt\tr14, r0, r4\n\tshl.s\t64, r4, r4\n\tor\tr5, r4, r5\n\tsub.s!\t@CPI39_4[0], r1, r4\n\tadd.ge\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\tr5, r1, r1\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tadd\tstack-[12], r0, r14\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI39_4[0], r3, r3\n\tsub.s!\t32, r3, r4\n\tadd\t32, r0, r4\n\tadd.lt\tr3, r0, r4\n\tand\t31, r4, r5\n\tshr.s!\t5, r4, r6\n\tjump.eq\t@.BB39_105\n\tadd\tr0, r0, r7\n.BB39_76:\n\tshl.s\t5, r7, r8\n\tadd\tr14, r8, r9\n\tptr.add\tr1, r8, r8\n\tld\tr8, r8\n\tst.1\tr9, r8\n\tadd\t1, r7, r7\n\tsub!\tr7, r6, r8\n\tjump.lt\t@.BB39_76\n.BB39_105:\n\tsub.s!\t0, r5, r7\n\tjump.eq\t@.BB39_78\n\tshl.s\t5, r6, r6\n\tptr.add\tr1, r6, r7\n\tadd\tr14, r6, r6\n\tshl.s\t3, r5, r5\n\tld.1\tr6, r8\n\tshl\tr8, r5, r8\n\tshr\tr8, r5, r8\n\tld\tr7, r7\n\tsub\t256, r5, r5\n\tshr\tr7, r5, r7\n\tshl\tr7, r5, r5\n\tor\tr5, r8, r5\n\tst.1\tr6, r5\n.BB39_78:\n\tadd\tr3, r0, stack[@returndatasize]\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tcontext.sp\tr5\n\tsub.s\t15, r5, r5\n\tmul\t32, r5, r5, r0\n\tadd\t0, r0, stack-[15]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB39_83\n.BB39_79:\n\tadd\t31, r4, r1\n\tand\t96, r1, r2\n\tadd\tr2, r14, r1\n\tsub!\tr1, r2, r2\n\tadd\t0, r0, r2\n\tadd.lt\t1, r0, r2\n\tsub.s!\t@CPI39_2[0], r1, r4\n\tjump.gt\t@.BB39_27\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB39_27\n\tst.1\t64, r1\n\tsub.s!\t32, r3, r1\n\tjump.lt\t@.BB39_1\n\tld.1\tr14, r3\n\tdiv.s\t32, r5, r1, r0\n\tadd\tr3, r0, stack[r1]\n\tadd\tstack-[10], r0, r1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB39_101\n\tadd\tr3, r0, stack-[14]\n\tadd\tstack-[13], r0, r1\n\tst.1\t0, r1\n\tst.1\t32, r0\n\tadd\t@CPI39_4[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI39_4[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI39_12[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB39_1\n\tld\tr1, r1\n\tsload\tr1, r2\n\tand\t@CPI39_16[0], r2, r3\n\tadd\tstack-[4], r0, r4\n\tsub!\tr3, r4, r3\n\tjump.lt\t@.BB39_102\n\tsub\tr2, r4, r3\n\tand\t@CPI39_16[0], r3, r3\n\tand\t@CPI39_21[0], r2, r2\n\tor\tr3, r2, r2\n\tsstore\tr1, r2\n\tadd\tstack-[14], r0, r3\n.BB39_101:\n\tcontext.gas_left\tr1\n\tadd\tstack-[5], r0, r2\n\tsub\tr2, r1, r1\n\tadd\tr3, r0, r2\n\tret\n.BB39_1:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB39_7:\n\tld.1\t64, r2\n\tadd\tr2, r0, stack-[14]\n\tadd\t@CPI39_6[0], r0, r1\n\tst.1\tr2, r1\n\tadd\t4, r2, r1\n\tadd\tstack-[2], r0, r2\n\tnear_call\tr0, @abi_encode_uint256_stringliteral_2674, @DEFAULT_UNWIND\n\tadd\tstack-[14], r0, r4\n\tsub\tr1, r4, r1\n\tadd\t@CPI39_4[0], r0, r2\n\tsub.s!\t@CPI39_4[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tsub.s!\t@CPI39_4[0], r4, r3\n\tadd.lt\tr4, r0, r2\n\tshl.s\t64, r2, r2\n\tshl.s\t96, r1, r1\n\tor\tr1, r2, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB39_31:\n\tadd\t@CPI39_6[0], r0, r1\n\tst.1\tr4, r1\n\tadd\t4, r4, r1\n\tadd\tstack-[2], r0, r2\n\tadd\tr4, r0, stack-[14]\n\tnear_call\tr0, @abi_encode_uint256_stringliteral_a46d, @DEFAULT_UNWIND\n\tadd\tstack-[14], r0, r4\n\tsub\tr1, r4, r1\n\tadd\t@CPI39_4[0], r0, r2\n\tsub.s!\t@CPI39_4[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tsub.s!\t@CPI39_4[0], r4, r3\n\tadd.lt\tr4, r0, r2\n\tshl.s\t64, r2, r2\n\tshl.s\t96, r1, r1\n\tor\tr1, r2, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB39_33:\n\tadd\t@CPI39_6[0], r0, r1\n\tst.1\tr4, r1\n\tadd\t4, r4, r1\n\tadd\tstack-[2], r0, r2\n\tadd\tr4, r0, stack-[14]\n\tnear_call\tr0, @abi_encode_uint256_stringliteral_cf8e, @DEFAULT_UNWIND\n\tadd\tstack-[14], r0, r4\n\tsub\tr1, r4, r1\n\tadd\t@CPI39_4[0], r0, r2\n\tsub.s!\t@CPI39_4[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tsub.s!\t@CPI39_4[0], r4, r3\n\tadd.lt\tr4, r0, r2\n\tshl.s\t64, r2, r2\n\tshl.s\t96, r1, r1\n\tor\tr1, r2, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB39_36:\n\tld.1\t64, r2\n\tadd\tr2, r0, stack-[14]\n\tadd\t@CPI39_6[0], r0, r1\n\tst.1\tr2, r1\n\tadd\t4, r2, r1\n\tadd\tstack-[2], r0, r2\n\tnear_call\tr0, @abi_encode_uint256_stringliteral_bb1e, @DEFAULT_UNWIND\n\tadd\tstack-[14], r0, r4\n\tsub\tr1, r4, r1\n\tadd\t@CPI39_4[0], r0, r2\n\tsub.s!\t@CPI39_4[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tsub.s!\t@CPI39_4[0], r4, r3\n\tadd.lt\tr4, r0, r2\n\tshl.s\t64, r2, r2\n\tshl.s\t96, r1, r1\n\tor\tr1, r2, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB39_83:\n\tsub.s!\t4, r3, r2\n\tjump.lt\t@.BB39_98\n\tld.1\t0, r2\n\tand\t@CPI39_18[0], r2, r2\n\tld\tr1, r1\n\tand\t@CPI39_19[0], r1, r1\n\tor\tr1, r2, r1\n\tst.1\t0, r1\n\tand\t@CPI39_19[0], r1, r1\n\tsub.s!\t@CPI39_20[0], r1, r1\n\tjump.ne\t@.BB39_98\n\tadd\tstack[@returndatasize], r0, r3\n\tsub.s!\t68, r3, r1\n\tjump.lt\t@.BB39_98\n\tld.1\t64, r2\n\tadd\t4, r0, r1\n\tptr.add\tstack[@ptr_return_data], r1, r1\n\tsub.s\t4, r3, r4\n\tand\t31, r4, r3\n\tshr.s!\t5, r4, r4\n\tjump.eq\t@.BB39_104\n\tadd\tr0, r0, r5\n.BB39_88:\n\tshl.s\t5, r5, r6\n\tadd\tr2, r6, r7\n\tptr.add\tr1, r6, r6\n\tld\tr6, r6\n\tst.1\tr7, r6\n\tadd\t1, r5, r5\n\tsub!\tr5, r4, r6\n\tjump.lt\t@.BB39_88\n.BB39_104:\n\tsub.s!\t0, r3, r5\n\tjump.eq\t@.BB39_90\n\tshl.s\t5, r4, r4\n\tptr.add\tr1, r4, r1\n\tadd\tr2, r4, r4\n\tshl.s\t3, r3, r3\n\tld.1\tr4, r5\n\tshl\tr5, r3, r5\n\tshr\tr5, r3, r5\n\tld\tr1, r1\n\tsub\t256, r3, r3\n\tshr\tr1, r3, r1\n\tshl\tr1, r3, r1\n\tor\tr1, r5, r1\n\tst.1\tr4, r1\n.BB39_90:\n\tadd\tstack[@returndatasize], r0, r4\n\tld.1\tr2, r3\n\tsub.s!\t@CPI39_2[0], r3, r1\n\tjump.gt\t@.BB39_98\n\tadd\t36, r3, r1\n\tsub!\tr1, r4, r1\n\tjump.gt\t@.BB39_98\n\tadd\tr3, r2, r1\n\tld.1\tr1, r5\n\tsub.s!\t@CPI39_2[0], r5, r6\n\tjump.gt\t@.BB39_98\n\tadd\tr1, r5, r6\n\tadd\tr2, r4, r4\n\tsub.s\t4, r4, r4\n\tadd\t32, r6, r6\n\tsub!\tr6, r4, r4\n\tjump.le\t@.BB39_94\n.BB39_98:\n\tld.1\t64, r2\n\tadd\tr2, r0, stack-[14]\n\tadd\t@CPI39_6[0], r0, r1\n\tst.1\tr2, r1\n\tadd\t4, r2, r1\n\tadd\tstack-[2], r0, r2\n\tnear_call\tr0, @abi_encode_uint256_stringliteral_d8c5, @DEFAULT_UNWIND\n\tadd\tstack-[14], r0, r4\n\tsub\tr1, r4, r1\n\tadd\t@CPI39_4[0], r0, r2\n\tsub.s!\t@CPI39_4[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tsub.s!\t@CPI39_4[0], r4, r3\n\tadd.lt\tr4, r0, r2\n\tshl.s\t64, r2, r2\n\tshl.s\t96, r1, r1\n\tor\tr1, r2, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB39_102:\n\tld.1\t64, r2\n\tadd\tr2, r0, stack-[14]\n\tadd\t@CPI39_6[0], r0, r1\n\tst.1\tr2, r1\n\tadd\t4, r2, r1\n\tadd\tstack-[2], r0, r2\n\tnear_call\tr0, @abi_encode_uint256_stringliteral_af9d, @DEFAULT_UNWIND\n\tadd\tstack-[14], r0, r4\n\tsub\tr1, r4, r1\n\tadd\t@CPI39_4[0], r0, r2\n\tsub.s!\t@CPI39_4[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tsub.s!\t@CPI39_4[0], r4, r3\n\tadd.lt\tr4, r0, r2\n\tshl.s\t64, r2, r2\n\tshl.s\t96, r1, r1\n\tor\tr1, r2, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB39_20:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r3\n\tjump.eq\t@.BB39_110\n\tadd\tr0, r0, r5\n.BB39_22:\n\tshl.s\t5, r5, r6\n\tadd\tr2, r6, r7\n\tptr.add\tr1, r6, r6\n\tld\tr6, r6\n\tst.1\tr7, r6\n\tadd\t1, r5, r5\n\tsub!\tr5, r3, r6\n\tjump.lt\t@.BB39_22\n.BB39_110:\n\tsub.s!\t0, r4, r5\n\tjump.eq\t@.BB39_24\n\tshl.s\t5, r3, r3\n\tptr.add\tr1, r3, r1\n\tadd\tr2, r3, r3\n\tshl.s\t3, r4, r4\n\tld.1\tr3, r5\n\tshl\tr5, r4, r5\n\tshr\tr5, r4, r5\n\tld\tr1, r1\n\tsub\t256, r4, r4\n\tshr\tr1, r4, r1\n\tshl\tr1, r4, r1\n\tor\tr1, r5, r1\n\tst.1\tr3, r1\n.BB39_24:\n\tadd\t@CPI39_4[0], r0, r1\n\tadd\tstack[@returndatasize], r0, r3\n\tsub.s!\t@CPI39_4[0], r3, r4\n\tadd.ge\tr1, r0, r3\n\tsub.s!\t@CPI39_4[0], r2, r4\n\tadd.lt\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t96, r3, r2\n\tor\tr2, r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB39_94:\n\tadd\tr3, r5, r3\n\tadd\t63, r3, r3\n\tadd\tstack-[11], r0, r4\n\tand\tr3, r4, r3\n\tadd\tr3, r2, r2\n\tsub!\tr2, r3, r3\n\tadd\t0, r0, r3\n\tadd.lt\t1, r0, r3\n\tsub.s!\t@CPI39_2[0], r2, r4\n\tjump.gt\t@.BB39_27\n\tand!\t1, r3, r3\n\tjump.ne\t@.BB39_27\n\tst.1\t64, r2\n\tsub.s!\t0, r1, r2\n\tjump.eq\t@.BB39_98\n\tnear_call\tr0, @string_concat_stringliteral_64c3_string, @DEFAULT_UNWIND\n\tadd\t@CPI39_6[0], r0, r2\n\tld.1\t64, r4\n\tadd\tr4, r0, stack-[14]\n\tst.1\tr4, r2\n\tadd\tr1, r0, r3\n\tadd\t4, r4, r1\n\tadd\tstack-[2], r0, r2\n\tnear_call\tr0, @abi_encode_uint256_bytes, @DEFAULT_UNWIND\n\tadd\tstack-[14], r0, r4\n\tsub\tr1, r4, r1\n\tadd\t@CPI39_4[0], r0, r2\n\tsub.s!\t@CPI39_4[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tsub.s!\t@CPI39_4[0], r4, r3\n\tadd.lt\tr4, r0, r2\n\tshl.s\t64, r2, r2\n\tshl.s\t96, r1, r1\n\tor\tr1, r2, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB39_27:\n\tadd\t@CPI39_22[0], r0, r1\n\tst.1\t0, r1\n\tadd\t65, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI39_23[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end39:\n\nabi_encode_uint256_stringliteral:\n.func_begin40:\n\tadd\t96, r1, r2\n\tadd\t@CPI40_0[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t64, r1, r2\n\tadd\t31, r0, r3\n\tst.1\tr2, r3\n\tadd\t32, r1, r2\n\tadd\t64, r0, r3\n\tst.1\tr2, r3\n\tst.1\tr1, r0\n\tadd\t128, r1, r1\n\tret\n.func_end40:\n\nabi_encode_uint256_stringliteral_2674:\n.func_begin41:\n\tadd\t96, r1, r3\n\tadd\t@CPI41_0[0], r0, r4\n\tst.1\tr3, r4\n\tadd\t64, r1, r3\n\tadd\t31, r0, r4\n\tst.1\tr3, r4\n\tadd\t32, r1, r3\n\tadd\t64, r0, r4\n\tst.1\tr3, r4\n\tst.1\tr1, r2\n\tadd\t128, r1, r1\n\tret\n.func_end41:\n\nabi_encode_uint256_stringliteral_a46d_42910:\n.func_begin42:\n\tadd\t96, r1, r2\n\tadd\t@CPI42_0[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t64, r1, r2\n\tadd\t27, r0, r3\n\tst.1\tr2, r3\n\tadd\t32, r1, r2\n\tadd\t64, r0, r3\n\tst.1\tr2, r3\n\tst.1\tr1, r0\n\tadd\t128, r1, r1\n\tret\n.func_end42:\n\nabi_encode_uint256_stringliteral_a46d:\n.func_begin43:\n\tadd\t96, r1, r3\n\tadd\t@CPI43_0[0], r0, r4\n\tst.1\tr3, r4\n\tadd\t64, r1, r3\n\tadd\t27, r0, r4\n\tst.1\tr3, r4\n\tadd\t32, r1, r3\n\tadd\t64, r0, r4\n\tst.1\tr3, r4\n\tst.1\tr1, r2\n\tadd\t128, r1, r1\n\tret\n.func_end43:\n\nabi_encode_uint256_stringliteral_cf8e_42911:\n.func_begin44:\n\tadd\t96, r1, r2\n\tadd\t@CPI44_0[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t64, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t32, r1, r2\n\tadd\t64, r0, r3\n\tst.1\tr2, r3\n\tst.1\tr1, r0\n\tadd\t128, r1, r1\n\tret\n.func_end44:\n\nabi_encode_uint256_stringliteral_cf8e:\n.func_begin45:\n\tadd\t96, r1, r3\n\tadd\t@CPI45_0[0], r0, r4\n\tst.1\tr3, r4\n\tadd\t64, r1, r3\n\tadd\t32, r0, r4\n\tst.1\tr3, r4\n\tadd\t32, r1, r3\n\tadd\t64, r0, r4\n\tst.1\tr3, r4\n\tst.1\tr1, r2\n\tadd\t128, r1, r1\n\tret\n.func_end45:\n\nabi_encode_uint256_stringliteral_bb1e_42912:\n.func_begin46:\n\tadd\t96, r1, r2\n\tadd\t@CPI46_0[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t64, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t32, r1, r2\n\tadd\t64, r0, r3\n\tst.1\tr2, r3\n\tst.1\tr1, r0\n\tadd\t128, r1, r1\n\tret\n.func_end46:\n\nabi_encode_uint256_stringliteral_bb1e:\n.func_begin47:\n\tadd\t96, r1, r3\n\tadd\t@CPI47_0[0], r0, r4\n\tst.1\tr3, r4\n\tadd\t64, r1, r3\n\tadd\t32, r0, r4\n\tst.1\tr3, r4\n\tadd\t32, r1, r3\n\tadd\t64, r0, r4\n\tst.1\tr3, r4\n\tst.1\tr1, r2\n\tadd\t128, r1, r1\n\tret\n.func_end47:\n\nabi_encode_uint256_stringliteral_423a_36518:\n.func_begin48:\n\tadd\t96, r1, r2\n\tadd\t@CPI48_0[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t64, r1, r2\n\tadd\t30, r0, r3\n\tst.1\tr2, r3\n\tadd\t32, r1, r2\n\tadd\t64, r0, r3\n\tst.1\tr2, r3\n\tst.1\tr1, r0\n\tadd\t128, r1, r1\n\tret\n.func_end48:\n\nabi_encode_uint256_stringliteral_423a:\n.func_begin49:\n\tadd\t96, r1, r3\n\tadd\t@CPI49_0[0], r0, r4\n\tst.1\tr3, r4\n\tadd\t64, r1, r3\n\tadd\t30, r0, r4\n\tst.1\tr3, r4\n\tadd\t32, r1, r3\n\tadd\t64, r0, r4\n\tst.1\tr3, r4\n\tst.1\tr1, r2\n\tadd\t128, r1, r1\n\tret\n.func_end49:\n\nstring_concat_stringliteral_d505_string:\n.func_begin50:\n\tadd\tr1, r0, r2\n\tld.1\t64, r1\n\tadd\t32, r1, r3\n\tadd\t@CPI50_0[0], r0, r4\n\tst.1\tr3, r4\n\tadd\t47, r1, r4\n\tld.1\tr2, r3\n\tsub.s!\t0, r3, r5\n\tjump.eq\t@.BB50_3\n\tadd\tr0, r0, r5\n.BB50_2:\n\tadd\tr5, r4, r6\n\tadd\t32, r5, r5\n\tadd\tr5, r2, r7\n\tld.1\tr7, r7\n\tst.1\tr6, r7\n\tsub!\tr5, r3, r6\n\tjump.lt\t@.BB50_2\n.BB50_3:\n\tadd\tr3, r4, r2\n\tst.1\tr2, r0\n\tadd\t15, r3, r2\n\tst.1\tr1, r2\n\tadd\t78, r3, r2\n\tsub.s\t32, r0, r3\n\tand\tr2, r3, r3\n\tadd\tr3, r1, r2\n\tsub!\tr2, r3, r3\n\tadd\t0, r0, r3\n\tadd.lt\t1, r0, r3\n\tsub.s!\t@CPI50_1[0], r2, r4\n\tjump.gt\t@.BB50_5\n\tand!\t1, r3, r3\n\tjump.ne\t@.BB50_5\n\tst.1\t64, r2\n\tret\n.BB50_5:\n\tadd\t@CPI50_2[0], r0, r1\n\tst.1\t0, r1\n\tadd\t65, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI50_3[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end50:\n\nabi_encode_uint256_stringliteral_b1ed_36520:\n.func_begin51:\n\tadd\t96, r1, r2\n\tadd\t@CPI51_0[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t64, r1, r2\n\tadd\t22, r0, r3\n\tst.1\tr2, r3\n\tadd\t32, r1, r2\n\tadd\t64, r0, r3\n\tst.1\tr2, r3\n\tst.1\tr1, r0\n\tadd\t128, r1, r1\n\tret\n.func_end51:\n\nabi_encode_uint256_stringliteral_b1ed:\n.func_begin52:\n\tadd\t96, r1, r3\n\tadd\t@CPI52_0[0], r0, r4\n\tst.1\tr3, r4\n\tadd\t64, r1, r3\n\tadd\t22, r0, r4\n\tst.1\tr3, r4\n\tadd\t32, r1, r3\n\tadd\t64, r0, r4\n\tst.1\tr3, r4\n\tst.1\tr1, r2\n\tadd\t128, r1, r1\n\tret\n.func_end52:\n\nfun_validatePaymasterPrepayment_29537:\n.func_begin53:\n\tnop\tstack+=[10]\n\tadd\tr3, r0, stack-[5]\n\tadd\tr1, r0, stack-[6]\n\tld.1.inc\tr2, r1, r2\n\tadd\tr2, r0, stack-[4]\n\tadd\t96, r1, r2\n\tld.1\tr2, r2\n\tadd\tr4, r0, stack-[2]\n\tadd\tr2, r0, stack-[1]\n\tsub!\tr2, r4, r2\n\tjump.le\t@.BB53_1\n\tadd\t160, r1, r1\n\tld.1\tr1, r1\n\tand\t@CPI53_4[0], r1, r1\n\tadd\tr1, r0, stack-[3]\n\tst.1\t0, r1\n\tst.1\t32, r0\n\tadd\t@CPI53_2[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI53_2[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI53_5[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB53_3\n\tld\tr1, r1\n\tsload\tr1, r2\n\tand\t@CPI53_6[0], r2, r3\n\tadd\tstack-[5], r0, r4\n\tsub!\tr3, r4, r3\n\tjump.lt\t@.BB53_5\n\tsub\tr2, r4, r3\n\tand\t@CPI53_6[0], r3, r3\n\tand\t@CPI53_7[0], r2, r2\n\tor\tr3, r2, r2\n\tsstore\tr1, r2\n\tadd\tstack-[4], r0, r1\n\tld.1\tr1, r1\n\tld.1\t64, r15\n\tadd\t@CPI53_8[0], r0, r2\n\tst.1.inc\tr15, r2, r14\n\tadd\t4, r15, r2\n\tadd\t96, r0, r3\n\tst.1\tr2, r3\n\tadd\tstack-[6], r0, r2\n\tptr.add\tstack[@ptr_calldata], r2, r2\n\tld\tr2, r3\n\tsub.s!\t@CPI53_4[0], r3, r2\n\tjump.gt\t@.BB53_3\n\tadd\t100, r15, r2\n\tst.1\tr2, r3\n\tadd\tstack-[6], r0, r5\n\tadd\t32, r5, r3\n\tptr.add\tstack[@ptr_calldata], r3, r3\n\tld\tr3, r3\n\tadd\t132, r15, r4\n\tst.1\tr4, r3\n\tsub.s\t31, r0, r3\n\tsub\tr3, r5, r3\n\tadd\t64, r5, r4\n\tptr.add\tstack[@ptr_calldata], r0, r5\n\tptr.add\tr5, r4, r4\n\tld\tr4, r6\n\tadd\tstack[@calldatasize], r0, r4\n\tadd\tr4, r3, r7\n\tadd\t@CPI53_9[0], r0, r8\n\tsub!\tr6, r7, r9\n\tadd\t0, r0, r9\n\tadd.ge\tr8, r0, r9\n\tand\t@CPI53_9[0], r7, r7\n\tand\t@CPI53_9[0], r6, r10\n\tsub!\tr10, r7, r11\n\tadd.ge\t0, r0, r8\n\txor\tr10, r7, r7\n\tsub.s!\t@CPI53_9[0], r7, r7\n\tadd\tr9, r0, r7\n\tadd.eq\tr8, r0, r7\n\tsub.s!\t0, r7, r7\n\tjump.ne\t@.BB53_3\n\tadd\tstack-[6], r0, r7\n\tadd\tr6, r7, r6\n\tptr.add\tr5, r6, r5\n\tld\tr5, r5\n\tsub.s!\t@CPI53_10[0], r5, r7\n\tjump.gt\t@.BB53_3\n\tadd\t32, r6, r7\n\tsub\tr4, r5, r4\n\tadd\t@CPI53_9[0], r0, r6\n\tsub!\tr7, r4, r8\n\tadd\t0, r0, r8\n\tadd.gt\tr6, r0, r8\n\tand\t@CPI53_9[0], r4, r4\n\tand\t@CPI53_9[0], r7, r9\n\tsub!\tr9, r4, r10\n\tadd.ge\t0, r0, r6\n\txor\tr9, r4, r4\n\tsub.s!\t@CPI53_9[0], r4, r4\n\tadd\tr8, r0, r4\n\tadd.eq\tr6, r0, r4\n\tsub.s!\t0, r4, r4\n\tjump.ne\t@.BB53_3\n\tadd\t164, r15, r4\n\tadd\t352, r0, r6\n\tst.1\tr4, r6\n\tadd\t452, r15, r4\n\tst.1\tr4, r5\n\tand\t31, r5, r4\n\tadd\t484, r15, r6\n\tptr.add\tstack[@ptr_calldata], r7, r7\n\tshr.s!\t5, r5, r8\n\tjump.eq\t@.BB53_75\n\tadd\tr0, r0, r9\n.BB53_12:\n\tshl.s\t5, r9, r10\n\tadd\tr6, r10, r11\n\tptr.add\tr7, r10, r10\n\tld\tr10, r10\n\tst.1\tr11, r10\n\tadd\t1, r9, r9\n\tsub!\tr9, r8, r10\n\tjump.lt\t@.BB53_12\n.BB53_75:\n\tsub.s!\t0, r4, r9\n\tjump.eq\t@.BB53_14\n\tshl.s\t5, r8, r8\n\tptr.add\tr7, r8, r7\n\tadd\tr6, r8, r8\n\tshl.s\t3, r4, r4\n\tld.1\tr8, r9\n\tshl\tr9, r4, r9\n\tshr\tr9, r4, r9\n\tld\tr7, r7\n\tsub\t256, r4, r4\n\tshr\tr7, r4, r7\n\tshl\tr7, r4, r4\n\tor\tr4, r9, r4\n\tst.1\tr8, r4\n.BB53_14:\n\tadd\tr5, r6, r4\n\tst.1\tr4, r0\n\tadd\tstack[@calldatasize], r0, r7\n\tadd\tr7, r3, r9\n\tadd\tstack-[6], r0, r4\n\tadd\t96, r4, r8\n\tptr.add\tstack[@ptr_calldata], r0, r4\n\tptr.add\tr4, r8, r8\n\tld\tr8, r8\n\tadd\t@CPI53_9[0], r0, r10\n\tsub!\tr8, r9, r11\n\tadd\t0, r0, r11\n\tadd.ge\tr10, r0, r11\n\tand\t@CPI53_9[0], r9, r9\n\tand\t@CPI53_9[0], r8, r12\n\tsub!\tr12, r9, r13\n\tadd.ge\t0, r0, r10\n\txor\tr12, r9, r9\n\tsub.s!\t@CPI53_9[0], r9, r9\n\tadd\tr11, r0, r9\n\tadd.eq\tr10, r0, r9\n\tsub.s!\t0, r9, r9\n\tjump.ne\t@.BB53_3\n\tadd\tstack-[6], r0, r9\n\tadd\tr8, r9, r8\n\tptr.add\tr4, r8, r4\n\tld\tr4, r4\n\tsub.s!\t@CPI53_10[0], r4, r9\n\tjump.gt\t@.BB53_3\n\tadd\t32, r8, r8\n\tsub\tr7, r4, r7\n\tadd\t@CPI53_9[0], r0, r9\n\tsub!\tr8, r7, r10\n\tadd\t0, r0, r10\n\tadd.gt\tr9, r0, r10\n\tand\t@CPI53_9[0], r7, r7\n\tand\t@CPI53_9[0], r8, r11\n\tsub!\tr11, r7, r12\n\tadd.ge\t0, r0, r9\n\txor\tr11, r7, r7\n\tsub.s!\t@CPI53_9[0], r7, r7\n\tadd\tr10, r0, r7\n\tadd.eq\tr9, r0, r7\n\tsub.s!\t0, r7, r7\n\tjump.ne\t@.BB53_3\n\tadd\t31, r5, r5\n\tsub.s\t32, r0, r12\n\tand\tr5, r12, r5\n\tadd\tr5, r6, r6\n\tsub\tr6, r2, r5\n\tadd\t196, r15, r7\n\tst.1\tr7, r5\n\tand\t31, r4, r5\n\tst.1.inc\tr6, r4, r6\n\tptr.add\tstack[@ptr_calldata], r8, r7\n\tshr.s!\t5, r4, r8\n\tjump.eq\t@.BB53_74\n\tadd\tr0, r0, r9\n.BB53_19:\n\tshl.s\t5, r9, r10\n\tadd\tr6, r10, r11\n\tptr.add\tr7, r10, r10\n\tld\tr10, r10\n\tst.1\tr11, r10\n\tadd\t1, r9, r9\n\tsub!\tr9, r8, r10\n\tjump.lt\t@.BB53_19\n.BB53_74:\n\tadd\tr12, r0, stack-[4]\n\tsub.s!\t0, r5, r9\n\tjump.eq\t@.BB53_21\n\tshl.s\t5, r8, r8\n\tptr.add\tr7, r8, r7\n\tadd\tr6, r8, r8\n\tshl.s\t3, r5, r5\n\tld.1\tr8, r9\n\tshl\tr9, r5, r9\n\tshr\tr9, r5, r9\n\tld\tr7, r7\n\tsub\t256, r5, r5\n\tshr\tr7, r5, r7\n\tshl\tr7, r5, r5\n\tor\tr5, r9, r5\n\tst.1\tr8, r5\n.BB53_21:\n\tadd\tr4, r6, r5\n\tst.1\tr5, r0\n\tadd\tstack-[6], r0, r8\n\tadd\t128, r8, r5\n\tptr.add\tstack[@ptr_calldata], r5, r5\n\tld\tr5, r5\n\tadd\t228, r15, r7\n\tst.1\tr7, r5\n\tadd\t160, r8, r5\n\tptr.add\tstack[@ptr_calldata], r5, r5\n\tld\tr5, r5\n\tadd\t260, r15, r7\n\tst.1\tr7, r5\n\tadd\t192, r8, r5\n\tptr.add\tstack[@ptr_calldata], r5, r5\n\tld\tr5, r5\n\tadd\t292, r15, r7\n\tst.1\tr7, r5\n\tadd\t224, r8, r5\n\tptr.add\tstack[@ptr_calldata], r5, r5\n\tld\tr5, r5\n\tadd\t324, r15, r7\n\tst.1\tr7, r5\n\tadd\t356, r15, r5\n\tadd\t256, r8, r7\n\tptr.add\tstack[@ptr_calldata], r7, r7\n\tld\tr7, r7\n\tst.1\tr5, r7\n\tadd\t288, r8, r8\n\tadd\tstack[@calldatasize], r0, r7\n\tadd\tr7, r3, r9\n\tptr.add\tstack[@ptr_calldata], r0, r5\n\tptr.add\tr5, r8, r8\n\tld\tr8, r8\n\tadd\t@CPI53_9[0], r0, r10\n\tsub!\tr8, r9, r11\n\tadd\t0, r0, r11\n\tadd.ge\tr10, r0, r11\n\tand\t@CPI53_9[0], r9, r9\n\tand\t@CPI53_9[0], r8, r12\n\tsub!\tr12, r9, r13\n\tadd.ge\t0, r0, r10\n\txor\tr12, r9, r9\n\tsub.s!\t@CPI53_9[0], r9, r9\n\tadd\tr11, r0, r9\n\tadd.eq\tr10, r0, r9\n\tsub.s!\t0, r9, r9\n\tadd\tstack-[4], r0, r13\n\tjump.ne\t@.BB53_3\n\tadd\tstack-[6], r0, r9\n\tadd\tr8, r9, r8\n\tptr.add\tr5, r8, r5\n\tld\tr5, r5\n\tsub.s!\t@CPI53_10[0], r5, r9\n\tjump.gt\t@.BB53_3\n\tadd\t32, r8, r8\n\tsub\tr7, r5, r7\n\tadd\t@CPI53_9[0], r0, r9\n\tsub!\tr8, r7, r10\n\tadd\t0, r0, r10\n\tadd.gt\tr9, r0, r10\n\tand\t@CPI53_9[0], r7, r7\n\tand\t@CPI53_9[0], r8, r11\n\tsub!\tr11, r7, r12\n\tadd.ge\t0, r0, r9\n\txor\tr11, r7, r7\n\tsub.s!\t@CPI53_9[0], r7, r7\n\tadd\tr10, r0, r7\n\tadd.eq\tr9, r0, r7\n\tsub.s!\t0, r7, r7\n\tjump.ne\t@.BB53_3\n\tadd\t31, r4, r4\n\tand\tr4, r13, r4\n\tadd\tr4, r6, r4\n\tsub\tr4, r2, r6\n\tadd\t388, r15, r7\n\tst.1\tr7, r6\n\tand\t31, r5, r6\n\tst.1.inc\tr4, r5, r4\n\tptr.add\tstack[@ptr_calldata], r8, r7\n\tshr.s!\t5, r5, r8\n\tjump.eq\t@.BB53_73\n\tadd\tr0, r0, r9\n.BB53_26:\n\tshl.s\t5, r9, r10\n\tadd\tr4, r10, r11\n\tptr.add\tr7, r10, r10\n\tld\tr10, r10\n\tst.1\tr11, r10\n\tadd\t1, r9, r9\n\tsub!\tr9, r8, r10\n\tjump.lt\t@.BB53_26\n.BB53_73:\n\tsub.s!\t0, r6, r9\n\tjump.eq\t@.BB53_28\n\tshl.s\t5, r8, r8\n\tptr.add\tr7, r8, r7\n\tadd\tr4, r8, r8\n\tshl.s\t3, r6, r6\n\tld.1\tr8, r9\n\tshl\tr9, r6, r9\n\tshr\tr9, r6, r9\n\tld\tr7, r7\n\tsub\t256, r6, r6\n\tshr\tr7, r6, r7\n\tshl\tr7, r6, r6\n\tor\tr6, r9, r6\n\tst.1\tr8, r6\n.BB53_28:\n\tadd\tr5, r4, r6\n\tst.1\tr6, r0\n\tadd\tstack[@calldatasize], r0, r6\n\tadd\tr6, r3, r8\n\tadd\tstack-[6], r0, r3\n\tadd\t320, r3, r7\n\tptr.add\tstack[@ptr_calldata], r0, r3\n\tptr.add\tr3, r7, r7\n\tld\tr7, r7\n\tadd\t@CPI53_9[0], r0, r9\n\tsub!\tr7, r8, r10\n\tadd\t0, r0, r10\n\tadd.ge\tr9, r0, r10\n\tand\t@CPI53_9[0], r8, r8\n\tand\t@CPI53_9[0], r7, r11\n\tsub!\tr11, r8, r12\n\tadd.ge\t0, r0, r9\n\txor\tr11, r8, r8\n\tsub.s!\t@CPI53_9[0], r8, r8\n\tadd\tr10, r0, r8\n\tadd.eq\tr9, r0, r8\n\tsub.s!\t0, r8, r8\n\tjump.ne\t@.BB53_3\n\tadd\tstack-[6], r0, r8\n\tadd\tr7, r8, r7\n\tptr.add\tr3, r7, r3\n\tld\tr3, r3\n\tsub.s!\t@CPI53_10[0], r3, r8\n\tjump.gt\t@.BB53_3\n\tadd\t32, r7, r7\n\tsub\tr6, r3, r6\n\tadd\t@CPI53_9[0], r0, r8\n\tsub!\tr7, r6, r9\n\tadd\t0, r0, r9\n\tadd.gt\tr8, r0, r9\n\tand\t@CPI53_9[0], r6, r6\n\tand\t@CPI53_9[0], r7, r10\n\tsub!\tr10, r6, r11\n\tadd.ge\t0, r0, r8\n\txor\tr10, r6, r6\n\tsub.s!\t@CPI53_9[0], r6, r6\n\tadd\tr9, r0, r6\n\tadd.eq\tr8, r0, r6\n\tsub.s!\t0, r6, r6\n\tjump.ne\t@.BB53_3\n\tadd\t31, r5, r5\n\tand\tr5, r13, r5\n\tadd\tr5, r4, r5\n\tsub\tr5, r2, r2\n\tadd\t420, r15, r4\n\tst.1\tr4, r2\n\tand\t31, r3, r4\n\tst.1.inc\tr5, r3, r10\n\tptr.add\tstack[@ptr_calldata], r7, r5\n\tshr.s!\t5, r3, r6\n\tjump.eq\t@.BB53_72\n\tadd\tr0, r0, r7\n.BB53_33:\n\tshl.s\t5, r7, r8\n\tadd\tr10, r8, r9\n\tptr.add\tr5, r8, r8\n\tld\tr8, r8\n\tst.1\tr9, r8\n\tadd\t1, r7, r7\n\tsub!\tr7, r6, r8\n\tjump.lt\t@.BB53_33\n.BB53_72:\n\tsub.s!\t0, r4, r7\n\tjump.eq\t@.BB53_35\n\tshl.s\t5, r6, r6\n\tptr.add\tr5, r6, r5\n\tadd\tr10, r6, r6\n\tshl.s\t3, r4, r4\n\tld.1\tr6, r7\n\tshl\tr7, r4, r7\n\tshr\tr7, r4, r7\n\tld\tr5, r5\n\tsub\t256, r4, r4\n\tshr\tr5, r4, r5\n\tshl\tr5, r4, r4\n\tor\tr4, r7, r4\n\tst.1\tr6, r4\n.BB53_35:\n\tadd\tr3, r10, r4\n\tst.1\tr4, r0\n\tadd\t68, r15, r4\n\tadd\tstack-[5], r0, r2\n\tst.1\tr4, r2\n\tadd\t36, r15, r4\n\tst.1\tr4, r1\n\tadd\tstack-[3], r0, r2\n\tsub.s!\t4, r2, r1\n\tjump.ne\t@.BB53_37\n\tcontext.sp\tr4\n\tsub.s\t10, r4, r4\n\tmul\t32, r4, r4, r0\n\tcontext.sp\tr3\n\tsub.s\t9, r3, r3\n\tmul\t32, r3, r3, r0\n\tptr.add\tstack[@ptr_return_data], r0, r1\n\tadd\tstack[@returndatasize], r0, r5\n\tadd\t0, r0, stack-[9]\n\tadd\t0, r0, stack-[10]\n\tjump\t@.BB53_38\n.BB53_37:\n\tadd\t31, r3, r1\n\tand\tr1, r13, r1\n\tsub\tr10, r15, r3\n\tadd\tr3, r1, r1\n\tadd\t@CPI53_2[0], r0, r5\n\tsub.s!\t@CPI53_2[0], r1, r3\n\tadd.ge\tr5, r0, r1\n\tshl.s\t96, r1, r1\n\tsub.s!\t@CPI53_2[0], r15, r3\n\tadd\tr5, r0, r3\n\tadd.lt\tr15, r0, r3\n\tshl.s\t64, r3, r3\n\tor\tr1, r3, r1\n\tadd\tstack-[2], r0, r3\n\tadd\tstack-[1], r0, r4\n\tsub\tr4, r3, r3\n\tsub.s!\t@CPI53_2[0], r3, r4\n\tadd.ge\tr5, r0, r3\n\tshl.s\t192, r3, r3\n\tor\tr1, r3, r1\n\tadd\tr14, r0, stack-[6]\n\tadd\tr15, r0, stack-[5]\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tadd\tstack-[4], r0, r13\n\tadd\tstack-[5], r0, r15\n\tadd\tstack-[6], r0, r14\n\tcontext.sp\tr4\n\tsub.s\t8, r4, r4\n\tmul\t32, r4, r4, r0\n\tcontext.sp\tr3\n\tsub.s\t7, r3, r3\n\tmul\t32, r3, r3, r0\n\tadd\tr1, r0, r5\n\tshr.s\t96, r5, r5\n\tand\t@CPI53_2[0], r5, stack[@returndatasize]\n\tand\t@CPI53_2[0], r5, r5\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tadd\t0, r0, stack-[8]\n\tadd\t0, r0, stack-[7]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB53_55\n.BB53_38:\n\tand\t31, r5, r2\n\tshr.s!\t5, r5, r6\n\tjump.eq\t@.BB53_76\n\tadd\tr0, r0, r7\n.BB53_40:\n\tshl.s\t5, r7, r8\n\tadd\tr15, r8, r9\n\tptr.add\tr1, r8, r8\n\tld\tr8, r8\n\tst.1\tr9, r8\n\tadd\t1, r7, r7\n\tsub!\tr7, r6, r8\n\tjump.lt\t@.BB53_40\n.BB53_76:\n\tsub.s!\t0, r2, r7\n\tjump.eq\t@.BB53_42\n\tshl.s\t5, r6, r6\n\tptr.add\tr1, r6, r1\n\tadd\tr15, r6, r6\n\tshl.s\t3, r2, r2\n\tld.1\tr6, r7\n\tshl\tr7, r2, r7\n\tshr\tr7, r2, r7\n\tld\tr1, r1\n\tsub\t256, r2, r2\n\tshr\tr1, r2, r1\n\tshl\tr1, r2, r1\n\tor\tr1, r7, r1\n\tst.1\tr6, r1\n.BB53_42:\n\tadd\t31, r5, r1\n\tand\tr1, r13, r2\n\tadd\tr2, r15, r1\n\tsub!\tr1, r2, r2\n\tadd\t0, r0, r2\n\tadd.lt\t1, r0, r2\n\tsub.s!\t@CPI53_10[0], r1, r6\n\tjump.gt\t@.BB53_44\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB53_44\n\tadd\t@CPI53_9[0], r0, r2\n\tsub.s!\t64, r5, r6\n\tadd\t0, r0, r6\n\tadd.lt\tr2, r0, r6\n\tand\t@CPI53_9[0], r5, r7\n\tsub.s!\t0, r7, r8\n\tadd.le\t0, r0, r2\n\tsub.s!\t@CPI53_9[0], r7, r7\n\tadd.ne\tr6, r0, r2\n\tst.1\t64, r1\n\tsub.s!\t0, r2, r2\n\tjump.ne\t@.BB53_3\n\tld.1\tr15, r2\n\tsub.s!\t@CPI53_10[0], r2, r6\n\tjump.gt\t@.BB53_3\n\tadd\tr5, r15, r6\n\tadd\tr2, r15, r2\n\tadd\t31, r2, r5\n\tadd\t@CPI53_9[0], r0, r7\n\tsub!\tr5, r6, r8\n\tadd\t0, r0, r8\n\tadd.ge\tr7, r0, r8\n\tand\t@CPI53_9[0], r5, r5\n\tand\t@CPI53_9[0], r6, r9\n\tsub!\tr5, r9, r10\n\tadd.ge\t0, r0, r7\n\txor\tr5, r9, r5\n\tsub.s!\t@CPI53_9[0], r5, r5\n\tadd\tr8, r0, r5\n\tadd.eq\tr7, r0, r5\n\tsub.s!\t0, r5, r5\n\tjump.ne\t@.BB53_3\n\tld.1.inc\tr2, r2, r5\n\tsub.s!\t@CPI53_10[0], r2, r7\n\tjump.gt\t@.BB53_44\n\tadd\t63, r2, r7\n\tand\tr7, r13, r7\n\tadd\tr7, r1, r7\n\tsub.s!\t@CPI53_10[0], r7, r8\n\tjump.gt\t@.BB53_44\n\tst.1\t64, r7\n\tst.1.inc\tr1, r2, r7\n\tadd\tr2, r5, r8\n\tsub!\tr8, r6, r6\n\tjump.gt\t@.BB53_3\n\tsub.s!\t0, r2, r6\n\tjump.eq\t@.BB53_54\n\tadd\tr0, r0, r6\n.BB53_53:\n\tadd\tr6, r7, r8\n\tadd\tr6, r5, r9\n\tld.1\tr9, r9\n\tst.1\tr8, r9\n\tadd\t32, r6, r6\n\tsub!\tr6, r2, r8\n\tjump.lt\t@.BB53_53\n.BB53_54:\n\tadd\tr2, r7, r2\n\tst.1\tr2, r0\n\tld.1\tr14, r2\n\tdiv.s\t32, r4, r4, r0\n\tadd\tr1, r0, stack[r4]\n\tdiv.s\t32, r3, r3, r0\n\tadd\tr2, r0, stack[r3]\n\tret\n.BB53_3:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB53_1:\n\tld.1\t64, r1\n\tadd\t68, r1, r2\n\tadd\t@CPI53_0[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t31, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI53_1[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI53_2[0], r0, r2\n\tsub.s!\t@CPI53_2[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI53_3[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB53_5:\n\tld.1\t64, r2\n\tadd\tr2, r0, stack-[6]\n\tadd\t@CPI53_13[0], r0, r1\n\tst.1\tr2, r1\n\tadd\t4, r2, r1\n\tnear_call\tr0, @abi_encode_uint256_stringliteral_423a_36518, @DEFAULT_UNWIND\n\tadd\tstack-[6], r0, r4\n\tsub\tr1, r4, r1\n\tadd\t@CPI53_2[0], r0, r2\n\tsub.s!\t@CPI53_2[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tsub.s!\t@CPI53_2[0], r4, r3\n\tadd.lt\tr4, r0, r2\n\tshl.s\t64, r2, r2\n\tshl.s\t96, r1, r1\n\tor\tr1, r2, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB53_55:\n\tsub.s!\t4, r5, r2\n\tjump.lt\t@.BB53_70\n\tld.1\t0, r2\n\tand\t@CPI53_11[0], r2, r2\n\tld\tr1, r1\n\tand\t@CPI53_12[0], r1, r1\n\tor\tr1, r2, r1\n\tst.1\t0, r1\n\tand\t@CPI53_12[0], r1, r1\n\tsub.s!\t@CPI53_1[0], r1, r1\n\tjump.ne\t@.BB53_70\n\tadd\tstack[@returndatasize], r0, r3\n\tsub.s!\t68, r3, r1\n\tjump.lt\t@.BB53_70\n\tld.1\t64, r2\n\tadd\t4, r0, r1\n\tptr.add\tstack[@ptr_return_data], r1, r1\n\tsub.s\t4, r3, r4\n\tand\t31, r4, r3\n\tshr.s!\t5, r4, r4\n\tjump.eq\t@.BB53_71\n\tadd\tr0, r0, r5\n.BB53_60:\n\tshl.s\t5, r5, r6\n\tadd\tr2, r6, r7\n\tptr.add\tr1, r6, r6\n\tld\tr6, r6\n\tst.1\tr7, r6\n\tadd\t1, r5, r5\n\tsub!\tr5, r4, r6\n\tjump.lt\t@.BB53_60\n.BB53_71:\n\tsub.s!\t0, r3, r5\n\tjump.eq\t@.BB53_62\n\tshl.s\t5, r4, r4\n\tptr.add\tr1, r4, r1\n\tadd\tr2, r4, r4\n\tshl.s\t3, r3, r3\n\tld.1\tr4, r5\n\tshl\tr5, r3, r5\n\tshr\tr5, r3, r5\n\tld\tr1, r1\n\tsub\t256, r3, r3\n\tshr\tr1, r3, r1\n\tshl\tr1, r3, r1\n\tor\tr1, r5, r1\n\tst.1\tr4, r1\n.BB53_62:\n\tadd\tstack[@returndatasize], r0, r4\n\tld.1\tr2, r3\n\tsub.s!\t@CPI53_10[0], r3, r1\n\tjump.gt\t@.BB53_70\n\tadd\t36, r3, r1\n\tsub!\tr1, r4, r1\n\tjump.gt\t@.BB53_70\n\tadd\tr3, r2, r1\n\tld.1\tr1, r5\n\tsub.s!\t@CPI53_10[0], r5, r6\n\tjump.gt\t@.BB53_70\n\tadd\tr1, r5, r6\n\tadd\tr2, r4, r4\n\tsub.s\t4, r4, r4\n\tadd\t32, r6, r6\n\tsub!\tr6, r4, r4\n\tjump.le\t@.BB53_66\n.BB53_70:\n\tld.1\t64, r2\n\tadd\tr2, r0, stack-[6]\n\tadd\t@CPI53_13[0], r0, r1\n\tst.1\tr2, r1\n\tadd\t4, r2, r1\n\tnear_call\tr0, @abi_encode_uint256_stringliteral_b1ed_36520, @DEFAULT_UNWIND\n\tadd\tstack-[6], r0, r4\n\tsub\tr1, r4, r1\n\tadd\t@CPI53_2[0], r0, r2\n\tsub.s!\t@CPI53_2[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tsub.s!\t@CPI53_2[0], r4, r3\n\tadd.lt\tr4, r0, r2\n\tshl.s\t64, r2, r2\n\tshl.s\t96, r1, r1\n\tor\tr1, r2, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB53_66:\n\tadd\tr3, r5, r3\n\tadd\t63, r3, r3\n\tadd\tstack-[4], r0, r4\n\tand\tr3, r4, r3\n\tadd\tr3, r2, r2\n\tsub!\tr2, r3, r3\n\tadd\t0, r0, r3\n\tadd.lt\t1, r0, r3\n\tsub.s!\t@CPI53_10[0], r2, r4\n\tjump.gt\t@.BB53_44\n\tand!\t1, r3, r3\n\tjump.ne\t@.BB53_44\n\tst.1\t64, r2\n\tsub.s!\t0, r1, r2\n\tjump.eq\t@.BB53_70\n\tnear_call\tr0, @string_concat_stringliteral_d505_string, @DEFAULT_UNWIND\n\tadd\t@CPI53_13[0], r0, r2\n\tld.1\t64, r3\n\tadd\tr3, r0, stack-[6]\n\tst.1\tr3, r2\n\tadd\tr1, r0, r2\n\tadd\t4, r3, r1\n\tnear_call\tr0, @abi_encode_uint256_bytes_29546, @DEFAULT_UNWIND\n\tadd\tstack-[6], r0, r4\n\tsub\tr1, r4, r1\n\tadd\t@CPI53_2[0], r0, r2\n\tsub.s!\t@CPI53_2[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tsub.s!\t@CPI53_2[0], r4, r3\n\tadd.lt\tr4, r0, r2\n\tshl.s\t64, r2, r2\n\tshl.s\t96, r1, r1\n\tor\tr1, r2, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB53_44:\n\tadd\t@CPI53_14[0], r0, r1\n\tst.1\t0, r1\n\tadd\t65, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI53_15[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end53:\n\nfun_validatePaymasterPrepayment:\n.func_begin54:\n\tnop\tstack+=[11]\n\tadd\tr4, r0, stack-[6]\n\tadd\tr2, r0, stack-[7]\n\tadd\tr1, r0, stack-[1]\n\tld.1.inc\tr3, r1, r2\n\tadd\tr2, r0, stack-[5]\n\tadd\t96, r1, r2\n\tld.1\tr2, r2\n\tadd\tr5, r0, stack-[3]\n\tadd\tr2, r0, stack-[2]\n\tsub!\tr2, r5, r2\n\tjump.le\t@.BB54_1\n\tadd\t160, r1, r1\n\tld.1\tr1, r1\n\tand\t@CPI54_4[0], r1, r1\n\tadd\tr1, r0, stack-[4]\n\tst.1\t0, r1\n\tst.1\t32, r0\n\tadd\t@CPI54_2[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI54_2[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI54_5[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB54_3\n\tld\tr1, r1\n\tsload\tr1, r2\n\tand\t@CPI54_6[0], r2, r3\n\tadd\tstack-[6], r0, r4\n\tsub!\tr3, r4, r3\n\tjump.lt\t@.BB54_5\n\tsub\tr2, r4, r3\n\tand\t@CPI54_6[0], r3, r3\n\tand\t@CPI54_7[0], r2, r2\n\tor\tr3, r2, r2\n\tsstore\tr1, r2\n\tadd\tstack-[5], r0, r1\n\tld.1\tr1, r1\n\tld.1\t64, r15\n\tadd\t@CPI54_8[0], r0, r2\n\tst.1.inc\tr15, r2, r14\n\tadd\t4, r15, r2\n\tadd\t96, r0, r3\n\tst.1\tr2, r3\n\tadd\tstack-[7], r0, r2\n\tptr.add\tstack[@ptr_calldata], r2, r2\n\tld\tr2, r3\n\tsub.s!\t@CPI54_4[0], r3, r2\n\tjump.gt\t@.BB54_3\n\tadd\t100, r15, r2\n\tst.1\tr2, r3\n\tadd\tstack-[7], r0, r5\n\tadd\t32, r5, r3\n\tptr.add\tstack[@ptr_calldata], r3, r3\n\tld\tr3, r3\n\tadd\t132, r15, r4\n\tst.1\tr4, r3\n\tsub.s\t31, r0, r3\n\tsub\tr3, r5, r3\n\tadd\t64, r5, r4\n\tptr.add\tstack[@ptr_calldata], r0, r5\n\tptr.add\tr5, r4, r4\n\tld\tr4, r6\n\tadd\tstack[@calldatasize], r0, r4\n\tadd\tr4, r3, r7\n\tadd\t@CPI54_9[0], r0, r8\n\tsub!\tr6, r7, r9\n\tadd\t0, r0, r9\n\tadd.ge\tr8, r0, r9\n\tand\t@CPI54_9[0], r7, r7\n\tand\t@CPI54_9[0], r6, r10\n\tsub!\tr10, r7, r11\n\tadd.ge\t0, r0, r8\n\txor\tr10, r7, r7\n\tsub.s!\t@CPI54_9[0], r7, r7\n\tadd\tr9, r0, r7\n\tadd.eq\tr8, r0, r7\n\tsub.s!\t0, r7, r7\n\tjump.ne\t@.BB54_3\n\tadd\tstack-[7], r0, r7\n\tadd\tr6, r7, r6\n\tptr.add\tr5, r6, r5\n\tld\tr5, r5\n\tsub.s!\t@CPI54_10[0], r5, r7\n\tjump.gt\t@.BB54_3\n\tadd\t32, r6, r7\n\tsub\tr4, r5, r4\n\tadd\t@CPI54_9[0], r0, r6\n\tsub!\tr7, r4, r8\n\tadd\t0, r0, r8\n\tadd.gt\tr6, r0, r8\n\tand\t@CPI54_9[0], r4, r4\n\tand\t@CPI54_9[0], r7, r9\n\tsub!\tr9, r4, r10\n\tadd.ge\t0, r0, r6\n\txor\tr9, r4, r4\n\tsub.s!\t@CPI54_9[0], r4, r4\n\tadd\tr8, r0, r4\n\tadd.eq\tr6, r0, r4\n\tsub.s!\t0, r4, r4\n\tjump.ne\t@.BB54_3\n\tadd\t164, r15, r4\n\tadd\t352, r0, r6\n\tst.1\tr4, r6\n\tadd\t452, r15, r4\n\tst.1\tr4, r5\n\tand\t31, r5, r4\n\tadd\t484, r15, r6\n\tptr.add\tstack[@ptr_calldata], r7, r7\n\tshr.s!\t5, r5, r8\n\tjump.eq\t@.BB54_75\n\tadd\tr0, r0, r9\n.BB54_12:\n\tshl.s\t5, r9, r10\n\tadd\tr6, r10, r11\n\tptr.add\tr7, r10, r10\n\tld\tr10, r10\n\tst.1\tr11, r10\n\tadd\t1, r9, r9\n\tsub!\tr9, r8, r10\n\tjump.lt\t@.BB54_12\n.BB54_75:\n\tsub.s!\t0, r4, r9\n\tjump.eq\t@.BB54_14\n\tshl.s\t5, r8, r8\n\tptr.add\tr7, r8, r7\n\tadd\tr6, r8, r8\n\tshl.s\t3, r4, r4\n\tld.1\tr8, r9\n\tshl\tr9, r4, r9\n\tshr\tr9, r4, r9\n\tld\tr7, r7\n\tsub\t256, r4, r4\n\tshr\tr7, r4, r7\n\tshl\tr7, r4, r4\n\tor\tr4, r9, r4\n\tst.1\tr8, r4\n.BB54_14:\n\tadd\tr5, r6, r4\n\tst.1\tr4, r0\n\tadd\tstack[@calldatasize], r0, r7\n\tadd\tr7, r3, r9\n\tadd\tstack-[7], r0, r4\n\tadd\t96, r4, r8\n\tptr.add\tstack[@ptr_calldata], r0, r4\n\tptr.add\tr4, r8, r8\n\tld\tr8, r8\n\tadd\t@CPI54_9[0], r0, r10\n\tsub!\tr8, r9, r11\n\tadd\t0, r0, r11\n\tadd.ge\tr10, r0, r11\n\tand\t@CPI54_9[0], r9, r9\n\tand\t@CPI54_9[0], r8, r12\n\tsub!\tr12, r9, r13\n\tadd.ge\t0, r0, r10\n\txor\tr12, r9, r9\n\tsub.s!\t@CPI54_9[0], r9, r9\n\tadd\tr11, r0, r9\n\tadd.eq\tr10, r0, r9\n\tsub.s!\t0, r9, r9\n\tjump.ne\t@.BB54_3\n\tadd\tstack-[7], r0, r9\n\tadd\tr8, r9, r8\n\tptr.add\tr4, r8, r4\n\tld\tr4, r4\n\tsub.s!\t@CPI54_10[0], r4, r9\n\tjump.gt\t@.BB54_3\n\tadd\t32, r8, r8\n\tsub\tr7, r4, r7\n\tadd\t@CPI54_9[0], r0, r9\n\tsub!\tr8, r7, r10\n\tadd\t0, r0, r10\n\tadd.gt\tr9, r0, r10\n\tand\t@CPI54_9[0], r7, r7\n\tand\t@CPI54_9[0], r8, r11\n\tsub!\tr11, r7, r12\n\tadd.ge\t0, r0, r9\n\txor\tr11, r7, r7\n\tsub.s!\t@CPI54_9[0], r7, r7\n\tadd\tr10, r0, r7\n\tadd.eq\tr9, r0, r7\n\tsub.s!\t0, r7, r7\n\tjump.ne\t@.BB54_3\n\tadd\t31, r5, r5\n\tsub.s\t32, r0, r12\n\tand\tr5, r12, r5\n\tadd\tr5, r6, r6\n\tsub\tr6, r2, r5\n\tadd\t196, r15, r7\n\tst.1\tr7, r5\n\tand\t31, r4, r5\n\tst.1.inc\tr6, r4, r6\n\tptr.add\tstack[@ptr_calldata], r8, r7\n\tshr.s!\t5, r4, r8\n\tjump.eq\t@.BB54_74\n\tadd\tr0, r0, r9\n.BB54_19:\n\tshl.s\t5, r9, r10\n\tadd\tr6, r10, r11\n\tptr.add\tr7, r10, r10\n\tld\tr10, r10\n\tst.1\tr11, r10\n\tadd\t1, r9, r9\n\tsub!\tr9, r8, r10\n\tjump.lt\t@.BB54_19\n.BB54_74:\n\tadd\tr12, r0, stack-[5]\n\tsub.s!\t0, r5, r9\n\tjump.eq\t@.BB54_21\n\tshl.s\t5, r8, r8\n\tptr.add\tr7, r8, r7\n\tadd\tr6, r8, r8\n\tshl.s\t3, r5, r5\n\tld.1\tr8, r9\n\tshl\tr9, r5, r9\n\tshr\tr9, r5, r9\n\tld\tr7, r7\n\tsub\t256, r5, r5\n\tshr\tr7, r5, r7\n\tshl\tr7, r5, r5\n\tor\tr5, r9, r5\n\tst.1\tr8, r5\n.BB54_21:\n\tadd\tr4, r6, r5\n\tst.1\tr5, r0\n\tadd\tstack-[7], r0, r8\n\tadd\t128, r8, r5\n\tptr.add\tstack[@ptr_calldata], r5, r5\n\tld\tr5, r5\n\tadd\t228, r15, r7\n\tst.1\tr7, r5\n\tadd\t160, r8, r5\n\tptr.add\tstack[@ptr_calldata], r5, r5\n\tld\tr5, r5\n\tadd\t260, r15, r7\n\tst.1\tr7, r5\n\tadd\t192, r8, r5\n\tptr.add\tstack[@ptr_calldata], r5, r5\n\tld\tr5, r5\n\tadd\t292, r15, r7\n\tst.1\tr7, r5\n\tadd\t224, r8, r5\n\tptr.add\tstack[@ptr_calldata], r5, r5\n\tld\tr5, r5\n\tadd\t324, r15, r7\n\tst.1\tr7, r5\n\tadd\t356, r15, r5\n\tadd\t256, r8, r7\n\tptr.add\tstack[@ptr_calldata], r7, r7\n\tld\tr7, r7\n\tst.1\tr5, r7\n\tadd\t288, r8, r8\n\tadd\tstack[@calldatasize], r0, r7\n\tadd\tr7, r3, r9\n\tptr.add\tstack[@ptr_calldata], r0, r5\n\tptr.add\tr5, r8, r8\n\tld\tr8, r8\n\tadd\t@CPI54_9[0], r0, r10\n\tsub!\tr8, r9, r11\n\tadd\t0, r0, r11\n\tadd.ge\tr10, r0, r11\n\tand\t@CPI54_9[0], r9, r9\n\tand\t@CPI54_9[0], r8, r12\n\tsub!\tr12, r9, r13\n\tadd.ge\t0, r0, r10\n\txor\tr12, r9, r9\n\tsub.s!\t@CPI54_9[0], r9, r9\n\tadd\tr11, r0, r9\n\tadd.eq\tr10, r0, r9\n\tsub.s!\t0, r9, r9\n\tadd\tstack-[5], r0, r13\n\tjump.ne\t@.BB54_3\n\tadd\tstack-[7], r0, r9\n\tadd\tr8, r9, r8\n\tptr.add\tr5, r8, r5\n\tld\tr5, r5\n\tsub.s!\t@CPI54_10[0], r5, r9\n\tjump.gt\t@.BB54_3\n\tadd\t32, r8, r8\n\tsub\tr7, r5, r7\n\tadd\t@CPI54_9[0], r0, r9\n\tsub!\tr8, r7, r10\n\tadd\t0, r0, r10\n\tadd.gt\tr9, r0, r10\n\tand\t@CPI54_9[0], r7, r7\n\tand\t@CPI54_9[0], r8, r11\n\tsub!\tr11, r7, r12\n\tadd.ge\t0, r0, r9\n\txor\tr11, r7, r7\n\tsub.s!\t@CPI54_9[0], r7, r7\n\tadd\tr10, r0, r7\n\tadd.eq\tr9, r0, r7\n\tsub.s!\t0, r7, r7\n\tjump.ne\t@.BB54_3\n\tadd\t31, r4, r4\n\tand\tr4, r13, r4\n\tadd\tr4, r6, r4\n\tsub\tr4, r2, r6\n\tadd\t388, r15, r7\n\tst.1\tr7, r6\n\tand\t31, r5, r6\n\tst.1.inc\tr4, r5, r4\n\tptr.add\tstack[@ptr_calldata], r8, r7\n\tshr.s!\t5, r5, r8\n\tjump.eq\t@.BB54_73\n\tadd\tr0, r0, r9\n.BB54_26:\n\tshl.s\t5, r9, r10\n\tadd\tr4, r10, r11\n\tptr.add\tr7, r10, r10\n\tld\tr10, r10\n\tst.1\tr11, r10\n\tadd\t1, r9, r9\n\tsub!\tr9, r8, r10\n\tjump.lt\t@.BB54_26\n.BB54_73:\n\tsub.s!\t0, r6, r9\n\tjump.eq\t@.BB54_28\n\tshl.s\t5, r8, r8\n\tptr.add\tr7, r8, r7\n\tadd\tr4, r8, r8\n\tshl.s\t3, r6, r6\n\tld.1\tr8, r9\n\tshl\tr9, r6, r9\n\tshr\tr9, r6, r9\n\tld\tr7, r7\n\tsub\t256, r6, r6\n\tshr\tr7, r6, r7\n\tshl\tr7, r6, r6\n\tor\tr6, r9, r6\n\tst.1\tr8, r6\n.BB54_28:\n\tadd\tr5, r4, r6\n\tst.1\tr6, r0\n\tadd\tstack[@calldatasize], r0, r6\n\tadd\tr6, r3, r8\n\tadd\tstack-[7], r0, r3\n\tadd\t320, r3, r7\n\tptr.add\tstack[@ptr_calldata], r0, r3\n\tptr.add\tr3, r7, r7\n\tld\tr7, r7\n\tadd\t@CPI54_9[0], r0, r9\n\tsub!\tr7, r8, r10\n\tadd\t0, r0, r10\n\tadd.ge\tr9, r0, r10\n\tand\t@CPI54_9[0], r8, r8\n\tand\t@CPI54_9[0], r7, r11\n\tsub!\tr11, r8, r12\n\tadd.ge\t0, r0, r9\n\txor\tr11, r8, r8\n\tsub.s!\t@CPI54_9[0], r8, r8\n\tadd\tr10, r0, r8\n\tadd.eq\tr9, r0, r8\n\tsub.s!\t0, r8, r8\n\tjump.ne\t@.BB54_3\n\tadd\tstack-[7], r0, r8\n\tadd\tr7, r8, r7\n\tptr.add\tr3, r7, r3\n\tld\tr3, r3\n\tsub.s!\t@CPI54_10[0], r3, r8\n\tjump.gt\t@.BB54_3\n\tadd\t32, r7, r7\n\tsub\tr6, r3, r6\n\tadd\t@CPI54_9[0], r0, r8\n\tsub!\tr7, r6, r9\n\tadd\t0, r0, r9\n\tadd.gt\tr8, r0, r9\n\tand\t@CPI54_9[0], r6, r6\n\tand\t@CPI54_9[0], r7, r10\n\tsub!\tr10, r6, r11\n\tadd.ge\t0, r0, r8\n\txor\tr10, r6, r6\n\tsub.s!\t@CPI54_9[0], r6, r6\n\tadd\tr9, r0, r6\n\tadd.eq\tr8, r0, r6\n\tsub.s!\t0, r6, r6\n\tjump.ne\t@.BB54_3\n\tadd\t31, r5, r5\n\tand\tr5, r13, r5\n\tadd\tr5, r4, r5\n\tsub\tr5, r2, r2\n\tadd\t420, r15, r4\n\tst.1\tr4, r2\n\tand\t31, r3, r4\n\tst.1.inc\tr5, r3, r10\n\tptr.add\tstack[@ptr_calldata], r7, r5\n\tshr.s!\t5, r3, r6\n\tjump.eq\t@.BB54_72\n\tadd\tr0, r0, r7\n.BB54_33:\n\tshl.s\t5, r7, r8\n\tadd\tr10, r8, r9\n\tptr.add\tr5, r8, r8\n\tld\tr8, r8\n\tst.1\tr9, r8\n\tadd\t1, r7, r7\n\tsub!\tr7, r6, r8\n\tjump.lt\t@.BB54_33\n.BB54_72:\n\tsub.s!\t0, r4, r7\n\tjump.eq\t@.BB54_35\n\tshl.s\t5, r6, r6\n\tptr.add\tr5, r6, r5\n\tadd\tr10, r6, r6\n\tshl.s\t3, r4, r4\n\tld.1\tr6, r7\n\tshl\tr7, r4, r7\n\tshr\tr7, r4, r7\n\tld\tr5, r5\n\tsub\t256, r4, r4\n\tshr\tr5, r4, r5\n\tshl\tr5, r4, r4\n\tor\tr4, r7, r4\n\tst.1\tr6, r4\n.BB54_35:\n\tadd\tr3, r10, r4\n\tst.1\tr4, r0\n\tadd\t68, r15, r4\n\tadd\tstack-[6], r0, r2\n\tst.1\tr4, r2\n\tadd\t36, r15, r4\n\tst.1\tr4, r1\n\tadd\tstack-[4], r0, r2\n\tsub.s!\t4, r2, r1\n\tjump.ne\t@.BB54_37\n\tcontext.sp\tr4\n\tsub.s\t11, r4, r4\n\tmul\t32, r4, r4, r0\n\tcontext.sp\tr3\n\tsub.s\t10, r3, r3\n\tmul\t32, r3, r3, r0\n\tptr.add\tstack[@ptr_return_data], r0, r1\n\tadd\tstack[@returndatasize], r0, r5\n\tadd\t0, r0, stack-[10]\n\tadd\t0, r0, stack-[11]\n\tjump\t@.BB54_38\n.BB54_37:\n\tadd\t31, r3, r1\n\tand\tr1, r13, r1\n\tsub\tr10, r15, r3\n\tadd\tr3, r1, r1\n\tadd\t@CPI54_2[0], r0, r5\n\tsub.s!\t@CPI54_2[0], r1, r3\n\tadd.ge\tr5, r0, r1\n\tshl.s\t96, r1, r1\n\tsub.s!\t@CPI54_2[0], r15, r3\n\tadd\tr5, r0, r3\n\tadd.lt\tr15, r0, r3\n\tshl.s\t64, r3, r3\n\tor\tr1, r3, r1\n\tadd\tstack-[3], r0, r3\n\tadd\tstack-[2], r0, r4\n\tsub\tr4, r3, r3\n\tsub.s!\t@CPI54_2[0], r3, r4\n\tadd.ge\tr5, r0, r3\n\tshl.s\t192, r3, r3\n\tor\tr1, r3, r1\n\tadd\tr14, r0, stack-[7]\n\tadd\tr15, r0, stack-[6]\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tadd\tstack-[5], r0, r13\n\tadd\tstack-[6], r0, r15\n\tadd\tstack-[7], r0, r14\n\tcontext.sp\tr4\n\tsub.s\t9, r4, r4\n\tmul\t32, r4, r4, r0\n\tcontext.sp\tr3\n\tsub.s\t8, r3, r3\n\tmul\t32, r3, r3, r0\n\tadd\tr1, r0, r5\n\tshr.s\t96, r5, r5\n\tand\t@CPI54_2[0], r5, stack[@returndatasize]\n\tand\t@CPI54_2[0], r5, r5\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tadd\t0, r0, stack-[9]\n\tadd\t0, r0, stack-[8]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB54_55\n.BB54_38:\n\tand\t31, r5, r2\n\tshr.s!\t5, r5, r6\n\tjump.eq\t@.BB54_76\n\tadd\tr0, r0, r7\n.BB54_40:\n\tshl.s\t5, r7, r8\n\tadd\tr15, r8, r9\n\tptr.add\tr1, r8, r8\n\tld\tr8, r8\n\tst.1\tr9, r8\n\tadd\t1, r7, r7\n\tsub!\tr7, r6, r8\n\tjump.lt\t@.BB54_40\n.BB54_76:\n\tsub.s!\t0, r2, r7\n\tjump.eq\t@.BB54_42\n\tshl.s\t5, r6, r6\n\tptr.add\tr1, r6, r1\n\tadd\tr15, r6, r6\n\tshl.s\t3, r2, r2\n\tld.1\tr6, r7\n\tshl\tr7, r2, r7\n\tshr\tr7, r2, r7\n\tld\tr1, r1\n\tsub\t256, r2, r2\n\tshr\tr1, r2, r1\n\tshl\tr1, r2, r1\n\tor\tr1, r7, r1\n\tst.1\tr6, r1\n.BB54_42:\n\tadd\t31, r5, r1\n\tand\tr1, r13, r2\n\tadd\tr2, r15, r1\n\tsub!\tr1, r2, r2\n\tadd\t0, r0, r2\n\tadd.lt\t1, r0, r2\n\tsub.s!\t@CPI54_10[0], r1, r6\n\tjump.gt\t@.BB54_44\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB54_44\n\tadd\t@CPI54_9[0], r0, r2\n\tsub.s!\t64, r5, r6\n\tadd\t0, r0, r6\n\tadd.lt\tr2, r0, r6\n\tand\t@CPI54_9[0], r5, r7\n\tsub.s!\t0, r7, r8\n\tadd.le\t0, r0, r2\n\tsub.s!\t@CPI54_9[0], r7, r7\n\tadd.ne\tr6, r0, r2\n\tst.1\t64, r1\n\tsub.s!\t0, r2, r2\n\tjump.ne\t@.BB54_3\n\tld.1\tr15, r2\n\tsub.s!\t@CPI54_10[0], r2, r6\n\tjump.gt\t@.BB54_3\n\tadd\tr5, r15, r6\n\tadd\tr2, r15, r2\n\tadd\t31, r2, r5\n\tadd\t@CPI54_9[0], r0, r7\n\tsub!\tr5, r6, r8\n\tadd\t0, r0, r8\n\tadd.ge\tr7, r0, r8\n\tand\t@CPI54_9[0], r5, r5\n\tand\t@CPI54_9[0], r6, r9\n\tsub!\tr5, r9, r10\n\tadd.ge\t0, r0, r7\n\txor\tr5, r9, r5\n\tsub.s!\t@CPI54_9[0], r5, r5\n\tadd\tr8, r0, r5\n\tadd.eq\tr7, r0, r5\n\tsub.s!\t0, r5, r5\n\tjump.ne\t@.BB54_3\n\tld.1.inc\tr2, r2, r5\n\tsub.s!\t@CPI54_10[0], r2, r7\n\tjump.gt\t@.BB54_44\n\tadd\t63, r2, r7\n\tand\tr7, r13, r7\n\tadd\tr7, r1, r7\n\tsub.s!\t@CPI54_10[0], r7, r8\n\tjump.gt\t@.BB54_44\n\tst.1\t64, r7\n\tst.1.inc\tr1, r2, r7\n\tadd\tr2, r5, r8\n\tsub!\tr8, r6, r6\n\tjump.gt\t@.BB54_3\n\tsub.s!\t0, r2, r6\n\tjump.eq\t@.BB54_54\n\tadd\tr0, r0, r6\n.BB54_53:\n\tadd\tr6, r7, r8\n\tadd\tr6, r5, r9\n\tld.1\tr9, r9\n\tst.1\tr8, r9\n\tadd\t32, r6, r6\n\tsub!\tr6, r2, r8\n\tjump.lt\t@.BB54_53\n.BB54_54:\n\tadd\tr2, r7, r2\n\tst.1\tr2, r0\n\tld.1\tr14, r2\n\tdiv.s\t32, r4, r4, r0\n\tadd\tr1, r0, stack[r4]\n\tdiv.s\t32, r3, r3, r0\n\tadd\tr2, r0, stack[r3]\n\tret\n.BB54_3:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB54_1:\n\tld.1\t64, r1\n\tadd\t68, r1, r2\n\tadd\t@CPI54_0[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t31, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI54_1[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI54_2[0], r0, r2\n\tsub.s!\t@CPI54_2[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI54_3[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB54_5:\n\tld.1\t64, r2\n\tadd\tr2, r0, stack-[7]\n\tadd\t@CPI54_13[0], r0, r1\n\tst.1\tr2, r1\n\tadd\t4, r2, r1\n\tadd\tstack-[1], r0, r2\n\tnear_call\tr0, @abi_encode_uint256_stringliteral_423a, @DEFAULT_UNWIND\n\tadd\tstack-[7], r0, r4\n\tsub\tr1, r4, r1\n\tadd\t@CPI54_2[0], r0, r2\n\tsub.s!\t@CPI54_2[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tsub.s!\t@CPI54_2[0], r4, r3\n\tadd.lt\tr4, r0, r2\n\tshl.s\t64, r2, r2\n\tshl.s\t96, r1, r1\n\tor\tr1, r2, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB54_55:\n\tsub.s!\t4, r5, r2\n\tjump.lt\t@.BB54_70\n\tld.1\t0, r2\n\tand\t@CPI54_11[0], r2, r2\n\tld\tr1, r1\n\tand\t@CPI54_12[0], r1, r1\n\tor\tr1, r2, r1\n\tst.1\t0, r1\n\tand\t@CPI54_12[0], r1, r1\n\tsub.s!\t@CPI54_1[0], r1, r1\n\tjump.ne\t@.BB54_70\n\tadd\tstack[@returndatasize], r0, r3\n\tsub.s!\t68, r3, r1\n\tjump.lt\t@.BB54_70\n\tld.1\t64, r2\n\tadd\t4, r0, r1\n\tptr.add\tstack[@ptr_return_data], r1, r1\n\tsub.s\t4, r3, r4\n\tand\t31, r4, r3\n\tshr.s!\t5, r4, r4\n\tjump.eq\t@.BB54_71\n\tadd\tr0, r0, r5\n.BB54_60:\n\tshl.s\t5, r5, r6\n\tadd\tr2, r6, r7\n\tptr.add\tr1, r6, r6\n\tld\tr6, r6\n\tst.1\tr7, r6\n\tadd\t1, r5, r5\n\tsub!\tr5, r4, r6\n\tjump.lt\t@.BB54_60\n.BB54_71:\n\tsub.s!\t0, r3, r5\n\tjump.eq\t@.BB54_62\n\tshl.s\t5, r4, r4\n\tptr.add\tr1, r4, r1\n\tadd\tr2, r4, r4\n\tshl.s\t3, r3, r3\n\tld.1\tr4, r5\n\tshl\tr5, r3, r5\n\tshr\tr5, r3, r5\n\tld\tr1, r1\n\tsub\t256, r3, r3\n\tshr\tr1, r3, r1\n\tshl\tr1, r3, r1\n\tor\tr1, r5, r1\n\tst.1\tr4, r1\n.BB54_62:\n\tadd\tstack[@returndatasize], r0, r4\n\tld.1\tr2, r3\n\tsub.s!\t@CPI54_10[0], r3, r1\n\tjump.gt\t@.BB54_70\n\tadd\t36, r3, r1\n\tsub!\tr1, r4, r1\n\tjump.gt\t@.BB54_70\n\tadd\tr3, r2, r1\n\tld.1\tr1, r5\n\tsub.s!\t@CPI54_10[0], r5, r6\n\tjump.gt\t@.BB54_70\n\tadd\tr1, r5, r6\n\tadd\tr2, r4, r4\n\tsub.s\t4, r4, r4\n\tadd\t32, r6, r6\n\tsub!\tr6, r4, r4\n\tjump.le\t@.BB54_66\n.BB54_70:\n\tld.1\t64, r2\n\tadd\tr2, r0, stack-[7]\n\tadd\t@CPI54_13[0], r0, r1\n\tst.1\tr2, r1\n\tadd\t4, r2, r1\n\tadd\tstack-[1], r0, r2\n\tnear_call\tr0, @abi_encode_uint256_stringliteral_b1ed, @DEFAULT_UNWIND\n\tadd\tstack-[7], r0, r4\n\tsub\tr1, r4, r1\n\tadd\t@CPI54_2[0], r0, r2\n\tsub.s!\t@CPI54_2[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tsub.s!\t@CPI54_2[0], r4, r3\n\tadd.lt\tr4, r0, r2\n\tshl.s\t64, r2, r2\n\tshl.s\t96, r1, r1\n\tor\tr1, r2, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB54_66:\n\tadd\tr3, r5, r3\n\tadd\t63, r3, r3\n\tadd\tstack-[5], r0, r4\n\tand\tr3, r4, r3\n\tadd\tr3, r2, r2\n\tsub!\tr2, r3, r3\n\tadd\t0, r0, r3\n\tadd.lt\t1, r0, r3\n\tsub.s!\t@CPI54_10[0], r2, r4\n\tjump.gt\t@.BB54_44\n\tand!\t1, r3, r3\n\tjump.ne\t@.BB54_44\n\tst.1\t64, r2\n\tsub.s!\t0, r1, r2\n\tjump.eq\t@.BB54_70\n\tnear_call\tr0, @string_concat_stringliteral_d505_string, @DEFAULT_UNWIND\n\tadd\t@CPI54_13[0], r0, r2\n\tld.1\t64, r4\n\tadd\tr4, r0, stack-[7]\n\tst.1\tr4, r2\n\tadd\tr1, r0, r3\n\tadd\t4, r4, r1\n\tadd\tstack-[1], r0, r2\n\tnear_call\tr0, @abi_encode_uint256_bytes, @DEFAULT_UNWIND\n\tadd\tstack-[7], r0, r4\n\tsub\tr1, r4, r1\n\tadd\t@CPI54_2[0], r0, r2\n\tsub.s!\t@CPI54_2[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tsub.s!\t@CPI54_2[0], r4, r3\n\tadd.lt\tr4, r0, r2\n\tshl.s\t64, r2, r2\n\tshl.s\t96, r1, r1\n\tor\tr1, r2, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB54_44:\n\tadd\t@CPI54_14[0], r0, r1\n\tst.1\t0, r1\n\tadd\t65, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI54_15[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end54:\n\nstring_concat_stringliteral_89cf_string:\n.func_begin55:\n\tadd\tr1, r0, r2\n\tld.1\t64, r1\n\tadd\t32, r1, r3\n\tadd\t@CPI55_0[0], r0, r4\n\tst.1\tr3, r4\n\tadd\t54, r1, r4\n\tld.1\tr2, r3\n\tsub.s!\t0, r3, r5\n\tjump.eq\t@.BB55_3\n\tadd\tr0, r0, r5\n.BB55_2:\n\tadd\tr5, r4, r6\n\tadd\t32, r5, r5\n\tadd\tr5, r2, r7\n\tld.1\tr7, r7\n\tst.1\tr6, r7\n\tsub!\tr5, r3, r6\n\tjump.lt\t@.BB55_2\n.BB55_3:\n\tadd\tr3, r4, r2\n\tst.1\tr2, r0\n\tadd\t22, r3, r2\n\tst.1\tr1, r2\n\tadd\t85, r3, r2\n\tsub.s\t32, r0, r3\n\tand\tr2, r3, r3\n\tadd\tr3, r1, r2\n\tsub!\tr2, r3, r3\n\tadd\t0, r0, r3\n\tadd.lt\t1, r0, r3\n\tsub.s!\t@CPI55_1[0], r2, r4\n\tjump.gt\t@.BB55_5\n\tand!\t1, r3, r3\n\tjump.ne\t@.BB55_5\n\tst.1\t64, r2\n\tret\n.BB55_5:\n\tadd\t@CPI55_2[0], r0, r1\n\tst.1\t0, r1\n\tadd\t65, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI55_3[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end55:\n\nabi_encode_uint256_stringliteral_90de_29547:\n.func_begin56:\n\tadd\t96, r1, r2\n\tadd\t@CPI56_0[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t64, r1, r2\n\tadd\t18, r0, r3\n\tst.1\tr2, r3\n\tadd\t32, r1, r2\n\tadd\t64, r0, r3\n\tst.1\tr2, r3\n\tst.1\tr1, r0\n\tadd\t128, r1, r1\n\tret\n.func_end56:\n\nabi_encode_uint256_stringliteral_90de:\n.func_begin57:\n\tadd\t96, r1, r3\n\tadd\t@CPI57_0[0], r0, r4\n\tst.1\tr3, r4\n\tadd\t64, r1, r3\n\tadd\t18, r0, r4\n\tst.1\tr3, r4\n\tadd\t32, r1, r3\n\tadd\t64, r0, r4\n\tst.1\tr3, r4\n\tst.1\tr1, r2\n\tadd\t128, r1, r1\n\tret\n.func_end57:\n\nabi_encode_uint256_stringliteral_6d9d_29548:\n.func_begin58:\n\tadd\t96, r1, r2\n\tadd\t@CPI58_0[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t64, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t32, r1, r2\n\tadd\t64, r0, r3\n\tst.1\tr2, r3\n\tst.1\tr1, r0\n\tadd\t128, r1, r1\n\tret\n.func_end58:\n\nabi_encode_uint256_stringliteral_6d9d:\n.func_begin59:\n\tadd\t96, r1, r3\n\tadd\t@CPI59_0[0], r0, r4\n\tst.1\tr3, r4\n\tadd\t64, r1, r3\n\tadd\t32, r0, r4\n\tst.1\tr3, r4\n\tadd\t32, r1, r3\n\tadd\t64, r0, r4\n\tst.1\tr3, r4\n\tst.1\tr1, r2\n\tadd\t128, r1, r1\n\tret\n.func_end59:\n\nfun_getStakeInfo:\n.func_begin60:\n\tnop\tstack+=[2]\n\tld.1\t64, r3\n\tsub.s!\t@CPI60_0[0], r3, r2\n\tjump.ge\t@.BB60_1\n\tadd\t64, r3, r2\n\tst.1\t64, r2\n\tadd\tr3, r0, stack-[2]\n\tst.1.inc\tr3, r0, r2\n\tadd\tr2, r0, stack-[1]\n\tst.1\tr2, r0\n\tand\t@CPI60_1[0], r1, r1\n\tst.1\t0, r1\n\tst.1\t32, r0\n\tadd\t@CPI60_2[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI60_2[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI60_3[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB60_3\n\tld\tr1, r3\n\tsload\tr3, r2\n\tshr.s\t120, r2, r2\n\tand\t@CPI60_4[0], r2, r2\n\tadd\tstack-[2], r0, r1\n\tst.1\tr1, r2\n\tadd\t1, r3, r2\n\tsload\tr2, r2\n\tand\t@CPI60_2[0], r2, r2\n\tadd\tstack-[1], r0, r3\n\tst.1\tr3, r2\n\tret\n.BB60_1:\n\tadd\t@CPI60_5[0], r0, r1\n\tst.1\t0, r1\n\tadd\t65, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI60_6[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB60_3:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end60:\n\nfun:\n.func_begin61:\n\tnop\tstack+=[2]\n\tcontext.caller\tr1\n\tand\t@CPI61_0[0], r1, r2\n\tcontext.get_context_u128\tr1\n\tadd\tr1, r0, stack-[1]\n\tadd\tr2, r0, stack-[2]\n\tst.1\t0, r2\n\tst.1\t32, r0\n\tadd\t@CPI61_1[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI61_1[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI61_2[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB61_1\n\tadd\tstack-[2], r0, r5\n\tld\tr1, r1\n\tsload\tr1, r2\n\tand\t@CPI61_3[0], r2, r4\n\tadd\tstack-[1], r0, r3\n\tadd\tr4, r3, r3\n\tsub!\tr3, r4, r4\n\tadd\t0, r0, r4\n\tadd.lt\t1, r0, r4\n\tand!\t1, r4, r4\n\tjump.ne\t@.BB61_3\n\tsub.s!\t@CPI61_4[0], r3, r4\n\tadd\tr5, r0, r4\n\tjump.ge\t@.BB61_5\n\tand\t@CPI61_5[0], r2, r2\n\tor\tr3, r2, r2\n\tsstore\tr1, r2\n\tst.1\t0, r4\n\tst.1\t32, r0\n\tadd\t@CPI61_1[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI61_1[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI61_2[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB61_1\n\tld\tr1, r1\n\tsload\tr1, r1\n\tand\t@CPI61_3[0], r1, r1\n\tld.1\t64, r2\n\tst.1\tr2, r1\n\tadd\t@CPI61_1[0], r0, r1\n\tcontext.gas_left\tr3\n\tsub.s!\t@CPI61_1[0], r3, r4\n\tadd.ge\tr1, r0, r3\n\tsub.s!\t@CPI61_1[0], r2, r4\n\tadd.lt\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r3, r2\n\tor\tr2, r1, r1\n\tor\t@CPI61_6[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t2, r0, r3\n\tadd\t@CPI61_7[0], r0, r4\n\tadd\tstack-[2], r0, r5\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB61_1\n\tret\n.BB61_1:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB61_3:\n\tadd\t@CPI61_11[0], r0, r1\n\tst.1\t0, r1\n\tadd\t17, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI61_12[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB61_5:\n\tld.1\t64, r1\n\tadd\t68, r1, r2\n\tadd\t@CPI61_8[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t16, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI61_9[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI61_1[0], r0, r2\n\tsub.s!\t@CPI61_1[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI61_10[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end61:\n\nfun_depositTo:\n.func_begin62:\n\tnop\tstack+=[2]\n\tand\t@CPI62_0[0], r1, r2\n\tcontext.get_context_u128\tr1\n\tadd\tr1, r0, stack-[1]\n\tadd\tr2, r0, stack-[2]\n\tst.1\t0, r2\n\tst.1\t32, r0\n\tadd\t@CPI62_1[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI62_1[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI62_2[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB62_1\n\tadd\tstack-[2], r0, r5\n\tld\tr1, r1\n\tsload\tr1, r2\n\tand\t@CPI62_3[0], r2, r4\n\tadd\tstack-[1], r0, r3\n\tadd\tr4, r3, r3\n\tsub!\tr3, r4, r4\n\tadd\t0, r0, r4\n\tadd.lt\t1, r0, r4\n\tand!\t1, r4, r4\n\tjump.ne\t@.BB62_3\n\tsub.s!\t@CPI62_4[0], r3, r4\n\tadd\tr5, r0, r4\n\tjump.ge\t@.BB62_5\n\tand\t@CPI62_5[0], r2, r2\n\tor\tr3, r2, r2\n\tsstore\tr1, r2\n\tst.1\t0, r4\n\tst.1\t32, r0\n\tadd\t@CPI62_1[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI62_1[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI62_2[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB62_1\n\tld\tr1, r1\n\tsload\tr1, r1\n\tand\t@CPI62_3[0], r1, r1\n\tld.1\t64, r2\n\tst.1\tr2, r1\n\tadd\t@CPI62_1[0], r0, r1\n\tcontext.gas_left\tr3\n\tsub.s!\t@CPI62_1[0], r3, r4\n\tadd.ge\tr1, r0, r3\n\tsub.s!\t@CPI62_1[0], r2, r4\n\tadd.lt\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r3, r2\n\tor\tr2, r1, r1\n\tor\t@CPI62_6[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t2, r0, r3\n\tadd\t@CPI62_7[0], r0, r4\n\tadd\tstack-[2], r0, r5\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB62_1\n\tret\n.BB62_1:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB62_3:\n\tadd\t@CPI62_11[0], r0, r1\n\tst.1\t0, r1\n\tadd\t17, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI62_12[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB62_5:\n\tld.1\t64, r1\n\tadd\t68, r1, r2\n\tadd\t@CPI62_8[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t16, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI62_9[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI62_1[0], r0, r2\n\tsub.s!\t@CPI62_1[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI62_10[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end62:\n\nrequire_helper_stringliteral_1dfd:\n.func_begin63:\n\tsub.s!\t0, r1, r1\n\tjump.eq\t@.BB63_1\n\tret\n.BB63_1:\n\tld.1\t64, r1\n\tadd\t68, r1, r2\n\tadd\t@CPI63_0[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t24, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI63_1[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI63_2[0], r0, r2\n\tsub.s!\t@CPI63_2[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI63_3[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end63:\n\nrequire_helper_stringliteral_a34e:\n.func_begin64:\n\tsub.s!\t0, r1, r1\n\tjump.eq\t@.BB64_1\n\tret\n.BB64_1:\n\tld.1\t64, r1\n\tadd\t68, r1, r2\n\tadd\t@CPI64_0[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t18, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI64_1[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI64_2[0], r0, r2\n\tsub.s!\t@CPI64_2[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI64_3[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end64:\n\n__farcall:\n.func_begin65:\n.tmp0:\n\tfar_call\tr1, r2, @.BB65_2\n.tmp1:\n\tadd\t1, r0, r2\n\tret\n.BB65_2:\n.tmp2:\n\tadd\tr0, r0, r2\n\tret\n.func_end65:\n\n__staticcall:\n.func_begin66:\n.tmp3:\n\tfar_call.static\tr1, r2, @.BB66_2\n.tmp4:\n\tadd\t1, r0, r2\n\tret\n.BB66_2:\n.tmp5:\n\tadd\tr0, r0, r2\n\tret\n.func_end66:\n\n\t.data\n\t.p2align\t5\ncalldatasize:\n\t.cell 0\n\n\t.p2align\t5\nreturndatasize:\n\t.cell 0\n\n\t.p2align\t5\nptr_calldata:\n.cell\t0\n\n\t.p2align\t5\nptr_return_data:\n.cell\t0\n\n\t.note.GNU-stack\n\t.rodata\nCPI0_0:\nCPI1_0:\nCPI2_31:\nCPI3_1:\nCPI7_1:\nCPI10_1:\nCPI13_4:\nCPI14_4:\nCPI18_2:\nCPI19_2:\nCPI32_5:\nCPI38_4:\nCPI39_4:\nCPI53_2:\nCPI54_2:\nCPI60_2:\nCPI61_1:\nCPI62_1:\nCPI63_2:\nCPI64_2:\n\t.cell 4294967295\nCPI0_1:\n\t.cell 452314729952708969467597274869141599673050106883809417123900970069371731455\nCPI0_2:\n\t.cell -45094662312588414058508742492242807367897819822786606328124609013070528553987\nCPI0_3:\n\t.cell 904625697166532776746648320380374280103671765658434361392633989203151028224\nCPI0_4:\n\t.cell 53919893334301279589334030174039261357415493651629346657050491355136\nCPI1_1:\nCPI2_58:\nCPI10_2:\nCPI18_5:\nCPI19_3:\nCPI32_7:\n\t.cell 904625697166532776746648320380374280103671755200316906558262375061821325312\nCPI2_0:\n\t.cell 2403462233\nCPI2_1:\n\t.cell 3147818686\nCPI2_2:\n\t.cell 3594010515\nCPI2_3:\n\t.cell 3594010516\nCPI2_4:\n\t.cell 3995178019\nCPI2_5:\n\t.cell 4236126317\nCPI2_6:\n\t.cell 3147818687\nCPI2_7:\n\t.cell 3258604778\nCPI2_8:\n\t.cell 2602868584\nCPI2_9:\n\t.cell 2602868585\nCPI2_10:\n\t.cell 2786669873\nCPI2_11:\n\t.cell 3076586233\nCPI2_12:\n\t.cell 2403462234\nCPI2_13:\n\t.cell 2507219627\nCPI2_14:\n\t.cell 542910583\nCPI2_15:\n\t.cell 1260223732\nCPI2_16:\n\t.cell 1260223733\nCPI2_17:\n\t.cell 1384631826\nCPI2_18:\n\t.cell 1889567281\nCPI2_19:\n\t.cell 542910584\nCPI2_20:\n\t.cell 894860826\nCPI2_21:\n\t.cell 455999927\nCPI2_22:\n\t.cell 455999928\nCPI2_23:\n\t.cell 494085974\nCPI2_24:\n\t.cell 531469452\nCPI2_25:\n\t.cell 60214112\nCPI2_26:\n\t.cell 198348347\nCPI2_27:\nCPI6_0:\nCPI8_0:\nCPI13_0:\nCPI14_0:\nCPI19_0:\nCPI32_1:\nCPI38_0:\nCPI39_0:\nCPI53_9:\nCPI54_9:\n\t.cell -57896044618658097711785492504343953926634992332820282019728792003956564819968\nCPI2_28:\nCPI10_0:\nCPI13_3:\nCPI14_3:\nCPI18_4:\nCPI19_4:\nCPI20_1:\nCPI32_8:\nCPI38_1:\nCPI39_1:\nCPI53_4:\nCPI54_4:\nCPI60_1:\nCPI61_0:\nCPI62_0:\n\t.cell 1461501637330902918203684832716283019655932542975\nCPI2_29:\n\t.cell 1324035698926381045275276563951124480\nCPI2_30:\nCPI7_0:\nCPI13_16:\nCPI14_16:\nCPI18_18:\nCPI38_16:\nCPI39_16:\nCPI53_6:\nCPI54_6:\nCPI60_4:\nCPI61_3:\nCPI62_3:\n\t.cell 5192296858534827628530496329220095\nCPI2_32:\nCPI7_2:\nCPI15_0:\nCPI20_0:\nCPI21_0:\n\t.cell 281474976710655\nCPI2_33:\n\t.cell 12676506002282294014967032053760\nCPI2_34:\nCPI6_1:\nCPI8_1:\nCPI9_1:\nCPI10_4:\nCPI13_1:\nCPI14_1:\nCPI18_11:\nCPI19_1:\nCPI32_2:\nCPI33_1:\nCPI38_2:\nCPI39_2:\nCPI50_1:\nCPI53_10:\nCPI54_10:\nCPI55_1:\n\t.cell 18446744073709551615\nCPI2_35:\n\t.cell 18446744073709551455\nCPI2_36:\n\t.cell 18446744073709551199\nCPI2_37:\nCPI13_8:\nCPI14_8:\nCPI18_14:\nCPI38_3:\nCPI39_3:\n\t.cell 10867283408178898638301172343726954674910073630256871736220740970449699113859\nCPI2_38:\nCPI13_9:\nCPI14_9:\nCPI18_15:\nCPI38_5:\nCPI39_5:\n\t.cell 904625751086426111047927909714404454142933105326819602152923490636624035840\nCPI2_39:\n\t.cell -48197581810562875164774594853007176894035704693213259511018525770520413077504\nCPI2_40:\nCPI13_11:\nCPI14_11:\nCPI38_18:\nCPI39_18:\nCPI53_11:\nCPI54_11:\n\t.cell 26959946667150639794667015087019630673637144422540572481103610249215\nCPI2_41:\nCPI13_12:\nCPI14_12:\nCPI38_19:\nCPI39_19:\nCPI53_12:\nCPI54_12:\n\t.cell -26959946667150639794667015087019630673637144422540572481103610249216\nCPI2_42:\nCPI10_8:\nCPI13_13:\nCPI14_13:\nCPI18_1:\nCPI32_4:\nCPI38_20:\nCPI39_20:\nCPI53_1:\nCPI54_1:\nCPI61_9:\nCPI62_9:\nCPI63_1:\nCPI64_1:\n\t.cell 3963877391197344453575983046348115674221700746820753546331534351508065746944\nCPI2_43:\nCPI13_14:\nCPI14_14:\nCPI18_26:\nCPI32_15:\nCPI38_6:\nCPI39_6:\nCPI53_13:\nCPI54_13:\n\t.cell 15382879430798280032274949015962546692963007421274584931219521726781440655360\nCPI2_44:\n\t.cell 18446744073709551551\nCPI2_45:\nCPI3_2:\nCPI13_15:\nCPI14_15:\nCPI18_17:\nCPI32_14:\nCPI38_12:\nCPI39_12:\nCPI53_5:\nCPI54_5:\nCPI60_3:\nCPI61_2:\nCPI62_2:\n\t.cell 904625697166532776746648320380374280103671760270919307471179981048634146816\nCPI2_46:\n\t.cell 18446744073709551519\nCPI2_47:\n\t.cell 18446744073709551423\nCPI2_48:\n\t.cell -2295652723001637216630675310831144365518494277054385636727633115696985014272\nCPI2_49:\n\t.cell -14106614831937235757102865708658824595908956654869776346473400806664883404800\nCPI2_50:\nCPI32_16:\nCPI38_14:\nCPI39_14:\n\t.cell 30212542071733633044144396051920796812958444182406851663962835650539531164625\nCPI2_51:\nCPI13_7:\nCPI14_7:\nCPI18_13:\nCPI19_7:\nCPI32_11:\nCPI38_15:\nCPI39_15:\n\t.cell 904625751086426111047927909714404454142933102791518401696464687643217625088\nCPI2_52:\n\t.cell -52703657240450326252866596343855010506505175745341821187876647735927752359936\nCPI2_53:\n\t.cell 54919857843691310904240101001871775513466943666296306094405906504622902841650\nCPI2_54:\n\t.cell -4294967296\nCPI2_55:\n\t.cell -1208925819614624879738881\nCPI2_56:\n\t.cell -6901746346790563787434755862277024123223113187254513651355463943454721\nCPI2_57:\n\t.cell -32663529981786605216774693046055395484112177899514546738008874805189814731357\nCPI2_59:\n\t.cell 37747593056685232269583512073304451306129697748909240495577086380599291150336\nCPI2_60:\nCPI10_9:\nCPI13_22:\nCPI14_22:\nCPI18_3:\nCPI32_6:\nCPI53_3:\nCPI54_3:\nCPI61_10:\nCPI62_10:\nCPI63_3:\nCPI64_3:\n\t.cell 7922816251426433759354395033600\nCPI2_61:\n\t.cell 49509618433749677728319422036289458335107009026918043945294384019897606733824\nCPI2_62:\n\t.cell 35476746182218444870289278592881291302464175529530694605825660480188498051072\nCPI2_63:\n\t.cell 1208925819614624879738880\nCPI2_64:\n\t.cell -1324035698926381045275276563951124481\nCPI2_65:\nCPI61_6:\nCPI62_6:\n\t.cell 904625697166532776746648320380374280103671757735618107014721178055227736064\nCPI2_66:\n\t.cell -2439601130941873336410110850617825654721434778365086315045682779170043064566\nCPI2_67:\n\t.cell 44065955327867677235326925379057216439438964961697661487773604625663645450240\nCPI2_68:\n\t.cell 49951334845803014157041880649611881071679979855704792412129097804671080202240\nCPI2_69:\nCPI18_28:\n\t.cell 2535301200456458802993406410752\nCPI2_70:\nCPI38_7:\nCPI39_7:\n\t.cell 39376134586893209749886390317227915945453126231009119347939464007232096567296\nCPI2_71:\nCPI38_8:\nCPI39_8:\n\t.cell 22182216476136578060272566318850604970565072242024486780356928325126096266030\nCPI2_72:\nCPI38_9:\nCPI39_9:\n\t.cell 904625751086426111047927909714404454142933107862120802609382293630030446592\nCPI2_73:\nCPI38_10:\nCPI39_10:\n\t.cell 4294967227\nCPI2_74:\nCPI38_11:\nCPI39_11:\n\t.cell 5387515050969974956360988622848\nCPI2_75:\n\t.cell 49146121189898249594000146746245028012542499637469087206522061280033059635200\nCPI2_76:\nCPI4_2:\nCPI5_2:\nCPI9_3:\nCPI10_6:\nCPI13_25:\nCPI14_25:\nCPI18_25:\nCPI19_10:\nCPI32_22:\nCPI33_3:\nCPI38_23:\nCPI39_23:\nCPI50_3:\nCPI53_15:\nCPI54_15:\nCPI55_3:\nCPI60_6:\nCPI61_12:\nCPI62_12:\n\t.cell 2852213850513516153367582212096\nCPI2_77:\n\t.cell -12964721330219883652882022065917332127115011453618496651570920871495053869056\nCPI2_78:\n\t.cell -54881863485067561788539290307518088470291922973759671807406529798980549738496\nCPI2_79:\n\t.cell 29515575075915162648254619196335742202225878511956917026738739237302705324032\nCPI2_80:\n\t.cell -31082496120947393713818333144993514914643040544755414917807895791308535957134\nCPI2_81:\n\t.cell 18446744073709551263\nCPI2_82:\nCPI19_6:\nCPI32_10:\n\t.cell -45892047197499416867505091379861151366373029554911521591129889233172042914037\nCPI2_83:\nCPI19_8:\nCPI32_12:\n\t.cell 18446744073709551487\nCPI2_84:\n\t.cell 1329227995784915872903807060280344575\nCPI2_85:\n\t.cell 39520750077678143849380562990271764957534291192055885606210851640600375904845\nCPI2_86:\n\t.cell 37268805191608899176760263720700790282416321829889089033725955971341467020288\nCPI2_87:\nCPI3_0:\n\t.cell 6277101735386680763835789423207666416102355444464034512895\nCPI2_88:\nCPI13_18:\nCPI14_18:\nCPI18_20:\nCPI38_21:\nCPI39_21:\nCPI53_7:\nCPI54_7:\nCPI61_5:\nCPI62_5:\n\t.cell -5192296858534827628530496329220096\nCPI2_89:\n\t.cell -20916599931410963772474845411811809143787053011931936392992768688522837432837\nCPI2_90:\n\t.cell 39537540185534869899650071342017458160673232820957574017101009055611705360384\nCPI2_91:\nCPI32_3:\n\t.cell 29515574995035322646802699812335030935789664800131271992675039644554719395840\nCPI2_92:\nCPI32_13:\n\t.cell 1329227995784915872903807060280344576\nCPI2_93:\n\t.cell 53545048851678033459393958019198931055374341418493348604244876150148700307456\nCPI2_94:\n\t.cell 53545048851678033459393958019198931055100780066204582675808118420547410329600\nCPI2_95:\n\t.cell 53545048851678033459393958019198930967646877347230754115020311973026370420736\nCPI2_96:\n\t.cell 53545048851678033459393958019198930967305260560017172200856405028037992644608\nCPI2_97:\n\t.cell 53545048851678033459393958019198931667277803138100446116147937314903924146176\nCPI2_98:\n\t.cell 53545048851678033459393958019198931579823905611423476090187759397879213457408\nCPI2_99:\n\t.cell 53545048851678033459393958019198931492370008084746506064227581480854502768640\nCPI2_100:\n\t.cell 53545048851678033459393958019198930969282902587495917348011100469911342809088\nCPI2_101:\nCPI32_17:\n\t.cell 53545048851678033459393958019198930967992222203588764035421503814379128225792\nCPI2_102:\nCPI32_18:\n\t.cell 53545048851678033459393958019198930967990892975592979119548600007318847881216\nCPI2_103:\nCPI32_19:\n\t.cell 53545048851678033459393958019198930967989563747597194203675696200258567536640\nCPI2_104:\nCPI32_20:\n\t.cell 53545048851678033459393958019198930967988234519601409287802792393198287192064\nCPI2_105:\nCPI32_23:\n\t.cell 53545048851678033459393958019198930967646622924684685908466513978706238636032\nCPI2_106:\nCPI32_24:\n\t.cell 53545048851678033459393958019198930967305011329767962529130235564214190080000\nCPI2_107:\nCPI32_25:\n\t.cell 29515575021994425651055957897181541259066913865457569124914052654560769474560\nCPI2_108:\nCPI32_26:\n\t.cell 53545048851678033459393958019198931667202037142340705911392420312467944505344\nCPI2_109:\nCPI32_27:\n\t.cell 53545048851678033459393958019198931579749468843659520801305146202503514161152\nCPI2_110:\nCPI32_28:\n\t.cell 53545048851678033459393958019198931492296900544978335691217872092539083816960\nCPI2_111:\n\t.cell 53545048851678033459393958019198931038019940705525486967612771171128521523200\nCPI2_112:\n\t.cell 53545048851678033459393958019198930970303749688258732738401224292206647443456\nCPI2_113:\nCPI4_1:\nCPI5_1:\nCPI9_2:\nCPI10_5:\nCPI13_24:\nCPI14_24:\nCPI18_24:\nCPI19_9:\nCPI32_21:\nCPI33_2:\nCPI38_22:\nCPI39_22:\nCPI50_2:\nCPI53_14:\nCPI54_14:\nCPI55_2:\nCPI60_5:\nCPI61_11:\nCPI62_11:\n\t.cell 35408467139433450592217433187231851964531694900788300625387963629091585785856\nCPI2_114:\n\t.cell 53545048851678033459393958019198931055714623785414287067708250757580468518912\nCPI2_115:\n\t.cell 53545048851678033459393958019198930950907654773765240320988871668595859390464\nCPI2_116:\n\t.cell 7922816253787617000789217640448\nCPI2_117:\nCPI13_17:\nCPI14_17:\nCPI18_19:\nCPI61_4:\nCPI62_4:\n\t.cell 5192296858534827628530496329220096\nCPI2_118:\nCPI4_0:\n\t.cell 18446744073709551456\nCPI2_119:\n\t.cell -6901746346790563787434755862277025447258812113635558926632027894579201\nCPI2_120:\n\t.cell 6901746346790563787434755862277024123223113187254513651355463943454720\nCPI2_121:\n\t.cell -40852132057246022552647889873632069196495144339444963663355779033009359606783\nCPI2_122:\n\t.cell 52221604211349743923261013307000059110030536819005712388082042652512351158272\nCPI2_123:\n\t.cell 49950757336882969298235556412869826763965781723054843917275302742821024301056\nCPI2_124:\n\t.cell 44951118344456592137101457388795567729437532070138771502929558557720372576256\nCPI2_125:\n\t.cell 49509618433756283806465965654102440743593231405591238679940788974150817415168\nCPI5_0:\nCPI60_0:\n\t.cell 18446744073709551552\nCPI9_0:\nCPI10_3:\nCPI18_10:\n\t.cell 18446744073709551616\nCPI10_7:\n\t.cell 29515574941114174212555578170331615101122156325931089889542713385353127033088\nCPI10_10:\n\t.cell 29515574914155482645350780428333673808993422974754776881183695440148315504640\nCPI11_0:\nCPI12_0:\n\t.cell 29515575048957695472358558311893885322751354553526183393129321897331395657728\nCPI13_2:\nCPI14_2:\n\t.cell 13320531508027177667671212154942788978504284624589626308843673864900270096384\nCPI13_5:\nCPI14_5:\nCPI18_27:\n\t.cell -15071435457864635793453615985642802304477714438828098406401137191925082750976\nCPI13_6:\nCPI14_6:\nCPI18_12:\n\t.cell 50182626877236202919511659493747656258103580868824622380046315770105312814518\nCPI13_10:\nCPI14_10:\nCPI18_16:\n\t.cell -39064629468800524413414002982117954196445465439519082501102692329387693441024\nCPI13_19:\nCPI14_19:\nCPI18_21:\n\t.cell 904625697166532776746648320380374280103671765341521708384097587035446968320\nCPI13_20:\nCPI14_20:\nCPI18_22:\n\t.cell 33192981550766938082232700718097157413545057687234879694973100382448406053279\nCPI13_21:\nCPI14_21:\n\t.cell 53545048851678033459393958019198931141465780249490779860478651830386057805824\nCPI13_23:\nCPI14_23:\nCPI18_23:\nCPI61_8:\nCPI62_8:\n\t.cell 45410512412168470896412738862375848171710462123453557249049159327897129844736\nCPI13_26:\nCPI14_26:\n\t.cell 53545048851678033459393958019198931057416035620018979385025123794739309576192\nCPI13_27:\nCPI14_27:\n\t.cell 53545048851678033459393958019198931057075753253098040921561749187307541364736\nCPI13_28:\nCPI14_28:\n\t.cell 53545048851678033459393958019198931056735470886177102458098374579875773153280\nCPI13_29:\nCPI14_29:\n\t.cell 53545048851678033459393958019198931056395188519256163994634999972444004941824\nCPI13_30:\nCPI14_30:\n\t.cell 53545048851678033459393958019198931056054906152335225531171625365012236730368\nCPI18_0:\n\t.cell 29515574968075375967196512814107586192941551030901792943216945541772870680576\nCPI18_6:\n\t.cell 12805539188701497113405772294394028637842369425345398187799062004237924934145\nCPI18_7:\n\t.cell 53545048851678033459393958019198931057492097576699656074955467035466054762496\nCPI18_8:\n\t.cell 53545048851678033459393958019198931057150480789486074160791560090477676986368\nCPI18_9:\n\t.cell 53545048851678033459393958019198931056808864002272492246627653145489299210240\nCPI19_5:\nCPI32_9:\n\t.cell 18446744073709551264\nCPI22_0:\n\t.cell 29515526601927746307050349075720449086607613308711893594435457958490243334144\nCPI23_0:\n\t.cell 29515533503680260663873287088043125879906605641578961498741097301521872191488\nCPI24_0:\n\t.cell 29515526709774947412871092875782592747549473156449077192013152877351710752768\nCPI25_0:\n\t.cell 29515526655849318973062791564398456782242594636759789481249308274725859885056\nCPI26_0:\n\t.cell 29515533611521294203434880310538455024574925607558049362399708039875934552064\nCPI27_0:\n\t.cell 45683597706909905225705740179208901145235423637616003781192249940621976928256\nCPI27_1:\n\t.cell 29515533557600153998174566677377156050895269451064514751958920725758358873205\nCPI28_0:\nCPI29_0:\n\t.cell 29515526736730788447157467358377690826213903022050813132217636557219789012992\nCPI30_0:\nCPI31_0:\n\t.cell 29515540405426229698571013933069879133932532681423156888044348570555122974720\nCPI32_0:\n\t.cell 1461501637330902918203684832716283019655932542976\nCPI33_0:\n\t.cell 29515526682814583035766420669606719184580916406308053824037527716246226731008\nCPI34_0:\nCPI35_0:\n\t.cell 29515526682814583035766420669606140100027084546022876565548129146187580178432\nCPI36_0:\nCPI37_0:\n\t.cell 29515526628888936750492358342388646585299189894080433286631309198665812279296\nCPI38_13:\nCPI39_13:\n\t.cell -19402435173798968782290578754375181433970467321920351653257648312115626037971\nCPI38_17:\nCPI39_17:\n\t.cell 26472868778620455986223989248205626110694238731747537001826088588543453560832\nCPI40_0:\nCPI41_0:\n\t.cell 29515519700188807569647464338837640475073027978471724840179100915798209029120\nCPI42_0:\nCPI43_0:\n\t.cell 29515519781064548241152031644119695833689414530475391082865678252362935828480\nCPI44_0:\nCPI45_0:\n\t.cell 29515519808024494908302671438786711537314026484830040887614271138799687066994\nCPI46_0:\nCPI47_0:\n\t.cell 29515519834984441575453311233453726624333657157282767949270177134864113100146\nCPI48_0:\nCPI49_0:\n\t.cell 29515533530640207331023926882710140963510101200361461531738527097031123992576\nCPI50_0:\n\t.cell 29515533584560929826330208104362581461606368857417025994424082878770450530304\nCPI51_0:\nCPI52_0:\n\t.cell 29515533584560929826330208104362002377052536997131848735934684308711803977728\nCPI53_0:\nCPI54_0:\n\t.cell 29515540432388222058619653138484093861532911341548757238249685391914192433920\nCPI53_8:\nCPI54_8:\n\t.cell -5247925784980288460017663230246716817984952008651804777542682062664945893376\nCPI55_0:\n\t.cell 29515547307172976704640785369066668318584429126190324372785565356864936345600\nCPI56_0:\nCPI57_0:\n\t.cell 29515547307172976704640785369066668318584427069726149336344553096718533525504\nCPI58_0:\nCPI59_0:\n\t.cell 29515547334132928104386493671671644120660712344937592090997717202572648870772\nCPI61_7:\nCPI62_7:\n\t.cell 20644549604082266639320257001935285394590065917650136896563126397825491550916\nCPI63_0:\n\t.cell 46308022326495059180858768019429373756067317823038312267367382258168581062656\nCPI64_0:\n\t.cell 46308022326495059180858768019429373756067317164853948227273416403100261941248\n","bytecode":{"object":""},"methodIdentifiers":{"SIG_VALIDATION_FAILED()":"8f41ec5a","_validateSenderAndPaymaster(bytes,address,bytes)":"957122ab","addStake(uint32)":"0396cb60","balanceOf(address)":"70a08231","depositTo(address)":"b760faf9","deposits(address)":"fc7e286d","getDepositInfo(address)":"5287ce12","getNonce(address,uint192)":"35567e1a","getSenderAddress(bytes)":"9b249f69","getUserOpHash((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes))":"a6193531","handleAggregatedOps(((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes)[],address,bytes)[],address)":"4b1d7cf5","handleOps((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes)[],address)":"1fad948c","incrementNonce(uint192)":"0bd28e3b","innerHandleOp(bytes,((address,uint256,uint256,uint256,uint256,address,uint256,uint256),bytes32,uint256,uint256,uint256),bytes)":"1d732756","nonceSequenceNumber(address,uint192)":"1b2e01b8","simulateHandleOp((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes),address,bytes)":"d6383f94","simulateValidation((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes))":"ee219423","unlockStake()":"bb9fe6bf","withdrawStake(address)":"c23a5cea","withdrawTo(address,uint256)":"205c2878"}},"irOptimized":"/// @use-src 0:\"@openzeppelin/contracts/security/ReentrancyGuard.sol\", 1:\"contracts/smart-contract-wallet/aa-4337/core/EntryPoint.sol\", 3:\"contracts/smart-contract-wallet/aa-4337/core/NonceManager.sol\", 5:\"contracts/smart-contract-wallet/aa-4337/core/StakeManager.sol\", 8:\"contracts/smart-contract-wallet/aa-4337/interfaces/IEntryPoint.sol\", 9:\"contracts/smart-contract-wallet/aa-4337/interfaces/INonceManager.sol\", 11:\"contracts/smart-contract-wallet/aa-4337/interfaces/IStakeManager.sol\"\nobject \"EntryPoint_2517\" {\n    code {\n        {\n            /// @src 1:595:33492  \"contract EntryPoint is...\"\n            let _1 := memoryguard(0xa0)\n            mstore(64, _1)\n            if callvalue() { revert(0, 0) }\n            /// @src 0:1716:1717  \"1\"\n            sstore(/** @src 0:1821:1843  \"_status = _NOT_ENTERED\" */ 0x02, /** @src 0:1716:1717  \"1\" */ 0x01)\n            /// @src 1:792:811  \"new SenderCreator()\"\n            let _2 := datasize(\"SenderCreator_2895\")\n            let _3 := add(_1, _2)\n            if or(gt(_3, sub(shl(64, 1), 1)), lt(_3, _1))\n            {\n                /// @src 1:595:33492  \"contract EntryPoint is...\"\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 1:595:33492  \"contract EntryPoint is...\" */ shl(224, 0x4e487b71))\n                mstore(4, 0x41)\n                revert(/** @src -1:-1:-1 */ 0, /** @src 1:595:33492  \"contract EntryPoint is...\" */ 0x24)\n            }\n            /// @src 1:792:811  \"new SenderCreator()\"\n            datacopy(_1, dataoffset(\"SenderCreator_2895\"), _2)\n            let expr_address := create(/** @src -1:-1:-1 */ 0, /** @src 1:792:811  \"new SenderCreator()\" */ _1, sub(_3, _1))\n            if iszero(expr_address)\n            {\n                /// @src 1:595:33492  \"contract EntryPoint is...\"\n                let pos := mload(64)\n                returndatacopy(pos, /** @src -1:-1:-1 */ 0, /** @src 1:595:33492  \"contract EntryPoint is...\" */ returndatasize())\n                revert(pos, returndatasize())\n            }\n            /// @src 1:792:811  \"new SenderCreator()\"\n            mstore(128, expr_address)\n            /// @src 1:595:33492  \"contract EntryPoint is...\"\n            let _4 := mload(64)\n            let _5 := datasize(\"EntryPoint_2517_deployed\")\n            codecopy(_4, dataoffset(\"EntryPoint_2517_deployed\"), _5)\n            setimmutable(_4, \"83\", mload(/** @src 1:792:811  \"new SenderCreator()\" */ 128))\n            /// @src 1:595:33492  \"contract EntryPoint is...\"\n            return(_4, _5)\n        }\n    }\n    /// @use-src 0:\"@openzeppelin/contracts/security/ReentrancyGuard.sol\", 1:\"contracts/smart-contract-wallet/aa-4337/core/EntryPoint.sol\", 2:\"contracts/smart-contract-wallet/aa-4337/core/Helpers.sol\", 3:\"contracts/smart-contract-wallet/aa-4337/core/NonceManager.sol\", 5:\"contracts/smart-contract-wallet/aa-4337/core/StakeManager.sol\", 12:\"contracts/smart-contract-wallet/aa-4337/interfaces/UserOperation.sol\", 14:\"contracts/smart-contract-wallet/aa-4337/utils/Exec.sol\"\n    object \"EntryPoint_2517_deployed\" {\n        code {\n            {\n                /// @src 1:595:33492  \"contract EntryPoint is...\"\n                mstore(64, 128)\n                if iszero(lt(calldatasize(), 4))\n                {\n                    switch shr(224, calldataload(0))\n                    case 0x0396cb60 { external_fun_addStake() }\n                    case 0x0bd28e3b { external_fun_incrementNonce() }\n                    case 0x1b2e01b8 {\n                        external_fun_nonceSequenceNumber()\n                    }\n                    case 0x1d732756 { external_fun_innerHandleOp() }\n                    case 0x1fad948c { external_fun_handleOps() }\n                    case 0x205c2878 { external_fun_withdrawTo() }\n                    case 0x35567e1a { external_fun_getNonce() }\n                    case 0x4b1d7cf5 {\n                        external_fun_handleAggregatedOps()\n                    }\n                    case 0x5287ce12 { external_fun_getDepositInfo() }\n                    case 0x70a08231 { external_fun_balanceOf() }\n                    case 0x8f41ec5a {\n                        external_fun_SIG_VALIDATION_FAILED()\n                    }\n                    case 0x957122ab {\n                        external_fun_validateSenderAndPaymaster()\n                    }\n                    case 0x9b249f69 {\n                        external_fun_getSenderAddress()\n                    }\n                    case 0xa6193531 { external_fun_getUserOpHash() }\n                    case 0xb760faf9 { external_fun_depositTo() }\n                    case 0xbb9fe6bf { external_fun_unlockStake() }\n                    case 0xc23a5cea { external_fun_withdrawStake() }\n                    case 0xd6383f94 {\n                        external_fun_simulateHandleOp()\n                    }\n                    case 0xee219423 {\n                        external_fun_simulateValidation()\n                    }\n                    case 0xfc7e286d { external_fun_deposits() }\n                }\n                if iszero(calldatasize())\n                {\n                    fun()\n                    stop()\n                }\n                revert(0, 0)\n            }\n            function cleanup_uint32(value) -> cleaned\n            {\n                cleaned := and(value, 0xffffffff)\n            }\n            function external_fun_addStake()\n            {\n                if slt(add(calldatasize(), not(3)), 32)\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 1:595:33492  \"contract EntryPoint is...\"\n                let value := calldataload(4)\n                let _1 := and(value, 0xffffffff)\n                if iszero(eq(value, _1))\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 5:2186:2206  \"deposits[msg.sender]\"\n                let _2 := mapping_index_access_mapping_address_mapping_uint192_uint256__of_address(/** @src 5:2195:2205  \"msg.sender\" */ caller())\n                /// @src 5:2216:2274  \"require(unstakeDelaySec > 0, \\\"must specify unstake delay\\\")\"\n                require_helper_stringliteral_b778(/** @src 5:2224:2243  \"unstakeDelaySec > 0\" */ iszero(iszero(_1)))\n                /// @src 5:2284:2398  \"require(...\"\n                require_helper_stringliteral_be41(/** @src 5:2305:2344  \"unstakeDelaySec >= info.unstakeDelaySec\" */ iszero(lt(_1, cleanup_uint32(/** @src 1:595:33492  \"contract EntryPoint is...\" */ cleanup_uint32(sload(/** @src 5:2324:2344  \"info.unstakeDelaySec\" */ add(_2, 1)))))))\n                /// @src 1:595:33492  \"contract EntryPoint is...\"\n                let _3 := sload(/** @src 5:2424:2434  \"info.stake\" */ _2)\n                /// @src 1:595:33492  \"contract EntryPoint is...\"\n                let _4 := 0xffffffffffffffffffffffffffff\n                /// @src 5:2424:2446  \"info.stake + msg.value\"\n                let expr := checked_add_uint256(/** @src 1:595:33492  \"contract EntryPoint is...\" */ and(shr(120, _3), _4), /** @src 5:2437:2446  \"msg.value\" */ callvalue())\n                /// @src 5:2456:2496  \"require(stake > 0, \\\"no stake specified\\\")\"\n                require_helper_stringliteral_163f(/** @src 5:2464:2473  \"stake > 0\" */ iszero(iszero(expr)))\n                /// @src 5:2506:2559  \"require(stake <= type(uint112).max, \\\"stake overflow\\\")\"\n                require_helper_stringliteral_6a64(/** @src 5:2514:2540  \"stake <= type(uint112).max\" */ iszero(gt(expr, /** @src 1:595:33492  \"contract EntryPoint is...\" */ _4)))\n                /// @src 5:2592:2729  \"DepositInfo(...\"\n                let expr_mpos := /** @src 1:595:33492  \"contract EntryPoint is...\" */ allocate_memory()\n                /// @src 5:2592:2729  \"DepositInfo(...\"\n                write_to_memory_uint112(expr_mpos, /** @src 1:595:33492  \"contract EntryPoint is...\" */ and(_3, _4))\n                /// @src 5:2592:2729  \"DepositInfo(...\"\n                write_to_memory_bool_19775(add(expr_mpos, /** @src 1:595:33492  \"contract EntryPoint is...\" */ 32))\n                /// @src 5:2592:2729  \"DepositInfo(...\"\n                write_to_memory_uint112(add(expr_mpos, 64), /** @src 1:595:33492  \"contract EntryPoint is...\" */ and(/** @src 5:2661:2675  \"uint112(stake)\" */ expr, /** @src 1:595:33492  \"contract EntryPoint is...\" */ _4))\n                /// @src 5:2592:2729  \"DepositInfo(...\"\n                write_to_memory_uint32(add(expr_mpos, 96), value)\n                /// @src 1:595:33492  \"contract EntryPoint is...\"\n                mstore(/** @src 5:2592:2729  \"DepositInfo(...\" */ add(expr_mpos, 128), /** @src 1:595:33492  \"contract EntryPoint is...\" */ 0)\n                copy_struct_to_storage_from_struct_DepositInfo_to_struct_DepositInfo(/** @src 5:2569:2589  \"deposits[msg.sender]\" */ mapping_index_access_mapping_address_mapping_uint192_uint256__of_address(/** @src 5:2195:2205  \"msg.sender\" */ caller()), /** @src 1:595:33492  \"contract EntryPoint is...\" */ expr_mpos)\n                /// @src 5:2744:2791  \"StakeLocked(msg.sender, stake, unstakeDelaySec)\"\n                let _5 := /** @src 1:595:33492  \"contract EntryPoint is...\" */ mload(/** @src 5:2592:2729  \"DepositInfo(...\" */ 64)\n                /// @src 5:2744:2791  \"StakeLocked(msg.sender, stake, unstakeDelaySec)\"\n                log2(_5, sub(abi_encode_uint256_uint32(_5, expr, value), _5), 0xa5ae833d0bb1dcd632d98a8b70973e8516812898e19bf27b70071ebc8dc52c01, /** @src 5:2195:2205  \"msg.sender\" */ caller())\n                /// @src 1:595:33492  \"contract EntryPoint is...\"\n                return(0, 0)\n            }\n            function abi_decode_uint192() -> value\n            {\n                value := calldataload(36)\n                if iszero(eq(value, and(value, sub(shl(192, 1), 1)))) { revert(0, 0) }\n            }\n            function external_fun_incrementNonce()\n            {\n                if callvalue() { revert(0, 0) }\n                if slt(add(calldatasize(), not(3)), 32)\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 1:595:33492  \"contract EntryPoint is...\"\n                let value := calldataload(4)\n                if iszero(eq(value, and(value, sub(shl(192, 1), 1))))\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 1:595:33492  \"contract EntryPoint is...\"\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 3:966:976  \"msg.sender\" */ caller())\n                /// @src 1:595:33492  \"contract EntryPoint is...\"\n                mstore(32, /** @src 3:946:965  \"nonceSequenceNumber\" */ 0x01)\n                /// @src 3:946:982  \"nonceSequenceNumber[msg.sender][key]\"\n                let _1 := mapping_index_access_mapping_uint192_uint256_of_uint192(/** @src 1:595:33492  \"contract EntryPoint is...\" */ keccak256(/** @src -1:-1:-1 */ 0, /** @src 1:595:33492  \"contract EntryPoint is...\" */ 0x40), /** @src 3:946:982  \"nonceSequenceNumber[msg.sender][key]\" */ value)\n                /// @src 0:1759:1760  \"2\"\n                sstore(_1, /** @src 3:946:984  \"nonceSequenceNumber[msg.sender][key]++\" */ increment_uint256(/** @src 1:595:33492  \"contract EntryPoint is...\" */ sload(/** @src 3:946:984  \"nonceSequenceNumber[msg.sender][key]++\" */ _1)))\n                /// @src 1:595:33492  \"contract EntryPoint is...\"\n                return(/** @src -1:-1:-1 */ 0, 0)\n            }\n            /// @src 1:595:33492  \"contract EntryPoint is...\"\n            function cleanup_address(value) -> cleaned\n            {\n                cleaned := and(value, sub(shl(160, 1), 1))\n            }\n            function validator_revert_address(value)\n            {\n                if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n            }\n            function abi_decode_address_19787() -> value\n            {\n                value := calldataload(36)\n                validator_revert_address(value)\n            }\n            function abi_decode_address_19792() -> value\n            {\n                value := calldataload(196)\n                validator_revert_address(value)\n            }\n            function abi_decode_address(offset) -> value\n            {\n                value := calldataload(offset)\n                validator_revert_address(value)\n            }\n            function mapping_index_access_mapping_address_mapping_uint192_uint256__of_address(key) -> dataSlot\n            {\n                mstore(/** @src 5:2186:2194  \"deposits\" */ 0x00, /** @src 1:595:33492  \"contract EntryPoint is...\" */ and(key, sub(shl(160, 1), 1)))\n                mstore(0x20, /** @src 5:2186:2194  \"deposits\" */ 0x00)\n                /// @src 1:595:33492  \"contract EntryPoint is...\"\n                dataSlot := keccak256(/** @src 5:2186:2194  \"deposits\" */ 0x00, /** @src 1:595:33492  \"contract EntryPoint is...\" */ 0x40)\n            }\n            function mapping_index_access_mapping_address_mapping_uint192_uint256_of_address(key) -> dataSlot\n            {\n                mstore(0, and(key, sub(shl(160, 1), 1)))\n                mstore(0x20, 0)\n                dataSlot := keccak256(0, 0x40)\n            }\n            function mapping_index_access_mapping_uint192_uint256_of_uint192(slot, key) -> dataSlot\n            {\n                mstore(0, and(key, sub(shl(192, 1), 1)))\n                mstore(0x20, slot)\n                dataSlot := keccak256(0, 0x40)\n            }\n            function abi_encode_uint256(headStart, value0) -> tail\n            {\n                tail := add(headStart, 32)\n                mstore(headStart, value0)\n            }\n            function external_fun_nonceSequenceNumber()\n            {\n                if callvalue() { revert(0, 0) }\n                if slt(add(calldatasize(), not(3)), 64)\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 1:595:33492  \"contract EntryPoint is...\"\n                let value := calldataload(4)\n                validator_revert_address(value)\n                let value1 := abi_decode_uint192()\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 1:595:33492  \"contract EntryPoint is...\" */ and(value, sub(shl(160, 1), 1)))\n                mstore(32, /** @src 3:348:422  \"mapping(address => mapping(uint192 => uint256)) public nonceSequenceNumber\" */ 1)\n                /// @src 1:595:33492  \"contract EntryPoint is...\"\n                let _1 := sload(/** @src 3:348:422  \"mapping(address => mapping(uint192 => uint256)) public nonceSequenceNumber\" */ mapping_index_access_mapping_uint192_uint256_of_uint192(/** @src 1:595:33492  \"contract EntryPoint is...\" */ keccak256(/** @src -1:-1:-1 */ 0, /** @src 1:595:33492  \"contract EntryPoint is...\" */ 64), value1))\n                let memPos := mload(64)\n                mstore(memPos, _1)\n                return(memPos, 32)\n            }\n            function panic_error_0x41()\n            {\n                mstore(0, shl(224, 0x4e487b71))\n                mstore(4, 0x41)\n                revert(0, 0x24)\n            }\n            function finalize_allocation_19785(memPtr)\n            {\n                let newFreePtr := add(memPtr, 0xa0)\n                if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n                mstore(64, newFreePtr)\n            }\n            function finalize_allocation_19786(memPtr)\n            {\n                let newFreePtr := add(memPtr, 0x0100)\n                if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n                mstore(64, newFreePtr)\n            }\n            function finalize_allocation_19804(memPtr)\n            {\n                if gt(memPtr, 0xffffffffffffffff) { panic_error_0x41() }\n                mstore(64, memPtr)\n            }\n            function finalize_allocation_19805(memPtr)\n            {\n                let newFreePtr := add(memPtr, 160)\n                if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n                mstore(64, newFreePtr)\n            }\n            function finalize_allocation_19854(memPtr)\n            {\n                let newFreePtr := add(memPtr, 96)\n                if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n                mstore(64, newFreePtr)\n            }\n            function finalize_allocation(memPtr, size)\n            {\n                let newFreePtr := add(memPtr, and(add(size, 31), not(31)))\n                if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n                mstore(64, newFreePtr)\n            }\n            function allocate_memory() -> memPtr\n            {\n                memPtr := mload(64)\n                finalize_allocation_19805(memPtr)\n            }\n            function allocate_memory_19819() -> memPtr\n            {\n                memPtr := mload(64)\n                let newFreePtr := add(memPtr, 192)\n                if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n                mstore(64, newFreePtr)\n            }\n            function allocate_memory_19820() -> memPtr\n            {\n                memPtr := mload(/** @src 1:14444:14459  \"userOp.initCode\" */ 64)\n                /// @src 1:595:33492  \"contract EntryPoint is...\"\n                let newFreePtr := add(memPtr, /** @src 1:14444:14459  \"userOp.initCode\" */ 64)\n                /// @src 1:595:33492  \"contract EntryPoint is...\"\n                if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n                mstore(/** @src 1:14444:14459  \"userOp.initCode\" */ 64, /** @src 1:595:33492  \"contract EntryPoint is...\" */ newFreePtr)\n            }\n            function array_allocation_size_bytes(length) -> size\n            {\n                if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n                size := add(and(add(length, 31), not(31)), 0x20)\n            }\n            function abi_decode_available_length_bytes(src, length, end) -> array\n            {\n                let _1 := array_allocation_size_bytes(length)\n                let memPtr := mload(64)\n                finalize_allocation(memPtr, _1)\n                array := memPtr\n                mstore(memPtr, length)\n                if gt(add(src, length), end)\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 1:595:33492  \"contract EntryPoint is...\"\n                calldatacopy(add(memPtr, 0x20), src, length)\n                mstore(add(add(memPtr, length), 0x20), /** @src -1:-1:-1 */ 0)\n            }\n            /// @src 1:595:33492  \"contract EntryPoint is...\"\n            function abi_decode_bytes_calldata(offset, end) -> arrayPos, length\n            {\n                if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n                length := calldataload(offset)\n                if gt(length, 0xffffffffffffffff) { revert(0, 0) }\n                arrayPos := add(offset, 0x20)\n                if gt(add(add(offset, length), 0x20), end) { revert(0, 0) }\n            }\n            function external_fun_innerHandleOp()\n            {\n                if slt(add(calldatasize(), not(3)), 448)\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 1:595:33492  \"contract EntryPoint is...\"\n                let offset := calldataload(4)\n                let _1 := 0xffffffffffffffff\n                if gt(offset, _1)\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 1:595:33492  \"contract EntryPoint is...\"\n                if iszero(slt(add(offset, 35), calldatasize()))\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 1:595:33492  \"contract EntryPoint is...\"\n                let array := abi_decode_available_length_bytes(add(offset, 36), calldataload(add(4, offset)), calldatasize())\n                let _2 := add(calldatasize(), not(35))\n                if slt(_2, 0x0180)\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 1:595:33492  \"contract EntryPoint is...\"\n                let memPtr := mload(64)\n                finalize_allocation_19785(memPtr)\n                if slt(_2, 0x0100)\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 1:595:33492  \"contract EntryPoint is...\"\n                let memPtr_1 := mload(64)\n                finalize_allocation_19786(memPtr_1)\n                mstore(memPtr_1, abi_decode_address_19787())\n                mstore(add(memPtr_1, 0x20), calldataload(68))\n                mstore(add(memPtr_1, 64), calldataload(100))\n                mstore(add(memPtr_1, 96), calldataload(132))\n                mstore(add(memPtr_1, 128), calldataload(164))\n                mstore(add(memPtr_1, 0xa0), abi_decode_address_19792())\n                mstore(add(memPtr_1, 192), calldataload(228))\n                mstore(add(memPtr_1, 224), calldataload(260))\n                mstore(memPtr, memPtr_1)\n                mstore(add(memPtr, 0x20), calldataload(292))\n                mstore(add(memPtr, 64), calldataload(324))\n                mstore(add(memPtr, 96), calldataload(356))\n                mstore(add(memPtr, 128), calldataload(388))\n                let offset_1 := calldataload(420)\n                if gt(offset_1, _1)\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 1:595:33492  \"contract EntryPoint is...\"\n                let value2, value3 := abi_decode_bytes_calldata(add(4, offset_1), calldatasize())\n                let ret := fun_innerHandleOp(array, memPtr, value2, value3)\n                let memPos := mload(64)\n                return(memPos, sub(abi_encode_uint256(memPos, ret), memPos))\n            }\n            function abi_decode_array_struct_UserOperation_calldata_dyn_calldatat_address_payable(dataEnd) -> value0, value1, value2\n            {\n                if slt(add(dataEnd, not(3)), 64) { revert(0, 0) }\n                let offset := calldataload(4)\n                let _1 := 0xffffffffffffffff\n                if gt(offset, _1) { revert(0, 0) }\n                if iszero(slt(add(offset, 35), dataEnd))\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 1:595:33492  \"contract EntryPoint is...\"\n                let length := calldataload(add(4, offset))\n                if gt(length, _1)\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 1:595:33492  \"contract EntryPoint is...\"\n                if gt(add(add(offset, shl(5, length)), 36), dataEnd)\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 1:595:33492  \"contract EntryPoint is...\"\n                value0 := add(offset, 36)\n                value1 := length\n                let value := calldataload(36)\n                validator_revert_address(value)\n                value2 := value\n            }\n            function external_fun_handleOps()\n            {\n                let param, param_1, param_2 := abi_decode_array_struct_UserOperation_calldata_dyn_calldatat_address_payable(calldatasize())\n                /// @src 0:2227:2330  \"modifier nonReentrant() {...\"\n                fun_nonReentrantBefore()\n                /// @src 1:4328:4352  \"new UserOpInfo[](opslen)\"\n                let expr_mpos := allocate_and_zero_memory_array_array_struct_UserOpInfo_dyn(param_1)\n                /// @src 1:4382:4383  \"1\"\n                let _1 := 0x01\n                /// @src 1:4362:4403  \"require(msg.value > 1, \\\"value nhu cut 1\\\")\"\n                require_helper_stringliteral_21d7(/** @src 1:4370:4383  \"msg.value > 1\" */ gt(/** @src 1:4370:4379  \"msg.value\" */ callvalue(), /** @src 1:4382:4383  \"1\" */ _1))\n                /// @src 1:4442:4455  \"uint256 i = 0\"\n                let var_i := /** @src 1:4454:4455  \"0\" */ 0x00\n                /// @src 1:4500:4513  \"msg.value > 2\"\n                let expr := gt(/** @src 1:4370:4379  \"msg.value\" */ callvalue(), /** @src 1:4512:4513  \"2\" */ 0x02)\n                /// @src 1:4781:4795  \"msg.value > 16\"\n                let expr_1 := gt(/** @src 1:4370:4379  \"msg.value\" */ callvalue(), /** @src 1:4793:4795  \"16\" */ 0x10)\n                /// @src 1:5049:5063  \"msg.value > 23\"\n                let expr_2 := gt(/** @src 1:4370:4379  \"msg.value\" */ callvalue(), /** @src 1:5061:5063  \"23\" */ 0x17)\n                /// @src 1:4437:5099  \"for (uint256 i = 0; i < opslen; i++) {...\"\n                for { }\n                /** @src 1:4457:4467  \"i < opslen\" */ lt(var_i, param_1)\n                /// @src 1:4442:4455  \"uint256 i = 0\"\n                {\n                    /// @src 1:4469:4472  \"i++\"\n                    var_i := /** @src 1:595:33492  \"contract EntryPoint is...\" */ add(/** @src 1:4469:4472  \"i++\" */ var_i, /** @src 1:4382:4383  \"1\" */ _1)\n                }\n                /// @src 1:4469:4472  \"i++\"\n                {\n                    /// @src 1:4492:4533  \"require(msg.value > 2, \\\"value nhu cut 2\\\")\"\n                    require_helper_stringliteral_4d9e(expr)\n                    /// @src 1:4717:4755  \"_validatePrepayment(i, ops[i], opInfo)\"\n                    let expr_component, expr_component_1 := fun_validatePrepayment(var_i, /** @src 1:4740:4746  \"ops[i]\" */ calldata_array_index_access_struct_UserOperation_calldata_dyn_calldata(param, param_1, var_i), /** @src 1:4578:4588  \"opInfos[i]\" */ mload(memory_array_index_access_struct_UserOpInfo_dyn(expr_mpos, var_i)))\n                    /// @src 1:4773:4816  \"require(msg.value > 16, \\\"value nhu cut 16\\\")\"\n                    require_helper_stringliteral_13c6(expr_1)\n                    /// @src 1:4995:5005  \"address(0)\"\n                    fun_validateAccountAndPaymasterValidationData_19800(var_i, expr_component, expr_component_1)\n                    /// @src 1:5041:5084  \"require(msg.value > 23, \\\"value nhu cut 23\\\")\"\n                    require_helper_stringliteral_7ebb(expr_2)\n                }\n                /// @src 1:5113:5134  \"uint256 collected = 0\"\n                let var_collected := /** @src 1:4454:4455  \"0\" */ 0x00\n                /// @src 1:5153:5170  \"BeforeExecution()\"\n                log1(/** @src 1:4454:4455  \"0\" */ var_collected, var_collected, /** @src 1:5153:5170  \"BeforeExecution()\" */ 0xbb47ee3e183a558b1a2ff0874b079f3fc5478b7454eacf2bfc5af2ff5878f972)\n                /// @src 1:5190:5203  \"uint256 i = 0\"\n                let var_i_1 := /** @src 1:4454:4455  \"0\" */ var_collected\n                /// @src 1:5248:5262  \"msg.value > 24\"\n                let expr_3 := gt(/** @src 1:4370:4379  \"msg.value\" */ callvalue(), /** @src 1:5260:5262  \"24\" */ 0x18)\n                /// @src 1:5377:5391  \"msg.value > 25\"\n                let expr_4 := gt(/** @src 1:4370:4379  \"msg.value\" */ callvalue(), /** @src 1:5389:5391  \"25\" */ 0x19)\n                /// @src 1:5185:5427  \"for (uint256 i = 0; i < opslen; i++) {...\"\n                for { }\n                /** @src 1:5205:5215  \"i < opslen\" */ lt(var_i_1, param_1)\n                /// @src 1:5190:5203  \"uint256 i = 0\"\n                {\n                    /// @src 1:5217:5220  \"i++\"\n                    var_i_1 := /** @src 1:595:33492  \"contract EntryPoint is...\" */ add(/** @src 1:5217:5220  \"i++\" */ var_i_1, /** @src 1:4382:4383  \"1\" */ _1)\n                }\n                /// @src 1:5217:5220  \"i++\"\n                {\n                    /// @src 1:5240:5283  \"require(msg.value > 24, \\\"value nhu cut 24\\\")\"\n                    require_helper_stringliteral_243e(expr_3)\n                    /// @src 1:5332:5338  \"ops[i]\"\n                    let expr_offset := calldata_array_index_access_struct_UserOperation_calldata_dyn_calldata(param, param_1, var_i_1)\n                    /// @src 1:5301:5351  \"collected += _executeUserOp(i, ops[i], opInfos[i])\"\n                    var_collected := /** @src 1:595:33492  \"contract EntryPoint is...\" */ add(var_collected, /** @src 1:5314:5351  \"_executeUserOp(i, ops[i], opInfos[i])\" */ fun_executeUserOp(var_i_1, expr_offset, /** @src 1:5340:5350  \"opInfos[i]\" */ mload(memory_array_index_access_struct_UserOpInfo_dyn(expr_mpos, var_i_1))))\n                    /// @src 1:5369:5412  \"require(msg.value > 25, \\\"value nhu cut 19\\\")\"\n                    require_helper_stringliteral_dccb(expr_4)\n                }\n                /// @src 1:5466:5475  \"collected\"\n                fun_compensate(param_2, var_collected)\n                /// @src 0:2292:2293  \"_\"\n                fun_nonReentrantAfter()\n                /// @src 1:595:33492  \"contract EntryPoint is...\"\n                return(/** @src 1:4454:4455  \"0\" */ 0x00, 0x00)\n            }\n            /// @src 1:595:33492  \"contract EntryPoint is...\"\n            function external_fun_withdrawTo()\n            {\n                if callvalue() { revert(0, 0) }\n                if slt(add(calldatasize(), not(3)), 64)\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 1:595:33492  \"contract EntryPoint is...\"\n                let value := calldataload(4)\n                validator_revert_address(value)\n                let value1 := calldataload(36)\n                /// @src -1:-1:-1\n                let _1 := 0\n                /// @src 1:595:33492  \"contract EntryPoint is...\"\n                mstore(/** @src -1:-1:-1 */ _1, /** @src 5:4565:4575  \"msg.sender\" */ caller())\n                /// @src 1:595:33492  \"contract EntryPoint is...\"\n                mstore(32, /** @src -1:-1:-1 */ _1)\n                /// @src 1:595:33492  \"contract EntryPoint is...\"\n                let dataSlot := keccak256(/** @src -1:-1:-1 */ _1, /** @src 1:595:33492  \"contract EntryPoint is...\" */ 64)\n                let _2 := and(sload(/** @src 5:4612:4624  \"info.deposit\" */ dataSlot), /** @src 1:595:33492  \"contract EntryPoint is...\" */ 0xffffffffffffffffffffffffffff)\n                if /** @src 5:4594:4624  \"withdrawAmount <= info.deposit\" */ gt(value1, /** @src 1:595:33492  \"contract EntryPoint is...\" */ _2)\n                {\n                    let memPtr := mload(64)\n                    mstore(memPtr, shl(229, 4594637))\n                    mstore(add(memPtr, 4), 32)\n                    mstore(add(memPtr, 36), 25)\n                    mstore(add(memPtr, 68), \"Withdraw amount too large\")\n                    revert(memPtr, 100)\n                }\n                /// @src 5:4664:4717  \"info.deposit = uint112(info.deposit - withdrawAmount)\"\n                update_storage_value_offsett_uint112_to_uint112(dataSlot, /** @src 5:4679:4717  \"uint112(info.deposit - withdrawAmount)\" */ cleanup_uint112(/** @src 5:4687:4716  \"info.deposit - withdrawAmount\" */ checked_sub_uint256(/** @src 1:595:33492  \"contract EntryPoint is...\" */ _2, /** @src 5:4687:4716  \"info.deposit - withdrawAmount\" */ value1)))\n                /// @src 5:4732:4786  \"Withdrawn(msg.sender, withdrawAddress, withdrawAmount)\"\n                let _3 := /** @src 1:595:33492  \"contract EntryPoint is...\" */ mload(64)\n                /// @src 5:4732:4786  \"Withdrawn(msg.sender, withdrawAddress, withdrawAmount)\"\n                log2(_3, sub(abi_encode_address_payable_uint256(_3, value, value1), _3), 0xd1c19fbcd4551a5edfb66d43d2e337c04837afda3482b42bdf569a8fccdae5fb, /** @src 5:4565:4575  \"msg.sender\" */ caller())\n                /// @src 5:4815:4862  \"withdrawAddress.call{value: withdrawAmount}(\\\"\\\")\"\n                let expr_component := call(gas(), /** @src 1:595:33492  \"contract EntryPoint is...\" */ and(/** @src 5:4815:4835  \"withdrawAddress.call\" */ value, /** @src 1:595:33492  \"contract EntryPoint is...\" */ sub(shl(160, 1), 1)), /** @src 5:4815:4862  \"withdrawAddress.call{value: withdrawAmount}(\\\"\\\")\" */ value1, /** @src -1:-1:-1 */ _1, _1, _1, _1)\n                /// @src 5:4815:4862  \"withdrawAddress.call{value: withdrawAmount}(\\\"\\\")\"\n                pop(extract_returndata())\n                /// @src 5:4872:4910  \"require(success, \\\"failed to withdraw\\\")\"\n                require_helper_stringliteral_a34e(expr_component)\n                /// @src 1:595:33492  \"contract EntryPoint is...\"\n                return(/** @src -1:-1:-1 */ _1, _1)\n            }\n            /// @src 1:595:33492  \"contract EntryPoint is...\"\n            function external_fun_getNonce()\n            {\n                if callvalue() { revert(0, 0) }\n                if slt(add(calldatasize(), not(3)), 64)\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 1:595:33492  \"contract EntryPoint is...\"\n                let value := calldataload(4)\n                validator_revert_address(value)\n                let value1 := abi_decode_uint192()\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 1:595:33492  \"contract EntryPoint is...\" */ and(value, sub(shl(160, 1), 1)))\n                mstore(32, /** @src 3:560:579  \"nonceSequenceNumber\" */ 0x01)\n                /// @src 1:595:33492  \"contract EntryPoint is...\"\n                let _1 := sload(/** @src 3:560:592  \"nonceSequenceNumber[sender][key]\" */ mapping_index_access_mapping_uint192_uint256_of_uint192(/** @src 1:595:33492  \"contract EntryPoint is...\" */ keccak256(/** @src -1:-1:-1 */ 0, /** @src 1:595:33492  \"contract EntryPoint is...\" */ 64), /** @src 3:560:592  \"nonceSequenceNumber[sender][key]\" */ value1))\n                /// @src 1:595:33492  \"contract EntryPoint is...\"\n                let memPos := mload(64)\n                mstore(memPos, /** @src 3:560:615  \"nonceSequenceNumber[sender][key] | (uint256(key) << 64)\" */ or(_1, /** @src 1:595:33492  \"contract EntryPoint is...\" */ and(shl(64, /** @src 3:596:608  \"uint256(key)\" */ value1), /** @src 1:595:33492  \"contract EntryPoint is...\" */ not(0xffffffffffffffff))))\n                return(memPos, 32)\n            }\n            function external_fun_handleAggregatedOps()\n            {\n                if callvalue() { revert(0, 0) }\n                let param, param_1, param_2 := abi_decode_array_struct_UserOperation_calldata_dyn_calldatat_address_payable(calldatasize())\n                /// @src 0:2227:2330  \"modifier nonReentrant() {...\"\n                fun_nonReentrantBefore()\n                /// @src 1:5976:5996  \"uint256 totalOps = 0\"\n                let var_totalOps := /** @src 1:5995:5996  \"0\" */ 0x00\n                /// @src 1:6011:6024  \"uint256 i = 0\"\n                let var_i := /** @src 1:5995:5996  \"0\" */ var_totalOps\n                /// @src 1:6006:6767  \"for (uint256 i = 0; i < opasLen; i++) {...\"\n                for { }\n                /** @src 1:6026:6037  \"i < opasLen\" */ lt(var_i, param_1)\n                /// @src 1:6011:6024  \"uint256 i = 0\"\n                {\n                    /// @src 1:6039:6042  \"i++\"\n                    var_i := increment_uint256(var_i)\n                }\n                {\n                    /// @src 1:6094:6113  \"opsPerAggregator[i]\"\n                    let expr_offset := calldata_array_index_access_struct_UserOpsPerAggregator_calldata_dyn_calldata(param, param_1, var_i)\n                    /// @src 1:6158:6169  \"opa.userOps\"\n                    let expr_offset_1, expr_length := access_calldata_tail_array_struct_UserOperation_calldata_dyn_calldata(expr_offset, expr_offset)\n                    /// @src 1:6326:6345  \"address(aggregator)\"\n                    let expr := cleanup_address(/** @src 1:6208:6222  \"opa.aggregator\" */ read_from_calldatat_contract_IAggregator(add(expr_offset, 32)))\n                    /// @src 1:6326:6359  \"address(aggregator) != address(1)\"\n                    let _1 := /** @src 1:595:33492  \"contract EntryPoint is...\" */ and(/** @src 1:6326:6359  \"address(aggregator) != address(1)\" */ expr, /** @src 1:595:33492  \"contract EntryPoint is...\" */ sub(shl(160, 1), 1))\n                    /// @src 1:6301:6416  \"require(...\"\n                    require_helper_stringliteral_c7b8(/** @src 1:6326:6359  \"address(aggregator) != address(1)\" */ iszero(eq(_1, /** @src 1:6357:6358  \"1\" */ 0x01)))\n                    /// @src 1:6431:6720  \"if (address(aggregator) != address(0)) {...\"\n                    if /** @src 1:6435:6468  \"address(aggregator) != address(0)\" */ iszero(iszero(_1))\n                    /// @src 1:6431:6720  \"if (address(aggregator) != address(0)) {...\"\n                    {\n                        /// @src 1:6588:6601  \"opa.signature\"\n                        let _2 := 64\n                        let expr_offset_2, expr_length_1 := access_calldata_tail_bytes_calldata(expr_offset, add(expr_offset, _2))\n                        /// @src 1:6553:6602  \"aggregator.validateSignatures(ops, opa.signature)\"\n                        if iszero(extcodesize(expr))\n                        {\n                            /// @src 1:595:33492  \"contract EntryPoint is...\"\n                            revert(/** @src 1:5995:5996  \"0\" */ 0x00, 0x00)\n                        }\n                        /// @src 1:6553:6602  \"aggregator.validateSignatures(ops, opa.signature)\"\n                        let _3 := /** @src 1:595:33492  \"contract EntryPoint is...\" */ mload(/** @src 1:6588:6601  \"opa.signature\" */ _2)\n                        /// @src 1:6553:6602  \"aggregator.validateSignatures(ops, opa.signature)\"\n                        mstore(_3, /** @src 1:595:33492  \"contract EntryPoint is...\" */ shl(224, 0xe3563a4f))\n                        let _4 := 4\n                        /// @src 1:6553:6602  \"aggregator.validateSignatures(ops, opa.signature)\"\n                        let trySuccessCondition := staticcall(gas(), expr, _3, sub(abi_encode_array_struct_UserOperation_calldata_dyn_calldata_bytes_calldata(add(_3, /** @src 1:595:33492  \"contract EntryPoint is...\" */ _4), /** @src 1:6553:6602  \"aggregator.validateSignatures(ops, opa.signature)\" */ expr_offset_1, expr_length, expr_offset_2, expr_length_1), _3), _3, /** @src 1:5995:5996  \"0\" */ 0x00)\n                        /// @src 1:6553:6602  \"aggregator.validateSignatures(ops, opa.signature)\"\n                        if trySuccessCondition\n                        {\n                            finalize_allocation_19804(_3)\n                            abi_decode(_3, _3)\n                        }\n                        /// @src 1:6549:6706  \"try aggregator.validateSignatures(ops, opa.signature) {} catch {...\"\n                        switch iszero(trySuccessCondition)\n                        case 0 { }\n                        default {\n                            /// @src 1:6641:6687  \"SignatureValidationFailed(address(aggregator))\"\n                            let _5 := /** @src 1:595:33492  \"contract EntryPoint is...\" */ mload(/** @src 1:6588:6601  \"opa.signature\" */ _2)\n                            /// @src 1:6641:6687  \"SignatureValidationFailed(address(aggregator))\"\n                            mstore(_5, shl(228, 0x086a9f75))\n                            revert(_5, sub(abi_encode_address(add(_5, /** @src 1:595:33492  \"contract EntryPoint is...\" */ _4), /** @src 1:6641:6687  \"SignatureValidationFailed(address(aggregator))\" */ expr), _5))\n                        }\n                    }\n                    /// @src 1:6734:6756  \"totalOps += ops.length\"\n                    var_totalOps := checked_add_uint256(var_totalOps, /** @src 1:6746:6756  \"ops.length\" */ expr_length)\n                }\n                /// @src 1:6807:6833  \"new UserOpInfo[](totalOps)\"\n                let expr_mpos := allocate_and_zero_memory_array_array_struct_UserOpInfo_dyn(var_totalOps)\n                /// @src 1:6849:6866  \"BeforeExecution()\"\n                log1(/** @src 1:5995:5996  \"0\" */ 0x00, 0x00, /** @src 1:6849:6866  \"BeforeExecution()\" */ 0xbb47ee3e183a558b1a2ff0874b079f3fc5478b7454eacf2bfc5af2ff5878f972)\n                /// @src 1:6877:6896  \"uint256 opIndex = 0\"\n                let var_opIndex := /** @src 1:5995:5996  \"0\" */ 0x00\n                /// @src 1:6911:6924  \"uint256 a = 0\"\n                let var_a := /** @src 1:5995:5996  \"0\" */ var_opIndex\n                /// @src 1:6906:7731  \"for (uint256 a = 0; a < opasLen; a++) {...\"\n                for { }\n                /** @src 1:6926:6937  \"a < opasLen\" */ lt(var_a, param_1)\n                /// @src 1:6911:6924  \"uint256 a = 0\"\n                {\n                    /// @src 1:6939:6942  \"a++\"\n                    var_a := increment_uint256(var_a)\n                }\n                {\n                    /// @src 1:6994:7013  \"opsPerAggregator[a]\"\n                    let expr_offset_3 := calldata_array_index_access_struct_UserOpsPerAggregator_calldata_dyn_calldata(param, param_1, var_a)\n                    /// @src 1:7058:7069  \"opa.userOps\"\n                    let expr_offset_4, expr_length_2 := access_calldata_tail_array_struct_UserOperation_calldata_dyn_calldata(expr_offset_3, expr_offset_3)\n                    /// @src 1:7108:7122  \"opa.aggregator\"\n                    let expr_address := read_from_calldatat_contract_IAggregator(add(expr_offset_3, /** @src 1:6208:6222  \"opa.aggregator\" */ 32))\n                    /// @src 1:7183:7196  \"uint256 i = 0\"\n                    let var_i_1 := /** @src 1:5995:5996  \"0\" */ 0x00\n                    /// @src 1:595:33492  \"contract EntryPoint is...\"\n                    let _6 := and(/** @src 1:7642:7661  \"address(aggregator)\" */ expr_address, /** @src 1:595:33492  \"contract EntryPoint is...\" */ sub(shl(160, 1), 1))\n                    /// @src 1:7178:7721  \"for (uint256 i = 0; i < opslen; i++) {...\"\n                    for { }\n                    /** @src 1:7198:7208  \"i < opslen\" */ lt(var_i_1, expr_length_2)\n                    /// @src 1:7183:7196  \"uint256 i = 0\"\n                    {\n                        /// @src 1:7210:7213  \"i++\"\n                        var_i_1 := increment_uint256(var_i_1)\n                    }\n                    {\n                        /// @src 1:7412:7456  \"_validatePrepayment(opIndex, ops[i], opInfo)\"\n                        let expr_component, expr_component_1 := fun_validatePrepayment(var_opIndex, /** @src 1:7441:7447  \"ops[i]\" */ calldata_array_index_access_struct_UserOperation_calldata_dyn_calldata(expr_offset_4, expr_length_2, var_i_1), /** @src 1:7260:7276  \"opInfos[opIndex]\" */ mload(memory_array_index_access_struct_UserOpInfo_dyn(expr_mpos, var_opIndex)))\n                        /// @src 1:7642:7661  \"address(aggregator)\"\n                        fun_validateAccountAndPaymasterValidationData(var_i_1, expr_component, expr_component_1, _6)\n                        /// @src 1:7697:7706  \"opIndex++\"\n                        var_opIndex := increment_uint256(var_opIndex)\n                    }\n                }\n                /// @src 1:7772:7783  \"opIndex = 0\"\n                var_opIndex := /** @src 1:5995:5996  \"0\" */ 0x00\n                /// @src 1:7741:7762  \"uint256 collected = 0\"\n                let var_collected := /** @src 1:5995:5996  \"0\" */ var_opIndex\n                /// @src 1:7798:7811  \"uint256 a = 0\"\n                let var_a_1 := /** @src 1:5995:5996  \"0\" */ var_opIndex\n                /// @src 1:7793:8251  \"for (uint256 a = 0; a < opasLen; a++) {...\"\n                for { }\n                /** @src 1:7813:7824  \"a < opasLen\" */ lt(var_a_1, param_1)\n                /// @src 1:7798:7811  \"uint256 a = 0\"\n                {\n                    /// @src 1:7826:7829  \"a++\"\n                    var_a_1 := increment_uint256(var_a_1)\n                }\n                {\n                    /// @src 1:7881:7900  \"opsPerAggregator[a]\"\n                    let expr_offset_5 := calldata_array_index_access_struct_UserOpsPerAggregator_calldata_dyn_calldata(param, param_1, var_a_1)\n                    /// @src 1:7919:7970  \"SignatureAggregatorChanged(address(opa.aggregator))\"\n                    log2(/** @src 1:5995:5996  \"0\" */ 0x00, 0x00, /** @src 1:7919:7970  \"SignatureAggregatorChanged(address(opa.aggregator))\" */ 0x575ff3acadd5ab348fe1855e217e0f3678f8d767d7494c9f9fefbee2e17cca4d, cleanup_address(/** @src 1:7946:7969  \"address(opa.aggregator)\" */ cleanup_address(/** @src 1:7954:7968  \"opa.aggregator\" */ read_from_calldatat_contract_IAggregator(add(expr_offset_5, /** @src 1:6208:6222  \"opa.aggregator\" */ 32)))))\n                    /// @src 1:8015:8026  \"opa.userOps\"\n                    let expr_offset_6, expr_length_3 := access_calldata_tail_array_struct_UserOperation_calldata_dyn_calldata(expr_offset_5, expr_offset_5)\n                    /// @src 1:8087:8100  \"uint256 i = 0\"\n                    let var_i_2 := /** @src 1:5995:5996  \"0\" */ 0x00\n                    /// @src 1:8082:8241  \"for (uint256 i = 0; i < opslen; i++) {...\"\n                    for { }\n                    /** @src 1:8102:8112  \"i < opslen\" */ lt(var_i_2, expr_length_3)\n                    /// @src 1:8087:8100  \"uint256 i = 0\"\n                    {\n                        /// @src 1:8114:8117  \"i++\"\n                        var_i_2 := increment_uint256(var_i_2)\n                    }\n                    {\n                        /// @src 1:8174:8180  \"ops[i]\"\n                        let expr_offset_7 := calldata_array_index_access_struct_UserOperation_calldata_dyn_calldata(expr_offset_6, expr_length_3, var_i_2)\n                        /// @src 1:8137:8199  \"collected += _executeUserOp(opIndex, ops[i], opInfos[opIndex])\"\n                        var_collected := checked_add_uint256(var_collected, /** @src 1:8150:8199  \"_executeUserOp(opIndex, ops[i], opInfos[opIndex])\" */ fun_executeUserOp(var_opIndex, expr_offset_7, /** @src 1:8182:8198  \"opInfos[opIndex]\" */ mload(memory_array_index_access_struct_UserOpInfo_dyn(expr_mpos, var_opIndex))))\n                        /// @src 1:8217:8226  \"opIndex++\"\n                        var_opIndex := increment_uint256(var_opIndex)\n                    }\n                }\n                /// @src 1:8265:8303  \"SignatureAggregatorChanged(address(0))\"\n                log2(/** @src 1:5995:5996  \"0\" */ 0x00, 0x00, /** @src 1:7919:7970  \"SignatureAggregatorChanged(address(opa.aggregator))\" */ 0x575ff3acadd5ab348fe1855e217e0f3678f8d767d7494c9f9fefbee2e17cca4d, /** @src 1:5995:5996  \"0\" */ 0x00)\n                /// @src 1:8339:8348  \"collected\"\n                fun_compensate(param_2, var_collected)\n                /// @src 0:2292:2293  \"_\"\n                fun_nonReentrantAfter()\n                /// @src 1:595:33492  \"contract EntryPoint is...\"\n                return(/** @src 1:5995:5996  \"0\" */ 0x00, 0x00)\n            }\n            /// @src 1:595:33492  \"contract EntryPoint is...\"\n            function cleanup_uint112(value) -> cleaned\n            {\n                cleaned := and(value, 0xffffffffffffffffffffffffffff)\n            }\n            function cleanup_bool(value) -> cleaned\n            {\n                cleaned := iszero(iszero(value))\n            }\n            function cleanup_uint48(value) -> cleaned\n            {\n                cleaned := and(value, 0xffffffffffff)\n            }\n            function abi_encode_struct_DepositInfo(headStart, value0) -> tail\n            {\n                tail := add(headStart, 160)\n                let _1 := 0xffffffffffffffffffffffffffff\n                mstore(headStart, and(mload(value0), _1))\n                mstore(add(headStart, 0x20), iszero(iszero(mload(add(value0, 0x20)))))\n                mstore(add(headStart, 0x40), and(mload(add(value0, 0x40)), _1))\n                mstore(add(headStart, 0x60), and(mload(add(value0, 0x60)), 0xffffffff))\n                mstore(add(headStart, 0x80), and(mload(add(value0, 0x80)), 0xffffffffffff))\n            }\n            function external_fun_getDepositInfo()\n            {\n                if callvalue() { revert(0, 0) }\n                if slt(add(calldatasize(), not(3)), 32)\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 1:595:33492  \"contract EntryPoint is...\"\n                let value := calldataload(4)\n                validator_revert_address(value)\n                let _1 := 64\n                let memPtr := mload(_1)\n                finalize_allocation_19805(memPtr)\n                /// @src -1:-1:-1\n                let _2 := 0\n                /// @src 1:595:33492  \"contract EntryPoint is...\"\n                mstore(memPtr, /** @src -1:-1:-1 */ _2)\n                /// @src 1:595:33492  \"contract EntryPoint is...\"\n                mstore(add(memPtr, 32), /** @src -1:-1:-1 */ _2)\n                /// @src 1:595:33492  \"contract EntryPoint is...\"\n                mstore(add(memPtr, _1), /** @src -1:-1:-1 */ _2)\n                /// @src 1:595:33492  \"contract EntryPoint is...\"\n                mstore(add(memPtr, 96), /** @src -1:-1:-1 */ _2)\n                /// @src 1:595:33492  \"contract EntryPoint is...\"\n                mstore(add(memPtr, 128), /** @src -1:-1:-1 */ _2)\n                /// @src 1:595:33492  \"contract EntryPoint is...\"\n                mstore(/** @src -1:-1:-1 */ _2, /** @src 1:595:33492  \"contract EntryPoint is...\" */ and(value, sub(shl(160, 1), 1)))\n                mstore(32, /** @src -1:-1:-1 */ _2)\n                /// @src 1:595:33492  \"contract EntryPoint is...\"\n                let dataSlot := keccak256(/** @src -1:-1:-1 */ _2, /** @src 1:595:33492  \"contract EntryPoint is...\" */ _1)\n                let memPtr_1 := mload(_1)\n                finalize_allocation_19805(memPtr_1)\n                let _3 := sload(dataSlot)\n                let _4 := 0xffffffffffffffffffffffffffff\n                mstore(memPtr_1, and(_3, _4))\n                mstore(add(memPtr_1, 32), iszero(iszero(and(shr(112, _3), 0xff))))\n                mstore(add(memPtr_1, _1), and(shr(120, _3), _4))\n                let _5 := sload(add(dataSlot, 1))\n                write_to_memory_uint32(add(memPtr_1, 96), and(_5, 0xffffffff))\n                write_to_memory_uint48(add(memPtr_1, 128), and(shr(32, _5), 0xffffffffffff))\n                let memPos := mload(_1)\n                return(memPos, sub(abi_encode_struct_DepositInfo(memPos, memPtr_1), memPos))\n            }\n            function external_fun_balanceOf()\n            {\n                if callvalue() { revert(0, 0) }\n                if slt(add(calldatasize(), not(3)), 32)\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 1:595:33492  \"contract EntryPoint is...\"\n                let value := calldataload(4)\n                validator_revert_address(value)\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 1:595:33492  \"contract EntryPoint is...\" */ and(value, sub(shl(160, 1), 1)))\n                mstore(32, /** @src -1:-1:-1 */ 0)\n                /// @src 1:595:33492  \"contract EntryPoint is...\"\n                let cleaned := and(sload(keccak256(/** @src -1:-1:-1 */ 0, /** @src 1:595:33492  \"contract EntryPoint is...\" */ 0x40)), 0xffffffffffffffffffffffffffff)\n                let memPos := mload(0x40)\n                mstore(memPos, cleaned)\n                return(memPos, 32)\n            }\n            function abi_decode(headStart, dataEnd)\n            {\n                if slt(sub(dataEnd, headStart), 0) { revert(0, 0) }\n            }\n            function external_fun_SIG_VALIDATION_FAILED()\n            {\n                if callvalue() { revert(0, 0) }\n                if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                let memPos := mload(64)\n                mstore(memPos, /** @src 1:1353:1354  \"1\" */ 0x01)\n                /// @src 1:595:33492  \"contract EntryPoint is...\"\n                return(memPos, 32)\n            }\n            function external_fun_validateSenderAndPaymaster()\n            {\n                if callvalue() { revert(0, 0) }\n                if slt(add(calldatasize(), not(3)), 96)\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 1:595:33492  \"contract EntryPoint is...\"\n                let _1 := 4\n                let offset := calldataload(_1)\n                let _2 := 0xffffffffffffffff\n                if gt(offset, _2)\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 1:595:33492  \"contract EntryPoint is...\"\n                let value0, value1 := abi_decode_bytes_calldata(add(_1, offset), calldatasize())\n                let value := calldataload(36)\n                validator_revert_address(value)\n                let offset_1 := calldataload(68)\n                if gt(offset_1, _2)\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 1:595:33492  \"contract EntryPoint is...\"\n                let value3, value4 := abi_decode_bytes_calldata(add(_1, offset_1), calldatasize())\n                /// @src 1:18913:18960  \"initCode.length == 0 && sender.code.length == 0\"\n                let expr := /** @src 1:18913:18933  \"initCode.length == 0\" */ iszero(value1)\n                /// @src 1:18913:18960  \"initCode.length == 0 && sender.code.length == 0\"\n                if expr\n                {\n                    expr := /** @src 1:18937:18960  \"sender.code.length == 0\" */ iszero(/** @src 1:18937:18955  \"sender.code.length\" */ extcodesize(value))\n                }\n                /// @src 1:18909:19091  \"if (initCode.length == 0 && sender.code.length == 0) {...\"\n                if expr\n                {\n                    /// @src 1:19045:19080  \"revert(\\\"AA20 account not deployed\\\")\"\n                    let _3 := /** @src 1:595:33492  \"contract EntryPoint is...\" */ mload(64)\n                    /// @src 1:19045:19080  \"revert(\\\"AA20 account not deployed\\\")\"\n                    mstore(_3, /** @src 1:595:33492  \"contract EntryPoint is...\" */ shl(229, 4594637))\n                    /// @src 1:19045:19080  \"revert(\\\"AA20 account not deployed\\\")\"\n                    revert(_3, sub(abi_encode_stringliteral_71b8(add(_3, /** @src 1:595:33492  \"contract EntryPoint is...\" */ _1)), /** @src 1:19045:19080  \"revert(\\\"AA20 account not deployed\\\")\" */ _3))\n                }\n                /// @src 1:19100:19408  \"if (paymasterAndData.length >= 20) {...\"\n                if /** @src 1:19104:19133  \"paymasterAndData.length >= 20\" */ iszero(lt(value4, /** @src 1:19131:19133  \"20\" */ 0x14))\n                /// @src 1:19100:19408  \"if (paymasterAndData.length >= 20) {...\"\n                {\n                    /// @src 1:19185:19207  \"paymasterAndData[0:20]\"\n                    let expr_offset, expr_length := calldata_array_index_range_access_bytes_calldata_19807(value3, value4)\n                    /// @src 1:19223:19398  \"if (paymaster.code.length == 0) {...\"\n                    if /** @src 1:19227:19253  \"paymaster.code.length == 0\" */ iszero(/** @src 1:19227:19248  \"paymaster.code.length\" */ extcodesize(/** @src 1:19169:19209  \"address(bytes20(paymasterAndData[0:20]))\" */ convert_bytes20_to_address(/** @src 1:19177:19208  \"bytes20(paymasterAndData[0:20])\" */ convert_bytes_to_fixedbytes_from_bytes_calldata_to_bytes20(expr_offset, expr_length))))\n                    /// @src 1:19223:19398  \"if (paymaster.code.length == 0) {...\"\n                    {\n                        /// @src 1:19346:19383  \"revert(\\\"AA30 paymaster not deployed\\\")\"\n                        let _4 := /** @src 1:595:33492  \"contract EntryPoint is...\" */ mload(64)\n                        /// @src 1:19346:19383  \"revert(\\\"AA30 paymaster not deployed\\\")\"\n                        mstore(_4, /** @src 1:595:33492  \"contract EntryPoint is...\" */ shl(229, 4594637))\n                        /// @src 1:19346:19383  \"revert(\\\"AA30 paymaster not deployed\\\")\"\n                        revert(_4, sub(abi_encode_stringliteral_d82b(add(_4, /** @src 1:595:33492  \"contract EntryPoint is...\" */ _1)), /** @src 1:19346:19383  \"revert(\\\"AA30 paymaster not deployed\\\")\" */ _4))\n                    }\n                }\n                /// @src 1:19442:19452  \"revert(\\\"\\\")\"\n                let _5 := /** @src 1:595:33492  \"contract EntryPoint is...\" */ mload(64)\n                /// @src 1:19442:19452  \"revert(\\\"\\\")\"\n                mstore(_5, /** @src 1:595:33492  \"contract EntryPoint is...\" */ shl(229, 4594637))\n                /// @src 1:19442:19452  \"revert(\\\"\\\")\"\n                revert(_5, sub(abi_encode_stringliteral_c5d2(add(_5, /** @src 1:595:33492  \"contract EntryPoint is...\" */ _1)), /** @src 1:19442:19452  \"revert(\\\"\\\")\" */ _5))\n            }\n            /// @src 1:595:33492  \"contract EntryPoint is...\"\n            function external_fun_getSenderAddress()\n            {\n                if callvalue() { revert(0, 0) }\n                if slt(add(calldatasize(), not(3)), 32)\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 1:595:33492  \"contract EntryPoint is...\"\n                let offset := calldataload(4)\n                if gt(offset, 0xffffffffffffffff)\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 1:595:33492  \"contract EntryPoint is...\"\n                let value0, value1 := abi_decode_bytes_calldata(add(4, offset), calldatasize())\n                let _1 := sub(shl(160, 1), 1)\n                /// @src 1:17973:18009  \"senderCreator.createSender(initCode)\"\n                let _2 := /** @src 1:595:33492  \"contract EntryPoint is...\" */ mload(64)\n                /// @src 1:17973:18009  \"senderCreator.createSender(initCode)\"\n                mstore(_2, /** @src 1:595:33492  \"contract EntryPoint is...\" */ shl(225, 0x2b870d1b))\n                /// @src 1:17973:18009  \"senderCreator.createSender(initCode)\"\n                let _3 := call(gas(), /** @src 1:595:33492  \"contract EntryPoint is...\" */ and(/** @src 1:17973:17986  \"senderCreator\" */ loadimmutable(\"83\"), /** @src 1:595:33492  \"contract EntryPoint is...\" */ _1), /** @src -1:-1:-1 */ 0, /** @src 1:17973:18009  \"senderCreator.createSender(initCode)\" */ _2, sub(abi_encode_bytes_calldata(add(_2, /** @src 1:595:33492  \"contract EntryPoint is...\" */ 4), /** @src 1:17973:18009  \"senderCreator.createSender(initCode)\" */ value0, value1), _2), _2, /** @src 1:595:33492  \"contract EntryPoint is...\" */ 32)\n                /// @src 1:17973:18009  \"senderCreator.createSender(initCode)\"\n                if iszero(_3) { revert_forward() }\n                let expr := /** @src -1:-1:-1 */ 0\n                /// @src 1:17973:18009  \"senderCreator.createSender(initCode)\"\n                if _3\n                {\n                    let _4 := /** @src 1:595:33492  \"contract EntryPoint is...\" */ 32\n                    /// @src 1:17973:18009  \"senderCreator.createSender(initCode)\"\n                    if gt(/** @src 1:595:33492  \"contract EntryPoint is...\" */ _4, /** @src 1:17973:18009  \"senderCreator.createSender(initCode)\" */ returndatasize()) { _4 := returndatasize() }\n                    finalize_allocation(_2, _4)\n                    expr := abi_decode_address_fromMemory(_2, add(_2, _4))\n                }\n                /// @src 1:18026:18053  \"SenderAddressResult(sender)\"\n                let _5 := /** @src 1:595:33492  \"contract EntryPoint is...\" */ mload(64)\n                /// @src 1:18026:18053  \"SenderAddressResult(sender)\"\n                mstore(_5, shl(225, 0x3653dc03))\n                /// @src 1:595:33492  \"contract EntryPoint is...\"\n                mstore(/** @src 1:18026:18053  \"SenderAddressResult(sender)\" */ add(_5, /** @src 1:595:33492  \"contract EntryPoint is...\" */ 4), and(expr, _1))\n                /// @src 1:18026:18053  \"SenderAddressResult(sender)\"\n                revert(_5, /** @src 1:595:33492  \"contract EntryPoint is...\" */ 36)\n            }\n            function abi_decode_struct_UserOperation_calldata(offset, end) -> value\n            {\n                if slt(sub(end, offset), 352) { revert(0, 0) }\n                value := offset\n            }\n            function abi_decode_struct_UserOperation_calldata_19808(dataEnd) -> value0\n            {\n                if slt(add(dataEnd, not(3)), 32) { revert(0, 0) }\n                let offset := calldataload(4)\n                if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n                value0 := abi_decode_struct_UserOperation_calldata(add(4, offset), dataEnd)\n            }\n            function external_fun_getUserOpHash()\n            {\n                if callvalue() { revert(0, 0) }\n                let ret := fun_getUserOpHash(abi_decode_struct_UserOperation_calldata_19808(calldatasize()))\n                let memPos := mload(64)\n                mstore(memPos, ret)\n                return(memPos, 32)\n            }\n            function external_fun_depositTo()\n            {\n                if slt(add(calldatasize(), not(3)), 32)\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 1:595:33492  \"contract EntryPoint is...\"\n                let value := calldataload(4)\n                validator_revert_address(value)\n                fun_depositTo(value)\n                return(/** @src -1:-1:-1 */ 0, 0)\n            }\n            /// @src 1:595:33492  \"contract EntryPoint is...\"\n            function external_fun_unlockStake()\n            {\n                if callvalue() { revert(0, 0) }\n                let _1 := 0\n                if slt(add(calldatasize(), not(3)), _1) { revert(_1, _1) }\n                mstore(_1, /** @src 5:3015:3025  \"msg.sender\" */ caller())\n                /// @src 1:595:33492  \"contract EntryPoint is...\"\n                mstore(0x20, _1)\n                let dataSlot := keccak256(_1, 0x40)\n                /// @src 5:3044:3064  \"info.unstakeDelaySec\"\n                let _2 := add(dataSlot, 1)\n                /// @src 1:595:33492  \"contract EntryPoint is...\"\n                let _3 := and(sload(/** @src 5:3044:3064  \"info.unstakeDelaySec\" */ _2), /** @src 1:595:33492  \"contract EntryPoint is...\" */ 0xffffffff)\n                if /** @src 5:3044:3069  \"info.unstakeDelaySec != 0\" */ iszero(/** @src 1:595:33492  \"contract EntryPoint is...\" */ _3)\n                {\n                    let memPtr := mload(0x40)\n                    mstore(memPtr, shl(229, 4594637))\n                    mstore(add(memPtr, 4), 0x20)\n                    mstore(add(memPtr, 36), 10)\n                    mstore(add(memPtr, 68), \"not staked\")\n                    revert(memPtr, 100)\n                }\n                /// @src 5:3094:3135  \"require(info.staked, \\\"already unstaking\\\")\"\n                require_helper_stringliteral_eaba(/** @src 1:595:33492  \"contract EntryPoint is...\" */ extract_from_storage_value_offsett_bool(sload(/** @src 5:3102:3113  \"info.staked\" */ dataSlot)))\n                /// @src 5:3167:3213  \"uint48(block.timestamp) + info.unstakeDelaySec\"\n                let expr := checked_add_uint48(/** @src 1:595:33492  \"contract EntryPoint is...\" */ and(/** @src 5:3174:3189  \"block.timestamp\" */ timestamp(), /** @src 1:595:33492  \"contract EntryPoint is...\" */ 0xffffffffffff), _3)\n                /// @src 5:3223:3255  \"info.withdrawTime = withdrawTime\"\n                update_storage_value_offsett_uint48_to_uint48(_2, expr)\n                /// @src 5:3265:3284  \"info.staked = false\"\n                update_storage_value_offsett_bool_to_bool(dataSlot)\n                /// @src 5:3299:3338  \"StakeUnlocked(msg.sender, withdrawTime)\"\n                let _4 := /** @src 1:595:33492  \"contract EntryPoint is...\" */ mload(0x40)\n                /// @src 5:3299:3338  \"StakeUnlocked(msg.sender, withdrawTime)\"\n                log2(_4, sub(abi_encode_uint48(_4, expr), _4), 0xfa9b3c14cc825c412c9ed81b3ba365a5b459439403f18829e572ed53a4180f0a, /** @src 5:3015:3025  \"msg.sender\" */ caller())\n                /// @src 1:595:33492  \"contract EntryPoint is...\"\n                return(_1, _1)\n            }\n            function external_fun_withdrawStake()\n            {\n                if callvalue() { revert(0, 0) }\n                if slt(add(calldatasize(), not(3)), 32)\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 1:595:33492  \"contract EntryPoint is...\"\n                let value := calldataload(4)\n                validator_revert_address(value)\n                /// @src 5:3652:3672  \"deposits[msg.sender]\"\n                let _1 := mapping_index_access_mapping_address_mapping_uint192_uint256__of_address(/** @src 5:3661:3671  \"msg.sender\" */ caller())\n                /// @src 5:3682:3708  \"uint256 stake = info.stake\"\n                let var_stake := cleanup_uint112(/** @src 1:595:33492  \"contract EntryPoint is...\" */ extract_from_storage_value_offsett_uint112(sload(/** @src 5:3698:3708  \"info.stake\" */ _1)))\n                /// @src 5:3718:3760  \"require(stake > 0, \\\"No stake to withdraw\\\")\"\n                require_helper_stringliteral(/** @src 5:3726:3735  \"stake > 0\" */ iszero(iszero(var_stake)))\n                /// @src 5:3778:3795  \"info.withdrawTime\"\n                let _2 := add(_1, 1)\n                /// @src 1:595:33492  \"contract EntryPoint is...\"\n                let _3 := and(extract_from_storage_value_offsett_uint48(sload(/** @src 5:3778:3795  \"info.withdrawTime\" */ _2)), /** @src 1:595:33492  \"contract EntryPoint is...\" */ 0xffffffffffff)\n                /// @src 5:3770:3833  \"require(info.withdrawTime > 0, \\\"must call unlockStake() first\\\")\"\n                require_helper_stringliteral_9973(/** @src 5:3778:3799  \"info.withdrawTime > 0\" */ iszero(iszero(/** @src 1:595:33492  \"contract EntryPoint is...\" */ _3)))\n                /// @src 5:3843:3953  \"require(...\"\n                require_helper_stringliteral_5cd6(/** @src 5:3864:3900  \"info.withdrawTime <= block.timestamp\" */ iszero(gt(/** @src 1:595:33492  \"contract EntryPoint is...\" */ _3, /** @src 5:3885:3900  \"block.timestamp\" */ timestamp())))\n                /// @src 5:3963:3987  \"info.unstakeDelaySec = 0\"\n                update_storage_value_offsett_uint32_to_uint32(_2)\n                /// @src 5:3997:4018  \"info.withdrawTime = 0\"\n                update_storage_value_offsett_uint48_to_uint48_19812(_2)\n                /// @src 5:4028:4042  \"info.stake = 0\"\n                update_storage_value_offsett_uint112_to_uint112_19813(_1)\n                /// @src 5:4057:4107  \"StakeWithdrawn(msg.sender, withdrawAddress, stake)\"\n                let _4 := /** @src 1:595:33492  \"contract EntryPoint is...\" */ mload(64)\n                /// @src 5:4057:4107  \"StakeWithdrawn(msg.sender, withdrawAddress, stake)\"\n                log2(_4, sub(abi_encode_address_payable_uint256(_4, value, var_stake), _4), 0xb7c918e0e249f999e965cafeb6c664271b3f4317d296461500e71da39f0cbda3, /** @src 5:3661:3671  \"msg.sender\" */ caller())\n                /// @src -1:-1:-1\n                let _5 := 0\n                /// @src 5:4136:4174  \"withdrawAddress.call{value: stake}(\\\"\\\")\"\n                let expr_component := call(gas(), /** @src 1:595:33492  \"contract EntryPoint is...\" */ and(/** @src 5:4136:4156  \"withdrawAddress.call\" */ value, /** @src 1:595:33492  \"contract EntryPoint is...\" */ sub(shl(160, 1), 1)), /** @src 5:4136:4174  \"withdrawAddress.call{value: stake}(\\\"\\\")\" */ var_stake, /** @src -1:-1:-1 */ _5, _5, _5, _5)\n                /// @src 5:4136:4174  \"withdrawAddress.call{value: stake}(\\\"\\\")\"\n                pop(extract_returndata())\n                /// @src 5:4184:4228  \"require(success, \\\"failed to withdraw stake\\\")\"\n                require_helper_stringliteral_1dfd(expr_component)\n                /// @src 1:595:33492  \"contract EntryPoint is...\"\n                return(/** @src -1:-1:-1 */ _5, _5)\n            }\n            /// @src 1:595:33492  \"contract EntryPoint is...\"\n            function external_fun_simulateHandleOp()\n            {\n                if callvalue() { revert(0, 0) }\n                if slt(add(calldatasize(), not(3)), 96)\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 1:595:33492  \"contract EntryPoint is...\"\n                let offset := calldataload(4)\n                let _1 := 0xffffffffffffffff\n                if gt(offset, _1)\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 1:595:33492  \"contract EntryPoint is...\"\n                let value0 := abi_decode_struct_UserOperation_calldata(add(4, offset), calldatasize())\n                let value := calldataload(36)\n                validator_revert_address(value)\n                let offset_1 := calldataload(68)\n                if gt(offset_1, _1)\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 1:595:33492  \"contract EntryPoint is...\"\n                let value2, value3 := abi_decode_bytes_calldata(add(4, offset_1), calldatasize())\n                /// @src 1:8552:8576  \"UserOpInfo memory opInfo\"\n                let zero_struct_UserOpInfo_memory_ptr_mpos := /** @src 1:595:33492  \"contract EntryPoint is...\" */ allocate_and_zero_memory_struct_struct_UserOpInfo()\n                /// @src 1:8613:8615  \"op\"\n                fun_simulationOnlyValidations(value0)\n                /// @src 1:8720:8754  \"_validatePrepayment(0, op, opInfo)\"\n                let expr_component, expr_component_1 := fun_validatePrepayment_19814(value0, zero_struct_UserOpInfo_memory_ptr_mpos)\n                /// @src 1:8793:8887  \"_intersectTimeRange(...\"\n                let expr_mpos := fun_intersectTimeRange(expr_component, expr_component_1)\n                /// @src -1:-1:-1\n                let _2 := 0\n                /// @src 1:33432:33484  \"assembly {...\"\n                mstore(/** @src -1:-1:-1 */ _2, /** @src 1:33432:33484  \"assembly {...\" */ number())\n                /// @src 1:8937:8966  \"_executeUserOp(0, op, opInfo)\"\n                let expr := fun_executeUserOp_19815(value0, zero_struct_UserOpInfo_memory_ptr_mpos)\n                /// @src 1:33432:33484  \"assembly {...\"\n                mstore(/** @src -1:-1:-1 */ _2, /** @src 1:33432:33484  \"assembly {...\" */ number())\n                /// @src 1:9028:9053  \"bytes memory targetResult\"\n                let var_targetResult_mpos := /** @src -1:-1:-1 */ _2\n                /// @src 1:9000:9018  \"bool targetSuccess\"\n                let var_targetSuccess := /** @src -1:-1:-1 */ _2\n                /// @src 1:9028:9053  \"bytes memory targetResult\"\n                var_targetResult_mpos := /** @src 1:595:33492  \"contract EntryPoint is...\" */ 96\n                /// @src 1:9063:9173  \"if (target != address(0)) {...\"\n                if /** @src 1:9067:9087  \"target != address(0)\" */ iszero(iszero(/** @src 1:595:33492  \"contract EntryPoint is...\" */ and(/** @src 1:9067:9087  \"target != address(0)\" */ value, /** @src 1:595:33492  \"contract EntryPoint is...\" */ sub(shl(160, 1), 1))))\n                /// @src 1:9063:9173  \"if (target != address(0)) {...\"\n                {\n                    /// @src 1:9135:9162  \"target.call(targetCallData)\"\n                    let _3 := /** @src 1:595:33492  \"contract EntryPoint is...\" */ mload(64)\n                    /// @src 1:9135:9162  \"target.call(targetCallData)\"\n                    let expr_component_2 := call(gas(), value, /** @src -1:-1:-1 */ _2, /** @src 1:9135:9162  \"target.call(targetCallData)\" */ _3, sub(/** @src 1:595:33492  \"contract EntryPoint is...\" */ abi_encode_bytes_calldata_to_bytes_nonPadded_inplace(/** @src 1:9135:9162  \"target.call(targetCallData)\" */ value2, value3, _3), _3), /** @src -1:-1:-1 */ _2, _2)\n                    /// @src 1:9103:9162  \"(targetSuccess, targetResult) = target.call(targetCallData)\"\n                    var_targetResult_mpos := /** @src 1:9135:9162  \"target.call(targetCallData)\" */ extract_returndata()\n                    /// @src 1:9103:9162  \"(targetSuccess, targetResult) = target.call(targetCallData)\"\n                    var_targetSuccess := expr_component_2\n                }\n                /// @src 1:595:33492  \"contract EntryPoint is...\"\n                let _4 := mload(/** @src 1:9218:9233  \"opInfo.preOpGas\" */ add(zero_struct_UserOpInfo_memory_ptr_mpos, 128))\n                /// @src 1:9265:9280  \"data.validAfter\"\n                let _5 := /** @src 1:595:33492  \"contract EntryPoint is...\" */ cleanup_uint48(mload(/** @src 1:9265:9280  \"data.validAfter\" */ add(expr_mpos, /** @src 1:595:33492  \"contract EntryPoint is...\" */ 32)))\n                /// @src 1:9294:9309  \"data.validUntil\"\n                let _6 := /** @src 1:595:33492  \"contract EntryPoint is...\" */ cleanup_uint48(mload(/** @src 1:9294:9309  \"data.validUntil\" */ add(expr_mpos, /** @src 1:595:33492  \"contract EntryPoint is...\" */ 64)))\n                /// @src 1:9189:9372  \"ExecutionResult(...\"\n                let _7 := /** @src 1:595:33492  \"contract EntryPoint is...\" */ mload(64)\n                /// @src 1:9189:9372  \"ExecutionResult(...\"\n                mstore(_7, shl(231, 0x0116f593))\n                revert(_7, sub(abi_encode_uint256_uint256_uint48_uint48_bool_bytes(add(_7, /** @src 1:595:33492  \"contract EntryPoint is...\" */ 4), /** @src 1:9189:9372  \"ExecutionResult(...\" */ _4, expr, _5, _6, var_targetSuccess, var_targetResult_mpos), _7))\n            }\n            /// @src 1:595:33492  \"contract EntryPoint is...\"\n            function external_fun_simulateValidation()\n            {\n                if callvalue() { revert(0, 0) }\n                let _1 := abi_decode_struct_UserOperation_calldata_19808(calldatasize())\n                /// @src 1:13953:13980  \"UserOpInfo memory outOpInfo\"\n                let zero_struct_UserOpInfo_mpos := /** @src 1:595:33492  \"contract EntryPoint is...\" */ allocate_and_zero_memory_struct_struct_UserOpInfo()\n                /// @src 1:14018:14024  \"userOp\"\n                fun_simulationOnlyValidations(_1)\n                /// @src 1:14129:14170  \"_validatePrepayment(0, userOp, outOpInfo)\"\n                let expr_component, expr_component_1 := fun_validatePrepayment_19814(_1, zero_struct_UserOpInfo_mpos)\n                /// @src 1:14213:14277  \"_getStakeInfo(...\"\n                let expr_mpos := fun_getStakeInfo(/** @src 1:14240:14267  \"outOpInfo.mUserOp.paymaster\" */ read_from_memoryt_address(add(/** @src 1:14240:14257  \"outOpInfo.mUserOp\" */ mload(zero_struct_UserOpInfo_mpos), /** @src 1:14240:14267  \"outOpInfo.mUserOp.paymaster\" */ 160)))\n                /// @src 1:14317:14356  \"_getStakeInfo(outOpInfo.mUserOp.sender)\"\n                let expr_mpos_1 := fun_getStakeInfo(/** @src 1:14331:14355  \"outOpInfo.mUserOp.sender\" */ read_from_memoryt_address(/** @src 1:14331:14348  \"outOpInfo.mUserOp\" */ mload(zero_struct_UserOpInfo_mpos)))\n                /// @src 1:595:33492  \"contract EntryPoint is...\"\n                pop(allocate_and_zero_memory_struct_struct_StakeInfo())\n                /// @src 1:14444:14459  \"userOp.initCode\"\n                let _2 := 64\n                let expr_offset, expr_length := access_calldata_tail_bytes_calldata(_1, add(_1, _2))\n                /// @src 1:14491:14592  \"initCode.length >= 20...\"\n                let expr := /** @src -1:-1:-1 */ 0\n                /// @src 1:14491:14592  \"initCode.length >= 20...\"\n                switch /** @src 1:14491:14512  \"initCode.length >= 20\" */ iszero(lt(expr_length, /** @src 1:14510:14512  \"20\" */ 0x14))\n                case /** @src 1:14491:14592  \"initCode.length >= 20...\" */ 0 {\n                    expr := /** @src -1:-1:-1 */ expr\n                }\n                default /// @src 1:14491:14592  \"initCode.length >= 20...\"\n                {\n                    /// @src 1:14547:14561  \"initCode[0:20]\"\n                    let expr_offset_1, expr_length_1 := calldata_array_index_range_access_bytes_calldata(expr_offset, expr_length)\n                    /// @src 1:14491:14592  \"initCode.length >= 20...\"\n                    expr := /** @src 1:14531:14563  \"address(bytes20(initCode[0:20]))\" */ convert_bytes20_to_address(/** @src 1:14539:14562  \"bytes20(initCode[0:20])\" */ convert_bytes_to_fixedbytes_from_bytes_calldata_to_bytes20(expr_offset_1, expr_length_1))\n                }\n                /// @src 1:14620:14642  \"_getStakeInfo(factory)\"\n                let expr_mpos_2 := fun_getStakeInfo(expr)\n                /// @src 1:14692:14786  \"_intersectTimeRange(...\"\n                let expr_mpos_3 := fun_intersectTimeRange(expr_component, expr_component_1)\n                /// @src 1:14817:14832  \"data.aggregator\"\n                let _3 := /** @src 1:595:33492  \"contract EntryPoint is...\" */ cleanup_address(mload(/** @src 1:14817:14832  \"data.aggregator\" */ expr_mpos_3))\n                /// @src 1:14859:14883  \"aggregator == address(1)\"\n                let _4 := /** @src 1:595:33492  \"contract EntryPoint is...\" */ and(/** @src 1:14859:14883  \"aggregator == address(1)\" */ _3, /** @src 1:595:33492  \"contract EntryPoint is...\" */ sub(shl(160, 1), 1))\n                /// @src 1:14859:14883  \"aggregator == address(1)\"\n                let expr_1 := eq(_4, /** @src 1:14881:14882  \"1\" */ 0x01)\n                /// @src 1:595:33492  \"contract EntryPoint is...\"\n                let _5 := mload(/** @src 1:14948:14966  \"outOpInfo.preOpGas\" */ add(zero_struct_UserOpInfo_mpos, 128))\n                /// @src 1:595:33492  \"contract EntryPoint is...\"\n                let _6 := mload(/** @src 1:14980:14997  \"outOpInfo.prefund\" */ add(zero_struct_UserOpInfo_mpos, /** @src 1:14444:14459  \"userOp.initCode\" */ _2))\n                /// @src 1:15034:15049  \"data.validAfter\"\n                let _7 := /** @src 1:595:33492  \"contract EntryPoint is...\" */ cleanup_uint48(mload(/** @src 1:15034:15049  \"data.validAfter\" */ add(expr_mpos_3, 32)))\n                /// @src 1:15063:15078  \"data.validUntil\"\n                let _8 := /** @src 1:595:33492  \"contract EntryPoint is...\" */ cleanup_uint48(mload(/** @src 1:15063:15078  \"data.validUntil\" */ add(expr_mpos_3, /** @src 1:14444:14459  \"userOp.initCode\" */ _2)))\n                /// @src 1:595:33492  \"contract EntryPoint is...\"\n                let _9 := mload(/** @src 1:15117:15140  \"outOpInfo.contextOffset\" */ add(zero_struct_UserOpInfo_mpos, 96))\n                /// @src 1:14924:15151  \"ReturnInfo(...\"\n                let expr_mpos_4 := /** @src 1:595:33492  \"contract EntryPoint is...\" */ allocate_memory_19819()\n                mstore(expr_mpos_4, _5)\n                mstore(/** @src 1:14924:15151  \"ReturnInfo(...\" */ add(expr_mpos_4, /** @src 1:15034:15049  \"data.validAfter\" */ 32), /** @src 1:595:33492  \"contract EntryPoint is...\" */ _6)\n                /// @src 1:14924:15151  \"ReturnInfo(...\"\n                write_to_memory_bool(add(expr_mpos_4, /** @src 1:14444:14459  \"userOp.initCode\" */ _2), /** @src 1:14924:15151  \"ReturnInfo(...\" */ expr_1)\n                write_to_memory_uint48(add(expr_mpos_4, /** @src 1:15117:15140  \"outOpInfo.contextOffset\" */ 96), /** @src 1:14924:15151  \"ReturnInfo(...\" */ _7)\n                write_to_memory_uint48(add(expr_mpos_4, /** @src 1:14948:14966  \"outOpInfo.preOpGas\" */ 128), /** @src 1:14924:15151  \"ReturnInfo(...\" */ _8)\n                /// @src 1:595:33492  \"contract EntryPoint is...\"\n                mstore(/** @src 1:14924:15151  \"ReturnInfo(...\" */ add(expr_mpos_4, /** @src 1:14240:14267  \"outOpInfo.mUserOp.paymaster\" */ 160), /** @src 1:595:33492  \"contract EntryPoint is...\" */ _9)\n                /// @src 1:15166:15218  \"aggregator != address(0) && aggregator != address(1)\"\n                let expr_2 := /** @src 1:15166:15190  \"aggregator != address(0)\" */ iszero(iszero(_4))\n                /// @src 1:15166:15218  \"aggregator != address(0) && aggregator != address(1)\"\n                if expr_2\n                {\n                    expr_2 := /** @src 1:15194:15218  \"aggregator != address(1)\" */ iszero(expr_1)\n                }\n                /// @src 1:15162:15607  \"if (aggregator != address(0) && aggregator != address(1)) {...\"\n                if expr_2\n                {\n                    /// @src 1:15343:15368  \"_getStakeInfo(aggregator)\"\n                    let expr_mpos_5 := fun_getStakeInfo(_3)\n                    /// @src 1:15278:15382  \"AggregatorStakeInfo(...\"\n                    let expr_mpos_6 := /** @src 1:595:33492  \"contract EntryPoint is...\" */ allocate_memory_19820()\n                    /// @src 1:15278:15382  \"AggregatorStakeInfo(...\"\n                    write_to_memory_address(expr_mpos_6, _3)\n                    /// @src 1:595:33492  \"contract EntryPoint is...\"\n                    mstore(/** @src 1:15278:15382  \"AggregatorStakeInfo(...\" */ add(expr_mpos_6, /** @src 1:15034:15049  \"data.validAfter\" */ 32), /** @src 1:595:33492  \"contract EntryPoint is...\" */ expr_mpos_5)\n                    /// @src 1:15403:15596  \"ValidationResultWithAggregation(...\"\n                    let _10 := /** @src 1:595:33492  \"contract EntryPoint is...\" */ mload(/** @src 1:14444:14459  \"userOp.initCode\" */ _2)\n                    /// @src 1:15403:15596  \"ValidationResultWithAggregation(...\"\n                    mstore(_10, shl(226, 0x3ebb2d39))\n                    revert(_10, sub(abi_encode_struct_ReturnInfo_struct_StakeInfo_struct_StakeInfo_struct_StakeInfo_struct_AggregatorStakeInfo(add(_10, /** @src 1:595:33492  \"contract EntryPoint is...\" */ 4), /** @src 1:15403:15596  \"ValidationResultWithAggregation(...\" */ expr_mpos_4, expr_mpos_1, expr_mpos_2, expr_mpos, expr_mpos_6), _10))\n                }\n                /// @src 1:15623:15749  \"ValidationResult(...\"\n                let _11 := /** @src 1:595:33492  \"contract EntryPoint is...\" */ mload(/** @src 1:14444:14459  \"userOp.initCode\" */ _2)\n                /// @src 1:15623:15749  \"ValidationResult(...\"\n                mstore(_11, shl(224, 0xe0cff05f))\n                revert(_11, sub(abi_encode_struct_ReturnInfo_struct_StakeInfo_struct_StakeInfo_struct_StakeInfo(add(_11, /** @src 1:595:33492  \"contract EntryPoint is...\" */ 4), /** @src 1:15623:15749  \"ValidationResult(...\" */ expr_mpos_4, expr_mpos_1, expr_mpos_2, expr_mpos), _11))\n            }\n            /// @src 1:595:33492  \"contract EntryPoint is...\"\n            function read_from_storage_split_offset_uint112(slot) -> value\n            {\n                value := and(sload(slot), 0xffffffffffffffffffffffffffff)\n            }\n            function extract_from_storage_value_offsett_bool(slot_value) -> value\n            {\n                value := and(shr(112, slot_value), 0xff)\n            }\n            function extract_from_storage_value_offsett_uint112(slot_value) -> value\n            {\n                value := and(shr(120, slot_value), 0xffffffffffffffffffffffffffff)\n            }\n            function extract_from_storage_value_offsett_uint48(slot_value) -> value\n            {\n                value := and(shr(32, slot_value), 0xffffffffffff)\n            }\n            function external_fun_deposits()\n            {\n                if callvalue() { revert(0, 0) }\n                if slt(add(calldatasize(), not(3)), 32)\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 1:595:33492  \"contract EntryPoint is...\"\n                let value := calldataload(4)\n                validator_revert_address(value)\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 1:595:33492  \"contract EntryPoint is...\" */ and(value, sub(shl(160, 1), 1)))\n                mstore(32, /** @src -1:-1:-1 */ 0)\n                /// @src 1:595:33492  \"contract EntryPoint is...\"\n                let dataSlot := keccak256(/** @src -1:-1:-1 */ 0, /** @src 1:595:33492  \"contract EntryPoint is...\" */ 0x40)\n                let _1 := sload(/** @src 5:504:551  \"mapping(address => DepositInfo) public deposits\" */ dataSlot)\n                /// @src 1:595:33492  \"contract EntryPoint is...\"\n                let _2 := 0xffffffffffffffffffffffffffff\n                let _3 := sload(/** @src 5:504:551  \"mapping(address => DepositInfo) public deposits\" */ add(dataSlot, 1))\n                /// @src 1:595:33492  \"contract EntryPoint is...\"\n                let memPos := mload(0x40)\n                mstore(memPos, and(_1, _2))\n                mstore(add(memPos, 32), iszero(iszero(and(shr(112, _1), 0xff))))\n                mstore(add(memPos, 0x40), and(shr(120, _1), _2))\n                mstore(add(memPos, 96), and(_3, 0xffffffff))\n                mstore(add(memPos, 128), and(shr(32, _3), 0xffffffffffff))\n                return(memPos, 160)\n            }\n            function array_allocation_size_array_struct_UserOpInfo_dyn(length) -> size\n            {\n                if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n                size := add(shl(5, length), 0x20)\n            }\n            function allocate_and_zero_memory_struct_struct_UserOpInfo() -> memPtr\n            {\n                let memPtr_1 := mload(64)\n                finalize_allocation_19805(memPtr_1)\n                memPtr := memPtr_1\n                let memPtr_2 := mload(64)\n                let newFreePtr := add(memPtr_2, 256)\n                if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr_2)) { panic_error_0x41() }\n                mstore(64, newFreePtr)\n                /// @src -1:-1:-1\n                let _1 := 0\n                /// @src 1:595:33492  \"contract EntryPoint is...\"\n                mstore(memPtr_2, /** @src -1:-1:-1 */ _1)\n                /// @src 1:595:33492  \"contract EntryPoint is...\"\n                mstore(add(memPtr_2, 32), /** @src -1:-1:-1 */ _1)\n                /// @src 1:595:33492  \"contract EntryPoint is...\"\n                mstore(add(memPtr_2, 64), /** @src -1:-1:-1 */ _1)\n                /// @src 1:595:33492  \"contract EntryPoint is...\"\n                mstore(add(memPtr_2, 96), /** @src -1:-1:-1 */ _1)\n                /// @src 1:595:33492  \"contract EntryPoint is...\"\n                mstore(add(memPtr_2, 128), /** @src -1:-1:-1 */ _1)\n                /// @src 1:595:33492  \"contract EntryPoint is...\"\n                mstore(add(memPtr_2, 160), /** @src -1:-1:-1 */ _1)\n                /// @src 1:595:33492  \"contract EntryPoint is...\"\n                mstore(add(memPtr_2, 192), /** @src -1:-1:-1 */ _1)\n                /// @src 1:595:33492  \"contract EntryPoint is...\"\n                mstore(add(memPtr_2, 224), /** @src -1:-1:-1 */ _1)\n                /// @src 1:595:33492  \"contract EntryPoint is...\"\n                mstore(memPtr_1, memPtr_2)\n                mstore(add(memPtr_1, 32), /** @src -1:-1:-1 */ _1)\n                /// @src 1:595:33492  \"contract EntryPoint is...\"\n                mstore(add(memPtr_1, 64), /** @src -1:-1:-1 */ _1)\n                /// @src 1:595:33492  \"contract EntryPoint is...\"\n                mstore(add(memPtr_1, 96), /** @src -1:-1:-1 */ _1)\n                /// @src 1:595:33492  \"contract EntryPoint is...\"\n                mstore(add(memPtr_1, 128), /** @src -1:-1:-1 */ _1)\n            }\n            /// @src 1:595:33492  \"contract EntryPoint is...\"\n            function allocate_and_zero_memory_array_array_struct_UserOpInfo_dyn(length) -> memPtr\n            {\n                let _1 := array_allocation_size_array_struct_UserOpInfo_dyn(length)\n                let memPtr_1 := mload(64)\n                finalize_allocation(memPtr_1, _1)\n                mstore(memPtr_1, length)\n                memPtr := memPtr_1\n                let _2 := add(array_allocation_size_array_struct_UserOpInfo_dyn(length), not(31))\n                let i := /** @src -1:-1:-1 */ 0\n                /// @src 1:595:33492  \"contract EntryPoint is...\"\n                for { } lt(i, _2) { i := add(i, 32) }\n                {\n                    mstore(add(add(memPtr_1, i), 32), allocate_and_zero_memory_struct_struct_UserOpInfo())\n                }\n            }\n            function require_helper_stringliteral_21d7(condition)\n            {\n                if iszero(condition)\n                {\n                    let memPtr := mload(64)\n                    mstore(memPtr, shl(229, 4594637))\n                    mstore(add(memPtr, 4), 32)\n                    mstore(add(memPtr, 36), 15)\n                    mstore(add(memPtr, 68), \"value nhu cut 1\")\n                    revert(memPtr, 100)\n                }\n            }\n            function require_helper_stringliteral_4d9e(condition)\n            {\n                if iszero(condition)\n                {\n                    let memPtr := mload(64)\n                    mstore(memPtr, shl(229, 4594637))\n                    mstore(add(memPtr, 4), 32)\n                    mstore(add(memPtr, 36), 15)\n                    mstore(add(memPtr, 68), \"value nhu cut 2\")\n                    revert(memPtr, 100)\n                }\n            }\n            function panic_error_0x32()\n            {\n                mstore(0, shl(224, 0x4e487b71))\n                mstore(4, 0x32)\n                revert(0, 0x24)\n            }\n            function memory_array_index_access_struct_UserOpInfo_dyn(baseRef, index) -> addr\n            {\n                if iszero(lt(index, mload(baseRef))) { panic_error_0x32() }\n                addr := add(add(baseRef, shl(5, index)), 32)\n            }\n            function calldata_array_index_access_struct_UserOperation_calldata_dyn_calldata(base_ref, length, index) -> addr\n            {\n                if iszero(lt(index, length)) { panic_error_0x32() }\n                let rel_offset_of_tail := calldataload(add(base_ref, shl(5, index)))\n                if iszero(slt(rel_offset_of_tail, add(sub(calldatasize(), base_ref), not(350))))\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 1:595:33492  \"contract EntryPoint is...\"\n                addr := add(base_ref, rel_offset_of_tail)\n            }\n            function require_helper_stringliteral_13c6(condition)\n            {\n                if iszero(condition)\n                {\n                    let memPtr := mload(64)\n                    mstore(memPtr, shl(229, 4594637))\n                    mstore(add(memPtr, 4), 32)\n                    mstore(add(memPtr, 36), 16)\n                    mstore(add(memPtr, 68), \"value nhu cut 16\")\n                    revert(memPtr, 100)\n                }\n            }\n            function require_helper_stringliteral_7ebb(condition)\n            {\n                if iszero(condition)\n                {\n                    let memPtr := mload(64)\n                    mstore(memPtr, shl(229, 4594637))\n                    mstore(add(memPtr, 4), 32)\n                    mstore(add(memPtr, 36), 16)\n                    mstore(add(memPtr, 68), \"value nhu cut 23\")\n                    revert(memPtr, 100)\n                }\n            }\n            function require_helper_stringliteral_243e(condition)\n            {\n                if iszero(condition)\n                {\n                    let memPtr := mload(64)\n                    mstore(memPtr, shl(229, 4594637))\n                    mstore(add(memPtr, 4), 32)\n                    mstore(add(memPtr, 36), 16)\n                    mstore(add(memPtr, 68), \"value nhu cut 24\")\n                    revert(memPtr, 100)\n                }\n            }\n            function require_helper_stringliteral_dccb(condition)\n            {\n                if iszero(condition)\n                {\n                    let memPtr := mload(64)\n                    mstore(memPtr, shl(229, 4594637))\n                    mstore(add(memPtr, 4), 32)\n                    mstore(add(memPtr, 36), 16)\n                    mstore(add(memPtr, 68), \"value nhu cut 19\")\n                    revert(memPtr, 100)\n                }\n            }\n            /// @ast-id 44 @src 0:2336:2623  \"function _nonReentrantBefore() private {...\"\n            function fun_nonReentrantBefore()\n            {\n                /// @src 0:1759:1760  \"2\"\n                if /** @src 0:2468:2487  \"_status != _ENTERED\" */ eq(/** @src 1:595:33492  \"contract EntryPoint is...\" */ sload(/** @src 0:2468:2475  \"_status\" */ 0x02), 0x02)\n                /// @src 0:1759:1760  \"2\"\n                {\n                    let memPtr := /** @src 1:595:33492  \"contract EntryPoint is...\" */ mload(64)\n                    /// @src 0:1759:1760  \"2\"\n                    mstore(memPtr, /** @src 1:595:33492  \"contract EntryPoint is...\" */ shl(229, 4594637))\n                    /// @src 0:1759:1760  \"2\"\n                    mstore(add(memPtr, 4), 32)\n                    /// @src 1:595:33492  \"contract EntryPoint is...\"\n                    mstore(/** @src 0:1759:1760  \"2\" */ add(memPtr, 36), 31)\n                    mstore(/** @src 1:595:33492  \"contract EntryPoint is...\" */ add(/** @src 0:1759:1760  \"2\" */ memPtr, /** @src 1:595:33492  \"contract EntryPoint is...\" */ 68), /** @src 0:1759:1760  \"2\" */ \"ReentrancyGuard: reentrant call\")\n                    revert(memPtr, 100)\n                }\n                sstore(/** @src 0:2468:2475  \"_status\" */ 0x02, 0x02)\n            }\n            /// @ast-id 52 @src 0:2629:2838  \"function _nonReentrantAfter() private {...\"\n            function fun_nonReentrantAfter()\n            {\n                /// @src 0:1759:1760  \"2\"\n                sstore(/** @src 0:2809:2831  \"_status = _NOT_ENTERED\" */ 0x02, /** @src 1:1353:1354  \"1\" */ 0x01)\n            }\n            /// @src 1:595:33492  \"contract EntryPoint is...\"\n            function extract_returndata() -> data\n            {\n                switch returndatasize()\n                case 0 { data := 96 }\n                default {\n                    let _1 := returndatasize()\n                    let _2 := array_allocation_size_bytes(_1)\n                    let memPtr := mload(64)\n                    finalize_allocation(memPtr, _2)\n                    mstore(memPtr, _1)\n                    data := memPtr\n                    returndatacopy(add(memPtr, 0x20), /** @src -1:-1:-1 */ 0, /** @src 1:595:33492  \"contract EntryPoint is...\" */ returndatasize())\n                }\n            }\n            /// @ast-id 132 @src 1:1574:1853  \"function _compensate(address payable beneficiary, uint256 amount) internal {...\"\n            function fun_compensate(var_beneficiary, var_amount)\n            {\n                /// @src 1:595:33492  \"contract EntryPoint is...\"\n                let _1 := and(/** @src 1:1667:1692  \"beneficiary != address(0)\" */ var_beneficiary, /** @src 1:595:33492  \"contract EntryPoint is...\" */ sub(shl(160, 1), 1))\n                if /** @src 1:1667:1692  \"beneficiary != address(0)\" */ iszero(_1)\n                /// @src 1:595:33492  \"contract EntryPoint is...\"\n                {\n                    let memPtr := mload(64)\n                    mstore(memPtr, shl(229, 4594637))\n                    mstore(add(memPtr, 4), 32)\n                    mstore(add(memPtr, 36), 24)\n                    mstore(add(memPtr, 68), \"AA90 invalid beneficiary\")\n                    revert(memPtr, 100)\n                }\n                /// @src 1:1750:1785  \"beneficiary.call{value: amount}(\\\"\\\")\"\n                let expr_124_component := call(gas(), _1, var_amount, /** @src 1:1690:1691  \"0\" */ 0x00, 0x00, 0x00, 0x00)\n                /// @src 1:1750:1785  \"beneficiary.call{value: amount}(\\\"\\\")\"\n                pop(extract_returndata())\n                /// @src 1:595:33492  \"contract EntryPoint is...\"\n                if iszero(expr_124_component)\n                {\n                    let memPtr_1 := mload(64)\n                    mstore(memPtr_1, shl(229, 4594637))\n                    mstore(add(memPtr_1, 4), 32)\n                    mstore(add(memPtr_1, 36), 31)\n                    mstore(add(memPtr_1, 68), \"AA91 failed send to beneficiary\")\n                    revert(memPtr_1, 100)\n                }\n            }\n            function require_helper_stringliteral_ce35(condition)\n            {\n                if iszero(condition)\n                {\n                    let memPtr := mload(64)\n                    mstore(memPtr, shl(229, 4594637))\n                    mstore(add(memPtr, 4), 32)\n                    mstore(add(memPtr, 36), 16)\n                    mstore(add(memPtr, 68), \"value nhu cut 25\")\n                    revert(memPtr, 100)\n                }\n            }\n            function require_helper_stringliteral_ceaa(condition)\n            {\n                if iszero(condition)\n                {\n                    let memPtr := mload(64)\n                    mstore(memPtr, shl(229, 4594637))\n                    mstore(add(memPtr, 4), 32)\n                    mstore(add(memPtr, 36), 16)\n                    mstore(add(memPtr, 68), \"value nhu cut 26\")\n                    revert(memPtr, 100)\n                }\n            }\n            function access_calldata_tail_bytes_calldata(base_ref, ptr_to_tail) -> addr, length\n            {\n                let rel_offset_of_tail := calldataload(ptr_to_tail)\n                if iszero(slt(rel_offset_of_tail, add(sub(calldatasize(), base_ref), not(30)))) { revert(0, 0) }\n                let addr_1 := add(base_ref, rel_offset_of_tail)\n                length := calldataload(addr_1)\n                if gt(length, 0xffffffffffffffff) { revert(0, 0) }\n                addr := add(addr_1, 0x20)\n                if sgt(addr, sub(calldatasize(), length)) { revert(0, 0) }\n            }\n            function abi_decode_uint256_fromMemory(headStart, dataEnd) -> value0\n            {\n                if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n                value0 := mload(headStart)\n            }\n            function abi_encode_bytes_calldata_to_bytes(start, length, pos) -> end\n            {\n                mstore(pos, length)\n                calldatacopy(add(pos, 0x20), start, length)\n                mstore(add(add(pos, length), 0x20), /** @src -1:-1:-1 */ 0)\n                /// @src 1:595:33492  \"contract EntryPoint is...\"\n                end := add(add(pos, and(add(length, 31), not(31))), 0x20)\n            }\n            function abi_encode_address_to_address(value, pos)\n            {\n                mstore(pos, and(value, sub(shl(160, 1), 1)))\n            }\n            function copy_memory_to_memory_with_cleanup(src, dst, length)\n            {\n                let i := 0\n                for { } lt(i, length) { i := add(i, 32) }\n                {\n                    mstore(add(dst, i), mload(add(src, i)))\n                }\n                mstore(add(dst, length), 0)\n            }\n            function abi_encode_bytes(value, pos) -> end\n            {\n                let length := mload(value)\n                mstore(pos, length)\n                copy_memory_to_memory_with_cleanup(add(value, 0x20), add(pos, 0x20), length)\n                end := add(add(pos, and(add(length, 31), not(31))), 0x20)\n            }\n            function abi_encode_bytes_calldata_struct_UserOpInfo_bytes(headStart, value0, value1, value2, value3) -> tail\n            {\n                let _1 := 448\n                mstore(headStart, _1)\n                let tail_1 := abi_encode_bytes_calldata_to_bytes(value0, value1, add(headStart, _1))\n                let _2 := mload(value2)\n                let _3 := sub(shl(160, 1), 1)\n                mstore(add(headStart, 32), and(mload(_2), _3))\n                mstore(add(headStart, 64), mload(add(_2, 32)))\n                mstore(add(headStart, 96), mload(add(_2, 64)))\n                mstore(add(headStart, 128), mload(add(_2, 96)))\n                mstore(add(headStart, 160), mload(add(_2, 128)))\n                mstore(add(headStart, 192), and(mload(add(_2, 160)), _3))\n                mstore(add(headStart, 224), mload(add(_2, 192)))\n                mstore(add(headStart, 256), mload(add(_2, 224)))\n                mstore(add(headStart, 288), mload(add(value2, 32)))\n                mstore(add(headStart, 320), mload(add(value2, 64)))\n                mstore(add(headStart, 352), mload(add(value2, 96)))\n                mstore(add(headStart, 384), mload(add(value2, 128)))\n                mstore(add(headStart, 416), sub(tail_1, headStart))\n                tail := abi_encode_bytes(value3, tail_1)\n            }\n            function revert_forward()\n            {\n                let pos := mload(64)\n                returndatacopy(pos, 0, returndatasize())\n                revert(pos, returndatasize())\n            }\n            function require_helper_stringliteral_d5d0(condition)\n            {\n                if iszero(condition)\n                {\n                    let memPtr := mload(64)\n                    mstore(memPtr, shl(229, 4594637))\n                    mstore(add(memPtr, 4), 32)\n                    mstore(add(memPtr, 36), 16)\n                    mstore(add(memPtr, 68), \"value nhu cut 27\")\n                    revert(memPtr, 100)\n                }\n            }\n            function require_helper_stringliteral_e6c9(condition)\n            {\n                if iszero(condition)\n                {\n                    let memPtr := mload(64)\n                    mstore(memPtr, shl(229, 4594637))\n                    mstore(add(memPtr, 4), 32)\n                    mstore(add(memPtr, 36), 16)\n                    mstore(add(memPtr, 68), \"value nhu cut 28\")\n                    revert(memPtr, 100)\n                }\n            }\n            /// @src 1:1053:1066  \"hex\\\"deaddead\\\"\"\n            function abi_encode_uint256_stringliteral_eb8a_29533(headStart) -> tail\n            {\n                /// @src 1:595:33492  \"contract EntryPoint is...\"\n                mstore(headStart, /** @src -1:-1:-1 */ 0)\n                /// @src 1:1053:1066  \"hex\\\"deaddead\\\"\"\n                mstore(add(headStart, 32), 64)\n                /// @src 1:595:33492  \"contract EntryPoint is...\"\n                mstore(/** @src 1:1053:1066  \"hex\\\"deaddead\\\"\" */ add(headStart, 64), 15)\n                mstore(/** @src 1:595:33492  \"contract EntryPoint is...\" */ add(/** @src 1:1053:1066  \"hex\\\"deaddead\\\"\" */ headStart, /** @src 1:595:33492  \"contract EntryPoint is...\" */ 96), /** @src 1:1053:1066  \"hex\\\"deaddead\\\"\" */ \"AA95 out of gas\")\n                tail := add(headStart, 128)\n            }\n            function abi_encode_uint256_stringliteral_eb8a(headStart, value0) -> tail\n            {\n                /// @src 1:595:33492  \"contract EntryPoint is...\"\n                mstore(headStart, value0)\n                /// @src 1:1053:1066  \"hex\\\"deaddead\\\"\"\n                mstore(add(headStart, 32), 64)\n                /// @src 1:595:33492  \"contract EntryPoint is...\"\n                mstore(/** @src 1:1053:1066  \"hex\\\"deaddead\\\"\" */ add(headStart, 64), 15)\n                mstore(/** @src 1:595:33492  \"contract EntryPoint is...\" */ add(/** @src 1:1053:1066  \"hex\\\"deaddead\\\"\" */ headStart, /** @src 1:595:33492  \"contract EntryPoint is...\" */ 96), /** @src 1:1053:1066  \"hex\\\"deaddead\\\"\" */ \"AA95 out of gas\")\n                tail := add(headStart, 128)\n            }\n            function require_helper_stringliteral_b372(condition)\n            {\n                if iszero(condition)\n                {\n                    let memPtr := /** @src 1:595:33492  \"contract EntryPoint is...\" */ mload(64)\n                    /// @src 1:1053:1066  \"hex\\\"deaddead\\\"\"\n                    mstore(memPtr, /** @src 1:595:33492  \"contract EntryPoint is...\" */ shl(229, 4594637))\n                    /// @src 1:1053:1066  \"hex\\\"deaddead\\\"\"\n                    mstore(add(memPtr, 4), 32)\n                    /// @src 1:595:33492  \"contract EntryPoint is...\"\n                    mstore(/** @src 1:1053:1066  \"hex\\\"deaddead\\\"\" */ add(memPtr, 36), 16)\n                    mstore(/** @src 1:595:33492  \"contract EntryPoint is...\" */ add(/** @src 1:1053:1066  \"hex\\\"deaddead\\\"\" */ memPtr, /** @src 1:595:33492  \"contract EntryPoint is...\" */ 68), /** @src 1:1053:1066  \"hex\\\"deaddead\\\"\" */ \"value nhu cut 29\")\n                    revert(memPtr, 100)\n                }\n            }\n            function panic_error_0x11()\n            {\n                mstore(0, /** @src 1:595:33492  \"contract EntryPoint is...\" */ shl(224, 0x4e487b71))\n                /// @src 1:1053:1066  \"hex\\\"deaddead\\\"\"\n                mstore(4, 0x11)\n                revert(0, 0x24)\n            }\n            function checked_sub_uint256(x, y) -> diff\n            {\n                diff := sub(x, y)\n                if gt(diff, x) { panic_error_0x11() }\n            }\n            function checked_add_uint256(x, y) -> sum\n            {\n                sum := add(x, y)\n                if gt(x, sum) { panic_error_0x11() }\n            }\n            function require_helper_stringliteral_fcdb(condition)\n            {\n                if iszero(condition)\n                {\n                    let memPtr := /** @src 1:595:33492  \"contract EntryPoint is...\" */ mload(64)\n                    /// @src 1:1053:1066  \"hex\\\"deaddead\\\"\"\n                    mstore(memPtr, /** @src 1:595:33492  \"contract EntryPoint is...\" */ shl(229, 4594637))\n                    /// @src 1:1053:1066  \"hex\\\"deaddead\\\"\"\n                    mstore(add(memPtr, 4), 32)\n                    /// @src 1:595:33492  \"contract EntryPoint is...\"\n                    mstore(/** @src 1:1053:1066  \"hex\\\"deaddead\\\"\" */ add(memPtr, 36), 16)\n                    mstore(/** @src 1:595:33492  \"contract EntryPoint is...\" */ add(/** @src 1:1053:1066  \"hex\\\"deaddead\\\"\" */ memPtr, /** @src 1:595:33492  \"contract EntryPoint is...\" */ 68), /** @src 1:1053:1066  \"hex\\\"deaddead\\\"\" */ \"value nhu cut 30\")\n                    revert(memPtr, 100)\n                }\n            }\n            /// @ast-id 262 @src 1:2131:3743  \"function _executeUserOp(...\"\n            function fun_executeUserOp_19815(var_userOp_offset, var_opInfo_mpos) -> var_collected\n            {\n                /// @src 1:2322:2331  \"gasleft()\"\n                let expr := gas()\n                /// @src 1:2341:2384  \"require(msg.value > 25, \\\"value nhu cut 25\\\")\"\n                require_helper_stringliteral_ce35(/** @src 1:2349:2363  \"msg.value > 25\" */ gt(/** @src 1:2349:2358  \"msg.value\" */ callvalue(), /** @src 1:2361:2363  \"25\" */ 0x19))\n                /// @src 1:595:33492  \"contract EntryPoint is...\"\n                let _1 := mload(/** @src 1:2442:2462  \"opInfo.contextOffset\" */ add(var_opInfo_mpos, 96))\n                /// @src 1:2473:2516  \"require(msg.value > 26, \\\"value nhu cut 26\\\")\"\n                require_helper_stringliteral_ceaa(/** @src 1:2481:2495  \"msg.value > 26\" */ gt(/** @src 1:2349:2358  \"msg.value\" */ callvalue(), /** @src 1:2493:2495  \"26\" */ 0x1a))\n                /// @src 1:2550:2565  \"userOp.callData\"\n                let expr_offset, expr_length := access_calldata_tail_bytes_calldata(var_userOp_offset, add(var_userOp_offset, /** @src 1:2442:2462  \"opInfo.contextOffset\" */ 96))\n                /// @src 1:2531:2583  \"this.innerHandleOp(userOp.callData, opInfo, context)\"\n                let _2 := /** @src 1:595:33492  \"contract EntryPoint is...\" */ mload(64)\n                /// @src 1:2531:2583  \"this.innerHandleOp(userOp.callData, opInfo, context)\"\n                mstore(_2, /** @src 1:595:33492  \"contract EntryPoint is...\" */ shl(225, 0x0eb993ab))\n                /// @src 1:2531:2583  \"this.innerHandleOp(userOp.callData, opInfo, context)\"\n                let _3 := sub(abi_encode_bytes_calldata_struct_UserOpInfo_bytes(add(_2, 4), expr_offset, expr_length, var_opInfo_mpos, _1), _2)\n                let trySuccessCondition := call(gas(), /** @src 1:2531:2535  \"this\" */ address(), /** @src -1:-1:-1 */ 0, /** @src 1:2531:2583  \"this.innerHandleOp(userOp.callData, opInfo, context)\" */ _2, _3, _2, 32)\n                let expr_1 := /** @src -1:-1:-1 */ 0\n                /// @src 1:2531:2583  \"this.innerHandleOp(userOp.callData, opInfo, context)\"\n                if trySuccessCondition\n                {\n                    let _4 := 32\n                    if gt(_4, returndatasize()) { _4 := returndatasize() }\n                    finalize_allocation(_2, _4)\n                    expr_1 := abi_decode_uint256_fromMemory(_2, add(_2, _4))\n                }\n                /// @src 1:2527:3737  \"try this.innerHandleOp(userOp.callData, opInfo, context) returns (...\"\n                switch iszero(trySuccessCondition)\n                case 0 {\n                    /// @src 1:2653:2696  \"require(msg.value > 27, \\\"value nhu cut 27\\\")\"\n                    require_helper_stringliteral_d5d0(/** @src 1:2661:2675  \"msg.value > 27\" */ gt(/** @src 1:2349:2358  \"msg.value\" */ callvalue(), /** @src 1:2673:2675  \"27\" */ 0x1b))\n                    /// @src 1:2711:2737  \"collected = _actualGasCost\"\n                    var_collected := expr_1\n                }\n                default /// @src 1:2527:3737  \"try this.innerHandleOp(userOp.callData, opInfo, context) returns (...\"\n                {\n                    /// @src 1:2769:2812  \"require(msg.value > 28, \\\"value nhu cut 28\\\")\"\n                    require_helper_stringliteral_e6c9(/** @src 1:2777:2791  \"msg.value > 28\" */ gt(/** @src 1:2349:2358  \"msg.value\" */ callvalue(), /** @src 1:2789:2791  \"28\" */ 0x1c))\n                    /// @src 1:2863:2972  \"assembly {...\"\n                    returndatacopy(/** @src -1:-1:-1 */ 0, 0, /** @src 1:2531:2583  \"this.innerHandleOp(userOp.callData, opInfo, context)\" */ 32)\n                    /// @src 1:3066:3334  \"if (innerRevertCode == INNER_OUT_OF_GAS) {...\"\n                    if /** @src 1:3070:3105  \"innerRevertCode == INNER_OUT_OF_GAS\" */ eq(/** @src 1:2863:2972  \"assembly {...\" */ mload(/** @src -1:-1:-1 */ 0), /** @src 1:595:33492  \"contract EntryPoint is...\" */ shl(224, 0xdeaddead))\n                    /// @src 1:3066:3334  \"if (innerRevertCode == INNER_OUT_OF_GAS) {...\"\n                    {\n                        /// @src 1:3283:3319  \"FailedOp(opIndex, \\\"AA95 out of gas\\\")\"\n                        let _5 := /** @src 1:595:33492  \"contract EntryPoint is...\" */ mload(64)\n                        /// @src 1:3283:3319  \"FailedOp(opIndex, \\\"AA95 out of gas\\\")\"\n                        mstore(_5, shl(225, 0x1101335b))\n                        revert(_5, sub(abi_encode_uint256_stringliteral_eb8a_29533(add(_5, /** @src 1:2531:2583  \"this.innerHandleOp(userOp.callData, opInfo, context)\" */ 4)), /** @src 1:3283:3319  \"FailedOp(opIndex, \\\"AA95 out of gas\\\")\" */ _5))\n                    }\n                    /// @src 1:3347:3390  \"require(msg.value > 29, \\\"value nhu cut 29\\\")\"\n                    require_helper_stringliteral_b372(/** @src 1:3355:3369  \"msg.value > 29\" */ gt(/** @src 1:2349:2358  \"msg.value\" */ callvalue(), /** @src 1:3367:3369  \"29\" */ 0x1d))\n                    /// @src 1:3425:3443  \"preGas - gasleft()\"\n                    let expr_2 := checked_sub_uint256(expr, /** @src 1:3434:3443  \"gasleft()\" */ gas())\n                    /// @src 1:3475:3669  \"collected = _handlePostOp(...\"\n                    var_collected := /** @src 1:3487:3669  \"_handlePostOp(...\" */ fun_handlePostOp(var_opInfo_mpos, _1, /** @src 1:3425:3461  \"preGas - gasleft() + opInfo.preOpGas\" */ checked_add_uint256(expr_2, /** @src 1:595:33492  \"contract EntryPoint is...\" */ mload(/** @src 1:3446:3461  \"opInfo.preOpGas\" */ add(var_opInfo_mpos, 128))))\n                    /// @src 1:3683:3726  \"require(msg.value > 30, \\\"value nhu cut 30\\\")\"\n                    require_helper_stringliteral_fcdb(/** @src 1:3691:3705  \"msg.value > 30\" */ gt(/** @src 1:2349:2358  \"msg.value\" */ callvalue(), /** @src 1:3703:3705  \"30\" */ 0x1e))\n                }\n            }\n            /// @ast-id 262 @src 1:2131:3743  \"function _executeUserOp(...\"\n            function fun_executeUserOp(var_opIndex, var_userOp_138_offset, var_opInfo_141_mpos) -> var_collected\n            {\n                /// @src 1:2322:2331  \"gasleft()\"\n                let expr := gas()\n                /// @src 1:2341:2384  \"require(msg.value > 25, \\\"value nhu cut 25\\\")\"\n                require_helper_stringliteral_ce35(/** @src 1:2349:2363  \"msg.value > 25\" */ gt(/** @src 1:2349:2358  \"msg.value\" */ callvalue(), /** @src 1:2361:2363  \"25\" */ 0x19))\n                /// @src 1:595:33492  \"contract EntryPoint is...\"\n                let _1 := mload(/** @src 1:2442:2462  \"opInfo.contextOffset\" */ add(var_opInfo_141_mpos, 96))\n                /// @src 1:2473:2516  \"require(msg.value > 26, \\\"value nhu cut 26\\\")\"\n                require_helper_stringliteral_ceaa(/** @src 1:2481:2495  \"msg.value > 26\" */ gt(/** @src 1:2349:2358  \"msg.value\" */ callvalue(), /** @src 1:2493:2495  \"26\" */ 0x1a))\n                /// @src 1:2550:2565  \"userOp.callData\"\n                let expr_177_offset, expr_177_length := access_calldata_tail_bytes_calldata(var_userOp_138_offset, add(var_userOp_138_offset, /** @src 1:2442:2462  \"opInfo.contextOffset\" */ 96))\n                /// @src 1:2531:2583  \"this.innerHandleOp(userOp.callData, opInfo, context)\"\n                let _2 := /** @src 1:595:33492  \"contract EntryPoint is...\" */ mload(64)\n                /// @src 1:2531:2583  \"this.innerHandleOp(userOp.callData, opInfo, context)\"\n                mstore(_2, /** @src 1:595:33492  \"contract EntryPoint is...\" */ shl(225, 0x0eb993ab))\n                /// @src 1:2531:2583  \"this.innerHandleOp(userOp.callData, opInfo, context)\"\n                let _3 := sub(abi_encode_bytes_calldata_struct_UserOpInfo_bytes(add(_2, 4), expr_177_offset, expr_177_length, var_opInfo_141_mpos, _1), _2)\n                let trySuccessCondition := call(gas(), /** @src 1:2531:2535  \"this\" */ address(), /** @src -1:-1:-1 */ 0, /** @src 1:2531:2583  \"this.innerHandleOp(userOp.callData, opInfo, context)\" */ _2, _3, _2, 32)\n                let expr_1 := /** @src -1:-1:-1 */ 0\n                /// @src 1:2531:2583  \"this.innerHandleOp(userOp.callData, opInfo, context)\"\n                if trySuccessCondition\n                {\n                    let _4 := 32\n                    if gt(_4, returndatasize()) { _4 := returndatasize() }\n                    finalize_allocation(_2, _4)\n                    expr_1 := abi_decode_uint256_fromMemory(_2, add(_2, _4))\n                }\n                /// @src 1:2527:3737  \"try this.innerHandleOp(userOp.callData, opInfo, context) returns (...\"\n                switch iszero(trySuccessCondition)\n                case 0 {\n                    /// @src 1:2653:2696  \"require(msg.value > 27, \\\"value nhu cut 27\\\")\"\n                    require_helper_stringliteral_d5d0(/** @src 1:2661:2675  \"msg.value > 27\" */ gt(/** @src 1:2349:2358  \"msg.value\" */ callvalue(), /** @src 1:2673:2675  \"27\" */ 0x1b))\n                    /// @src 1:2711:2737  \"collected = _actualGasCost\"\n                    var_collected := expr_1\n                }\n                default /// @src 1:2527:3737  \"try this.innerHandleOp(userOp.callData, opInfo, context) returns (...\"\n                {\n                    /// @src 1:2769:2812  \"require(msg.value > 28, \\\"value nhu cut 28\\\")\"\n                    require_helper_stringliteral_e6c9(/** @src 1:2777:2791  \"msg.value > 28\" */ gt(/** @src 1:2349:2358  \"msg.value\" */ callvalue(), /** @src 1:2789:2791  \"28\" */ 0x1c))\n                    /// @src 1:2863:2972  \"assembly {...\"\n                    returndatacopy(/** @src -1:-1:-1 */ 0, 0, /** @src 1:2531:2583  \"this.innerHandleOp(userOp.callData, opInfo, context)\" */ 32)\n                    /// @src 1:3066:3334  \"if (innerRevertCode == INNER_OUT_OF_GAS) {...\"\n                    if /** @src 1:3070:3105  \"innerRevertCode == INNER_OUT_OF_GAS\" */ eq(/** @src 1:2863:2972  \"assembly {...\" */ mload(/** @src -1:-1:-1 */ 0), /** @src 1:595:33492  \"contract EntryPoint is...\" */ shl(224, 0xdeaddead))\n                    /// @src 1:3066:3334  \"if (innerRevertCode == INNER_OUT_OF_GAS) {...\"\n                    {\n                        /// @src 1:3283:3319  \"FailedOp(opIndex, \\\"AA95 out of gas\\\")\"\n                        let _5 := /** @src 1:595:33492  \"contract EntryPoint is...\" */ mload(64)\n                        /// @src 1:3283:3319  \"FailedOp(opIndex, \\\"AA95 out of gas\\\")\"\n                        mstore(_5, shl(225, 0x1101335b))\n                        revert(_5, sub(abi_encode_uint256_stringliteral_eb8a(add(_5, /** @src 1:2531:2583  \"this.innerHandleOp(userOp.callData, opInfo, context)\" */ 4), /** @src 1:3283:3319  \"FailedOp(opIndex, \\\"AA95 out of gas\\\")\" */ var_opIndex), _5))\n                    }\n                    /// @src 1:3347:3390  \"require(msg.value > 29, \\\"value nhu cut 29\\\")\"\n                    require_helper_stringliteral_b372(/** @src 1:3355:3369  \"msg.value > 29\" */ gt(/** @src 1:2349:2358  \"msg.value\" */ callvalue(), /** @src 1:3367:3369  \"29\" */ 0x1d))\n                    /// @src 1:3425:3443  \"preGas - gasleft()\"\n                    let expr_2 := checked_sub_uint256(expr, /** @src 1:3434:3443  \"gasleft()\" */ gas())\n                    /// @src 1:3475:3669  \"collected = _handlePostOp(...\"\n                    var_collected := /** @src 1:3487:3669  \"_handlePostOp(...\" */ fun_handlePostOp_19827(var_opIndex, var_opInfo_141_mpos, _1, /** @src 1:3425:3461  \"preGas - gasleft() + opInfo.preOpGas\" */ checked_add_uint256(expr_2, /** @src 1:595:33492  \"contract EntryPoint is...\" */ mload(/** @src 1:3446:3461  \"opInfo.preOpGas\" */ add(var_opInfo_141_mpos, 128))))\n                    /// @src 1:3683:3726  \"require(msg.value > 30, \\\"value nhu cut 30\\\")\"\n                    require_helper_stringliteral_fcdb(/** @src 1:3691:3705  \"msg.value > 30\" */ gt(/** @src 1:2349:2358  \"msg.value\" */ callvalue(), /** @src 1:3703:3705  \"30\" */ 0x1e))\n                }\n            }\n            /// @src 1:595:33492  \"contract EntryPoint is...\"\n            function increment_uint256(value) -> ret\n            {\n                if eq(value, not(0)) { panic_error_0x11() }\n                ret := add(value, 1)\n            }\n            function calldata_array_index_access_struct_UserOpsPerAggregator_calldata_dyn_calldata(base_ref, length, index) -> addr\n            {\n                if iszero(lt(index, length)) { panic_error_0x32() }\n                let rel_offset_of_tail := calldataload(add(base_ref, shl(5, index)))\n                if iszero(slt(rel_offset_of_tail, add(sub(calldatasize(), base_ref), not(94))))\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 1:595:33492  \"contract EntryPoint is...\"\n                addr := add(base_ref, rel_offset_of_tail)\n            }\n            function access_calldata_tail_array_struct_UserOperation_calldata_dyn_calldata(base_ref, ptr_to_tail) -> addr, length\n            {\n                let rel_offset_of_tail := calldataload(ptr_to_tail)\n                if iszero(slt(rel_offset_of_tail, add(sub(calldatasize(), base_ref), not(30)))) { revert(0, 0) }\n                let addr_1 := add(base_ref, rel_offset_of_tail)\n                length := calldataload(addr_1)\n                if gt(length, 0xffffffffffffffff) { revert(0, 0) }\n                addr := add(addr_1, 0x20)\n                if sgt(addr, sub(calldatasize(), shl(5, length))) { revert(0, 0) }\n            }\n            function read_from_calldatat_contract_IAggregator(ptr) -> returnValue\n            {\n                let value := calldataload(ptr)\n                validator_revert_address(value)\n                returnValue := value\n            }\n            function require_helper_stringliteral_c7b8(condition)\n            {\n                if iszero(condition)\n                {\n                    let memPtr := mload(64)\n                    mstore(memPtr, shl(229, 4594637))\n                    mstore(add(memPtr, 4), 32)\n                    mstore(add(memPtr, 36), 23)\n                    mstore(add(memPtr, 68), \"AA96 invalid aggregator\")\n                    revert(memPtr, 100)\n                }\n            }\n            function calldata_access_bytes_calldata(base_ref, ptr) -> value, length\n            {\n                let rel_offset_of_tail := calldataload(ptr)\n                if iszero(slt(rel_offset_of_tail, add(sub(calldatasize(), base_ref), not(30)))) { revert(0, 0) }\n                let value_1 := add(rel_offset_of_tail, base_ref)\n                length := calldataload(value_1)\n                value := add(value_1, 0x20)\n                if gt(length, 0xffffffffffffffff) { revert(0, 0) }\n                if sgt(value, sub(calldatasize(), length)) { revert(0, 0) }\n            }\n            function abi_encode_struct_UserOperation_calldata(value, pos) -> end\n            {\n                let _1 := 0x0160\n                abi_encode_address_to_address(abi_decode_address(value), pos)\n                mstore(add(pos, 0x20), calldataload(add(value, 0x20)))\n                let memberValue0, memberValue1 := calldata_access_bytes_calldata(value, add(value, 0x40))\n                mstore(add(pos, 0x40), _1)\n                let tail := abi_encode_bytes_calldata_to_bytes(memberValue0, memberValue1, add(pos, _1))\n                let memberValue0_1, memberValue1_1 := calldata_access_bytes_calldata(value, add(value, 0x60))\n                mstore(add(pos, 0x60), sub(tail, pos))\n                let tail_1 := abi_encode_bytes_calldata_to_bytes(memberValue0_1, memberValue1_1, tail)\n                mstore(add(pos, 0x80), calldataload(add(value, 0x80)))\n                mstore(add(pos, 0xa0), calldataload(add(value, 0xa0)))\n                mstore(add(pos, 0xc0), calldataload(add(value, 0xc0)))\n                mstore(add(pos, 0xe0), calldataload(add(value, 0xe0)))\n                let _2 := 0x0100\n                mstore(add(pos, _2), calldataload(add(value, _2)))\n                let _3 := 0x0120\n                let memberValue0_2, memberValue1_2 := calldata_access_bytes_calldata(value, add(value, _3))\n                mstore(add(pos, _3), sub(tail_1, pos))\n                let tail_2 := abi_encode_bytes_calldata_to_bytes(memberValue0_2, memberValue1_2, tail_1)\n                let _4 := 0x0140\n                let memberValue0_3, memberValue1_3 := calldata_access_bytes_calldata(value, add(value, _4))\n                mstore(add(pos, _4), sub(tail_2, pos))\n                end := abi_encode_bytes_calldata_to_bytes(memberValue0_3, memberValue1_3, tail_2)\n            }\n            function abi_encode_array_struct_UserOperation_calldata_dyn_calldata_bytes_calldata(headStart, value0, value1, value2, value3) -> tail\n            {\n                let tail_1 := add(headStart, 64)\n                mstore(headStart, 64)\n                let pos := tail_1\n                mstore(tail_1, value1)\n                pos := add(headStart, 96)\n                let tail_2 := add(add(headStart, shl(5, value1)), 96)\n                let srcPtr := value0\n                let i := 0\n                let i_1 := i\n                for { } lt(i_1, value1) { i_1 := add(i_1, 1) }\n                {\n                    mstore(pos, add(sub(tail_2, headStart), not(95)))\n                    let rel_offset_of_tail := calldataload(srcPtr)\n                    if iszero(slt(rel_offset_of_tail, add(sub(calldatasize(), value0), not(350)))) { revert(i, i) }\n                    tail_2 := abi_encode_struct_UserOperation_calldata(add(rel_offset_of_tail, value0), tail_2)\n                    let _1 := 0x20\n                    srcPtr := add(srcPtr, _1)\n                    pos := add(pos, _1)\n                }\n                mstore(add(headStart, 0x20), sub(tail_2, headStart))\n                tail := abi_encode_bytes_calldata_to_bytes(value2, value3, tail_2)\n            }\n            function abi_encode_address(headStart, value0) -> tail\n            {\n                tail := add(headStart, 32)\n                mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n            }\n            function abi_encode_bytes_calldata_to_bytes_nonPadded_inplace(start, length, pos) -> end\n            {\n                calldatacopy(pos, start, length)\n                let _1 := add(pos, length)\n                mstore(_1, 0)\n                end := _1\n            }\n            function abi_encode_uint256_uint256_uint48_uint48_bool_bytes(headStart, value0, value1, value2, value3, value4, value5) -> tail\n            {\n                mstore(headStart, value0)\n                mstore(add(headStart, 32), value1)\n                let _1 := 0xffffffffffff\n                mstore(add(headStart, 64), and(value2, _1))\n                mstore(add(headStart, 96), and(value3, _1))\n                mstore(add(headStart, 128), iszero(iszero(value4)))\n                mstore(add(headStart, 160), 192)\n                tail := abi_encode_bytes(value5, add(headStart, 192))\n            }\n            function require_helper_stringliteral_bf4e(condition)\n            {\n                if iszero(condition)\n                {\n                    let memPtr := mload(64)\n                    mstore(memPtr, shl(229, 4594637))\n                    mstore(add(memPtr, 4), 32)\n                    mstore(add(memPtr, 36), 23)\n                    mstore(add(memPtr, 68), \"AA92 internal call only\")\n                    revert(memPtr, 100)\n                }\n            }\n            function read_from_memoryt_address(ptr) -> returnValue\n            {\n                returnValue := and(mload(ptr), sub(shl(160, 1), 1))\n            }\n            function require_helper_stringliteral_512b(condition)\n            {\n                if iszero(condition)\n                {\n                    let memPtr := mload(64)\n                    mstore(memPtr, shl(229, 4594637))\n                    mstore(add(memPtr, 4), 32)\n                    mstore(add(memPtr, 36), 18)\n                    mstore(add(memPtr, 68), \"value nhu cut 2777\")\n                    revert(memPtr, 100)\n                }\n            }\n            /// @src 1:1122:1126  \"2048\"\n            function require_helper_stringliteral_8956(condition)\n            {\n                if iszero(condition)\n                {\n                    let memPtr := /** @src 1:595:33492  \"contract EntryPoint is...\" */ mload(64)\n                    /// @src 1:1122:1126  \"2048\"\n                    mstore(memPtr, /** @src 1:595:33492  \"contract EntryPoint is...\" */ shl(229, 4594637))\n                    /// @src 1:1122:1126  \"2048\"\n                    mstore(add(memPtr, 4), 32)\n                    /// @src 1:595:33492  \"contract EntryPoint is...\"\n                    mstore(/** @src 1:1122:1126  \"2048\" */ add(memPtr, 36), 18)\n                    mstore(/** @src 1:595:33492  \"contract EntryPoint is...\" */ add(/** @src 1:1122:1126  \"2048\" */ memPtr, /** @src 1:595:33492  \"contract EntryPoint is...\" */ 68), /** @src 1:1122:1126  \"2048\" */ \"value nhu cut 2888\")\n                    revert(memPtr, 100)\n                }\n            }\n            function require_helper_stringliteral_ef7b(condition)\n            {\n                if iszero(condition)\n                {\n                    let memPtr := /** @src 1:595:33492  \"contract EntryPoint is...\" */ mload(64)\n                    /// @src 1:1122:1126  \"2048\"\n                    mstore(memPtr, /** @src 1:595:33492  \"contract EntryPoint is...\" */ shl(229, 4594637))\n                    /// @src 1:1122:1126  \"2048\"\n                    mstore(add(memPtr, 4), 32)\n                    /// @src 1:595:33492  \"contract EntryPoint is...\"\n                    mstore(/** @src 1:1122:1126  \"2048\" */ add(memPtr, 36), 18)\n                    mstore(/** @src 1:595:33492  \"contract EntryPoint is...\" */ add(/** @src 1:1122:1126  \"2048\" */ memPtr, /** @src 1:595:33492  \"contract EntryPoint is...\" */ 68), /** @src 1:1122:1126  \"2048\" */ \"value nhu cut 2999\")\n                    revert(memPtr, 100)\n                }\n            }\n            function abi_encode_uint256_bytes_29546(headStart, value1) -> tail\n            {\n                /// @src 1:595:33492  \"contract EntryPoint is...\"\n                mstore(headStart, /** @src 1:10469:10483  \"opInfo.mUserOp\" */ 0)\n                /// @src 1:1122:1126  \"2048\"\n                mstore(add(headStart, 32), 64)\n                tail := abi_encode_bytes(value1, add(headStart, 64))\n            }\n            function abi_encode_uint256_bytes(headStart, value0, value1) -> tail\n            {\n                /// @src 1:595:33492  \"contract EntryPoint is...\"\n                mstore(headStart, value0)\n                /// @src 1:1122:1126  \"2048\"\n                mstore(add(headStart, 32), 64)\n                tail := abi_encode_bytes(value1, add(headStart, 64))\n            }\n            /// @ast-id 981 @src 1:10145:12064  \"function innerHandleOp(...\"\n            function fun_innerHandleOp(var_callData_mpos, var_opInfo_831_mpos, var_context_offset, var_context_length) -> var_actualGasCost\n            {\n                /// @src 1:10347:10356  \"gasleft()\"\n                let expr := gas()\n                /// @src 1:10366:10429  \"require(msg.sender == address(this), \\\"AA92 internal call only\\\")\"\n                require_helper_stringliteral_bf4e(/** @src 1:10374:10401  \"msg.sender == address(this)\" */ eq(/** @src 1:10374:10384  \"msg.sender\" */ caller(), /** @src 1:10396:10400  \"this\" */ address()))\n                /// @src 1:10469:10483  \"opInfo.mUserOp\"\n                let _197_mpos := mload(var_opInfo_831_mpos)\n                /// @src 1:595:33492  \"contract EntryPoint is...\"\n                let _1 := mload(/** @src 1:10514:10534  \"mUserOp.callGasLimit\" */ add(_197_mpos, 64))\n                /// @src 1:10670:10679  \"gasleft()\"\n                let expr_1 := gas()\n                /// @src 1:10649:10889  \"if (...\"\n                if /** @src 1:10670:10732  \"gasleft() < callGasLimit + mUserOp.verificationGasLimit + 5000\" */ lt(expr_1, /** @src 1:595:33492  \"contract EntryPoint is...\" */ add(add(_1, mload(/** @src 1:10697:10725  \"mUserOp.verificationGasLimit\" */ add(_197_mpos, 96))), /** @src 1:10728:10732  \"5000\" */ 0x1388))\n                /// @src 1:10649:10889  \"if (...\"\n                {\n                    /// @src 1:10765:10875  \"assembly {...\"\n                    mstore(/** @src -1:-1:-1 */ 0, /** @src 1:595:33492  \"contract EntryPoint is...\" */ shl(224, 0xdeaddead))\n                    /// @src 1:10765:10875  \"assembly {...\"\n                    revert(/** @src -1:-1:-1 */ 0, /** @src 1:10765:10875  \"assembly {...\" */ 32)\n                }\n                /// @src 1:10909:10971  \"IPaymaster.PostOpMode mode = IPaymaster.PostOpMode.opSucceeded\"\n                let var_mode := /** @src -1:-1:-1 */ 0\n                /// @src 1:10981:11758  \"if (callData.length > 0) {...\"\n                if /** @src 1:10985:11004  \"callData.length > 0\" */ iszero(iszero(/** @src 1:595:33492  \"contract EntryPoint is...\" */ mload(/** @src 1:10985:11000  \"callData.length\" */ var_callData_mpos)))\n                /// @src 1:10981:11758  \"if (callData.length > 0) {...\"\n                {\n                    /// @src 1:11101:11748  \"if (!success) {...\"\n                    if /** @src 1:11105:11113  \"!success\" */ cleanup_bool(iszero(/** @src 1:11035:11087  \"Exec.call(mUserOp.sender, 0, callData, callGasLimit)\" */ fun_call(/** @src 1:595:33492  \"contract EntryPoint is...\" */ cleanup_address(mload(/** @src 1:11045:11059  \"mUserOp.sender\" */ _197_mpos)), /** @src 1:11035:11087  \"Exec.call(mUserOp.sender, 0, callData, callGasLimit)\" */ var_callData_mpos, _1)))\n                    /// @src 1:11101:11748  \"if (!success) {...\"\n                    {\n                        /// @src 1:11133:11178  \"require(msg.value > 27, \\\"value nhu cut 2777\\\")\"\n                        require_helper_stringliteral_512b(/** @src 1:11141:11155  \"msg.value > 27\" */ gt(/** @src 1:11141:11150  \"msg.value\" */ callvalue(), /** @src 1:11153:11155  \"27\" */ 0x1b))\n                        /// @src 1:11218:11259  \"Exec.getReturnData(REVERT_REASON_MAX_LEN)\"\n                        let expr_917_mpos := fun_getReturnData()\n                        /// @src 1:11277:11322  \"require(msg.value > 28, \\\"value nhu cut 2888\\\")\"\n                        require_helper_stringliteral_8956(/** @src 1:11285:11299  \"msg.value > 28\" */ gt(/** @src 1:11141:11150  \"msg.value\" */ callvalue(), /** @src 1:11297:11299  \"28\" */ 0x1c))\n                        /// @src 1:11340:11677  \"if (result.length > 0) {...\"\n                        if /** @src 1:11344:11361  \"result.length > 0\" */ iszero(iszero(/** @src 1:595:33492  \"contract EntryPoint is...\" */ mload(/** @src 1:11344:11357  \"result.length\" */ expr_917_mpos)))\n                        /// @src 1:11340:11677  \"if (result.length > 0) {...\"\n                        {\n                            /// @src 1:11385:11430  \"require(msg.value > 29, \\\"value nhu cut 2999\\\")\"\n                            require_helper_stringliteral_ef7b(/** @src 1:11393:11407  \"msg.value > 29\" */ gt(/** @src 1:11141:11150  \"msg.value\" */ callvalue(), /** @src 1:11405:11407  \"29\" */ 0x1d))\n                            /// @src 1:1122:1126  \"2048\"\n                            let _2 := mload(/** @src 1:11508:11525  \"opInfo.userOpHash\" */ add(var_opInfo_831_mpos, 32))\n                            /// @src 1:11551:11565  \"mUserOp.sender\"\n                            let _3 := /** @src 1:595:33492  \"contract EntryPoint is...\" */ cleanup_address(mload(/** @src 1:11551:11565  \"mUserOp.sender\" */ _197_mpos))\n                            /// @src 1:595:33492  \"contract EntryPoint is...\"\n                            let _4 := mload(/** @src 1:11591:11604  \"mUserOp.nonce\" */ add(_197_mpos, /** @src 1:11508:11525  \"opInfo.userOpHash\" */ 32))\n                            /// @src 1:11457:11658  \"UserOperationRevertReason(...\"\n                            let _5 := /** @src 1:595:33492  \"contract EntryPoint is...\" */ mload(/** @src 1:10514:10534  \"mUserOp.callGasLimit\" */ 64)\n                            /// @src 1:11457:11658  \"UserOperationRevertReason(...\"\n                            log3(_5, sub(abi_encode_uint256_bytes(_5, _4, expr_917_mpos), _5), 0x1c4fada7374c0a9ee8841fc38afe82932dc0f8e69012e927f061a8bae611a201, _2, /** @src 1:595:33492  \"contract EntryPoint is...\" */ and(/** @src 1:11457:11658  \"UserOperationRevertReason(...\" */ _3, /** @src 1:595:33492  \"contract EntryPoint is...\" */ sub(shl(160, 1), 1)))\n                        }\n                        /// @src 1:11694:11733  \"mode = IPaymaster.PostOpMode.opReverted\"\n                        var_mode := /** @src 1:11701:11733  \"IPaymaster.PostOpMode.opReverted\" */ 1\n                    }\n                }\n                /// @src 1:1122:1126  \"2048\"\n                let diff := sub(expr, /** @src 1:11821:11830  \"gasleft()\" */ gas())\n                /// @src 1:11990:12047  \"return _handlePostOp(0, mode, opInfo, context, actualGas)\"\n                var_actualGasCost := /** @src 1:11997:12047  \"_handlePostOp(0, mode, opInfo, context, actualGas)\" */ fun_handlePostOp_19835(var_mode, var_opInfo_831_mpos, /** @src 1:1122:1126  \"2048\" */ abi_decode_available_length_bytes(/** @src 1:11997:12047  \"_handlePostOp(0, mode, opInfo, context, actualGas)\" */ var_context_offset, var_context_length, /** @src 1:1122:1126  \"2048\" */ calldatasize()), /** @src 1:595:33492  \"contract EntryPoint is...\" */ add(diff, mload(/** @src 1:11833:11848  \"opInfo.preOpGas\" */ add(var_opInfo_831_mpos, 128))))\n            }\n            /// @src 1:595:33492  \"contract EntryPoint is...\"\n            function abi_encode_bytes32_address_uint256(headStart, value0, value1, value2) -> tail\n            {\n                tail := add(headStart, 96)\n                mstore(headStart, value0)\n                mstore(add(headStart, 32), and(value1, sub(shl(160, 1), 1)))\n                mstore(add(headStart, 64), value2)\n            }\n            /// @ast-id 1006 @src 1:12272:12472  \"function getUserOpHash(...\"\n            function fun_getUserOpHash(var_userOp_985_offset) -> var\n            {\n                /// @src 12:2778:2793  \"userOp.initCode\"\n                let expr_offset, expr_length := access_calldata_tail_bytes_calldata(var_userOp_985_offset, add(var_userOp_985_offset, 64))\n                /// @src 12:2763:2794  \"calldataKeccak(userOp.initCode)\"\n                let expr := fun_calldataKeccak(expr_offset, expr_length)\n                /// @src 12:2842:2857  \"userOp.callData\"\n                let expr_offset_1, expr_length_1 := access_calldata_tail_bytes_calldata(var_userOp_985_offset, add(var_userOp_985_offset, 96))\n                /// @src 12:2827:2858  \"calldataKeccak(userOp.callData)\"\n                let expr_1 := fun_calldataKeccak(expr_offset_1, expr_length_1)\n                /// @src 12:3218:3241  \"userOp.paymasterAndData\"\n                let expr_offset_2, expr_length_2 := access_calldata_tail_bytes_calldata(var_userOp_985_offset, add(var_userOp_985_offset, 288))\n                /// @src 12:3203:3242  \"calldataKeccak(userOp.paymasterAndData)\"\n                let expr_2 := fun_calldataKeccak(expr_offset_2, expr_length_2)\n                /// @src 12:3272:3613  \"abi.encode(...\"\n                let expr_mpos := /** @src 1:595:33492  \"contract EntryPoint is...\" */ mload(/** @src 12:2778:2793  \"userOp.initCode\" */ 64)\n                /// @src 12:3272:3613  \"abi.encode(...\"\n                let _1 := add(expr_mpos, /** @src 12:2718:2730  \"userOp.nonce\" */ 32)\n                /// @src 12:3272:3613  \"abi.encode(...\"\n                let _2 := sub(abi_encode_address_uint256_bytes32_bytes32_uint256_uint256_uint256_uint256_uint256_bytes32(_1, /** @src 1:595:33492  \"contract EntryPoint is...\" */ and(/** @src 12:1774:1835  \"assembly {...\" */ calldataload(/** @src 12:2675:2692  \"getSender(userOp)\" */ var_userOp_985_offset), /** @src 1:595:33492  \"contract EntryPoint is...\" */ sub(shl(160, 1), 1)), calldataload(/** @src 12:2718:2730  \"userOp.nonce\" */ add(var_userOp_985_offset, 32)), /** @src 12:3272:3613  \"abi.encode(...\" */ expr, expr_1, /** @src 1:595:33492  \"contract EntryPoint is...\" */ calldataload(/** @src 12:2891:2910  \"userOp.callGasLimit\" */ add(var_userOp_985_offset, 128)), /** @src 1:595:33492  \"contract EntryPoint is...\" */ calldataload(/** @src 12:2951:2978  \"userOp.verificationGasLimit\" */ add(var_userOp_985_offset, 160)), /** @src 1:595:33492  \"contract EntryPoint is...\" */ calldataload(/** @src 12:3017:3042  \"userOp.preVerificationGas\" */ add(var_userOp_985_offset, 192)), /** @src 1:595:33492  \"contract EntryPoint is...\" */ calldataload(/** @src 12:3075:3094  \"userOp.maxFeePerGas\" */ add(var_userOp_985_offset, 224)), /** @src 1:595:33492  \"contract EntryPoint is...\" */ calldataload(/** @src 12:3135:3162  \"userOp.maxPriorityFeePerGas\" */ add(var_userOp_985_offset, 256)), /** @src 12:3272:3613  \"abi.encode(...\" */ expr_2), expr_mpos)\n                let _3 := /** @src 1:595:33492  \"contract EntryPoint is...\" */ not(31)\n                /// @src 12:3272:3613  \"abi.encode(...\"\n                mstore(expr_mpos, add(_2, _3))\n                finalize_allocation(expr_mpos, _2)\n                /// @src 12:3727:3757  \"return keccak256(pack(userOp))\"\n                let var_1 := /** @src 12:3734:3757  \"keccak256(pack(userOp))\" */ keccak256(/** @src 1:595:33492  \"contract EntryPoint is...\" */ _1, mload(/** @src 12:3734:3757  \"keccak256(pack(userOp))\" */ expr_mpos))\n                /// @src 1:12409:12464  \"abi.encode(userOp.hash(), address(this), block.chainid)\"\n                let expr_1002_mpos := /** @src 1:595:33492  \"contract EntryPoint is...\" */ mload(/** @src 12:2778:2793  \"userOp.initCode\" */ 64)\n                /// @src 1:12409:12464  \"abi.encode(userOp.hash(), address(this), block.chainid)\"\n                let _4 := add(expr_1002_mpos, /** @src 12:2718:2730  \"userOp.nonce\" */ 32)\n                /// @src 1:12409:12464  \"abi.encode(userOp.hash(), address(this), block.chainid)\"\n                let _5 := sub(abi_encode_bytes32_address_uint256(_4, var_1, /** @src 1:12443:12447  \"this\" */ address(), /** @src 1:12450:12463  \"block.chainid\" */ chainid()), /** @src 1:12409:12464  \"abi.encode(userOp.hash(), address(this), block.chainid)\" */ expr_1002_mpos)\n                mstore(expr_1002_mpos, add(_5, /** @src 12:3272:3613  \"abi.encode(...\" */ _3))\n                /// @src 1:12409:12464  \"abi.encode(userOp.hash(), address(this), block.chainid)\"\n                finalize_allocation(expr_1002_mpos, _5)\n                /// @src 1:12380:12465  \"return...\"\n                var := /** @src 1:12399:12465  \"keccak256(abi.encode(userOp.hash(), address(this), block.chainid))\" */ keccak256(/** @src 1:595:33492  \"contract EntryPoint is...\" */ _4, mload(/** @src 1:12399:12465  \"keccak256(abi.encode(userOp.hash(), address(this), block.chainid))\" */ expr_1002_mpos))\n            }\n            /// @src 1:595:33492  \"contract EntryPoint is...\"\n            function allocate_and_zero_memory_struct_struct_StakeInfo() -> memPtr\n            {\n                let memPtr_1 := mload(64)\n                let newFreePtr := add(memPtr_1, 64)\n                if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr_1)) { panic_error_0x41() }\n                mstore(64, newFreePtr)\n                memPtr := memPtr_1\n                mstore(memPtr_1, /** @src -1:-1:-1 */ 0)\n                /// @src 1:595:33492  \"contract EntryPoint is...\"\n                mstore(add(memPtr_1, 32), /** @src -1:-1:-1 */ 0)\n            }\n            /// @src 1:595:33492  \"contract EntryPoint is...\"\n            function calldata_array_index_range_access_bytes_calldata_19807(offset, length) -> offsetOut, lengthOut\n            {\n                if gt(/** @src 1:19131:19133  \"20\" */ 0x14, /** @src 1:595:33492  \"contract EntryPoint is...\" */ length)\n                {\n                    revert(/** @src 1:18932:18933  \"0\" */ 0x00, 0x00)\n                }\n                /// @src 1:595:33492  \"contract EntryPoint is...\"\n                offsetOut := offset\n                lengthOut := /** @src 1:19131:19133  \"20\" */ 0x14\n            }\n            /// @src 1:595:33492  \"contract EntryPoint is...\"\n            function calldata_array_index_range_access_bytes_calldata(offset, length) -> offsetOut, lengthOut\n            {\n                if gt(/** @src 1:14510:14512  \"20\" */ 0x14, /** @src 1:595:33492  \"contract EntryPoint is...\" */ length)\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 1:595:33492  \"contract EntryPoint is...\"\n                offsetOut := offset\n                lengthOut := /** @src 1:14510:14512  \"20\" */ 0x14\n            }\n            /// @src 1:595:33492  \"contract EntryPoint is...\"\n            function convert_bytes_to_fixedbytes_from_bytes_calldata_to_bytes20(array, len) -> value\n            {\n                let _1 := calldataload(array)\n                let _2 := not(0xffffffffffffffffffffffff)\n                value := and(_1, _2)\n                if lt(len, 20)\n                {\n                    value := and(and(_1, shl(shl(3, sub(20, len)), _2)), _2)\n                }\n            }\n            function convert_bytes20_to_address(value) -> converted\n            { converted := shr(96, value) }\n            function write_to_memory_bool_19775(memPtr)\n            {\n                mstore(memPtr, /** @src 5:2324:2344  \"info.unstakeDelaySec\" */ 1)\n            }\n            /// @src 1:595:33492  \"contract EntryPoint is...\"\n            function write_to_memory_bool(memPtr, value)\n            {\n                mstore(memPtr, iszero(iszero(value)))\n            }\n            function write_to_memory_uint48(memPtr, value)\n            {\n                mstore(memPtr, and(value, 0xffffffffffff))\n            }\n            function write_to_memory_address(memPtr, value)\n            {\n                mstore(memPtr, and(value, sub(shl(160, 1), 1)))\n            }\n            function abi_encode_struct_ReturnInfo(value, pos) -> end\n            {\n                mstore(pos, mload(value))\n                mstore(add(pos, 0x20), mload(add(value, 0x20)))\n                mstore(add(pos, 0x40), iszero(iszero(mload(add(value, 0x40)))))\n                let memberValue0 := mload(add(value, 0x60))\n                let _1 := 0xffffffffffff\n                mstore(add(pos, 0x60), and(memberValue0, _1))\n                mstore(add(pos, 0x80), and(mload(add(value, 0x80)), _1))\n                let memberValue0_1 := mload(add(value, 0xa0))\n                mstore(add(pos, 0xa0), 0xc0)\n                end := abi_encode_bytes(memberValue0_1, add(pos, 0xc0))\n            }\n            function abi_encode_struct_StakeInfo(value, pos)\n            {\n                mstore(pos, mload(value))\n                mstore(add(pos, 0x20), mload(add(value, 0x20)))\n            }\n            function abi_encode_struct_ReturnInfo_struct_StakeInfo_struct_StakeInfo_struct_StakeInfo_struct_AggregatorStakeInfo(headStart, value0, value1, value2, value3, value4) -> tail\n            {\n                let _1 := 320\n                mstore(headStart, _1)\n                tail := abi_encode_struct_ReturnInfo(value0, add(headStart, _1))\n                abi_encode_struct_StakeInfo(value1, add(headStart, 32))\n                abi_encode_struct_StakeInfo(value2, add(headStart, 96))\n                abi_encode_struct_StakeInfo(value3, add(headStart, 160))\n                mstore(add(headStart, 224), and(mload(value4), sub(shl(160, 1), 1)))\n                let memberValue0 := mload(add(value4, 32))\n                abi_encode_struct_StakeInfo(memberValue0, add(headStart, 256))\n            }\n            function abi_encode_struct_ReturnInfo_struct_StakeInfo_struct_StakeInfo_struct_StakeInfo(headStart, value0, value1, value2, value3) -> tail\n            {\n                mstore(headStart, 224)\n                tail := abi_encode_struct_ReturnInfo(value0, add(headStart, 224))\n                abi_encode_struct_StakeInfo(value1, add(headStart, 32))\n                abi_encode_struct_StakeInfo(value2, add(headStart, 96))\n                abi_encode_struct_StakeInfo(value3, add(headStart, 160))\n            }\n            function abi_decode_address_fromMemory(headStart, dataEnd) -> value0\n            {\n                if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n                let value := mload(headStart)\n                validator_revert_address(value)\n                value0 := value\n            }\n            function abi_encode_bytes_calldata(headStart, value0, value1) -> tail\n            {\n                mstore(headStart, 32)\n                tail := abi_encode_bytes_calldata_to_bytes(value0, value1, add(headStart, 32))\n            }\n            function abi_encode_bytes_calldata_address_bytes_calldata(headStart, value0, value1, value2, value3, value4) -> tail\n            {\n                mstore(headStart, 96)\n                let tail_1 := abi_encode_bytes_calldata_to_bytes(value0, value1, add(headStart, 96))\n                mstore(add(headStart, 32), and(value2, sub(shl(160, 1), 1)))\n                mstore(add(headStart, 64), sub(tail_1, headStart))\n                tail := abi_encode_bytes_calldata_to_bytes(value3, value4, tail_1)\n            }\n            function return_data_selector() -> sig\n            {\n                if gt(returndatasize(), 3)\n                {\n                    returndatacopy(0, 0, 4)\n                    sig := shr(224, mload(0))\n                }\n            }\n            function try_decode_error_message() -> ret\n            {\n                if lt(returndatasize(), 0x44) { leave }\n                let data := mload(64)\n                let _1 := not(3)\n                returndatacopy(data, 4, add(returndatasize(), _1))\n                let offset := mload(data)\n                let _2 := returndatasize()\n                let _3 := 0xffffffffffffffff\n                if or(gt(offset, _3), gt(add(offset, 0x24), _2)) { leave }\n                let msg := add(data, offset)\n                let length := mload(msg)\n                if gt(length, _3) { leave }\n                if gt(add(add(msg, length), 0x20), add(add(data, returndatasize()), _1)) { leave }\n                finalize_allocation(data, add(add(offset, length), 0x20))\n                ret := msg\n            }\n            /// @ast-id 1471 @src 1:18066:18575  \"function _simulationOnlyValidations(...\"\n            function fun_simulationOnlyValidations(var_userOp_1436_offset)\n            {\n                /// @src 1:18290:18305  \"userOp.initCode\"\n                let expr_1442_offset, expr_1442_length := access_calldata_tail_bytes_calldata(var_userOp_1436_offset, add(var_userOp_1436_offset, 64))\n                /// @src 1:18323:18336  \"userOp.sender\"\n                let expr := read_from_calldatat_contract_IAggregator(var_userOp_1436_offset)\n                /// @src 1:18354:18377  \"userOp.paymasterAndData\"\n                let expr_1446_offset, expr_1446_length := access_calldata_tail_bytes_calldata(var_userOp_1436_offset, add(var_userOp_1436_offset, 288))\n                /// @src 1:18240:18391  \"this._validateSenderAndPaymaster(...\"\n                if iszero(extcodesize(/** @src 1:18240:18244  \"this\" */ address()))\n                /// @src 1:18240:18391  \"this._validateSenderAndPaymaster(...\"\n                {\n                    /// @src 1:595:33492  \"contract EntryPoint is...\"\n                    revert(0, 0)\n                }\n                /// @src 1:18240:18391  \"this._validateSenderAndPaymaster(...\"\n                let _1 := /** @src 1:595:33492  \"contract EntryPoint is...\" */ mload(/** @src 1:18290:18305  \"userOp.initCode\" */ 64)\n                /// @src 1:18240:18391  \"this._validateSenderAndPaymaster(...\"\n                mstore(_1, /** @src 1:595:33492  \"contract EntryPoint is...\" */ shl(224, 0x957122ab))\n                /// @src 1:18240:18391  \"this._validateSenderAndPaymaster(...\"\n                let trySuccessCondition := staticcall(gas(), /** @src 1:18240:18244  \"this\" */ address(), /** @src 1:18240:18391  \"this._validateSenderAndPaymaster(...\" */ _1, sub(abi_encode_bytes_calldata_address_bytes_calldata(add(_1, 4), expr_1442_offset, expr_1442_length, expr, expr_1446_offset, expr_1446_length), _1), _1, /** @src 1:18323:18336  \"userOp.sender\" */ 0)\n                /// @src 1:18240:18391  \"this._validateSenderAndPaymaster(...\"\n                if trySuccessCondition\n                {\n                    finalize_allocation_19804(_1)\n                    abi_decode(_1, _1)\n                }\n                /// @src 1:18224:18569  \"try...\"\n                switch iszero(trySuccessCondition)\n                case 0 { }\n                default {\n                    let _2 := 1\n                    if eq(147028384, return_data_selector())\n                    {\n                        /// @src 1:18403:18569  \"catch Error(string memory revertReason) {...\"\n                        let _3 := try_decode_error_message()\n                        if _3\n                        {\n                            _2 := /** @src 1:18323:18336  \"userOp.sender\" */ 0\n                            /// @src 1:18457:18559  \"if (bytes(revertReason).length != 0) {...\"\n                            if /** @src 1:18461:18492  \"bytes(revertReason).length != 0\" */ iszero(iszero(/** @src 1:595:33492  \"contract EntryPoint is...\" */ mload(/** @src 1:18461:18480  \"bytes(revertReason)\" */ _3)))\n                            /// @src 1:18457:18559  \"if (bytes(revertReason).length != 0) {...\"\n                            {\n                                /// @src 1:18519:18544  \"FailedOp(0, revertReason)\"\n                                let _4 := /** @src 1:595:33492  \"contract EntryPoint is...\" */ mload(/** @src 1:18290:18305  \"userOp.initCode\" */ 64)\n                                /// @src 1:18519:18544  \"FailedOp(0, revertReason)\"\n                                mstore(_4, /** @src 1:3283:3319  \"FailedOp(opIndex, \\\"AA95 out of gas\\\")\" */ shl(225, 0x1101335b))\n                                /// @src 1:18519:18544  \"FailedOp(0, revertReason)\"\n                                revert(_4, sub(abi_encode_uint256_bytes_29546(add(_4, /** @src 1:18240:18391  \"this._validateSenderAndPaymaster(...\" */ 4), /** @src 1:18519:18544  \"FailedOp(0, revertReason)\" */ _3), _4))\n                            }\n                        }\n                    }\n                    /// @src 1:18224:18569  \"try...\"\n                    if _2 { revert_forward() }\n                }\n            }\n            /// @src 1:595:33492  \"contract EntryPoint is...\"\n            function abi_encode_stringliteral_71b8(headStart) -> tail\n            {\n                mstore(headStart, 32)\n                mstore(add(headStart, 32), 25)\n                mstore(add(headStart, 64), \"AA20 account not deployed\")\n                tail := add(headStart, 96)\n            }\n            function abi_encode_stringliteral_d82b(headStart) -> tail\n            {\n                mstore(headStart, 32)\n                mstore(add(headStart, 32), 27)\n                mstore(add(headStart, 64), \"AA30 paymaster not deployed\")\n                tail := add(headStart, 96)\n            }\n            function abi_encode_stringliteral_c5d2(headStart) -> tail\n            {\n                mstore(headStart, 32)\n                mstore(add(headStart, 32), 0)\n                tail := add(headStart, 64)\n            }\n            function require_helper_stringliteral_712f(condition)\n            {\n                if iszero(condition)\n                {\n                    let memPtr := mload(64)\n                    mstore(memPtr, shl(229, 4594637))\n                    mstore(add(memPtr, 4), 32)\n                    mstore(add(memPtr, 36), 17)\n                    mstore(add(memPtr, 68), \"value nhu cut 777\")\n                    revert(memPtr, 100)\n                }\n            }\n            function require_helper_stringliteral_ed86(condition)\n            {\n                if iszero(condition)\n                {\n                    let memPtr := mload(64)\n                    mstore(memPtr, shl(229, 4594637))\n                    mstore(add(memPtr, 4), 32)\n                    mstore(add(memPtr, 36), 17)\n                    mstore(add(memPtr, 68), \"value nhu cut 888\")\n                    revert(memPtr, 100)\n                }\n            }\n            function abi_encode_uint256_stringliteral_230f(headStart, value0) -> tail\n            {\n                mstore(headStart, value0)\n                mstore(add(headStart, 32), 64)\n                mstore(add(headStart, 64), 20)\n                mstore(add(headStart, 96), \"AA24 signature error\")\n                tail := add(headStart, 128)\n            }\n            function require_helper_stringliteral_e32d(condition)\n            {\n                if iszero(condition)\n                {\n                    let memPtr := mload(64)\n                    mstore(memPtr, shl(229, 4594637))\n                    mstore(add(memPtr, 4), 32)\n                    mstore(add(memPtr, 36), 17)\n                    mstore(add(memPtr, 68), \"value nhu cut 999\")\n                    revert(memPtr, 100)\n                }\n            }\n            function abi_encode_uint256_stringliteral_4f6a(headStart, value0) -> tail\n            {\n                mstore(headStart, value0)\n                mstore(add(headStart, 32), 64)\n                mstore(add(headStart, 64), 23)\n                mstore(add(headStart, 96), \"AA22 expired or not due\")\n                tail := add(headStart, 128)\n            }\n            function require_helper_stringliteral_5102(condition)\n            {\n                if iszero(condition)\n                {\n                    let memPtr := mload(64)\n                    mstore(memPtr, shl(229, 4594637))\n                    mstore(add(memPtr, 4), 32)\n                    mstore(add(memPtr, 36), 18)\n                    mstore(add(memPtr, 68), \"value nhu cut 1000\")\n                    revert(memPtr, 100)\n                }\n            }\n            function require_helper_stringliteral_6b23(condition)\n            {\n                if iszero(condition)\n                {\n                    let memPtr := mload(64)\n                    mstore(memPtr, shl(229, 4594637))\n                    mstore(add(memPtr, 4), 32)\n                    mstore(add(memPtr, 36), 18)\n                    mstore(add(memPtr, 68), \"value nhu cut 1111\")\n                    revert(memPtr, 100)\n                }\n            }\n            function abi_encode_uint256_stringliteral_b49b(headStart, value0) -> tail\n            {\n                mstore(headStart, value0)\n                mstore(add(headStart, 32), 64)\n                mstore(add(headStart, 64), 20)\n                mstore(add(headStart, 96), \"AA34 signature error\")\n                tail := add(headStart, 128)\n            }\n            function require_helper_stringliteral_487e(condition)\n            {\n                if iszero(condition)\n                {\n                    let memPtr := mload(64)\n                    mstore(memPtr, shl(229, 4594637))\n                    mstore(add(memPtr, 4), 32)\n                    mstore(add(memPtr, 36), 18)\n                    mstore(add(memPtr, 68), \"value nhu cut 2222\")\n                    revert(memPtr, 100)\n                }\n            }\n            function abi_encode_uint256_stringliteral_15a8(headStart, value0) -> tail\n            {\n                mstore(headStart, value0)\n                mstore(add(headStart, 32), 64)\n                mstore(add(headStart, 64), 33)\n                mstore(add(headStart, 96), \"AA32 paymaster expired or not du\")\n                mstore(add(headStart, 128), \"e\")\n                tail := add(headStart, 160)\n            }\n            /// @ast-id 1956 @src 1:23760:25230  \"function _validateAccountAndPaymasterValidationData(...\"\n            function fun_validateAccountAndPaymasterValidationData_19800(var_opIndex, var_validationData, var_paymasterValidationData)\n            {\n                /// @src 1:23976:24020  \"require(msg.value > 17, \\\"value nhu cut 777\\\")\"\n                require_helper_stringliteral_712f(/** @src 1:23984:23998  \"msg.value > 17\" */ gt(/** @src 1:23984:23993  \"msg.value\" */ callvalue(), /** @src 1:23996:23998  \"17\" */ 0x11))\n                /// @src 1:24074:24130  \"_getValidationData(...\"\n                let expr_component, expr_component_1 := fun_getValidationData(var_validationData)\n                /// @src 1:24140:24184  \"require(msg.value > 18, \\\"value nhu cut 888\\\")\"\n                require_helper_stringliteral_ed86(/** @src 1:24148:24162  \"msg.value > 18\" */ gt(/** @src 1:23984:23993  \"msg.value\" */ callvalue(), /** @src 1:24160:24162  \"18\" */ 0x12))\n                /// @src 1:595:33492  \"contract EntryPoint is...\"\n                let _1 := sub(shl(160, 1), 1)\n                /// @src 1:24194:24305  \"if (expectedAggregator != aggregator) {...\"\n                if /** @src 1:24198:24230  \"expectedAggregator != aggregator\" */ iszero(iszero(/** @src 1:595:33492  \"contract EntryPoint is...\" */ and(/** @src 1:24198:24230  \"expectedAggregator != aggregator\" */ expr_component, /** @src 1:595:33492  \"contract EntryPoint is...\" */ _1)))\n                /// @src 1:24194:24305  \"if (expectedAggregator != aggregator) {...\"\n                {\n                    /// @src 1:24253:24294  \"FailedOp(opIndex, \\\"AA24 signature error\\\")\"\n                    let _2 := /** @src 1:595:33492  \"contract EntryPoint is...\" */ mload(64)\n                    /// @src 1:24253:24294  \"FailedOp(opIndex, \\\"AA24 signature error\\\")\"\n                    mstore(_2, /** @src 1:3283:3319  \"FailedOp(opIndex, \\\"AA95 out of gas\\\")\" */ shl(225, 0x1101335b))\n                    /// @src 1:24253:24294  \"FailedOp(opIndex, \\\"AA24 signature error\\\")\"\n                    revert(_2, sub(abi_encode_uint256_stringliteral_230f(add(_2, 4), var_opIndex), _2))\n                }\n                /// @src 1:24314:24358  \"require(msg.value > 19, \\\"value nhu cut 999\\\")\"\n                require_helper_stringliteral_e32d(/** @src 1:24322:24336  \"msg.value > 19\" */ gt(/** @src 1:23984:23993  \"msg.value\" */ callvalue(), /** @src 1:24334:24336  \"19\" */ 0x13))\n                /// @src 1:24368:24464  \"if (outOfTimeRange) {...\"\n                if expr_component_1\n                {\n                    /// @src 1:24409:24453  \"FailedOp(opIndex, \\\"AA22 expired or not due\\\")\"\n                    let _3 := /** @src 1:595:33492  \"contract EntryPoint is...\" */ mload(64)\n                    /// @src 1:24409:24453  \"FailedOp(opIndex, \\\"AA22 expired or not due\\\")\"\n                    mstore(_3, /** @src 1:3283:3319  \"FailedOp(opIndex, \\\"AA95 out of gas\\\")\" */ shl(225, 0x1101335b))\n                    /// @src 1:24409:24453  \"FailedOp(opIndex, \\\"AA22 expired or not due\\\")\"\n                    revert(_3, sub(abi_encode_uint256_stringliteral_4f6a(add(_3, 4), var_opIndex), _3))\n                }\n                /// @src 1:24473:24518  \"require(msg.value > 20, \\\"value nhu cut 1000\\\")\"\n                require_helper_stringliteral_5102(/** @src 1:24481:24495  \"msg.value > 20\" */ gt(/** @src 1:23984:23993  \"msg.value\" */ callvalue(), /** @src 1:24493:24495  \"20\" */ 0x14))\n                /// @src 1:24819:24884  \"_getValidationData(...\"\n                let expr_component_2, expr_component_3 := fun_getValidationData(var_paymasterValidationData)\n                /// @src 1:24894:24939  \"require(msg.value > 21, \\\"value nhu cut 1111\\\")\"\n                require_helper_stringliteral_6b23(/** @src 1:24902:24916  \"msg.value > 21\" */ gt(/** @src 1:23984:23993  \"msg.value\" */ callvalue(), /** @src 1:24914:24916  \"21\" */ 0x15))\n                /// @src 1:24949:25054  \"if (pmAggregator != address(0)) {...\"\n                if /** @src 1:24953:24979  \"pmAggregator != address(0)\" */ iszero(iszero(/** @src 1:595:33492  \"contract EntryPoint is...\" */ and(/** @src 1:24953:24979  \"pmAggregator != address(0)\" */ expr_component_2, /** @src 1:595:33492  \"contract EntryPoint is...\" */ _1)))\n                /// @src 1:24949:25054  \"if (pmAggregator != address(0)) {...\"\n                {\n                    /// @src 1:25002:25043  \"FailedOp(opIndex, \\\"AA34 signature error\\\")\"\n                    let _4 := /** @src 1:595:33492  \"contract EntryPoint is...\" */ mload(64)\n                    /// @src 1:25002:25043  \"FailedOp(opIndex, \\\"AA34 signature error\\\")\"\n                    mstore(_4, /** @src 1:3283:3319  \"FailedOp(opIndex, \\\"AA95 out of gas\\\")\" */ shl(225, 0x1101335b))\n                    /// @src 1:25002:25043  \"FailedOp(opIndex, \\\"AA34 signature error\\\")\"\n                    revert(_4, sub(abi_encode_uint256_stringliteral_b49b(add(_4, 4), var_opIndex), _4))\n                }\n                /// @src 1:25063:25108  \"require(msg.value > 22, \\\"value nhu cut 2222\\\")\"\n                require_helper_stringliteral_487e(/** @src 1:25071:25085  \"msg.value > 22\" */ gt(/** @src 1:23984:23993  \"msg.value\" */ callvalue(), /** @src 1:25083:25085  \"22\" */ 0x16))\n                /// @src 1:25118:25224  \"if (outOfTimeRange) {...\"\n                if expr_component_3\n                {\n                    /// @src 1:25159:25213  \"FailedOp(opIndex, \\\"AA32 paymaster expired or not due\\\")\"\n                    let _5 := /** @src 1:595:33492  \"contract EntryPoint is...\" */ mload(64)\n                    /// @src 1:25159:25213  \"FailedOp(opIndex, \\\"AA32 paymaster expired or not due\\\")\"\n                    mstore(_5, /** @src 1:3283:3319  \"FailedOp(opIndex, \\\"AA95 out of gas\\\")\" */ shl(225, 0x1101335b))\n                    /// @src 1:25159:25213  \"FailedOp(opIndex, \\\"AA32 paymaster expired or not due\\\")\"\n                    revert(_5, sub(abi_encode_uint256_stringliteral_15a8(add(_5, 4), var_opIndex), _5))\n                }\n            }\n            /// @ast-id 1956 @src 1:23760:25230  \"function _validateAccountAndPaymasterValidationData(...\"\n            function fun_validateAccountAndPaymasterValidationData(var_opIndex, var_validationData, var_paymasterValidationData, var_expectedAggregator)\n            {\n                /// @src 1:23976:24020  \"require(msg.value > 17, \\\"value nhu cut 777\\\")\"\n                require_helper_stringliteral_712f(/** @src 1:23984:23998  \"msg.value > 17\" */ gt(/** @src 1:23984:23993  \"msg.value\" */ callvalue(), /** @src 1:23996:23998  \"17\" */ 0x11))\n                /// @src 1:24074:24130  \"_getValidationData(...\"\n                let expr_component, expr_1863_component := fun_getValidationData(var_validationData)\n                /// @src 1:24140:24184  \"require(msg.value > 18, \\\"value nhu cut 888\\\")\"\n                require_helper_stringliteral_ed86(/** @src 1:24148:24162  \"msg.value > 18\" */ gt(/** @src 1:23984:23993  \"msg.value\" */ callvalue(), /** @src 1:24160:24162  \"18\" */ 0x12))\n                /// @src 1:595:33492  \"contract EntryPoint is...\"\n                let _1 := sub(shl(160, 1), 1)\n                /// @src 1:24194:24305  \"if (expectedAggregator != aggregator) {...\"\n                if /** @src 1:24198:24230  \"expectedAggregator != aggregator\" */ iszero(eq(/** @src 1:595:33492  \"contract EntryPoint is...\" */ and(/** @src 1:24198:24230  \"expectedAggregator != aggregator\" */ var_expectedAggregator, /** @src 1:595:33492  \"contract EntryPoint is...\" */ _1), and(/** @src 1:24198:24230  \"expectedAggregator != aggregator\" */ expr_component, /** @src 1:595:33492  \"contract EntryPoint is...\" */ _1)))\n                /// @src 1:24194:24305  \"if (expectedAggregator != aggregator) {...\"\n                {\n                    /// @src 1:24253:24294  \"FailedOp(opIndex, \\\"AA24 signature error\\\")\"\n                    let _2 := /** @src 1:595:33492  \"contract EntryPoint is...\" */ mload(64)\n                    /// @src 1:24253:24294  \"FailedOp(opIndex, \\\"AA24 signature error\\\")\"\n                    mstore(_2, /** @src 1:3283:3319  \"FailedOp(opIndex, \\\"AA95 out of gas\\\")\" */ shl(225, 0x1101335b))\n                    /// @src 1:24253:24294  \"FailedOp(opIndex, \\\"AA24 signature error\\\")\"\n                    revert(_2, sub(abi_encode_uint256_stringliteral_230f(add(_2, 4), var_opIndex), _2))\n                }\n                /// @src 1:24314:24358  \"require(msg.value > 19, \\\"value nhu cut 999\\\")\"\n                require_helper_stringliteral_e32d(/** @src 1:24322:24336  \"msg.value > 19\" */ gt(/** @src 1:23984:23993  \"msg.value\" */ callvalue(), /** @src 1:24334:24336  \"19\" */ 0x13))\n                /// @src 1:24368:24464  \"if (outOfTimeRange) {...\"\n                if expr_1863_component\n                {\n                    /// @src 1:24409:24453  \"FailedOp(opIndex, \\\"AA22 expired or not due\\\")\"\n                    let _3 := /** @src 1:595:33492  \"contract EntryPoint is...\" */ mload(64)\n                    /// @src 1:24409:24453  \"FailedOp(opIndex, \\\"AA22 expired or not due\\\")\"\n                    mstore(_3, /** @src 1:3283:3319  \"FailedOp(opIndex, \\\"AA95 out of gas\\\")\" */ shl(225, 0x1101335b))\n                    /// @src 1:24409:24453  \"FailedOp(opIndex, \\\"AA22 expired or not due\\\")\"\n                    revert(_3, sub(abi_encode_uint256_stringliteral_4f6a(add(_3, 4), var_opIndex), _3))\n                }\n                /// @src 1:24473:24518  \"require(msg.value > 20, \\\"value nhu cut 1000\\\")\"\n                require_helper_stringliteral_5102(/** @src 1:24481:24495  \"msg.value > 20\" */ gt(/** @src 1:23984:23993  \"msg.value\" */ callvalue(), /** @src 1:24493:24495  \"20\" */ 0x14))\n                /// @src 1:24819:24884  \"_getValidationData(...\"\n                let expr_1915_component, expr_1915_component_1 := fun_getValidationData(var_paymasterValidationData)\n                /// @src 1:24894:24939  \"require(msg.value > 21, \\\"value nhu cut 1111\\\")\"\n                require_helper_stringliteral_6b23(/** @src 1:24902:24916  \"msg.value > 21\" */ gt(/** @src 1:23984:23993  \"msg.value\" */ callvalue(), /** @src 1:24914:24916  \"21\" */ 0x15))\n                /// @src 1:24949:25054  \"if (pmAggregator != address(0)) {...\"\n                if /** @src 1:24953:24979  \"pmAggregator != address(0)\" */ iszero(iszero(/** @src 1:595:33492  \"contract EntryPoint is...\" */ and(/** @src 1:24953:24979  \"pmAggregator != address(0)\" */ expr_1915_component, /** @src 1:595:33492  \"contract EntryPoint is...\" */ _1)))\n                /// @src 1:24949:25054  \"if (pmAggregator != address(0)) {...\"\n                {\n                    /// @src 1:25002:25043  \"FailedOp(opIndex, \\\"AA34 signature error\\\")\"\n                    let _4 := /** @src 1:595:33492  \"contract EntryPoint is...\" */ mload(64)\n                    /// @src 1:25002:25043  \"FailedOp(opIndex, \\\"AA34 signature error\\\")\"\n                    mstore(_4, /** @src 1:3283:3319  \"FailedOp(opIndex, \\\"AA95 out of gas\\\")\" */ shl(225, 0x1101335b))\n                    /// @src 1:25002:25043  \"FailedOp(opIndex, \\\"AA34 signature error\\\")\"\n                    revert(_4, sub(abi_encode_uint256_stringliteral_b49b(add(_4, 4), var_opIndex), _4))\n                }\n                /// @src 1:25063:25108  \"require(msg.value > 22, \\\"value nhu cut 2222\\\")\"\n                require_helper_stringliteral_487e(/** @src 1:25071:25085  \"msg.value > 22\" */ gt(/** @src 1:23984:23993  \"msg.value\" */ callvalue(), /** @src 1:25083:25085  \"22\" */ 0x16))\n                /// @src 1:25118:25224  \"if (outOfTimeRange) {...\"\n                if expr_1915_component_1\n                {\n                    /// @src 1:25159:25213  \"FailedOp(opIndex, \\\"AA32 paymaster expired or not due\\\")\"\n                    let _5 := /** @src 1:595:33492  \"contract EntryPoint is...\" */ mload(64)\n                    /// @src 1:25159:25213  \"FailedOp(opIndex, \\\"AA32 paymaster expired or not due\\\")\"\n                    mstore(_5, /** @src 1:3283:3319  \"FailedOp(opIndex, \\\"AA95 out of gas\\\")\" */ shl(225, 0x1101335b))\n                    /// @src 1:25159:25213  \"FailedOp(opIndex, \\\"AA32 paymaster expired or not due\\\")\"\n                    revert(_5, sub(abi_encode_uint256_stringliteral_15a8(add(_5, 4), var_opIndex), _5))\n                }\n            }\n            /// @ast-id 2004 @src 1:25236:25746  \"function _getValidationData(...\"\n            function fun_getValidationData(var_validationData) -> var_aggregator, var_outOfTimeRange\n            {\n                /// @src 1:25376:25452  \"if (validationData == 0) {...\"\n                if /** @src 1:25380:25399  \"validationData == 0\" */ iszero(var_validationData)\n                /// @src 1:25376:25452  \"if (validationData == 0) {...\"\n                {\n                    /// @src 1:25415:25441  \"return (address(0), false)\"\n                    var_aggregator := /** @src 1:25398:25399  \"0\" */ 0x00\n                    /// @src 1:25415:25441  \"return (address(0), false)\"\n                    var_outOfTimeRange := /** @src 1:25398:25399  \"0\" */ 0x00\n                    /// @src 1:25415:25441  \"return (address(0), false)\"\n                    leave\n                }\n                /// @src 1:25490:25526  \"_parseValidationData(validationData)\"\n                let expr_1982_mpos := fun_parseValidationData(var_validationData)\n                /// @src 1:595:33492  \"contract EntryPoint is...\"\n                let _1 := 0xffffffffffff\n                /// @src 1:25619:25701  \"block.timestamp > data.validUntil ||...\"\n                let expr := /** @src 1:25619:25652  \"block.timestamp > data.validUntil\" */ gt(/** @src 1:25619:25634  \"block.timestamp\" */ timestamp(), /** @src 1:595:33492  \"contract EntryPoint is...\" */ and(mload(/** @src 1:25637:25652  \"data.validUntil\" */ add(expr_1982_mpos, 64)), /** @src 1:595:33492  \"contract EntryPoint is...\" */ _1))\n                /// @src 1:25619:25701  \"block.timestamp > data.validUntil ||...\"\n                if iszero(expr)\n                {\n                    expr := /** @src 1:25668:25701  \"block.timestamp < data.validAfter\" */ lt(/** @src 1:25619:25634  \"block.timestamp\" */ timestamp(), /** @src 1:595:33492  \"contract EntryPoint is...\" */ and(mload(/** @src 1:25686:25701  \"data.validAfter\" */ add(expr_1982_mpos, 32)), /** @src 1:595:33492  \"contract EntryPoint is...\" */ _1))\n                }\n                /// @src 1:25590:25701  \"outOfTimeRange =...\"\n                var_outOfTimeRange := expr\n                /// @src 1:25711:25739  \"aggregator = data.aggregator\"\n                var_aggregator := /** @src 1:595:33492  \"contract EntryPoint is...\" */ and(mload(/** @src 1:25724:25739  \"data.aggregator\" */ expr_1982_mpos), /** @src 1:595:33492  \"contract EntryPoint is...\" */ sub(shl(160, 1), 1))\n            }\n            function require_helper_stringliteral_2427(condition)\n            {\n                if iszero(condition)\n                {\n                    let memPtr := mload(64)\n                    mstore(memPtr, shl(229, 4594637))\n                    mstore(add(memPtr, 4), 32)\n                    mstore(add(memPtr, 36), 16)\n                    mstore(add(memPtr, 68), \"value nhu cut 77\")\n                    revert(memPtr, 100)\n                }\n            }\n            function require_helper_stringliteral_1ea0(condition)\n            {\n                if iszero(condition)\n                {\n                    let memPtr := mload(64)\n                    mstore(memPtr, shl(229, 4594637))\n                    mstore(add(memPtr, 4), 32)\n                    mstore(add(memPtr, 36), 16)\n                    mstore(add(memPtr, 68), \"value nhu cut 88\")\n                    revert(memPtr, 100)\n                }\n            }\n            function require_helper_stringliteral_a581(condition)\n            {\n                if iszero(condition)\n                {\n                    let memPtr := mload(64)\n                    mstore(memPtr, shl(229, 4594637))\n                    mstore(add(memPtr, 4), 32)\n                    mstore(add(memPtr, 36), 16)\n                    mstore(add(memPtr, 68), \"value nhu cut 99\")\n                    revert(memPtr, 100)\n                }\n            }\n            function require_helper_stringliteral_2454(condition)\n            {\n                if iszero(condition)\n                {\n                    let memPtr := mload(64)\n                    mstore(memPtr, shl(229, 4594637))\n                    mstore(add(memPtr, 4), 32)\n                    mstore(add(memPtr, 36), 24)\n                    mstore(add(memPtr, 68), \"AA94 gas values overflow\")\n                    revert(memPtr, 100)\n                }\n            }\n            function require_helper_stringliteral_02b1(condition)\n            {\n                if iszero(condition)\n                {\n                    let memPtr := mload(64)\n                    mstore(memPtr, shl(229, 4594637))\n                    mstore(add(memPtr, 4), 32)\n                    mstore(add(memPtr, 36), 17)\n                    mstore(add(memPtr, 68), \"value nhu cut 100\")\n                    revert(memPtr, 100)\n                }\n            }\n            function require_helper_stringliteral_c941(condition)\n            {\n                if iszero(condition)\n                {\n                    let memPtr := mload(64)\n                    mstore(memPtr, shl(229, 4594637))\n                    mstore(add(memPtr, 4), 32)\n                    mstore(add(memPtr, 36), 17)\n                    mstore(add(memPtr, 68), \"value nhu cut 111\")\n                    revert(memPtr, 100)\n                }\n            }\n            function abi_encode_uint256_stringliteral_1a6d_29536(headStart) -> tail\n            {\n                mstore(headStart, /** @src -1:-1:-1 */ 0)\n                /// @src 1:595:33492  \"contract EntryPoint is...\"\n                mstore(add(headStart, 32), 64)\n                mstore(add(headStart, 64), 26)\n                mstore(add(headStart, 96), \"AA25 invalid account nonce\")\n                tail := add(headStart, 128)\n            }\n            function abi_encode_uint256_stringliteral_1a6d(headStart, value0) -> tail\n            {\n                mstore(headStart, value0)\n                mstore(add(headStart, 32), 64)\n                mstore(add(headStart, 64), 26)\n                mstore(add(headStart, 96), \"AA25 invalid account nonce\")\n                tail := add(headStart, 128)\n            }\n            function require_helper_stringliteral_d6fc(condition)\n            {\n                if iszero(condition)\n                {\n                    let memPtr := mload(64)\n                    mstore(memPtr, shl(229, 4594637))\n                    mstore(add(memPtr, 4), 32)\n                    mstore(add(memPtr, 36), 17)\n                    mstore(add(memPtr, 68), \"value nhu cut 122\")\n                    revert(memPtr, 100)\n                }\n            }\n            function require_helper_stringliteral_e24c(condition)\n            {\n                if iszero(condition)\n                {\n                    let memPtr := mload(64)\n                    mstore(memPtr, shl(229, 4594637))\n                    mstore(add(memPtr, 4), 32)\n                    mstore(add(memPtr, 36), 17)\n                    mstore(add(memPtr, 68), \"value nhu cut 123\")\n                    revert(memPtr, 100)\n                }\n            }\n            function abi_encode_uint256_stringliteral_7d1d_29538(headStart) -> tail\n            {\n                mstore(headStart, /** @src -1:-1:-1 */ 0)\n                /// @src 1:595:33492  \"contract EntryPoint is...\"\n                mstore(add(headStart, 32), 64)\n                mstore(add(headStart, 64), 30)\n                mstore(add(headStart, 96), \"AA40 over verificationGasLimit\")\n                tail := add(headStart, 128)\n            }\n            function abi_encode_uint256_stringliteral_7d1d(headStart, value0) -> tail\n            {\n                mstore(headStart, value0)\n                mstore(add(headStart, 32), 64)\n                mstore(add(headStart, 64), 30)\n                mstore(add(headStart, 96), \"AA40 over verificationGasLimit\")\n                tail := add(headStart, 128)\n            }\n            function require_helper_stringliteral_2fb4(condition)\n            {\n                if iszero(condition)\n                {\n                    let memPtr := mload(64)\n                    mstore(memPtr, shl(229, 4594637))\n                    mstore(add(memPtr, 4), 32)\n                    mstore(add(memPtr, 36), 17)\n                    mstore(add(memPtr, 68), \"value nhu cut 124\")\n                    revert(memPtr, 100)\n                }\n            }\n            function require_helper_stringliteral_6f5f(condition)\n            {\n                if iszero(condition)\n                {\n                    let memPtr := mload(64)\n                    mstore(memPtr, shl(229, 4594637))\n                    mstore(add(memPtr, 4), 32)\n                    mstore(add(memPtr, 36), 17)\n                    mstore(add(memPtr, 68), \"value nhu cut 125\")\n                    revert(memPtr, 100)\n                }\n            }\n            /// @ast-id 2251 @src 1:26103:28930  \"function _validatePrepayment(...\"\n            function fun_validatePrepayment_19814(var_userOp_offset, var_outOpInfo_mpos) -> var_validationData, var_paymasterValidationData\n            {\n                /// @src 1:26296:26327  \"uint256 paymasterValidationData\"\n                var_paymasterValidationData := /** @src -1:-1:-1 */ 0\n                /// @src 1:26343:26385  \"require(msg.value > 7, \\\"value nhu cut 77\\\")\"\n                require_helper_stringliteral_2427(/** @src 1:26351:26364  \"msg.value > 7\" */ gt(/** @src 1:26351:26360  \"msg.value\" */ callvalue(), /** @src 1:26363:26364  \"7\" */ 0x07))\n                /// @src 1:26412:26421  \"gasleft()\"\n                let expr := gas()\n                /// @src 1:26461:26478  \"outOpInfo.mUserOp\"\n                let _mpos := mload(var_outOpInfo_mpos)\n                /// @src 1:26516:26523  \"mUserOp\"\n                fun_copyUserOpToMemory(var_userOp_offset, _mpos)\n                /// @src 1:26534:26576  \"require(msg.value > 8, \\\"value nhu cut 88\\\")\"\n                require_helper_stringliteral_1ea0(/** @src 1:26542:26555  \"msg.value > 8\" */ gt(/** @src 1:26351:26360  \"msg.value\" */ callvalue(), /** @src 1:26554:26555  \"8\" */ 0x08))\n                /// @src 1:595:33492  \"contract EntryPoint is...\"\n                mstore(/** @src 1:26586:26606  \"outOpInfo.userOpHash\" */ add(var_outOpInfo_mpos, 32), /** @src 1:26609:26630  \"getUserOpHash(userOp)\" */ fun_getUserOpHash(var_userOp_offset))\n                /// @src 1:26640:26682  \"require(msg.value > 9, \\\"value nhu cut 99\\\")\"\n                require_helper_stringliteral_a581(/** @src 1:26648:26661  \"msg.value > 9\" */ gt(/** @src 1:26351:26360  \"msg.value\" */ callvalue(), /** @src 1:26660:26661  \"9\" */ 0x09))\n                /// @src 1:595:33492  \"contract EntryPoint is...\"\n                let _1 := mload(/** @src 1:26867:26893  \"mUserOp.preVerificationGas\" */ add(_mpos, 128))\n                /// @src 1:26867:26936  \"mUserOp.preVerificationGas |...\"\n                let expr_1 := or(_1, /** @src 1:595:33492  \"contract EntryPoint is...\" */ mload(/** @src 1:26908:26936  \"mUserOp.verificationGasLimit\" */ add(_mpos, 96)))\n                /// @src 1:26867:26971  \"mUserOp.preVerificationGas |...\"\n                let expr_2 := or(expr_1, /** @src 1:595:33492  \"contract EntryPoint is...\" */ mload(/** @src 1:26951:26971  \"mUserOp.callGasLimit\" */ add(_mpos, 64)))\n                /// @src 1:27057:27127  \"require(maxGasValues <= type(uint120).max, \\\"AA94 gas values overflow\\\")\"\n                require_helper_stringliteral_2454(/** @src 1:27065:27098  \"maxGasValues <= type(uint120).max\" */ iszero(gt(/** @src 1:26867:27047  \"mUserOp.preVerificationGas |...\" */ or(/** @src 1:26867:27005  \"mUserOp.preVerificationGas |...\" */ or(expr_2, /** @src 1:595:33492  \"contract EntryPoint is...\" */ calldataload(/** @src 1:26986:27005  \"userOp.maxFeePerGas\" */ add(var_userOp_offset, 224))), /** @src 1:595:33492  \"contract EntryPoint is...\" */ calldataload(/** @src 1:27020:27047  \"userOp.maxPriorityFeePerGas\" */ add(var_userOp_offset, 256))), /** @src 1:595:33492  \"contract EntryPoint is...\" */ 0xffffffffffffffffffffffffffffff)))\n                /// @src 1:27216:27244  \"_getRequiredPrefund(mUserOp)\"\n                let expr_3 := fun_getRequiredPrefund(_mpos)\n                /// @src 1:27254:27298  \"require(msg.value > 10, \\\"value nhu cut 100\\\")\"\n                require_helper_stringliteral_02b1(/** @src 1:27262:27276  \"msg.value > 10\" */ gt(/** @src 1:26351:26360  \"msg.value\" */ callvalue(), /** @src 1:27274:27276  \"10\" */ 0x0a))\n                /// @src 1:27397:27526  \"_validateAccountPrepayment(...\"\n                let expr_component, expr_component_1 := fun_validateAccountPrepayment_29535(var_userOp_offset, var_outOpInfo_mpos, expr_3)\n                /// @src 1:27308:27526  \"(...\"\n                var_validationData := expr_component_1\n                /// @src 1:27536:27580  \"require(msg.value > 11, \\\"value nhu cut 111\\\")\"\n                require_helper_stringliteral_c941(/** @src 1:27544:27558  \"msg.value > 11\" */ gt(/** @src 1:26351:26360  \"msg.value\" */ callvalue(), /** @src 1:27556:27558  \"11\" */ 0x0b))\n                /// @src 1:27620:27634  \"mUserOp.sender\"\n                let _2 := /** @src 1:595:33492  \"contract EntryPoint is...\" */ cleanup_address(mload(/** @src 1:27620:27634  \"mUserOp.sender\" */ _mpos))\n                /// @src 1:27591:27731  \"if (!_validateAndUpdateNonce(mUserOp.sender, mUserOp.nonce)) {...\"\n                if /** @src 1:27595:27650  \"!_validateAndUpdateNonce(mUserOp.sender, mUserOp.nonce)\" */ cleanup_bool(iszero(/** @src 1:27596:27650  \"_validateAndUpdateNonce(mUserOp.sender, mUserOp.nonce)\" */ fun_validateAndUpdateNonce(_2, /** @src 1:595:33492  \"contract EntryPoint is...\" */ mload(/** @src 1:27636:27649  \"mUserOp.nonce\" */ add(_mpos, /** @src 1:26586:26606  \"outOpInfo.userOpHash\" */ 32)))))\n                /// @src 1:27591:27731  \"if (!_validateAndUpdateNonce(mUserOp.sender, mUserOp.nonce)) {...\"\n                {\n                    /// @src 1:27673:27720  \"FailedOp(opIndex, \\\"AA25 invalid account nonce\\\")\"\n                    let _3 := /** @src 1:595:33492  \"contract EntryPoint is...\" */ mload(/** @src 1:26951:26971  \"mUserOp.callGasLimit\" */ 64)\n                    /// @src 1:27673:27720  \"FailedOp(opIndex, \\\"AA25 invalid account nonce\\\")\"\n                    mstore(_3, /** @src 1:3283:3319  \"FailedOp(opIndex, \\\"AA95 out of gas\\\")\" */ shl(225, 0x1101335b))\n                    /// @src 1:27673:27720  \"FailedOp(opIndex, \\\"AA25 invalid account nonce\\\")\"\n                    revert(_3, sub(abi_encode_uint256_stringliteral_1a6d_29536(add(_3, 4)), _3))\n                }\n                /// @src 1:27591:27731  \"if (!_validateAndUpdateNonce(mUserOp.sender, mUserOp.nonce)) {...\"\n                fun_numberMarker()\n                /// @src 1:27932:27952  \"bytes memory context\"\n                let var_context_mpos := /** @src -1:-1:-1 */ 0\n                /// @src 1:27932:27952  \"bytes memory context\"\n                var_context_mpos := /** @src 1:26908:26936  \"mUserOp.verificationGasLimit\" */ 96\n                /// @src 1:27962:28264  \"if (mUserOp.paymaster != address(0)) {...\"\n                if /** @src 1:27966:27997  \"mUserOp.paymaster != address(0)\" */ iszero(iszero(/** @src 1:595:33492  \"contract EntryPoint is...\" */ and(cleanup_address(mload(/** @src 1:27966:27983  \"mUserOp.paymaster\" */ add(_mpos, 160))), /** @src 1:595:33492  \"contract EntryPoint is...\" */ sub(shl(160, 1), 1))))\n                /// @src 1:27962:28264  \"if (mUserOp.paymaster != address(0)) {...\"\n                {\n                    /// @src 1:28050:28253  \"_validatePaymasterPrepayment(...\"\n                    let expr_component_mpos, expr_component_2 := fun_validatePaymasterPrepayment_29537(var_userOp_offset, var_outOpInfo_mpos, expr_3, expr_component)\n                    /// @src 1:28013:28253  \"(context, paymasterValidationData) = _validatePaymasterPrepayment(...\"\n                    var_paymasterValidationData := expr_component_2\n                    var_context_mpos := expr_component_mpos\n                }\n                /// @src 1:28273:28317  \"require(msg.value > 12, \\\"value nhu cut 122\\\")\"\n                require_helper_stringliteral_d6fc(/** @src 1:28281:28295  \"msg.value > 12\" */ gt(/** @src 1:26351:26360  \"msg.value\" */ callvalue(), /** @src 1:28293:28295  \"12\" */ 0x0c))\n                /// @src 1:1122:1126  \"2048\"\n                let diff := sub(expr, /** @src 1:28379:28388  \"gasleft()\" */ gas())\n                /// @src 1:28402:28446  \"require(msg.value > 13, \\\"value nhu cut 123\\\")\"\n                require_helper_stringliteral_e24c(/** @src 1:28410:28424  \"msg.value > 13\" */ gt(/** @src 1:26351:26360  \"msg.value\" */ callvalue(), /** @src 1:28422:28424  \"13\" */ 0x0d))\n                /// @src 1:28461:28595  \"if (userOp.verificationGasLimit < gasUsed) {...\"\n                if /** @src 1:28465:28502  \"userOp.verificationGasLimit < gasUsed\" */ lt(/** @src 1:595:33492  \"contract EntryPoint is...\" */ calldataload(/** @src 1:28465:28492  \"userOp.verificationGasLimit\" */ add(var_userOp_offset, /** @src 1:27966:27983  \"mUserOp.paymaster\" */ 160)), /** @src 1:28465:28502  \"userOp.verificationGasLimit < gasUsed\" */ diff)\n                /// @src 1:28461:28595  \"if (userOp.verificationGasLimit < gasUsed) {...\"\n                {\n                    /// @src 1:28529:28580  \"FailedOp(opIndex, \\\"AA40 over verificationGasLimit\\\")\"\n                    let _4 := /** @src 1:595:33492  \"contract EntryPoint is...\" */ mload(/** @src 1:26951:26971  \"mUserOp.callGasLimit\" */ 64)\n                    /// @src 1:28529:28580  \"FailedOp(opIndex, \\\"AA40 over verificationGasLimit\\\")\"\n                    mstore(_4, /** @src 1:3283:3319  \"FailedOp(opIndex, \\\"AA95 out of gas\\\")\" */ shl(225, 0x1101335b))\n                    /// @src 1:28529:28580  \"FailedOp(opIndex, \\\"AA40 over verificationGasLimit\\\")\"\n                    revert(_4, sub(abi_encode_uint256_stringliteral_7d1d_29538(add(_4, 4)), _4))\n                }\n                /// @src 1:28608:28652  \"require(msg.value > 14, \\\"value nhu cut 124\\\")\"\n                require_helper_stringliteral_2fb4(/** @src 1:28616:28630  \"msg.value > 14\" */ gt(/** @src 1:26351:26360  \"msg.value\" */ callvalue(), /** @src 1:28628:28630  \"14\" */ 0x0e))\n                /// @src 1:595:33492  \"contract EntryPoint is...\"\n                mstore(/** @src 1:28667:28684  \"outOpInfo.prefund\" */ add(var_outOpInfo_mpos, /** @src 1:26951:26971  \"mUserOp.callGasLimit\" */ 64), /** @src 1:595:33492  \"contract EntryPoint is...\" */ expr_3)\n                mstore(/** @src 1:28716:28739  \"outOpInfo.contextOffset\" */ add(var_outOpInfo_mpos, /** @src 1:26908:26936  \"mUserOp.verificationGasLimit\" */ 96), /** @src 1:595:33492  \"contract EntryPoint is...\" */ var_context_mpos)\n                /// @src 1:28787:28831  \"require(msg.value > 15, \\\"value nhu cut 125\\\")\"\n                require_helper_stringliteral_6f5f(/** @src 1:28795:28809  \"msg.value > 15\" */ gt(/** @src 1:26351:26360  \"msg.value\" */ callvalue(), /** @src 1:28807:28809  \"15\" */ 0x0f))\n                /// @src 1:1122:1126  \"2048\"\n                let diff_1 := sub(expr, /** @src 1:28876:28885  \"gasleft()\" */ gas())\n                /// @src 1:595:33492  \"contract EntryPoint is...\"\n                mstore(/** @src 1:28846:28864  \"outOpInfo.preOpGas\" */ add(var_outOpInfo_mpos, /** @src 1:26867:26893  \"mUserOp.preVerificationGas\" */ 128), /** @src 1:595:33492  \"contract EntryPoint is...\" */ add(diff_1, calldataload(/** @src 1:28888:28913  \"userOp.preVerificationGas\" */ add(var_userOp_offset, 192))))\n            }\n            /// @ast-id 2251 @src 1:26103:28930  \"function _validatePrepayment(...\"\n            function fun_validatePrepayment(var_opIndex, var_userOp_2010_offset, var_outOpInfo_mpos) -> var_validationData, var_paymasterValidationData\n            {\n                /// @src 1:26296:26327  \"uint256 paymasterValidationData\"\n                var_paymasterValidationData := /** @src 1:595:33492  \"contract EntryPoint is...\" */ 0\n                /// @src 1:26343:26385  \"require(msg.value > 7, \\\"value nhu cut 77\\\")\"\n                require_helper_stringliteral_2427(/** @src 1:26351:26364  \"msg.value > 7\" */ gt(/** @src 1:26351:26360  \"msg.value\" */ callvalue(), /** @src 1:26363:26364  \"7\" */ 0x07))\n                /// @src 1:26412:26421  \"gasleft()\"\n                let expr := gas()\n                /// @src 1:26461:26478  \"outOpInfo.mUserOp\"\n                let _381_mpos := mload(var_outOpInfo_mpos)\n                /// @src 1:26516:26523  \"mUserOp\"\n                fun_copyUserOpToMemory(var_userOp_2010_offset, _381_mpos)\n                /// @src 1:26534:26576  \"require(msg.value > 8, \\\"value nhu cut 88\\\")\"\n                require_helper_stringliteral_1ea0(/** @src 1:26542:26555  \"msg.value > 8\" */ gt(/** @src 1:26351:26360  \"msg.value\" */ callvalue(), /** @src 1:26554:26555  \"8\" */ 0x08))\n                /// @src 1:595:33492  \"contract EntryPoint is...\"\n                mstore(/** @src 1:26586:26606  \"outOpInfo.userOpHash\" */ add(var_outOpInfo_mpos, 32), /** @src 1:26609:26630  \"getUserOpHash(userOp)\" */ fun_getUserOpHash(var_userOp_2010_offset))\n                /// @src 1:26640:26682  \"require(msg.value > 9, \\\"value nhu cut 99\\\")\"\n                require_helper_stringliteral_a581(/** @src 1:26648:26661  \"msg.value > 9\" */ gt(/** @src 1:26351:26360  \"msg.value\" */ callvalue(), /** @src 1:26660:26661  \"9\" */ 0x09))\n                /// @src 1:595:33492  \"contract EntryPoint is...\"\n                let _1 := mload(/** @src 1:26867:26893  \"mUserOp.preVerificationGas\" */ add(_381_mpos, 128))\n                /// @src 1:26867:26936  \"mUserOp.preVerificationGas |...\"\n                let expr_1 := or(_1, /** @src 1:595:33492  \"contract EntryPoint is...\" */ mload(/** @src 1:26908:26936  \"mUserOp.verificationGasLimit\" */ add(_381_mpos, 96)))\n                /// @src 1:26867:26971  \"mUserOp.preVerificationGas |...\"\n                let expr_2 := or(expr_1, /** @src 1:595:33492  \"contract EntryPoint is...\" */ mload(/** @src 1:26951:26971  \"mUserOp.callGasLimit\" */ add(_381_mpos, 64)))\n                /// @src 1:27057:27127  \"require(maxGasValues <= type(uint120).max, \\\"AA94 gas values overflow\\\")\"\n                require_helper_stringliteral_2454(/** @src 1:27065:27098  \"maxGasValues <= type(uint120).max\" */ iszero(gt(/** @src 1:26867:27047  \"mUserOp.preVerificationGas |...\" */ or(/** @src 1:26867:27005  \"mUserOp.preVerificationGas |...\" */ or(expr_2, /** @src 1:595:33492  \"contract EntryPoint is...\" */ calldataload(/** @src 1:26986:27005  \"userOp.maxFeePerGas\" */ add(var_userOp_2010_offset, 224))), /** @src 1:595:33492  \"contract EntryPoint is...\" */ calldataload(/** @src 1:27020:27047  \"userOp.maxPriorityFeePerGas\" */ add(var_userOp_2010_offset, 256))), /** @src 1:595:33492  \"contract EntryPoint is...\" */ 0xffffffffffffffffffffffffffffff)))\n                /// @src 1:27216:27244  \"_getRequiredPrefund(mUserOp)\"\n                let expr_3 := fun_getRequiredPrefund(_381_mpos)\n                /// @src 1:27254:27298  \"require(msg.value > 10, \\\"value nhu cut 100\\\")\"\n                require_helper_stringliteral_02b1(/** @src 1:27262:27276  \"msg.value > 10\" */ gt(/** @src 1:26351:26360  \"msg.value\" */ callvalue(), /** @src 1:27274:27276  \"10\" */ 0x0a))\n                /// @src 1:27397:27526  \"_validateAccountPrepayment(...\"\n                let expr_2121_component, expr_2121_component_1 := fun_validateAccountPrepayment(var_opIndex, var_userOp_2010_offset, var_outOpInfo_mpos, expr_3)\n                /// @src 1:27308:27526  \"(...\"\n                var_validationData := expr_2121_component_1\n                /// @src 1:27536:27580  \"require(msg.value > 11, \\\"value nhu cut 111\\\")\"\n                require_helper_stringliteral_c941(/** @src 1:27544:27558  \"msg.value > 11\" */ gt(/** @src 1:26351:26360  \"msg.value\" */ callvalue(), /** @src 1:27556:27558  \"11\" */ 0x0b))\n                /// @src 1:27620:27634  \"mUserOp.sender\"\n                let _2 := /** @src 1:595:33492  \"contract EntryPoint is...\" */ cleanup_address(mload(/** @src 1:27620:27634  \"mUserOp.sender\" */ _381_mpos))\n                /// @src 1:27591:27731  \"if (!_validateAndUpdateNonce(mUserOp.sender, mUserOp.nonce)) {...\"\n                if /** @src 1:27595:27650  \"!_validateAndUpdateNonce(mUserOp.sender, mUserOp.nonce)\" */ cleanup_bool(iszero(/** @src 1:27596:27650  \"_validateAndUpdateNonce(mUserOp.sender, mUserOp.nonce)\" */ fun_validateAndUpdateNonce(_2, /** @src 1:595:33492  \"contract EntryPoint is...\" */ mload(/** @src 1:27636:27649  \"mUserOp.nonce\" */ add(_381_mpos, /** @src 1:26586:26606  \"outOpInfo.userOpHash\" */ 32)))))\n                /// @src 1:27591:27731  \"if (!_validateAndUpdateNonce(mUserOp.sender, mUserOp.nonce)) {...\"\n                {\n                    /// @src 1:27673:27720  \"FailedOp(opIndex, \\\"AA25 invalid account nonce\\\")\"\n                    let _3 := /** @src 1:595:33492  \"contract EntryPoint is...\" */ mload(/** @src 1:26951:26971  \"mUserOp.callGasLimit\" */ 64)\n                    /// @src 1:27673:27720  \"FailedOp(opIndex, \\\"AA25 invalid account nonce\\\")\"\n                    mstore(_3, /** @src 1:3283:3319  \"FailedOp(opIndex, \\\"AA95 out of gas\\\")\" */ shl(225, 0x1101335b))\n                    /// @src 1:27673:27720  \"FailedOp(opIndex, \\\"AA25 invalid account nonce\\\")\"\n                    revert(_3, sub(abi_encode_uint256_stringliteral_1a6d(add(_3, 4), var_opIndex), _3))\n                }\n                /// @src 1:27591:27731  \"if (!_validateAndUpdateNonce(mUserOp.sender, mUserOp.nonce)) {...\"\n                fun_numberMarker()\n                /// @src 1:27932:27952  \"bytes memory context\"\n                let var_context_2150_mpos := /** @src 1:595:33492  \"contract EntryPoint is...\" */ 0\n                /// @src 1:27932:27952  \"bytes memory context\"\n                var_context_2150_mpos := /** @src 1:26908:26936  \"mUserOp.verificationGasLimit\" */ 96\n                /// @src 1:27962:28264  \"if (mUserOp.paymaster != address(0)) {...\"\n                if /** @src 1:27966:27997  \"mUserOp.paymaster != address(0)\" */ iszero(iszero(/** @src 1:595:33492  \"contract EntryPoint is...\" */ and(cleanup_address(mload(/** @src 1:27966:27983  \"mUserOp.paymaster\" */ add(_381_mpos, 160))), /** @src 1:595:33492  \"contract EntryPoint is...\" */ sub(shl(160, 1), 1))))\n                /// @src 1:27962:28264  \"if (mUserOp.paymaster != address(0)) {...\"\n                {\n                    /// @src 1:28050:28253  \"_validatePaymasterPrepayment(...\"\n                    let expr_component_mpos, expr_2168_component := fun_validatePaymasterPrepayment(var_opIndex, var_userOp_2010_offset, var_outOpInfo_mpos, expr_3, expr_2121_component)\n                    /// @src 1:28013:28253  \"(context, paymasterValidationData) = _validatePaymasterPrepayment(...\"\n                    var_paymasterValidationData := expr_2168_component\n                    var_context_2150_mpos := expr_component_mpos\n                }\n                /// @src 1:28273:28317  \"require(msg.value > 12, \\\"value nhu cut 122\\\")\"\n                require_helper_stringliteral_d6fc(/** @src 1:28281:28295  \"msg.value > 12\" */ gt(/** @src 1:26351:26360  \"msg.value\" */ callvalue(), /** @src 1:28293:28295  \"12\" */ 0x0c))\n                /// @src 1:1122:1126  \"2048\"\n                let diff := sub(expr, /** @src 1:28379:28388  \"gasleft()\" */ gas())\n                /// @src 1:28402:28446  \"require(msg.value > 13, \\\"value nhu cut 123\\\")\"\n                require_helper_stringliteral_e24c(/** @src 1:28410:28424  \"msg.value > 13\" */ gt(/** @src 1:26351:26360  \"msg.value\" */ callvalue(), /** @src 1:28422:28424  \"13\" */ 0x0d))\n                /// @src 1:28461:28595  \"if (userOp.verificationGasLimit < gasUsed) {...\"\n                if /** @src 1:28465:28502  \"userOp.verificationGasLimit < gasUsed\" */ lt(/** @src 1:595:33492  \"contract EntryPoint is...\" */ calldataload(/** @src 1:28465:28492  \"userOp.verificationGasLimit\" */ add(var_userOp_2010_offset, /** @src 1:27966:27983  \"mUserOp.paymaster\" */ 160)), /** @src 1:28465:28502  \"userOp.verificationGasLimit < gasUsed\" */ diff)\n                /// @src 1:28461:28595  \"if (userOp.verificationGasLimit < gasUsed) {...\"\n                {\n                    /// @src 1:28529:28580  \"FailedOp(opIndex, \\\"AA40 over verificationGasLimit\\\")\"\n                    let _4 := /** @src 1:595:33492  \"contract EntryPoint is...\" */ mload(/** @src 1:26951:26971  \"mUserOp.callGasLimit\" */ 64)\n                    /// @src 1:28529:28580  \"FailedOp(opIndex, \\\"AA40 over verificationGasLimit\\\")\"\n                    mstore(_4, /** @src 1:3283:3319  \"FailedOp(opIndex, \\\"AA95 out of gas\\\")\" */ shl(225, 0x1101335b))\n                    /// @src 1:28529:28580  \"FailedOp(opIndex, \\\"AA40 over verificationGasLimit\\\")\"\n                    revert(_4, sub(abi_encode_uint256_stringliteral_7d1d(add(_4, 4), var_opIndex), _4))\n                }\n                /// @src 1:28608:28652  \"require(msg.value > 14, \\\"value nhu cut 124\\\")\"\n                require_helper_stringliteral_2fb4(/** @src 1:28616:28630  \"msg.value > 14\" */ gt(/** @src 1:26351:26360  \"msg.value\" */ callvalue(), /** @src 1:28628:28630  \"14\" */ 0x0e))\n                /// @src 1:595:33492  \"contract EntryPoint is...\"\n                mstore(/** @src 1:28667:28684  \"outOpInfo.prefund\" */ add(var_outOpInfo_mpos, /** @src 1:26951:26971  \"mUserOp.callGasLimit\" */ 64), /** @src 1:595:33492  \"contract EntryPoint is...\" */ expr_3)\n                mstore(/** @src 1:28716:28739  \"outOpInfo.contextOffset\" */ add(var_outOpInfo_mpos, /** @src 1:26908:26936  \"mUserOp.verificationGasLimit\" */ 96), /** @src 1:595:33492  \"contract EntryPoint is...\" */ var_context_2150_mpos)\n                /// @src 1:28787:28831  \"require(msg.value > 15, \\\"value nhu cut 125\\\")\"\n                require_helper_stringliteral_6f5f(/** @src 1:28795:28809  \"msg.value > 15\" */ gt(/** @src 1:26351:26360  \"msg.value\" */ callvalue(), /** @src 1:28807:28809  \"15\" */ 0x0f))\n                /// @src 1:1122:1126  \"2048\"\n                let diff_1 := sub(expr, /** @src 1:28876:28885  \"gasleft()\" */ gas())\n                /// @src 1:595:33492  \"contract EntryPoint is...\"\n                mstore(/** @src 1:28846:28864  \"outOpInfo.preOpGas\" */ add(var_outOpInfo_mpos, /** @src 1:26867:26893  \"mUserOp.preVerificationGas\" */ 128), /** @src 1:595:33492  \"contract EntryPoint is...\" */ add(diff_1, calldataload(/** @src 1:28888:28913  \"userOp.preVerificationGas\" */ add(var_userOp_2010_offset, 192))))\n            }\n            /// @src 1:595:33492  \"contract EntryPoint is...\"\n            function require_helper_stringliteral_bed5(condition)\n            {\n                if iszero(condition)\n                {\n                    let memPtr := mload(64)\n                    mstore(memPtr, shl(229, 4594637))\n                    mstore(add(memPtr, 4), 32)\n                    mstore(add(memPtr, 36), 29)\n                    mstore(add(memPtr, 68), \"AA93 invalid paymasterAndData\")\n                    revert(memPtr, 100)\n                }\n            }\n            /// @ast-id 1109 @src 1:12567:13466  \"function _copyUserOpToMemory(...\"\n            function fun_copyUserOpToMemory(var_userOp_1010_offset, var_mUserOp_mpos)\n            {\n                /// @src 1:12702:12732  \"mUserOp.sender = userOp.sender\"\n                write_to_memory_address(var_mUserOp_mpos, /** @src 1:12719:12732  \"userOp.sender\" */ read_from_calldatat_contract_IAggregator(var_userOp_1010_offset))\n                /// @src 1:595:33492  \"contract EntryPoint is...\"\n                mstore(/** @src 1:12742:12755  \"mUserOp.nonce\" */ add(var_mUserOp_mpos, /** @src 1:12758:12770  \"userOp.nonce\" */ 32), /** @src 1:595:33492  \"contract EntryPoint is...\" */ calldataload(/** @src 1:12758:12770  \"userOp.nonce\" */ add(var_userOp_1010_offset, 32)))\n                /// @src 1:595:33492  \"contract EntryPoint is...\"\n                mstore(/** @src 1:12780:12800  \"mUserOp.callGasLimit\" */ add(var_mUserOp_mpos, 64), /** @src 1:595:33492  \"contract EntryPoint is...\" */ calldataload(/** @src 1:12803:12822  \"userOp.callGasLimit\" */ add(var_userOp_1010_offset, 128)))\n                /// @src 1:595:33492  \"contract EntryPoint is...\"\n                mstore(/** @src 1:12832:12860  \"mUserOp.verificationGasLimit\" */ add(var_mUserOp_mpos, 96), /** @src 1:595:33492  \"contract EntryPoint is...\" */ calldataload(/** @src 1:12863:12890  \"userOp.verificationGasLimit\" */ add(var_userOp_1010_offset, 160)))\n                /// @src 1:595:33492  \"contract EntryPoint is...\"\n                mstore(/** @src 1:12900:12926  \"mUserOp.preVerificationGas\" */ add(var_mUserOp_mpos, /** @src 1:12803:12822  \"userOp.callGasLimit\" */ 128), /** @src 1:595:33492  \"contract EntryPoint is...\" */ calldataload(/** @src 1:12929:12954  \"userOp.preVerificationGas\" */ add(var_userOp_1010_offset, 192)))\n                /// @src 1:595:33492  \"contract EntryPoint is...\"\n                mstore(/** @src 1:12964:12984  \"mUserOp.maxFeePerGas\" */ add(var_mUserOp_mpos, /** @src 1:12929:12954  \"userOp.preVerificationGas\" */ 192), /** @src 1:595:33492  \"contract EntryPoint is...\" */ calldataload(/** @src 1:12987:13006  \"userOp.maxFeePerGas\" */ add(var_userOp_1010_offset, 224)))\n                /// @src 1:595:33492  \"contract EntryPoint is...\"\n                mstore(/** @src 1:13016:13044  \"mUserOp.maxPriorityFeePerGas\" */ add(var_mUserOp_mpos, /** @src 1:12987:13006  \"userOp.maxFeePerGas\" */ 224), /** @src 1:595:33492  \"contract EntryPoint is...\" */ calldataload(/** @src 1:13047:13074  \"userOp.maxPriorityFeePerGas\" */ add(var_userOp_1010_offset, 256)))\n                /// @src 1:13118:13141  \"userOp.paymasterAndData\"\n                let expr_1068_offset, expr_1068_length := access_calldata_tail_bytes_calldata(var_userOp_1010_offset, add(var_userOp_1010_offset, 288))\n                /// @src 1:13151:13460  \"if (paymasterAndData.length > 0) {...\"\n                switch /** @src 1:13155:13182  \"paymasterAndData.length > 0\" */ iszero(iszero(expr_1068_length))\n                case /** @src 1:13151:13460  \"if (paymasterAndData.length > 0) {...\" */ 0 {\n                    /// @src 1:595:33492  \"contract EntryPoint is...\"\n                    mstore(/** @src 1:13419:13436  \"mUserOp.paymaster\" */ add(var_mUserOp_mpos, /** @src 1:12863:12890  \"userOp.verificationGasLimit\" */ 160), /** @src 1:595:33492  \"contract EntryPoint is...\" */ 0)\n                }\n                default /// @src 1:13151:13460  \"if (paymasterAndData.length > 0) {...\"\n                {\n                    /// @src 1:13198:13315  \"require(...\"\n                    require_helper_stringliteral_bed5(/** @src 1:13223:13252  \"paymasterAndData.length >= 20\" */ iszero(lt(expr_1068_length, /** @src 1:13250:13252  \"20\" */ 0x14)))\n                    /// @src 1:13365:13386  \"paymasterAndData[:20]\"\n                    let expr_1091_offset, expr_1091_length := calldata_array_index_range_access_bytes_calldata(expr_1068_offset, expr_1068_length)\n                    /// @src 1:13329:13388  \"mUserOp.paymaster = address(bytes20(paymasterAndData[:20]))\"\n                    write_to_memory_address(/** @src 1:13329:13346  \"mUserOp.paymaster\" */ add(var_mUserOp_mpos, /** @src 1:12863:12890  \"userOp.verificationGasLimit\" */ 160), /** @src 1:13349:13388  \"address(bytes20(paymasterAndData[:20]))\" */ convert_bytes20_to_address(/** @src 1:13357:13387  \"bytes20(paymasterAndData[:20])\" */ convert_bytes_to_fixedbytes_from_bytes_calldata_to_bytes20(expr_1091_offset, expr_1091_length)))\n                }\n            }\n            /// @ast-id 1315 @src 1:15762:16403  \"function _getRequiredPrefund(...\"\n            function fun_getRequiredPrefund(var_mUserOp_1275_mpos) -> var_requiredPrefund\n            {\n                /// @src 1:16110:16141  \"mUserOp.paymaster != address(0)\"\n                let expr := iszero(iszero(/** @src 1:595:33492  \"contract EntryPoint is...\" */ and(mload(/** @src 1:16110:16127  \"mUserOp.paymaster\" */ add(var_mUserOp_1275_mpos, 160)), /** @src 1:595:33492  \"contract EntryPoint is...\" */ sub(shl(160, 1), 1))))\n                /// @src 1:16110:16149  \"mUserOp.paymaster != address(0) ? 3 : 1\"\n                let expr_1 := /** @src -1:-1:-1 */ 0\n                /// @src 1:16110:16149  \"mUserOp.paymaster != address(0) ? 3 : 1\"\n                switch expr\n                case 0 {\n                    expr_1 := /** @src 1:16148:16149  \"1\" */ 0x01\n                }\n                default /// @src 1:16110:16149  \"mUserOp.paymaster != address(0) ? 3 : 1\"\n                {\n                    expr_1 := /** @src 1:16144:16145  \"3\" */ 0x03\n                }\n                /// @src 1:595:33492  \"contract EntryPoint is...\"\n                let _1 := mload(/** @src 1:16185:16205  \"mUserOp.callGasLimit\" */ add(var_mUserOp_1275_mpos, 64))\n                /// @src 1:595:33492  \"contract EntryPoint is...\"\n                let sum := add(_1, mul(mload(/** @src 1:16224:16252  \"mUserOp.verificationGasLimit\" */ add(var_mUserOp_1275_mpos, 96)), /** @src 1:595:33492  \"contract EntryPoint is...\" */ and(/** @src 1:16096:16149  \"uint256 mul = mUserOp.paymaster != address(0) ? 3 : 1\" */ expr_1, /** @src 1:595:33492  \"contract EntryPoint is...\" */ 0xff)))\n                let sum_1 := add(sum, mload(/** @src 1:16293:16319  \"mUserOp.preVerificationGas\" */ add(var_mUserOp_1275_mpos, 128)))\n                /// @src 1:16334:16386  \"requiredPrefund = requiredGas * mUserOp.maxFeePerGas\"\n                var_requiredPrefund := /** @src 1:595:33492  \"contract EntryPoint is...\" */ mul(sum_1, mload(/** @src 1:16366:16386  \"mUserOp.maxFeePerGas\" */ add(var_mUserOp_1275_mpos, 192)))\n            }\n            /// @src 1:595:33492  \"contract EntryPoint is...\"\n            function abi_encode_struct_UserOperation_calldata_bytes32_uint256(headStart, value0, value1, value2) -> tail\n            {\n                mstore(headStart, 96)\n                tail := abi_encode_struct_UserOperation_calldata(value0, add(headStart, 96))\n                mstore(add(headStart, 32), value1)\n                mstore(add(headStart, 64), value2)\n            }\n            function string_concat_stringliteral_64c3_string(param) -> outPtr\n            {\n                outPtr := mload(64)\n                mstore(add(outPtr, 0x20), \"AA23 reverted: \")\n                let length := mload(param)\n                copy_memory_to_memory_with_cleanup(add(param, 0x20), add(outPtr, 47), length)\n                let _1 := sub(add(outPtr, length), outPtr)\n                mstore(outPtr, add(_1, 15))\n                finalize_allocation(outPtr, add(_1, 47))\n            }\n            function abi_encode_uint256_stringliteral_d8c5_36516(headStart) -> tail\n            {\n                mstore(headStart, /** @src -1:-1:-1 */ 0)\n                /// @src 1:595:33492  \"contract EntryPoint is...\"\n                mstore(add(headStart, 32), 64)\n                mstore(add(headStart, 64), 22)\n                mstore(add(headStart, 96), \"AA23 reverted (or OOG)\")\n                tail := add(headStart, 128)\n            }\n            function abi_encode_uint256_stringliteral_d8c5(headStart, value0) -> tail\n            {\n                mstore(headStart, value0)\n                mstore(add(headStart, 32), 64)\n                mstore(add(headStart, 64), 22)\n                mstore(add(headStart, 96), \"AA23 reverted (or OOG)\")\n                tail := add(headStart, 128)\n            }\n            function abi_encode_uint256_stringliteral_af9d_36517(headStart) -> tail\n            {\n                mstore(headStart, /** @src -1:-1:-1 */ 0)\n                /// @src 1:595:33492  \"contract EntryPoint is...\"\n                mstore(add(headStart, 32), 64)\n                mstore(add(headStart, 64), 23)\n                mstore(add(headStart, 96), \"AA21 didn't pay prefund\")\n                tail := add(headStart, 128)\n            }\n            function abi_encode_uint256_stringliteral_af9d(headStart, value0) -> tail\n            {\n                mstore(headStart, value0)\n                mstore(add(headStart, 32), 64)\n                mstore(add(headStart, 64), 23)\n                mstore(add(headStart, 96), \"AA21 didn't pay prefund\")\n                tail := add(headStart, 128)\n            }\n            function update_storage_value_offsett_uint112_to_uint112(slot, value)\n            {\n                sstore(slot, or(and(sload(slot), not(0xffffffffffffffffffffffffffff)), and(value, 0xffffffffffffffffffffffffffff)))\n            }\n            /// @ast-id 1704 @src 1:19665:21625  \"function _validateAccountPrepayment(...\"\n            function fun_validateAccountPrepayment_29535(var_op_offset, var_opInfo_mpos, var_requiredPrefund) -> var_gasUsedByValidateAccountPrepayment, var_validationData\n            {\n                /// @src 1:19937:19959  \"uint256 validationData\"\n                var_validationData := /** @src -1:-1:-1 */ 0\n                /// @src 1:19937:19959  \"uint256 validationData\"\n                let var_validationData_1 := /** @src -1:-1:-1 */ 0\n                /// @src 1:20025:20034  \"gasleft()\"\n                let expr := gas()\n                /// @src 1:20078:20092  \"opInfo.mUserOp\"\n                let _mpos := mload(var_opInfo_mpos)\n                /// @src 1:20123:20137  \"mUserOp.sender\"\n                let _1 := /** @src 1:595:33492  \"contract EntryPoint is...\" */ cleanup_address(mload(/** @src 1:20123:20137  \"mUserOp.sender\" */ _mpos))\n                /// @src 1:20190:20201  \"op.initCode\"\n                let expr_offset, expr_length := access_calldata_tail_bytes_calldata(var_op_offset, add(var_op_offset, 64))\n                fun_createSenderIfNeeded_36514(var_opInfo_mpos, expr_offset, expr_length)\n                /// @src 1:20236:20253  \"mUserOp.paymaster\"\n                let _2 := /** @src 1:595:33492  \"contract EntryPoint is...\" */ cleanup_address(mload(/** @src 1:20236:20253  \"mUserOp.paymaster\" */ add(_mpos, 160)))\n                /// @src 1:20216:20253  \"address paymaster = mUserOp.paymaster\"\n                fun_numberMarker()\n                /// @src 1:20295:20326  \"uint256 missingAccountFunds = 0\"\n                let var_missingAccountFunds := /** @src -1:-1:-1 */ var_validationData_1\n                /// @src 1:595:33492  \"contract EntryPoint is...\"\n                let _3 := sub(shl(160, 1), 1)\n                /// @src 1:20344:20367  \"paymaster == address(0)\"\n                let expr_1 := iszero(/** @src 1:595:33492  \"contract EntryPoint is...\" */ and(/** @src 1:20344:20367  \"paymaster == address(0)\" */ _2, /** @src 1:595:33492  \"contract EntryPoint is...\" */ _3))\n                /// @src 1:20340:20562  \"if (paymaster == address(0)) {...\"\n                if expr_1\n                {\n                    /// @src 1:20401:20418  \"balanceOf(sender)\"\n                    let expr_2 := /** @src 5:1197:1229  \"return deposits[account].deposit\" */ cleanup_uint112(/** @src 5:1204:1229  \"deposits[account].deposit\" */ read_from_storage_split_offset_uint112(/** @src 5:1204:1221  \"deposits[account]\" */ mapping_index_access_mapping_address_mapping_uint192_uint256_of_address(/** @src 1:20401:20418  \"balanceOf(sender)\" */ _1)))\n                    /// @src 1:20458:20547  \"bal > requiredPrefund...\"\n                    let expr_3 := /** @src -1:-1:-1 */ var_validationData_1\n                    /// @src 1:20458:20547  \"bal > requiredPrefund...\"\n                    switch /** @src 1:20458:20479  \"bal > requiredPrefund\" */ gt(expr_2, var_requiredPrefund)\n                    case /** @src 1:20458:20547  \"bal > requiredPrefund...\" */ 0 {\n                        expr_3 := /** @src 1:1122:1126  \"2048\" */ sub(/** @src 1:20526:20547  \"requiredPrefund - bal\" */ var_requiredPrefund, expr_2)\n                    }\n                    default /// @src 1:20458:20547  \"bal > requiredPrefund...\"\n                    {\n                        expr_3 := /** @src -1:-1:-1 */ var_validationData_1\n                    }\n                    /// @src 1:20436:20547  \"missingAccountFunds = bal > requiredPrefund...\"\n                    var_missingAccountFunds := expr_3\n                }\n                /// @src 1:595:33492  \"contract EntryPoint is...\"\n                let _4 := mload(/** @src 1:20653:20681  \"mUserOp.verificationGasLimit\" */ add(_mpos, 96))\n                /// @src 1:1122:1126  \"2048\"\n                let _5 := mload(/** @src 1:20704:20721  \"opInfo.userOpHash\" */ add(var_opInfo_mpos, 32))\n                /// @src 1:20595:20743  \"IAccount(sender).validateUserOp{...\"\n                let _6 := /** @src 1:595:33492  \"contract EntryPoint is...\" */ mload(/** @src 1:20190:20201  \"op.initCode\" */ 64)\n                /// @src 1:20595:20743  \"IAccount(sender).validateUserOp{...\"\n                mstore(_6, /** @src 1:595:33492  \"contract EntryPoint is...\" */ shl(224, 0x3a871cdd))\n                /// @src 1:20595:20743  \"IAccount(sender).validateUserOp{...\"\n                let trySuccessCondition := call(_4, /** @src 1:595:33492  \"contract EntryPoint is...\" */ and(/** @src 1:20595:20611  \"IAccount(sender)\" */ _1, /** @src 1:595:33492  \"contract EntryPoint is...\" */ _3), /** @src -1:-1:-1 */ var_validationData_1, /** @src 1:20595:20743  \"IAccount(sender).validateUserOp{...\" */ _6, sub(abi_encode_struct_UserOperation_calldata_bytes32_uint256(add(_6, 4), var_op_offset, _5, var_missingAccountFunds), _6), _6, /** @src 1:20704:20721  \"opInfo.userOpHash\" */ 32)\n                /// @src 1:20595:20743  \"IAccount(sender).validateUserOp{...\"\n                let expr_4 := /** @src -1:-1:-1 */ var_validationData_1\n                /// @src 1:20595:20743  \"IAccount(sender).validateUserOp{...\"\n                if trySuccessCondition\n                {\n                    let _7 := /** @src 1:20704:20721  \"opInfo.userOpHash\" */ 32\n                    /// @src 1:20595:20743  \"IAccount(sender).validateUserOp{...\"\n                    if gt(/** @src 1:20704:20721  \"opInfo.userOpHash\" */ _7, /** @src 1:20595:20743  \"IAccount(sender).validateUserOp{...\" */ returndatasize()) { _7 := returndatasize() }\n                    finalize_allocation(_6, _7)\n                    expr_4 := abi_decode_uint256_fromMemory(_6, add(_6, _7))\n                }\n                /// @src 1:20575:21149  \"try...\"\n                switch iszero(trySuccessCondition)\n                case 0 {\n                    /// @src 1:20808:20840  \"validationData = _validationData\"\n                    var_validationData := expr_4\n                }\n                default /// @src 1:20575:21149  \"try...\"\n                {\n                    let _8 := 1\n                    if eq(147028384, return_data_selector())\n                    {\n                        /// @src 1:20856:21059  \"catch Error(string memory revertReason) {...\"\n                        let _9 := try_decode_error_message()\n                        if _9\n                        {\n                            _8 := /** @src -1:-1:-1 */ var_validationData_1\n                            /// @src 1:20980:21026  \"string.concat(\\\"AA23 reverted: \\\", revertReason)\"\n                            let expr_mpos := string_concat_stringliteral_64c3_string(_9)\n                            /// @src 1:20921:21044  \"FailedOp(...\"\n                            let _10 := /** @src 1:595:33492  \"contract EntryPoint is...\" */ mload(/** @src 1:20190:20201  \"op.initCode\" */ 64)\n                            /// @src 1:20921:21044  \"FailedOp(...\"\n                            mstore(_10, /** @src 1:3283:3319  \"FailedOp(opIndex, \\\"AA95 out of gas\\\")\" */ shl(225, 0x1101335b))\n                            /// @src 1:20921:21044  \"FailedOp(...\"\n                            revert(_10, sub(abi_encode_uint256_bytes_29546(add(_10, /** @src 1:20595:20743  \"IAccount(sender).validateUserOp{...\" */ 4), /** @src 1:20921:21044  \"FailedOp(...\" */ expr_mpos), _10))\n                        }\n                    }\n                    /// @src 1:20575:21149  \"try...\"\n                    if _8\n                    {\n                        /// @src 1:21091:21134  \"FailedOp(opIndex, \\\"AA23 reverted (or OOG)\\\")\"\n                        let _11 := /** @src 1:595:33492  \"contract EntryPoint is...\" */ mload(/** @src 1:20190:20201  \"op.initCode\" */ 64)\n                        /// @src 1:21091:21134  \"FailedOp(opIndex, \\\"AA23 reverted (or OOG)\\\")\"\n                        mstore(_11, /** @src 1:3283:3319  \"FailedOp(opIndex, \\\"AA95 out of gas\\\")\" */ shl(225, 0x1101335b))\n                        /// @src 1:21091:21134  \"FailedOp(opIndex, \\\"AA23 reverted (or OOG)\\\")\"\n                        revert(_11, sub(abi_encode_uint256_stringliteral_d8c5_36516(add(_11, /** @src 1:20595:20743  \"IAccount(sender).validateUserOp{...\" */ 4)), /** @src 1:21091:21134  \"FailedOp(opIndex, \\\"AA23 reverted (or OOG)\\\")\" */ _11))\n                    }\n                }\n                /// @src 1:21162:21540  \"if (paymaster == address(0)) {...\"\n                if expr_1\n                {\n                    /// @src 1:21242:21258  \"deposits[sender]\"\n                    let _12 := mapping_index_access_mapping_address_mapping_uint192_uint256_of_address(_1)\n                    /// @src 1:21276:21312  \"uint256 deposit = senderInfo.deposit\"\n                    let var_deposit := cleanup_uint112(/** @src 1:595:33492  \"contract EntryPoint is...\" */ cleanup_uint112(sload(/** @src 1:21294:21312  \"senderInfo.deposit\" */ _12)))\n                    /// @src 1:21330:21453  \"if (requiredPrefund > deposit) {...\"\n                    if /** @src 1:21334:21359  \"requiredPrefund > deposit\" */ gt(var_requiredPrefund, var_deposit)\n                    /// @src 1:21330:21453  \"if (requiredPrefund > deposit) {...\"\n                    {\n                        /// @src 1:21390:21434  \"FailedOp(opIndex, \\\"AA21 didn't pay prefund\\\")\"\n                        let _13 := /** @src 1:595:33492  \"contract EntryPoint is...\" */ mload(/** @src 1:20190:20201  \"op.initCode\" */ 64)\n                        /// @src 1:21390:21434  \"FailedOp(opIndex, \\\"AA21 didn't pay prefund\\\")\"\n                        mstore(_13, /** @src 1:3283:3319  \"FailedOp(opIndex, \\\"AA95 out of gas\\\")\" */ shl(225, 0x1101335b))\n                        /// @src 1:21390:21434  \"FailedOp(opIndex, \\\"AA21 didn't pay prefund\\\")\"\n                        revert(_13, sub(abi_encode_uint256_stringliteral_af9d_36517(add(_13, /** @src 1:20595:20743  \"IAccount(sender).validateUserOp{...\" */ 4)), /** @src 1:21390:21434  \"FailedOp(opIndex, \\\"AA21 didn't pay prefund\\\")\" */ _13))\n                    }\n                    /// @src 1:21470:21525  \"senderInfo.deposit = uint112(deposit - requiredPrefund)\"\n                    update_storage_value_offsett_uint112_to_uint112(_12, /** @src 1:595:33492  \"contract EntryPoint is...\" */ and(/** @src 1:1122:1126  \"2048\" */ sub(/** @src 1:21499:21524  \"deposit - requiredPrefund\" */ var_deposit, var_requiredPrefund), /** @src 1:595:33492  \"contract EntryPoint is...\" */ 0xffffffffffffffffffffffffffff))\n                }\n                /// @src 1:21553:21608  \"gasUsedByValidateAccountPrepayment = preGas - gasleft()\"\n                var_gasUsedByValidateAccountPrepayment := /** @src 1:1122:1126  \"2048\" */ sub(expr, /** @src 1:21599:21608  \"gasleft()\" */ gas())\n            }\n            /// @ast-id 1704 @src 1:19665:21625  \"function _validateAccountPrepayment(...\"\n            function fun_validateAccountPrepayment(var_opIndex, var_op_1538_offset, var_opInfo_1541_mpos, var_requiredPrefund) -> var_gasUsedByValidateAccountPrepayment, var_validationData\n            {\n                /// @src 1:19937:19959  \"uint256 validationData\"\n                var_validationData := /** @src 1:595:33492  \"contract EntryPoint is...\" */ 0\n                /// @src 1:19937:19959  \"uint256 validationData\"\n                let var_validationData_1 := /** @src 1:595:33492  \"contract EntryPoint is...\" */ 0\n                /// @src 1:20025:20034  \"gasleft()\"\n                let expr := gas()\n                /// @src 1:20078:20092  \"opInfo.mUserOp\"\n                let _517_mpos := mload(var_opInfo_1541_mpos)\n                /// @src 1:20123:20137  \"mUserOp.sender\"\n                let _1 := /** @src 1:595:33492  \"contract EntryPoint is...\" */ cleanup_address(mload(/** @src 1:20123:20137  \"mUserOp.sender\" */ _517_mpos))\n                /// @src 1:20190:20201  \"op.initCode\"\n                let expr_1570_offset, expr_1570_length := access_calldata_tail_bytes_calldata(var_op_1538_offset, add(var_op_1538_offset, 64))\n                fun_createSenderIfNeeded(var_opIndex, var_opInfo_1541_mpos, expr_1570_offset, expr_1570_length)\n                /// @src 1:20236:20253  \"mUserOp.paymaster\"\n                let _2 := /** @src 1:595:33492  \"contract EntryPoint is...\" */ cleanup_address(mload(/** @src 1:20236:20253  \"mUserOp.paymaster\" */ add(_517_mpos, 160)))\n                /// @src 1:20216:20253  \"address paymaster = mUserOp.paymaster\"\n                fun_numberMarker()\n                /// @src 1:20295:20326  \"uint256 missingAccountFunds = 0\"\n                let var_missingAccountFunds := /** @src 1:595:33492  \"contract EntryPoint is...\" */ var_validationData_1\n                let _3 := sub(shl(160, 1), 1)\n                /// @src 1:20344:20367  \"paymaster == address(0)\"\n                let expr_1 := iszero(/** @src 1:595:33492  \"contract EntryPoint is...\" */ and(/** @src 1:20344:20367  \"paymaster == address(0)\" */ _2, /** @src 1:595:33492  \"contract EntryPoint is...\" */ _3))\n                /// @src 1:20340:20562  \"if (paymaster == address(0)) {...\"\n                if expr_1\n                {\n                    /// @src 1:20401:20418  \"balanceOf(sender)\"\n                    let expr_2 := /** @src 5:1197:1229  \"return deposits[account].deposit\" */ cleanup_uint112(/** @src 5:1204:1229  \"deposits[account].deposit\" */ read_from_storage_split_offset_uint112(/** @src 5:1204:1221  \"deposits[account]\" */ mapping_index_access_mapping_address_mapping_uint192_uint256_of_address(/** @src 1:20401:20418  \"balanceOf(sender)\" */ _1)))\n                    /// @src 1:20458:20547  \"bal > requiredPrefund...\"\n                    let expr_3 := /** @src 1:595:33492  \"contract EntryPoint is...\" */ var_validationData_1\n                    /// @src 1:20458:20547  \"bal > requiredPrefund...\"\n                    switch /** @src 1:20458:20479  \"bal > requiredPrefund\" */ gt(expr_2, var_requiredPrefund)\n                    case /** @src 1:20458:20547  \"bal > requiredPrefund...\" */ 0 {\n                        expr_3 := /** @src 1:1122:1126  \"2048\" */ sub(/** @src 1:20526:20547  \"requiredPrefund - bal\" */ var_requiredPrefund, expr_2)\n                    }\n                    default /// @src 1:20458:20547  \"bal > requiredPrefund...\"\n                    {\n                        expr_3 := /** @src 1:595:33492  \"contract EntryPoint is...\" */ var_validationData_1\n                    }\n                    /// @src 1:20436:20547  \"missingAccountFunds = bal > requiredPrefund...\"\n                    var_missingAccountFunds := expr_3\n                }\n                /// @src 1:595:33492  \"contract EntryPoint is...\"\n                let _4 := mload(/** @src 1:20653:20681  \"mUserOp.verificationGasLimit\" */ add(_517_mpos, 96))\n                /// @src 1:1122:1126  \"2048\"\n                let _5 := mload(/** @src 1:20704:20721  \"opInfo.userOpHash\" */ add(var_opInfo_1541_mpos, 32))\n                /// @src 1:20595:20743  \"IAccount(sender).validateUserOp{...\"\n                let _6 := /** @src 1:595:33492  \"contract EntryPoint is...\" */ mload(/** @src 1:20190:20201  \"op.initCode\" */ 64)\n                /// @src 1:20595:20743  \"IAccount(sender).validateUserOp{...\"\n                mstore(_6, /** @src 1:595:33492  \"contract EntryPoint is...\" */ shl(224, 0x3a871cdd))\n                /// @src 1:20595:20743  \"IAccount(sender).validateUserOp{...\"\n                let trySuccessCondition := call(_4, /** @src 1:595:33492  \"contract EntryPoint is...\" */ and(/** @src 1:20595:20611  \"IAccount(sender)\" */ _1, /** @src 1:595:33492  \"contract EntryPoint is...\" */ _3), var_validationData_1, /** @src 1:20595:20743  \"IAccount(sender).validateUserOp{...\" */ _6, sub(abi_encode_struct_UserOperation_calldata_bytes32_uint256(add(_6, 4), var_op_1538_offset, _5, var_missingAccountFunds), _6), _6, /** @src 1:20704:20721  \"opInfo.userOpHash\" */ 32)\n                /// @src 1:20595:20743  \"IAccount(sender).validateUserOp{...\"\n                let expr_4 := /** @src 1:595:33492  \"contract EntryPoint is...\" */ var_validationData_1\n                /// @src 1:20595:20743  \"IAccount(sender).validateUserOp{...\"\n                if trySuccessCondition\n                {\n                    let _7 := /** @src 1:20704:20721  \"opInfo.userOpHash\" */ 32\n                    /// @src 1:20595:20743  \"IAccount(sender).validateUserOp{...\"\n                    if gt(/** @src 1:20704:20721  \"opInfo.userOpHash\" */ _7, /** @src 1:20595:20743  \"IAccount(sender).validateUserOp{...\" */ returndatasize()) { _7 := returndatasize() }\n                    finalize_allocation(_6, _7)\n                    expr_4 := abi_decode_uint256_fromMemory(_6, add(_6, _7))\n                }\n                /// @src 1:20575:21149  \"try...\"\n                switch iszero(trySuccessCondition)\n                case 0 {\n                    /// @src 1:20808:20840  \"validationData = _validationData\"\n                    var_validationData := expr_4\n                }\n                default /// @src 1:20575:21149  \"try...\"\n                {\n                    let _8 := 1\n                    if eq(147028384, return_data_selector())\n                    {\n                        /// @src 1:20856:21059  \"catch Error(string memory revertReason) {...\"\n                        let _9 := try_decode_error_message()\n                        if _9\n                        {\n                            _8 := /** @src 1:595:33492  \"contract EntryPoint is...\" */ var_validationData_1\n                            /// @src 1:20980:21026  \"string.concat(\\\"AA23 reverted: \\\", revertReason)\"\n                            let expr_1641_mpos := string_concat_stringliteral_64c3_string(_9)\n                            /// @src 1:20921:21044  \"FailedOp(...\"\n                            let _10 := /** @src 1:595:33492  \"contract EntryPoint is...\" */ mload(/** @src 1:20190:20201  \"op.initCode\" */ 64)\n                            /// @src 1:20921:21044  \"FailedOp(...\"\n                            mstore(_10, /** @src 1:3283:3319  \"FailedOp(opIndex, \\\"AA95 out of gas\\\")\" */ shl(225, 0x1101335b))\n                            /// @src 1:20921:21044  \"FailedOp(...\"\n                            revert(_10, sub(abi_encode_uint256_bytes(add(_10, /** @src 1:20595:20743  \"IAccount(sender).validateUserOp{...\" */ 4), /** @src 1:20921:21044  \"FailedOp(...\" */ var_opIndex, expr_1641_mpos), _10))\n                        }\n                    }\n                    /// @src 1:20575:21149  \"try...\"\n                    if _8\n                    {\n                        /// @src 1:21091:21134  \"FailedOp(opIndex, \\\"AA23 reverted (or OOG)\\\")\"\n                        let _11 := /** @src 1:595:33492  \"contract EntryPoint is...\" */ mload(/** @src 1:20190:20201  \"op.initCode\" */ 64)\n                        /// @src 1:21091:21134  \"FailedOp(opIndex, \\\"AA23 reverted (or OOG)\\\")\"\n                        mstore(_11, /** @src 1:3283:3319  \"FailedOp(opIndex, \\\"AA95 out of gas\\\")\" */ shl(225, 0x1101335b))\n                        /// @src 1:21091:21134  \"FailedOp(opIndex, \\\"AA23 reverted (or OOG)\\\")\"\n                        revert(_11, sub(abi_encode_uint256_stringliteral_d8c5(add(_11, /** @src 1:20595:20743  \"IAccount(sender).validateUserOp{...\" */ 4), /** @src 1:21091:21134  \"FailedOp(opIndex, \\\"AA23 reverted (or OOG)\\\")\" */ var_opIndex), _11))\n                    }\n                }\n                /// @src 1:21162:21540  \"if (paymaster == address(0)) {...\"\n                if expr_1\n                {\n                    /// @src 1:21242:21258  \"deposits[sender]\"\n                    let _12 := mapping_index_access_mapping_address_mapping_uint192_uint256_of_address(_1)\n                    /// @src 1:21276:21312  \"uint256 deposit = senderInfo.deposit\"\n                    let var_deposit := cleanup_uint112(/** @src 1:595:33492  \"contract EntryPoint is...\" */ cleanup_uint112(sload(/** @src 1:21294:21312  \"senderInfo.deposit\" */ _12)))\n                    /// @src 1:21330:21453  \"if (requiredPrefund > deposit) {...\"\n                    if /** @src 1:21334:21359  \"requiredPrefund > deposit\" */ gt(var_requiredPrefund, var_deposit)\n                    /// @src 1:21330:21453  \"if (requiredPrefund > deposit) {...\"\n                    {\n                        /// @src 1:21390:21434  \"FailedOp(opIndex, \\\"AA21 didn't pay prefund\\\")\"\n                        let _13 := /** @src 1:595:33492  \"contract EntryPoint is...\" */ mload(/** @src 1:20190:20201  \"op.initCode\" */ 64)\n                        /// @src 1:21390:21434  \"FailedOp(opIndex, \\\"AA21 didn't pay prefund\\\")\"\n                        mstore(_13, /** @src 1:3283:3319  \"FailedOp(opIndex, \\\"AA95 out of gas\\\")\" */ shl(225, 0x1101335b))\n                        /// @src 1:21390:21434  \"FailedOp(opIndex, \\\"AA21 didn't pay prefund\\\")\"\n                        revert(_13, sub(abi_encode_uint256_stringliteral_af9d(add(_13, /** @src 1:20595:20743  \"IAccount(sender).validateUserOp{...\" */ 4), /** @src 1:21390:21434  \"FailedOp(opIndex, \\\"AA21 didn't pay prefund\\\")\" */ var_opIndex), _13))\n                    }\n                    /// @src 1:21470:21525  \"senderInfo.deposit = uint112(deposit - requiredPrefund)\"\n                    update_storage_value_offsett_uint112_to_uint112(_12, /** @src 1:595:33492  \"contract EntryPoint is...\" */ and(/** @src 1:1122:1126  \"2048\" */ sub(/** @src 1:21499:21524  \"deposit - requiredPrefund\" */ var_deposit, var_requiredPrefund), /** @src 1:595:33492  \"contract EntryPoint is...\" */ 0xffffffffffffffffffffffffffff))\n                }\n                /// @src 1:21553:21608  \"gasUsedByValidateAccountPrepayment = preGas - gasleft()\"\n                var_gasUsedByValidateAccountPrepayment := /** @src 1:1122:1126  \"2048\" */ sub(expr, /** @src 1:21599:21608  \"gasleft()\" */ gas())\n            }\n            /// @src 1:595:33492  \"contract EntryPoint is...\"\n            function abi_encode_uint256_stringliteral(headStart) -> tail\n            {\n                mstore(headStart, /** @src -1:-1:-1 */ 0)\n                /// @src 1:595:33492  \"contract EntryPoint is...\"\n                mstore(add(headStart, 32), 64)\n                mstore(add(headStart, 64), 31)\n                mstore(add(headStart, 96), \"AA10 sender already constructed\")\n                tail := add(headStart, 128)\n            }\n            function abi_encode_uint256_stringliteral_2674(headStart, value0) -> tail\n            {\n                mstore(headStart, value0)\n                mstore(add(headStart, 32), 64)\n                mstore(add(headStart, 64), 31)\n                mstore(add(headStart, 96), \"AA10 sender already constructed\")\n                tail := add(headStart, 128)\n            }\n            function abi_encode_uint256_stringliteral_a46d_42910(headStart) -> tail\n            {\n                mstore(headStart, /** @src -1:-1:-1 */ 0)\n                /// @src 1:595:33492  \"contract EntryPoint is...\"\n                mstore(add(headStart, 32), 64)\n                mstore(add(headStart, 64), 27)\n                mstore(add(headStart, 96), \"AA13 initCode failed or OOG\")\n                tail := add(headStart, 128)\n            }\n            function abi_encode_uint256_stringliteral_a46d(headStart, value0) -> tail\n            {\n                mstore(headStart, value0)\n                mstore(add(headStart, 32), 64)\n                mstore(add(headStart, 64), 27)\n                mstore(add(headStart, 96), \"AA13 initCode failed or OOG\")\n                tail := add(headStart, 128)\n            }\n            function abi_encode_uint256_stringliteral_cf8e_42911(headStart) -> tail\n            {\n                mstore(headStart, /** @src -1:-1:-1 */ 0)\n                /// @src 1:595:33492  \"contract EntryPoint is...\"\n                mstore(add(headStart, 32), 64)\n                mstore(add(headStart, 64), 32)\n                mstore(add(headStart, 96), \"AA14 initCode must return sender\")\n                tail := add(headStart, 128)\n            }\n            function abi_encode_uint256_stringliteral_cf8e(headStart, value0) -> tail\n            {\n                mstore(headStart, value0)\n                mstore(add(headStart, 32), 64)\n                mstore(add(headStart, 64), 32)\n                mstore(add(headStart, 96), \"AA14 initCode must return sender\")\n                tail := add(headStart, 128)\n            }\n            function abi_encode_uint256_stringliteral_bb1e_42912(headStart) -> tail\n            {\n                mstore(headStart, /** @src -1:-1:-1 */ 0)\n                /// @src 1:595:33492  \"contract EntryPoint is...\"\n                mstore(add(headStart, 32), 64)\n                mstore(add(headStart, 64), 32)\n                mstore(add(headStart, 96), \"AA15 initCode must create sender\")\n                tail := add(headStart, 128)\n            }\n            function abi_encode_uint256_stringliteral_bb1e(headStart, value0) -> tail\n            {\n                mstore(headStart, value0)\n                mstore(add(headStart, 32), 64)\n                mstore(add(headStart, 64), 32)\n                mstore(add(headStart, 96), \"AA15 initCode must create sender\")\n                tail := add(headStart, 128)\n            }\n            function abi_encode_address_address(headStart, value0, value1) -> tail\n            {\n                tail := add(headStart, 64)\n                let _1 := sub(shl(160, 1), 1)\n                mstore(headStart, and(value0, _1))\n                mstore(add(headStart, 32), and(value1, _1))\n            }\n            /// @ast-id 1415 @src 1:16456:17540  \"function _createSenderIfNeeded(...\"\n            function fun_createSenderIfNeeded_36514(var_opInfo_mpos, var_initCode_offset, var_initCode_length)\n            {\n                /// @src 1:16604:17534  \"if (initCode.length != 0) {...\"\n                if /** @src 1:16608:16628  \"initCode.length != 0\" */ iszero(iszero(var_initCode_length))\n                /// @src 1:16604:17534  \"if (initCode.length != 0) {...\"\n                {\n                    /// @src 1:16661:16682  \"opInfo.mUserOp.sender\"\n                    let _1 := read_from_memoryt_address(/** @src 1:16661:16675  \"opInfo.mUserOp\" */ mload(var_opInfo_mpos))\n                    /// @src 1:16696:16800  \"if (sender.code.length != 0)...\"\n                    if /** @src 1:16700:16723  \"sender.code.length != 0\" */ iszero(iszero(/** @src 1:16700:16718  \"sender.code.length\" */ extcodesize(_1)))\n                    /// @src 1:16696:16800  \"if (sender.code.length != 0)...\"\n                    {\n                        /// @src 1:16748:16800  \"FailedOp(opIndex, \\\"AA10 sender already constructed\\\")\"\n                        let _2 := /** @src 1:595:33492  \"contract EntryPoint is...\" */ mload(64)\n                        /// @src 1:16748:16800  \"FailedOp(opIndex, \\\"AA10 sender already constructed\\\")\"\n                        mstore(_2, /** @src 1:3283:3319  \"FailedOp(opIndex, \\\"AA95 out of gas\\\")\" */ shl(225, 0x1101335b))\n                        /// @src 1:16748:16800  \"FailedOp(opIndex, \\\"AA10 sender already constructed\\\")\"\n                        revert(_2, sub(abi_encode_uint256_stringliteral(add(_2, 4)), _2))\n                    }\n                    /// @src 1:595:33492  \"contract EntryPoint is...\"\n                    let _3 := sub(shl(160, 1), 1)\n                    let _4 := mload(/** @src 1:16881:16916  \"opInfo.mUserOp.verificationGasLimit\" */ add(/** @src 1:16881:16895  \"opInfo.mUserOp\" */ mload(var_opInfo_mpos), /** @src 1:16881:16916  \"opInfo.mUserOp.verificationGasLimit\" */ 96))\n                    /// @src 1:16832:16940  \"senderCreator.createSender{...\"\n                    let _5 := /** @src 1:595:33492  \"contract EntryPoint is...\" */ mload(64)\n                    /// @src 1:16832:16940  \"senderCreator.createSender{...\"\n                    mstore(_5, /** @src 1:595:33492  \"contract EntryPoint is...\" */ shl(225, 0x2b870d1b))\n                    /// @src 1:16832:16940  \"senderCreator.createSender{...\"\n                    let _6 := call(_4, /** @src 1:595:33492  \"contract EntryPoint is...\" */ and(/** @src 1:16832:16845  \"senderCreator\" */ loadimmutable(\"83\"), /** @src 1:595:33492  \"contract EntryPoint is...\" */ _3), /** @src -1:-1:-1 */ 0, /** @src 1:16832:16940  \"senderCreator.createSender{...\" */ _5, sub(abi_encode_bytes_calldata(add(_5, 4), var_initCode_offset, var_initCode_length), _5), _5, 32)\n                    if iszero(_6) { revert_forward() }\n                    let expr := /** @src -1:-1:-1 */ 0\n                    /// @src 1:16832:16940  \"senderCreator.createSender{...\"\n                    if _6\n                    {\n                        let _7 := 32\n                        if gt(_7, returndatasize()) { _7 := returndatasize() }\n                        finalize_allocation(_5, _7)\n                        expr := abi_decode_address_fromMemory(_5, add(_5, _7))\n                    }\n                    /// @src 1:16958:16979  \"sender1 == address(0)\"\n                    let _8 := /** @src 1:595:33492  \"contract EntryPoint is...\" */ and(/** @src 1:16958:16979  \"sender1 == address(0)\" */ expr, /** @src 1:595:33492  \"contract EntryPoint is...\" */ _3)\n                    /// @src 1:16954:17052  \"if (sender1 == address(0))...\"\n                    if /** @src 1:16958:16979  \"sender1 == address(0)\" */ iszero(_8)\n                    /// @src 1:16954:17052  \"if (sender1 == address(0))...\"\n                    {\n                        /// @src 1:17004:17052  \"FailedOp(opIndex, \\\"AA13 initCode failed or OOG\\\")\"\n                        let _9 := /** @src 1:595:33492  \"contract EntryPoint is...\" */ mload(64)\n                        /// @src 1:17004:17052  \"FailedOp(opIndex, \\\"AA13 initCode failed or OOG\\\")\"\n                        mstore(_9, /** @src 1:3283:3319  \"FailedOp(opIndex, \\\"AA95 out of gas\\\")\" */ shl(225, 0x1101335b))\n                        /// @src 1:17004:17052  \"FailedOp(opIndex, \\\"AA13 initCode failed or OOG\\\")\"\n                        revert(_9, sub(abi_encode_uint256_stringliteral_a46d_42910(add(_9, /** @src 1:16832:16940  \"senderCreator.createSender{...\" */ 4)), /** @src 1:17004:17052  \"FailedOp(opIndex, \\\"AA13 initCode failed or OOG\\\")\" */ _9))\n                    }\n                    /// @src 1:595:33492  \"contract EntryPoint is...\"\n                    let _10 := and(/** @src 1:17070:17087  \"sender1 != sender\" */ _1, /** @src 1:595:33492  \"contract EntryPoint is...\" */ _3)\n                    /// @src 1:17066:17165  \"if (sender1 != sender)...\"\n                    if /** @src 1:17070:17087  \"sender1 != sender\" */ iszero(eq(_8, /** @src 1:595:33492  \"contract EntryPoint is...\" */ _10))\n                    /// @src 1:17066:17165  \"if (sender1 != sender)...\"\n                    {\n                        /// @src 1:17112:17165  \"FailedOp(opIndex, \\\"AA14 initCode must return sender\\\")\"\n                        let _11 := /** @src 1:595:33492  \"contract EntryPoint is...\" */ mload(64)\n                        /// @src 1:17112:17165  \"FailedOp(opIndex, \\\"AA14 initCode must return sender\\\")\"\n                        mstore(_11, /** @src 1:3283:3319  \"FailedOp(opIndex, \\\"AA95 out of gas\\\")\" */ shl(225, 0x1101335b))\n                        /// @src 1:17112:17165  \"FailedOp(opIndex, \\\"AA14 initCode must return sender\\\")\"\n                        revert(_11, sub(abi_encode_uint256_stringliteral_cf8e_42911(add(_11, /** @src 1:16832:16940  \"senderCreator.createSender{...\" */ 4)), /** @src 1:17112:17165  \"FailedOp(opIndex, \\\"AA14 initCode must return sender\\\")\" */ _11))\n                    }\n                    /// @src 1:17179:17285  \"if (sender1.code.length == 0)...\"\n                    if /** @src 1:17183:17207  \"sender1.code.length == 0\" */ iszero(/** @src 1:17183:17202  \"sender1.code.length\" */ extcodesize(expr))\n                    /// @src 1:17179:17285  \"if (sender1.code.length == 0)...\"\n                    {\n                        /// @src 1:17232:17285  \"FailedOp(opIndex, \\\"AA15 initCode must create sender\\\")\"\n                        let _12 := /** @src 1:595:33492  \"contract EntryPoint is...\" */ mload(64)\n                        /// @src 1:17232:17285  \"FailedOp(opIndex, \\\"AA15 initCode must create sender\\\")\"\n                        mstore(_12, /** @src 1:3283:3319  \"FailedOp(opIndex, \\\"AA95 out of gas\\\")\" */ shl(225, 0x1101335b))\n                        /// @src 1:17232:17285  \"FailedOp(opIndex, \\\"AA15 initCode must create sender\\\")\"\n                        revert(_12, sub(abi_encode_uint256_stringliteral_bb1e_42912(add(_12, /** @src 1:16832:16940  \"senderCreator.createSender{...\" */ 4)), /** @src 1:17232:17285  \"FailedOp(opIndex, \\\"AA15 initCode must create sender\\\")\" */ _12))\n                    }\n                    /// @src 1:17333:17347  \"initCode[0:20]\"\n                    let expr_offset, expr_length := calldata_array_index_range_access_bytes_calldata_19807(var_initCode_offset, var_initCode_length)\n                    /// @src 1:17317:17349  \"address(bytes20(initCode[0:20]))\"\n                    let expr_1 := convert_bytes20_to_address(/** @src 1:17325:17348  \"bytes20(initCode[0:20])\" */ convert_bytes_to_fixedbytes_from_bytes_calldata_to_bytes20(expr_offset, expr_length))\n                    /// @src 1:1122:1126  \"2048\"\n                    let _13 := mload(/** @src 1:17401:17418  \"opInfo.userOpHash\" */ add(var_opInfo_mpos, /** @src 1:16832:16940  \"senderCreator.createSender{...\" */ 32))\n                    /// @src 1:17485:17509  \"opInfo.mUserOp.paymaster\"\n                    let _14 := read_from_memoryt_address(add(/** @src 1:17485:17499  \"opInfo.mUserOp\" */ mload(var_opInfo_mpos), /** @src 1:17485:17509  \"opInfo.mUserOp.paymaster\" */ 160))\n                    /// @src 1:17368:17523  \"AccountDeployed(...\"\n                    let _15 := /** @src 1:595:33492  \"contract EntryPoint is...\" */ mload(64)\n                    /// @src 1:17368:17523  \"AccountDeployed(...\"\n                    log3(_15, sub(abi_encode_address_address(_15, expr_1, _14), _15), 0xd51a9c61267aa6196961883ecf5ff2da6619c37dac0fa92122513fb32c032d2d, _13, _10)\n                }\n            }\n            /// @ast-id 1415 @src 1:16456:17540  \"function _createSenderIfNeeded(...\"\n            function fun_createSenderIfNeeded(var_opIndex, var_opInfo_1320_mpos, var_initCode_1322_offset, var_initCode_1322_length)\n            {\n                /// @src 1:16604:17534  \"if (initCode.length != 0) {...\"\n                if /** @src 1:16608:16628  \"initCode.length != 0\" */ iszero(iszero(var_initCode_1322_length))\n                /// @src 1:16604:17534  \"if (initCode.length != 0) {...\"\n                {\n                    /// @src 1:16661:16682  \"opInfo.mUserOp.sender\"\n                    let _1 := read_from_memoryt_address(/** @src 1:16661:16675  \"opInfo.mUserOp\" */ mload(var_opInfo_1320_mpos))\n                    /// @src 1:16696:16800  \"if (sender.code.length != 0)...\"\n                    if /** @src 1:16700:16723  \"sender.code.length != 0\" */ iszero(iszero(/** @src 1:16700:16718  \"sender.code.length\" */ extcodesize(_1)))\n                    /// @src 1:16696:16800  \"if (sender.code.length != 0)...\"\n                    {\n                        /// @src 1:16748:16800  \"FailedOp(opIndex, \\\"AA10 sender already constructed\\\")\"\n                        let _2 := /** @src 1:595:33492  \"contract EntryPoint is...\" */ mload(64)\n                        /// @src 1:16748:16800  \"FailedOp(opIndex, \\\"AA10 sender already constructed\\\")\"\n                        mstore(_2, /** @src 1:3283:3319  \"FailedOp(opIndex, \\\"AA95 out of gas\\\")\" */ shl(225, 0x1101335b))\n                        /// @src 1:16748:16800  \"FailedOp(opIndex, \\\"AA10 sender already constructed\\\")\"\n                        revert(_2, sub(abi_encode_uint256_stringliteral_2674(add(_2, 4), var_opIndex), _2))\n                    }\n                    /// @src 1:595:33492  \"contract EntryPoint is...\"\n                    let _3 := sub(shl(160, 1), 1)\n                    let _4 := mload(/** @src 1:16881:16916  \"opInfo.mUserOp.verificationGasLimit\" */ add(/** @src 1:16881:16895  \"opInfo.mUserOp\" */ mload(var_opInfo_1320_mpos), /** @src 1:16881:16916  \"opInfo.mUserOp.verificationGasLimit\" */ 96))\n                    /// @src 1:16832:16940  \"senderCreator.createSender{...\"\n                    let _5 := /** @src 1:595:33492  \"contract EntryPoint is...\" */ mload(64)\n                    /// @src 1:16832:16940  \"senderCreator.createSender{...\"\n                    mstore(_5, /** @src 1:595:33492  \"contract EntryPoint is...\" */ shl(225, 0x2b870d1b))\n                    /// @src 1:16832:16940  \"senderCreator.createSender{...\"\n                    let _6 := call(_4, /** @src 1:595:33492  \"contract EntryPoint is...\" */ and(/** @src 1:16832:16845  \"senderCreator\" */ loadimmutable(\"83\"), /** @src 1:595:33492  \"contract EntryPoint is...\" */ _3), /** @src 1:16627:16628  \"0\" */ 0x00, /** @src 1:16832:16940  \"senderCreator.createSender{...\" */ _5, sub(abi_encode_bytes_calldata(add(_5, 4), var_initCode_1322_offset, var_initCode_1322_length), _5), _5, 32)\n                    if iszero(_6) { revert_forward() }\n                    let expr := /** @src 1:16627:16628  \"0\" */ 0x00\n                    /// @src 1:16832:16940  \"senderCreator.createSender{...\"\n                    if _6\n                    {\n                        let _7 := 32\n                        if gt(_7, returndatasize()) { _7 := returndatasize() }\n                        finalize_allocation(_5, _7)\n                        expr := abi_decode_address_fromMemory(_5, add(_5, _7))\n                    }\n                    /// @src 1:16958:16979  \"sender1 == address(0)\"\n                    let _8 := /** @src 1:595:33492  \"contract EntryPoint is...\" */ and(/** @src 1:16958:16979  \"sender1 == address(0)\" */ expr, /** @src 1:595:33492  \"contract EntryPoint is...\" */ _3)\n                    /// @src 1:16954:17052  \"if (sender1 == address(0))...\"\n                    if /** @src 1:16958:16979  \"sender1 == address(0)\" */ iszero(_8)\n                    /// @src 1:16954:17052  \"if (sender1 == address(0))...\"\n                    {\n                        /// @src 1:17004:17052  \"FailedOp(opIndex, \\\"AA13 initCode failed or OOG\\\")\"\n                        let _9 := /** @src 1:595:33492  \"contract EntryPoint is...\" */ mload(64)\n                        /// @src 1:17004:17052  \"FailedOp(opIndex, \\\"AA13 initCode failed or OOG\\\")\"\n                        mstore(_9, /** @src 1:3283:3319  \"FailedOp(opIndex, \\\"AA95 out of gas\\\")\" */ shl(225, 0x1101335b))\n                        /// @src 1:17004:17052  \"FailedOp(opIndex, \\\"AA13 initCode failed or OOG\\\")\"\n                        revert(_9, sub(abi_encode_uint256_stringliteral_a46d(add(_9, /** @src 1:16832:16940  \"senderCreator.createSender{...\" */ 4), /** @src 1:17004:17052  \"FailedOp(opIndex, \\\"AA13 initCode failed or OOG\\\")\" */ var_opIndex), _9))\n                    }\n                    /// @src 1:595:33492  \"contract EntryPoint is...\"\n                    let _10 := and(/** @src 1:17070:17087  \"sender1 != sender\" */ _1, /** @src 1:595:33492  \"contract EntryPoint is...\" */ _3)\n                    /// @src 1:17066:17165  \"if (sender1 != sender)...\"\n                    if /** @src 1:17070:17087  \"sender1 != sender\" */ iszero(eq(_8, /** @src 1:595:33492  \"contract EntryPoint is...\" */ _10))\n                    /// @src 1:17066:17165  \"if (sender1 != sender)...\"\n                    {\n                        /// @src 1:17112:17165  \"FailedOp(opIndex, \\\"AA14 initCode must return sender\\\")\"\n                        let _11 := /** @src 1:595:33492  \"contract EntryPoint is...\" */ mload(64)\n                        /// @src 1:17112:17165  \"FailedOp(opIndex, \\\"AA14 initCode must return sender\\\")\"\n                        mstore(_11, /** @src 1:3283:3319  \"FailedOp(opIndex, \\\"AA95 out of gas\\\")\" */ shl(225, 0x1101335b))\n                        /// @src 1:17112:17165  \"FailedOp(opIndex, \\\"AA14 initCode must return sender\\\")\"\n                        revert(_11, sub(abi_encode_uint256_stringliteral_cf8e(add(_11, /** @src 1:16832:16940  \"senderCreator.createSender{...\" */ 4), /** @src 1:17112:17165  \"FailedOp(opIndex, \\\"AA14 initCode must return sender\\\")\" */ var_opIndex), _11))\n                    }\n                    /// @src 1:17179:17285  \"if (sender1.code.length == 0)...\"\n                    if /** @src 1:17183:17207  \"sender1.code.length == 0\" */ iszero(/** @src 1:17183:17202  \"sender1.code.length\" */ extcodesize(expr))\n                    /// @src 1:17179:17285  \"if (sender1.code.length == 0)...\"\n                    {\n                        /// @src 1:17232:17285  \"FailedOp(opIndex, \\\"AA15 initCode must create sender\\\")\"\n                        let _12 := /** @src 1:595:33492  \"contract EntryPoint is...\" */ mload(64)\n                        /// @src 1:17232:17285  \"FailedOp(opIndex, \\\"AA15 initCode must create sender\\\")\"\n                        mstore(_12, /** @src 1:3283:3319  \"FailedOp(opIndex, \\\"AA95 out of gas\\\")\" */ shl(225, 0x1101335b))\n                        /// @src 1:17232:17285  \"FailedOp(opIndex, \\\"AA15 initCode must create sender\\\")\"\n                        revert(_12, sub(abi_encode_uint256_stringliteral_bb1e(add(_12, /** @src 1:16832:16940  \"senderCreator.createSender{...\" */ 4), /** @src 1:17232:17285  \"FailedOp(opIndex, \\\"AA15 initCode must create sender\\\")\" */ var_opIndex), _12))\n                    }\n                    /// @src 1:17333:17347  \"initCode[0:20]\"\n                    let expr_1398_offset, expr_1398_length := calldata_array_index_range_access_bytes_calldata_19807(var_initCode_1322_offset, var_initCode_1322_length)\n                    /// @src 1:17317:17349  \"address(bytes20(initCode[0:20]))\"\n                    let expr_1 := convert_bytes20_to_address(/** @src 1:17325:17348  \"bytes20(initCode[0:20])\" */ convert_bytes_to_fixedbytes_from_bytes_calldata_to_bytes20(expr_1398_offset, expr_1398_length))\n                    /// @src 1:1122:1126  \"2048\"\n                    let _13 := mload(/** @src 1:17401:17418  \"opInfo.userOpHash\" */ add(var_opInfo_1320_mpos, /** @src 1:16832:16940  \"senderCreator.createSender{...\" */ 32))\n                    /// @src 1:17485:17509  \"opInfo.mUserOp.paymaster\"\n                    let _14 := read_from_memoryt_address(add(/** @src 1:17485:17499  \"opInfo.mUserOp\" */ mload(var_opInfo_1320_mpos), /** @src 1:17485:17509  \"opInfo.mUserOp.paymaster\" */ 160))\n                    /// @src 1:17368:17523  \"AccountDeployed(...\"\n                    let _15 := /** @src 1:595:33492  \"contract EntryPoint is...\" */ mload(64)\n                    /// @src 1:17368:17523  \"AccountDeployed(...\"\n                    log3(_15, sub(abi_encode_address_address(_15, expr_1, _14), _15), 0xd51a9c61267aa6196961883ecf5ff2da6619c37dac0fa92122513fb32c032d2d, _13, _10)\n                }\n            }\n            /// @src 1:595:33492  \"contract EntryPoint is...\"\n            function require_helper_stringliteral_845e(condition)\n            {\n                if iszero(condition)\n                {\n                    let memPtr := mload(64)\n                    mstore(memPtr, shl(229, 4594637))\n                    mstore(add(memPtr, 4), 32)\n                    mstore(add(memPtr, 36), 31)\n                    mstore(add(memPtr, 68), \"AA41 too little verificationGas\")\n                    revert(memPtr, 100)\n                }\n            }\n            function abi_encode_uint256_stringliteral_423a_36518(headStart) -> tail\n            {\n                mstore(headStart, /** @src -1:-1:-1 */ 0)\n                /// @src 1:595:33492  \"contract EntryPoint is...\"\n                mstore(add(headStart, 32), 64)\n                mstore(add(headStart, 64), 30)\n                mstore(add(headStart, 96), \"AA31 paymaster deposit too low\")\n                tail := add(headStart, 128)\n            }\n            function abi_encode_uint256_stringliteral_423a(headStart, value0) -> tail\n            {\n                mstore(headStart, value0)\n                mstore(add(headStart, 32), 64)\n                mstore(add(headStart, 64), 30)\n                mstore(add(headStart, 96), \"AA31 paymaster deposit too low\")\n                tail := add(headStart, 128)\n            }\n            function abi_decode_bytest_uint256_fromMemory(headStart, dataEnd) -> value0, value1\n            {\n                if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n                let offset := mload(headStart)\n                if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n                let _1 := add(headStart, offset)\n                if iszero(slt(add(_1, 0x1f), dataEnd))\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 1:595:33492  \"contract EntryPoint is...\"\n                let _2 := mload(_1)\n                let _3 := array_allocation_size_bytes(_2)\n                let memPtr := mload(64)\n                finalize_allocation(memPtr, _3)\n                mstore(memPtr, _2)\n                if gt(add(add(_1, _2), 0x20), dataEnd)\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 1:595:33492  \"contract EntryPoint is...\"\n                copy_memory_to_memory_with_cleanup(add(_1, 0x20), add(memPtr, 0x20), _2)\n                value0 := memPtr\n                value1 := mload(add(headStart, 0x20))\n            }\n            function string_concat_stringliteral_d505_string(param) -> outPtr\n            {\n                outPtr := mload(64)\n                mstore(add(outPtr, 0x20), \"AA33 reverted: \")\n                let length := mload(param)\n                copy_memory_to_memory_with_cleanup(add(param, 0x20), add(outPtr, 47), length)\n                let _1 := sub(add(outPtr, length), outPtr)\n                mstore(outPtr, add(_1, 15))\n                finalize_allocation(outPtr, add(_1, 47))\n            }\n            function abi_encode_uint256_stringliteral_b1ed_36520(headStart) -> tail\n            {\n                mstore(headStart, /** @src -1:-1:-1 */ 0)\n                /// @src 1:595:33492  \"contract EntryPoint is...\"\n                mstore(add(headStart, 32), 64)\n                mstore(add(headStart, 64), 22)\n                mstore(add(headStart, 96), \"AA33 reverted (or OOG)\")\n                tail := add(headStart, 128)\n            }\n            function abi_encode_uint256_stringliteral_b1ed(headStart, value0) -> tail\n            {\n                mstore(headStart, value0)\n                mstore(add(headStart, 32), 64)\n                mstore(add(headStart, 64), 22)\n                mstore(add(headStart, 96), \"AA33 reverted (or OOG)\")\n                tail := add(headStart, 128)\n            }\n            /// @ast-id 1837 @src 1:21883:23652  \"function _validatePaymasterPrepayment(...\"\n            function fun_validatePaymasterPrepayment_29537(var_op_offset, var_opInfo_mpos, var_requiredPreFund, var_gasUsedByValidateAccountPrepayment) -> var_context_mpos, var_validationData\n            {\n                /// @src 1:22124:22144  \"bytes memory context\"\n                var_context_mpos := /** @src 1:595:33492  \"contract EntryPoint is...\" */ 96\n                /// @src 1:22146:22168  \"uint256 validationData\"\n                var_validationData := /** @src -1:-1:-1 */ 0\n                /// @src 1:22146:22168  \"uint256 validationData\"\n                let var_validationData_1 := /** @src -1:-1:-1 */ 0\n                /// @src 1:22234:22248  \"opInfo.mUserOp\"\n                let _mpos := mload(var_opInfo_mpos)\n                /// @src 1:595:33492  \"contract EntryPoint is...\"\n                let _1 := mload(/** @src 1:22293:22321  \"mUserOp.verificationGasLimit\" */ add(_mpos, /** @src 1:595:33492  \"contract EntryPoint is...\" */ var_context_mpos))\n                /// @src 1:22335:22482  \"require(...\"\n                require_helper_stringliteral_845e(/** @src 1:22360:22417  \"verificationGasLimit > gasUsedByValidateAccountPrepayment\" */ gt(_1, var_gasUsedByValidateAccountPrepayment))\n                /// @src 1:22618:22635  \"mUserOp.paymaster\"\n                let _2 := /** @src 1:595:33492  \"contract EntryPoint is...\" */ cleanup_address(mload(/** @src 1:22618:22635  \"mUserOp.paymaster\" */ add(_mpos, 160)))\n                /// @src 1:22685:22704  \"deposits[paymaster]\"\n                let _3 := mapping_index_access_mapping_address_mapping_uint192_uint256_of_address(_2)\n                /// @src 1:22718:22757  \"uint256 deposit = paymasterInfo.deposit\"\n                let var_deposit := cleanup_uint112(/** @src 1:595:33492  \"contract EntryPoint is...\" */ cleanup_uint112(sload(/** @src 1:22736:22757  \"paymasterInfo.deposit\" */ _3)))\n                /// @src 1:22771:22893  \"if (deposit < requiredPreFund) {...\"\n                if /** @src 1:22775:22800  \"deposit < requiredPreFund\" */ lt(var_deposit, var_requiredPreFund)\n                /// @src 1:22771:22893  \"if (deposit < requiredPreFund) {...\"\n                {\n                    /// @src 1:22827:22878  \"FailedOp(opIndex, \\\"AA31 paymaster deposit too low\\\")\"\n                    let _4 := /** @src 1:595:33492  \"contract EntryPoint is...\" */ mload(64)\n                    /// @src 1:22827:22878  \"FailedOp(opIndex, \\\"AA31 paymaster deposit too low\\\")\"\n                    mstore(_4, /** @src 1:3283:3319  \"FailedOp(opIndex, \\\"AA95 out of gas\\\")\" */ shl(225, 0x1101335b))\n                    /// @src 1:22827:22878  \"FailedOp(opIndex, \\\"AA31 paymaster deposit too low\\\")\"\n                    revert(_4, sub(abi_encode_uint256_stringliteral_423a_36518(add(_4, 4)), _4))\n                }\n                /// @src 1:22906:22964  \"paymasterInfo.deposit = uint112(deposit - requiredPreFund)\"\n                update_storage_value_offsett_uint112_to_uint112(_3, /** @src 1:595:33492  \"contract EntryPoint is...\" */ and(/** @src 1:1122:1126  \"2048\" */ sub(/** @src 1:22938:22963  \"deposit - requiredPreFund\" */ var_deposit, var_requiredPreFund), /** @src 1:595:33492  \"contract EntryPoint is...\" */ 0xffffffffffffffffffffffffffff))\n                /// @src 1:1122:1126  \"2048\"\n                let _5 := mload(/** @src 1:23099:23116  \"opInfo.userOpHash\" */ add(var_opInfo_mpos, 32))\n                /// @src 1:22998:23171  \"IPaymaster(paymaster).validatePaymasterUserOp{gas: gas}(...\"\n                let _6 := /** @src 1:595:33492  \"contract EntryPoint is...\" */ mload(64)\n                /// @src 1:22998:23171  \"IPaymaster(paymaster).validatePaymasterUserOp{gas: gas}(...\"\n                mstore(_6, /** @src 1:595:33492  \"contract EntryPoint is...\" */ shl(225, 0x7a32e3bf))\n                /// @src 1:22998:23171  \"IPaymaster(paymaster).validatePaymasterUserOp{gas: gas}(...\"\n                let trySuccessCondition := call(/** @src 1:1122:1126  \"2048\" */ sub(/** @src 1:22510:22583  \"verificationGasLimit -...\" */ _1, var_gasUsedByValidateAccountPrepayment), /** @src 1:595:33492  \"contract EntryPoint is...\" */ and(/** @src 1:22998:23019  \"IPaymaster(paymaster)\" */ _2, /** @src 1:595:33492  \"contract EntryPoint is...\" */ sub(shl(160, 1), 1)), /** @src -1:-1:-1 */ var_validationData_1, /** @src 1:22998:23171  \"IPaymaster(paymaster).validatePaymasterUserOp{gas: gas}(...\" */ _6, sub(abi_encode_struct_UserOperation_calldata_bytes32_uint256(add(_6, 4), var_op_offset, _5, var_requiredPreFund), _6), _6, /** @src -1:-1:-1 */ var_validationData_1)\n                /// @src 1:22998:23171  \"IPaymaster(paymaster).validatePaymasterUserOp{gas: gas}(...\"\n                let expr_component_mpos := /** @src -1:-1:-1 */ var_validationData_1\n                let expr_component := var_validationData_1\n                /// @src 1:22998:23171  \"IPaymaster(paymaster).validatePaymasterUserOp{gas: gas}(...\"\n                if trySuccessCondition\n                {\n                    let _7 := returndatasize()\n                    returndatacopy(_6, /** @src -1:-1:-1 */ var_validationData_1, /** @src 1:22998:23171  \"IPaymaster(paymaster).validatePaymasterUserOp{gas: gas}(...\" */ _7)\n                    finalize_allocation(_6, _7)\n                    let expr_component_mpos_1, expr_component_1 := abi_decode_bytest_uint256_fromMemory(_6, add(_6, _7))\n                    expr_component_mpos := expr_component_mpos_1\n                    expr_component := expr_component_1\n                }\n                /// @src 1:22978:23636  \"try...\"\n                switch iszero(trySuccessCondition)\n                case 0 {\n                    /// @src 1:23259:23277  \"context = _context\"\n                    var_context_mpos := expr_component_mpos\n                    /// @src 1:23295:23327  \"validationData = _validationData\"\n                    var_validationData := expr_component\n                }\n                default /// @src 1:22978:23636  \"try...\"\n                {\n                    let _8 := 1\n                    if eq(147028384, return_data_selector())\n                    {\n                        /// @src 1:23343:23546  \"catch Error(string memory revertReason) {...\"\n                        let _9 := try_decode_error_message()\n                        if _9\n                        {\n                            _8 := /** @src -1:-1:-1 */ var_validationData_1\n                            /// @src 1:23467:23513  \"string.concat(\\\"AA33 reverted: \\\", revertReason)\"\n                            let expr_mpos := string_concat_stringliteral_d505_string(_9)\n                            /// @src 1:23408:23531  \"FailedOp(...\"\n                            let _10 := /** @src 1:595:33492  \"contract EntryPoint is...\" */ mload(64)\n                            /// @src 1:23408:23531  \"FailedOp(...\"\n                            mstore(_10, /** @src 1:3283:3319  \"FailedOp(opIndex, \\\"AA95 out of gas\\\")\" */ shl(225, 0x1101335b))\n                            /// @src 1:23408:23531  \"FailedOp(...\"\n                            revert(_10, sub(abi_encode_uint256_bytes_29546(add(_10, /** @src 1:22998:23171  \"IPaymaster(paymaster).validatePaymasterUserOp{gas: gas}(...\" */ 4), /** @src 1:23408:23531  \"FailedOp(...\" */ expr_mpos), _10))\n                        }\n                    }\n                    /// @src 1:22978:23636  \"try...\"\n                    if _8\n                    {\n                        /// @src 1:23578:23621  \"FailedOp(opIndex, \\\"AA33 reverted (or OOG)\\\")\"\n                        let _11 := /** @src 1:595:33492  \"contract EntryPoint is...\" */ mload(64)\n                        /// @src 1:23578:23621  \"FailedOp(opIndex, \\\"AA33 reverted (or OOG)\\\")\"\n                        mstore(_11, /** @src 1:3283:3319  \"FailedOp(opIndex, \\\"AA95 out of gas\\\")\" */ shl(225, 0x1101335b))\n                        /// @src 1:23578:23621  \"FailedOp(opIndex, \\\"AA33 reverted (or OOG)\\\")\"\n                        revert(_11, sub(abi_encode_uint256_stringliteral_b1ed_36520(add(_11, /** @src 1:22998:23171  \"IPaymaster(paymaster).validatePaymasterUserOp{gas: gas}(...\" */ 4)), /** @src 1:23578:23621  \"FailedOp(opIndex, \\\"AA33 reverted (or OOG)\\\")\" */ _11))\n                    }\n                }\n            }\n            /// @ast-id 1837 @src 1:21883:23652  \"function _validatePaymasterPrepayment(...\"\n            function fun_validatePaymasterPrepayment(var_opIndex, var_op_offset, var_opInfo_1713_mpos, var_requiredPreFund, var_gasUsedByValidateAccountPrepayment) -> var_context_1720_mpos, var_validationData\n            {\n                /// @src 1:22124:22144  \"bytes memory context\"\n                var_context_1720_mpos := /** @src 1:595:33492  \"contract EntryPoint is...\" */ 96\n                /// @src 1:22146:22168  \"uint256 validationData\"\n                var_validationData := /** @src 1:595:33492  \"contract EntryPoint is...\" */ 0\n                /// @src 1:22146:22168  \"uint256 validationData\"\n                let var_validationData_1 := /** @src 1:595:33492  \"contract EntryPoint is...\" */ 0\n                /// @src 1:22234:22248  \"opInfo.mUserOp\"\n                let _630_mpos := mload(var_opInfo_1713_mpos)\n                /// @src 1:595:33492  \"contract EntryPoint is...\"\n                let _1 := mload(/** @src 1:22293:22321  \"mUserOp.verificationGasLimit\" */ add(_630_mpos, /** @src 1:595:33492  \"contract EntryPoint is...\" */ var_context_1720_mpos))\n                /// @src 1:22335:22482  \"require(...\"\n                require_helper_stringliteral_845e(/** @src 1:22360:22417  \"verificationGasLimit > gasUsedByValidateAccountPrepayment\" */ gt(_1, var_gasUsedByValidateAccountPrepayment))\n                /// @src 1:22618:22635  \"mUserOp.paymaster\"\n                let _2 := /** @src 1:595:33492  \"contract EntryPoint is...\" */ cleanup_address(mload(/** @src 1:22618:22635  \"mUserOp.paymaster\" */ add(_630_mpos, 160)))\n                /// @src 1:22685:22704  \"deposits[paymaster]\"\n                let _3 := mapping_index_access_mapping_address_mapping_uint192_uint256_of_address(_2)\n                /// @src 1:22718:22757  \"uint256 deposit = paymasterInfo.deposit\"\n                let var_deposit := cleanup_uint112(/** @src 1:595:33492  \"contract EntryPoint is...\" */ cleanup_uint112(sload(/** @src 1:22736:22757  \"paymasterInfo.deposit\" */ _3)))\n                /// @src 1:22771:22893  \"if (deposit < requiredPreFund) {...\"\n                if /** @src 1:22775:22800  \"deposit < requiredPreFund\" */ lt(var_deposit, var_requiredPreFund)\n                /// @src 1:22771:22893  \"if (deposit < requiredPreFund) {...\"\n                {\n                    /// @src 1:22827:22878  \"FailedOp(opIndex, \\\"AA31 paymaster deposit too low\\\")\"\n                    let _4 := /** @src 1:595:33492  \"contract EntryPoint is...\" */ mload(64)\n                    /// @src 1:22827:22878  \"FailedOp(opIndex, \\\"AA31 paymaster deposit too low\\\")\"\n                    mstore(_4, /** @src 1:3283:3319  \"FailedOp(opIndex, \\\"AA95 out of gas\\\")\" */ shl(225, 0x1101335b))\n                    /// @src 1:22827:22878  \"FailedOp(opIndex, \\\"AA31 paymaster deposit too low\\\")\"\n                    revert(_4, sub(abi_encode_uint256_stringliteral_423a(add(_4, 4), var_opIndex), _4))\n                }\n                /// @src 1:22906:22964  \"paymasterInfo.deposit = uint112(deposit - requiredPreFund)\"\n                update_storage_value_offsett_uint112_to_uint112(_3, /** @src 1:595:33492  \"contract EntryPoint is...\" */ and(/** @src 1:1122:1126  \"2048\" */ sub(/** @src 1:22938:22963  \"deposit - requiredPreFund\" */ var_deposit, var_requiredPreFund), /** @src 1:595:33492  \"contract EntryPoint is...\" */ 0xffffffffffffffffffffffffffff))\n                /// @src 1:1122:1126  \"2048\"\n                let _5 := mload(/** @src 1:23099:23116  \"opInfo.userOpHash\" */ add(var_opInfo_1713_mpos, 32))\n                /// @src 1:22998:23171  \"IPaymaster(paymaster).validatePaymasterUserOp{gas: gas}(...\"\n                let _6 := /** @src 1:595:33492  \"contract EntryPoint is...\" */ mload(64)\n                /// @src 1:22998:23171  \"IPaymaster(paymaster).validatePaymasterUserOp{gas: gas}(...\"\n                mstore(_6, /** @src 1:595:33492  \"contract EntryPoint is...\" */ shl(225, 0x7a32e3bf))\n                /// @src 1:22998:23171  \"IPaymaster(paymaster).validatePaymasterUserOp{gas: gas}(...\"\n                let trySuccessCondition := call(/** @src 1:1122:1126  \"2048\" */ sub(/** @src 1:22510:22583  \"verificationGasLimit -...\" */ _1, var_gasUsedByValidateAccountPrepayment), /** @src 1:595:33492  \"contract EntryPoint is...\" */ and(/** @src 1:22998:23019  \"IPaymaster(paymaster)\" */ _2, /** @src 1:595:33492  \"contract EntryPoint is...\" */ sub(shl(160, 1), 1)), var_validationData_1, /** @src 1:22998:23171  \"IPaymaster(paymaster).validatePaymasterUserOp{gas: gas}(...\" */ _6, sub(abi_encode_struct_UserOperation_calldata_bytes32_uint256(add(_6, 4), var_op_offset, _5, var_requiredPreFund), _6), _6, /** @src 1:595:33492  \"contract EntryPoint is...\" */ var_validationData_1)\n                /// @src 1:22998:23171  \"IPaymaster(paymaster).validatePaymasterUserOp{gas: gas}(...\"\n                let expr_1796_component_1_mpos := /** @src 1:595:33492  \"contract EntryPoint is...\" */ var_validationData_1\n                let expr_component := var_validationData_1\n                /// @src 1:22998:23171  \"IPaymaster(paymaster).validatePaymasterUserOp{gas: gas}(...\"\n                if trySuccessCondition\n                {\n                    let _7 := returndatasize()\n                    returndatacopy(_6, /** @src 1:595:33492  \"contract EntryPoint is...\" */ var_validationData_1, /** @src 1:22998:23171  \"IPaymaster(paymaster).validatePaymasterUserOp{gas: gas}(...\" */ _7)\n                    finalize_allocation(_6, _7)\n                    let expr_component_mpos, expr_component_1 := abi_decode_bytest_uint256_fromMemory(_6, add(_6, _7))\n                    expr_1796_component_1_mpos := expr_component_mpos\n                    expr_component := expr_component_1\n                }\n                /// @src 1:22978:23636  \"try...\"\n                switch iszero(trySuccessCondition)\n                case 0 {\n                    /// @src 1:23259:23277  \"context = _context\"\n                    var_context_1720_mpos := expr_1796_component_1_mpos\n                    /// @src 1:23295:23327  \"validationData = _validationData\"\n                    var_validationData := expr_component\n                }\n                default /// @src 1:22978:23636  \"try...\"\n                {\n                    let _8 := 1\n                    if eq(147028384, return_data_selector())\n                    {\n                        /// @src 1:23343:23546  \"catch Error(string memory revertReason) {...\"\n                        let _9 := try_decode_error_message()\n                        if _9\n                        {\n                            _8 := /** @src 1:595:33492  \"contract EntryPoint is...\" */ var_validationData_1\n                            /// @src 1:23467:23513  \"string.concat(\\\"AA33 reverted: \\\", revertReason)\"\n                            let expr_1822_mpos := string_concat_stringliteral_d505_string(_9)\n                            /// @src 1:23408:23531  \"FailedOp(...\"\n                            let _10 := /** @src 1:595:33492  \"contract EntryPoint is...\" */ mload(64)\n                            /// @src 1:23408:23531  \"FailedOp(...\"\n                            mstore(_10, /** @src 1:3283:3319  \"FailedOp(opIndex, \\\"AA95 out of gas\\\")\" */ shl(225, 0x1101335b))\n                            /// @src 1:23408:23531  \"FailedOp(...\"\n                            revert(_10, sub(abi_encode_uint256_bytes(add(_10, /** @src 1:22998:23171  \"IPaymaster(paymaster).validatePaymasterUserOp{gas: gas}(...\" */ 4), /** @src 1:23408:23531  \"FailedOp(...\" */ var_opIndex, expr_1822_mpos), _10))\n                        }\n                    }\n                    /// @src 1:22978:23636  \"try...\"\n                    if _8\n                    {\n                        /// @src 1:23578:23621  \"FailedOp(opIndex, \\\"AA33 reverted (or OOG)\\\")\"\n                        let _11 := /** @src 1:595:33492  \"contract EntryPoint is...\" */ mload(64)\n                        /// @src 1:23578:23621  \"FailedOp(opIndex, \\\"AA33 reverted (or OOG)\\\")\"\n                        mstore(_11, /** @src 1:3283:3319  \"FailedOp(opIndex, \\\"AA95 out of gas\\\")\" */ shl(225, 0x1101335b))\n                        /// @src 1:23578:23621  \"FailedOp(opIndex, \\\"AA33 reverted (or OOG)\\\")\"\n                        revert(_11, sub(abi_encode_uint256_stringliteral_b1ed(add(_11, /** @src 1:22998:23171  \"IPaymaster(paymaster).validatePaymasterUserOp{gas: gas}(...\" */ 4), /** @src 1:23578:23621  \"FailedOp(opIndex, \\\"AA33 reverted (or OOG)\\\")\" */ var_opIndex), _11))\n                    }\n                }\n            }\n            /// @src 1:595:33492  \"contract EntryPoint is...\"\n            function validator_assert_enum_PostOpMode(value)\n            {\n                if iszero(lt(value, 3))\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0x21)\n                    revert(0, 0x24)\n                }\n            }\n            function abi_encode_enum_PostOpMode_bytes_uint256_29544(headStart, value1, value2) -> tail\n            {\n                mstore(headStart, /** @src 1:3543:3579  \"IPaymaster.PostOpMode.postOpReverted\" */ 2)\n                /// @src 1:595:33492  \"contract EntryPoint is...\"\n                mstore(add(headStart, 32), 96)\n                tail := abi_encode_bytes(value1, add(headStart, 96))\n                mstore(add(headStart, 64), value2)\n            }\n            function abi_encode_enum_PostOpMode_bytes_uint256(headStart, value0, value1, value2) -> tail\n            {\n                if iszero(lt(value0, 3))\n                {\n                    mstore(/** @src -1:-1:-1 */ 0, /** @src 1:595:33492  \"contract EntryPoint is...\" */ shl(224, 0x4e487b71))\n                    mstore(4, 0x21)\n                    revert(/** @src -1:-1:-1 */ 0, /** @src 1:595:33492  \"contract EntryPoint is...\" */ 0x24)\n                }\n                mstore(headStart, value0)\n                mstore(add(headStart, 32), 96)\n                tail := abi_encode_bytes(value1, add(headStart, 96))\n                mstore(add(headStart, 64), value2)\n            }\n            function string_concat_stringliteral_89cf_string(param) -> outPtr\n            {\n                outPtr := mload(64)\n                mstore(add(outPtr, 0x20), \"AA50 postOp reverted: \")\n                let length := mload(param)\n                copy_memory_to_memory_with_cleanup(add(param, 0x20), add(outPtr, 54), length)\n                let _1 := sub(add(outPtr, length), outPtr)\n                mstore(outPtr, add(_1, 22))\n                finalize_allocation(outPtr, add(_1, 54))\n            }\n            function abi_encode_uint256_stringliteral_90de_29547(headStart) -> tail\n            {\n                mstore(headStart, /** @src 1:10469:10483  \"opInfo.mUserOp\" */ 0)\n                /// @src 1:595:33492  \"contract EntryPoint is...\"\n                mstore(add(headStart, 32), 64)\n                mstore(add(headStart, 64), 18)\n                mstore(add(headStart, 96), \"AA50 postOp revert\")\n                tail := add(headStart, 128)\n            }\n            function abi_encode_uint256_stringliteral_90de(headStart, value0) -> tail\n            {\n                mstore(headStart, value0)\n                mstore(add(headStart, 32), 64)\n                mstore(add(headStart, 64), 18)\n                mstore(add(headStart, 96), \"AA50 postOp revert\")\n                tail := add(headStart, 128)\n            }\n            function abi_encode_uint256_stringliteral_6d9d_29548(headStart) -> tail\n            {\n                mstore(headStart, /** @src 1:10469:10483  \"opInfo.mUserOp\" */ 0)\n                /// @src 1:595:33492  \"contract EntryPoint is...\"\n                mstore(add(headStart, 32), 64)\n                mstore(add(headStart, 64), 32)\n                mstore(add(headStart, 96), \"AA51 prefund below actualGasCost\")\n                tail := add(headStart, 128)\n            }\n            function abi_encode_uint256_stringliteral_6d9d(headStart, value0) -> tail\n            {\n                mstore(headStart, value0)\n                mstore(add(headStart, 32), 64)\n                mstore(add(headStart, 64), 32)\n                mstore(add(headStart, 96), \"AA51 prefund below actualGasCost\")\n                tail := add(headStart, 128)\n            }\n            function abi_encode_uint256_bool_uint256_uint256(headStart, value0, value1, value2, value3) -> tail\n            {\n                tail := add(headStart, 128)\n                mstore(headStart, value0)\n                mstore(add(headStart, 32), iszero(iszero(value1)))\n                mstore(add(headStart, 64), value2)\n                mstore(add(headStart, 96), value3)\n            }\n            /// @ast-id 2440 @src 1:29574:32034  \"function _handlePostOp(...\"\n            function fun_handlePostOp(var_opInfo_mpos, var_context_mpos, var_actualGas) -> var_actualGasCost\n            {\n                /// @src 1:29822:29831  \"gasleft()\"\n                let expr := gas()\n                /// @src 1:29865:29886  \"address refundAddress\"\n                let var_refundAddress := /** @src -1:-1:-1 */ 0\n                /// @src 1:29865:29886  \"address refundAddress\"\n                let var_refundAddress_1 := /** @src -1:-1:-1 */ var_refundAddress\n                /// @src 1:29930:29944  \"opInfo.mUserOp\"\n                let _mpos := mload(var_opInfo_mpos)\n                /// @src 1:29977:30003  \"getUserOpGasPrice(mUserOp)\"\n                let expr_1 := fun_getUserOpGasPrice(_mpos)\n                /// @src 1:30038:30055  \"mUserOp.paymaster\"\n                let _1 := add(_mpos, 160)\n                let _2 := /** @src 1:595:33492  \"contract EntryPoint is...\" */ cleanup_address(mload(/** @src 1:30038:30055  \"mUserOp.paymaster\" */ _1))\n                /// @src 1:595:33492  \"contract EntryPoint is...\"\n                let _3 := sub(shl(160, 1), 1)\n                let _4 := and(/** @src 1:30073:30096  \"paymaster == address(0)\" */ _2, /** @src 1:595:33492  \"contract EntryPoint is...\" */ _3)\n                /// @src 1:30069:31316  \"if (paymaster == address(0)) {...\"\n                switch /** @src 1:30073:30096  \"paymaster == address(0)\" */ iszero(/** @src 1:595:33492  \"contract EntryPoint is...\" */ _4)\n                case /** @src 1:30069:31316  \"if (paymaster == address(0)) {...\" */ 0 {\n                    /// @src 1:30185:30210  \"refundAddress = paymaster\"\n                    var_refundAddress := _2\n                    /// @src 1:30228:31302  \"if (context.length > 0) {...\"\n                    if /** @src 1:30232:30250  \"context.length > 0\" */ iszero(iszero(/** @src 1:595:33492  \"contract EntryPoint is...\" */ mload(/** @src 1:30232:30246  \"context.length\" */ var_context_mpos)))\n                    /// @src 1:30228:31302  \"if (context.length > 0) {...\"\n                    {\n                        /// @src 1:30332:31284  \"if (mode != IPaymaster.PostOpMode.postOpReverted) {...\"\n                        var_refundAddress_1 := /** @src -1:-1:-1 */ 0\n                        /// @src 1:595:33492  \"contract EntryPoint is...\"\n                        let _5 := mload(/** @src 1:30778:30806  \"mUserOp.verificationGasLimit\" */ add(_mpos, 96))\n                        /// @src 1:30711:30866  \"IPaymaster(paymaster).postOp{...\"\n                        if iszero(extcodesize(_4))\n                        {\n                            /// @src 1:595:33492  \"contract EntryPoint is...\"\n                            revert(/** @src -1:-1:-1 */ var_refundAddress_1, var_refundAddress_1)\n                        }\n                        /// @src 1:30711:30866  \"IPaymaster(paymaster).postOp{...\"\n                        let _6 := /** @src 1:595:33492  \"contract EntryPoint is...\" */ mload(64)\n                        /// @src 1:30711:30866  \"IPaymaster(paymaster).postOp{...\"\n                        mstore(_6, /** @src 1:595:33492  \"contract EntryPoint is...\" */ shl(224, 0xa9a23409))\n                        /// @src 1:30711:30866  \"IPaymaster(paymaster).postOp{...\"\n                        let trySuccessCondition := call(_5, _4, /** @src -1:-1:-1 */ var_refundAddress_1, /** @src 1:30711:30866  \"IPaymaster(paymaster).postOp{...\" */ _6, sub(abi_encode_enum_PostOpMode_bytes_uint256_29544(add(_6, 4), var_context_mpos, /** @src 1:595:33492  \"contract EntryPoint is...\" */ mul(/** @src 1:30290:30310  \"actualGas * gasPrice\" */ var_actualGas, expr_1)), /** @src 1:30711:30866  \"IPaymaster(paymaster).postOp{...\" */ _6), _6, /** @src -1:-1:-1 */ var_refundAddress_1)\n                        /// @src 1:30711:30866  \"IPaymaster(paymaster).postOp{...\"\n                        if trySuccessCondition\n                        {\n                            finalize_allocation_19804(_6)\n                            abi_decode(_6, _6)\n                        }\n                        /// @src 1:30679:31262  \"try...\"\n                        switch iszero(trySuccessCondition)\n                        case 0 { }\n                        default {\n                            let _7 := /** @src 1:30336:30380  \"mode != IPaymaster.PostOpMode.postOpReverted\" */ 1\n                            /// @src 1:30679:31262  \"try...\"\n                            if eq(147028384, return_data_selector())\n                            {\n                                /// @src 1:30894:31152  \"catch Error(string memory reason) {...\"\n                                let _8 := try_decode_error_message()\n                                if _8\n                                {\n                                    _7 := /** @src -1:-1:-1 */ var_refundAddress_1\n                                    /// @src 1:31048:31095  \"string.concat(\\\"AA50 postOp reverted: \\\", reason)\"\n                                    let expr_mpos := string_concat_stringliteral_89cf_string(_8)\n                                    /// @src 1:30965:31125  \"FailedOp(...\"\n                                    let _9 := /** @src 1:595:33492  \"contract EntryPoint is...\" */ mload(64)\n                                    /// @src 1:30965:31125  \"FailedOp(...\"\n                                    mstore(_9, /** @src 1:3283:3319  \"FailedOp(opIndex, \\\"AA95 out of gas\\\")\" */ shl(225, 0x1101335b))\n                                    /// @src 1:30965:31125  \"FailedOp(...\"\n                                    revert(_9, sub(abi_encode_uint256_bytes_29546(add(_9, /** @src 1:30711:30866  \"IPaymaster(paymaster).postOp{...\" */ 4), /** @src 1:30965:31125  \"FailedOp(...\" */ expr_mpos), _9))\n                                }\n                            }\n                            /// @src 1:30679:31262  \"try...\"\n                            if _7\n                            {\n                                /// @src 1:31196:31235  \"FailedOp(opIndex, \\\"AA50 postOp revert\\\")\"\n                                let _10 := /** @src 1:595:33492  \"contract EntryPoint is...\" */ mload(64)\n                                /// @src 1:31196:31235  \"FailedOp(opIndex, \\\"AA50 postOp revert\\\")\"\n                                mstore(_10, /** @src 1:3283:3319  \"FailedOp(opIndex, \\\"AA95 out of gas\\\")\" */ shl(225, 0x1101335b))\n                                /// @src 1:31196:31235  \"FailedOp(opIndex, \\\"AA50 postOp revert\\\")\"\n                                revert(_10, sub(abi_encode_uint256_stringliteral_90de_29547(add(_10, /** @src 1:30711:30866  \"IPaymaster(paymaster).postOp{...\" */ 4)), /** @src 1:31196:31235  \"FailedOp(opIndex, \\\"AA50 postOp revert\\\")\" */ _10))\n                            }\n                        }\n                    }\n                }\n                default /// @src 1:30069:31316  \"if (paymaster == address(0)) {...\"\n                {\n                    /// @src 1:30116:30146  \"refundAddress = mUserOp.sender\"\n                    var_refundAddress := /** @src 1:595:33492  \"contract EntryPoint is...\" */ cleanup_address(mload(/** @src 1:30132:30146  \"mUserOp.sender\" */ _mpos))\n                }\n                /// @src 1:595:33492  \"contract EntryPoint is...\"\n                let sum := add(var_actualGas, /** @src 1:1122:1126  \"2048\" */ sub(expr, /** @src 1:31351:31360  \"gasleft()\" */ gas()))\n                /// @src 1:31374:31410  \"actualGasCost = actualGas * gasPrice\"\n                var_actualGasCost := /** @src 1:595:33492  \"contract EntryPoint is...\" */ mul(/** @src 1:31390:31410  \"actualGas * gasPrice\" */ sum, expr_1)\n                /// @src 1:31428:31442  \"opInfo.prefund\"\n                let _11 := add(var_opInfo_mpos, 64)\n                /// @src 1:31424:31553  \"if (opInfo.prefund < actualGasCost) {...\"\n                if /** @src 1:31428:31458  \"opInfo.prefund < actualGasCost\" */ lt(/** @src 1:595:33492  \"contract EntryPoint is...\" */ mload(/** @src 1:31428:31442  \"opInfo.prefund\" */ _11), /** @src 1:31428:31458  \"opInfo.prefund < actualGasCost\" */ var_actualGasCost)\n                /// @src 1:31424:31553  \"if (opInfo.prefund < actualGasCost) {...\"\n                {\n                    /// @src 1:31485:31538  \"FailedOp(opIndex, \\\"AA51 prefund below actualGasCost\\\")\"\n                    let _12 := /** @src 1:595:33492  \"contract EntryPoint is...\" */ mload(/** @src 1:31428:31442  \"opInfo.prefund\" */ 64)\n                    /// @src 1:31485:31538  \"FailedOp(opIndex, \\\"AA51 prefund below actualGasCost\\\")\"\n                    mstore(_12, /** @src 1:3283:3319  \"FailedOp(opIndex, \\\"AA95 out of gas\\\")\" */ shl(225, 0x1101335b))\n                    /// @src 1:31485:31538  \"FailedOp(opIndex, \\\"AA51 prefund below actualGasCost\\\")\"\n                    revert(_12, sub(abi_encode_uint256_stringliteral_6d9d_29548(add(_12, 4)), _12))\n                }\n                /// @src 1:31660:31666  \"refund\"\n                fun_incrementDeposit(var_refundAddress, /** @src 1:1122:1126  \"2048\" */ sub(/** @src 1:595:33492  \"contract EntryPoint is...\" */ mload(/** @src 1:31583:31597  \"opInfo.prefund\" */ _11), /** @src 1:1122:1126  \"2048\" */ var_actualGasCost))\n                let _13 := mload(/** @src 1:31792:31809  \"opInfo.userOpHash\" */ add(var_opInfo_mpos, 32))\n                /// @src 1:31827:31841  \"mUserOp.sender\"\n                let _14 := /** @src 1:595:33492  \"contract EntryPoint is...\" */ cleanup_address(mload(/** @src 1:31827:31841  \"mUserOp.sender\" */ _mpos))\n                /// @src 1:31859:31876  \"mUserOp.paymaster\"\n                let _15 := /** @src 1:595:33492  \"contract EntryPoint is...\" */ cleanup_address(mload(/** @src 1:31859:31876  \"mUserOp.paymaster\" */ _1))\n                /// @src 1:595:33492  \"contract EntryPoint is...\"\n                let _16 := mload(/** @src 1:31894:31907  \"mUserOp.nonce\" */ add(_mpos, /** @src 1:31792:31809  \"opInfo.userOpHash\" */ 32))\n                /// @src 1:31756:32004  \"UserOperationEvent(...\"\n                let _17 := /** @src 1:595:33492  \"contract EntryPoint is...\" */ mload(/** @src 1:31428:31442  \"opInfo.prefund\" */ 64)\n                /// @src 1:31756:32004  \"UserOperationEvent(...\"\n                log4(_17, sub(abi_encode_uint256_bool_uint256_uint256(_17, _16, var_refundAddress_1, var_actualGasCost, sum), _17), 0x49628fd1471006c1482da88028e9ce4dbb080b815c9b0344d39e5a8e6ec1419f, _13, /** @src 1:595:33492  \"contract EntryPoint is...\" */ and(/** @src 1:31756:32004  \"UserOperationEvent(...\" */ _14, /** @src 1:595:33492  \"contract EntryPoint is...\" */ _3), and(/** @src 1:31756:32004  \"UserOperationEvent(...\" */ _15, /** @src 1:595:33492  \"contract EntryPoint is...\" */ _3))\n            }\n            /// @ast-id 2440 @src 1:29574:32034  \"function _handlePostOp(...\"\n            function fun_handlePostOp_19827(var_opIndex, var_opInfo_mpos, var_context_mpos, var_actualGas) -> var_actualGasCost\n            {\n                /// @src 1:29822:29831  \"gasleft()\"\n                let expr := gas()\n                /// @src 1:29865:29886  \"address refundAddress\"\n                let var_refundAddress := /** @src -1:-1:-1 */ 0\n                /// @src 1:29865:29886  \"address refundAddress\"\n                let var_refundAddress_1 := /** @src -1:-1:-1 */ var_refundAddress\n                /// @src 1:29930:29944  \"opInfo.mUserOp\"\n                let _mpos := mload(var_opInfo_mpos)\n                /// @src 1:29977:30003  \"getUserOpGasPrice(mUserOp)\"\n                let expr_1 := fun_getUserOpGasPrice(_mpos)\n                /// @src 1:30038:30055  \"mUserOp.paymaster\"\n                let _1 := add(_mpos, 160)\n                let _2 := /** @src 1:595:33492  \"contract EntryPoint is...\" */ cleanup_address(mload(/** @src 1:30038:30055  \"mUserOp.paymaster\" */ _1))\n                /// @src 1:595:33492  \"contract EntryPoint is...\"\n                let _3 := sub(shl(160, 1), 1)\n                let _4 := and(/** @src 1:30073:30096  \"paymaster == address(0)\" */ _2, /** @src 1:595:33492  \"contract EntryPoint is...\" */ _3)\n                /// @src 1:30069:31316  \"if (paymaster == address(0)) {...\"\n                switch /** @src 1:30073:30096  \"paymaster == address(0)\" */ iszero(/** @src 1:595:33492  \"contract EntryPoint is...\" */ _4)\n                case /** @src 1:30069:31316  \"if (paymaster == address(0)) {...\" */ 0 {\n                    /// @src 1:30185:30210  \"refundAddress = paymaster\"\n                    var_refundAddress := _2\n                    /// @src 1:30228:31302  \"if (context.length > 0) {...\"\n                    if /** @src 1:30232:30250  \"context.length > 0\" */ iszero(iszero(/** @src 1:595:33492  \"contract EntryPoint is...\" */ mload(/** @src 1:30232:30246  \"context.length\" */ var_context_mpos)))\n                    /// @src 1:30228:31302  \"if (context.length > 0) {...\"\n                    {\n                        /// @src 1:30332:31284  \"if (mode != IPaymaster.PostOpMode.postOpReverted) {...\"\n                        var_refundAddress_1 := /** @src -1:-1:-1 */ 0\n                        /// @src 1:595:33492  \"contract EntryPoint is...\"\n                        let _5 := mload(/** @src 1:30778:30806  \"mUserOp.verificationGasLimit\" */ add(_mpos, 96))\n                        /// @src 1:30711:30866  \"IPaymaster(paymaster).postOp{...\"\n                        if iszero(extcodesize(_4))\n                        {\n                            /// @src 1:595:33492  \"contract EntryPoint is...\"\n                            revert(/** @src -1:-1:-1 */ var_refundAddress_1, var_refundAddress_1)\n                        }\n                        /// @src 1:30711:30866  \"IPaymaster(paymaster).postOp{...\"\n                        let _6 := /** @src 1:595:33492  \"contract EntryPoint is...\" */ mload(64)\n                        /// @src 1:30711:30866  \"IPaymaster(paymaster).postOp{...\"\n                        mstore(_6, /** @src 1:595:33492  \"contract EntryPoint is...\" */ shl(224, 0xa9a23409))\n                        /// @src 1:30711:30866  \"IPaymaster(paymaster).postOp{...\"\n                        let trySuccessCondition := call(_5, _4, /** @src -1:-1:-1 */ var_refundAddress_1, /** @src 1:30711:30866  \"IPaymaster(paymaster).postOp{...\" */ _6, sub(abi_encode_enum_PostOpMode_bytes_uint256_29544(add(_6, 4), var_context_mpos, /** @src 1:595:33492  \"contract EntryPoint is...\" */ mul(/** @src 1:30290:30310  \"actualGas * gasPrice\" */ var_actualGas, expr_1)), /** @src 1:30711:30866  \"IPaymaster(paymaster).postOp{...\" */ _6), _6, /** @src -1:-1:-1 */ var_refundAddress_1)\n                        /// @src 1:30711:30866  \"IPaymaster(paymaster).postOp{...\"\n                        if trySuccessCondition\n                        {\n                            finalize_allocation_19804(_6)\n                            abi_decode(_6, _6)\n                        }\n                        /// @src 1:30679:31262  \"try...\"\n                        switch iszero(trySuccessCondition)\n                        case 0 { }\n                        default {\n                            let _7 := /** @src 1:30336:30380  \"mode != IPaymaster.PostOpMode.postOpReverted\" */ 1\n                            /// @src 1:30679:31262  \"try...\"\n                            if eq(147028384, return_data_selector())\n                            {\n                                /// @src 1:30894:31152  \"catch Error(string memory reason) {...\"\n                                let _8 := try_decode_error_message()\n                                if _8\n                                {\n                                    _7 := /** @src -1:-1:-1 */ var_refundAddress_1\n                                    /// @src 1:31048:31095  \"string.concat(\\\"AA50 postOp reverted: \\\", reason)\"\n                                    let expr_mpos := string_concat_stringliteral_89cf_string(_8)\n                                    /// @src 1:30965:31125  \"FailedOp(...\"\n                                    let _9 := /** @src 1:595:33492  \"contract EntryPoint is...\" */ mload(64)\n                                    /// @src 1:30965:31125  \"FailedOp(...\"\n                                    mstore(_9, /** @src 1:3283:3319  \"FailedOp(opIndex, \\\"AA95 out of gas\\\")\" */ shl(225, 0x1101335b))\n                                    /// @src 1:30965:31125  \"FailedOp(...\"\n                                    revert(_9, sub(abi_encode_uint256_bytes(add(_9, /** @src 1:30711:30866  \"IPaymaster(paymaster).postOp{...\" */ 4), /** @src 1:30965:31125  \"FailedOp(...\" */ var_opIndex, expr_mpos), _9))\n                                }\n                            }\n                            /// @src 1:30679:31262  \"try...\"\n                            if _7\n                            {\n                                /// @src 1:31196:31235  \"FailedOp(opIndex, \\\"AA50 postOp revert\\\")\"\n                                let _10 := /** @src 1:595:33492  \"contract EntryPoint is...\" */ mload(64)\n                                /// @src 1:31196:31235  \"FailedOp(opIndex, \\\"AA50 postOp revert\\\")\"\n                                mstore(_10, /** @src 1:3283:3319  \"FailedOp(opIndex, \\\"AA95 out of gas\\\")\" */ shl(225, 0x1101335b))\n                                /// @src 1:31196:31235  \"FailedOp(opIndex, \\\"AA50 postOp revert\\\")\"\n                                revert(_10, sub(abi_encode_uint256_stringliteral_90de(add(_10, /** @src 1:30711:30866  \"IPaymaster(paymaster).postOp{...\" */ 4), /** @src 1:31196:31235  \"FailedOp(opIndex, \\\"AA50 postOp revert\\\")\" */ var_opIndex), _10))\n                            }\n                        }\n                    }\n                }\n                default /// @src 1:30069:31316  \"if (paymaster == address(0)) {...\"\n                {\n                    /// @src 1:30116:30146  \"refundAddress = mUserOp.sender\"\n                    var_refundAddress := /** @src 1:595:33492  \"contract EntryPoint is...\" */ cleanup_address(mload(/** @src 1:30132:30146  \"mUserOp.sender\" */ _mpos))\n                }\n                /// @src 1:595:33492  \"contract EntryPoint is...\"\n                let sum := add(var_actualGas, /** @src 1:1122:1126  \"2048\" */ sub(expr, /** @src 1:31351:31360  \"gasleft()\" */ gas()))\n                /// @src 1:31374:31410  \"actualGasCost = actualGas * gasPrice\"\n                var_actualGasCost := /** @src 1:595:33492  \"contract EntryPoint is...\" */ mul(/** @src 1:31390:31410  \"actualGas * gasPrice\" */ sum, expr_1)\n                /// @src 1:31428:31442  \"opInfo.prefund\"\n                let _11 := add(var_opInfo_mpos, 64)\n                /// @src 1:31424:31553  \"if (opInfo.prefund < actualGasCost) {...\"\n                if /** @src 1:31428:31458  \"opInfo.prefund < actualGasCost\" */ lt(/** @src 1:595:33492  \"contract EntryPoint is...\" */ mload(/** @src 1:31428:31442  \"opInfo.prefund\" */ _11), /** @src 1:31428:31458  \"opInfo.prefund < actualGasCost\" */ var_actualGasCost)\n                /// @src 1:31424:31553  \"if (opInfo.prefund < actualGasCost) {...\"\n                {\n                    /// @src 1:31485:31538  \"FailedOp(opIndex, \\\"AA51 prefund below actualGasCost\\\")\"\n                    let _12 := /** @src 1:595:33492  \"contract EntryPoint is...\" */ mload(/** @src 1:31428:31442  \"opInfo.prefund\" */ 64)\n                    /// @src 1:31485:31538  \"FailedOp(opIndex, \\\"AA51 prefund below actualGasCost\\\")\"\n                    mstore(_12, /** @src 1:3283:3319  \"FailedOp(opIndex, \\\"AA95 out of gas\\\")\" */ shl(225, 0x1101335b))\n                    /// @src 1:31485:31538  \"FailedOp(opIndex, \\\"AA51 prefund below actualGasCost\\\")\"\n                    revert(_12, sub(abi_encode_uint256_stringliteral_6d9d(add(_12, 4), var_opIndex), _12))\n                }\n                /// @src 1:31660:31666  \"refund\"\n                fun_incrementDeposit(var_refundAddress, /** @src 1:1122:1126  \"2048\" */ sub(/** @src 1:595:33492  \"contract EntryPoint is...\" */ mload(/** @src 1:31583:31597  \"opInfo.prefund\" */ _11), /** @src 1:1122:1126  \"2048\" */ var_actualGasCost))\n                let _13 := mload(/** @src 1:31792:31809  \"opInfo.userOpHash\" */ add(var_opInfo_mpos, 32))\n                /// @src 1:31827:31841  \"mUserOp.sender\"\n                let _14 := /** @src 1:595:33492  \"contract EntryPoint is...\" */ cleanup_address(mload(/** @src 1:31827:31841  \"mUserOp.sender\" */ _mpos))\n                /// @src 1:31859:31876  \"mUserOp.paymaster\"\n                let _15 := /** @src 1:595:33492  \"contract EntryPoint is...\" */ cleanup_address(mload(/** @src 1:31859:31876  \"mUserOp.paymaster\" */ _1))\n                /// @src 1:595:33492  \"contract EntryPoint is...\"\n                let _16 := mload(/** @src 1:31894:31907  \"mUserOp.nonce\" */ add(_mpos, /** @src 1:31792:31809  \"opInfo.userOpHash\" */ 32))\n                /// @src 1:31756:32004  \"UserOperationEvent(...\"\n                let _17 := /** @src 1:595:33492  \"contract EntryPoint is...\" */ mload(/** @src 1:31428:31442  \"opInfo.prefund\" */ 64)\n                /// @src 1:31756:32004  \"UserOperationEvent(...\"\n                log4(_17, sub(abi_encode_uint256_bool_uint256_uint256(_17, _16, var_refundAddress_1, var_actualGasCost, sum), _17), 0x49628fd1471006c1482da88028e9ce4dbb080b815c9b0344d39e5a8e6ec1419f, _13, /** @src 1:595:33492  \"contract EntryPoint is...\" */ and(/** @src 1:31756:32004  \"UserOperationEvent(...\" */ _14, /** @src 1:595:33492  \"contract EntryPoint is...\" */ _3), and(/** @src 1:31756:32004  \"UserOperationEvent(...\" */ _15, /** @src 1:595:33492  \"contract EntryPoint is...\" */ _3))\n            }\n            /// @ast-id 2440 @src 1:29574:32034  \"function _handlePostOp(...\"\n            function fun_handlePostOp_19835(var_mode, var_opInfo_mpos, var_context_mpos, var_actualGas) -> var_actualGasCost\n            {\n                /// @src 1:29822:29831  \"gasleft()\"\n                let expr := gas()\n                /// @src 1:29865:29886  \"address refundAddress\"\n                let var_refundAddress := /** @src 1:10469:10483  \"opInfo.mUserOp\" */ 0\n                /// @src 1:29930:29944  \"opInfo.mUserOp\"\n                let _mpos := mload(var_opInfo_mpos)\n                /// @src 1:29977:30003  \"getUserOpGasPrice(mUserOp)\"\n                let expr_1 := fun_getUserOpGasPrice(_mpos)\n                /// @src 1:30038:30055  \"mUserOp.paymaster\"\n                let _1 := add(_mpos, 160)\n                let _2 := /** @src 1:595:33492  \"contract EntryPoint is...\" */ cleanup_address(mload(/** @src 1:30038:30055  \"mUserOp.paymaster\" */ _1))\n                /// @src 1:595:33492  \"contract EntryPoint is...\"\n                let _3 := sub(shl(160, 1), 1)\n                let _4 := and(/** @src 1:30073:30096  \"paymaster == address(0)\" */ _2, /** @src 1:595:33492  \"contract EntryPoint is...\" */ _3)\n                /// @src 1:30069:31316  \"if (paymaster == address(0)) {...\"\n                switch /** @src 1:30073:30096  \"paymaster == address(0)\" */ iszero(/** @src 1:595:33492  \"contract EntryPoint is...\" */ _4)\n                case /** @src 1:30069:31316  \"if (paymaster == address(0)) {...\" */ 0 {\n                    /// @src 1:30185:30210  \"refundAddress = paymaster\"\n                    var_refundAddress := _2\n                    /// @src 1:30228:31302  \"if (context.length > 0) {...\"\n                    if /** @src 1:30232:30250  \"context.length > 0\" */ iszero(iszero(/** @src 1:595:33492  \"contract EntryPoint is...\" */ mload(/** @src 1:30232:30246  \"context.length\" */ var_context_mpos)))\n                    /// @src 1:30228:31302  \"if (context.length > 0) {...\"\n                    {\n                        /// @src 1:30274:30310  \"actualGasCost = actualGas * gasPrice\"\n                        let var_actualGasCost_1 := /** @src 1:595:33492  \"contract EntryPoint is...\" */ mul(/** @src 1:30290:30310  \"actualGas * gasPrice\" */ var_actualGas, expr_1)\n                        /// @src 1:595:33492  \"contract EntryPoint is...\"\n                        validator_assert_enum_PostOpMode(var_mode)\n                        /// @src 1:30332:31284  \"if (mode != IPaymaster.PostOpMode.postOpReverted) {...\"\n                        switch /** @src 1:30336:30380  \"mode != IPaymaster.PostOpMode.postOpReverted\" */ iszero(eq(var_mode, /** @src 1:30344:30380  \"IPaymaster.PostOpMode.postOpReverted\" */ 2))\n                        case /** @src 1:30332:31284  \"if (mode != IPaymaster.PostOpMode.postOpReverted) {...\" */ 0 {\n                            /// @src 1:595:33492  \"contract EntryPoint is...\"\n                            let _5 := mload(/** @src 1:30778:30806  \"mUserOp.verificationGasLimit\" */ add(_mpos, 96))\n                            /// @src 1:30711:30866  \"IPaymaster(paymaster).postOp{...\"\n                            if iszero(extcodesize(_4))\n                            {\n                                /// @src 1:595:33492  \"contract EntryPoint is...\"\n                                revert(/** @src 1:10469:10483  \"opInfo.mUserOp\" */ 0, 0)\n                            }\n                            /// @src 1:30711:30866  \"IPaymaster(paymaster).postOp{...\"\n                            let _6 := /** @src 1:595:33492  \"contract EntryPoint is...\" */ mload(64)\n                            /// @src 1:30711:30866  \"IPaymaster(paymaster).postOp{...\"\n                            mstore(_6, /** @src 1:595:33492  \"contract EntryPoint is...\" */ shl(224, 0xa9a23409))\n                            /// @src 1:30711:30866  \"IPaymaster(paymaster).postOp{...\"\n                            let trySuccessCondition := call(_5, _4, /** @src 1:10469:10483  \"opInfo.mUserOp\" */ 0, /** @src 1:30711:30866  \"IPaymaster(paymaster).postOp{...\" */ _6, sub(abi_encode_enum_PostOpMode_bytes_uint256(add(_6, 4), var_mode, var_context_mpos, var_actualGasCost_1), _6), _6, /** @src 1:10469:10483  \"opInfo.mUserOp\" */ 0)\n                            /// @src 1:30711:30866  \"IPaymaster(paymaster).postOp{...\"\n                            if trySuccessCondition\n                            {\n                                finalize_allocation_19804(_6)\n                                abi_decode(_6, _6)\n                            }\n                            /// @src 1:30679:31262  \"try...\"\n                            switch iszero(trySuccessCondition)\n                            case 0 { }\n                            default {\n                                let _7 := 1\n                                if eq(147028384, return_data_selector())\n                                {\n                                    /// @src 1:30894:31152  \"catch Error(string memory reason) {...\"\n                                    let _8 := try_decode_error_message()\n                                    if _8\n                                    {\n                                        _7 := /** @src 1:10469:10483  \"opInfo.mUserOp\" */ 0\n                                        /// @src 1:31048:31095  \"string.concat(\\\"AA50 postOp reverted: \\\", reason)\"\n                                        let expr_mpos := string_concat_stringliteral_89cf_string(_8)\n                                        /// @src 1:30965:31125  \"FailedOp(...\"\n                                        let _9 := /** @src 1:595:33492  \"contract EntryPoint is...\" */ mload(64)\n                                        /// @src 1:30965:31125  \"FailedOp(...\"\n                                        mstore(_9, /** @src 1:3283:3319  \"FailedOp(opIndex, \\\"AA95 out of gas\\\")\" */ shl(225, 0x1101335b))\n                                        /// @src 1:30965:31125  \"FailedOp(...\"\n                                        revert(_9, sub(abi_encode_uint256_bytes_29546(add(_9, /** @src 1:30711:30866  \"IPaymaster(paymaster).postOp{...\" */ 4), /** @src 1:30965:31125  \"FailedOp(...\" */ expr_mpos), _9))\n                                    }\n                                }\n                                /// @src 1:30679:31262  \"try...\"\n                                if _7\n                                {\n                                    /// @src 1:31196:31235  \"FailedOp(opIndex, \\\"AA50 postOp revert\\\")\"\n                                    let _10 := /** @src 1:595:33492  \"contract EntryPoint is...\" */ mload(64)\n                                    /// @src 1:31196:31235  \"FailedOp(opIndex, \\\"AA50 postOp revert\\\")\"\n                                    mstore(_10, /** @src 1:3283:3319  \"FailedOp(opIndex, \\\"AA95 out of gas\\\")\" */ shl(225, 0x1101335b))\n                                    /// @src 1:31196:31235  \"FailedOp(opIndex, \\\"AA50 postOp revert\\\")\"\n                                    revert(_10, sub(abi_encode_uint256_stringliteral_90de_29547(add(_10, /** @src 1:30711:30866  \"IPaymaster(paymaster).postOp{...\" */ 4)), /** @src 1:31196:31235  \"FailedOp(opIndex, \\\"AA50 postOp revert\\\")\" */ _10))\n                                }\n                            }\n                        }\n                        default /// @src 1:30332:31284  \"if (mode != IPaymaster.PostOpMode.postOpReverted) {...\"\n                        {\n                            /// @src 1:595:33492  \"contract EntryPoint is...\"\n                            let _11 := mload(/** @src 1:30471:30499  \"mUserOp.verificationGasLimit\" */ add(_mpos, 96))\n                            /// @src 1:30408:30555  \"IPaymaster(paymaster).postOp{...\"\n                            if iszero(extcodesize(_4))\n                            {\n                                /// @src 1:595:33492  \"contract EntryPoint is...\"\n                                revert(/** @src 1:10469:10483  \"opInfo.mUserOp\" */ 0, 0)\n                            }\n                            /// @src 1:30408:30555  \"IPaymaster(paymaster).postOp{...\"\n                            let _12 := /** @src 1:595:33492  \"contract EntryPoint is...\" */ mload(64)\n                            /// @src 1:30408:30555  \"IPaymaster(paymaster).postOp{...\"\n                            mstore(_12, /** @src 1:595:33492  \"contract EntryPoint is...\" */ shl(224, 0xa9a23409))\n                            /// @src 1:30408:30555  \"IPaymaster(paymaster).postOp{...\"\n                            let _13 := call(_11, _4, /** @src 1:10469:10483  \"opInfo.mUserOp\" */ 0, /** @src 1:30408:30555  \"IPaymaster(paymaster).postOp{...\" */ _12, sub(abi_encode_enum_PostOpMode_bytes_uint256(add(_12, 4), var_mode, var_context_mpos, var_actualGasCost_1), _12), _12, /** @src 1:10469:10483  \"opInfo.mUserOp\" */ 0)\n                            /// @src 1:30408:30555  \"IPaymaster(paymaster).postOp{...\"\n                            if iszero(_13) { revert_forward() }\n                            if _13\n                            {\n                                finalize_allocation_19804(_12)\n                                abi_decode(_12, _12)\n                            }\n                        }\n                    }\n                }\n                default /// @src 1:30069:31316  \"if (paymaster == address(0)) {...\"\n                {\n                    /// @src 1:30116:30146  \"refundAddress = mUserOp.sender\"\n                    var_refundAddress := /** @src 1:595:33492  \"contract EntryPoint is...\" */ cleanup_address(mload(/** @src 1:30132:30146  \"mUserOp.sender\" */ _mpos))\n                }\n                /// @src 1:595:33492  \"contract EntryPoint is...\"\n                let sum := add(var_actualGas, /** @src 1:1122:1126  \"2048\" */ sub(expr, /** @src 1:31351:31360  \"gasleft()\" */ gas()))\n                /// @src 1:31374:31410  \"actualGasCost = actualGas * gasPrice\"\n                var_actualGasCost := /** @src 1:595:33492  \"contract EntryPoint is...\" */ mul(/** @src 1:31390:31410  \"actualGas * gasPrice\" */ sum, expr_1)\n                /// @src 1:31428:31442  \"opInfo.prefund\"\n                let _14 := add(var_opInfo_mpos, 64)\n                /// @src 1:31424:31553  \"if (opInfo.prefund < actualGasCost) {...\"\n                if /** @src 1:31428:31458  \"opInfo.prefund < actualGasCost\" */ lt(/** @src 1:595:33492  \"contract EntryPoint is...\" */ mload(/** @src 1:31428:31442  \"opInfo.prefund\" */ _14), /** @src 1:31428:31458  \"opInfo.prefund < actualGasCost\" */ var_actualGasCost)\n                /// @src 1:31424:31553  \"if (opInfo.prefund < actualGasCost) {...\"\n                {\n                    /// @src 1:31485:31538  \"FailedOp(opIndex, \\\"AA51 prefund below actualGasCost\\\")\"\n                    let _15 := /** @src 1:595:33492  \"contract EntryPoint is...\" */ mload(/** @src 1:31428:31442  \"opInfo.prefund\" */ 64)\n                    /// @src 1:31485:31538  \"FailedOp(opIndex, \\\"AA51 prefund below actualGasCost\\\")\"\n                    mstore(_15, /** @src 1:3283:3319  \"FailedOp(opIndex, \\\"AA95 out of gas\\\")\" */ shl(225, 0x1101335b))\n                    /// @src 1:31485:31538  \"FailedOp(opIndex, \\\"AA51 prefund below actualGasCost\\\")\"\n                    revert(_15, sub(abi_encode_uint256_stringliteral_6d9d_29548(add(_15, 4)), _15))\n                }\n                /// @src 1:31660:31666  \"refund\"\n                fun_incrementDeposit(var_refundAddress, /** @src 1:1122:1126  \"2048\" */ sub(/** @src 1:595:33492  \"contract EntryPoint is...\" */ mload(/** @src 1:31583:31597  \"opInfo.prefund\" */ _14), /** @src 1:1122:1126  \"2048\" */ var_actualGasCost))\n                /// @src 1:595:33492  \"contract EntryPoint is...\"\n                validator_assert_enum_PostOpMode(var_mode)\n                /// @src 1:1122:1126  \"2048\"\n                let _16 := mload(/** @src 1:31792:31809  \"opInfo.userOpHash\" */ add(var_opInfo_mpos, 32))\n                /// @src 1:31827:31841  \"mUserOp.sender\"\n                let _17 := /** @src 1:595:33492  \"contract EntryPoint is...\" */ cleanup_address(mload(/** @src 1:31827:31841  \"mUserOp.sender\" */ _mpos))\n                /// @src 1:31859:31876  \"mUserOp.paymaster\"\n                let _18 := /** @src 1:595:33492  \"contract EntryPoint is...\" */ cleanup_address(mload(/** @src 1:31859:31876  \"mUserOp.paymaster\" */ _1))\n                /// @src 1:595:33492  \"contract EntryPoint is...\"\n                let _19 := mload(/** @src 1:31894:31907  \"mUserOp.nonce\" */ add(_mpos, /** @src 1:31792:31809  \"opInfo.userOpHash\" */ 32))\n                /// @src 1:31756:32004  \"UserOperationEvent(...\"\n                let _20 := /** @src 1:595:33492  \"contract EntryPoint is...\" */ mload(/** @src 1:31428:31442  \"opInfo.prefund\" */ 64)\n                /// @src 1:31756:32004  \"UserOperationEvent(...\"\n                log4(_20, sub(abi_encode_uint256_bool_uint256_uint256(_20, _19, /** @src 1:31696:31737  \"mode == IPaymaster.PostOpMode.opSucceeded\" */ iszero(var_mode), /** @src 1:31756:32004  \"UserOperationEvent(...\" */ var_actualGasCost, sum), _20), 0x49628fd1471006c1482da88028e9ce4dbb080b815c9b0344d39e5a8e6ec1419f, _16, /** @src 1:595:33492  \"contract EntryPoint is...\" */ and(/** @src 1:31756:32004  \"UserOperationEvent(...\" */ _17, /** @src 1:595:33492  \"contract EntryPoint is...\" */ _3), and(/** @src 1:31756:32004  \"UserOperationEvent(...\" */ _18, /** @src 1:595:33492  \"contract EntryPoint is...\" */ _3))\n            }\n            /// @ast-id 2476 @src 1:32202:32733  \"function getUserOpGasPrice(...\"\n            function fun_getUserOpGasPrice(var_mUserOp_2444_mpos) -> var\n            {\n                /// @src 1:595:33492  \"contract EntryPoint is...\"\n                let _1 := mload(/** @src 1:32361:32381  \"mUserOp.maxFeePerGas\" */ add(var_mUserOp_2444_mpos, 192))\n                /// @src 1:595:33492  \"contract EntryPoint is...\"\n                let _2 := mload(/** @src 1:32426:32454  \"mUserOp.maxPriorityFeePerGas\" */ add(var_mUserOp_2444_mpos, 224))\n                /// @src 1:32468:32641  \"if (maxFeePerGas == maxPriorityFeePerGas) {...\"\n                if /** @src 1:32472:32508  \"maxFeePerGas == maxPriorityFeePerGas\" */ eq(_1, _2)\n                /// @src 1:32468:32641  \"if (maxFeePerGas == maxPriorityFeePerGas) {...\"\n                {\n                    /// @src 1:32607:32626  \"return maxFeePerGas\"\n                    var := _1\n                    leave\n                }\n                /// @src 1:595:33492  \"contract EntryPoint is...\"\n                let _3 := add(/** @src 1:32679:32715  \"maxPriorityFeePerGas + block.basefee\" */ _2, /** @src 1:32702:32715  \"block.basefee\" */ basefee())\n                /// @src 1:32823:32836  \"a < b ? a : b\"\n                let expr := /** @src -1:-1:-1 */ 0\n                /// @src 1:32823:32836  \"a < b ? a : b\"\n                switch /** @src 1:32823:32828  \"a < b\" */ lt(_1, _3)\n                case /** @src 1:32823:32836  \"a < b ? a : b\" */ 0 { expr := _3 }\n                default { expr := _1 }\n                /// @src 1:32654:32716  \"return min(maxFeePerGas, maxPriorityFeePerGas + block.basefee)\"\n                var := expr\n            }\n            /// @ast-id 2516 @src 1:33384:33490  \"function numberMarker() internal view {...\"\n            function fun_numberMarker()\n            {\n                /// @src 1:33432:33484  \"assembly {...\"\n                mstore(0, number())\n            }\n            /// @src 1:595:33492  \"contract EntryPoint is...\"\n            function allocate_and_zero_memory_struct_struct_ValidationData() -> memPtr\n            {\n                let memPtr_1 := mload(64)\n                finalize_allocation_19854(memPtr_1)\n                memPtr := memPtr_1\n                mstore(memPtr_1, /** @src -1:-1:-1 */ 0)\n                /// @src 1:595:33492  \"contract EntryPoint is...\"\n                mstore(add(memPtr_1, 32), /** @src -1:-1:-1 */ 0)\n                /// @src 1:595:33492  \"contract EntryPoint is...\"\n                mstore(add(memPtr_1, 64), /** @src -1:-1:-1 */ 0)\n            }\n            /// @ast-id 2585 @src 2:879:1292  \"function _parseValidationData(...\"\n            function fun_parseValidationData(var_validationData) -> var_data_mpos\n            {\n                /// @src 1:595:33492  \"contract EntryPoint is...\"\n                pop(allocate_and_zero_memory_struct_struct_ValidationData())\n                let _1 := 0xffffffffffff\n                /// @src 2:1043:1092  \"uint48 validUntil = uint48(validationData >> 160)\"\n                let var_validUntil := /** @src 1:595:33492  \"contract EntryPoint is...\" */ and(shr(/** @src 2:1088:1091  \"160\" */ 0xa0, /** @src 1:595:33492  \"contract EntryPoint is...\" */ var_validationData), _1)\n                /// @src 2:1098:1165  \"if (validUntil == 0) {...\"\n                if /** @src 2:1102:1117  \"validUntil == 0\" */ iszero(/** @src 1:595:33492  \"contract EntryPoint is...\" */ var_validUntil)\n                /// @src 2:1098:1165  \"if (validUntil == 0) {...\"\n                {\n                    /// @src 2:1129:1158  \"validUntil = type(uint48).max\"\n                    var_validUntil := /** @src 1:595:33492  \"contract EntryPoint is...\" */ _1\n                }\n                let memPtr := mload(64)\n                finalize_allocation_19854(memPtr)\n                mstore(memPtr, and(/** @src 2:1013:1036  \"uint160(validationData)\" */ var_validationData, /** @src 1:595:33492  \"contract EntryPoint is...\" */ sub(shl(160, 1), 1)))\n                mstore(/** @src 2:1239:1289  \"ValidationData(aggregator, validAfter, validUntil)\" */ add(memPtr, 32), /** @src 1:595:33492  \"contract EntryPoint is...\" */ shr(/** @src 2:1216:1224  \"48 + 160\" */ 0xd0, /** @src 1:595:33492  \"contract EntryPoint is...\" */ var_validationData))\n                mstore(/** @src 2:1239:1289  \"ValidationData(aggregator, validAfter, validUntil)\" */ add(memPtr, /** @src 1:595:33492  \"contract EntryPoint is...\" */ 64), and(var_validUntil, _1))\n                /// @src 2:1232:1289  \"return ValidationData(aggregator, validAfter, validUntil)\"\n                var_data_mpos := memPtr\n            }\n            /// @ast-id 2670 @src 2:1337:2246  \"function _intersectTimeRange(...\"\n            function fun_intersectTimeRange(var_validationData, var_paymasterValidationData) -> var_mpos\n            {\n                /// @src 1:595:33492  \"contract EntryPoint is...\"\n                pop(allocate_and_zero_memory_struct_struct_ValidationData())\n                /// @src 2:1522:1572  \"_parseValidationData(...\"\n                let expr_2600_mpos := fun_parseValidationData(var_validationData)\n                /// @src 2:1619:1678  \"_parseValidationData(...\"\n                let expr_2607_mpos := fun_parseValidationData(var_paymasterValidationData)\n                /// @src 1:595:33492  \"contract EntryPoint is...\"\n                let _1 := sub(shl(160, 1), 1)\n                /// @src 2:1684:1737  \"address aggregator = accountValidationData.aggregator\"\n                let var_aggregator := /** @src 1:595:33492  \"contract EntryPoint is...\" */ and(mload(/** @src 2:1705:1737  \"accountValidationData.aggregator\" */ expr_2600_mpos), /** @src 1:595:33492  \"contract EntryPoint is...\" */ _1)\n                /// @src 2:1743:1830  \"if (aggregator == address(0)) {...\"\n                if /** @src 2:1747:1771  \"aggregator == address(0)\" */ iszero(/** @src 1:595:33492  \"contract EntryPoint is...\" */ var_aggregator)\n                /// @src 2:1743:1830  \"if (aggregator == address(0)) {...\"\n                {\n                    /// @src 2:1783:1823  \"aggregator = pmValidationData.aggregator\"\n                    var_aggregator := /** @src 1:595:33492  \"contract EntryPoint is...\" */ and(mload(/** @src 2:1796:1823  \"pmValidationData.aggregator\" */ expr_2607_mpos), /** @src 1:595:33492  \"contract EntryPoint is...\" */ _1)\n                }\n                let _2 := 0xffffffffffff\n                /// @src 2:1835:1887  \"uint48 validAfter = accountValidationData.validAfter\"\n                let var_validAfter := /** @src 1:595:33492  \"contract EntryPoint is...\" */ and(mload(/** @src 2:1855:1887  \"accountValidationData.validAfter\" */ add(expr_2600_mpos, 32)), /** @src 1:595:33492  \"contract EntryPoint is...\" */ _2)\n                /// @src 2:1893:1945  \"uint48 validUntil = accountValidationData.validUntil\"\n                let var_validUntil := /** @src 1:595:33492  \"contract EntryPoint is...\" */ and(mload(/** @src 2:1913:1945  \"accountValidationData.validUntil\" */ add(expr_2600_mpos, 64)), /** @src 1:595:33492  \"contract EntryPoint is...\" */ _2)\n                let cleaned := and(mload(/** @src 2:1973:2000  \"pmValidationData.validAfter\" */ add(expr_2607_mpos, /** @src 2:1855:1887  \"accountValidationData.validAfter\" */ 32)), /** @src 1:595:33492  \"contract EntryPoint is...\" */ _2)\n                let cleaned_1 := and(mload(/** @src 2:2028:2055  \"pmValidationData.validUntil\" */ add(expr_2607_mpos, /** @src 2:1913:1945  \"accountValidationData.validUntil\" */ 64)), /** @src 1:595:33492  \"contract EntryPoint is...\" */ _2)\n                /// @src 2:2062:2118  \"if (validAfter < pmValidAfter) validAfter = pmValidAfter\"\n                if /** @src 2:2066:2091  \"validAfter < pmValidAfter\" */ lt(/** @src 1:595:33492  \"contract EntryPoint is...\" */ var_validAfter, cleaned)\n                /// @src 2:2062:2118  \"if (validAfter < pmValidAfter) validAfter = pmValidAfter\"\n                {\n                    /// @src 2:2093:2118  \"validAfter = pmValidAfter\"\n                    var_validAfter := cleaned\n                }\n                /// @src 2:2124:2180  \"if (validUntil > pmValidUntil) validUntil = pmValidUntil\"\n                if /** @src 2:2128:2153  \"validUntil > pmValidUntil\" */ gt(/** @src 1:595:33492  \"contract EntryPoint is...\" */ var_validUntil, cleaned_1)\n                /// @src 2:2124:2180  \"if (validUntil > pmValidUntil) validUntil = pmValidUntil\"\n                {\n                    /// @src 2:2155:2180  \"validUntil = pmValidUntil\"\n                    var_validUntil := cleaned_1\n                }\n                /// @src 1:595:33492  \"contract EntryPoint is...\"\n                let memPtr := mload(/** @src 2:1913:1945  \"accountValidationData.validUntil\" */ 64)\n                /// @src 1:595:33492  \"contract EntryPoint is...\"\n                finalize_allocation_19854(memPtr)\n                mstore(memPtr, and(var_aggregator, _1))\n                mstore(/** @src 2:2193:2243  \"ValidationData(aggregator, validAfter, validUntil)\" */ add(memPtr, /** @src 2:1855:1887  \"accountValidationData.validAfter\" */ 32), /** @src 1:595:33492  \"contract EntryPoint is...\" */ and(var_validAfter, _2))\n                mstore(/** @src 2:2193:2243  \"ValidationData(aggregator, validAfter, validUntil)\" */ add(memPtr, /** @src 2:1913:1945  \"accountValidationData.validUntil\" */ 64), /** @src 1:595:33492  \"contract EntryPoint is...\" */ and(var_validUntil, _2))\n                /// @src 2:2186:2243  \"return ValidationData(aggregator, validAfter, validUntil)\"\n                var_mpos := memPtr\n            }\n            /// @ast-id 2847 @src 3:1106:1361  \"function _validateAndUpdateNonce(...\"\n            function fun_validateAndUpdateNonce(var_sender, var_nonce) -> var\n            {\n                /// @src 1:595:33492  \"contract EntryPoint is...\"\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 1:595:33492  \"contract EntryPoint is...\" */ and(var_sender, sub(shl(160, 1), 1)))\n                mstore(0x20, /** @src 3:1313:1332  \"nonceSequenceNumber\" */ 0x01)\n                /// @src 3:1313:1345  \"nonceSequenceNumber[sender][key]\"\n                let _1 := mapping_index_access_mapping_uint192_uint256_of_uint192(/** @src 1:595:33492  \"contract EntryPoint is...\" */ keccak256(/** @src -1:-1:-1 */ 0, /** @src 3:1257:1259  \"64\" */ 0x40), /** @src 1:595:33492  \"contract EntryPoint is...\" */ shr(/** @src 3:1257:1259  \"64\" */ 0x40, /** @src 1:595:33492  \"contract EntryPoint is...\" */ var_nonce))\n                let _2 := sload(/** @src 3:1313:1347  \"nonceSequenceNumber[sender][key]++\" */ _1)\n                /// @src 0:1759:1760  \"2\"\n                sstore(_1, /** @src 3:1313:1347  \"nonceSequenceNumber[sender][key]++\" */ increment_uint256(_2))\n                /// @src 3:1306:1354  \"return nonceSequenceNumber[sender][key]++ == seq\"\n                var := /** @src 3:1313:1354  \"nonceSequenceNumber[sender][key]++ == seq\" */ eq(_2, /** @src 1:595:33492  \"contract EntryPoint is...\" */ and(/** @src 3:1283:1296  \"uint64(nonce)\" */ var_nonce, /** @src 1:595:33492  \"contract EntryPoint is...\" */ 0xffffffffffffffff))\n            }\n            function write_to_memory_uint112(memPtr, value)\n            {\n                mstore(memPtr, and(value, 0xffffffffffffffffffffffffffff))\n            }\n            function write_to_memory_uint32(memPtr, value)\n            {\n                mstore(memPtr, and(value, 0xffffffff))\n            }\n            /// @ast-id 2951 @src 5:793:1055  \"function _getStakeInfo(...\"\n            function fun_getStakeInfo(var_addr) -> var_info_mpos\n            {\n                /// @src 5:867:888  \"StakeInfo memory info\"\n                var_info_mpos := /** @src 1:595:33492  \"contract EntryPoint is...\" */ allocate_and_zero_memory_struct_struct_StakeInfo()\n                mstore(/** @src 5:934:942  \"deposits\" */ 0x00, /** @src 1:595:33492  \"contract EntryPoint is...\" */ and(var_addr, sub(shl(160, 1), 1)))\n                mstore(0x20, /** @src 5:934:942  \"deposits\" */ 0x00)\n                /// @src 1:595:33492  \"contract EntryPoint is...\"\n                let dataSlot := keccak256(/** @src 5:934:942  \"deposits\" */ 0x00, /** @src 1:595:33492  \"contract EntryPoint is...\" */ 0x40)\n                mstore(var_info_mpos, and(shr(120, sload(/** @src 5:971:988  \"depositInfo.stake\" */ dataSlot)), /** @src 1:595:33492  \"contract EntryPoint is...\" */ 0xffffffffffffffffffffffffffff))\n                mstore(/** @src 5:998:1018  \"info.unstakeDelaySec\" */ add(var_info_mpos, /** @src 1:595:33492  \"contract EntryPoint is...\" */ 0x20), and(sload(/** @src 5:1021:1048  \"depositInfo.unstakeDelaySec\" */ add(dataSlot, 1)), /** @src 1:595:33492  \"contract EntryPoint is...\" */ 0xffffffff))\n            }\n            /// @ast-id 2974 @src 5:1242:1307  \"receive() external payable {...\"\n            function fun()\n            {\n                /// @src 5:1289:1299  \"msg.sender\"\n                fun_depositTo(caller())\n            }\n            /// @ast-id 3016 @src 5:1313:1606  \"function _incrementDeposit(address account, uint256 amount) internal {...\"\n            function fun_incrementDeposit(var_account, var_amount)\n            {\n                /// @src 1:595:33492  \"contract EntryPoint is...\"\n                mstore(/** @src 5:1419:1427  \"deposits\" */ 0x00, /** @src 1:595:33492  \"contract EntryPoint is...\" */ and(var_account, sub(shl(160, 1), 1)))\n                mstore(0x20, /** @src 5:1419:1427  \"deposits\" */ 0x00)\n                /// @src 1:595:33492  \"contract EntryPoint is...\"\n                let dataSlot := keccak256(/** @src 5:1419:1427  \"deposits\" */ 0x00, /** @src 1:595:33492  \"contract EntryPoint is...\" */ 0x40)\n                let _1 := 0xffffffffffffffffffffffffffff\n                let cleaned := and(sload(/** @src 5:1466:1478  \"info.deposit\" */ dataSlot), /** @src 1:595:33492  \"contract EntryPoint is...\" */ _1)\n                /// @src 1:1053:1066  \"hex\\\"deaddead\\\"\"\n                let sum := add(cleaned, var_amount)\n                if gt(cleaned, sum) { panic_error_0x11() }\n                /// @src 1:595:33492  \"contract EntryPoint is...\"\n                if /** @src 5:1505:1535  \"newAmount <= type(uint112).max\" */ gt(sum, /** @src 1:595:33492  \"contract EntryPoint is...\" */ _1)\n                {\n                    let memPtr := mload(0x40)\n                    mstore(memPtr, shl(229, 4594637))\n                    mstore(add(memPtr, 4), 0x20)\n                    mstore(add(memPtr, 36), 16)\n                    mstore(add(memPtr, 68), \"deposit overflow\")\n                    revert(memPtr, 100)\n                }\n                /// @src 5:1566:1599  \"info.deposit = uint112(newAmount)\"\n                update_storage_value_offsett_uint112_to_uint112(dataSlot, /** @src 1:595:33492  \"contract EntryPoint is...\" */ and(/** @src 5:1581:1599  \"uint112(newAmount)\" */ sum, /** @src 1:595:33492  \"contract EntryPoint is...\" */ _1))\n            }\n            /// @ast-id 3042 @src 5:1675:1881  \"function depositTo(address account) public payable {...\"\n            function fun_depositTo(var_account)\n            {\n                /// @src 5:1763:1772  \"msg.value\"\n                fun_incrementDeposit(var_account, callvalue())\n                /// @src 1:595:33492  \"contract EntryPoint is...\"\n                let _1 := and(var_account, sub(shl(160, 1), 1))\n                mstore(/** @src 5:1810:1818  \"deposits\" */ 0x00, /** @src 1:595:33492  \"contract EntryPoint is...\" */ _1)\n                mstore(0x20, /** @src 5:1810:1818  \"deposits\" */ 0x00)\n                /// @src 1:595:33492  \"contract EntryPoint is...\"\n                let cleaned := and(sload(keccak256(/** @src 5:1810:1818  \"deposits\" */ 0x00, /** @src 1:595:33492  \"contract EntryPoint is...\" */ 0x40)), 0xffffffffffffffffffffffffffff)\n                /// @src 5:1842:1874  \"Deposited(account, info.deposit)\"\n                let _2 := /** @src 1:595:33492  \"contract EntryPoint is...\" */ mload(0x40)\n                mstore(_2, cleaned)\n                /// @src 5:1842:1874  \"Deposited(account, info.deposit)\"\n                log2(_2, /** @src 1:595:33492  \"contract EntryPoint is...\" */ 0x20, /** @src 5:1842:1874  \"Deposited(account, info.deposit)\" */ 0x2da466a7b24304f47e87fa2e1e5a81b9831ce54fec19055ce277ca2f39ba42c4, _1)\n            }\n            /// @src 1:595:33492  \"contract EntryPoint is...\"\n            function require_helper_stringliteral_b778(condition)\n            {\n                if iszero(condition)\n                {\n                    let memPtr := mload(64)\n                    mstore(memPtr, shl(229, 4594637))\n                    mstore(add(memPtr, 4), 32)\n                    mstore(add(memPtr, 36), 26)\n                    mstore(add(memPtr, 68), \"must specify unstake delay\")\n                    revert(memPtr, 100)\n                }\n            }\n            function require_helper_stringliteral_be41(condition)\n            {\n                if iszero(condition)\n                {\n                    let memPtr := mload(64)\n                    mstore(memPtr, shl(229, 4594637))\n                    mstore(add(memPtr, 4), 32)\n                    mstore(add(memPtr, 36), 28)\n                    mstore(add(memPtr, 68), \"cannot decrease unstake time\")\n                    revert(memPtr, 100)\n                }\n            }\n            function require_helper_stringliteral_163f(condition)\n            {\n                if iszero(condition)\n                {\n                    let memPtr := mload(64)\n                    mstore(memPtr, shl(229, 4594637))\n                    mstore(add(memPtr, 4), 32)\n                    mstore(add(memPtr, 36), 18)\n                    mstore(add(memPtr, 68), \"no stake specified\")\n                    revert(memPtr, 100)\n                }\n            }\n            function require_helper_stringliteral_6a64(condition)\n            {\n                if iszero(condition)\n                {\n                    let memPtr := mload(64)\n                    mstore(memPtr, shl(229, 4594637))\n                    mstore(add(memPtr, 4), 32)\n                    mstore(add(memPtr, 36), 14)\n                    mstore(add(memPtr, 68), \"stake overflow\")\n                    revert(memPtr, 100)\n                }\n            }\n            function update_storage_value_offsett_bool_to_bool(slot)\n            {\n                sstore(slot, and(sload(slot), not(shl(112, 255))))\n            }\n            function update_storage_value_offsett_uint112_to_uint112_19813(slot)\n            {\n                sstore(slot, and(sload(slot), not(shl(120, 0xffffffffffffffffffffffffffff))))\n            }\n            function update_storage_value_offsett_uint32_to_uint32(slot)\n            {\n                sstore(slot, and(sload(slot), not(0xffffffff)))\n            }\n            function update_storage_value_offsett_uint48_to_uint48_19812(slot)\n            {\n                sstore(slot, and(sload(slot), not(0xffffffffffff00000000)))\n            }\n            function update_storage_value_offsett_uint48_to_uint48(slot, value)\n            {\n                let _1 := sload(slot)\n                sstore(slot, or(and(_1, not(0xffffffffffff00000000)), and(shl(32, value), 0xffffffffffff00000000)))\n            }\n            function copy_struct_to_storage_from_struct_DepositInfo_to_struct_DepositInfo(slot, value)\n            {\n                update_storage_value_offsett_uint112_to_uint112(slot, and(mload(value), 0xffffffffffffffffffffffffffff))\n                let _1 := iszero(iszero(mload(add(value, 32))))\n                let _2 := sload(slot)\n                let _3 := and(shl(112, _1), shl(112, 255))\n                sstore(slot, or(and(_2, not(shl(112, 255))), _3))\n                sstore(slot, or(or(and(_2, not(shl(112, 0xffffffffffffffffffffffffffffff))), _3), and(shl(120, mload(add(value, 64))), shl(120, 0xffffffffffffffffffffffffffff))))\n                let memberSlot := add(slot, 1)\n                sstore(memberSlot, or(and(sload(memberSlot), not(0xffffffff)), and(mload(add(value, 96)), 0xffffffff)))\n                update_storage_value_offsett_uint48_to_uint48(memberSlot, and(mload(add(value, 128)), 0xffffffffffff))\n            }\n            function abi_encode_uint256_uint32(headStart, value0, value1) -> tail\n            {\n                tail := add(headStart, 64)\n                mstore(headStart, value0)\n                mstore(add(headStart, 32), and(value1, 0xffffffff))\n            }\n            function require_helper_stringliteral_eaba(condition)\n            {\n                if iszero(condition)\n                {\n                    let memPtr := mload(64)\n                    mstore(memPtr, shl(229, 4594637))\n                    mstore(add(memPtr, 4), 32)\n                    mstore(add(memPtr, 36), 17)\n                    mstore(add(memPtr, 68), \"already unstaking\")\n                    revert(memPtr, 100)\n                }\n            }\n            function checked_add_uint48(x, y) -> sum\n            {\n                let _1 := 0xffffffffffff\n                sum := add(and(x, _1), and(y, _1))\n                if gt(sum, _1) { panic_error_0x11() }\n            }\n            function abi_encode_uint48(headStart, value0) -> tail\n            {\n                tail := add(headStart, 32)\n                mstore(headStart, and(value0, 0xffffffffffff))\n            }\n            function require_helper_stringliteral(condition)\n            {\n                if iszero(condition)\n                {\n                    let memPtr := mload(64)\n                    mstore(memPtr, shl(229, 4594637))\n                    mstore(add(memPtr, 4), 32)\n                    mstore(add(memPtr, 36), 20)\n                    mstore(add(memPtr, 68), \"No stake to withdraw\")\n                    revert(memPtr, 100)\n                }\n            }\n            function require_helper_stringliteral_9973(condition)\n            {\n                if iszero(condition)\n                {\n                    let memPtr := mload(64)\n                    mstore(memPtr, shl(229, 4594637))\n                    mstore(add(memPtr, 4), 32)\n                    mstore(add(memPtr, 36), 29)\n                    mstore(add(memPtr, 68), \"must call unlockStake() first\")\n                    revert(memPtr, 100)\n                }\n            }\n            function require_helper_stringliteral_5cd6(condition)\n            {\n                if iszero(condition)\n                {\n                    let memPtr := mload(64)\n                    mstore(memPtr, shl(229, 4594637))\n                    mstore(add(memPtr, 4), 32)\n                    mstore(add(memPtr, 36), 27)\n                    mstore(add(memPtr, 68), \"Stake withdrawal is not due\")\n                    revert(memPtr, 100)\n                }\n            }\n            function abi_encode_address_payable_uint256(headStart, value0, value1) -> tail\n            {\n                tail := add(headStart, 64)\n                mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n                mstore(add(headStart, 32), value1)\n            }\n            function require_helper_stringliteral_1dfd(condition)\n            {\n                if iszero(condition)\n                {\n                    let memPtr := mload(64)\n                    mstore(memPtr, shl(229, 4594637))\n                    mstore(add(memPtr, 4), 32)\n                    mstore(add(memPtr, 36), 24)\n                    mstore(add(memPtr, 68), \"failed to withdraw stake\")\n                    revert(memPtr, 100)\n                }\n            }\n            function require_helper_stringliteral_a34e(condition)\n            {\n                if iszero(condition)\n                {\n                    let memPtr := mload(64)\n                    mstore(memPtr, shl(229, 4594637))\n                    mstore(add(memPtr, 4), 32)\n                    mstore(add(memPtr, 36), 18)\n                    mstore(add(memPtr, 68), \"failed to withdraw\")\n                    revert(memPtr, 100)\n                }\n            }\n            function abi_encode_address_uint256_bytes32_bytes32_uint256_uint256_uint256_uint256_uint256_bytes32(headStart, value0, value1, value2, value3, value4, value5, value6, value7, value8, value9) -> tail\n            {\n                tail := add(headStart, 320)\n                mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n                mstore(add(headStart, 32), value1)\n                mstore(add(headStart, 64), value2)\n                mstore(add(headStart, 96), value3)\n                mstore(add(headStart, 128), value4)\n                mstore(add(headStart, 160), value5)\n                mstore(add(headStart, 192), value6)\n                mstore(add(headStart, 224), value7)\n                mstore(add(headStart, 256), value8)\n                mstore(add(headStart, 288), value9)\n            }\n            /// @ast-id 2755 @src 2:3324:3561  \"function calldataKeccak(bytes calldata data) pure returns (bytes32 ret) {...\"\n            function fun_calldataKeccak(var_data_offset, var_data_length) -> var_ret\n            {\n                /// @src 2:3402:3559  \"assembly {...\"\n                let usr$mem := mload(0x40)\n                calldatacopy(usr$mem, var_data_offset, var_data_length)\n                var_ret := keccak256(usr$mem, var_data_length)\n            }\n            /// @ast-id 4040 @src 14:221:482  \"function call(...\"\n            function fun_call(var_to, var_data_mpos, var_txGas) -> var_success\n            {\n                /// @src 14:376:476  \"assembly {...\"\n                var_success := call(var_txGas, var_to, /** @src 1:10469:10483  \"opInfo.mUserOp\" */ 0, /** @src 14:376:476  \"assembly {...\" */ add(var_data_mpos, 32), mload(var_data_mpos), /** @src 1:10469:10483  \"opInfo.mUserOp\" */ 0, 0)\n            }\n            /// @ast-id 4075 @src 14:1051:1501  \"function getReturnData(...\"\n            function fun_getReturnData() -> var_returnData_mpos\n            {\n                /// @src 14:1162:1495  \"assembly {...\"\n                let usr$len := returndatasize()\n                /// @src 1:1122:1126  \"2048\"\n                let _1 := 0x0800\n                /// @src 14:1162:1495  \"assembly {...\"\n                if gt(usr$len, /** @src 1:1122:1126  \"2048\" */ _1)\n                /// @src 14:1162:1495  \"assembly {...\"\n                {\n                    usr$len := /** @src 1:1122:1126  \"2048\" */ _1\n                }\n                /// @src 14:1162:1495  \"assembly {...\"\n                let usr$ptr := mload(0x40)\n                mstore(0x40, add(add(usr$ptr, usr$len), 0x20))\n                mstore(usr$ptr, usr$len)\n                returndatacopy(add(usr$ptr, 0x20), 0, usr$len)\n                var_returnData_mpos := usr$ptr\n            }\n        }\n        data \".metadata\" hex\"a2646970667358221220b38607eff334175ebbcafe56d3a2350e484f6c9a4d45d4f84b01abe59c57777764736f6c63430008110033\"\n    }\n    /// @use-src 4:\"contracts/smart-contract-wallet/aa-4337/core/SenderCreator.sol\"\n    object \"SenderCreator_2895\" {\n        code {\n            {\n                /// @src 4:204:1182  \"contract SenderCreator {...\"\n                let _1 := memoryguard(0x80)\n                mstore(64, _1)\n                if callvalue() { revert(0, 0) }\n                let _2 := datasize(\"SenderCreator_2895_deployed\")\n                codecopy(_1, dataoffset(\"SenderCreator_2895_deployed\"), _2)\n                return(_1, _2)\n            }\n        }\n        /// @use-src 4:\"contracts/smart-contract-wallet/aa-4337/core/SenderCreator.sol\"\n        object \"SenderCreator_2895_deployed\" {\n            code {\n                {\n                    /// @src 4:204:1182  \"contract SenderCreator {...\"\n                    mstore(64, 128)\n                    if iszero(lt(calldatasize(), 4))\n                    {\n                        let _1 := 0\n                        if eq(0x570e1a36, shr(224, calldataload(_1)))\n                        {\n                            if callvalue() { revert(_1, _1) }\n                            if slt(add(calldatasize(), not(3)), 32) { revert(_1, _1) }\n                            let offset := calldataload(4)\n                            let _2 := 0xffffffffffffffff\n                            if gt(offset, _2) { revert(_1, _1) }\n                            if iszero(slt(add(offset, 35), calldatasize())) { revert(_1, _1) }\n                            let length := calldataload(add(4, offset))\n                            if gt(length, _2) { revert(_1, _1) }\n                            if gt(add(add(offset, length), 36), calldatasize()) { revert(_1, _1) }\n                            let ret := fun_createSender(add(offset, 36), length)\n                            let memPos := mload(64)\n                            return(memPos, sub(abi_encode_address(memPos, ret), memPos))\n                        }\n                    }\n                    revert(0, 0)\n                }\n                function abi_encode_address(headStart, value0) -> tail\n                {\n                    tail := add(headStart, 32)\n                    mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n                }\n                function panic_error_0x41()\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0x41)\n                    revert(0, 0x24)\n                }\n                /// @ast-id 2894 @src 4:543:1180  \"function createSender(...\"\n                function fun_createSender(var_initCode_offset, var_initCode_length) -> var_sender\n                {\n                    /// @src 4:204:1182  \"contract SenderCreator {...\"\n                    if gt(/** @src 4:693:695  \"20\" */ 0x14, /** @src 4:204:1182  \"contract SenderCreator {...\" */ var_initCode_length)\n                    {\n                        revert(/** @src 4:691:692  \"0\" */ 0x00, 0x00)\n                    }\n                    /// @src 4:204:1182  \"contract SenderCreator {...\"\n                    let lengthOut := add(var_initCode_length, not(19))\n                    let _1 := 0xffffffffffffffff\n                    if gt(lengthOut, _1) { panic_error_0x41() }\n                    let _2 := not(31)\n                    let memPtr := mload(64)\n                    let newFreePtr := add(memPtr, and(add(and(add(var_initCode_length, 11), _2), 63), _2))\n                    if or(gt(newFreePtr, _1), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n                    mstore(64, newFreePtr)\n                    mstore(memPtr, lengthOut)\n                    let dst := add(memPtr, 0x20)\n                    if gt(add(var_initCode_offset, var_initCode_length), calldatasize())\n                    {\n                        revert(/** @src -1:-1:-1 */ 0, 0)\n                    }\n                    /// @src 4:204:1182  \"contract SenderCreator {...\"\n                    calldatacopy(dst, add(var_initCode_offset, /** @src 4:693:695  \"20\" */ 0x14), /** @src 4:204:1182  \"contract SenderCreator {...\" */ lengthOut)\n                    mstore(add(add(memPtr, var_initCode_length), 12), /** @src -1:-1:-1 */ 0)\n                    /// @src 4:830:1107  \"assembly {...\"\n                    let var_success := call(gas(), /** @src 4:204:1182  \"contract SenderCreator {...\" */ shr(96, calldataload(var_initCode_offset)), /** @src -1:-1:-1 */ 0, /** @src 4:830:1107  \"assembly {...\" */ dst, mload(memPtr), /** @src -1:-1:-1 */ 0, /** @src 4:204:1182  \"contract SenderCreator {...\" */ 0x20)\n                    /// @src 4:830:1107  \"assembly {...\"\n                    var_sender := mload(/** @src -1:-1:-1 */ 0)\n                    /// @src 4:1116:1174  \"if (!success) {...\"\n                    if /** @src 4:1120:1128  \"!success\" */ iszero(var_success)\n                    /// @src 4:1116:1174  \"if (!success) {...\"\n                    {\n                        /// @src 4:1144:1163  \"sender = address(0)\"\n                        var_sender := /** @src -1:-1:-1 */ 0\n                    }\n                }\n            }\n            data \".metadata\" hex\"a26469706673582212201c30525d6c3ddf20399155f6de9964b8f51a1c2a76c27b7bf9a92eb6f24a980064736f6c63430008110033\"\n        }\n    }\n}\n","hash":"010010057d2c96e048d0c5e9667fd0be67879d0cd9f95247104a51de7088bd55","factoryDependencies":{"01000045c8abc672c56ccdc078a02a0efc63967dc1be5ba6bdab35aabad53dff":"contracts/smart-contract-wallet/aa-4337/core/SenderCreator.sol:SenderCreator"}}},"contracts/smart-contract-wallet/aa-4337/core/NonceManager.sol":{"NonceManager":{"abi":[{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint192","name":"key","type":"uint192"}],"name":"getNonce","outputs":[{"internalType":"uint256","name":"nonce","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint192","name":"key","type":"uint192"}],"name":"incrementNonce","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"},{"internalType":"uint192","name":"","type":"uint192"}],"name":"nonceSequenceNumber","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"}],"metadata":{"optimizer_settings":"M3B3","solc_metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint192\",\"name\":\"key\",\"type\":\"uint192\"}],\"name\":\"getNonce\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint192\",\"name\":\"key\",\"type\":\"uint192\"}],\"name\":\"incrementNonce\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint192\",\"name\":\"\",\"type\":\"uint192\"}],\"name\":\"nonceSequenceNumber\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"getNonce(address,uint192)\":{\"params\":{\"key\":\"the high 192 bit of the nonce\",\"sender\":\"the account address\"},\"returns\":{\"nonce\":\"a full nonce to pass for next UserOp with this sender.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"getNonce(address,uint192)\":{\"notice\":\"Return the next nonce for this sender. Within a given key, the nonce values are sequenced (starting with zero, and incremented by one on each userop) But UserOp with different keys can come with arbitrary order.\"},\"incrementNonce(uint192)\":{\"notice\":\"Manually increment the nonce of the sender. This method is exposed just for completeness.. Account does NOT need to call it, neither during validation, nor elsewhere, as the EntryPoint will update the nonce regardless. Possible use-case is call it with various keys to \\\"initialize\\\" their nonces to one, so that future UserOperations will not pay extra for the first transaction with a given key.\"},\"nonceSequenceNumber(address,uint192)\":{\"notice\":\"The next valid sequence number for a given nonce key.\"}},\"notice\":\"nonce management functionality\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/smart-contract-wallet/aa-4337/core/NonceManager.sol\":\"NonceManager\"},\"evmVersion\":\"london\",\"libraries\":{\":__CACHE_BREAKER__\":\"0x00000000d41867734bbee4c6863d9255b2b06ac1\"},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"contracts/smart-contract-wallet/aa-4337/core/Helpers.sol\":{\"keccak256\":\"0x9a220fa7fd433cf4309c5be508907147ad2b0cda5c10867a13da43b0f703cff9\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://062d3a7fe9dcda4ec72e066895c66e189549eae5c9bc886b1d897d1811523219\",\"dweb:/ipfs/Qma6UjdwG5hrMEuKguiT5ccJDjDkju9kVcWBvkHr49JJ6A\"]},\"contracts/smart-contract-wallet/aa-4337/core/NonceManager.sol\":{\"keccak256\":\"0xb61b89724c3d8e361910e745e69f2e83512d9c3e6691a7e550df1cc926ad96e7\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://83afddfa7d12f7ea862ad3951ae70ece7cc4cb222e3971ec4a118db6b7a5ca60\",\"dweb:/ipfs/QmVtFd18gS5LHDPE4BVEVvj2vq7WwNcZEKGw7FCT3sTM2b\"]},\"contracts/smart-contract-wallet/aa-4337/interfaces/IAggregator.sol\":{\"keccak256\":\"0x33265d5eece854fb1ced8d8c418a92367af4c448d6c097edce2dd8d7f78dc504\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://2da963cb3b7ca8186304003c85b95ba373e9168b128adaaf56e7312246586d59\",\"dweb:/ipfs/Qmeo7BBU3XbiEvhoYx5GWxvqc2xgQwyzHT2vNzco9evAD4\"]},\"contracts/smart-contract-wallet/aa-4337/interfaces/IEntryPoint.sol\":{\"keccak256\":\"0xb860cc0782782fec8ba99512c54f18533fec390e799eb5a0178ba3a2cb3c5d4c\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://0b72111c3e4ed7841bdbc2e11eca4387ed4d19de1fe07ff3b00311c4408063db\",\"dweb:/ipfs/QmcNxDZJmfQwL3tKDsinmXJjkBYJFJY6iBG8NnRQG4hH9m\"]},\"contracts/smart-contract-wallet/aa-4337/interfaces/INonceManager.sol\":{\"keccak256\":\"0x85ad9259108e3af788854d30d93ded1e41991e308d01528a017323d4f6b44320\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://5c4a51982f8e35573c800abab27438451beb076ef083ed4009a1c90dbdd9f7cb\",\"dweb:/ipfs/QmdEDxKEBeos4cxrxJ53rfhFgcncHNMqtyQ2GXzKv3ruFv\"]},\"contracts/smart-contract-wallet/aa-4337/interfaces/IStakeManager.sol\":{\"keccak256\":\"0x2837b8aefb7c69b959a2a9435fba865a9275edd5d3f50465fb06e28322a18b8f\",\"license\":\"GPL-3.0-only\",\"urls\":[\"bzz-raw://a1fe1c192e959f4962be11483e2eb872a7d6f5f87d220dff0dde2dbcd6c48553\",\"dweb:/ipfs/QmenW3vP5wnAVVg8rGfwFQV85AJm5j1j7qLCuo89AzzLDB\"]},\"contracts/smart-contract-wallet/aa-4337/interfaces/UserOperation.sol\":{\"keccak256\":\"0x274a05da373e68f76955cc92b9ee554cc24fe82d0c8f5bd5bef271202cf3a09e\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://d4f5e7fe7416e05c65c4c6da3a8acba0f5cc2bb39a2446146c41d5ec75d1bbd6\",\"dweb:/ipfs/QmVXq9Wv9eYziTAN2fqdar1eAGoYEa9Qtz5NmWei88CaAV\"]}},\"version\":1}","zk_version":"1.3.10"},"devdoc":{"kind":"dev","methods":{"getNonce(address,uint192)":{"params":{"key":"the high 192 bit of the nonce","sender":"the account address"},"returns":{"nonce":"a full nonce to pass for next UserOp with this sender."}}},"version":1},"userdoc":{"kind":"user","methods":{"getNonce(address,uint192)":{"notice":"Return the next nonce for this sender. Within a given key, the nonce values are sequenced (starting with zero, and incremented by one on each userop) But UserOp with different keys can come with arbitrary order."},"incrementNonce(uint192)":{"notice":"Manually increment the nonce of the sender. This method is exposed just for completeness.. Account does NOT need to call it, neither during validation, nor elsewhere, as the EntryPoint will update the nonce regardless. Possible use-case is call it with various keys to \"initialize\" their nonces to one, so that future UserOperations will not pay extra for the first transaction with a given key."},"nonceSequenceNumber(address,uint192)":{"notice":"The next valid sequence number for a given nonce key."}},"notice":"nonce management functionality","version":1},"storageLayout":{"storage":[{"astId":2771,"contract":"contracts/smart-contract-wallet/aa-4337/core/NonceManager.sol:NonceManager","label":"nonceSequenceNumber","offset":0,"slot":"0","type":"t_mapping(t_address,t_mapping(t_uint192,t_uint256))"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_mapping(t_address,t_mapping(t_uint192,t_uint256))":{"encoding":"mapping","key":"t_address","label":"mapping(address => mapping(uint192 => uint256))","numberOfBytes":"32","value":"t_mapping(t_uint192,t_uint256)"},"t_mapping(t_uint192,t_uint256)":{"encoding":"mapping","key":"t_uint192","label":"mapping(uint192 => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_uint192":{"encoding":"inplace","label":"uint192","numberOfBytes":"24"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}},"evm":{"legacyAssembly":null,"assembly":"\t.text\n\t.file\t\"NonceManager.sol:NonceManager\"\n\t.globl\t__entry\n__entry:\n.func_begin0:\n\tnop\tstack+=[1]\n\tptr.add\tr1, r0, stack[@ptr_calldata]\n\tshr.s\t96, r1, r1\n\tand\t@CPI0_0[0], r1, stack[@calldatasize]\n\tadd\t128, r0, r1\n\tst.1\t64, r1\n\tand!\t1, r2, r1\n\tjump.ne\t@.BB0_1\n\tadd\tstack[@calldatasize], r0, r1\n\tsub.s!\t4, r1, r1\n\tjump.lt\t@.BB0_2\n\tptr.add\tstack[@ptr_calldata], r0, r1\n\tld\tr1, r1\n\tshr.s\t224, r1, r1\n\tsub.s!\t@CPI0_2[0], r1, r2\n\tjump.eq\t@.BB0_18\n\tsub.s!\t@CPI0_3[0], r1, r2\n\tjump.eq\t@.BB0_16\n\tsub.s!\t@CPI0_4[0], r1, r1\n\tjump.ne\t@.BB0_2\n\tcontext.get_context_u128\tr1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r0, r1\n\tadd\tstack[@calldatasize], r1, r1\n\tadd\t@CPI0_8[0], r0, r2\n\tsub.s!\t32, r1, r3\n\tadd\t0, r0, r3\n\tadd.lt\tr2, r0, r3\n\tand\t@CPI0_8[0], r1, r1\n\tsub.s!\t0, r1, r4\n\tadd.le\t0, r0, r2\n\tsub.s!\t@CPI0_8[0], r1, r1\n\tadd\tr3, r0, r1\n\tadd.eq\tr2, r0, r1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_2\n\tadd\t4, r0, r1\n\tptr.add\tstack[@ptr_calldata], r1, r1\n\tld\tr1, r1\n\tand\t@CPI0_6[0], r1, r2\n\tsub.s!\t@CPI0_6[0], r1, r1\n\tjump.gt\t@.BB0_2\n\tcontext.caller\tr1\n\tst.1\t0, r1\n\tst.1\t32, r0\n\tadd\t@CPI0_0[0], r0, r1\n\tadd\tr2, r0, stack-[1]\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_9[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tadd\tstack-[1], r0, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_9[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tsload\tr1, r2\n\tsub.s\t1, r0, r3\n\tsub!\tr2, r3, r3\n\tjump.ne\t@.BB0_15\n\tadd\t@CPI0_10[0], r0, r1\n\tst.1\t0, r1\n\tadd\t17, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI0_11[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_1:\n\tcontext.get_context_u128\tr1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_2\n\tadd\t32, r0, r1\n\tst.2\t256, r1\n\tst.2\t288, r0\n\tadd\t@CPI0_1[0], r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_18:\n\tcontext.get_context_u128\tr1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_2\n\tadd\tstack[@calldatasize], r0, r1\n\tnear_call\tr0, @abi_decode_addresst_uint192, @DEFAULT_UNWIND\n\tadd\tr2, r0, stack-[1]\n\tand\t@CPI0_5[0], r1, r1\n\tst.1\t0, r1\n\tst.1\t32, r0\n\tadd\tr0, r0, r1\n\tnear_call\tr0, @__keccak256, @DEFAULT_UNWIND\n\tadd\tstack-[1], r0, r2\n\tand\t@CPI0_6[0], r2, r2\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tadd\tr0, r0, r1\n\tnear_call\tr0, @__keccak256, @DEFAULT_UNWIND\n\tadd\tstack-[1], r0, r2\n\tshl.s\t64, r2, r2\n\tsload\tr1, r1\n\tor\tr1, r2, r1\n\tld.1\t64, r2\n\tst.1\tr2, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI0_7[0], r1, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_16:\n\tcontext.get_context_u128\tr1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_2\n\tadd\tstack[@calldatasize], r0, r1\n\tnear_call\tr0, @abi_decode_addresst_uint192, @DEFAULT_UNWIND\n\tadd\tr2, r0, stack-[1]\n\tand\t@CPI0_5[0], r1, r1\n\tst.1\t0, r1\n\tst.1\t32, r0\n\tadd\tr0, r0, r1\n\tnear_call\tr0, @__keccak256, @DEFAULT_UNWIND\n\tadd\tstack-[1], r0, r2\n\tand\t@CPI0_6[0], r2, r2\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tadd\tr0, r0, r1\n\tnear_call\tr0, @__keccak256, @DEFAULT_UNWIND\n\tsload\tr1, r1\n\tld.1\t64, r2\n\tst.1\tr2, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI0_7[0], r1, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_2:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_15:\n\tadd\t1, r2, r2\n\tsstore\tr1, r2\n\tadd\tr0, r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.func_end0:\n\n__keccak256:\n.func_begin1:\n\tadd\t@CPI1_0[0], r0, r2\n\tcontext.gas_left\tr3\n\tsub.s!\t@CPI1_0[0], r3, r4\n\tadd.ge\tr2, r0, r3\n\tsub.s!\t@CPI1_0[0], r1, r4\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r3, r2\n\tor\tr2, r1, r1\n\tor\t@CPI1_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB1_2\n\tld\tr1, r1\n\tret\n.BB1_2:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end1:\n\nabi_decode_addresst_uint192:\n.func_begin2:\n\tsub.s\t4, r1, r1\n\tadd\t@CPI2_0[0], r0, r2\n\tsub.s!\t63, r1, r3\n\tadd\t0, r0, r3\n\tadd.gt\tr2, r0, r3\n\tand\t@CPI2_0[0], r1, r1\n\tsub.s!\t0, r1, r4\n\tadd.ge\t0, r0, r2\n\tsub.s!\t@CPI2_0[0], r1, r1\n\tadd\tr3, r0, r1\n\tadd.eq\tr2, r0, r1\n\tsub.s!\t0, r1, r1\n\tjump.eq\t@.BB2_1\n\tptr.add\tstack[@ptr_calldata], r0, r2\n\tptr.add.s\t4, r2, r1\n\tld\tr1, r1\n\tsub.s!\t@CPI2_1[0], r1, r3\n\tjump.gt\t@.BB2_1\n\tptr.add.s\t36, r2, r2\n\tld\tr2, r2\n\tsub.s!\t@CPI2_2[0], r2, r3\n\tjump.gt\t@.BB2_1\n\tret\n.BB2_1:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end2:\n\n__staticcall:\n.func_begin3:\n.tmp0:\n\tfar_call.static\tr1, r2, @.BB3_2\n.tmp1:\n\tadd\t1, r0, r2\n\tret\n.BB3_2:\n.tmp2:\n\tadd\tr0, r0, r2\n\tret\n.func_end3:\n\n\t.data\n\t.p2align\t5\ncalldatasize:\n\t.cell 0\n\n\t.p2align\t5\nptr_calldata:\n.cell\t0\n\n\t.note.GNU-stack\n\t.rodata\nCPI0_0:\nCPI1_0:\n\t.cell 4294967295\nCPI0_1:\n\t.cell 53919893334301279589334030174039261352344891250716429051063678533632\nCPI0_2:\n\t.cell 894860826\nCPI0_3:\n\t.cell 455999928\nCPI0_4:\n\t.cell 198348347\nCPI0_5:\nCPI2_1:\n\t.cell 1461501637330902918203684832716283019655932542975\nCPI0_6:\nCPI2_2:\n\t.cell 6277101735386680763835789423207666416102355444464034512895\nCPI0_7:\n\t.cell 2535301200456458802993406410752\nCPI0_8:\nCPI2_0:\n\t.cell -57896044618658097711785492504343953926634992332820282019728792003956564819968\nCPI0_9:\nCPI1_1:\n\t.cell 904625697166532776746648320380374280103671760270919307471179981048634146816\nCPI0_10:\n\t.cell 35408467139433450592217433187231851964531694900788300625387963629091585785856\nCPI0_11:\n\t.cell 2852213850513516153367582212096\n","bytecode":{"object":"0002000000000002000100000000000200010000000103550000006001100270000000330010019d0000008001000039000000400010043f0000000101200190000000530000c13d0000000001000031000000040110008c000000920000413d0000000101000367000000000101043b000000e001100270000000350210009c0000005b0000613d000000360210009c000000780000613d000000370110009c000000920000c13d0000000001000416000000000110004c000000920000c13d000000040100008a00000000011000310000003b02000041000000200310008c000000000300001900000000030240190000003b01100197000000000410004c000000000200a0190000003b0110009c00000000010300190000000001026019000000000110004c000000920000c13d00000004010000390000000101100367000000000101043b0000003902100197000000390110009c000000920000213d00000000010004110000000000100435000000200000043f0000003301000041000100000002001d0000000002000414000000330320009c0000000001024019000000c0011002100000003c011001c7000080100200003900c800c30000040f00000001022001900000000102000029000000920000613d000000000101043b0000000000200435000000200010043f00000033010000410000000002000414000000330320009c0000000001024019000000c0011002100000003c011001c7000080100200003900c800c30000040f0000000102200190000000920000613d000000000101043b000000000201041a000000010300008a000000000332004b000000940000c13d0000003d0100004100000000001004350000001101000039000000040010043f0000003e01000041000000ca000104300000000001000416000000000110004c000000920000c13d0000002001000039000001000010044300000120000004430000003401000041000000c90001042e0000000001000416000000000110004c000000920000c13d000000000100003100c800aa0000040f000100000002001d00000038011001970000000000100435000000200000043f000000000100001900c800980000040f000000010200002900000039022001970000000000200435000000200010043f000000000100001900c800980000040f00000001020000290000004002200210000000000101041a000000000121019f000000400200043d00000000001204350000003301000041000000330320009c000000000102401900000040011002100000003a011001c7000000c90001042e0000000001000416000000000110004c000000920000c13d000000000100003100c800aa0000040f000100000002001d00000038011001970000000000100435000000200000043f000000000100001900c800980000040f000000010200002900000039022001970000000000200435000000200010043f000000000100001900c800980000040f000000000101041a000000400200043d00000000001204350000003301000041000000330320009c000000000102401900000040011002100000003a011001c7000000c90001042e0000000001000019000000ca000104300000000102200039000000000021041b0000000001000019000000c90001042e00000033020000410000000003000414000000330430009c0000000003028019000000330410009c00000000010280190000004001100210000000c002300210000000000112019f0000003c011001c7000080100200003900c800c30000040f0000000102200190000000a80000613d000000000101043b000000000001042d0000000001000019000000ca00010430000000040110008a0000003b020000410000003f0310008c000000000300001900000000030220190000003b01100197000000000410004c00000000020080190000003b0110009c00000000010300190000000001026019000000000110004c000000c10000613d00000001020003670000000401200370000000000101043b000000380310009c000000c10000213d0000002402200370000000000202043b000000390320009c000000c10000213d000000000001042d0000000001000019000000ca00010430000000c6002104230000000102000039000000000001042d0000000002000019000000000001042d000000c800000432000000c90001042e000000ca00010430000000000000000000000000000000000000000000000000000000000000000000000000ffffffff00000002000000000000000000000000000000400000010000000000000000000000000000000000000000000000000000000000000000000000000035567e1a000000000000000000000000000000000000000000000000000000001b2e01b8000000000000000000000000000000000000000000000000000000000bd28e3b000000000000000000000000ffffffffffffffffffffffffffffffffffffffff0000000000000000ffffffffffffffffffffffffffffffffffffffffffffffff0000000000000000000000000000000000000020000000000000000000000000800000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000400000000000000000000000004e487b710000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000240000000000000000000000000000000000000000000000000000000000000000000000000000000000000000ddec08d4174ae630045bd38691d9348aa20949c584cc7408bec4510fe8abd870"},"methodIdentifiers":{"getNonce(address,uint192)":"35567e1a","incrementNonce(uint192)":"0bd28e3b","nonceSequenceNumber(address,uint192)":"1b2e01b8"}},"irOptimized":"/// @use-src 3:\"contracts/smart-contract-wallet/aa-4337/core/NonceManager.sol\", 9:\"contracts/smart-contract-wallet/aa-4337/interfaces/INonceManager.sol\"\nobject \"NonceManager_2848\" {\n    code {\n        {\n            /// @src 3:226:1363  \"contract NonceManager is INonceManager {...\"\n            let _1 := memoryguard(0x80)\n            mstore(64, _1)\n            if callvalue() { revert(0, 0) }\n            let _2 := datasize(\"NonceManager_2848_deployed\")\n            codecopy(_1, dataoffset(\"NonceManager_2848_deployed\"), _2)\n            return(_1, _2)\n        }\n    }\n    /// @use-src 3:\"contracts/smart-contract-wallet/aa-4337/core/NonceManager.sol\"\n    object \"NonceManager_2848_deployed\" {\n        code {\n            {\n                /// @src 3:226:1363  \"contract NonceManager is INonceManager {...\"\n                let _1 := 64\n                mstore(_1, memoryguard(0x80))\n                if iszero(lt(calldatasize(), 4))\n                {\n                    let _2 := 0\n                    switch shr(224, calldataload(_2))\n                    case 0x0bd28e3b {\n                        if callvalue() { revert(_2, _2) }\n                        if slt(add(calldatasize(), not(3)), 32) { revert(_2, _2) }\n                        let value := calldataload(4)\n                        let _3 := and(value, sub(shl(192, 1), 1))\n                        if iszero(eq(value, _3)) { revert(_2, _2) }\n                        mstore(_2, /** @src 3:966:976  \"msg.sender\" */ caller())\n                        /// @src 3:226:1363  \"contract NonceManager is INonceManager {...\"\n                        mstore(32, _2)\n                        let _4 := keccak256(_2, _1)\n                        mstore(_2, _3)\n                        mstore(32, _4)\n                        let dataSlot := keccak256(_2, _1)\n                        let _5 := sload(/** @src 3:946:984  \"nonceSequenceNumber[msg.sender][key]++\" */ dataSlot)\n                        /// @src 3:226:1363  \"contract NonceManager is INonceManager {...\"\n                        if eq(_5, not(0))\n                        {\n                            mstore(_2, shl(224, 0x4e487b71))\n                            mstore(4, 0x11)\n                            revert(_2, 0x24)\n                        }\n                        sstore(dataSlot, add(_5, 1))\n                        return(_2, _2)\n                    }\n                    case 0x1b2e01b8 {\n                        if callvalue() { revert(_2, _2) }\n                        let param, param_1 := abi_decode_addresst_uint192(calldatasize())\n                        mstore(_2, and(param, sub(shl(160, 1), 1)))\n                        mstore(0x20, _2)\n                        let _6 := keccak256(_2, _1)\n                        mstore(_2, and(param_1, sub(shl(192, 1), 1)))\n                        mstore(0x20, _6)\n                        let _7 := sload(keccak256(_2, _1))\n                        let memPos := mload(_1)\n                        mstore(memPos, _7)\n                        return(memPos, 0x20)\n                    }\n                    case 0x35567e1a {\n                        if callvalue() { revert(_2, _2) }\n                        let param_2, param_3 := abi_decode_addresst_uint192(calldatasize())\n                        mstore(_2, and(param_2, sub(shl(160, 1), 1)))\n                        mstore(0x20, _2)\n                        let _8 := keccak256(_2, _1)\n                        mstore(_2, and(param_3, sub(shl(192, 1), 1)))\n                        mstore(0x20, _8)\n                        let _9 := sload(keccak256(_2, _1))\n                        let memPos_1 := mload(_1)\n                        mstore(memPos_1, /** @src 3:560:615  \"nonceSequenceNumber[sender][key] | (uint256(key) << 64)\" */ or(_9, /** @src 3:226:1363  \"contract NonceManager is INonceManager {...\" */ and(shl(_1, /** @src 3:596:608  \"uint256(key)\" */ param_3), /** @src 3:226:1363  \"contract NonceManager is INonceManager {...\" */ not(0xffffffffffffffff))))\n                        return(memPos_1, 0x20)\n                    }\n                }\n                revert(0, 0)\n            }\n            function abi_decode_addresst_uint192(dataEnd) -> value0, value1\n            {\n                if slt(add(dataEnd, not(3)), 64) { revert(0, 0) }\n                let value := calldataload(4)\n                if iszero(eq(value, and(value, sub(shl(160, 1), 1))))\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 3:226:1363  \"contract NonceManager is INonceManager {...\"\n                value0 := value\n                let value_1 := calldataload(36)\n                if iszero(eq(value_1, and(value_1, sub(shl(192, 1), 1))))\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 3:226:1363  \"contract NonceManager is INonceManager {...\"\n                value1 := value_1\n            }\n        }\n        data \".metadata\" hex\"a2646970667358221220e9d0d5eec454c083e96c4059fed426794c21ad3a1e565f01a42918fda9b120bb64736f6c63430008110033\"\n    }\n}\n","hash":"010000416a01e7674ff4e62c936354d358d5ecb6101454513e30ae46231a08f9","factoryDependencies":{}}},"contracts/smart-contract-wallet/aa-4337/core/SenderCreator.sol":{"SenderCreator":{"abi":[{"inputs":[{"internalType":"bytes","name":"initCode","type":"bytes"}],"name":"createSender","outputs":[{"internalType":"address","name":"sender","type":"address"}],"stateMutability":"nonpayable","type":"function"}],"metadata":{"optimizer_settings":"M3B3","solc_metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"initCode\",\"type\":\"bytes\"}],\"name\":\"createSender\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"createSender(bytes)\":{\"params\":{\"initCode\":\"the initCode value from a UserOp. contains 20 bytes of factory address, followed by calldata\"},\"returns\":{\"sender\":\"the returned address of the created account, or zero address on failure.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"createSender(bytes)\":{\"notice\":\"call the \\\"initCode\\\" factory to create and return the sender account address\"}},\"notice\":\"helper contract for EntryPoint, to call userOp.initCode from a \\\"neutral\\\" address, which is explicitly not the entryPoint itself.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/smart-contract-wallet/aa-4337/core/SenderCreator.sol\":\"SenderCreator\"},\"evmVersion\":\"london\",\"libraries\":{\":__CACHE_BREAKER__\":\"0x00000000d41867734bbee4c6863d9255b2b06ac1\"},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"contracts/smart-contract-wallet/aa-4337/core/SenderCreator.sol\":{\"keccak256\":\"0xebe195e44b31f1e12ab82a1b5007d03780c0a5af2f4dccad6053909e70e17c98\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://1df2e3a394b811e8a84ac0de7197535d2d7b8c6b755e441565543e153390b489\",\"dweb:/ipfs/Qmb9WBntoeqMZeBGr6twCfwx2nDvriBn52qLBJue2n6ucd\"]}},\"version\":1}","zk_version":"1.3.10"},"devdoc":{"kind":"dev","methods":{"createSender(bytes)":{"params":{"initCode":"the initCode value from a UserOp. contains 20 bytes of factory address, followed by calldata"},"returns":{"sender":"the returned address of the created account, or zero address on failure."}}},"version":1},"userdoc":{"kind":"user","methods":{"createSender(bytes)":{"notice":"call the \"initCode\" factory to create and return the sender account address"}},"notice":"helper contract for EntryPoint, to call userOp.initCode from a \"neutral\" address, which is explicitly not the entryPoint itself.","version":1},"storageLayout":{"storage":[],"types":null},"evm":{"legacyAssembly":null,"assembly":"\t.text\n\t.file\t\"SenderCreator.sol:SenderCreator\"\n\t.globl\t__entry\n__entry:\n.func_begin0:\n\tptr.add\tr1, r0, stack[@ptr_calldata]\n\tshr.s\t96, r1, r1\n\tand\t@CPI0_0[0], r1, stack[@calldatasize]\n\tadd\t128, r0, r1\n\tst.1\t64, r1\n\tand!\t1, r2, r1\n\tjump.ne\t@.BB0_1\n\tadd\tstack[@calldatasize], r0, r1\n\tsub.s!\t4, r1, r1\n\tjump.lt\t@.BB0_2\n\tptr.add\tstack[@ptr_calldata], r0, r1\n\tld\tr1, r1\n\tand\t@CPI0_2[0], r1, r1\n\tsub.s!\t@CPI0_3[0], r1, r1\n\tjump.ne\t@.BB0_2\n\tcontext.get_context_u128\tr1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_2\n\tadd\tstack[@calldatasize], r0, r3\n\tsub.s\t4, r3, r1\n\tadd\t@CPI0_4[0], r0, r2\n\tsub.s!\t32, r1, r4\n\tadd\t0, r0, r4\n\tadd.lt\tr2, r0, r4\n\tand\t@CPI0_4[0], r1, r1\n\tsub.s!\t0, r1, r5\n\tadd.le\t0, r0, r2\n\tsub.s!\t@CPI0_4[0], r1, r1\n\tadd\tr4, r0, r1\n\tadd.eq\tr2, r0, r1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_2\n\tptr.add\tstack[@ptr_calldata], r0, r2\n\tptr.add.s\t4, r2, r1\n\tld\tr1, r1\n\tsub.s!\t@CPI0_5[0], r1, r4\n\tjump.gt\t@.BB0_2\n\tadd\t35, r1, r4\n\tadd\t@CPI0_4[0], r0, r5\n\tsub!\tr4, r3, r6\n\tadd\t0, r0, r6\n\tadd.ge\tr5, r0, r6\n\tand\t@CPI0_4[0], r3, r7\n\tand\t@CPI0_4[0], r4, r4\n\tsub!\tr4, r7, r8\n\tadd.ge\t0, r0, r5\n\txor\tr4, r7, r4\n\tsub.s!\t@CPI0_4[0], r4, r4\n\tadd\tr6, r0, r4\n\tadd.eq\tr5, r0, r4\n\tsub.s!\t0, r4, r4\n\tjump.ne\t@.BB0_2\n\tadd\t4, r1, r4\n\tptr.add\tr2, r4, r2\n\tld\tr2, r2\n\tsub.s!\t@CPI0_5[0], r2, r4\n\tjump.gt\t@.BB0_2\n\tadd\t36, r1, r1\n\tadd\tr2, r1, r4\n\tsub!\tr4, r3, r3\n\tjump.gt\t@.BB0_2\n\tnear_call\tr0, @fun_createSender, @DEFAULT_UNWIND\n\tand\t@CPI0_6[0], r1, r1\n\tld.1\t64, r2\n\tst.1\tr2, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI0_7[0], r1, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_1:\n\tcontext.get_context_u128\tr1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_2\n\tadd\t32, r0, r1\n\tst.2\t256, r1\n\tst.2\t288, r0\n\tadd\t@CPI0_1[0], r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_2:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end0:\n\nfun_createSender:\n.func_begin1:\n\tsub.s!\t19, r2, r3\n\tjump.le\t@.BB1_1\n\tsub.s\t20, r2, r5\n\tsub.s!\t@CPI1_0[0], r5, r3\n\tjump.ge\t@.BB1_3\n\tadd\t11, r2, r3\n\tsub.s\t32, r0, r4\n\tand\tr3, r4, r3\n\tadd\t63, r3, r3\n\tand\tr3, r4, r3\n\tld.1\t64, r4\n\tadd\tr4, r3, r3\n\tsub!\tr3, r4, r6\n\tadd\t0, r0, r6\n\tadd.lt\t1, r0, r6\n\tsub.s!\t@CPI1_1[0], r3, r7\n\tjump.gt\t@.BB1_3\n\tand!\t1, r6, r6\n\tjump.ne\t@.BB1_3\n\tst.1\t64, r3\n\tst.1.inc\tr4, r5, r3\n\tadd\tr2, r1, r6\n\tadd\tstack[@calldatasize], r0, r7\n\tsub!\tr6, r7, r6\n\tjump.gt\t@.BB1_1\n\tand\t31, r5, r6\n\tadd\t20, r1, r7\n\tptr.add\tstack[@ptr_calldata], r7, r7\n\tshr.s!\t5, r5, r5\n\tjump.eq\t@.BB1_23\n\tadd\tr0, r0, r8\n.BB1_9:\n\tshl.s\t5, r8, r9\n\tadd\tr3, r9, r10\n\tptr.add\tr7, r9, r9\n\tld\tr9, r9\n\tst.1\tr10, r9\n\tadd\t1, r8, r8\n\tsub!\tr8, r5, r9\n\tjump.lt\t@.BB1_9\n.BB1_23:\n\tsub.s!\t0, r6, r8\n\tjump.eq\t@.BB1_11\n\tshl.s\t5, r5, r5\n\tptr.add\tr7, r5, r7\n\tadd\tr3, r5, r5\n\tshl.s\t3, r6, r6\n\tld.1\tr5, r8\n\tshl\tr8, r6, r8\n\tshr\tr8, r6, r8\n\tld\tr7, r7\n\tsub\t256, r6, r6\n\tshr\tr7, r6, r7\n\tshl\tr7, r6, r6\n\tor\tr6, r8, r6\n\tst.1\tr5, r6\n.BB1_11:\n\tadd\tr2, r4, r2\n\tadd\t12, r2, r2\n\tst.1\tr2, r0\n\tld.1\tr4, r4\n\tptr.add\tstack[@ptr_calldata], r1, r1\n\tld\tr1, r2\n\tcontext.gas_left\tr1\n\tshr.s\t96, r2, r2\n\tsub.s!\t4, r2, r5\n\tjump.ne\t@.BB1_15\n\tadd\tr0, r0, r1\n.BB1_13:\n\tshl.s\t5, r1, r2\n\tadd\tr3, r2, r4\n\tld.1\tr4, r4\n\tst.1\tr2, r4\n\tadd!\t1, r1, r1\n\tadd\t0, r0, r2\n\tadd.eq\t1, r0, r2\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB1_13\n\tld.1\t0, r1\n\tjump\t@.BB1_21\n.BB1_15:\n\tadd\t@CPI1_2[0], r0, r5\n\tsub.s!\t@CPI1_2[0], r3, r6\n\tadd.ge\tr5, r0, r3\n\tshl.s\t64, r3, r3\n\tsub.s!\t@CPI1_2[0], r4, r6\n\tadd.ge\tr5, r0, r4\n\tshl.s\t96, r4, r4\n\tor\tr4, r3, r3\n\tsub.s!\t@CPI1_2[0], r1, r4\n\tadd.ge\tr5, r0, r1\n\tshl.s\t192, r1, r1\n\tor\tr1, r3, r1\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI1_2[0], r3, r3\n\tsub.s!\t32, r3, r4\n\tadd.ge\t32, r0, r3\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r3\n\tjump.eq\t@.BB1_22\n\tadd\tr0, r0, r5\n.BB1_17:\n\tshl.s\t5, r5, r6\n\tptr.add\tr1, r6, r7\n\tld\tr7, r7\n\tst.1\tr6, r7\n\tadd\t1, r5, r5\n\tsub!\tr5, r3, r6\n\tjump.lt\t@.BB1_17\n.BB1_22:\n\tsub.s!\t0, r4, r5\n\tjump.eq\t@.BB1_19\n\tshl.s\t3, r4, r4\n\tshl.s\t5, r3, r3\n\tld.1\tr3, r5\n\tshl\tr5, r4, r5\n\tshr\tr5, r4, r5\n\tptr.add\tr1, r3, r1\n\tld\tr1, r1\n\tsub\t256, r4, r4\n\tshr\tr1, r4, r1\n\tshl\tr1, r4, r1\n\tor\tr1, r5, r1\n\tst.1\tr3, r1\n.BB1_19:\n\tld.1\t0, r1\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB1_21\n\tadd\tr0, r0, r1\n.BB1_21:\n\tret\n.BB1_3:\n\tadd\t@CPI1_3[0], r0, r1\n\tst.1\t0, r1\n\tadd\t65, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI1_4[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB1_1:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end1:\n\n__farcall:\n.func_begin2:\n.tmp0:\n\tfar_call\tr1, r2, @.BB2_2\n.tmp1:\n\tadd\t1, r0, r2\n\tret\n.BB2_2:\n.tmp2:\n\tadd\tr0, r0, r2\n\tret\n.func_end2:\n\n\t.data\n\t.p2align\t5\ncalldatasize:\n\t.cell 0\n\n\t.p2align\t5\nptr_calldata:\n.cell\t0\n\n\t.note.GNU-stack\n\t.rodata\nCPI0_0:\nCPI1_2:\n\t.cell 4294967295\nCPI0_1:\n\t.cell 53919893334301279589334030174039261352344891250716429051063678533632\nCPI0_2:\n\t.cell -26959946667150639794667015087019630673637144422540572481103610249216\nCPI0_3:\n\t.cell 39376134586893209749886390317227915945453126231009119347939464007232096567296\nCPI0_4:\n\t.cell -57896044618658097711785492504343953926634992332820282019728792003956564819968\nCPI0_5:\nCPI1_1:\n\t.cell 18446744073709551615\nCPI0_6:\n\t.cell 1461501637330902918203684832716283019655932542975\nCPI0_7:\n\t.cell 2535301200456458802993406410752\nCPI1_0:\n\t.cell 18446744073709551616\nCPI1_3:\n\t.cell 35408467139433450592217433187231851964531694900788300625387963629091585785856\nCPI1_4:\n\t.cell 2852213850513516153367582212096\n","bytecode":{"object":"000200000000000200010000000103550000006001100270000000380010019d0000008001000039000000400010043f0000000101200190000000480000c13d0000000001000031000000040110008c000000500000413d0000000101000367000000000101043b0000003a011001970000003b0110009c000000500000c13d0000000001000416000000000110004c000000500000c13d0000000003000031000000040130008a0000003c02000041000000200410008c000000000400001900000000040240190000003c01100197000000000510004c000000000200a0190000003c0110009c00000000010400190000000001026019000000000110004c000000500000c13d00000001020003670000000401200370000000000101043b0000003d0410009c000000500000213d00000023041000390000003c05000041000000000634004b000000000600001900000000060580190000003c073001970000003c04400197000000000874004b0000000005008019000000000474013f0000003c0440009c00000000040600190000000004056019000000000440004c000000500000c13d0000000404100039000000000242034f000000000202043b0000003d0420009c000000500000213d00000024011000390000000004120019000000000334004b000000500000213d00db00520000040f0000003e01100197000000400200043d00000000001204350000003801000041000000380320009c000000000102401900000040011002100000003f011001c7000000dc0001042e0000000001000416000000000110004c000000500000c13d0000002001000039000001000010044300000120000004430000003901000041000000dc0001042e0000000001000019000000dd00010430000000130320008c000000d40000a13d000000140520008a000000400350009c000000ce0000813d0000000b03200039000000200400008a000000000343016f0000003f03300039000000000343016f000000400400043d0000000003340019000000000643004b000000000600001900000001060040390000003d0730009c000000ce0000213d0000000106600190000000ce0000c13d000000400030043f000000000354043600000000061200190000000007000031000000000676004b000000d40000213d0000001f0650018f000000140710003900000001077003670000000505500272000000790000613d00000000080000190000000509800210000000000a930019000000000997034f000000000909043b00000000009a04350000000108800039000000000958004b000000710000413d000000000860004c000000880000613d0000000505500210000000000757034f00000000055300190000000306600210000000000805043300000000086801cf000000000868022f000000000707043b0000010006600089000000000767022f00000000066701cf000000000686019f000000000065043500000000024200190000000c02200039000000000002043500000000040404330000000101100367000000000201043b00000000010004140000006002200270000000040520008c0000009e0000c13d00000000010000190000000502100210000000000423001900000000040404330000000000420435000000010110003a000000000200001900000001020060390000000102200190000000930000c13d0000000001000433000000cd0000013d0000003805000041000000380630009c00000000030580190000004003300210000000380640009c00000000040580190000006004400210000000000334019f000000380410009c0000000001058019000000c001100210000000000131019f00db00d60000040f000000000301001900000060033002700000003803300197000000200430008c00000020030080390000001f0430018f0000000503300272000000bb0000613d00000000050000190000000506500210000000000761034f000000000707043b00000000007604350000000105500039000000000635004b000000b40000413d000000000540004c000000c90000613d00000003044002100000000503300210000000000503043300000000054501cf000000000545022f000000000131034f000000000101043b0000010004400089000000000141022f00000000014101cf000000000151019f000000000013043500000000010004330000000102200190000000cd0000c13d0000000001000019000000000001042d000000410100004100000000001004350000004101000039000000040010043f0000004201000041000000dd000104300000000001000019000000dd00010430000000d9002104210000000102000039000000000001042d0000000002000019000000000001042d000000db00000432000000dc0001042e000000dd000104300000000000000000000000000000000000000000000000000000000000000000000000000000000000000000ffffffff0000000200000000000000000000000000000040000001000000000000000000ffffffff00000000000000000000000000000000000000000000000000000000570e1a36000000000000000000000000000000000000000000000000000000008000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000ffffffffffffffff000000000000000000000000ffffffffffffffffffffffffffffffffffffffff000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000000000000000100000000000000004e487b710000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000240000000000000000000000000000000000000000000000000000000000000000000000000000000000000000dcf226295a7c2aeef16f20916115fa070a6689d5203ff140eb9c6703458c3c23"},"methodIdentifiers":{"createSender(bytes)":"570e1a36"}},"irOptimized":"/// @use-src 4:\"contracts/smart-contract-wallet/aa-4337/core/SenderCreator.sol\"\nobject \"SenderCreator_2895\" {\n    code {\n        {\n            /// @src 4:204:1182  \"contract SenderCreator {...\"\n            let _1 := memoryguard(0x80)\n            mstore(64, _1)\n            if callvalue() { revert(0, 0) }\n            let _2 := datasize(\"SenderCreator_2895_deployed\")\n            codecopy(_1, dataoffset(\"SenderCreator_2895_deployed\"), _2)\n            return(_1, _2)\n        }\n    }\n    /// @use-src 4:\"contracts/smart-contract-wallet/aa-4337/core/SenderCreator.sol\"\n    object \"SenderCreator_2895_deployed\" {\n        code {\n            {\n                /// @src 4:204:1182  \"contract SenderCreator {...\"\n                mstore(64, 128)\n                if iszero(lt(calldatasize(), 4))\n                {\n                    let _1 := 0\n                    if eq(0x570e1a36, shr(224, calldataload(_1)))\n                    {\n                        if callvalue() { revert(_1, _1) }\n                        if slt(add(calldatasize(), not(3)), 32) { revert(_1, _1) }\n                        let offset := calldataload(4)\n                        let _2 := 0xffffffffffffffff\n                        if gt(offset, _2) { revert(_1, _1) }\n                        if iszero(slt(add(offset, 35), calldatasize())) { revert(_1, _1) }\n                        let length := calldataload(add(4, offset))\n                        if gt(length, _2) { revert(_1, _1) }\n                        if gt(add(add(offset, length), 36), calldatasize()) { revert(_1, _1) }\n                        let ret := fun_createSender(add(offset, 36), length)\n                        let memPos := mload(64)\n                        return(memPos, sub(abi_encode_address(memPos, ret), memPos))\n                    }\n                }\n                revert(0, 0)\n            }\n            function abi_encode_address(headStart, value0) -> tail\n            {\n                tail := add(headStart, 32)\n                mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n            }\n            function panic_error_0x41()\n            {\n                mstore(0, shl(224, 0x4e487b71))\n                mstore(4, 0x41)\n                revert(0, 0x24)\n            }\n            /// @ast-id 2894 @src 4:543:1180  \"function createSender(...\"\n            function fun_createSender(var_initCode_offset, var_initCode_length) -> var_sender\n            {\n                /// @src 4:204:1182  \"contract SenderCreator {...\"\n                if gt(/** @src 4:693:695  \"20\" */ 0x14, /** @src 4:204:1182  \"contract SenderCreator {...\" */ var_initCode_length)\n                {\n                    revert(/** @src 4:691:692  \"0\" */ 0x00, 0x00)\n                }\n                /// @src 4:204:1182  \"contract SenderCreator {...\"\n                let lengthOut := add(var_initCode_length, not(19))\n                let _1 := 0xffffffffffffffff\n                if gt(lengthOut, _1) { panic_error_0x41() }\n                let _2 := not(31)\n                let memPtr := mload(64)\n                let newFreePtr := add(memPtr, and(add(and(add(var_initCode_length, 11), _2), 63), _2))\n                if or(gt(newFreePtr, _1), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n                mstore(64, newFreePtr)\n                mstore(memPtr, lengthOut)\n                let dst := add(memPtr, 0x20)\n                if gt(add(var_initCode_offset, var_initCode_length), calldatasize())\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 4:204:1182  \"contract SenderCreator {...\"\n                calldatacopy(dst, add(var_initCode_offset, /** @src 4:693:695  \"20\" */ 0x14), /** @src 4:204:1182  \"contract SenderCreator {...\" */ lengthOut)\n                mstore(add(add(memPtr, var_initCode_length), 12), /** @src -1:-1:-1 */ 0)\n                /// @src 4:830:1107  \"assembly {...\"\n                let var_success := call(gas(), /** @src 4:204:1182  \"contract SenderCreator {...\" */ shr(96, calldataload(var_initCode_offset)), /** @src -1:-1:-1 */ 0, /** @src 4:830:1107  \"assembly {...\" */ dst, mload(memPtr), /** @src -1:-1:-1 */ 0, /** @src 4:204:1182  \"contract SenderCreator {...\" */ 0x20)\n                /// @src 4:830:1107  \"assembly {...\"\n                var_sender := mload(/** @src -1:-1:-1 */ 0)\n                /// @src 4:1116:1174  \"if (!success) {...\"\n                if /** @src 4:1120:1128  \"!success\" */ iszero(var_success)\n                /// @src 4:1116:1174  \"if (!success) {...\"\n                {\n                    /// @src 4:1144:1163  \"sender = address(0)\"\n                    var_sender := /** @src -1:-1:-1 */ 0\n                }\n            }\n        }\n        data \".metadata\" hex\"a26469706673582212201c30525d6c3ddf20399155f6de9964b8f51a1c2a76c27b7bf9a92eb6f24a980064736f6c63430008110033\"\n    }\n}\n","hash":"01000045c8abc672c56ccdc078a02a0efc63967dc1be5ba6bdab35aabad53dff","factoryDependencies":{}}},"contracts/smart-contract-wallet/aa-4337/core/StakeManager.sol":{"StakeManager":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":false,"internalType":"uint256","name":"totalDeposit","type":"uint256"}],"name":"Deposited","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":false,"internalType":"uint256","name":"totalStaked","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"unstakeDelaySec","type":"uint256"}],"name":"StakeLocked","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":false,"internalType":"uint256","name":"withdrawTime","type":"uint256"}],"name":"StakeUnlocked","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":false,"internalType":"address","name":"withdrawAddress","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"StakeWithdrawn","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":false,"internalType":"address","name":"withdrawAddress","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"Withdrawn","type":"event"},{"inputs":[{"internalType":"uint32","name":"unstakeDelaySec","type":"uint32"}],"name":"addStake","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"depositTo","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"deposits","outputs":[{"internalType":"uint112","name":"deposit","type":"uint112"},{"internalType":"bool","name":"staked","type":"bool"},{"internalType":"uint112","name":"stake","type":"uint112"},{"internalType":"uint32","name":"unstakeDelaySec","type":"uint32"},{"internalType":"uint48","name":"withdrawTime","type":"uint48"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"getDepositInfo","outputs":[{"components":[{"internalType":"uint112","name":"deposit","type":"uint112"},{"internalType":"bool","name":"staked","type":"bool"},{"internalType":"uint112","name":"stake","type":"uint112"},{"internalType":"uint32","name":"unstakeDelaySec","type":"uint32"},{"internalType":"uint48","name":"withdrawTime","type":"uint48"}],"internalType":"struct IStakeManager.DepositInfo","name":"info","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"unlockStake","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address payable","name":"withdrawAddress","type":"address"}],"name":"withdrawStake","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address payable","name":"withdrawAddress","type":"address"},{"internalType":"uint256","name":"withdrawAmount","type":"uint256"}],"name":"withdrawTo","outputs":[],"stateMutability":"nonpayable","type":"function"},{"stateMutability":"payable","type":"receive"}],"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"totalDeposit\",\"type\":\"uint256\"}],\"name\":\"Deposited\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"totalStaked\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"unstakeDelaySec\",\"type\":\"uint256\"}],\"name\":\"StakeLocked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"withdrawTime\",\"type\":\"uint256\"}],\"name\":\"StakeUnlocked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"withdrawAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"StakeWithdrawn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"withdrawAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Withdrawn\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"unstakeDelaySec\",\"type\":\"uint32\"}],\"name\":\"addStake\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"depositTo\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"deposits\",\"outputs\":[{\"internalType\":\"uint112\",\"name\":\"deposit\",\"type\":\"uint112\"},{\"internalType\":\"bool\",\"name\":\"staked\",\"type\":\"bool\"},{\"internalType\":\"uint112\",\"name\":\"stake\",\"type\":\"uint112\"},{\"internalType\":\"uint32\",\"name\":\"unstakeDelaySec\",\"type\":\"uint32\"},{\"internalType\":\"uint48\",\"name\":\"withdrawTime\",\"type\":\"uint48\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"getDepositInfo\",\"outputs\":[{\"components\":[{\"internalType\":\"uint112\",\"name\":\"deposit\",\"type\":\"uint112\"},{\"internalType\":\"bool\",\"name\":\"staked\",\"type\":\"bool\"},{\"internalType\":\"uint112\",\"name\":\"stake\",\"type\":\"uint112\"},{\"internalType\":\"uint32\",\"name\":\"unstakeDelaySec\",\"type\":\"uint32\"},{\"internalType\":\"uint48\",\"name\":\"withdrawTime\",\"type\":\"uint48\"}],\"internalType\":\"struct IStakeManager.DepositInfo\",\"name\":\"info\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unlockStake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"withdrawAddress\",\"type\":\"address\"}],\"name\":\"withdrawStake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"withdrawAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"withdrawAmount\",\"type\":\"uint256\"}],\"name\":\"withdrawTo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"addStake(uint32)\":{\"params\":{\"unstakeDelaySec\":\"the new lock duration before the deposit can be withdrawn.\"}},\"getDepositInfo(address)\":{\"returns\":{\"info\":\"- full deposit information of given account\"}},\"withdrawStake(address)\":{\"params\":{\"withdrawAddress\":\"the address to send withdrawn value.\"}},\"withdrawTo(address,uint256)\":{\"params\":{\"withdrawAddress\":\"the address to send withdrawn value.\",\"withdrawAmount\":\"the amount to withdraw.\"}}},\"version\":1},\"userdoc\":{\"events\":{\"StakeLocked(address,uint256,uint256)\":{\"notice\":\"Emitted when stake or unstake delay are modified\"},\"StakeUnlocked(address,uint256)\":{\"notice\":\"Emitted once a stake is scheduled for withdrawal\"}},\"kind\":\"user\",\"methods\":{\"addStake(uint32)\":{\"notice\":\"add to the account's stake - amount and delay any pending unstake is first cancelled.\"},\"balanceOf(address)\":{\"notice\":\"return the deposit (for gas payment) of the account\"},\"depositTo(address)\":{\"notice\":\"add to the deposit of the given account\"},\"deposits(address)\":{\"notice\":\"maps paymaster to their deposits and stakes\"},\"unlockStake()\":{\"notice\":\"attempt to unlock the stake. the value can be withdrawn (using withdrawStake) after the unstake delay.\"},\"withdrawStake(address)\":{\"notice\":\"withdraw from the (unlocked) stake. must first call unlockStake and wait for the unstakeDelay to pass\"},\"withdrawTo(address,uint256)\":{\"notice\":\"withdraw from the deposit.\"}},\"notice\":\"manage deposits and stakes. deposit is just a balance used to pay for UserOperations (either by a paymaster or an account) stake is value locked for at least \\\"unstakeDelay\\\" by a paymaster.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/smart-contract-wallet/aa-4337/core/StakeManager.sol\":\"StakeManager\"},\"evmVersion\":\"london\",\"libraries\":{\":__CACHE_BREAKER__\":\"0x00000000d41867734bbee4c6863d9255b2b06ac1\"},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"contracts/smart-contract-wallet/aa-4337/core/StakeManager.sol\":{\"keccak256\":\"0x1b2c921c3c605cf70a9b5acdec6d376fae8ffb2d1347e6004c50b0c5889062ae\",\"license\":\"GPL-3.0-only\",\"urls\":[\"bzz-raw://2b2915672ea26b03fcf8b434e823e7abc57db2e03b24c24f53e8839a861e3587\",\"dweb:/ipfs/QmTxKk5pGSdHfeA2xSfwKsxpAiX6bLaNeQUeH9H2V7smKA\"]},\"contracts/smart-contract-wallet/aa-4337/interfaces/IStakeManager.sol\":{\"keccak256\":\"0x2837b8aefb7c69b959a2a9435fba865a9275edd5d3f50465fb06e28322a18b8f\",\"license\":\"GPL-3.0-only\",\"urls\":[\"bzz-raw://a1fe1c192e959f4962be11483e2eb872a7d6f5f87d220dff0dde2dbcd6c48553\",\"dweb:/ipfs/QmenW3vP5wnAVVg8rGfwFQV85AJm5j1j7qLCuo89AzzLDB\"]}},\"version\":1}","devdoc":{"kind":"dev","methods":{"addStake(uint32)":{"params":{"unstakeDelaySec":"the new lock duration before the deposit can be withdrawn."}},"getDepositInfo(address)":{"returns":{"info":"- full deposit information of given account"}},"withdrawStake(address)":{"params":{"withdrawAddress":"the address to send withdrawn value."}},"withdrawTo(address,uint256)":{"params":{"withdrawAddress":"the address to send withdrawn value.","withdrawAmount":"the amount to withdraw."}}},"version":1},"userdoc":{"events":{"StakeLocked(address,uint256,uint256)":{"notice":"Emitted when stake or unstake delay are modified"},"StakeUnlocked(address,uint256)":{"notice":"Emitted once a stake is scheduled for withdrawal"}},"kind":"user","methods":{"addStake(uint32)":{"notice":"add to the account's stake - amount and delay any pending unstake is first cancelled."},"balanceOf(address)":{"notice":"return the deposit (for gas payment) of the account"},"depositTo(address)":{"notice":"add to the deposit of the given account"},"deposits(address)":{"notice":"maps paymaster to their deposits and stakes"},"unlockStake()":{"notice":"attempt to unlock the stake. the value can be withdrawn (using withdrawStake) after the unstake delay."},"withdrawStake(address)":{"notice":"withdraw from the (unlocked) stake. must first call unlockStake and wait for the unstakeDelay to pass"},"withdrawTo(address,uint256)":{"notice":"withdraw from the deposit."}},"notice":"manage deposits and stakes. deposit is just a balance used to pay for UserOperations (either by a paymaster or an account) stake is value locked for at least \"unstakeDelay\" by a paymaster.","version":1},"storageLayout":{"storage":[{"astId":2907,"contract":"contracts/smart-contract-wallet/aa-4337/core/StakeManager.sol:StakeManager","label":"deposits","offset":0,"slot":"0","type":"t_mapping(t_address,t_struct(DepositInfo)3682_storage)"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_mapping(t_address,t_struct(DepositInfo)3682_storage)":{"encoding":"mapping","key":"t_address","label":"mapping(address => struct IStakeManager.DepositInfo)","numberOfBytes":"32","value":"t_struct(DepositInfo)3682_storage"},"t_struct(DepositInfo)3682_storage":{"encoding":"inplace","label":"struct IStakeManager.DepositInfo","members":[{"astId":3673,"contract":"contracts/smart-contract-wallet/aa-4337/core/StakeManager.sol:StakeManager","label":"deposit","offset":0,"slot":"0","type":"t_uint112"},{"astId":3675,"contract":"contracts/smart-contract-wallet/aa-4337/core/StakeManager.sol:StakeManager","label":"staked","offset":14,"slot":"0","type":"t_bool"},{"astId":3677,"contract":"contracts/smart-contract-wallet/aa-4337/core/StakeManager.sol:StakeManager","label":"stake","offset":15,"slot":"0","type":"t_uint112"},{"astId":3679,"contract":"contracts/smart-contract-wallet/aa-4337/core/StakeManager.sol:StakeManager","label":"unstakeDelaySec","offset":0,"slot":"1","type":"t_uint32"},{"astId":3681,"contract":"contracts/smart-contract-wallet/aa-4337/core/StakeManager.sol:StakeManager","label":"withdrawTime","offset":4,"slot":"1","type":"t_uint48"}],"numberOfBytes":"64"},"t_uint112":{"encoding":"inplace","label":"uint112","numberOfBytes":"14"},"t_uint32":{"encoding":"inplace","label":"uint32","numberOfBytes":"4"},"t_uint48":{"encoding":"inplace","label":"uint48","numberOfBytes":"6"}}},"evm":{"legacyAssembly":null,"assembly":null,"bytecode":null,"methodIdentifiers":{"addStake(uint32)":"0396cb60","balanceOf(address)":"70a08231","depositTo(address)":"b760faf9","deposits(address)":"fc7e286d","getDepositInfo(address)":"5287ce12","unlockStake()":"bb9fe6bf","withdrawStake(address)":"c23a5cea","withdrawTo(address,uint256)":"205c2878"}},"irOptimized":""}},"contracts/smart-contract-wallet/aa-4337/interfaces/IAccount.sol":{"IAccount":{"abi":[{"inputs":[{"components":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"nonce","type":"uint256"},{"internalType":"bytes","name":"initCode","type":"bytes"},{"internalType":"bytes","name":"callData","type":"bytes"},{"internalType":"uint256","name":"callGasLimit","type":"uint256"},{"internalType":"uint256","name":"verificationGasLimit","type":"uint256"},{"internalType":"uint256","name":"preVerificationGas","type":"uint256"},{"internalType":"uint256","name":"maxFeePerGas","type":"uint256"},{"internalType":"uint256","name":"maxPriorityFeePerGas","type":"uint256"},{"internalType":"bytes","name":"paymasterAndData","type":"bytes"},{"internalType":"bytes","name":"signature","type":"bytes"}],"internalType":"struct UserOperation","name":"userOp","type":"tuple"},{"internalType":"bytes32","name":"userOpHash","type":"bytes32"},{"internalType":"uint256","name":"missingAccountFunds","type":"uint256"}],"name":"validateUserOp","outputs":[{"internalType":"uint256","name":"validationData","type":"uint256"}],"stateMutability":"nonpayable","type":"function"}],"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"initCode\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"callData\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"callGasLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"verificationGasLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"preVerificationGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxFeePerGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxPriorityFeePerGas\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"paymasterAndData\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"internalType\":\"struct UserOperation\",\"name\":\"userOp\",\"type\":\"tuple\"},{\"internalType\":\"bytes32\",\"name\":\"userOpHash\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"missingAccountFunds\",\"type\":\"uint256\"}],\"name\":\"validateUserOp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"validationData\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"validateUserOp((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes),bytes32,uint256)\":{\"details\":\"Must validate caller is the entryPoint.      Must validate the signature and nonce\",\"params\":{\"missingAccountFunds\":\"missing funds on the account's deposit in the entrypoint.      This is the minimum amount to transfer to the sender(entryPoint) to be able to make the call.      The excess is left as a deposit in the entrypoint, for future calls.      can be withdrawn anytime using \\\"entryPoint.withdrawTo()\\\"      In case there is a paymaster in the request (or the current deposit is high enough), this value will be zero.\",\"userOp\":\"the operation that is about to be executed.\",\"userOpHash\":\"hash of the user's request data. can be used as the basis for signature.\"},\"returns\":{\"validationData\":\"packaged ValidationData structure. use `_packValidationData` and `_unpackValidationData` to encode and decode      <20-byte> sigAuthorizer - 0 for valid signature, 1 to mark signature failure,         otherwise, an address of an \\\"authorizer\\\" contract.      <6-byte> validUntil - last timestamp this operation is valid. 0 for \\\"indefinite\\\"      <6-byte> validAfter - first timestamp this operation is valid      If an account doesn't use time-range, it is enough to return SIG_VALIDATION_FAILED value (1) for signature failure.      Note that the validation code cannot use block.timestamp (or block.number) directly.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"validateUserOp((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes),bytes32,uint256)\":{\"notice\":\"Validate user's signature and nonce the entryPoint will make the call to the recipient only if this validation call returns successfully. signature failure should be reported by returning SIG_VALIDATION_FAILED (1). This allows making a \\\"simulation call\\\" without a valid signature Other failures (e.g. nonce mismatch, or invalid signature format) should still revert to signal failure.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/smart-contract-wallet/aa-4337/interfaces/IAccount.sol\":\"IAccount\"},\"evmVersion\":\"london\",\"libraries\":{\":__CACHE_BREAKER__\":\"0x00000000d41867734bbee4c6863d9255b2b06ac1\"},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"contracts/smart-contract-wallet/aa-4337/core/Helpers.sol\":{\"keccak256\":\"0x9a220fa7fd433cf4309c5be508907147ad2b0cda5c10867a13da43b0f703cff9\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://062d3a7fe9dcda4ec72e066895c66e189549eae5c9bc886b1d897d1811523219\",\"dweb:/ipfs/Qma6UjdwG5hrMEuKguiT5ccJDjDkju9kVcWBvkHr49JJ6A\"]},\"contracts/smart-contract-wallet/aa-4337/interfaces/IAccount.sol\":{\"keccak256\":\"0xfff631110ad8e5f3f16308fa209a6cd0baafd60e7df0c02816cb95dd03d45a51\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://2ad40e618887ce68aca26b9d75d53485063917b85c782a9ce3498b824cc22fc0\",\"dweb:/ipfs/Qmb4mxgpjHsJYRaj93qBethXFdio5K1zJw5QznJFwsQuG7\"]},\"contracts/smart-contract-wallet/aa-4337/interfaces/UserOperation.sol\":{\"keccak256\":\"0x274a05da373e68f76955cc92b9ee554cc24fe82d0c8f5bd5bef271202cf3a09e\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://d4f5e7fe7416e05c65c4c6da3a8acba0f5cc2bb39a2446146c41d5ec75d1bbd6\",\"dweb:/ipfs/QmVXq9Wv9eYziTAN2fqdar1eAGoYEa9Qtz5NmWei88CaAV\"]}},\"version\":1}","devdoc":{"kind":"dev","methods":{"validateUserOp((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes),bytes32,uint256)":{"details":"Must validate caller is the entryPoint.      Must validate the signature and nonce","params":{"missingAccountFunds":"missing funds on the account's deposit in the entrypoint.      This is the minimum amount to transfer to the sender(entryPoint) to be able to make the call.      The excess is left as a deposit in the entrypoint, for future calls.      can be withdrawn anytime using \"entryPoint.withdrawTo()\"      In case there is a paymaster in the request (or the current deposit is high enough), this value will be zero.","userOp":"the operation that is about to be executed.","userOpHash":"hash of the user's request data. can be used as the basis for signature."},"returns":{"validationData":"packaged ValidationData structure. use `_packValidationData` and `_unpackValidationData` to encode and decode      <20-byte> sigAuthorizer - 0 for valid signature, 1 to mark signature failure,         otherwise, an address of an \"authorizer\" contract.      <6-byte> validUntil - last timestamp this operation is valid. 0 for \"indefinite\"      <6-byte> validAfter - first timestamp this operation is valid      If an account doesn't use time-range, it is enough to return SIG_VALIDATION_FAILED value (1) for signature failure.      Note that the validation code cannot use block.timestamp (or block.number) directly."}}},"version":1},"userdoc":{"kind":"user","methods":{"validateUserOp((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes),bytes32,uint256)":{"notice":"Validate user's signature and nonce the entryPoint will make the call to the recipient only if this validation call returns successfully. signature failure should be reported by returning SIG_VALIDATION_FAILED (1). This allows making a \"simulation call\" without a valid signature Other failures (e.g. nonce mismatch, or invalid signature format) should still revert to signal failure."}},"version":1},"storageLayout":{"storage":[],"types":null},"evm":{"legacyAssembly":null,"assembly":null,"bytecode":null,"methodIdentifiers":{"validateUserOp((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes),bytes32,uint256)":"3a871cdd"}},"irOptimized":""}},"contracts/smart-contract-wallet/aa-4337/interfaces/IAggregator.sol":{"IAggregator":{"abi":[{"inputs":[{"components":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"nonce","type":"uint256"},{"internalType":"bytes","name":"initCode","type":"bytes"},{"internalType":"bytes","name":"callData","type":"bytes"},{"internalType":"uint256","name":"callGasLimit","type":"uint256"},{"internalType":"uint256","name":"verificationGasLimit","type":"uint256"},{"internalType":"uint256","name":"preVerificationGas","type":"uint256"},{"internalType":"uint256","name":"maxFeePerGas","type":"uint256"},{"internalType":"uint256","name":"maxPriorityFeePerGas","type":"uint256"},{"internalType":"bytes","name":"paymasterAndData","type":"bytes"},{"internalType":"bytes","name":"signature","type":"bytes"}],"internalType":"struct UserOperation[]","name":"userOps","type":"tuple[]"}],"name":"aggregateSignatures","outputs":[{"internalType":"bytes","name":"aggregatedSignature","type":"bytes"}],"stateMutability":"view","type":"function"},{"inputs":[{"components":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"nonce","type":"uint256"},{"internalType":"bytes","name":"initCode","type":"bytes"},{"internalType":"bytes","name":"callData","type":"bytes"},{"internalType":"uint256","name":"callGasLimit","type":"uint256"},{"internalType":"uint256","name":"verificationGasLimit","type":"uint256"},{"internalType":"uint256","name":"preVerificationGas","type":"uint256"},{"internalType":"uint256","name":"maxFeePerGas","type":"uint256"},{"internalType":"uint256","name":"maxPriorityFeePerGas","type":"uint256"},{"internalType":"bytes","name":"paymasterAndData","type":"bytes"},{"internalType":"bytes","name":"signature","type":"bytes"}],"internalType":"struct UserOperation[]","name":"userOps","type":"tuple[]"},{"internalType":"bytes","name":"signature","type":"bytes"}],"name":"validateSignatures","outputs":[],"stateMutability":"view","type":"function"},{"inputs":[{"components":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"nonce","type":"uint256"},{"internalType":"bytes","name":"initCode","type":"bytes"},{"internalType":"bytes","name":"callData","type":"bytes"},{"internalType":"uint256","name":"callGasLimit","type":"uint256"},{"internalType":"uint256","name":"verificationGasLimit","type":"uint256"},{"internalType":"uint256","name":"preVerificationGas","type":"uint256"},{"internalType":"uint256","name":"maxFeePerGas","type":"uint256"},{"internalType":"uint256","name":"maxPriorityFeePerGas","type":"uint256"},{"internalType":"bytes","name":"paymasterAndData","type":"bytes"},{"internalType":"bytes","name":"signature","type":"bytes"}],"internalType":"struct UserOperation","name":"userOp","type":"tuple"}],"name":"validateUserOpSignature","outputs":[{"internalType":"bytes","name":"sigForUserOp","type":"bytes"}],"stateMutability":"view","type":"function"}],"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"initCode\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"callData\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"callGasLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"verificationGasLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"preVerificationGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxFeePerGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxPriorityFeePerGas\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"paymasterAndData\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"internalType\":\"struct UserOperation[]\",\"name\":\"userOps\",\"type\":\"tuple[]\"}],\"name\":\"aggregateSignatures\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"aggregatedSignature\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"initCode\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"callData\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"callGasLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"verificationGasLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"preVerificationGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxFeePerGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxPriorityFeePerGas\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"paymasterAndData\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"internalType\":\"struct UserOperation[]\",\"name\":\"userOps\",\"type\":\"tuple[]\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"name\":\"validateSignatures\",\"outputs\":[],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"initCode\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"callData\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"callGasLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"verificationGasLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"preVerificationGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxFeePerGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxPriorityFeePerGas\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"paymasterAndData\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"internalType\":\"struct UserOperation\",\"name\":\"userOp\",\"type\":\"tuple\"}],\"name\":\"validateUserOpSignature\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"sigForUserOp\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"aggregateSignatures((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes)[])\":{\"params\":{\"userOps\":\"array of UserOperations to collect the signatures from.\"},\"returns\":{\"aggregatedSignature\":\"the aggregated signature\"}},\"validateUserOpSignature((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes))\":{\"params\":{\"userOp\":\"the userOperation received from the user.\"},\"returns\":{\"sigForUserOp\":\"the value to put into the signature field of the userOp when calling handleOps.    (usually empty, unless account and aggregator support some kind of \\\"multisig\\\"\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"aggregateSignatures((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes)[])\":{\"notice\":\"aggregate multiple signatures into a single value. This method is called off-chain to calculate the signature to pass with handleOps() bundler MAY use optimized custom code perform this aggregation\"},\"validateSignatures((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes)[],bytes)\":{\"notice\":\"validate aggregated signature. revert if the aggregated signature does not match the given list of operations.\"},\"validateUserOpSignature((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes))\":{\"notice\":\"validate signature of a single userOp This method is should be called by bundler after EntryPoint.simulateValidation() returns (reverts) with ValidationResultWithAggregation First it validates the signature over the userOp. Then it returns data to be used when creating the handleOps.\"}},\"notice\":\"Aggregated Signatures validator.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/smart-contract-wallet/aa-4337/interfaces/IAggregator.sol\":\"IAggregator\"},\"evmVersion\":\"london\",\"libraries\":{\":__CACHE_BREAKER__\":\"0x00000000d41867734bbee4c6863d9255b2b06ac1\"},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"contracts/smart-contract-wallet/aa-4337/core/Helpers.sol\":{\"keccak256\":\"0x9a220fa7fd433cf4309c5be508907147ad2b0cda5c10867a13da43b0f703cff9\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://062d3a7fe9dcda4ec72e066895c66e189549eae5c9bc886b1d897d1811523219\",\"dweb:/ipfs/Qma6UjdwG5hrMEuKguiT5ccJDjDkju9kVcWBvkHr49JJ6A\"]},\"contracts/smart-contract-wallet/aa-4337/interfaces/IAggregator.sol\":{\"keccak256\":\"0x33265d5eece854fb1ced8d8c418a92367af4c448d6c097edce2dd8d7f78dc504\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://2da963cb3b7ca8186304003c85b95ba373e9168b128adaaf56e7312246586d59\",\"dweb:/ipfs/Qmeo7BBU3XbiEvhoYx5GWxvqc2xgQwyzHT2vNzco9evAD4\"]},\"contracts/smart-contract-wallet/aa-4337/interfaces/UserOperation.sol\":{\"keccak256\":\"0x274a05da373e68f76955cc92b9ee554cc24fe82d0c8f5bd5bef271202cf3a09e\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://d4f5e7fe7416e05c65c4c6da3a8acba0f5cc2bb39a2446146c41d5ec75d1bbd6\",\"dweb:/ipfs/QmVXq9Wv9eYziTAN2fqdar1eAGoYEa9Qtz5NmWei88CaAV\"]}},\"version\":1}","devdoc":{"kind":"dev","methods":{"aggregateSignatures((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes)[])":{"params":{"userOps":"array of UserOperations to collect the signatures from."},"returns":{"aggregatedSignature":"the aggregated signature"}},"validateUserOpSignature((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes))":{"params":{"userOp":"the userOperation received from the user."},"returns":{"sigForUserOp":"the value to put into the signature field of the userOp when calling handleOps.    (usually empty, unless account and aggregator support some kind of \"multisig\""}}},"version":1},"userdoc":{"kind":"user","methods":{"aggregateSignatures((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes)[])":{"notice":"aggregate multiple signatures into a single value. This method is called off-chain to calculate the signature to pass with handleOps() bundler MAY use optimized custom code perform this aggregation"},"validateSignatures((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes)[],bytes)":{"notice":"validate aggregated signature. revert if the aggregated signature does not match the given list of operations."},"validateUserOpSignature((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes))":{"notice":"validate signature of a single userOp This method is should be called by bundler after EntryPoint.simulateValidation() returns (reverts) with ValidationResultWithAggregation First it validates the signature over the userOp. Then it returns data to be used when creating the handleOps."}},"notice":"Aggregated Signatures validator.","version":1},"storageLayout":{"storage":[],"types":null},"evm":{"legacyAssembly":null,"assembly":null,"bytecode":null,"methodIdentifiers":{"aggregateSignatures((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes)[])":"275e2d79","validateSignatures((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes)[],bytes)":"e3563a4f","validateUserOpSignature((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes))":"64c530cd"}},"irOptimized":""}},"contracts/smart-contract-wallet/aa-4337/interfaces/IEntryPoint.sol":{"IEntryPoint":{"abi":[{"inputs":[{"internalType":"uint256","name":"preOpGas","type":"uint256"},{"internalType":"uint256","name":"paid","type":"uint256"},{"internalType":"uint48","name":"validAfter","type":"uint48"},{"internalType":"uint48","name":"validUntil","type":"uint48"},{"internalType":"bool","name":"targetSuccess","type":"bool"},{"internalType":"bytes","name":"targetResult","type":"bytes"}],"name":"ExecutionResult","type":"error"},{"inputs":[{"internalType":"uint256","name":"opIndex","type":"uint256"},{"internalType":"string","name":"reason","type":"string"}],"name":"FailedOp","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"SenderAddressResult","type":"error"},{"inputs":[{"internalType":"address","name":"aggregator","type":"address"}],"name":"SignatureValidationFailed","type":"error"},{"inputs":[{"components":[{"internalType":"uint256","name":"preOpGas","type":"uint256"},{"internalType":"uint256","name":"prefund","type":"uint256"},{"internalType":"bool","name":"sigFailed","type":"bool"},{"internalType":"uint48","name":"validAfter","type":"uint48"},{"internalType":"uint48","name":"validUntil","type":"uint48"},{"internalType":"bytes","name":"paymasterContext","type":"bytes"}],"internalType":"struct IEntryPoint.ReturnInfo","name":"returnInfo","type":"tuple"},{"components":[{"internalType":"uint256","name":"stake","type":"uint256"},{"internalType":"uint256","name":"unstakeDelaySec","type":"uint256"}],"internalType":"struct IStakeManager.StakeInfo","name":"senderInfo","type":"tuple"},{"components":[{"internalType":"uint256","name":"stake","type":"uint256"},{"internalType":"uint256","name":"unstakeDelaySec","type":"uint256"}],"internalType":"struct IStakeManager.StakeInfo","name":"factoryInfo","type":"tuple"},{"components":[{"internalType":"uint256","name":"stake","type":"uint256"},{"internalType":"uint256","name":"unstakeDelaySec","type":"uint256"}],"internalType":"struct IStakeManager.StakeInfo","name":"paymasterInfo","type":"tuple"}],"name":"ValidationResult","type":"error"},{"inputs":[{"components":[{"internalType":"uint256","name":"preOpGas","type":"uint256"},{"internalType":"uint256","name":"prefund","type":"uint256"},{"internalType":"bool","name":"sigFailed","type":"bool"},{"internalType":"uint48","name":"validAfter","type":"uint48"},{"internalType":"uint48","name":"validUntil","type":"uint48"},{"internalType":"bytes","name":"paymasterContext","type":"bytes"}],"internalType":"struct IEntryPoint.ReturnInfo","name":"returnInfo","type":"tuple"},{"components":[{"internalType":"uint256","name":"stake","type":"uint256"},{"internalType":"uint256","name":"unstakeDelaySec","type":"uint256"}],"internalType":"struct IStakeManager.StakeInfo","name":"senderInfo","type":"tuple"},{"components":[{"internalType":"uint256","name":"stake","type":"uint256"},{"internalType":"uint256","name":"unstakeDelaySec","type":"uint256"}],"internalType":"struct IStakeManager.StakeInfo","name":"factoryInfo","type":"tuple"},{"components":[{"internalType":"uint256","name":"stake","type":"uint256"},{"internalType":"uint256","name":"unstakeDelaySec","type":"uint256"}],"internalType":"struct IStakeManager.StakeInfo","name":"paymasterInfo","type":"tuple"},{"components":[{"internalType":"address","name":"aggregator","type":"address"},{"components":[{"internalType":"uint256","name":"stake","type":"uint256"},{"internalType":"uint256","name":"unstakeDelaySec","type":"uint256"}],"internalType":"struct IStakeManager.StakeInfo","name":"stakeInfo","type":"tuple"}],"internalType":"struct IEntryPoint.AggregatorStakeInfo","name":"aggregatorInfo","type":"tuple"}],"name":"ValidationResultWithAggregation","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"userOpHash","type":"bytes32"},{"indexed":true,"internalType":"address","name":"sender","type":"address"},{"indexed":false,"internalType":"address","name":"factory","type":"address"},{"indexed":false,"internalType":"address","name":"paymaster","type":"address"}],"name":"AccountDeployed","type":"event"},{"anonymous":false,"inputs":[],"name":"BeforeExecution","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":false,"internalType":"uint256","name":"totalDeposit","type":"uint256"}],"name":"Deposited","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"aggregator","type":"address"}],"name":"SignatureAggregatorChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":false,"internalType":"uint256","name":"totalStaked","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"unstakeDelaySec","type":"uint256"}],"name":"StakeLocked","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":false,"internalType":"uint256","name":"withdrawTime","type":"uint256"}],"name":"StakeUnlocked","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":false,"internalType":"address","name":"withdrawAddress","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"StakeWithdrawn","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"userOpHash","type":"bytes32"},{"indexed":true,"internalType":"address","name":"sender","type":"address"},{"indexed":true,"internalType":"address","name":"paymaster","type":"address"},{"indexed":false,"internalType":"uint256","name":"nonce","type":"uint256"},{"indexed":false,"internalType":"bool","name":"success","type":"bool"},{"indexed":false,"internalType":"uint256","name":"actualGasCost","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"actualGasUsed","type":"uint256"}],"name":"UserOperationEvent","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"userOpHash","type":"bytes32"},{"indexed":true,"internalType":"address","name":"sender","type":"address"},{"indexed":false,"internalType":"uint256","name":"nonce","type":"uint256"},{"indexed":false,"internalType":"bytes","name":"revertReason","type":"bytes"}],"name":"UserOperationRevertReason","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":false,"internalType":"address","name":"withdrawAddress","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"Withdrawn","type":"event"},{"inputs":[{"internalType":"uint32","name":"_unstakeDelaySec","type":"uint32"}],"name":"addStake","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"depositTo","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"getDepositInfo","outputs":[{"components":[{"internalType":"uint112","name":"deposit","type":"uint112"},{"internalType":"bool","name":"staked","type":"bool"},{"internalType":"uint112","name":"stake","type":"uint112"},{"internalType":"uint32","name":"unstakeDelaySec","type":"uint32"},{"internalType":"uint48","name":"withdrawTime","type":"uint48"}],"internalType":"struct IStakeManager.DepositInfo","name":"info","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint192","name":"key","type":"uint192"}],"name":"getNonce","outputs":[{"internalType":"uint256","name":"nonce","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes","name":"initCode","type":"bytes"}],"name":"getSenderAddress","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"components":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"nonce","type":"uint256"},{"internalType":"bytes","name":"initCode","type":"bytes"},{"internalType":"bytes","name":"callData","type":"bytes"},{"internalType":"uint256","name":"callGasLimit","type":"uint256"},{"internalType":"uint256","name":"verificationGasLimit","type":"uint256"},{"internalType":"uint256","name":"preVerificationGas","type":"uint256"},{"internalType":"uint256","name":"maxFeePerGas","type":"uint256"},{"internalType":"uint256","name":"maxPriorityFeePerGas","type":"uint256"},{"internalType":"bytes","name":"paymasterAndData","type":"bytes"},{"internalType":"bytes","name":"signature","type":"bytes"}],"internalType":"struct UserOperation","name":"userOp","type":"tuple"}],"name":"getUserOpHash","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"components":[{"components":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"nonce","type":"uint256"},{"internalType":"bytes","name":"initCode","type":"bytes"},{"internalType":"bytes","name":"callData","type":"bytes"},{"internalType":"uint256","name":"callGasLimit","type":"uint256"},{"internalType":"uint256","name":"verificationGasLimit","type":"uint256"},{"internalType":"uint256","name":"preVerificationGas","type":"uint256"},{"internalType":"uint256","name":"maxFeePerGas","type":"uint256"},{"internalType":"uint256","name":"maxPriorityFeePerGas","type":"uint256"},{"internalType":"bytes","name":"paymasterAndData","type":"bytes"},{"internalType":"bytes","name":"signature","type":"bytes"}],"internalType":"struct UserOperation[]","name":"userOps","type":"tuple[]"},{"internalType":"contract IAggregator","name":"aggregator","type":"address"},{"internalType":"bytes","name":"signature","type":"bytes"}],"internalType":"struct IEntryPoint.UserOpsPerAggregator[]","name":"opsPerAggregator","type":"tuple[]"},{"internalType":"address payable","name":"beneficiary","type":"address"}],"name":"handleAggregatedOps","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"components":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"nonce","type":"uint256"},{"internalType":"bytes","name":"initCode","type":"bytes"},{"internalType":"bytes","name":"callData","type":"bytes"},{"internalType":"uint256","name":"callGasLimit","type":"uint256"},{"internalType":"uint256","name":"verificationGasLimit","type":"uint256"},{"internalType":"uint256","name":"preVerificationGas","type":"uint256"},{"internalType":"uint256","name":"maxFeePerGas","type":"uint256"},{"internalType":"uint256","name":"maxPriorityFeePerGas","type":"uint256"},{"internalType":"bytes","name":"paymasterAndData","type":"bytes"},{"internalType":"bytes","name":"signature","type":"bytes"}],"internalType":"struct UserOperation[]","name":"ops","type":"tuple[]"},{"internalType":"address payable","name":"beneficiary","type":"address"}],"name":"handleOps","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"uint192","name":"key","type":"uint192"}],"name":"incrementNonce","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"components":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"nonce","type":"uint256"},{"internalType":"bytes","name":"initCode","type":"bytes"},{"internalType":"bytes","name":"callData","type":"bytes"},{"internalType":"uint256","name":"callGasLimit","type":"uint256"},{"internalType":"uint256","name":"verificationGasLimit","type":"uint256"},{"internalType":"uint256","name":"preVerificationGas","type":"uint256"},{"internalType":"uint256","name":"maxFeePerGas","type":"uint256"},{"internalType":"uint256","name":"maxPriorityFeePerGas","type":"uint256"},{"internalType":"bytes","name":"paymasterAndData","type":"bytes"},{"internalType":"bytes","name":"signature","type":"bytes"}],"internalType":"struct UserOperation","name":"op","type":"tuple"},{"internalType":"address","name":"target","type":"address"},{"internalType":"bytes","name":"targetCallData","type":"bytes"}],"name":"simulateHandleOp","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"components":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"nonce","type":"uint256"},{"internalType":"bytes","name":"initCode","type":"bytes"},{"internalType":"bytes","name":"callData","type":"bytes"},{"internalType":"uint256","name":"callGasLimit","type":"uint256"},{"internalType":"uint256","name":"verificationGasLimit","type":"uint256"},{"internalType":"uint256","name":"preVerificationGas","type":"uint256"},{"internalType":"uint256","name":"maxFeePerGas","type":"uint256"},{"internalType":"uint256","name":"maxPriorityFeePerGas","type":"uint256"},{"internalType":"bytes","name":"paymasterAndData","type":"bytes"},{"internalType":"bytes","name":"signature","type":"bytes"}],"internalType":"struct UserOperation","name":"userOp","type":"tuple"}],"name":"simulateValidation","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"unlockStake","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address payable","name":"withdrawAddress","type":"address"}],"name":"withdrawStake","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address payable","name":"withdrawAddress","type":"address"},{"internalType":"uint256","name":"withdrawAmount","type":"uint256"}],"name":"withdrawTo","outputs":[],"stateMutability":"nonpayable","type":"function"}],"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"preOpGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"paid\",\"type\":\"uint256\"},{\"internalType\":\"uint48\",\"name\":\"validAfter\",\"type\":\"uint48\"},{\"internalType\":\"uint48\",\"name\":\"validUntil\",\"type\":\"uint48\"},{\"internalType\":\"bool\",\"name\":\"targetSuccess\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"targetResult\",\"type\":\"bytes\"}],\"name\":\"ExecutionResult\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"opIndex\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"reason\",\"type\":\"string\"}],\"name\":\"FailedOp\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"SenderAddressResult\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"aggregator\",\"type\":\"address\"}],\"name\":\"SignatureValidationFailed\",\"type\":\"error\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"preOpGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"prefund\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"sigFailed\",\"type\":\"bool\"},{\"internalType\":\"uint48\",\"name\":\"validAfter\",\"type\":\"uint48\"},{\"internalType\":\"uint48\",\"name\":\"validUntil\",\"type\":\"uint48\"},{\"internalType\":\"bytes\",\"name\":\"paymasterContext\",\"type\":\"bytes\"}],\"internalType\":\"struct IEntryPoint.ReturnInfo\",\"name\":\"returnInfo\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"stake\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"unstakeDelaySec\",\"type\":\"uint256\"}],\"internalType\":\"struct IStakeManager.StakeInfo\",\"name\":\"senderInfo\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"stake\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"unstakeDelaySec\",\"type\":\"uint256\"}],\"internalType\":\"struct IStakeManager.StakeInfo\",\"name\":\"factoryInfo\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"stake\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"unstakeDelaySec\",\"type\":\"uint256\"}],\"internalType\":\"struct IStakeManager.StakeInfo\",\"name\":\"paymasterInfo\",\"type\":\"tuple\"}],\"name\":\"ValidationResult\",\"type\":\"error\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"preOpGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"prefund\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"sigFailed\",\"type\":\"bool\"},{\"internalType\":\"uint48\",\"name\":\"validAfter\",\"type\":\"uint48\"},{\"internalType\":\"uint48\",\"name\":\"validUntil\",\"type\":\"uint48\"},{\"internalType\":\"bytes\",\"name\":\"paymasterContext\",\"type\":\"bytes\"}],\"internalType\":\"struct IEntryPoint.ReturnInfo\",\"name\":\"returnInfo\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"stake\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"unstakeDelaySec\",\"type\":\"uint256\"}],\"internalType\":\"struct IStakeManager.StakeInfo\",\"name\":\"senderInfo\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"stake\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"unstakeDelaySec\",\"type\":\"uint256\"}],\"internalType\":\"struct IStakeManager.StakeInfo\",\"name\":\"factoryInfo\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"stake\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"unstakeDelaySec\",\"type\":\"uint256\"}],\"internalType\":\"struct IStakeManager.StakeInfo\",\"name\":\"paymasterInfo\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"aggregator\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"stake\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"unstakeDelaySec\",\"type\":\"uint256\"}],\"internalType\":\"struct IStakeManager.StakeInfo\",\"name\":\"stakeInfo\",\"type\":\"tuple\"}],\"internalType\":\"struct IEntryPoint.AggregatorStakeInfo\",\"name\":\"aggregatorInfo\",\"type\":\"tuple\"}],\"name\":\"ValidationResultWithAggregation\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"userOpHash\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"factory\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"paymaster\",\"type\":\"address\"}],\"name\":\"AccountDeployed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"BeforeExecution\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"totalDeposit\",\"type\":\"uint256\"}],\"name\":\"Deposited\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"aggregator\",\"type\":\"address\"}],\"name\":\"SignatureAggregatorChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"totalStaked\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"unstakeDelaySec\",\"type\":\"uint256\"}],\"name\":\"StakeLocked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"withdrawTime\",\"type\":\"uint256\"}],\"name\":\"StakeUnlocked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"withdrawAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"StakeWithdrawn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"userOpHash\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"paymaster\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"actualGasCost\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"actualGasUsed\",\"type\":\"uint256\"}],\"name\":\"UserOperationEvent\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"userOpHash\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"revertReason\",\"type\":\"bytes\"}],\"name\":\"UserOperationRevertReason\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"withdrawAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Withdrawn\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"_unstakeDelaySec\",\"type\":\"uint32\"}],\"name\":\"addStake\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"depositTo\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"getDepositInfo\",\"outputs\":[{\"components\":[{\"internalType\":\"uint112\",\"name\":\"deposit\",\"type\":\"uint112\"},{\"internalType\":\"bool\",\"name\":\"staked\",\"type\":\"bool\"},{\"internalType\":\"uint112\",\"name\":\"stake\",\"type\":\"uint112\"},{\"internalType\":\"uint32\",\"name\":\"unstakeDelaySec\",\"type\":\"uint32\"},{\"internalType\":\"uint48\",\"name\":\"withdrawTime\",\"type\":\"uint48\"}],\"internalType\":\"struct IStakeManager.DepositInfo\",\"name\":\"info\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint192\",\"name\":\"key\",\"type\":\"uint192\"}],\"name\":\"getNonce\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"initCode\",\"type\":\"bytes\"}],\"name\":\"getSenderAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"initCode\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"callData\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"callGasLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"verificationGasLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"preVerificationGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxFeePerGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxPriorityFeePerGas\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"paymasterAndData\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"internalType\":\"struct UserOperation\",\"name\":\"userOp\",\"type\":\"tuple\"}],\"name\":\"getUserOpHash\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"initCode\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"callData\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"callGasLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"verificationGasLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"preVerificationGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxFeePerGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxPriorityFeePerGas\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"paymasterAndData\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"internalType\":\"struct UserOperation[]\",\"name\":\"userOps\",\"type\":\"tuple[]\"},{\"internalType\":\"contract IAggregator\",\"name\":\"aggregator\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"internalType\":\"struct IEntryPoint.UserOpsPerAggregator[]\",\"name\":\"opsPerAggregator\",\"type\":\"tuple[]\"},{\"internalType\":\"address payable\",\"name\":\"beneficiary\",\"type\":\"address\"}],\"name\":\"handleAggregatedOps\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"initCode\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"callData\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"callGasLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"verificationGasLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"preVerificationGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxFeePerGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxPriorityFeePerGas\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"paymasterAndData\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"internalType\":\"struct UserOperation[]\",\"name\":\"ops\",\"type\":\"tuple[]\"},{\"internalType\":\"address payable\",\"name\":\"beneficiary\",\"type\":\"address\"}],\"name\":\"handleOps\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint192\",\"name\":\"key\",\"type\":\"uint192\"}],\"name\":\"incrementNonce\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"initCode\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"callData\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"callGasLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"verificationGasLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"preVerificationGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxFeePerGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxPriorityFeePerGas\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"paymasterAndData\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"internalType\":\"struct UserOperation\",\"name\":\"op\",\"type\":\"tuple\"},{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"targetCallData\",\"type\":\"bytes\"}],\"name\":\"simulateHandleOp\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"initCode\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"callData\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"callGasLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"verificationGasLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"preVerificationGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxFeePerGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxPriorityFeePerGas\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"paymasterAndData\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"internalType\":\"struct UserOperation\",\"name\":\"userOp\",\"type\":\"tuple\"}],\"name\":\"simulateValidation\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unlockStake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"withdrawAddress\",\"type\":\"address\"}],\"name\":\"withdrawStake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"withdrawAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"withdrawAmount\",\"type\":\"uint256\"}],\"name\":\"withdrawTo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"FailedOp(uint256,string)\":[{\"params\":{\"opIndex\":\"- index into the array of ops to the failed one (in simulateValidation, this is always zero)\",\"reason\":\"- revert reason      The string starts with a unique code \\\"AAmn\\\", where \\\"m\\\" is \\\"1\\\" for factory, \\\"2\\\" for account and \\\"3\\\" for paymaster issues,      so a failure can be attributed to the correct entity.   Should be caught in off-chain handleOps simulation and not happen on-chain.   Useful for mitigating DoS attempts against batchers or for troubleshooting of factory/account/paymaster reverts.\"}}],\"ValidationResult((uint256,uint256,bool,uint48,uint48,bytes),(uint256,uint256),(uint256,uint256),(uint256,uint256))\":[{\"params\":{\"factoryInfo\":\"stake information about the factory (if any)\",\"paymasterInfo\":\"stake information about the paymaster (if any)\",\"returnInfo\":\"gas and time-range returned values\",\"senderInfo\":\"stake information about the sender\"}}],\"ValidationResultWithAggregation((uint256,uint256,bool,uint48,uint48,bytes),(uint256,uint256),(uint256,uint256),(uint256,uint256),(address,(uint256,uint256)))\":[{\"params\":{\"aggregatorInfo\":\"signature aggregation info (if the account requires signature aggregator)      bundler MUST use it to verify the signature, or reject the UserOperation\",\"factoryInfo\":\"stake information about the factory (if any)\",\"paymasterInfo\":\"stake information about the paymaster (if any)\",\"returnInfo\":\"gas and time-range returned values\",\"senderInfo\":\"stake information about the sender\"}}]},\"events\":{\"AccountDeployed(bytes32,address,address,address)\":{\"params\":{\"factory\":\"the factory used to deploy this account (in the initCode)\",\"paymaster\":\"the paymaster used by this UserOp\",\"sender\":\"the account that is deployed\",\"userOpHash\":\"the userOp that deployed this account. UserOperationEvent will follow.\"}},\"UserOperationRevertReason(bytes32,address,uint256,bytes)\":{\"params\":{\"nonce\":\"the nonce used in the request\",\"revertReason\":\"- the return bytes from the (reverted) call to \\\"callData\\\".\",\"sender\":\"the sender of this request\",\"userOpHash\":\"the request unique identifier.\"}}},\"kind\":\"dev\",\"methods\":{\"addStake(uint32)\":{\"params\":{\"_unstakeDelaySec\":\"the new lock duration before the deposit can be withdrawn.\"}},\"balanceOf(address)\":{\"returns\":{\"_0\":\"the deposit (for gas payment) of the account\"}},\"getDepositInfo(address)\":{\"returns\":{\"info\":\"- full deposit information of given account\"}},\"getNonce(address,uint192)\":{\"params\":{\"key\":\"the high 192 bit of the nonce\",\"sender\":\"the account address\"},\"returns\":{\"nonce\":\"a full nonce to pass for next UserOp with this sender.\"}},\"getSenderAddress(bytes)\":{\"params\":{\"initCode\":\"the constructor code to be passed into the UserOperation.\"}},\"handleAggregatedOps(((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes)[],address,bytes)[],address)\":{\"params\":{\"beneficiary\":\"the address to receive the fees\",\"opsPerAggregator\":\"the operations to execute, grouped by aggregator (or address(0) for no-aggregator accounts)\"}},\"handleOps((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes)[],address)\":{\"params\":{\"beneficiary\":\"the address to receive the fees\",\"ops\":\"the operations to execute\"}},\"simulateHandleOp((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes),address,bytes)\":{\"params\":{\"op\":\"the UserOperation to simulate\",\"target\":\"if nonzero, a target address to call after userop simulation. If called, the targetSuccess and targetResult        are set to the return from that call.\",\"targetCallData\":\"callData to pass to target address\"}},\"simulateValidation((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes))\":{\"details\":\"this method always revert. Successful result is ValidationResult error. other errors are failures.The node must also verify it doesn't use banned opcodes, and that it doesn't reference storage outside the account's data.\",\"params\":{\"userOp\":\"the user operation to validate.\"}},\"withdrawStake(address)\":{\"params\":{\"withdrawAddress\":\"the address to send withdrawn value.\"}},\"withdrawTo(address,uint256)\":{\"params\":{\"withdrawAddress\":\"the address to send withdrawn value.\",\"withdrawAmount\":\"the amount to withdraw.\"}}},\"version\":1},\"userdoc\":{\"errors\":{\"ExecutionResult(uint256,uint256,uint48,uint48,bool,bytes)\":[{\"notice\":\"return value of simulateHandleOp\"}],\"FailedOp(uint256,string)\":[{\"notice\":\"a custom revert error of handleOps, to identify the offending op.  NOTE: if simulateValidation passes successfully, there should be no reason for handleOps to fail on it.\"}],\"SenderAddressResult(address)\":[{\"notice\":\"return value of getSenderAddress\"}],\"SignatureValidationFailed(address)\":[{\"notice\":\"error case when a signature aggregator fails to verify the aggregated signature it had created.\"}],\"ValidationResult((uint256,uint256,bool,uint48,uint48,bytes),(uint256,uint256),(uint256,uint256),(uint256,uint256))\":[{\"notice\":\"Successful result from simulateValidation.\"}],\"ValidationResultWithAggregation((uint256,uint256,bool,uint48,uint48,bytes),(uint256,uint256),(uint256,uint256),(uint256,uint256),(address,(uint256,uint256)))\":[{\"notice\":\"Successful result from simulateValidation, if the account returns a signature aggregator\"}]},\"events\":{\"AccountDeployed(bytes32,address,address,address)\":{\"notice\":\"account \\\"sender\\\" was deployed.\"},\"BeforeExecution()\":{\"notice\":\"an event emitted by handleOps(), before starting the execution loop. any event emitted before this event, is part of the validation.\"},\"SignatureAggregatorChanged(address)\":{\"notice\":\"signature aggregator used by the following UserOperationEvents within this bundle.\"},\"StakeLocked(address,uint256,uint256)\":{\"notice\":\"Emitted when stake or unstake delay are modified\"},\"StakeUnlocked(address,uint256)\":{\"notice\":\"Emitted once a stake is scheduled for withdrawal\"},\"UserOperationRevertReason(bytes32,address,uint256,bytes)\":{\"notice\":\"An event emitted if the UserOperation \\\"callData\\\" reverted with non-zero length\"}},\"kind\":\"user\",\"methods\":{\"addStake(uint32)\":{\"notice\":\"add to the account's stake - amount and delay any pending unstake is first cancelled.\"},\"depositTo(address)\":{\"notice\":\"add to the deposit of the given account\"},\"getNonce(address,uint192)\":{\"notice\":\"Return the next nonce for this sender. Within a given key, the nonce values are sequenced (starting with zero, and incremented by one on each userop) But UserOp with different keys can come with arbitrary order.\"},\"getSenderAddress(bytes)\":{\"notice\":\"Get counterfactual sender address.  Calculate the sender contract address that will be generated by the initCode and salt in the UserOperation. this method always revert, and returns the address in SenderAddressResult error\"},\"getUserOpHash((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes))\":{\"notice\":\"generate a request Id - unique identifier for this request. the request ID is a hash over the content of the userOp (except the signature), the entrypoint and the chainid.\"},\"handleAggregatedOps(((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes)[],address,bytes)[],address)\":{\"notice\":\"Execute a batch of UserOperation with Aggregators\"},\"handleOps((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes)[],address)\":{\"notice\":\"Execute a batch of UserOperation. no signature aggregator is used. if any account requires an aggregator (that is, it returned an aggregator when performing simulateValidation), then handleAggregatedOps() must be used instead.\"},\"incrementNonce(uint192)\":{\"notice\":\"Manually increment the nonce of the sender. This method is exposed just for completeness.. Account does NOT need to call it, neither during validation, nor elsewhere, as the EntryPoint will update the nonce regardless. Possible use-case is call it with various keys to \\\"initialize\\\" their nonces to one, so that future UserOperations will not pay extra for the first transaction with a given key.\"},\"simulateHandleOp((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes),address,bytes)\":{\"notice\":\"simulate full execution of a UserOperation (including both validation and target execution) this method will always revert with \\\"ExecutionResult\\\". it performs full validation of the UserOperation, but ignores signature error. an optional target address is called after the userop succeeds, and its value is returned (before the entire call is reverted) Note that in order to collect the the success/failure of the target call, it must be executed with trace enabled to track the emitted events.\"},\"simulateValidation((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes))\":{\"notice\":\"Simulate a call to account.validateUserOp and paymaster.validatePaymasterUserOp.\"},\"unlockStake()\":{\"notice\":\"attempt to unlock the stake. the value can be withdrawn (using withdrawStake) after the unstake delay.\"},\"withdrawStake(address)\":{\"notice\":\"withdraw from the (unlocked) stake. must first call unlockStake and wait for the unstakeDelay to pass\"},\"withdrawTo(address,uint256)\":{\"notice\":\"withdraw from the deposit.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/smart-contract-wallet/aa-4337/interfaces/IEntryPoint.sol\":\"IEntryPoint\"},\"evmVersion\":\"london\",\"libraries\":{\":__CACHE_BREAKER__\":\"0x00000000d41867734bbee4c6863d9255b2b06ac1\"},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"contracts/smart-contract-wallet/aa-4337/core/Helpers.sol\":{\"keccak256\":\"0x9a220fa7fd433cf4309c5be508907147ad2b0cda5c10867a13da43b0f703cff9\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://062d3a7fe9dcda4ec72e066895c66e189549eae5c9bc886b1d897d1811523219\",\"dweb:/ipfs/Qma6UjdwG5hrMEuKguiT5ccJDjDkju9kVcWBvkHr49JJ6A\"]},\"contracts/smart-contract-wallet/aa-4337/interfaces/IAggregator.sol\":{\"keccak256\":\"0x33265d5eece854fb1ced8d8c418a92367af4c448d6c097edce2dd8d7f78dc504\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://2da963cb3b7ca8186304003c85b95ba373e9168b128adaaf56e7312246586d59\",\"dweb:/ipfs/Qmeo7BBU3XbiEvhoYx5GWxvqc2xgQwyzHT2vNzco9evAD4\"]},\"contracts/smart-contract-wallet/aa-4337/interfaces/IEntryPoint.sol\":{\"keccak256\":\"0xb860cc0782782fec8ba99512c54f18533fec390e799eb5a0178ba3a2cb3c5d4c\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://0b72111c3e4ed7841bdbc2e11eca4387ed4d19de1fe07ff3b00311c4408063db\",\"dweb:/ipfs/QmcNxDZJmfQwL3tKDsinmXJjkBYJFJY6iBG8NnRQG4hH9m\"]},\"contracts/smart-contract-wallet/aa-4337/interfaces/INonceManager.sol\":{\"keccak256\":\"0x85ad9259108e3af788854d30d93ded1e41991e308d01528a017323d4f6b44320\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://5c4a51982f8e35573c800abab27438451beb076ef083ed4009a1c90dbdd9f7cb\",\"dweb:/ipfs/QmdEDxKEBeos4cxrxJ53rfhFgcncHNMqtyQ2GXzKv3ruFv\"]},\"contracts/smart-contract-wallet/aa-4337/interfaces/IStakeManager.sol\":{\"keccak256\":\"0x2837b8aefb7c69b959a2a9435fba865a9275edd5d3f50465fb06e28322a18b8f\",\"license\":\"GPL-3.0-only\",\"urls\":[\"bzz-raw://a1fe1c192e959f4962be11483e2eb872a7d6f5f87d220dff0dde2dbcd6c48553\",\"dweb:/ipfs/QmenW3vP5wnAVVg8rGfwFQV85AJm5j1j7qLCuo89AzzLDB\"]},\"contracts/smart-contract-wallet/aa-4337/interfaces/UserOperation.sol\":{\"keccak256\":\"0x274a05da373e68f76955cc92b9ee554cc24fe82d0c8f5bd5bef271202cf3a09e\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://d4f5e7fe7416e05c65c4c6da3a8acba0f5cc2bb39a2446146c41d5ec75d1bbd6\",\"dweb:/ipfs/QmVXq9Wv9eYziTAN2fqdar1eAGoYEa9Qtz5NmWei88CaAV\"]}},\"version\":1}","devdoc":{"errors":{"FailedOp(uint256,string)":[{"params":{"opIndex":"- index into the array of ops to the failed one (in simulateValidation, this is always zero)","reason":"- revert reason      The string starts with a unique code \"AAmn\", where \"m\" is \"1\" for factory, \"2\" for account and \"3\" for paymaster issues,      so a failure can be attributed to the correct entity.   Should be caught in off-chain handleOps simulation and not happen on-chain.   Useful for mitigating DoS attempts against batchers or for troubleshooting of factory/account/paymaster reverts."}}],"ValidationResult((uint256,uint256,bool,uint48,uint48,bytes),(uint256,uint256),(uint256,uint256),(uint256,uint256))":[{"params":{"factoryInfo":"stake information about the factory (if any)","paymasterInfo":"stake information about the paymaster (if any)","returnInfo":"gas and time-range returned values","senderInfo":"stake information about the sender"}}],"ValidationResultWithAggregation((uint256,uint256,bool,uint48,uint48,bytes),(uint256,uint256),(uint256,uint256),(uint256,uint256),(address,(uint256,uint256)))":[{"params":{"aggregatorInfo":"signature aggregation info (if the account requires signature aggregator)      bundler MUST use it to verify the signature, or reject the UserOperation","factoryInfo":"stake information about the factory (if any)","paymasterInfo":"stake information about the paymaster (if any)","returnInfo":"gas and time-range returned values","senderInfo":"stake information about the sender"}}]},"events":{"AccountDeployed(bytes32,address,address,address)":{"params":{"factory":"the factory used to deploy this account (in the initCode)","paymaster":"the paymaster used by this UserOp","sender":"the account that is deployed","userOpHash":"the userOp that deployed this account. UserOperationEvent will follow."}},"UserOperationRevertReason(bytes32,address,uint256,bytes)":{"params":{"nonce":"the nonce used in the request","revertReason":"- the return bytes from the (reverted) call to \"callData\".","sender":"the sender of this request","userOpHash":"the request unique identifier."}}},"kind":"dev","methods":{"addStake(uint32)":{"params":{"_unstakeDelaySec":"the new lock duration before the deposit can be withdrawn."}},"balanceOf(address)":{"returns":{"_0":"the deposit (for gas payment) of the account"}},"getDepositInfo(address)":{"returns":{"info":"- full deposit information of given account"}},"getNonce(address,uint192)":{"params":{"key":"the high 192 bit of the nonce","sender":"the account address"},"returns":{"nonce":"a full nonce to pass for next UserOp with this sender."}},"getSenderAddress(bytes)":{"params":{"initCode":"the constructor code to be passed into the UserOperation."}},"handleAggregatedOps(((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes)[],address,bytes)[],address)":{"params":{"beneficiary":"the address to receive the fees","opsPerAggregator":"the operations to execute, grouped by aggregator (or address(0) for no-aggregator accounts)"}},"handleOps((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes)[],address)":{"params":{"beneficiary":"the address to receive the fees","ops":"the operations to execute"}},"simulateHandleOp((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes),address,bytes)":{"params":{"op":"the UserOperation to simulate","target":"if nonzero, a target address to call after userop simulation. If called, the targetSuccess and targetResult        are set to the return from that call.","targetCallData":"callData to pass to target address"}},"simulateValidation((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes))":{"details":"this method always revert. Successful result is ValidationResult error. other errors are failures.The node must also verify it doesn't use banned opcodes, and that it doesn't reference storage outside the account's data.","params":{"userOp":"the user operation to validate."}},"withdrawStake(address)":{"params":{"withdrawAddress":"the address to send withdrawn value."}},"withdrawTo(address,uint256)":{"params":{"withdrawAddress":"the address to send withdrawn value.","withdrawAmount":"the amount to withdraw."}}},"version":1},"userdoc":{"errors":{"ExecutionResult(uint256,uint256,uint48,uint48,bool,bytes)":[{"notice":"return value of simulateHandleOp"}],"FailedOp(uint256,string)":[{"notice":"a custom revert error of handleOps, to identify the offending op.  NOTE: if simulateValidation passes successfully, there should be no reason for handleOps to fail on it."}],"SenderAddressResult(address)":[{"notice":"return value of getSenderAddress"}],"SignatureValidationFailed(address)":[{"notice":"error case when a signature aggregator fails to verify the aggregated signature it had created."}],"ValidationResult((uint256,uint256,bool,uint48,uint48,bytes),(uint256,uint256),(uint256,uint256),(uint256,uint256))":[{"notice":"Successful result from simulateValidation."}],"ValidationResultWithAggregation((uint256,uint256,bool,uint48,uint48,bytes),(uint256,uint256),(uint256,uint256),(uint256,uint256),(address,(uint256,uint256)))":[{"notice":"Successful result from simulateValidation, if the account returns a signature aggregator"}]},"events":{"AccountDeployed(bytes32,address,address,address)":{"notice":"account \"sender\" was deployed."},"BeforeExecution()":{"notice":"an event emitted by handleOps(), before starting the execution loop. any event emitted before this event, is part of the validation."},"SignatureAggregatorChanged(address)":{"notice":"signature aggregator used by the following UserOperationEvents within this bundle."},"StakeLocked(address,uint256,uint256)":{"notice":"Emitted when stake or unstake delay are modified"},"StakeUnlocked(address,uint256)":{"notice":"Emitted once a stake is scheduled for withdrawal"},"UserOperationRevertReason(bytes32,address,uint256,bytes)":{"notice":"An event emitted if the UserOperation \"callData\" reverted with non-zero length"}},"kind":"user","methods":{"addStake(uint32)":{"notice":"add to the account's stake - amount and delay any pending unstake is first cancelled."},"depositTo(address)":{"notice":"add to the deposit of the given account"},"getNonce(address,uint192)":{"notice":"Return the next nonce for this sender. Within a given key, the nonce values are sequenced (starting with zero, and incremented by one on each userop) But UserOp with different keys can come with arbitrary order."},"getSenderAddress(bytes)":{"notice":"Get counterfactual sender address.  Calculate the sender contract address that will be generated by the initCode and salt in the UserOperation. this method always revert, and returns the address in SenderAddressResult error"},"getUserOpHash((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes))":{"notice":"generate a request Id - unique identifier for this request. the request ID is a hash over the content of the userOp (except the signature), the entrypoint and the chainid."},"handleAggregatedOps(((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes)[],address,bytes)[],address)":{"notice":"Execute a batch of UserOperation with Aggregators"},"handleOps((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes)[],address)":{"notice":"Execute a batch of UserOperation. no signature aggregator is used. if any account requires an aggregator (that is, it returned an aggregator when performing simulateValidation), then handleAggregatedOps() must be used instead."},"incrementNonce(uint192)":{"notice":"Manually increment the nonce of the sender. This method is exposed just for completeness.. Account does NOT need to call it, neither during validation, nor elsewhere, as the EntryPoint will update the nonce regardless. Possible use-case is call it with various keys to \"initialize\" their nonces to one, so that future UserOperations will not pay extra for the first transaction with a given key."},"simulateHandleOp((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes),address,bytes)":{"notice":"simulate full execution of a UserOperation (including both validation and target execution) this method will always revert with \"ExecutionResult\". it performs full validation of the UserOperation, but ignores signature error. an optional target address is called after the userop succeeds, and its value is returned (before the entire call is reverted) Note that in order to collect the the success/failure of the target call, it must be executed with trace enabled to track the emitted events."},"simulateValidation((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes))":{"notice":"Simulate a call to account.validateUserOp and paymaster.validatePaymasterUserOp."},"unlockStake()":{"notice":"attempt to unlock the stake. the value can be withdrawn (using withdrawStake) after the unstake delay."},"withdrawStake(address)":{"notice":"withdraw from the (unlocked) stake. must first call unlockStake and wait for the unstakeDelay to pass"},"withdrawTo(address,uint256)":{"notice":"withdraw from the deposit."}},"version":1},"storageLayout":{"storage":[],"types":null},"evm":{"legacyAssembly":null,"assembly":null,"bytecode":null,"methodIdentifiers":{"addStake(uint32)":"0396cb60","balanceOf(address)":"70a08231","depositTo(address)":"b760faf9","getDepositInfo(address)":"5287ce12","getNonce(address,uint192)":"35567e1a","getSenderAddress(bytes)":"9b249f69","getUserOpHash((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes))":"a6193531","handleAggregatedOps(((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes)[],address,bytes)[],address)":"4b1d7cf5","handleOps((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes)[],address)":"1fad948c","incrementNonce(uint192)":"0bd28e3b","simulateHandleOp((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes),address,bytes)":"d6383f94","simulateValidation((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes))":"ee219423","unlockStake()":"bb9fe6bf","withdrawStake(address)":"c23a5cea","withdrawTo(address,uint256)":"205c2878"}},"irOptimized":""}},"contracts/smart-contract-wallet/aa-4337/interfaces/INonceManager.sol":{"INonceManager":{"abi":[{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint192","name":"key","type":"uint192"}],"name":"getNonce","outputs":[{"internalType":"uint256","name":"nonce","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint192","name":"key","type":"uint192"}],"name":"incrementNonce","outputs":[],"stateMutability":"nonpayable","type":"function"}],"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint192\",\"name\":\"key\",\"type\":\"uint192\"}],\"name\":\"getNonce\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint192\",\"name\":\"key\",\"type\":\"uint192\"}],\"name\":\"incrementNonce\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"getNonce(address,uint192)\":{\"params\":{\"key\":\"the high 192 bit of the nonce\",\"sender\":\"the account address\"},\"returns\":{\"nonce\":\"a full nonce to pass for next UserOp with this sender.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"getNonce(address,uint192)\":{\"notice\":\"Return the next nonce for this sender. Within a given key, the nonce values are sequenced (starting with zero, and incremented by one on each userop) But UserOp with different keys can come with arbitrary order.\"},\"incrementNonce(uint192)\":{\"notice\":\"Manually increment the nonce of the sender. This method is exposed just for completeness.. Account does NOT need to call it, neither during validation, nor elsewhere, as the EntryPoint will update the nonce regardless. Possible use-case is call it with various keys to \\\"initialize\\\" their nonces to one, so that future UserOperations will not pay extra for the first transaction with a given key.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/smart-contract-wallet/aa-4337/interfaces/INonceManager.sol\":\"INonceManager\"},\"evmVersion\":\"london\",\"libraries\":{\":__CACHE_BREAKER__\":\"0x00000000d41867734bbee4c6863d9255b2b06ac1\"},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"contracts/smart-contract-wallet/aa-4337/interfaces/INonceManager.sol\":{\"keccak256\":\"0x85ad9259108e3af788854d30d93ded1e41991e308d01528a017323d4f6b44320\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://5c4a51982f8e35573c800abab27438451beb076ef083ed4009a1c90dbdd9f7cb\",\"dweb:/ipfs/QmdEDxKEBeos4cxrxJ53rfhFgcncHNMqtyQ2GXzKv3ruFv\"]}},\"version\":1}","devdoc":{"kind":"dev","methods":{"getNonce(address,uint192)":{"params":{"key":"the high 192 bit of the nonce","sender":"the account address"},"returns":{"nonce":"a full nonce to pass for next UserOp with this sender."}}},"version":1},"userdoc":{"kind":"user","methods":{"getNonce(address,uint192)":{"notice":"Return the next nonce for this sender. Within a given key, the nonce values are sequenced (starting with zero, and incremented by one on each userop) But UserOp with different keys can come with arbitrary order."},"incrementNonce(uint192)":{"notice":"Manually increment the nonce of the sender. This method is exposed just for completeness.. Account does NOT need to call it, neither during validation, nor elsewhere, as the EntryPoint will update the nonce regardless. Possible use-case is call it with various keys to \"initialize\" their nonces to one, so that future UserOperations will not pay extra for the first transaction with a given key."}},"version":1},"storageLayout":{"storage":[],"types":null},"evm":{"legacyAssembly":null,"assembly":null,"bytecode":null,"methodIdentifiers":{"getNonce(address,uint192)":"35567e1a","incrementNonce(uint192)":"0bd28e3b"}},"irOptimized":""}},"contracts/smart-contract-wallet/aa-4337/interfaces/IPaymaster.sol":{"IPaymaster":{"abi":[{"inputs":[{"internalType":"enum IPaymaster.PostOpMode","name":"mode","type":"uint8"},{"internalType":"bytes","name":"context","type":"bytes"},{"internalType":"uint256","name":"actualGasCost","type":"uint256"}],"name":"postOp","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"components":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"nonce","type":"uint256"},{"internalType":"bytes","name":"initCode","type":"bytes"},{"internalType":"bytes","name":"callData","type":"bytes"},{"internalType":"uint256","name":"callGasLimit","type":"uint256"},{"internalType":"uint256","name":"verificationGasLimit","type":"uint256"},{"internalType":"uint256","name":"preVerificationGas","type":"uint256"},{"internalType":"uint256","name":"maxFeePerGas","type":"uint256"},{"internalType":"uint256","name":"maxPriorityFeePerGas","type":"uint256"},{"internalType":"bytes","name":"paymasterAndData","type":"bytes"},{"internalType":"bytes","name":"signature","type":"bytes"}],"internalType":"struct UserOperation","name":"userOp","type":"tuple"},{"internalType":"bytes32","name":"userOpHash","type":"bytes32"},{"internalType":"uint256","name":"maxCost","type":"uint256"}],"name":"validatePaymasterUserOp","outputs":[{"internalType":"bytes","name":"context","type":"bytes"},{"internalType":"uint256","name":"validationData","type":"uint256"}],"stateMutability":"nonpayable","type":"function"}],"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"enum IPaymaster.PostOpMode\",\"name\":\"mode\",\"type\":\"uint8\"},{\"internalType\":\"bytes\",\"name\":\"context\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"actualGasCost\",\"type\":\"uint256\"}],\"name\":\"postOp\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"initCode\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"callData\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"callGasLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"verificationGasLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"preVerificationGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxFeePerGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxPriorityFeePerGas\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"paymasterAndData\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"internalType\":\"struct UserOperation\",\"name\":\"userOp\",\"type\":\"tuple\"},{\"internalType\":\"bytes32\",\"name\":\"userOpHash\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"maxCost\",\"type\":\"uint256\"}],\"name\":\"validatePaymasterUserOp\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"context\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"validationData\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"postOp(uint8,bytes,uint256)\":{\"params\":{\"actualGasCost\":\"- actual gas used so far (without this postOp call).\",\"context\":\"- the context value returned by validatePaymasterUserOp\",\"mode\":\"enum with the following options:      opSucceeded - user operation succeeded.      opReverted  - user op reverted. still has to pay for gas.      postOpReverted - user op succeeded, but caused postOp (in mode=opSucceeded) to revert.                       Now this is the 2nd call, after user's op was deliberately reverted.\"}},\"validatePaymasterUserOp((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes),bytes32,uint256)\":{\"params\":{\"maxCost\":\"the maximum cost of this transaction (based on maximum gas and gas price from userOp)\",\"userOp\":\"the user operation\",\"userOpHash\":\"hash of the user's request data.\"},\"returns\":{\"context\":\"value to send to a postOp      zero length to signify postOp is not required.\",\"validationData\":\"signature and time-range of this operation, encoded the same as the return value of validateUserOperation      <20-byte> sigAuthorizer - 0 for valid signature, 1 to mark signature failure,         otherwise, an address of an \\\"authorizer\\\" contract.      <6-byte> validUntil - last timestamp this operation is valid. 0 for \\\"indefinite\\\"      <6-byte> validAfter - first timestamp this operation is valid      Note that the validation code cannot use block.timestamp (or block.number) directly.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"postOp(uint8,bytes,uint256)\":{\"notice\":\"post-operation handler. Must verify sender is the entryPoint\"},\"validatePaymasterUserOp((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes),bytes32,uint256)\":{\"notice\":\"payment validation: check if paymaster agrees to pay. Must verify sender is the entryPoint. Revert to reject this request. Note that bundlers will reject this method if it changes the state, unless the paymaster is trusted (whitelisted) The paymaster pre-pays using its deposit, and receive back a refund after the postOp method returns.\"}},\"notice\":\"the interface exposed by a paymaster contract, who agrees to pay the gas for user's operations. a paymaster must hold a stake to cover the required entrypoint stake and also the gas for the transaction.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/smart-contract-wallet/aa-4337/interfaces/IPaymaster.sol\":\"IPaymaster\"},\"evmVersion\":\"london\",\"libraries\":{\":__CACHE_BREAKER__\":\"0x00000000d41867734bbee4c6863d9255b2b06ac1\"},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"contracts/smart-contract-wallet/aa-4337/core/Helpers.sol\":{\"keccak256\":\"0x9a220fa7fd433cf4309c5be508907147ad2b0cda5c10867a13da43b0f703cff9\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://062d3a7fe9dcda4ec72e066895c66e189549eae5c9bc886b1d897d1811523219\",\"dweb:/ipfs/Qma6UjdwG5hrMEuKguiT5ccJDjDkju9kVcWBvkHr49JJ6A\"]},\"contracts/smart-contract-wallet/aa-4337/interfaces/IPaymaster.sol\":{\"keccak256\":\"0x1120f4353977dfc9acbb928f264fd9e5565720e3ffe0e43e905352ea631d5b88\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://c2c7b64d608d929ef847f611b4e1f568358cf5460959b0d8ad97ffa328f67d8e\",\"dweb:/ipfs/QmeKcmE9MKS1au7uvK1ioMayQqre9yY3KE9FvHE3wA7boP\"]},\"contracts/smart-contract-wallet/aa-4337/interfaces/UserOperation.sol\":{\"keccak256\":\"0x274a05da373e68f76955cc92b9ee554cc24fe82d0c8f5bd5bef271202cf3a09e\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://d4f5e7fe7416e05c65c4c6da3a8acba0f5cc2bb39a2446146c41d5ec75d1bbd6\",\"dweb:/ipfs/QmVXq9Wv9eYziTAN2fqdar1eAGoYEa9Qtz5NmWei88CaAV\"]}},\"version\":1}","devdoc":{"kind":"dev","methods":{"postOp(uint8,bytes,uint256)":{"params":{"actualGasCost":"- actual gas used so far (without this postOp call).","context":"- the context value returned by validatePaymasterUserOp","mode":"enum with the following options:      opSucceeded - user operation succeeded.      opReverted  - user op reverted. still has to pay for gas.      postOpReverted - user op succeeded, but caused postOp (in mode=opSucceeded) to revert.                       Now this is the 2nd call, after user's op was deliberately reverted."}},"validatePaymasterUserOp((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes),bytes32,uint256)":{"params":{"maxCost":"the maximum cost of this transaction (based on maximum gas and gas price from userOp)","userOp":"the user operation","userOpHash":"hash of the user's request data."},"returns":{"context":"value to send to a postOp      zero length to signify postOp is not required.","validationData":"signature and time-range of this operation, encoded the same as the return value of validateUserOperation      <20-byte> sigAuthorizer - 0 for valid signature, 1 to mark signature failure,         otherwise, an address of an \"authorizer\" contract.      <6-byte> validUntil - last timestamp this operation is valid. 0 for \"indefinite\"      <6-byte> validAfter - first timestamp this operation is valid      Note that the validation code cannot use block.timestamp (or block.number) directly."}}},"version":1},"userdoc":{"kind":"user","methods":{"postOp(uint8,bytes,uint256)":{"notice":"post-operation handler. Must verify sender is the entryPoint"},"validatePaymasterUserOp((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes),bytes32,uint256)":{"notice":"payment validation: check if paymaster agrees to pay. Must verify sender is the entryPoint. Revert to reject this request. Note that bundlers will reject this method if it changes the state, unless the paymaster is trusted (whitelisted) The paymaster pre-pays using its deposit, and receive back a refund after the postOp method returns."}},"notice":"the interface exposed by a paymaster contract, who agrees to pay the gas for user's operations. a paymaster must hold a stake to cover the required entrypoint stake and also the gas for the transaction.","version":1},"storageLayout":{"storage":[],"types":null},"evm":{"legacyAssembly":null,"assembly":null,"bytecode":null,"methodIdentifiers":{"postOp(uint8,bytes,uint256)":"a9a23409","validatePaymasterUserOp((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes),bytes32,uint256)":"f465c77e"}},"irOptimized":""}},"contracts/smart-contract-wallet/aa-4337/interfaces/IStakeManager.sol":{"IStakeManager":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":false,"internalType":"uint256","name":"totalDeposit","type":"uint256"}],"name":"Deposited","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":false,"internalType":"uint256","name":"totalStaked","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"unstakeDelaySec","type":"uint256"}],"name":"StakeLocked","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":false,"internalType":"uint256","name":"withdrawTime","type":"uint256"}],"name":"StakeUnlocked","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":false,"internalType":"address","name":"withdrawAddress","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"StakeWithdrawn","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":false,"internalType":"address","name":"withdrawAddress","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"Withdrawn","type":"event"},{"inputs":[{"internalType":"uint32","name":"_unstakeDelaySec","type":"uint32"}],"name":"addStake","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"depositTo","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"getDepositInfo","outputs":[{"components":[{"internalType":"uint112","name":"deposit","type":"uint112"},{"internalType":"bool","name":"staked","type":"bool"},{"internalType":"uint112","name":"stake","type":"uint112"},{"internalType":"uint32","name":"unstakeDelaySec","type":"uint32"},{"internalType":"uint48","name":"withdrawTime","type":"uint48"}],"internalType":"struct IStakeManager.DepositInfo","name":"info","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"unlockStake","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address payable","name":"withdrawAddress","type":"address"}],"name":"withdrawStake","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address payable","name":"withdrawAddress","type":"address"},{"internalType":"uint256","name":"withdrawAmount","type":"uint256"}],"name":"withdrawTo","outputs":[],"stateMutability":"nonpayable","type":"function"}],"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"totalDeposit\",\"type\":\"uint256\"}],\"name\":\"Deposited\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"totalStaked\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"unstakeDelaySec\",\"type\":\"uint256\"}],\"name\":\"StakeLocked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"withdrawTime\",\"type\":\"uint256\"}],\"name\":\"StakeUnlocked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"withdrawAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"StakeWithdrawn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"withdrawAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Withdrawn\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"_unstakeDelaySec\",\"type\":\"uint32\"}],\"name\":\"addStake\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"depositTo\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"getDepositInfo\",\"outputs\":[{\"components\":[{\"internalType\":\"uint112\",\"name\":\"deposit\",\"type\":\"uint112\"},{\"internalType\":\"bool\",\"name\":\"staked\",\"type\":\"bool\"},{\"internalType\":\"uint112\",\"name\":\"stake\",\"type\":\"uint112\"},{\"internalType\":\"uint32\",\"name\":\"unstakeDelaySec\",\"type\":\"uint32\"},{\"internalType\":\"uint48\",\"name\":\"withdrawTime\",\"type\":\"uint48\"}],\"internalType\":\"struct IStakeManager.DepositInfo\",\"name\":\"info\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unlockStake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"withdrawAddress\",\"type\":\"address\"}],\"name\":\"withdrawStake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"withdrawAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"withdrawAmount\",\"type\":\"uint256\"}],\"name\":\"withdrawTo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"addStake(uint32)\":{\"params\":{\"_unstakeDelaySec\":\"the new lock duration before the deposit can be withdrawn.\"}},\"balanceOf(address)\":{\"returns\":{\"_0\":\"the deposit (for gas payment) of the account\"}},\"getDepositInfo(address)\":{\"returns\":{\"info\":\"- full deposit information of given account\"}},\"withdrawStake(address)\":{\"params\":{\"withdrawAddress\":\"the address to send withdrawn value.\"}},\"withdrawTo(address,uint256)\":{\"params\":{\"withdrawAddress\":\"the address to send withdrawn value.\",\"withdrawAmount\":\"the amount to withdraw.\"}}},\"version\":1},\"userdoc\":{\"events\":{\"StakeLocked(address,uint256,uint256)\":{\"notice\":\"Emitted when stake or unstake delay are modified\"},\"StakeUnlocked(address,uint256)\":{\"notice\":\"Emitted once a stake is scheduled for withdrawal\"}},\"kind\":\"user\",\"methods\":{\"addStake(uint32)\":{\"notice\":\"add to the account's stake - amount and delay any pending unstake is first cancelled.\"},\"depositTo(address)\":{\"notice\":\"add to the deposit of the given account\"},\"unlockStake()\":{\"notice\":\"attempt to unlock the stake. the value can be withdrawn (using withdrawStake) after the unstake delay.\"},\"withdrawStake(address)\":{\"notice\":\"withdraw from the (unlocked) stake. must first call unlockStake and wait for the unstakeDelay to pass\"},\"withdrawTo(address,uint256)\":{\"notice\":\"withdraw from the deposit.\"}},\"notice\":\"manage deposits and stakes. deposit is just a balance used to pay for UserOperations (either by a paymaster or an account) stake is value locked for at least \\\"unstakeDelay\\\" by the staked entity.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/smart-contract-wallet/aa-4337/interfaces/IStakeManager.sol\":\"IStakeManager\"},\"evmVersion\":\"london\",\"libraries\":{\":__CACHE_BREAKER__\":\"0x00000000d41867734bbee4c6863d9255b2b06ac1\"},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"contracts/smart-contract-wallet/aa-4337/interfaces/IStakeManager.sol\":{\"keccak256\":\"0x2837b8aefb7c69b959a2a9435fba865a9275edd5d3f50465fb06e28322a18b8f\",\"license\":\"GPL-3.0-only\",\"urls\":[\"bzz-raw://a1fe1c192e959f4962be11483e2eb872a7d6f5f87d220dff0dde2dbcd6c48553\",\"dweb:/ipfs/QmenW3vP5wnAVVg8rGfwFQV85AJm5j1j7qLCuo89AzzLDB\"]}},\"version\":1}","devdoc":{"kind":"dev","methods":{"addStake(uint32)":{"params":{"_unstakeDelaySec":"the new lock duration before the deposit can be withdrawn."}},"balanceOf(address)":{"returns":{"_0":"the deposit (for gas payment) of the account"}},"getDepositInfo(address)":{"returns":{"info":"- full deposit information of given account"}},"withdrawStake(address)":{"params":{"withdrawAddress":"the address to send withdrawn value."}},"withdrawTo(address,uint256)":{"params":{"withdrawAddress":"the address to send withdrawn value.","withdrawAmount":"the amount to withdraw."}}},"version":1},"userdoc":{"events":{"StakeLocked(address,uint256,uint256)":{"notice":"Emitted when stake or unstake delay are modified"},"StakeUnlocked(address,uint256)":{"notice":"Emitted once a stake is scheduled for withdrawal"}},"kind":"user","methods":{"addStake(uint32)":{"notice":"add to the account's stake - amount and delay any pending unstake is first cancelled."},"depositTo(address)":{"notice":"add to the deposit of the given account"},"unlockStake()":{"notice":"attempt to unlock the stake. the value can be withdrawn (using withdrawStake) after the unstake delay."},"withdrawStake(address)":{"notice":"withdraw from the (unlocked) stake. must first call unlockStake and wait for the unstakeDelay to pass"},"withdrawTo(address,uint256)":{"notice":"withdraw from the deposit."}},"notice":"manage deposits and stakes. deposit is just a balance used to pay for UserOperations (either by a paymaster or an account) stake is value locked for at least \"unstakeDelay\" by the staked entity.","version":1},"storageLayout":{"storage":[],"types":null},"evm":{"legacyAssembly":null,"assembly":null,"bytecode":null,"methodIdentifiers":{"addStake(uint32)":"0396cb60","balanceOf(address)":"70a08231","depositTo(address)":"b760faf9","getDepositInfo(address)":"5287ce12","unlockStake()":"bb9fe6bf","withdrawStake(address)":"c23a5cea","withdrawTo(address,uint256)":"205c2878"}},"irOptimized":""}},"contracts/smart-contract-wallet/aa-4337/interfaces/UserOperation.sol":{"UserOperationLib":{"abi":[],"metadata":{"optimizer_settings":"M3B3","solc_metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Utility functions helpful when working with UserOperation structs.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/smart-contract-wallet/aa-4337/interfaces/UserOperation.sol\":\"UserOperationLib\"},\"evmVersion\":\"london\",\"libraries\":{\":__CACHE_BREAKER__\":\"0x00000000d41867734bbee4c6863d9255b2b06ac1\"},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"contracts/smart-contract-wallet/aa-4337/core/Helpers.sol\":{\"keccak256\":\"0x9a220fa7fd433cf4309c5be508907147ad2b0cda5c10867a13da43b0f703cff9\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://062d3a7fe9dcda4ec72e066895c66e189549eae5c9bc886b1d897d1811523219\",\"dweb:/ipfs/Qma6UjdwG5hrMEuKguiT5ccJDjDkju9kVcWBvkHr49JJ6A\"]},\"contracts/smart-contract-wallet/aa-4337/interfaces/UserOperation.sol\":{\"keccak256\":\"0x274a05da373e68f76955cc92b9ee554cc24fe82d0c8f5bd5bef271202cf3a09e\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://d4f5e7fe7416e05c65c4c6da3a8acba0f5cc2bb39a2446146c41d5ec75d1bbd6\",\"dweb:/ipfs/QmVXq9Wv9eYziTAN2fqdar1eAGoYEa9Qtz5NmWei88CaAV\"]}},\"version\":1}","zk_version":"1.3.10"},"devdoc":{"kind":"dev","methods":{},"version":1},"userdoc":{"kind":"user","methods":{},"notice":"Utility functions helpful when working with UserOperation structs.","version":1},"storageLayout":{"storage":[],"types":null},"evm":{"legacyAssembly":null,"assembly":"\t.text\n\t.file\t\"UserOperation.sol:UserOperationLib\"\n\t.globl\t__entry\n__entry:\n.func_begin0:\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB0_2\n\tadd\t128, r0, r1\n\tst.1\t64, r1\n\tcontext.get_context_u128\tr1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_2\n\tadd\t32, r0, r1\n\tst.2\t256, r1\n\tst.2\t288, r0\n\tadd\t@CPI0_0[0], r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_2:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end0:\n\n\t.note.GNU-stack\n\t.rodata\nCPI0_0:\n\t.cell 53919893334301279589334030174039261352344891250716429051063678533632\n","bytecode":{"object":"00000001012001900000000c0000613d0000008001000039000000400010043f0000000001000416000000000110004c0000000c0000c13d00000020010000390000010000100443000001200000044300000005010000410000000f0001042e000000000100001900000010000104300000000e000004320000000f0001042e00000010000104300000000000000000000000000000000000000000000000000000000200000000000000000000000000000040000001000000000000000000f044468c513438dcfca8c4b4693f4a8c1ac22b85458ccbe5d650172d686325e6"},"methodIdentifiers":{}},"irOptimized":"/// @use-src 12:\"contracts/smart-contract-wallet/aa-4337/interfaces/UserOperation.sol\"\nobject \"UserOperationLib_3932\" {\n    code {\n        {\n            /// @src 12:1532:3876  \"library UserOperationLib {...\"\n            let _1 := memoryguard(0x80)\n            mstore(64, _1)\n            if callvalue() { revert(0, 0) }\n            let _2 := datasize(\"UserOperationLib_3932_deployed\")\n            codecopy(_1, dataoffset(\"UserOperationLib_3932_deployed\"), _2)\n            setimmutable(_1, \"library_deploy_address\", address())\n            return(_1, _2)\n        }\n    }\n    /// @use-src 12:\"contracts/smart-contract-wallet/aa-4337/interfaces/UserOperation.sol\"\n    object \"UserOperationLib_3932_deployed\" {\n        code {\n            {\n                /// @src 12:1532:3876  \"library UserOperationLib {...\"\n                revert(0, 0)\n            }\n        }\n        data \".metadata\" hex\"a2646970667358221220b50708dfd59f34f4679138727b2f0d2eb26c3baaf829d63409a667c7ef58a6c964736f6c63430008110033\"\n    }\n}\n","hash":"010000076dabb00916fcdb8412bf57d459d60057fe5c37842182c92d0faf1e76","factoryDependencies":{}}},"contracts/smart-contract-wallet/aa-4337/test/MaliciousAccount.sol":{"MaliciousAccount":{"abi":[{"inputs":[{"internalType":"contract IEntryPoint","name":"_ep","type":"address"}],"stateMutability":"payable","type":"constructor"},{"inputs":[{"components":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"nonce","type":"uint256"},{"internalType":"bytes","name":"initCode","type":"bytes"},{"internalType":"bytes","name":"callData","type":"bytes"},{"internalType":"uint256","name":"callGasLimit","type":"uint256"},{"internalType":"uint256","name":"verificationGasLimit","type":"uint256"},{"internalType":"uint256","name":"preVerificationGas","type":"uint256"},{"internalType":"uint256","name":"maxFeePerGas","type":"uint256"},{"internalType":"uint256","name":"maxPriorityFeePerGas","type":"uint256"},{"internalType":"bytes","name":"paymasterAndData","type":"bytes"},{"internalType":"bytes","name":"signature","type":"bytes"}],"internalType":"struct UserOperation","name":"userOp","type":"tuple"},{"internalType":"bytes32","name":"","type":"bytes32"},{"internalType":"uint256","name":"missingAccountFunds","type":"uint256"}],"name":"validateUserOp","outputs":[{"internalType":"uint256","name":"validationData","type":"uint256"}],"stateMutability":"nonpayable","type":"function"}],"metadata":{"optimizer_settings":"M3B3","solc_metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract IEntryPoint\",\"name\":\"_ep\",\"type\":\"address\"}],\"stateMutability\":\"payable\",\"type\":\"constructor\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"initCode\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"callData\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"callGasLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"verificationGasLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"preVerificationGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxFeePerGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxPriorityFeePerGas\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"paymasterAndData\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"internalType\":\"struct UserOperation\",\"name\":\"userOp\",\"type\":\"tuple\"},{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"missingAccountFunds\",\"type\":\"uint256\"}],\"name\":\"validateUserOp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"validationData\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/smart-contract-wallet/aa-4337/test/MaliciousAccount.sol\":\"MaliciousAccount\"},\"evmVersion\":\"london\",\"libraries\":{\":__CACHE_BREAKER__\":\"0x00000000d41867734bbee4c6863d9255b2b06ac1\"},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0x190dd6f8d592b7e4e930feb7f4313aeb8e1c4ad3154c27ce1cf6a512fc30d8cc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ce8dfb62d0c4fa260d6eec8f1cd47f5f2a044e11bde5b31d18072fa6e7d9010\",\"dweb:/ipfs/QmTyFztU3tLEcEDnqqiaW4UJetqsU77LXc6pjc9oTXCK5u\"]},\"contracts/smart-contract-wallet/aa-4337/core/EntryPoint.sol\":{\"keccak256\":\"0x323374fcf0b4c042e6e5d313bc90f024de2b81e65cd7f2e9a85ac7e1bba4af58\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://fa0d1e2d0e3ef27a142bcaf529097fcd1e990708298d127747137362f245f993\",\"dweb:/ipfs/QmTa3Xn3Swntry5gQcNMLfHuJwYB5oRjyGma28xr6jnvao\"]},\"contracts/smart-contract-wallet/aa-4337/core/Helpers.sol\":{\"keccak256\":\"0x9a220fa7fd433cf4309c5be508907147ad2b0cda5c10867a13da43b0f703cff9\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://062d3a7fe9dcda4ec72e066895c66e189549eae5c9bc886b1d897d1811523219\",\"dweb:/ipfs/Qma6UjdwG5hrMEuKguiT5ccJDjDkju9kVcWBvkHr49JJ6A\"]},\"contracts/smart-contract-wallet/aa-4337/core/NonceManager.sol\":{\"keccak256\":\"0xb61b89724c3d8e361910e745e69f2e83512d9c3e6691a7e550df1cc926ad96e7\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://83afddfa7d12f7ea862ad3951ae70ece7cc4cb222e3971ec4a118db6b7a5ca60\",\"dweb:/ipfs/QmVtFd18gS5LHDPE4BVEVvj2vq7WwNcZEKGw7FCT3sTM2b\"]},\"contracts/smart-contract-wallet/aa-4337/core/SenderCreator.sol\":{\"keccak256\":\"0xebe195e44b31f1e12ab82a1b5007d03780c0a5af2f4dccad6053909e70e17c98\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://1df2e3a394b811e8a84ac0de7197535d2d7b8c6b755e441565543e153390b489\",\"dweb:/ipfs/Qmb9WBntoeqMZeBGr6twCfwx2nDvriBn52qLBJue2n6ucd\"]},\"contracts/smart-contract-wallet/aa-4337/core/StakeManager.sol\":{\"keccak256\":\"0x1b2c921c3c605cf70a9b5acdec6d376fae8ffb2d1347e6004c50b0c5889062ae\",\"license\":\"GPL-3.0-only\",\"urls\":[\"bzz-raw://2b2915672ea26b03fcf8b434e823e7abc57db2e03b24c24f53e8839a861e3587\",\"dweb:/ipfs/QmTxKk5pGSdHfeA2xSfwKsxpAiX6bLaNeQUeH9H2V7smKA\"]},\"contracts/smart-contract-wallet/aa-4337/interfaces/IAccount.sol\":{\"keccak256\":\"0xfff631110ad8e5f3f16308fa209a6cd0baafd60e7df0c02816cb95dd03d45a51\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://2ad40e618887ce68aca26b9d75d53485063917b85c782a9ce3498b824cc22fc0\",\"dweb:/ipfs/Qmb4mxgpjHsJYRaj93qBethXFdio5K1zJw5QznJFwsQuG7\"]},\"contracts/smart-contract-wallet/aa-4337/interfaces/IAggregator.sol\":{\"keccak256\":\"0x33265d5eece854fb1ced8d8c418a92367af4c448d6c097edce2dd8d7f78dc504\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://2da963cb3b7ca8186304003c85b95ba373e9168b128adaaf56e7312246586d59\",\"dweb:/ipfs/Qmeo7BBU3XbiEvhoYx5GWxvqc2xgQwyzHT2vNzco9evAD4\"]},\"contracts/smart-contract-wallet/aa-4337/interfaces/IEntryPoint.sol\":{\"keccak256\":\"0xb860cc0782782fec8ba99512c54f18533fec390e799eb5a0178ba3a2cb3c5d4c\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://0b72111c3e4ed7841bdbc2e11eca4387ed4d19de1fe07ff3b00311c4408063db\",\"dweb:/ipfs/QmcNxDZJmfQwL3tKDsinmXJjkBYJFJY6iBG8NnRQG4hH9m\"]},\"contracts/smart-contract-wallet/aa-4337/interfaces/INonceManager.sol\":{\"keccak256\":\"0x85ad9259108e3af788854d30d93ded1e41991e308d01528a017323d4f6b44320\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://5c4a51982f8e35573c800abab27438451beb076ef083ed4009a1c90dbdd9f7cb\",\"dweb:/ipfs/QmdEDxKEBeos4cxrxJ53rfhFgcncHNMqtyQ2GXzKv3ruFv\"]},\"contracts/smart-contract-wallet/aa-4337/interfaces/IPaymaster.sol\":{\"keccak256\":\"0x1120f4353977dfc9acbb928f264fd9e5565720e3ffe0e43e905352ea631d5b88\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://c2c7b64d608d929ef847f611b4e1f568358cf5460959b0d8ad97ffa328f67d8e\",\"dweb:/ipfs/QmeKcmE9MKS1au7uvK1ioMayQqre9yY3KE9FvHE3wA7boP\"]},\"contracts/smart-contract-wallet/aa-4337/interfaces/IStakeManager.sol\":{\"keccak256\":\"0x2837b8aefb7c69b959a2a9435fba865a9275edd5d3f50465fb06e28322a18b8f\",\"license\":\"GPL-3.0-only\",\"urls\":[\"bzz-raw://a1fe1c192e959f4962be11483e2eb872a7d6f5f87d220dff0dde2dbcd6c48553\",\"dweb:/ipfs/QmenW3vP5wnAVVg8rGfwFQV85AJm5j1j7qLCuo89AzzLDB\"]},\"contracts/smart-contract-wallet/aa-4337/interfaces/UserOperation.sol\":{\"keccak256\":\"0x274a05da373e68f76955cc92b9ee554cc24fe82d0c8f5bd5bef271202cf3a09e\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://d4f5e7fe7416e05c65c4c6da3a8acba0f5cc2bb39a2446146c41d5ec75d1bbd6\",\"dweb:/ipfs/QmVXq9Wv9eYziTAN2fqdar1eAGoYEa9Qtz5NmWei88CaAV\"]},\"contracts/smart-contract-wallet/aa-4337/test/MaliciousAccount.sol\":{\"keccak256\":\"0x85770b9a3e2518463fd3f59932e8c7fc5f1913ac6b0c8a60ed7ce696d59219e7\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://548e7e6d70c8202798b164842bbacc975db167acbb0e443ad8c31969330fef2f\",\"dweb:/ipfs/QmTVhxc9zpFGtCxKhJQBzSMFDK4ExTFZ7mhK6DuFuUuuaM\"]},\"contracts/smart-contract-wallet/aa-4337/utils/Exec.sol\":{\"keccak256\":\"0x699f458b342e39a64c8b364cfa9fdeec630f2c2fe71dd0ec27ea3e8a77dd484e\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://cd61e0bc8694f6a857dae1d9cb84e4f06f925fd42792f29cf48ebe240b64bc52\",\"dweb:/ipfs/QmWKdcY6YdqGaxieyFzBg54MqymrHDLh6JcG3XxrQaWqsL\"]}},\"version\":1}","zk_version":"1.3.10"},"devdoc":{"kind":"dev","methods":{},"version":1},"userdoc":{"kind":"user","methods":{},"version":1},"storageLayout":{"storage":[{"astId":3942,"contract":"contracts/smart-contract-wallet/aa-4337/test/MaliciousAccount.sol:MaliciousAccount","label":"ep","offset":0,"slot":"0","type":"t_contract(IEntryPoint)3576"}],"types":{"t_contract(IEntryPoint)3576":{"encoding":"inplace","label":"contract IEntryPoint","numberOfBytes":"20"}}},"evm":{"legacyAssembly":null,"assembly":"\t.text\n\t.file\t\"MaliciousAccount.sol:MaliciousAccount\"\n\t.globl\t__entry\n__entry:\n.func_begin0:\n\tnop\tstack+=[5]\n\tptr.add\tr1, r0, stack[@ptr_calldata]\n\tshr.s\t96, r1, r1\n\tand\t@CPI0_0[0], r1, stack[@calldatasize]\n\tand\t@CPI0_0[0], r1, r1\n\tadd\t0, r0, stack[@returndatasize]\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB0_1\n\tadd\t128, r0, r7\n\tst.1\t64, r7\n\tadd\tstack[@calldatasize], r0, r1\n\tsub.s!\t4, r1, r1\n\tjump.lt\t@.BB0_6\n\tptr.add\tstack[@ptr_calldata], r0, r1\n\tld\tr1, r1\n\tand\t@CPI0_5[0], r1, r1\n\tsub.s!\t@CPI0_6[0], r1, r1\n\tjump.ne\t@.BB0_6\n\tcontext.get_context_u128\tr1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_6\n\tadd\tstack[@calldatasize], r0, r1\n\tsub.s\t4, r1, r2\n\tadd\t@CPI0_7[0], r0, r3\n\tsub.s!\t96, r2, r4\n\tadd\t0, r0, r4\n\tadd.lt\tr3, r0, r4\n\tand\t@CPI0_7[0], r2, r2\n\tsub.s!\t0, r2, r5\n\tadd.le\t0, r0, r3\n\tsub.s!\t@CPI0_7[0], r2, r2\n\tadd\tr4, r0, r2\n\tadd.eq\tr3, r0, r2\n\tsub.s!\t0, r2, r2\n\tjump.ne\t@.BB0_6\n\tptr.add\tstack[@ptr_calldata], r0, r2\n\tptr.add.s\t4, r2, r3\n\tld\tr3, r6\n\tsub.s!\t@CPI0_8[0], r6, r3\n\tjump.gt\t@.BB0_6\n\tsub\tr1, r6, r1\n\tadd\tr1, r0, stack-[5]\n\tsub.s\t4, r1, r1\n\tadd\t@CPI0_7[0], r0, r3\n\tsub.s!\t352, r1, r4\n\tadd\t0, r0, r4\n\tadd.lt\tr3, r0, r4\n\tand\t@CPI0_7[0], r1, r1\n\tsub.s!\t0, r1, r5\n\tadd.le\t0, r0, r3\n\tsub.s!\t@CPI0_7[0], r1, r1\n\tadd\tr4, r0, r1\n\tadd.eq\tr3, r0, r1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_6\n\tptr.add.s\t68, r2, r1\n\tld\tr1, r1\n\tadd\tr1, r0, stack-[1]\n\tsload\tr0, r1\n\tadd\t@CPI0_9[0], r0, r2\n\tst.2\t0, r2\n\tand\t@CPI0_2[0], r1, r1\n\tadd\tr1, r0, stack-[2]\n\tst.2\t4, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_10[0], r1, r1\n\tadd\t32770, r0, r2\n\tadd\tr6, r0, stack-[4]\n\tadd\tr7, r0, stack-[3]\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tstack-[3], r0, r3\n\tadd\tstack-[4], r0, r8\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_6\n\tld\tr1, r1\n\tsub.s!\t0, r1, r1\n\tjump.eq\t@.BB0_6\n\tadd\t@CPI0_11[0], r0, r1\n\tst.1\t128, r1\n\tcontext.this\tr1\n\tst.1\t132, r1\n\tcontext.gas_left\tr1\n\tadd\tstack-[2], r0, r4\n\tsub.s!\t4, r4, r2\n\tjump.eq\t@.BB0_27\n\tadd\t@CPI0_0[0], r0, r2\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tadd\tstack-[1], r0, r3\n\tsub.s!\t0, r3, r2\n\tjump.ne\t@.BB0_21\n\tor\t@CPI0_13[0], r1, r1\n\tadd\tr4, r0, r2\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tjump\t@.BB0_19\n.BB0_1:\n\tadd\t159, r1, r2\n\tand\t@CPI0_1[0], r2, r2\n\tst.1\t64, r2\n\tand\t31, r1, r2\n\tptr.add\tstack[@ptr_calldata], r0, r3\n\tshr.s!\t5, r1, r4\n\tjump.eq\t@.BB0_41\n\tadd\tr0, r0, r5\n.BB0_3:\n\tshl.s\t5, r5, r6\n\tptr.add\tr3, r6, r7\n\tld\tr7, r7\n\tadd\t128, r6, r6\n\tst.1\tr6, r7\n\tadd\t1, r5, r5\n\tsub!\tr5, r4, r6\n\tjump.lt\t@.BB0_3\n.BB0_41:\n\tsub.s!\t0, r2, r5\n\tjump.eq\t@.BB0_5\n\tshl.s\t5, r4, r4\n\tptr.add\tr3, r4, r3\n\tshl.s\t3, r2, r2\n\tadd\t128, r4, r4\n\tld.1\tr4, r5\n\tshl\tr5, r2, r5\n\tshr\tr5, r2, r5\n\tld\tr3, r3\n\tsub\t256, r2, r2\n\tshr\tr3, r2, r3\n\tshl\tr3, r2, r2\n\tor\tr2, r5, r2\n\tst.1\tr4, r2\n.BB0_5:\n\tsub.s!\t31, r1, r1\n\tjump.le\t@.BB0_6\n\tld.1\t128, r1\n\tsub.s!\t@CPI0_2[0], r1, r2\n\tjump.le\t@.BB0_8\n.BB0_6:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_8:\n\tsload\tr0, r2\n\tand\t@CPI0_3[0], r2, r2\n\tor\tr2, r1, r1\n\tsstore\tr0, r1\n\tadd\t32, r0, r1\n\tst.2\t256, r1\n\tst.2\t288, r0\n\tadd\t@CPI0_4[0], r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_21:\n\tor\t@CPI0_12[0], r1, r1\n\tadd\t32777, r0, r2\n\tadd\tr0, r0, r5\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n.BB0_19:\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, stack[@returndatasize]\n\tand\t@CPI0_0[0], r3, r4\n\tand!\t1, r2, r2\n\tadd\tstack-[4], r0, r8\n\tadd\tstack-[3], r0, r3\n\tjump.eq\t@.BB0_22\n.BB0_27:\n\tst.1\t64, r3\n\tadd\t324, r8, r2\n\tptr.add\tstack[@ptr_calldata], r0, r1\n\tptr.add\tr1, r2, r2\n\tld\tr2, r2\n\tadd\tstack-[5], r0, r3\n\tsub.s\t35, r3, r3\n\tadd\t@CPI0_7[0], r0, r4\n\tsub!\tr2, r3, r5\n\tadd\t0, r0, r5\n\tadd.ge\tr4, r0, r5\n\tand\t@CPI0_7[0], r3, r3\n\tand\t@CPI0_7[0], r2, r6\n\tsub!\tr6, r3, r7\n\tadd.ge\t0, r0, r4\n\txor\tr6, r3, r3\n\tsub.s!\t@CPI0_7[0], r3, r3\n\tadd\tr5, r0, r3\n\tadd.eq\tr4, r0, r3\n\tsub.s!\t0, r3, r3\n\tjump.ne\t@.BB0_6\n\tadd\tr2, r8, r2\n\tadd\t4, r2, r3\n\tptr.add\tr1, r3, r3\n\tld\tr3, r3\n\tsub.s!\t@CPI0_8[0], r3, r4\n\tjump.gt\t@.BB0_6\n\tsub.s!\t32, r3, r4\n\tjump.lt\t@.BB0_6\n\tsub\tstack[@calldatasize], r3, r3\n\tadd\t36, r2, r2\n\tadd\t@CPI0_7[0], r0, r4\n\tsub!\tr2, r3, r5\n\tadd\t0, r0, r5\n\tadd.gt\tr4, r0, r5\n\tand\t@CPI0_7[0], r3, r3\n\tand\t@CPI0_7[0], r2, r6\n\tsub!\tr6, r3, r7\n\tadd.ge\t0, r0, r4\n\txor\tr6, r3, r3\n\tsub.s!\t@CPI0_7[0], r3, r3\n\tadd\tr5, r0, r3\n\tadd.eq\tr4, r0, r3\n\tsub.s!\t0, r3, r3\n\tjump.ne\t@.BB0_6\n\tadd\t132, r8, r3\n\tptr.add\tr1, r3, r3\n\tadd\t164, r8, r4\n\tptr.add\tr1, r4, r4\n\tld\tr4, r4\n\tld\tr3, r5\n\tadd\tr5, r4, r3\n\tsub!\tr3, r5, r4\n\tadd\t0, r0, r4\n\tadd.lt\t1, r0, r4\n\tand!\t1, r4, r4\n\tjump.ne\t@.BB0_32\n\tadd\t196, r8, r4\n\tptr.add\tr1, r4, r4\n\tld\tr4, r4\n\tadd\tr4, r3, r3\n\tsub!\tr3, r4, r4\n\tadd\t0, r0, r4\n\tadd.lt\t1, r0, r4\n\tand!\t1, r4, r4\n\tjump.eq\t@.BB0_34\n.BB0_32:\n\tadd\t@CPI0_18[0], r0, r1\n\tst.1\t0, r1\n\tadd\t17, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI0_19[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_22:\n\tld.1\t64, r2\n\tand\t31, r4, r3\n\tshr.s!\t5, r4, r4\n\tjump.eq\t@.BB0_40\n\tadd\tr0, r0, r5\n.BB0_24:\n\tshl.s\t5, r5, r6\n\tadd\tr2, r6, r7\n\tptr.add\tr1, r6, r6\n\tld\tr6, r6\n\tst.1\tr7, r6\n\tadd\t1, r5, r5\n\tsub!\tr5, r4, r6\n\tjump.lt\t@.BB0_24\n.BB0_40:\n\tsub.s!\t0, r3, r5\n\tjump.eq\t@.BB0_26\n\tshl.s\t5, r4, r4\n\tptr.add\tr1, r4, r1\n\tadd\tr2, r4, r4\n\tshl.s\t3, r3, r3\n\tld.1\tr4, r5\n\tshl\tr5, r3, r5\n\tshr\tr5, r3, r5\n\tld\tr1, r1\n\tsub\t256, r3, r3\n\tshr\tr1, r3, r1\n\tshl\tr1, r3, r1\n\tor\tr1, r5, r1\n\tst.1\tr4, r1\n.BB0_26:\n\tadd\t@CPI0_0[0], r0, r1\n\tadd\tstack[@returndatasize], r0, r3\n\tsub.s!\t@CPI0_0[0], r3, r4\n\tadd.ge\tr1, r0, r3\n\tsub.s!\t@CPI0_0[0], r2, r4\n\tadd.lt\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t96, r3, r2\n\tor\tr2, r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_34:\n\tsub.s!\t0, r3, r4\n\tjump.ne\t@.BB0_36\n\tadd\t@CPI0_18[0], r0, r1\n\tst.1\t0, r1\n\tadd\t18, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI0_19[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_36:\n\tadd\tstack-[1], r0, r4\n\tdiv\tr4, r3, r3, r4\n\tadd\tstack-[4], r0, r4\n\tadd\t260, r4, r4\n\tptr.add\tr1, r4, r4\n\tld\tr4, r4\n\tsub!\tr3, r4, r5\n\tjump.lt\t@.BB0_32\n\tsub\tr3, r4, r3\n\tptr.add\tr1, r2, r1\n\tld\tr1, r1\n\tsub!\tr3, r1, r1\n\tjump.ne\t@.BB0_38\n\tst.1\t128, r0\n\tadd\t@CPI0_17[0], r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_38:\n\tadd\t@CPI0_14[0], r0, r1\n\tst.1\t128, r1\n\tadd\t32, r0, r1\n\tst.1\t132, r1\n\tadd\t29, r0, r1\n\tst.1\t164, r1\n\tadd\t@CPI0_15[0], r0, r1\n\tst.1\t196, r1\n\tadd\t@CPI0_16[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end0:\n\n__farcall:\n.func_begin1:\n.tmp0:\n\tfar_call\tr1, r2, @.BB1_2\n.tmp1:\n\tadd\t1, r0, r2\n\tret\n.BB1_2:\n.tmp2:\n\tadd\tr0, r0, r2\n\tret\n.func_end1:\n\n__staticcall:\n.func_begin2:\n.tmp3:\n\tfar_call.static\tr1, r2, @.BB2_2\n.tmp4:\n\tadd\t1, r0, r2\n\tret\n.BB2_2:\n.tmp5:\n\tadd\tr0, r0, r2\n\tret\n.func_end2:\n\n\t.data\n\t.p2align\t5\ncalldatasize:\n\t.cell 0\n\n\t.p2align\t5\nreturndatasize:\n\t.cell 0\n\n\t.p2align\t5\nptr_calldata:\n.cell\t0\n\n\t.note.GNU-stack\n\t.rodata\nCPI0_0:\n\t.cell 4294967295\nCPI0_1:\n\t.cell 8589934560\nCPI0_2:\n\t.cell 1461501637330902918203684832716283019655932542975\nCPI0_3:\n\t.cell -1461501637330902918203684832716283019655932542976\nCPI0_4:\n\t.cell 53919893334301279589334030174039261352344891250716429051063678533632\nCPI0_5:\n\t.cell -26959946667150639794667015087019630673637144422540572481103610249216\nCPI0_6:\n\t.cell 26472868778620455986223989248205626110694238731747537001826088588543453560832\nCPI0_7:\n\t.cell -57896044618658097711785492504343953926634992332820282019728792003956564819968\nCPI0_8:\n\t.cell 18446744073709551615\nCPI0_9:\n\t.cell 10867283408178898638301172343726954674910073630256871736220740970449699113859\nCPI0_10:\n\t.cell 904625751086426111047927909714404454142933105326819602152923490636624035840\nCPI0_11:\n\t.cell -32847488478746303694156499572760015122013430097819503860155564068577484996608\nCPI0_12:\n\t.cell 904625697166532776746648320380374280103671758052530759432961769864226144256\nCPI0_13:\n\t.cell 2852213852874699394802404818944\nCPI0_14:\n\t.cell 3963877391197344453575983046348115674221700746820753546331534351508065746944\nCPI0_15:\n\t.cell 37268922278447368248428330895459554790451322472820263669432017194492039790592\nCPI0_16:\n\t.cell 7922816253787617000789217640448\nCPI0_17:\n\t.cell 2535301202817642044428229017600\nCPI0_18:\n\t.cell 35408467139433450592217433187231851964531694900788300625387963629091585785856\nCPI0_19:\n\t.cell 2852213850513516153367582212096\n","bytecode":{"object":"0003000000000002000500000000000200020000000103550000006001100270000000500010019d0000005001100197000100000000001f0000000102200190000000650000c13d0000008007000039000000400070043f0000000001000031000000040110008c000000890000413d0000000201000367000000000101043b0000005501100197000000560110009c000000890000c13d0000000001000416000000000110004c000000890000c13d0000000001000031000000040210008a0000005703000041000000600420008c000000000400001900000000040340190000005702200197000000000520004c000000000300a019000000570220009c00000000020400190000000002036019000000000220004c000000890000c13d00000002020003670000000403200370000000000603043b000000580360009c000000890000213d0000000001610049000500000001001d000000040110008a0000005703000041000001600410008c000000000400001900000000040340190000005701100197000000000510004c000000000300a019000000570110009c00000000010400190000000001036019000000000110004c000000890000c13d0000004401200370000000000101043b000100000001001d000000000100041a000000590200004100000000002004390000005201100197000200000001001d000000040010044300000050010000410000000002000414000000500320009c0000000001024019000000c0011002100000005a011001c70000800202000039000400000006001d000300000007001d013a01350000040f000000030300002900000004080000290000000102200190000000890000613d000000000101043b000000000110004c000000890000613d0000005b01000041000000800010043f0000000001000410000000840010043f00000000010004140000000204000029000000040240008c000000a00000613d0000005002000041000000500310009c0000000001028019000000c0011002100000000103000029000000000230004c000000940000c13d0000005d011001c70000000002040019013a01300000040f000000980000013d0000009f021000390000005102200197000000400020043f0000001f0210018f00000002030003670000000504100272000000750000613d00000000050000190000000506500210000000000763034f000000000707043b000000800660003900000000007604350000000105500039000000000645004b0000006d0000413d000000000520004c000000840000613d0000000504400210000000000343034f00000003022002100000008004400039000000000504043300000000052501cf000000000525022f000000000303043b0000010002200089000000000323022f00000000022301cf000000000252019f00000000002404350000001f0110008c000000890000a13d000000800100043d000000520210009c0000008b0000a13d00000000010000190000013c00010430000000000200041a0000005302200197000000000112019f000000000010041b00000020010000390000010000100443000001200000044300000054010000410000013b0001042e0000005c011001c700008009020000390000000005000019013a01300000040f00000000030100190000006003300270000100500030019d0000005004300197000000010220019000000004080000290000000303000029000000e80000613d000000400030043f00000144028000390000000201000367000000000221034f000000000202043b0000000503000029000000230330008a0000005704000041000000000532004b0000000005000019000000000504801900000057033001970000005706200197000000000736004b0000000004008019000000000336013f000000570330009c00000000030500190000000003046019000000000330004c000000890000c13d00000000028200190000000403200039000000000331034f000000000303043b000000580430009c000000890000213d000000200430008c000000890000413d000000000330007900000024022000390000005704000041000000000532004b0000000005000019000000000504201900000057033001970000005706200197000000000736004b0000000004008019000000000336013f000000570330009c00000000030500190000000003046019000000000330004c000000890000c13d0000008403800039000000000331034f000000a404800039000000000441034f000000000404043b000000000503043b0000000003450019000000000453004b000000000400001900000001040040390000000104400190000000e20000c13d000000c404800039000000000441034f000000000404043b0000000003340019000000000443004b0000000004000019000000010400403900000001044001900000010e0000613d000000620100004100000000001004350000001101000039000000040010043f00000063010000410000013c00010430000000400200043d0000001f0340018f0000000504400272000000f50000613d000000000500001900000005065002100000000007620019000000000661034f000000000606043b00000000006704350000000105500039000000000645004b000000ed0000413d000000000530004c000001040000613d0000000504400210000000000141034f00000000044200190000000303300210000000000504043300000000053501cf000000000535022f000000000101043b0000010003300089000000000131022f00000000013101cf000000000151019f000000000014043500000050010000410000000103000031000000500430009c0000000003018019000000500420009c000000000102401900000040011002100000006002300210000000000112019f0000013c00010430000000000430004c000001160000c13d000000620100004100000000001004350000001201000039000000040010043f00000063010000410000013c00010430000000010400002900000000433400d900000004040000290000010404400039000000000441034f000000000404043b000000000543004b000000e20000413d0000000003430049000000000121034f000000000101043b000000000113004b000001260000c13d000000800000043f00000061010000410000013b0001042e0000005e01000041000000800010043f0000002001000039000000840010043f0000001d01000039000000a40010043f0000005f01000041000000c40010043f00000060010000410000013c0001043000000133002104210000000102000039000000000001042d0000000002000019000000000001042d00000138002104230000000102000039000000000001042d0000000002000019000000000001042d0000013a000004320000013b0001042e0000013c0001043000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000ffffffff00000000000000000000000000000000000000000000000000000001ffffffe0000000000000000000000000ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00000000000000000000000000000000000000000000000200000000000000000000000000000040000001000000000000000000ffffffff000000000000000000000000000000000000000000000000000000003a871cdd000000000000000000000000000000000000000000000000000000008000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000ffffffffffffffff1806aa1896bbf26568e884a7374b41e002500962caba6a15023a8d90e8508b830200000200000000000000000000000000000024000000000000000000000000b760faf9000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000024000000800000000000000000000000000000000000000000000000000000002400000080000000000000000008c379a0000000000000000000000000000000000000000000000000000000005265766572742061667465722066697273742076616c69646174696f6e000000000000000000000000000000000000000000006400000080000000000000000000000000000000000000000000000000000000200000008000000000000000004e487b71000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000024000000000000000000000000bfa62808de70649e05df147337b0b4c508e07058235b42ae90c6ff26c2b06c29"},"methodIdentifiers":{"validateUserOp((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes),bytes32,uint256)":"3a871cdd"}},"irOptimized":"/// @use-src 6:\"contracts/smart-contract-wallet/aa-4337/interfaces/IAccount.sol\", 13:\"contracts/smart-contract-wallet/aa-4337/test/MaliciousAccount.sol\"\nobject \"MaliciousAccount_4022\" {\n    code {\n        {\n            /// @src 13:171:1115  \"contract MaliciousAccount is IAccount {...\"\n            let _1 := memoryguard(0x80)\n            let programSize := datasize(\"MaliciousAccount_4022\")\n            let argSize := sub(codesize(), programSize)\n            let newFreePtr := add(_1, and(add(argSize, 31), not(31)))\n            if or(gt(newFreePtr, sub(shl(64, 1), 1)), lt(newFreePtr, _1))\n            {\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 13:171:1115  \"contract MaliciousAccount is IAccount {...\" */ shl(224, 0x4e487b71))\n                mstore(4, 0x41)\n                revert(/** @src -1:-1:-1 */ 0, /** @src 13:171:1115  \"contract MaliciousAccount is IAccount {...\" */ 0x24)\n            }\n            mstore(64, newFreePtr)\n            codecopy(_1, programSize, argSize)\n            if slt(sub(add(_1, argSize), _1), 32)\n            {\n                revert(/** @src -1:-1:-1 */ 0, 0)\n            }\n            /// @src 13:171:1115  \"contract MaliciousAccount is IAccount {...\"\n            let value := mload(_1)\n            let _2 := and(value, sub(shl(160, 1), 1))\n            if iszero(eq(value, _2))\n            {\n                revert(/** @src -1:-1:-1 */ 0, 0)\n            }\n            /// @src 13:171:1115  \"contract MaliciousAccount is IAccount {...\"\n            sstore(/** @src -1:-1:-1 */ 0, /** @src 13:171:1115  \"contract MaliciousAccount is IAccount {...\" */ or(and(sload(/** @src -1:-1:-1 */ 0), /** @src 13:171:1115  \"contract MaliciousAccount is IAccount {...\" */ not(sub(shl(160, 1), 1))), _2))\n            let _3 := mload(64)\n            let _4 := datasize(\"MaliciousAccount_4022_deployed\")\n            codecopy(_3, dataoffset(\"MaliciousAccount_4022_deployed\"), _4)\n            return(_3, _4)\n        }\n    }\n    /// @use-src 13:\"contracts/smart-contract-wallet/aa-4337/test/MaliciousAccount.sol\"\n    object \"MaliciousAccount_4022_deployed\" {\n        code {\n            {\n                /// @src 13:171:1115  \"contract MaliciousAccount is IAccount {...\"\n                let _1 := memoryguard(0x80)\n                mstore(64, _1)\n                let _2 := 4\n                if iszero(lt(calldatasize(), _2))\n                {\n                    let _3 := 0\n                    if eq(0x3a871cdd, shr(224, calldataload(_3)))\n                    {\n                        if callvalue() { revert(_3, _3) }\n                        let _4 := not(3)\n                        if slt(add(calldatasize(), _4), 96) { revert(_3, _3) }\n                        let offset := calldataload(_2)\n                        let _5 := 0xffffffffffffffff\n                        if gt(offset, _5) { revert(_3, _3) }\n                        let _6 := sub(calldatasize(), offset)\n                        if slt(add(_6, _4), 352) { revert(_3, _3) }\n                        let value := calldataload(68)\n                        let value_1 := and(sload(_3), sub(shl(160, 1), 1))\n                        /// @src 13:487:542  \"ep.depositTo{value: missingAccountFunds}(address(this))\"\n                        if iszero(extcodesize(value_1))\n                        {\n                            /// @src 13:171:1115  \"contract MaliciousAccount is IAccount {...\"\n                            revert(_3, _3)\n                        }\n                        /// @src 13:487:542  \"ep.depositTo{value: missingAccountFunds}(address(this))\"\n                        mstore(_1, /** @src 13:171:1115  \"contract MaliciousAccount is IAccount {...\" */ shl(224, 0xb760faf9))\n                        mstore(/** @src 13:487:542  \"ep.depositTo{value: missingAccountFunds}(address(this))\" */ add(_1, /** @src 13:171:1115  \"contract MaliciousAccount is IAccount {...\" */ _2), /** @src 13:536:540  \"this\" */ address())\n                        /// @src 13:171:1115  \"contract MaliciousAccount is IAccount {...\"\n                        let _7 := 36\n                        /// @src 13:487:542  \"ep.depositTo{value: missingAccountFunds}(address(this))\"\n                        let _8 := call(gas(), value_1, value, _1, /** @src 13:171:1115  \"contract MaliciousAccount is IAccount {...\" */ _7, /** @src 13:487:542  \"ep.depositTo{value: missingAccountFunds}(address(this))\" */ _1, /** @src 13:171:1115  \"contract MaliciousAccount is IAccount {...\" */ _3)\n                        /// @src 13:487:542  \"ep.depositTo{value: missingAccountFunds}(address(this))\"\n                        if iszero(_8)\n                        {\n                            /// @src 13:171:1115  \"contract MaliciousAccount is IAccount {...\"\n                            let pos := mload(64)\n                            returndatacopy(pos, _3, returndatasize())\n                            revert(pos, returndatasize())\n                        }\n                        /// @src 13:487:542  \"ep.depositTo{value: missingAccountFunds}(address(this))\"\n                        if _8\n                        {\n                            /// @src 13:171:1115  \"contract MaliciousAccount is IAccount {...\"\n                            if gt(_1, _5)\n                            {\n                                mstore(_3, shl(224, 0x4e487b71))\n                                mstore(_2, 0x41)\n                                revert(_3, _7)\n                            }\n                            mstore(64, _1)\n                            _3 := _3\n                        }\n                        let rel_offset_of_tail := calldataload(/** @src 13:721:737  \"userOp.signature\" */ add(/** @src 13:171:1115  \"contract MaliciousAccount is IAccount {...\" */ offset, /** @src 13:721:737  \"userOp.signature\" */ 324))\n                        /// @src 13:171:1115  \"contract MaliciousAccount is IAccount {...\"\n                        if iszero(slt(rel_offset_of_tail, add(_6, not(34)))) { revert(_3, _3) }\n                        let _9 := add(offset, rel_offset_of_tail)\n                        let length := calldataload(add(_9, _2))\n                        if gt(length, _5) { revert(_3, _3) }\n                        let addr := add(_9, _7)\n                        if sgt(addr, sub(calldatasize(), length)) { revert(_3, _3) }\n                        if slt(sub(/** @src 13:710:749  \"abi.decode(userOp.signature, (uint256))\" */ add(/** @src 13:171:1115  \"contract MaliciousAccount is IAccount {...\" */ _9, /** @src 13:710:749  \"abi.decode(userOp.signature, (uint256))\" */ length), /** @src 13:171:1115  \"contract MaliciousAccount is IAccount {...\" */ _9), 32) { revert(_3, _3) }\n                        /// @src 13:781:842  \"userOp.callGasLimit +...\"\n                        let expr := checked_add_uint256(/** @src 13:171:1115  \"contract MaliciousAccount is IAccount {...\" */ calldataload(/** @src 13:781:800  \"userOp.callGasLimit\" */ add(/** @src 13:171:1115  \"contract MaliciousAccount is IAccount {...\" */ offset, /** @src 13:781:800  \"userOp.callGasLimit\" */ 132)), /** @src 13:171:1115  \"contract MaliciousAccount is IAccount {...\" */ calldataload(/** @src 13:815:842  \"userOp.verificationGasLimit\" */ add(/** @src 13:171:1115  \"contract MaliciousAccount is IAccount {...\" */ offset, /** @src 13:815:842  \"userOp.verificationGasLimit\" */ 164)))\n                        /// @src 13:781:882  \"userOp.callGasLimit +...\"\n                        let _10 := checked_add_uint256(expr, /** @src 13:171:1115  \"contract MaliciousAccount is IAccount {...\" */ calldataload(/** @src 13:857:882  \"userOp.preVerificationGas\" */ add(/** @src 13:171:1115  \"contract MaliciousAccount is IAccount {...\" */ offset, /** @src 13:857:882  \"userOp.preVerificationGas\" */ 196)))\n                        /// @src 13:171:1115  \"contract MaliciousAccount is IAccount {...\"\n                        if iszero(_10)\n                        {\n                            mstore(_3, shl(224, 0x4e487b71))\n                            mstore(_2, 0x12)\n                            revert(_3, _7)\n                        }\n                        let r := div(value, _10)\n                        let diff := sub(r, calldataload(/** @src 13:983:1010  \"userOp.maxPriorityFeePerGas\" */ add(/** @src 13:171:1115  \"contract MaliciousAccount is IAccount {...\" */ offset, /** @src 13:983:1010  \"userOp.maxPriorityFeePerGas\" */ 260)))\n                        /// @src 13:171:1115  \"contract MaliciousAccount is IAccount {...\"\n                        if gt(diff, r)\n                        {\n                            mstore(_3, shl(224, 0x4e487b71))\n                            mstore(_2, 0x11)\n                            revert(_3, _7)\n                        }\n                        if iszero(/** @src 13:1028:1054  \"basefee == externalBaseFee\" */ eq(diff, /** @src 13:171:1115  \"contract MaliciousAccount is IAccount {...\" */ calldataload(addr)))\n                        {\n                            let memPtr := mload(64)\n                            mstore(memPtr, shl(229, 4594637))\n                            mstore(add(memPtr, _2), 32)\n                            mstore(add(memPtr, _7), 29)\n                            mstore(add(memPtr, 68), \"Revert after first validation\")\n                            revert(memPtr, 100)\n                        }\n                        let memPos := mload(64)\n                        mstore(memPos, _3)\n                        return(memPos, 32)\n                    }\n                }\n                revert(0, 0)\n            }\n            function checked_add_uint256(x, y) -> sum\n            {\n                sum := add(x, y)\n                if gt(x, sum)\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0x11)\n                    revert(0, 0x24)\n                }\n            }\n        }\n        data \".metadata\" hex\"a264697066735822122095e9c5d318ecfe9c15ceab15391ccd475e354bde18ee5c08b6eb0e074eb0089664736f6c63430008110033\"\n    }\n}\n","hash":"01000065a3b968b9d76c6200c2a73f55d3c2ce0bdd3343abc0c7271e64ebf54a","factoryDependencies":{}}},"contracts/smart-contract-wallet/aa-4337/utils/Exec.sol":{"Exec":{"abi":[],"metadata":{"optimizer_settings":"M3B3","solc_metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Utility functions helpful when making different kinds of contract calls in Solidity.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/smart-contract-wallet/aa-4337/utils/Exec.sol\":\"Exec\"},\"evmVersion\":\"london\",\"libraries\":{\":__CACHE_BREAKER__\":\"0x00000000d41867734bbee4c6863d9255b2b06ac1\"},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"contracts/smart-contract-wallet/aa-4337/utils/Exec.sol\":{\"keccak256\":\"0x699f458b342e39a64c8b364cfa9fdeec630f2c2fe71dd0ec27ea3e8a77dd484e\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://cd61e0bc8694f6a857dae1d9cb84e4f06f925fd42792f29cf48ebe240b64bc52\",\"dweb:/ipfs/QmWKdcY6YdqGaxieyFzBg54MqymrHDLh6JcG3XxrQaWqsL\"]}},\"version\":1}","zk_version":"1.3.10"},"devdoc":{"kind":"dev","methods":{},"version":1},"userdoc":{"kind":"user","methods":{},"notice":"Utility functions helpful when making different kinds of contract calls in Solidity.","version":1},"storageLayout":{"storage":[],"types":null},"evm":{"legacyAssembly":null,"assembly":"\t.text\n\t.file\t\"Exec.sol:Exec\"\n\t.globl\t__entry\n__entry:\n.func_begin0:\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB0_2\n\tadd\t128, r0, r1\n\tst.1\t64, r1\n\tcontext.get_context_u128\tr1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_2\n\tadd\t32, r0, r1\n\tst.2\t256, r1\n\tst.2\t288, r0\n\tadd\t@CPI0_0[0], r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_2:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end0:\n\n\t.note.GNU-stack\n\t.rodata\nCPI0_0:\n\t.cell 53919893334301279589334030174039261352344891250716429051063678533632\n","bytecode":{"object":"00000001012001900000000c0000613d0000008001000039000000400010043f0000000001000416000000000110004c0000000c0000c13d00000020010000390000010000100443000001200000044300000005010000410000000f0001042e000000000100001900000010000104300000000e000004320000000f0001042e00000010000104300000000000000000000000000000000000000000000000000000000200000000000000000000000000000040000001000000000000000000d916d4f76ea307dd551f039422f74ca821430dc5892fbe599dee941fe17b9301"},"methodIdentifiers":{}},"irOptimized":"/// @use-src 14:\"contracts/smart-contract-wallet/aa-4337/utils/Exec.sol\"\nobject \"Exec_4113\" {\n    code {\n        {\n            /// @src 14:202:2001  \"library Exec {...\"\n            let _1 := memoryguard(0x80)\n            mstore(64, _1)\n            if callvalue() { revert(0, 0) }\n            let _2 := datasize(\"Exec_4113_deployed\")\n            codecopy(_1, dataoffset(\"Exec_4113_deployed\"), _2)\n            setimmutable(_1, \"library_deploy_address\", address())\n            return(_1, _2)\n        }\n    }\n    /// @use-src 14:\"contracts/smart-contract-wallet/aa-4337/utils/Exec.sol\"\n    object \"Exec_4113_deployed\" {\n        code {\n            {\n                /// @src 14:202:2001  \"library Exec {...\"\n                revert(0, 0)\n            }\n        }\n        data \".metadata\" hex\"a2646970667358221220862fc923d5bf0873d4a18bc6f35bc86614ce6d4b90899d9be692d310dda43c0764736f6c63430008110033\"\n    }\n}\n","hash":"01000007240841af6c2ff7f55faa90bb67c3a696af0e6b97f455bdad58073cd4","factoryDependencies":{}}}}}}